// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package BrokerInstance

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type BrokerInstance struct {
	ConsoleUrl *string `pulumi:"consoleUrl"`
	Endpoints []string `pulumi:"endpoints"`
	IpAddress *string `pulumi:"ipAddress"`
}

type BrokerInstanceInput interface {
	pulumi.Input

	ToBrokerInstanceOutput() BrokerInstanceOutput
	ToBrokerInstanceOutputWithContext(context.Context) BrokerInstanceOutput
}

type BrokerInstanceArgs struct {
	ConsoleUrl pulumi.StringPtrInput `pulumi:"consoleUrl"`
	Endpoints pulumi.StringArrayInput `pulumi:"endpoints"`
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
}

func (BrokerInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerInstance)(nil)).Elem()
}

func (i BrokerInstanceArgs) ToBrokerInstanceOutput() BrokerInstanceOutput {
	return i.ToBrokerInstanceOutputWithContext(context.Background())
}

func (i BrokerInstanceArgs) ToBrokerInstanceOutputWithContext(ctx context.Context) BrokerInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerInstanceOutput)
}

type BrokerInstanceArrayInput interface {
	pulumi.Input

	ToBrokerInstanceArrayOutput() BrokerInstanceArrayOutput
	ToBrokerInstanceArrayOutputWithContext(context.Context) BrokerInstanceArrayOutput
}

type BrokerInstanceArray []BrokerInstanceInput

func (BrokerInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BrokerInstance)(nil)).Elem()
}

func (i BrokerInstanceArray) ToBrokerInstanceArrayOutput() BrokerInstanceArrayOutput {
	return i.ToBrokerInstanceArrayOutputWithContext(context.Background())
}

func (i BrokerInstanceArray) ToBrokerInstanceArrayOutputWithContext(ctx context.Context) BrokerInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerInstanceArrayOutput)
}

type BrokerInstanceOutput struct { *pulumi.OutputState }

func (BrokerInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerInstance)(nil)).Elem()
}

func (o BrokerInstanceOutput) ToBrokerInstanceOutput() BrokerInstanceOutput {
	return o
}

func (o BrokerInstanceOutput) ToBrokerInstanceOutputWithContext(ctx context.Context) BrokerInstanceOutput {
	return o
}

func (o BrokerInstanceOutput) ConsoleUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BrokerInstance) *string { return v.ConsoleUrl }).(pulumi.StringPtrOutput)
}

func (o BrokerInstanceOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func (v BrokerInstance) []string { return v.Endpoints }).(pulumi.StringArrayOutput)
}

func (o BrokerInstanceOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BrokerInstance) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

type BrokerInstanceArrayOutput struct { *pulumi.OutputState}

func (BrokerInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BrokerInstance)(nil)).Elem()
}

func (o BrokerInstanceArrayOutput) ToBrokerInstanceArrayOutput() BrokerInstanceArrayOutput {
	return o
}

func (o BrokerInstanceArrayOutput) ToBrokerInstanceArrayOutputWithContext(ctx context.Context) BrokerInstanceArrayOutput {
	return o
}

func (o BrokerInstanceArrayOutput) Index(i pulumi.IntInput) BrokerInstanceOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) BrokerInstance {
		return vs[0].([]BrokerInstance)[vs[1].(int)]
	}).(BrokerInstanceOutput)
}

func init() {
	pulumi.RegisterOutputType(BrokerInstanceOutput{})
	pulumi.RegisterOutputType(BrokerInstanceArrayOutput{})
}
