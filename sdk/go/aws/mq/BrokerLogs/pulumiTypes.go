// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package BrokerLogs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type BrokerLogs struct {
	// Enables audit logging. User management action made using JMX or the ActiveMQ Web Console is logged. Defaults to `false`.
	Audit *bool `pulumi:"audit"`
	// Enables general logging via CloudWatch. Defaults to `false`.
	General *bool `pulumi:"general"`
}

type BrokerLogsInput interface {
	pulumi.Input

	ToBrokerLogsOutput() BrokerLogsOutput
	ToBrokerLogsOutputWithContext(context.Context) BrokerLogsOutput
}

type BrokerLogsArgs struct {
	// Enables audit logging. User management action made using JMX or the ActiveMQ Web Console is logged. Defaults to `false`.
	Audit pulumi.BoolPtrInput `pulumi:"audit"`
	// Enables general logging via CloudWatch. Defaults to `false`.
	General pulumi.BoolPtrInput `pulumi:"general"`
}

func (BrokerLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerLogs)(nil)).Elem()
}

func (i BrokerLogsArgs) ToBrokerLogsOutput() BrokerLogsOutput {
	return i.ToBrokerLogsOutputWithContext(context.Background())
}

func (i BrokerLogsArgs) ToBrokerLogsOutputWithContext(ctx context.Context) BrokerLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerLogsOutput)
}

func (i BrokerLogsArgs) ToBrokerLogsPtrOutput() BrokerLogsPtrOutput {
	return i.ToBrokerLogsPtrOutputWithContext(context.Background())
}

func (i BrokerLogsArgs) ToBrokerLogsPtrOutputWithContext(ctx context.Context) BrokerLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerLogsOutput).ToBrokerLogsPtrOutputWithContext(ctx)
}

type BrokerLogsPtrInput interface {
	pulumi.Input

	ToBrokerLogsPtrOutput() BrokerLogsPtrOutput
	ToBrokerLogsPtrOutputWithContext(context.Context) BrokerLogsPtrOutput
}

type brokerLogsPtrType BrokerLogsArgs

func BrokerLogsPtr(v *BrokerLogsArgs) BrokerLogsPtrInput {	return (*brokerLogsPtrType)(v)
}

func (*brokerLogsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerLogs)(nil)).Elem()
}

func (i *brokerLogsPtrType) ToBrokerLogsPtrOutput() BrokerLogsPtrOutput {
	return i.ToBrokerLogsPtrOutputWithContext(context.Background())
}

func (i *brokerLogsPtrType) ToBrokerLogsPtrOutputWithContext(ctx context.Context) BrokerLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrokerLogsPtrOutput)
}

type BrokerLogsOutput struct { *pulumi.OutputState }

func (BrokerLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrokerLogs)(nil)).Elem()
}

func (o BrokerLogsOutput) ToBrokerLogsOutput() BrokerLogsOutput {
	return o
}

func (o BrokerLogsOutput) ToBrokerLogsOutputWithContext(ctx context.Context) BrokerLogsOutput {
	return o
}

func (o BrokerLogsOutput) ToBrokerLogsPtrOutput() BrokerLogsPtrOutput {
	return o.ToBrokerLogsPtrOutputWithContext(context.Background())
}

func (o BrokerLogsOutput) ToBrokerLogsPtrOutputWithContext(ctx context.Context) BrokerLogsPtrOutput {
	return o.ApplyT(func(v BrokerLogs) *BrokerLogs {
		return &v
	}).(BrokerLogsPtrOutput)
}
// Enables audit logging. User management action made using JMX or the ActiveMQ Web Console is logged. Defaults to `false`.
func (o BrokerLogsOutput) Audit() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v BrokerLogs) *bool { return v.Audit }).(pulumi.BoolPtrOutput)
}

// Enables general logging via CloudWatch. Defaults to `false`.
func (o BrokerLogsOutput) General() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v BrokerLogs) *bool { return v.General }).(pulumi.BoolPtrOutput)
}

type BrokerLogsPtrOutput struct { *pulumi.OutputState}

func (BrokerLogsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrokerLogs)(nil)).Elem()
}

func (o BrokerLogsPtrOutput) ToBrokerLogsPtrOutput() BrokerLogsPtrOutput {
	return o
}

func (o BrokerLogsPtrOutput) ToBrokerLogsPtrOutputWithContext(ctx context.Context) BrokerLogsPtrOutput {
	return o
}

func (o BrokerLogsPtrOutput) Elem() BrokerLogsOutput {
	return o.ApplyT(func (v *BrokerLogs) BrokerLogs { return *v }).(BrokerLogsOutput)
}

// Enables audit logging. User management action made using JMX or the ActiveMQ Web Console is logged. Defaults to `false`.
func (o BrokerLogsPtrOutput) Audit() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v BrokerLogs) *bool { return v.Audit }).(pulumi.BoolPtrOutput)
}

// Enables general logging via CloudWatch. Defaults to `false`.
func (o BrokerLogsPtrOutput) General() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v BrokerLogs) *bool { return v.General }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(BrokerLogsOutput{})
	pulumi.RegisterOutputType(BrokerLogsPtrOutput{})
}
