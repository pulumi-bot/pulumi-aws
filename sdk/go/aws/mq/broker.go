// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package mq

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Broker struct {
	pulumi.CustomResourceState

	ApplyImmediately           pulumi.BoolPtrOutput                   `pulumi:"applyImmediately"`
	Arn                        pulumi.StringOutput                    `pulumi:"arn"`
	AutoMinorVersionUpgrade    pulumi.BoolPtrOutput                   `pulumi:"autoMinorVersionUpgrade"`
	BrokerName                 pulumi.StringOutput                    `pulumi:"brokerName"`
	Configuration              BrokerConfigurationOutput              `pulumi:"configuration"`
	DeploymentMode             pulumi.StringPtrOutput                 `pulumi:"deploymentMode"`
	EncryptionOptions          BrokerEncryptionOptionsPtrOutput       `pulumi:"encryptionOptions"`
	EngineType                 pulumi.StringOutput                    `pulumi:"engineType"`
	EngineVersion              pulumi.StringOutput                    `pulumi:"engineVersion"`
	HostInstanceType           pulumi.StringOutput                    `pulumi:"hostInstanceType"`
	Instances                  BrokerInstanceArrayOutput              `pulumi:"instances"`
	Logs                       BrokerLogsPtrOutput                    `pulumi:"logs"`
	MaintenanceWindowStartTime BrokerMaintenanceWindowStartTimeOutput `pulumi:"maintenanceWindowStartTime"`
	PubliclyAccessible         pulumi.BoolPtrOutput                   `pulumi:"publiclyAccessible"`
	SecurityGroups             pulumi.StringArrayOutput               `pulumi:"securityGroups"`
	SubnetIds                  pulumi.StringArrayOutput               `pulumi:"subnetIds"`
	Tags                       pulumi.StringMapOutput                 `pulumi:"tags"`
	Users                      BrokerUserArrayOutput                  `pulumi:"users"`
}

// NewBroker registers a new resource with the given unique name, arguments, and options.
func NewBroker(ctx *pulumi.Context,
	name string, args *BrokerArgs, opts ...pulumi.ResourceOption) (*Broker, error) {
	if args == nil || args.BrokerName == nil {
		return nil, errors.New("missing required argument 'BrokerName'")
	}
	if args == nil || args.EngineType == nil {
		return nil, errors.New("missing required argument 'EngineType'")
	}
	if args == nil || args.EngineVersion == nil {
		return nil, errors.New("missing required argument 'EngineVersion'")
	}
	if args == nil || args.HostInstanceType == nil {
		return nil, errors.New("missing required argument 'HostInstanceType'")
	}
	if args == nil || args.SecurityGroups == nil {
		return nil, errors.New("missing required argument 'SecurityGroups'")
	}
	if args == nil || args.Users == nil {
		return nil, errors.New("missing required argument 'Users'")
	}
	if args == nil {
		args = &BrokerArgs{}
	}
	var resource Broker
	err := ctx.RegisterResource("aws:mq/broker:Broker", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBroker gets an existing Broker resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBroker(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BrokerState, opts ...pulumi.ResourceOption) (*Broker, error) {
	var resource Broker
	err := ctx.ReadResource("aws:mq/broker:Broker", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Broker resources.
type brokerState struct {
	ApplyImmediately           *bool                             `pulumi:"applyImmediately"`
	Arn                        *string                           `pulumi:"arn"`
	AutoMinorVersionUpgrade    *bool                             `pulumi:"autoMinorVersionUpgrade"`
	BrokerName                 *string                           `pulumi:"brokerName"`
	Configuration              *BrokerConfiguration              `pulumi:"configuration"`
	DeploymentMode             *string                           `pulumi:"deploymentMode"`
	EncryptionOptions          *BrokerEncryptionOptions          `pulumi:"encryptionOptions"`
	EngineType                 *string                           `pulumi:"engineType"`
	EngineVersion              *string                           `pulumi:"engineVersion"`
	HostInstanceType           *string                           `pulumi:"hostInstanceType"`
	Instances                  []BrokerInstance                  `pulumi:"instances"`
	Logs                       *BrokerLogs                       `pulumi:"logs"`
	MaintenanceWindowStartTime *BrokerMaintenanceWindowStartTime `pulumi:"maintenanceWindowStartTime"`
	PubliclyAccessible         *bool                             `pulumi:"publiclyAccessible"`
	SecurityGroups             []string                          `pulumi:"securityGroups"`
	SubnetIds                  []string                          `pulumi:"subnetIds"`
	Tags                       map[string]string                 `pulumi:"tags"`
	Users                      []BrokerUser                      `pulumi:"users"`
}

type BrokerState struct {
	ApplyImmediately           pulumi.BoolPtrInput
	Arn                        pulumi.StringPtrInput
	AutoMinorVersionUpgrade    pulumi.BoolPtrInput
	BrokerName                 pulumi.StringPtrInput
	Configuration              BrokerConfigurationPtrInput
	DeploymentMode             pulumi.StringPtrInput
	EncryptionOptions          BrokerEncryptionOptionsPtrInput
	EngineType                 pulumi.StringPtrInput
	EngineVersion              pulumi.StringPtrInput
	HostInstanceType           pulumi.StringPtrInput
	Instances                  BrokerInstanceArrayInput
	Logs                       BrokerLogsPtrInput
	MaintenanceWindowStartTime BrokerMaintenanceWindowStartTimePtrInput
	PubliclyAccessible         pulumi.BoolPtrInput
	SecurityGroups             pulumi.StringArrayInput
	SubnetIds                  pulumi.StringArrayInput
	Tags                       pulumi.StringMapInput
	Users                      BrokerUserArrayInput
}

func (BrokerState) ElementType() reflect.Type {
	return reflect.TypeOf((*brokerState)(nil)).Elem()
}

type brokerArgs struct {
	ApplyImmediately           *bool                             `pulumi:"applyImmediately"`
	AutoMinorVersionUpgrade    *bool                             `pulumi:"autoMinorVersionUpgrade"`
	BrokerName                 string                            `pulumi:"brokerName"`
	Configuration              *BrokerConfiguration              `pulumi:"configuration"`
	DeploymentMode             *string                           `pulumi:"deploymentMode"`
	EncryptionOptions          *BrokerEncryptionOptions          `pulumi:"encryptionOptions"`
	EngineType                 string                            `pulumi:"engineType"`
	EngineVersion              string                            `pulumi:"engineVersion"`
	HostInstanceType           string                            `pulumi:"hostInstanceType"`
	Logs                       *BrokerLogs                       `pulumi:"logs"`
	MaintenanceWindowStartTime *BrokerMaintenanceWindowStartTime `pulumi:"maintenanceWindowStartTime"`
	PubliclyAccessible         *bool                             `pulumi:"publiclyAccessible"`
	SecurityGroups             []string                          `pulumi:"securityGroups"`
	SubnetIds                  []string                          `pulumi:"subnetIds"`
	Tags                       map[string]string                 `pulumi:"tags"`
	Users                      []BrokerUser                      `pulumi:"users"`
}

// The set of arguments for constructing a Broker resource.
type BrokerArgs struct {
	ApplyImmediately           pulumi.BoolPtrInput
	AutoMinorVersionUpgrade    pulumi.BoolPtrInput
	BrokerName                 pulumi.StringInput
	Configuration              BrokerConfigurationPtrInput
	DeploymentMode             pulumi.StringPtrInput
	EncryptionOptions          BrokerEncryptionOptionsPtrInput
	EngineType                 pulumi.StringInput
	EngineVersion              pulumi.StringInput
	HostInstanceType           pulumi.StringInput
	Logs                       BrokerLogsPtrInput
	MaintenanceWindowStartTime BrokerMaintenanceWindowStartTimePtrInput
	PubliclyAccessible         pulumi.BoolPtrInput
	SecurityGroups             pulumi.StringArrayInput
	SubnetIds                  pulumi.StringArrayInput
	Tags                       pulumi.StringMapInput
	Users                      BrokerUserArrayInput
}

func (BrokerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*brokerArgs)(nil)).Elem()
}
