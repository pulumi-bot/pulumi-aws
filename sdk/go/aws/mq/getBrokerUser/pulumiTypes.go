// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package getBrokerUser

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type GetBrokerUser struct {
	ConsoleAccess bool `pulumi:"consoleAccess"`
	Groups []string `pulumi:"groups"`
	Username string `pulumi:"username"`
}

type GetBrokerUserInput interface {
	pulumi.Input

	ToGetBrokerUserOutput() GetBrokerUserOutput
	ToGetBrokerUserOutputWithContext(context.Context) GetBrokerUserOutput
}

type GetBrokerUserArgs struct {
	ConsoleAccess pulumi.BoolInput `pulumi:"consoleAccess"`
	Groups pulumi.StringArrayInput `pulumi:"groups"`
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetBrokerUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrokerUser)(nil)).Elem()
}

func (i GetBrokerUserArgs) ToGetBrokerUserOutput() GetBrokerUserOutput {
	return i.ToGetBrokerUserOutputWithContext(context.Background())
}

func (i GetBrokerUserArgs) ToGetBrokerUserOutputWithContext(ctx context.Context) GetBrokerUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrokerUserOutput)
}

type GetBrokerUserArrayInput interface {
	pulumi.Input

	ToGetBrokerUserArrayOutput() GetBrokerUserArrayOutput
	ToGetBrokerUserArrayOutputWithContext(context.Context) GetBrokerUserArrayOutput
}

type GetBrokerUserArray []GetBrokerUserInput

func (GetBrokerUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrokerUser)(nil)).Elem()
}

func (i GetBrokerUserArray) ToGetBrokerUserArrayOutput() GetBrokerUserArrayOutput {
	return i.ToGetBrokerUserArrayOutputWithContext(context.Background())
}

func (i GetBrokerUserArray) ToGetBrokerUserArrayOutputWithContext(ctx context.Context) GetBrokerUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrokerUserArrayOutput)
}

type GetBrokerUserOutput struct { *pulumi.OutputState }

func (GetBrokerUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrokerUser)(nil)).Elem()
}

func (o GetBrokerUserOutput) ToGetBrokerUserOutput() GetBrokerUserOutput {
	return o
}

func (o GetBrokerUserOutput) ToGetBrokerUserOutputWithContext(ctx context.Context) GetBrokerUserOutput {
	return o
}

func (o GetBrokerUserOutput) ConsoleAccess() pulumi.BoolOutput {
	return o.ApplyT(func (v GetBrokerUser) bool { return v.ConsoleAccess }).(pulumi.BoolOutput)
}

func (o GetBrokerUserOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetBrokerUser) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

func (o GetBrokerUserOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func (v GetBrokerUser) string { return v.Username }).(pulumi.StringOutput)
}

type GetBrokerUserArrayOutput struct { *pulumi.OutputState}

func (GetBrokerUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrokerUser)(nil)).Elem()
}

func (o GetBrokerUserArrayOutput) ToGetBrokerUserArrayOutput() GetBrokerUserArrayOutput {
	return o
}

func (o GetBrokerUserArrayOutput) ToGetBrokerUserArrayOutputWithContext(ctx context.Context) GetBrokerUserArrayOutput {
	return o
}

func (o GetBrokerUserArrayOutput) Index(i pulumi.IntInput) GetBrokerUserOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetBrokerUser {
		return vs[0].([]GetBrokerUser)[vs[1].(int)]
	}).(GetBrokerUserOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBrokerUserOutput{})
	pulumi.RegisterOutputType(GetBrokerUserArrayOutput{})
}
