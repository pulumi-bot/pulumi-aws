// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AmiCopy struct {
	pulumi.CustomResourceState

	Architecture          pulumi.StringOutput                    `pulumi:"architecture"`
	Arn                   pulumi.StringOutput                    `pulumi:"arn"`
	Description           pulumi.StringPtrOutput                 `pulumi:"description"`
	EbsBlockDevices       AmiCopyEbsBlockDeviceArrayOutput       `pulumi:"ebsBlockDevices"`
	EnaSupport            pulumi.BoolOutput                      `pulumi:"enaSupport"`
	Encrypted             pulumi.BoolPtrOutput                   `pulumi:"encrypted"`
	EphemeralBlockDevices AmiCopyEphemeralBlockDeviceArrayOutput `pulumi:"ephemeralBlockDevices"`
	ImageLocation         pulumi.StringOutput                    `pulumi:"imageLocation"`
	KernelId              pulumi.StringOutput                    `pulumi:"kernelId"`
	KmsKeyId              pulumi.StringOutput                    `pulumi:"kmsKeyId"`
	ManageEbsSnapshots    pulumi.BoolOutput                      `pulumi:"manageEbsSnapshots"`
	Name                  pulumi.StringOutput                    `pulumi:"name"`
	RamdiskId             pulumi.StringOutput                    `pulumi:"ramdiskId"`
	RootDeviceName        pulumi.StringOutput                    `pulumi:"rootDeviceName"`
	RootSnapshotId        pulumi.StringOutput                    `pulumi:"rootSnapshotId"`
	SourceAmiId           pulumi.StringOutput                    `pulumi:"sourceAmiId"`
	SourceAmiRegion       pulumi.StringOutput                    `pulumi:"sourceAmiRegion"`
	SriovNetSupport       pulumi.StringOutput                    `pulumi:"sriovNetSupport"`
	Tags                  pulumi.StringMapOutput                 `pulumi:"tags"`
	VirtualizationType    pulumi.StringOutput                    `pulumi:"virtualizationType"`
}

// NewAmiCopy registers a new resource with the given unique name, arguments, and options.
func NewAmiCopy(ctx *pulumi.Context,
	name string, args *AmiCopyArgs, opts ...pulumi.ResourceOption) (*AmiCopy, error) {
	if args == nil || args.SourceAmiId == nil {
		return nil, errors.New("missing required argument 'SourceAmiId'")
	}
	if args == nil || args.SourceAmiRegion == nil {
		return nil, errors.New("missing required argument 'SourceAmiRegion'")
	}
	if args == nil {
		args = &AmiCopyArgs{}
	}
	var resource AmiCopy
	err := ctx.RegisterResource("aws:ec2/amiCopy:AmiCopy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAmiCopy gets an existing AmiCopy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAmiCopy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AmiCopyState, opts ...pulumi.ResourceOption) (*AmiCopy, error) {
	var resource AmiCopy
	err := ctx.ReadResource("aws:ec2/amiCopy:AmiCopy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AmiCopy resources.
type amiCopyState struct {
	Architecture          *string                       `pulumi:"architecture"`
	Arn                   *string                       `pulumi:"arn"`
	Description           *string                       `pulumi:"description"`
	EbsBlockDevices       []AmiCopyEbsBlockDevice       `pulumi:"ebsBlockDevices"`
	EnaSupport            *bool                         `pulumi:"enaSupport"`
	Encrypted             *bool                         `pulumi:"encrypted"`
	EphemeralBlockDevices []AmiCopyEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	ImageLocation         *string                       `pulumi:"imageLocation"`
	KernelId              *string                       `pulumi:"kernelId"`
	KmsKeyId              *string                       `pulumi:"kmsKeyId"`
	ManageEbsSnapshots    *bool                         `pulumi:"manageEbsSnapshots"`
	Name                  *string                       `pulumi:"name"`
	RamdiskId             *string                       `pulumi:"ramdiskId"`
	RootDeviceName        *string                       `pulumi:"rootDeviceName"`
	RootSnapshotId        *string                       `pulumi:"rootSnapshotId"`
	SourceAmiId           *string                       `pulumi:"sourceAmiId"`
	SourceAmiRegion       *string                       `pulumi:"sourceAmiRegion"`
	SriovNetSupport       *string                       `pulumi:"sriovNetSupport"`
	Tags                  map[string]string             `pulumi:"tags"`
	VirtualizationType    *string                       `pulumi:"virtualizationType"`
}

type AmiCopyState struct {
	Architecture          pulumi.StringPtrInput
	Arn                   pulumi.StringPtrInput
	Description           pulumi.StringPtrInput
	EbsBlockDevices       AmiCopyEbsBlockDeviceArrayInput
	EnaSupport            pulumi.BoolPtrInput
	Encrypted             pulumi.BoolPtrInput
	EphemeralBlockDevices AmiCopyEphemeralBlockDeviceArrayInput
	ImageLocation         pulumi.StringPtrInput
	KernelId              pulumi.StringPtrInput
	KmsKeyId              pulumi.StringPtrInput
	ManageEbsSnapshots    pulumi.BoolPtrInput
	Name                  pulumi.StringPtrInput
	RamdiskId             pulumi.StringPtrInput
	RootDeviceName        pulumi.StringPtrInput
	RootSnapshotId        pulumi.StringPtrInput
	SourceAmiId           pulumi.StringPtrInput
	SourceAmiRegion       pulumi.StringPtrInput
	SriovNetSupport       pulumi.StringPtrInput
	Tags                  pulumi.StringMapInput
	VirtualizationType    pulumi.StringPtrInput
}

func (AmiCopyState) ElementType() reflect.Type {
	return reflect.TypeOf((*amiCopyState)(nil)).Elem()
}

type amiCopyArgs struct {
	Description           *string                       `pulumi:"description"`
	EbsBlockDevices       []AmiCopyEbsBlockDevice       `pulumi:"ebsBlockDevices"`
	Encrypted             *bool                         `pulumi:"encrypted"`
	EphemeralBlockDevices []AmiCopyEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	KmsKeyId              *string                       `pulumi:"kmsKeyId"`
	Name                  *string                       `pulumi:"name"`
	SourceAmiId           string                        `pulumi:"sourceAmiId"`
	SourceAmiRegion       string                        `pulumi:"sourceAmiRegion"`
	Tags                  map[string]string             `pulumi:"tags"`
}

// The set of arguments for constructing a AmiCopy resource.
type AmiCopyArgs struct {
	Description           pulumi.StringPtrInput
	EbsBlockDevices       AmiCopyEbsBlockDeviceArrayInput
	Encrypted             pulumi.BoolPtrInput
	EphemeralBlockDevices AmiCopyEphemeralBlockDeviceArrayInput
	KmsKeyId              pulumi.StringPtrInput
	Name                  pulumi.StringPtrInput
	SourceAmiId           pulumi.StringInput
	SourceAmiRegion       pulumi.StringInput
	Tags                  pulumi.StringMapInput
}

func (AmiCopyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*amiCopyArgs)(nil)).Elem()
}
