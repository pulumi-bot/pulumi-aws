// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

func LookupVpcPeeringConnection(ctx *pulumi.Context, args *LookupVpcPeeringConnectionArgs, opts ...pulumi.InvokeOption) (*LookupVpcPeeringConnectionResult, error) {
	var rv LookupVpcPeeringConnectionResult
	err := ctx.Invoke("aws:ec2/getVpcPeeringConnection:getVpcPeeringConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpcPeeringConnection.
type LookupVpcPeeringConnectionArgs struct {
	CidrBlock     *string                         `pulumi:"cidrBlock"`
	Filters       []GetVpcPeeringConnectionFilter `pulumi:"filters"`
	Id            *string                         `pulumi:"id"`
	OwnerId       *string                         `pulumi:"ownerId"`
	PeerCidrBlock *string                         `pulumi:"peerCidrBlock"`
	PeerOwnerId   *string                         `pulumi:"peerOwnerId"`
	PeerRegion    *string                         `pulumi:"peerRegion"`
	PeerVpcId     *string                         `pulumi:"peerVpcId"`
	Region        *string                         `pulumi:"region"`
	Status        *string                         `pulumi:"status"`
	Tags          map[string]string               `pulumi:"tags"`
	VpcId         *string                         `pulumi:"vpcId"`
}

// A collection of values returned by getVpcPeeringConnection.
type LookupVpcPeeringConnectionResult struct {
	Accepter      map[string]bool                 `pulumi:"accepter"`
	CidrBlock     string                          `pulumi:"cidrBlock"`
	Filters       []GetVpcPeeringConnectionFilter `pulumi:"filters"`
	Id            string                          `pulumi:"id"`
	OwnerId       string                          `pulumi:"ownerId"`
	PeerCidrBlock string                          `pulumi:"peerCidrBlock"`
	PeerOwnerId   string                          `pulumi:"peerOwnerId"`
	PeerRegion    string                          `pulumi:"peerRegion"`
	PeerVpcId     string                          `pulumi:"peerVpcId"`
	Region        string                          `pulumi:"region"`
	Requester     map[string]bool                 `pulumi:"requester"`
	Status        string                          `pulumi:"status"`
	Tags          map[string]string               `pulumi:"tags"`
	VpcId         string                          `pulumi:"vpcId"`
}
