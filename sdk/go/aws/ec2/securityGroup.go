// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type SecurityGroup struct {
	pulumi.CustomResourceState

	Arn                 pulumi.StringOutput             `pulumi:"arn"`
	Description         pulumi.StringOutput             `pulumi:"description"`
	Egress              SecurityGroupEgressArrayOutput  `pulumi:"egress"`
	Ingress             SecurityGroupIngressArrayOutput `pulumi:"ingress"`
	Name                pulumi.StringOutput             `pulumi:"name"`
	NamePrefix          pulumi.StringPtrOutput          `pulumi:"namePrefix"`
	OwnerId             pulumi.StringOutput             `pulumi:"ownerId"`
	RevokeRulesOnDelete pulumi.BoolPtrOutput            `pulumi:"revokeRulesOnDelete"`
	Tags                pulumi.StringMapOutput          `pulumi:"tags"`
	VpcId               pulumi.StringOutput             `pulumi:"vpcId"`
}

// NewSecurityGroup registers a new resource with the given unique name, arguments, and options.
func NewSecurityGroup(ctx *pulumi.Context,
	name string, args *SecurityGroupArgs, opts ...pulumi.ResourceOption) (*SecurityGroup, error) {
	if args == nil {
		args = &SecurityGroupArgs{}
	}
	if args.Description == nil {
		args.Description = pulumi.StringPtr("Managed by Pulumi")
	}
	var resource SecurityGroup
	err := ctx.RegisterResource("aws:ec2/securityGroup:SecurityGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityGroup gets an existing SecurityGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityGroupState, opts ...pulumi.ResourceOption) (*SecurityGroup, error) {
	var resource SecurityGroup
	err := ctx.ReadResource("aws:ec2/securityGroup:SecurityGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityGroup resources.
type securityGroupState struct {
	Arn                 *string                `pulumi:"arn"`
	Description         *string                `pulumi:"description"`
	Egress              []SecurityGroupEgress  `pulumi:"egress"`
	Ingress             []SecurityGroupIngress `pulumi:"ingress"`
	Name                *string                `pulumi:"name"`
	NamePrefix          *string                `pulumi:"namePrefix"`
	OwnerId             *string                `pulumi:"ownerId"`
	RevokeRulesOnDelete *bool                  `pulumi:"revokeRulesOnDelete"`
	Tags                map[string]string      `pulumi:"tags"`
	VpcId               *string                `pulumi:"vpcId"`
}

type SecurityGroupState struct {
	Arn                 pulumi.StringPtrInput
	Description         pulumi.StringPtrInput
	Egress              SecurityGroupEgressArrayInput
	Ingress             SecurityGroupIngressArrayInput
	Name                pulumi.StringPtrInput
	NamePrefix          pulumi.StringPtrInput
	OwnerId             pulumi.StringPtrInput
	RevokeRulesOnDelete pulumi.BoolPtrInput
	Tags                pulumi.StringMapInput
	VpcId               pulumi.StringPtrInput
}

func (SecurityGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGroupState)(nil)).Elem()
}

type securityGroupArgs struct {
	Description         *string                `pulumi:"description"`
	Egress              []SecurityGroupEgress  `pulumi:"egress"`
	Ingress             []SecurityGroupIngress `pulumi:"ingress"`
	Name                *string                `pulumi:"name"`
	NamePrefix          *string                `pulumi:"namePrefix"`
	RevokeRulesOnDelete *bool                  `pulumi:"revokeRulesOnDelete"`
	Tags                map[string]string      `pulumi:"tags"`
	VpcId               *string                `pulumi:"vpcId"`
}

// The set of arguments for constructing a SecurityGroup resource.
type SecurityGroupArgs struct {
	Description         pulumi.StringPtrInput
	Egress              SecurityGroupEgressArrayInput
	Ingress             SecurityGroupIngressArrayInput
	Name                pulumi.StringPtrInput
	NamePrefix          pulumi.StringPtrInput
	RevokeRulesOnDelete pulumi.BoolPtrInput
	Tags                pulumi.StringMapInput
	VpcId               pulumi.StringPtrInput
}

func (SecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGroupArgs)(nil)).Elem()
}
