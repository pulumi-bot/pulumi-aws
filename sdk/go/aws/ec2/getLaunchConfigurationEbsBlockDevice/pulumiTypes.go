// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package getLaunchConfigurationEbsBlockDevice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type GetLaunchConfigurationEbsBlockDevice struct {
	// Whether the EBS Volume will be deleted on instance termination.
	DeleteOnTermination bool `pulumi:"deleteOnTermination"`
	// The Name of the device.
	DeviceName string `pulumi:"deviceName"`
	// Whether the volume is Encrypted.
	Encrypted bool `pulumi:"encrypted"`
	// The provisioned IOPs of the volume.
	Iops int `pulumi:"iops"`
	// The Snapshot ID of the mount.
	SnapshotId string `pulumi:"snapshotId"`
	// The Size of the volume.
	VolumeSize int `pulumi:"volumeSize"`
	// The Type of the volume.
	VolumeType string `pulumi:"volumeType"`
}

type GetLaunchConfigurationEbsBlockDeviceInput interface {
	pulumi.Input

	ToGetLaunchConfigurationEbsBlockDeviceOutput() GetLaunchConfigurationEbsBlockDeviceOutput
	ToGetLaunchConfigurationEbsBlockDeviceOutputWithContext(context.Context) GetLaunchConfigurationEbsBlockDeviceOutput
}

type GetLaunchConfigurationEbsBlockDeviceArgs struct {
	// Whether the EBS Volume will be deleted on instance termination.
	DeleteOnTermination pulumi.BoolInput `pulumi:"deleteOnTermination"`
	// The Name of the device.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Whether the volume is Encrypted.
	Encrypted pulumi.BoolInput `pulumi:"encrypted"`
	// The provisioned IOPs of the volume.
	Iops pulumi.IntInput `pulumi:"iops"`
	// The Snapshot ID of the mount.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	// The Size of the volume.
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
	// The Type of the volume.
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (GetLaunchConfigurationEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchConfigurationEbsBlockDevice)(nil)).Elem()
}

func (i GetLaunchConfigurationEbsBlockDeviceArgs) ToGetLaunchConfigurationEbsBlockDeviceOutput() GetLaunchConfigurationEbsBlockDeviceOutput {
	return i.ToGetLaunchConfigurationEbsBlockDeviceOutputWithContext(context.Background())
}

func (i GetLaunchConfigurationEbsBlockDeviceArgs) ToGetLaunchConfigurationEbsBlockDeviceOutputWithContext(ctx context.Context) GetLaunchConfigurationEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchConfigurationEbsBlockDeviceOutput)
}

type GetLaunchConfigurationEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToGetLaunchConfigurationEbsBlockDeviceArrayOutput() GetLaunchConfigurationEbsBlockDeviceArrayOutput
	ToGetLaunchConfigurationEbsBlockDeviceArrayOutputWithContext(context.Context) GetLaunchConfigurationEbsBlockDeviceArrayOutput
}

type GetLaunchConfigurationEbsBlockDeviceArray []GetLaunchConfigurationEbsBlockDeviceInput

func (GetLaunchConfigurationEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchConfigurationEbsBlockDevice)(nil)).Elem()
}

func (i GetLaunchConfigurationEbsBlockDeviceArray) ToGetLaunchConfigurationEbsBlockDeviceArrayOutput() GetLaunchConfigurationEbsBlockDeviceArrayOutput {
	return i.ToGetLaunchConfigurationEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i GetLaunchConfigurationEbsBlockDeviceArray) ToGetLaunchConfigurationEbsBlockDeviceArrayOutputWithContext(ctx context.Context) GetLaunchConfigurationEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchConfigurationEbsBlockDeviceArrayOutput)
}

type GetLaunchConfigurationEbsBlockDeviceOutput struct { *pulumi.OutputState }

func (GetLaunchConfigurationEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchConfigurationEbsBlockDevice)(nil)).Elem()
}

func (o GetLaunchConfigurationEbsBlockDeviceOutput) ToGetLaunchConfigurationEbsBlockDeviceOutput() GetLaunchConfigurationEbsBlockDeviceOutput {
	return o
}

func (o GetLaunchConfigurationEbsBlockDeviceOutput) ToGetLaunchConfigurationEbsBlockDeviceOutputWithContext(ctx context.Context) GetLaunchConfigurationEbsBlockDeviceOutput {
	return o
}

// Whether the EBS Volume will be deleted on instance termination.
func (o GetLaunchConfigurationEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolOutput {
	return o.ApplyT(func (v GetLaunchConfigurationEbsBlockDevice) bool { return v.DeleteOnTermination }).(pulumi.BoolOutput)
}

// The Name of the device.
func (o GetLaunchConfigurationEbsBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func (v GetLaunchConfigurationEbsBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Whether the volume is Encrypted.
func (o GetLaunchConfigurationEbsBlockDeviceOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func (v GetLaunchConfigurationEbsBlockDevice) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

// The provisioned IOPs of the volume.
func (o GetLaunchConfigurationEbsBlockDeviceOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func (v GetLaunchConfigurationEbsBlockDevice) int { return v.Iops }).(pulumi.IntOutput)
}

// The Snapshot ID of the mount.
func (o GetLaunchConfigurationEbsBlockDeviceOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func (v GetLaunchConfigurationEbsBlockDevice) string { return v.SnapshotId }).(pulumi.StringOutput)
}

// The Size of the volume.
func (o GetLaunchConfigurationEbsBlockDeviceOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func (v GetLaunchConfigurationEbsBlockDevice) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// The Type of the volume.
func (o GetLaunchConfigurationEbsBlockDeviceOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func (v GetLaunchConfigurationEbsBlockDevice) string { return v.VolumeType }).(pulumi.StringOutput)
}

type GetLaunchConfigurationEbsBlockDeviceArrayOutput struct { *pulumi.OutputState}

func (GetLaunchConfigurationEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchConfigurationEbsBlockDevice)(nil)).Elem()
}

func (o GetLaunchConfigurationEbsBlockDeviceArrayOutput) ToGetLaunchConfigurationEbsBlockDeviceArrayOutput() GetLaunchConfigurationEbsBlockDeviceArrayOutput {
	return o
}

func (o GetLaunchConfigurationEbsBlockDeviceArrayOutput) ToGetLaunchConfigurationEbsBlockDeviceArrayOutputWithContext(ctx context.Context) GetLaunchConfigurationEbsBlockDeviceArrayOutput {
	return o
}

func (o GetLaunchConfigurationEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) GetLaunchConfigurationEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetLaunchConfigurationEbsBlockDevice {
		return vs[0].([]GetLaunchConfigurationEbsBlockDevice)[vs[1].(int)]
	}).(GetLaunchConfigurationEbsBlockDeviceOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLaunchConfigurationEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(GetLaunchConfigurationEbsBlockDeviceArrayOutput{})
}
