// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package getRouteTableRoute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type GetRouteTableRoute struct {
	// The CIDR block of the route.
	CidrBlock string `pulumi:"cidrBlock"`
	// The ID of the Egress Only Internet Gateway.
	EgressOnlyGatewayId string `pulumi:"egressOnlyGatewayId"`
	// The id of an Internet Gateway or Virtual Private Gateway which is connected to the Route Table (not exported if not passed as a parameter).
	GatewayId string `pulumi:"gatewayId"`
	// The EC2 instance ID.
	InstanceId string `pulumi:"instanceId"`
	// The IPv6 CIDR block of the route.
	Ipv6CidrBlock string `pulumi:"ipv6CidrBlock"`
	// The NAT Gateway ID.
	NatGatewayId string `pulumi:"natGatewayId"`
	// The ID of the elastic network interface (eni) to use.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
	// The EC2 Transit Gateway ID.
	TransitGatewayId string `pulumi:"transitGatewayId"`
	// The VPC Peering ID.
	VpcPeeringConnectionId string `pulumi:"vpcPeeringConnectionId"`
}

type GetRouteTableRouteInput interface {
	pulumi.Input

	ToGetRouteTableRouteOutput() GetRouteTableRouteOutput
	ToGetRouteTableRouteOutputWithContext(context.Context) GetRouteTableRouteOutput
}

type GetRouteTableRouteArgs struct {
	// The CIDR block of the route.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// The ID of the Egress Only Internet Gateway.
	EgressOnlyGatewayId pulumi.StringInput `pulumi:"egressOnlyGatewayId"`
	// The id of an Internet Gateway or Virtual Private Gateway which is connected to the Route Table (not exported if not passed as a parameter).
	GatewayId pulumi.StringInput `pulumi:"gatewayId"`
	// The EC2 instance ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The IPv6 CIDR block of the route.
	Ipv6CidrBlock pulumi.StringInput `pulumi:"ipv6CidrBlock"`
	// The NAT Gateway ID.
	NatGatewayId pulumi.StringInput `pulumi:"natGatewayId"`
	// The ID of the elastic network interface (eni) to use.
	NetworkInterfaceId pulumi.StringInput `pulumi:"networkInterfaceId"`
	// The EC2 Transit Gateway ID.
	TransitGatewayId pulumi.StringInput `pulumi:"transitGatewayId"`
	// The VPC Peering ID.
	VpcPeeringConnectionId pulumi.StringInput `pulumi:"vpcPeeringConnectionId"`
}

func (GetRouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableRoute)(nil)).Elem()
}

func (i GetRouteTableRouteArgs) ToGetRouteTableRouteOutput() GetRouteTableRouteOutput {
	return i.ToGetRouteTableRouteOutputWithContext(context.Background())
}

func (i GetRouteTableRouteArgs) ToGetRouteTableRouteOutputWithContext(ctx context.Context) GetRouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableRouteOutput)
}

type GetRouteTableRouteArrayInput interface {
	pulumi.Input

	ToGetRouteTableRouteArrayOutput() GetRouteTableRouteArrayOutput
	ToGetRouteTableRouteArrayOutputWithContext(context.Context) GetRouteTableRouteArrayOutput
}

type GetRouteTableRouteArray []GetRouteTableRouteInput

func (GetRouteTableRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableRoute)(nil)).Elem()
}

func (i GetRouteTableRouteArray) ToGetRouteTableRouteArrayOutput() GetRouteTableRouteArrayOutput {
	return i.ToGetRouteTableRouteArrayOutputWithContext(context.Background())
}

func (i GetRouteTableRouteArray) ToGetRouteTableRouteArrayOutputWithContext(ctx context.Context) GetRouteTableRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableRouteArrayOutput)
}

type GetRouteTableRouteOutput struct { *pulumi.OutputState }

func (GetRouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableRoute)(nil)).Elem()
}

func (o GetRouteTableRouteOutput) ToGetRouteTableRouteOutput() GetRouteTableRouteOutput {
	return o
}

func (o GetRouteTableRouteOutput) ToGetRouteTableRouteOutputWithContext(ctx context.Context) GetRouteTableRouteOutput {
	return o
}

// The CIDR block of the route.
func (o GetRouteTableRouteOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func (v GetRouteTableRoute) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// The ID of the Egress Only Internet Gateway.
func (o GetRouteTableRouteOutput) EgressOnlyGatewayId() pulumi.StringOutput {
	return o.ApplyT(func (v GetRouteTableRoute) string { return v.EgressOnlyGatewayId }).(pulumi.StringOutput)
}

// The id of an Internet Gateway or Virtual Private Gateway which is connected to the Route Table (not exported if not passed as a parameter).
func (o GetRouteTableRouteOutput) GatewayId() pulumi.StringOutput {
	return o.ApplyT(func (v GetRouteTableRoute) string { return v.GatewayId }).(pulumi.StringOutput)
}

// The EC2 instance ID.
func (o GetRouteTableRouteOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func (v GetRouteTableRoute) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The IPv6 CIDR block of the route.
func (o GetRouteTableRouteOutput) Ipv6CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func (v GetRouteTableRoute) string { return v.Ipv6CidrBlock }).(pulumi.StringOutput)
}

// The NAT Gateway ID.
func (o GetRouteTableRouteOutput) NatGatewayId() pulumi.StringOutput {
	return o.ApplyT(func (v GetRouteTableRoute) string { return v.NatGatewayId }).(pulumi.StringOutput)
}

// The ID of the elastic network interface (eni) to use.
func (o GetRouteTableRouteOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func (v GetRouteTableRoute) string { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

// The EC2 Transit Gateway ID.
func (o GetRouteTableRouteOutput) TransitGatewayId() pulumi.StringOutput {
	return o.ApplyT(func (v GetRouteTableRoute) string { return v.TransitGatewayId }).(pulumi.StringOutput)
}

// The VPC Peering ID.
func (o GetRouteTableRouteOutput) VpcPeeringConnectionId() pulumi.StringOutput {
	return o.ApplyT(func (v GetRouteTableRoute) string { return v.VpcPeeringConnectionId }).(pulumi.StringOutput)
}

type GetRouteTableRouteArrayOutput struct { *pulumi.OutputState}

func (GetRouteTableRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableRoute)(nil)).Elem()
}

func (o GetRouteTableRouteArrayOutput) ToGetRouteTableRouteArrayOutput() GetRouteTableRouteArrayOutput {
	return o
}

func (o GetRouteTableRouteArrayOutput) ToGetRouteTableRouteArrayOutputWithContext(ctx context.Context) GetRouteTableRouteArrayOutput {
	return o
}

func (o GetRouteTableRouteArrayOutput) Index(i pulumi.IntInput) GetRouteTableRouteOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetRouteTableRoute {
		return vs[0].([]GetRouteTableRoute)[vs[1].(int)]
	}).(GetRouteTableRouteOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRouteTableRouteOutput{})
	pulumi.RegisterOutputType(GetRouteTableRouteArrayOutput{})
}
