// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package AmiEbsBlockDevice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type AmiEbsBlockDevice struct {
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	DeviceName string `pulumi:"deviceName"`
	Encrypted *bool `pulumi:"encrypted"`
	Iops *int `pulumi:"iops"`
	SnapshotId *string `pulumi:"snapshotId"`
	VolumeSize *int `pulumi:"volumeSize"`
	VolumeType *string `pulumi:"volumeType"`
}

type AmiEbsBlockDeviceInput interface {
	pulumi.Input

	ToAmiEbsBlockDeviceOutput() AmiEbsBlockDeviceOutput
	ToAmiEbsBlockDeviceOutputWithContext(context.Context) AmiEbsBlockDeviceOutput
}

type AmiEbsBlockDeviceArgs struct {
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (AmiEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiEbsBlockDevice)(nil)).Elem()
}

func (i AmiEbsBlockDeviceArgs) ToAmiEbsBlockDeviceOutput() AmiEbsBlockDeviceOutput {
	return i.ToAmiEbsBlockDeviceOutputWithContext(context.Background())
}

func (i AmiEbsBlockDeviceArgs) ToAmiEbsBlockDeviceOutputWithContext(ctx context.Context) AmiEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiEbsBlockDeviceOutput)
}

type AmiEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToAmiEbsBlockDeviceArrayOutput() AmiEbsBlockDeviceArrayOutput
	ToAmiEbsBlockDeviceArrayOutputWithContext(context.Context) AmiEbsBlockDeviceArrayOutput
}

type AmiEbsBlockDeviceArray []AmiEbsBlockDeviceInput

func (AmiEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiEbsBlockDevice)(nil)).Elem()
}

func (i AmiEbsBlockDeviceArray) ToAmiEbsBlockDeviceArrayOutput() AmiEbsBlockDeviceArrayOutput {
	return i.ToAmiEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i AmiEbsBlockDeviceArray) ToAmiEbsBlockDeviceArrayOutputWithContext(ctx context.Context) AmiEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiEbsBlockDeviceArrayOutput)
}

type AmiEbsBlockDeviceOutput struct { *pulumi.OutputState }

func (AmiEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiEbsBlockDevice)(nil)).Elem()
}

func (o AmiEbsBlockDeviceOutput) ToAmiEbsBlockDeviceOutput() AmiEbsBlockDeviceOutput {
	return o
}

func (o AmiEbsBlockDeviceOutput) ToAmiEbsBlockDeviceOutputWithContext(ctx context.Context) AmiEbsBlockDeviceOutput {
	return o
}

func (o AmiEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v AmiEbsBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o AmiEbsBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func (v AmiEbsBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o AmiEbsBlockDeviceOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v AmiEbsBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o AmiEbsBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func (v AmiEbsBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o AmiEbsBlockDeviceOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v AmiEbsBlockDevice) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

func (o AmiEbsBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func (v AmiEbsBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

func (o AmiEbsBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func (v AmiEbsBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type AmiEbsBlockDeviceArrayOutput struct { *pulumi.OutputState}

func (AmiEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiEbsBlockDevice)(nil)).Elem()
}

func (o AmiEbsBlockDeviceArrayOutput) ToAmiEbsBlockDeviceArrayOutput() AmiEbsBlockDeviceArrayOutput {
	return o
}

func (o AmiEbsBlockDeviceArrayOutput) ToAmiEbsBlockDeviceArrayOutputWithContext(ctx context.Context) AmiEbsBlockDeviceArrayOutput {
	return o
}

func (o AmiEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) AmiEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) AmiEbsBlockDevice {
		return vs[0].([]AmiEbsBlockDevice)[vs[1].(int)]
	}).(AmiEbsBlockDeviceOutput)
}

func init() {
	pulumi.RegisterOutputType(AmiEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(AmiEbsBlockDeviceArrayOutput{})
}
