// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package SpotInstanceRequestEbsBlockDevice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type SpotInstanceRequestEbsBlockDevice struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The name of the block device to mount on the instance.
	DeviceName string `pulumi:"deviceName"`
	// Enables [EBS
	// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
	Encrypted *bool `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops *int `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId *string `pulumi:"snapshotId"`
	VolumeId *string `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`,
	// or `"io1"`. (Default: `"standard"`).
	VolumeType *string `pulumi:"volumeType"`
}

type SpotInstanceRequestEbsBlockDeviceInput interface {
	pulumi.Input

	ToSpotInstanceRequestEbsBlockDeviceOutput() SpotInstanceRequestEbsBlockDeviceOutput
	ToSpotInstanceRequestEbsBlockDeviceOutputWithContext(context.Context) SpotInstanceRequestEbsBlockDeviceOutput
}

type SpotInstanceRequestEbsBlockDeviceArgs struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The name of the block device to mount on the instance.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Enables [EBS
	// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	VolumeId pulumi.StringPtrInput `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`,
	// or `"io1"`. (Default: `"standard"`).
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (SpotInstanceRequestEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestEbsBlockDevice)(nil)).Elem()
}

func (i SpotInstanceRequestEbsBlockDeviceArgs) ToSpotInstanceRequestEbsBlockDeviceOutput() SpotInstanceRequestEbsBlockDeviceOutput {
	return i.ToSpotInstanceRequestEbsBlockDeviceOutputWithContext(context.Background())
}

func (i SpotInstanceRequestEbsBlockDeviceArgs) ToSpotInstanceRequestEbsBlockDeviceOutputWithContext(ctx context.Context) SpotInstanceRequestEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestEbsBlockDeviceOutput)
}

type SpotInstanceRequestEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToSpotInstanceRequestEbsBlockDeviceArrayOutput() SpotInstanceRequestEbsBlockDeviceArrayOutput
	ToSpotInstanceRequestEbsBlockDeviceArrayOutputWithContext(context.Context) SpotInstanceRequestEbsBlockDeviceArrayOutput
}

type SpotInstanceRequestEbsBlockDeviceArray []SpotInstanceRequestEbsBlockDeviceInput

func (SpotInstanceRequestEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestEbsBlockDevice)(nil)).Elem()
}

func (i SpotInstanceRequestEbsBlockDeviceArray) ToSpotInstanceRequestEbsBlockDeviceArrayOutput() SpotInstanceRequestEbsBlockDeviceArrayOutput {
	return i.ToSpotInstanceRequestEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i SpotInstanceRequestEbsBlockDeviceArray) ToSpotInstanceRequestEbsBlockDeviceArrayOutputWithContext(ctx context.Context) SpotInstanceRequestEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestEbsBlockDeviceArrayOutput)
}

type SpotInstanceRequestEbsBlockDeviceOutput struct { *pulumi.OutputState }

func (SpotInstanceRequestEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestEbsBlockDevice)(nil)).Elem()
}

func (o SpotInstanceRequestEbsBlockDeviceOutput) ToSpotInstanceRequestEbsBlockDeviceOutput() SpotInstanceRequestEbsBlockDeviceOutput {
	return o
}

func (o SpotInstanceRequestEbsBlockDeviceOutput) ToSpotInstanceRequestEbsBlockDeviceOutputWithContext(ctx context.Context) SpotInstanceRequestEbsBlockDeviceOutput {
	return o
}

// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o SpotInstanceRequestEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v SpotInstanceRequestEbsBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The name of the block device to mount on the instance.
func (o SpotInstanceRequestEbsBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func (v SpotInstanceRequestEbsBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Enables [EBS
// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
func (o SpotInstanceRequestEbsBlockDeviceOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v SpotInstanceRequestEbsBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This must be set with a `volumeType` of `"io1"`.
func (o SpotInstanceRequestEbsBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func (v SpotInstanceRequestEbsBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o SpotInstanceRequestEbsBlockDeviceOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SpotInstanceRequestEbsBlockDevice) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The Snapshot ID to mount.
func (o SpotInstanceRequestEbsBlockDeviceOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SpotInstanceRequestEbsBlockDevice) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

func (o SpotInstanceRequestEbsBlockDeviceOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SpotInstanceRequestEbsBlockDevice) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gibibytes (GiB).
func (o SpotInstanceRequestEbsBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func (v SpotInstanceRequestEbsBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`,
// or `"io1"`. (Default: `"standard"`).
func (o SpotInstanceRequestEbsBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SpotInstanceRequestEbsBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type SpotInstanceRequestEbsBlockDeviceArrayOutput struct { *pulumi.OutputState}

func (SpotInstanceRequestEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestEbsBlockDevice)(nil)).Elem()
}

func (o SpotInstanceRequestEbsBlockDeviceArrayOutput) ToSpotInstanceRequestEbsBlockDeviceArrayOutput() SpotInstanceRequestEbsBlockDeviceArrayOutput {
	return o
}

func (o SpotInstanceRequestEbsBlockDeviceArrayOutput) ToSpotInstanceRequestEbsBlockDeviceArrayOutputWithContext(ctx context.Context) SpotInstanceRequestEbsBlockDeviceArrayOutput {
	return o
}

func (o SpotInstanceRequestEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) SpotInstanceRequestEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) SpotInstanceRequestEbsBlockDevice {
		return vs[0].([]SpotInstanceRequestEbsBlockDevice)[vs[1].(int)]
	}).(SpotInstanceRequestEbsBlockDeviceOutput)
}

func init() {
	pulumi.RegisterOutputType(SpotInstanceRequestEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestEbsBlockDeviceArrayOutput{})
}
