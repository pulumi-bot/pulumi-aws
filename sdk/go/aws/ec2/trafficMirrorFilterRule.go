// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type TrafficMirrorFilterRule struct {
	pulumi.CustomResourceState

	Description           pulumi.StringPtrOutput                               `pulumi:"description"`
	DestinationCidrBlock  pulumi.StringOutput                                  `pulumi:"destinationCidrBlock"`
	DestinationPortRange  TrafficMirrorFilterRuleDestinationPortRangePtrOutput `pulumi:"destinationPortRange"`
	Protocol              pulumi.IntPtrOutput                                  `pulumi:"protocol"`
	RuleAction            pulumi.StringOutput                                  `pulumi:"ruleAction"`
	RuleNumber            pulumi.IntOutput                                     `pulumi:"ruleNumber"`
	SourceCidrBlock       pulumi.StringOutput                                  `pulumi:"sourceCidrBlock"`
	SourcePortRange       TrafficMirrorFilterRuleSourcePortRangePtrOutput      `pulumi:"sourcePortRange"`
	TrafficDirection      pulumi.StringOutput                                  `pulumi:"trafficDirection"`
	TrafficMirrorFilterId pulumi.StringOutput                                  `pulumi:"trafficMirrorFilterId"`
}

// NewTrafficMirrorFilterRule registers a new resource with the given unique name, arguments, and options.
func NewTrafficMirrorFilterRule(ctx *pulumi.Context,
	name string, args *TrafficMirrorFilterRuleArgs, opts ...pulumi.ResourceOption) (*TrafficMirrorFilterRule, error) {
	if args == nil || args.DestinationCidrBlock == nil {
		return nil, errors.New("missing required argument 'DestinationCidrBlock'")
	}
	if args == nil || args.RuleAction == nil {
		return nil, errors.New("missing required argument 'RuleAction'")
	}
	if args == nil || args.RuleNumber == nil {
		return nil, errors.New("missing required argument 'RuleNumber'")
	}
	if args == nil || args.SourceCidrBlock == nil {
		return nil, errors.New("missing required argument 'SourceCidrBlock'")
	}
	if args == nil || args.TrafficDirection == nil {
		return nil, errors.New("missing required argument 'TrafficDirection'")
	}
	if args == nil || args.TrafficMirrorFilterId == nil {
		return nil, errors.New("missing required argument 'TrafficMirrorFilterId'")
	}
	if args == nil {
		args = &TrafficMirrorFilterRuleArgs{}
	}
	var resource TrafficMirrorFilterRule
	err := ctx.RegisterResource("aws:ec2/trafficMirrorFilterRule:TrafficMirrorFilterRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTrafficMirrorFilterRule gets an existing TrafficMirrorFilterRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTrafficMirrorFilterRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TrafficMirrorFilterRuleState, opts ...pulumi.ResourceOption) (*TrafficMirrorFilterRule, error) {
	var resource TrafficMirrorFilterRule
	err := ctx.ReadResource("aws:ec2/trafficMirrorFilterRule:TrafficMirrorFilterRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TrafficMirrorFilterRule resources.
type trafficMirrorFilterRuleState struct {
	Description           *string                                      `pulumi:"description"`
	DestinationCidrBlock  *string                                      `pulumi:"destinationCidrBlock"`
	DestinationPortRange  *TrafficMirrorFilterRuleDestinationPortRange `pulumi:"destinationPortRange"`
	Protocol              *int                                         `pulumi:"protocol"`
	RuleAction            *string                                      `pulumi:"ruleAction"`
	RuleNumber            *int                                         `pulumi:"ruleNumber"`
	SourceCidrBlock       *string                                      `pulumi:"sourceCidrBlock"`
	SourcePortRange       *TrafficMirrorFilterRuleSourcePortRange      `pulumi:"sourcePortRange"`
	TrafficDirection      *string                                      `pulumi:"trafficDirection"`
	TrafficMirrorFilterId *string                                      `pulumi:"trafficMirrorFilterId"`
}

type TrafficMirrorFilterRuleState struct {
	Description           pulumi.StringPtrInput
	DestinationCidrBlock  pulumi.StringPtrInput
	DestinationPortRange  TrafficMirrorFilterRuleDestinationPortRangePtrInput
	Protocol              pulumi.IntPtrInput
	RuleAction            pulumi.StringPtrInput
	RuleNumber            pulumi.IntPtrInput
	SourceCidrBlock       pulumi.StringPtrInput
	SourcePortRange       TrafficMirrorFilterRuleSourcePortRangePtrInput
	TrafficDirection      pulumi.StringPtrInput
	TrafficMirrorFilterId pulumi.StringPtrInput
}

func (TrafficMirrorFilterRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*trafficMirrorFilterRuleState)(nil)).Elem()
}

type trafficMirrorFilterRuleArgs struct {
	Description           *string                                      `pulumi:"description"`
	DestinationCidrBlock  string                                       `pulumi:"destinationCidrBlock"`
	DestinationPortRange  *TrafficMirrorFilterRuleDestinationPortRange `pulumi:"destinationPortRange"`
	Protocol              *int                                         `pulumi:"protocol"`
	RuleAction            string                                       `pulumi:"ruleAction"`
	RuleNumber            int                                          `pulumi:"ruleNumber"`
	SourceCidrBlock       string                                       `pulumi:"sourceCidrBlock"`
	SourcePortRange       *TrafficMirrorFilterRuleSourcePortRange      `pulumi:"sourcePortRange"`
	TrafficDirection      string                                       `pulumi:"trafficDirection"`
	TrafficMirrorFilterId string                                       `pulumi:"trafficMirrorFilterId"`
}

// The set of arguments for constructing a TrafficMirrorFilterRule resource.
type TrafficMirrorFilterRuleArgs struct {
	Description           pulumi.StringPtrInput
	DestinationCidrBlock  pulumi.StringInput
	DestinationPortRange  TrafficMirrorFilterRuleDestinationPortRangePtrInput
	Protocol              pulumi.IntPtrInput
	RuleAction            pulumi.StringInput
	RuleNumber            pulumi.IntInput
	SourceCidrBlock       pulumi.StringInput
	SourcePortRange       TrafficMirrorFilterRuleSourcePortRangePtrInput
	TrafficDirection      pulumi.StringInput
	TrafficMirrorFilterId pulumi.StringInput
}

func (TrafficMirrorFilterRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*trafficMirrorFilterRuleArgs)(nil)).Elem()
}
