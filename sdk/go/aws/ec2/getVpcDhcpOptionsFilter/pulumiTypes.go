// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package getVpcDhcpOptionsFilter

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type GetVpcDhcpOptionsFilter struct {
	// The name of the field to filter.
	Name string `pulumi:"name"`
	// Set of values for filtering.
	Values []string `pulumi:"values"`
}

type GetVpcDhcpOptionsFilterInput interface {
	pulumi.Input

	ToGetVpcDhcpOptionsFilterOutput() GetVpcDhcpOptionsFilterOutput
	ToGetVpcDhcpOptionsFilterOutputWithContext(context.Context) GetVpcDhcpOptionsFilterOutput
}

type GetVpcDhcpOptionsFilterArgs struct {
	// The name of the field to filter.
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values for filtering.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVpcDhcpOptionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcDhcpOptionsFilter)(nil)).Elem()
}

func (i GetVpcDhcpOptionsFilterArgs) ToGetVpcDhcpOptionsFilterOutput() GetVpcDhcpOptionsFilterOutput {
	return i.ToGetVpcDhcpOptionsFilterOutputWithContext(context.Background())
}

func (i GetVpcDhcpOptionsFilterArgs) ToGetVpcDhcpOptionsFilterOutputWithContext(ctx context.Context) GetVpcDhcpOptionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcDhcpOptionsFilterOutput)
}

type GetVpcDhcpOptionsFilterArrayInput interface {
	pulumi.Input

	ToGetVpcDhcpOptionsFilterArrayOutput() GetVpcDhcpOptionsFilterArrayOutput
	ToGetVpcDhcpOptionsFilterArrayOutputWithContext(context.Context) GetVpcDhcpOptionsFilterArrayOutput
}

type GetVpcDhcpOptionsFilterArray []GetVpcDhcpOptionsFilterInput

func (GetVpcDhcpOptionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcDhcpOptionsFilter)(nil)).Elem()
}

func (i GetVpcDhcpOptionsFilterArray) ToGetVpcDhcpOptionsFilterArrayOutput() GetVpcDhcpOptionsFilterArrayOutput {
	return i.ToGetVpcDhcpOptionsFilterArrayOutputWithContext(context.Background())
}

func (i GetVpcDhcpOptionsFilterArray) ToGetVpcDhcpOptionsFilterArrayOutputWithContext(ctx context.Context) GetVpcDhcpOptionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcDhcpOptionsFilterArrayOutput)
}

type GetVpcDhcpOptionsFilterOutput struct { *pulumi.OutputState }

func (GetVpcDhcpOptionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcDhcpOptionsFilter)(nil)).Elem()
}

func (o GetVpcDhcpOptionsFilterOutput) ToGetVpcDhcpOptionsFilterOutput() GetVpcDhcpOptionsFilterOutput {
	return o
}

func (o GetVpcDhcpOptionsFilterOutput) ToGetVpcDhcpOptionsFilterOutputWithContext(ctx context.Context) GetVpcDhcpOptionsFilterOutput {
	return o
}

// The name of the field to filter.
func (o GetVpcDhcpOptionsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetVpcDhcpOptionsFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values for filtering.
func (o GetVpcDhcpOptionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetVpcDhcpOptionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVpcDhcpOptionsFilterArrayOutput struct { *pulumi.OutputState}

func (GetVpcDhcpOptionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcDhcpOptionsFilter)(nil)).Elem()
}

func (o GetVpcDhcpOptionsFilterArrayOutput) ToGetVpcDhcpOptionsFilterArrayOutput() GetVpcDhcpOptionsFilterArrayOutput {
	return o
}

func (o GetVpcDhcpOptionsFilterArrayOutput) ToGetVpcDhcpOptionsFilterArrayOutputWithContext(ctx context.Context) GetVpcDhcpOptionsFilterArrayOutput {
	return o
}

func (o GetVpcDhcpOptionsFilterArrayOutput) Index(i pulumi.IntInput) GetVpcDhcpOptionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetVpcDhcpOptionsFilter {
		return vs[0].([]GetVpcDhcpOptionsFilter)[vs[1].(int)]
	}).(GetVpcDhcpOptionsFilterOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVpcDhcpOptionsFilterOutput{})
	pulumi.RegisterOutputType(GetVpcDhcpOptionsFilterArrayOutput{})
}
