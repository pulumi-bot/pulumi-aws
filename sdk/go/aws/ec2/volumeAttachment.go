// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type VolumeAttachment struct {
	pulumi.CustomResourceState

	DeviceName  pulumi.StringOutput  `pulumi:"deviceName"`
	ForceDetach pulumi.BoolPtrOutput `pulumi:"forceDetach"`
	InstanceId  pulumi.StringOutput  `pulumi:"instanceId"`
	SkipDestroy pulumi.BoolPtrOutput `pulumi:"skipDestroy"`
	VolumeId    pulumi.StringOutput  `pulumi:"volumeId"`
}

// NewVolumeAttachment registers a new resource with the given unique name, arguments, and options.
func NewVolumeAttachment(ctx *pulumi.Context,
	name string, args *VolumeAttachmentArgs, opts ...pulumi.ResourceOption) (*VolumeAttachment, error) {
	if args == nil || args.DeviceName == nil {
		return nil, errors.New("missing required argument 'DeviceName'")
	}
	if args == nil || args.InstanceId == nil {
		return nil, errors.New("missing required argument 'InstanceId'")
	}
	if args == nil || args.VolumeId == nil {
		return nil, errors.New("missing required argument 'VolumeId'")
	}
	if args == nil {
		args = &VolumeAttachmentArgs{}
	}
	var resource VolumeAttachment
	err := ctx.RegisterResource("aws:ec2/volumeAttachment:VolumeAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVolumeAttachment gets an existing VolumeAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVolumeAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VolumeAttachmentState, opts ...pulumi.ResourceOption) (*VolumeAttachment, error) {
	var resource VolumeAttachment
	err := ctx.ReadResource("aws:ec2/volumeAttachment:VolumeAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VolumeAttachment resources.
type volumeAttachmentState struct {
	DeviceName  *string `pulumi:"deviceName"`
	ForceDetach *bool   `pulumi:"forceDetach"`
	InstanceId  *string `pulumi:"instanceId"`
	SkipDestroy *bool   `pulumi:"skipDestroy"`
	VolumeId    *string `pulumi:"volumeId"`
}

type VolumeAttachmentState struct {
	DeviceName  pulumi.StringPtrInput
	ForceDetach pulumi.BoolPtrInput
	InstanceId  pulumi.StringPtrInput
	SkipDestroy pulumi.BoolPtrInput
	VolumeId    pulumi.StringPtrInput
}

func (VolumeAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*volumeAttachmentState)(nil)).Elem()
}

type volumeAttachmentArgs struct {
	DeviceName  string `pulumi:"deviceName"`
	ForceDetach *bool  `pulumi:"forceDetach"`
	InstanceId  string `pulumi:"instanceId"`
	SkipDestroy *bool  `pulumi:"skipDestroy"`
	VolumeId    string `pulumi:"volumeId"`
}

// The set of arguments for constructing a VolumeAttachment resource.
type VolumeAttachmentArgs struct {
	DeviceName  pulumi.StringInput
	ForceDetach pulumi.BoolPtrInput
	InstanceId  pulumi.StringInput
	SkipDestroy pulumi.BoolPtrInput
	VolumeId    pulumi.StringInput
}

func (VolumeAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*volumeAttachmentArgs)(nil)).Elem()
}
