// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package getInstanceEphemeralBlockDevice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type GetInstanceEphemeralBlockDevice struct {
	// The physical name of the device.
	DeviceName string `pulumi:"deviceName"`
	// Whether the specified device included in the device mapping was suppressed or not (Boolean).
	NoDevice *bool `pulumi:"noDevice"`
	// The virtual device name.
	VirtualName *string `pulumi:"virtualName"`
}

type GetInstanceEphemeralBlockDeviceInput interface {
	pulumi.Input

	ToGetInstanceEphemeralBlockDeviceOutput() GetInstanceEphemeralBlockDeviceOutput
	ToGetInstanceEphemeralBlockDeviceOutputWithContext(context.Context) GetInstanceEphemeralBlockDeviceOutput
}

type GetInstanceEphemeralBlockDeviceArgs struct {
	// The physical name of the device.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Whether the specified device included in the device mapping was suppressed or not (Boolean).
	NoDevice pulumi.BoolPtrInput `pulumi:"noDevice"`
	// The virtual device name.
	VirtualName pulumi.StringPtrInput `pulumi:"virtualName"`
}

func (GetInstanceEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEphemeralBlockDevice)(nil)).Elem()
}

func (i GetInstanceEphemeralBlockDeviceArgs) ToGetInstanceEphemeralBlockDeviceOutput() GetInstanceEphemeralBlockDeviceOutput {
	return i.ToGetInstanceEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i GetInstanceEphemeralBlockDeviceArgs) ToGetInstanceEphemeralBlockDeviceOutputWithContext(ctx context.Context) GetInstanceEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEphemeralBlockDeviceOutput)
}

type GetInstanceEphemeralBlockDeviceArrayInput interface {
	pulumi.Input

	ToGetInstanceEphemeralBlockDeviceArrayOutput() GetInstanceEphemeralBlockDeviceArrayOutput
	ToGetInstanceEphemeralBlockDeviceArrayOutputWithContext(context.Context) GetInstanceEphemeralBlockDeviceArrayOutput
}

type GetInstanceEphemeralBlockDeviceArray []GetInstanceEphemeralBlockDeviceInput

func (GetInstanceEphemeralBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceEphemeralBlockDevice)(nil)).Elem()
}

func (i GetInstanceEphemeralBlockDeviceArray) ToGetInstanceEphemeralBlockDeviceArrayOutput() GetInstanceEphemeralBlockDeviceArrayOutput {
	return i.ToGetInstanceEphemeralBlockDeviceArrayOutputWithContext(context.Background())
}

func (i GetInstanceEphemeralBlockDeviceArray) ToGetInstanceEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) GetInstanceEphemeralBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEphemeralBlockDeviceArrayOutput)
}

type GetInstanceEphemeralBlockDeviceOutput struct { *pulumi.OutputState }

func (GetInstanceEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEphemeralBlockDevice)(nil)).Elem()
}

func (o GetInstanceEphemeralBlockDeviceOutput) ToGetInstanceEphemeralBlockDeviceOutput() GetInstanceEphemeralBlockDeviceOutput {
	return o
}

func (o GetInstanceEphemeralBlockDeviceOutput) ToGetInstanceEphemeralBlockDeviceOutputWithContext(ctx context.Context) GetInstanceEphemeralBlockDeviceOutput {
	return o
}

// The physical name of the device.
func (o GetInstanceEphemeralBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func (v GetInstanceEphemeralBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Whether the specified device included in the device mapping was suppressed or not (Boolean).
func (o GetInstanceEphemeralBlockDeviceOutput) NoDevice() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v GetInstanceEphemeralBlockDevice) *bool { return v.NoDevice }).(pulumi.BoolPtrOutput)
}

// The virtual device name.
func (o GetInstanceEphemeralBlockDeviceOutput) VirtualName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GetInstanceEphemeralBlockDevice) *string { return v.VirtualName }).(pulumi.StringPtrOutput)
}

type GetInstanceEphemeralBlockDeviceArrayOutput struct { *pulumi.OutputState}

func (GetInstanceEphemeralBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceEphemeralBlockDevice)(nil)).Elem()
}

func (o GetInstanceEphemeralBlockDeviceArrayOutput) ToGetInstanceEphemeralBlockDeviceArrayOutput() GetInstanceEphemeralBlockDeviceArrayOutput {
	return o
}

func (o GetInstanceEphemeralBlockDeviceArrayOutput) ToGetInstanceEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) GetInstanceEphemeralBlockDeviceArrayOutput {
	return o
}

func (o GetInstanceEphemeralBlockDeviceArrayOutput) Index(i pulumi.IntInput) GetInstanceEphemeralBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetInstanceEphemeralBlockDevice {
		return vs[0].([]GetInstanceEphemeralBlockDevice)[vs[1].(int)]
	}).(GetInstanceEphemeralBlockDeviceOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInstanceEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(GetInstanceEphemeralBlockDeviceArrayOutput{})
}
