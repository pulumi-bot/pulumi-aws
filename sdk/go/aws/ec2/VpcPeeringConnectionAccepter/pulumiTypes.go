// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package VpcPeeringConnectionAccepter

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type VpcPeeringConnectionAccepter struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC. This is
	// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
	// inter-region VPC peering.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

type VpcPeeringConnectionAccepterInput interface {
	pulumi.Input

	ToVpcPeeringConnectionAccepterOutput() VpcPeeringConnectionAccepterOutput
	ToVpcPeeringConnectionAccepterOutputWithContext(context.Context) VpcPeeringConnectionAccepterOutput
}

type VpcPeeringConnectionAccepterArgs struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC. This is
	// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
	// inter-region VPC peering.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (VpcPeeringConnectionAccepterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepter)(nil)).Elem()
}

func (i VpcPeeringConnectionAccepterArgs) ToVpcPeeringConnectionAccepterOutput() VpcPeeringConnectionAccepterOutput {
	return i.ToVpcPeeringConnectionAccepterOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterArgs) ToVpcPeeringConnectionAccepterOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterOutput)
}

func (i VpcPeeringConnectionAccepterArgs) ToVpcPeeringConnectionAccepterPtrOutput() VpcPeeringConnectionAccepterPtrOutput {
	return i.ToVpcPeeringConnectionAccepterPtrOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterArgs) ToVpcPeeringConnectionAccepterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterOutput).ToVpcPeeringConnectionAccepterPtrOutputWithContext(ctx)
}

type VpcPeeringConnectionAccepterPtrInput interface {
	pulumi.Input

	ToVpcPeeringConnectionAccepterPtrOutput() VpcPeeringConnectionAccepterPtrOutput
	ToVpcPeeringConnectionAccepterPtrOutputWithContext(context.Context) VpcPeeringConnectionAccepterPtrOutput
}

type vpcPeeringConnectionAccepterPtrType VpcPeeringConnectionAccepterArgs

func VpcPeeringConnectionAccepterPtr(v *VpcPeeringConnectionAccepterArgs) VpcPeeringConnectionAccepterPtrInput {	return (*vpcPeeringConnectionAccepterPtrType)(v)
}

func (*vpcPeeringConnectionAccepterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionAccepter)(nil)).Elem()
}

func (i *vpcPeeringConnectionAccepterPtrType) ToVpcPeeringConnectionAccepterPtrOutput() VpcPeeringConnectionAccepterPtrOutput {
	return i.ToVpcPeeringConnectionAccepterPtrOutputWithContext(context.Background())
}

func (i *vpcPeeringConnectionAccepterPtrType) ToVpcPeeringConnectionAccepterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterPtrOutput)
}

type VpcPeeringConnectionAccepterOutput struct { *pulumi.OutputState }

func (VpcPeeringConnectionAccepterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepter)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterOutput) ToVpcPeeringConnectionAccepterOutput() VpcPeeringConnectionAccepterOutput {
	return o
}

func (o VpcPeeringConnectionAccepterOutput) ToVpcPeeringConnectionAccepterOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterOutput {
	return o
}

func (o VpcPeeringConnectionAccepterOutput) ToVpcPeeringConnectionAccepterPtrOutput() VpcPeeringConnectionAccepterPtrOutput {
	return o.ToVpcPeeringConnectionAccepterPtrOutputWithContext(context.Background())
}

func (o VpcPeeringConnectionAccepterOutput) ToVpcPeeringConnectionAccepterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepter) *VpcPeeringConnectionAccepter {
		return &v
	}).(VpcPeeringConnectionAccepterPtrOutput)
}
// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC.
func (o VpcPeeringConnectionAccepterOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v VpcPeeringConnectionAccepter) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC. This is
// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
// inter-region VPC peering.
func (o VpcPeeringConnectionAccepterOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v VpcPeeringConnectionAccepter) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection.
func (o VpcPeeringConnectionAccepterOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v VpcPeeringConnectionAccepter) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionAccepterPtrOutput struct { *pulumi.OutputState}

func (VpcPeeringConnectionAccepterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionAccepter)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterPtrOutput) ToVpcPeeringConnectionAccepterPtrOutput() VpcPeeringConnectionAccepterPtrOutput {
	return o
}

func (o VpcPeeringConnectionAccepterPtrOutput) ToVpcPeeringConnectionAccepterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterPtrOutput {
	return o
}

func (o VpcPeeringConnectionAccepterPtrOutput) Elem() VpcPeeringConnectionAccepterOutput {
	return o.ApplyT(func (v *VpcPeeringConnectionAccepter) VpcPeeringConnectionAccepter { return *v }).(VpcPeeringConnectionAccepterOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC.
func (o VpcPeeringConnectionAccepterPtrOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v VpcPeeringConnectionAccepter) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC. This is
// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
// inter-region VPC peering.
func (o VpcPeeringConnectionAccepterPtrOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v VpcPeeringConnectionAccepter) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection.
func (o VpcPeeringConnectionAccepterPtrOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v VpcPeeringConnectionAccepter) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterPtrOutput{})
}
