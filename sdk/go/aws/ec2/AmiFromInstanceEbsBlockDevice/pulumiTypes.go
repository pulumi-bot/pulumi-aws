// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package AmiFromInstanceEbsBlockDevice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type AmiFromInstanceEbsBlockDevice struct {
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	DeviceName *string `pulumi:"deviceName"`
	Encrypted *bool `pulumi:"encrypted"`
	Iops *int `pulumi:"iops"`
	SnapshotId *string `pulumi:"snapshotId"`
	VolumeSize *int `pulumi:"volumeSize"`
	VolumeType *string `pulumi:"volumeType"`
}

type AmiFromInstanceEbsBlockDeviceInput interface {
	pulumi.Input

	ToAmiFromInstanceEbsBlockDeviceOutput() AmiFromInstanceEbsBlockDeviceOutput
	ToAmiFromInstanceEbsBlockDeviceOutputWithContext(context.Context) AmiFromInstanceEbsBlockDeviceOutput
}

type AmiFromInstanceEbsBlockDeviceArgs struct {
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (AmiFromInstanceEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiFromInstanceEbsBlockDevice)(nil)).Elem()
}

func (i AmiFromInstanceEbsBlockDeviceArgs) ToAmiFromInstanceEbsBlockDeviceOutput() AmiFromInstanceEbsBlockDeviceOutput {
	return i.ToAmiFromInstanceEbsBlockDeviceOutputWithContext(context.Background())
}

func (i AmiFromInstanceEbsBlockDeviceArgs) ToAmiFromInstanceEbsBlockDeviceOutputWithContext(ctx context.Context) AmiFromInstanceEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiFromInstanceEbsBlockDeviceOutput)
}

type AmiFromInstanceEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToAmiFromInstanceEbsBlockDeviceArrayOutput() AmiFromInstanceEbsBlockDeviceArrayOutput
	ToAmiFromInstanceEbsBlockDeviceArrayOutputWithContext(context.Context) AmiFromInstanceEbsBlockDeviceArrayOutput
}

type AmiFromInstanceEbsBlockDeviceArray []AmiFromInstanceEbsBlockDeviceInput

func (AmiFromInstanceEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiFromInstanceEbsBlockDevice)(nil)).Elem()
}

func (i AmiFromInstanceEbsBlockDeviceArray) ToAmiFromInstanceEbsBlockDeviceArrayOutput() AmiFromInstanceEbsBlockDeviceArrayOutput {
	return i.ToAmiFromInstanceEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i AmiFromInstanceEbsBlockDeviceArray) ToAmiFromInstanceEbsBlockDeviceArrayOutputWithContext(ctx context.Context) AmiFromInstanceEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiFromInstanceEbsBlockDeviceArrayOutput)
}

type AmiFromInstanceEbsBlockDeviceOutput struct { *pulumi.OutputState }

func (AmiFromInstanceEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiFromInstanceEbsBlockDevice)(nil)).Elem()
}

func (o AmiFromInstanceEbsBlockDeviceOutput) ToAmiFromInstanceEbsBlockDeviceOutput() AmiFromInstanceEbsBlockDeviceOutput {
	return o
}

func (o AmiFromInstanceEbsBlockDeviceOutput) ToAmiFromInstanceEbsBlockDeviceOutputWithContext(ctx context.Context) AmiFromInstanceEbsBlockDeviceOutput {
	return o
}

func (o AmiFromInstanceEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v AmiFromInstanceEbsBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o AmiFromInstanceEbsBlockDeviceOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v AmiFromInstanceEbsBlockDevice) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

func (o AmiFromInstanceEbsBlockDeviceOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v AmiFromInstanceEbsBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o AmiFromInstanceEbsBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func (v AmiFromInstanceEbsBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o AmiFromInstanceEbsBlockDeviceOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v AmiFromInstanceEbsBlockDevice) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

func (o AmiFromInstanceEbsBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func (v AmiFromInstanceEbsBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

func (o AmiFromInstanceEbsBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func (v AmiFromInstanceEbsBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type AmiFromInstanceEbsBlockDeviceArrayOutput struct { *pulumi.OutputState}

func (AmiFromInstanceEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiFromInstanceEbsBlockDevice)(nil)).Elem()
}

func (o AmiFromInstanceEbsBlockDeviceArrayOutput) ToAmiFromInstanceEbsBlockDeviceArrayOutput() AmiFromInstanceEbsBlockDeviceArrayOutput {
	return o
}

func (o AmiFromInstanceEbsBlockDeviceArrayOutput) ToAmiFromInstanceEbsBlockDeviceArrayOutputWithContext(ctx context.Context) AmiFromInstanceEbsBlockDeviceArrayOutput {
	return o
}

func (o AmiFromInstanceEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) AmiFromInstanceEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) AmiFromInstanceEbsBlockDevice {
		return vs[0].([]AmiFromInstanceEbsBlockDevice)[vs[1].(int)]
	}).(AmiFromInstanceEbsBlockDeviceOutput)
}

func init() {
	pulumi.RegisterOutputType(AmiFromInstanceEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(AmiFromInstanceEbsBlockDeviceArrayOutput{})
}
