// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package getVpcCidrBlockAssociation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type GetVpcCidrBlockAssociation struct {
	// The association ID for the the IPv4 CIDR block.
	AssociationId string `pulumi:"associationId"`
	// The cidr block of the desired VPC.
	CidrBlock string `pulumi:"cidrBlock"`
	// The current state of the desired VPC.
	// Can be either `"pending"` or `"available"`.
	State string `pulumi:"state"`
}

type GetVpcCidrBlockAssociationInput interface {
	pulumi.Input

	ToGetVpcCidrBlockAssociationOutput() GetVpcCidrBlockAssociationOutput
	ToGetVpcCidrBlockAssociationOutputWithContext(context.Context) GetVpcCidrBlockAssociationOutput
}

type GetVpcCidrBlockAssociationArgs struct {
	// The association ID for the the IPv4 CIDR block.
	AssociationId pulumi.StringInput `pulumi:"associationId"`
	// The cidr block of the desired VPC.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// The current state of the desired VPC.
	// Can be either `"pending"` or `"available"`.
	State pulumi.StringInput `pulumi:"state"`
}

func (GetVpcCidrBlockAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcCidrBlockAssociation)(nil)).Elem()
}

func (i GetVpcCidrBlockAssociationArgs) ToGetVpcCidrBlockAssociationOutput() GetVpcCidrBlockAssociationOutput {
	return i.ToGetVpcCidrBlockAssociationOutputWithContext(context.Background())
}

func (i GetVpcCidrBlockAssociationArgs) ToGetVpcCidrBlockAssociationOutputWithContext(ctx context.Context) GetVpcCidrBlockAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcCidrBlockAssociationOutput)
}

type GetVpcCidrBlockAssociationArrayInput interface {
	pulumi.Input

	ToGetVpcCidrBlockAssociationArrayOutput() GetVpcCidrBlockAssociationArrayOutput
	ToGetVpcCidrBlockAssociationArrayOutputWithContext(context.Context) GetVpcCidrBlockAssociationArrayOutput
}

type GetVpcCidrBlockAssociationArray []GetVpcCidrBlockAssociationInput

func (GetVpcCidrBlockAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcCidrBlockAssociation)(nil)).Elem()
}

func (i GetVpcCidrBlockAssociationArray) ToGetVpcCidrBlockAssociationArrayOutput() GetVpcCidrBlockAssociationArrayOutput {
	return i.ToGetVpcCidrBlockAssociationArrayOutputWithContext(context.Background())
}

func (i GetVpcCidrBlockAssociationArray) ToGetVpcCidrBlockAssociationArrayOutputWithContext(ctx context.Context) GetVpcCidrBlockAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcCidrBlockAssociationArrayOutput)
}

type GetVpcCidrBlockAssociationOutput struct { *pulumi.OutputState }

func (GetVpcCidrBlockAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcCidrBlockAssociation)(nil)).Elem()
}

func (o GetVpcCidrBlockAssociationOutput) ToGetVpcCidrBlockAssociationOutput() GetVpcCidrBlockAssociationOutput {
	return o
}

func (o GetVpcCidrBlockAssociationOutput) ToGetVpcCidrBlockAssociationOutputWithContext(ctx context.Context) GetVpcCidrBlockAssociationOutput {
	return o
}

// The association ID for the the IPv4 CIDR block.
func (o GetVpcCidrBlockAssociationOutput) AssociationId() pulumi.StringOutput {
	return o.ApplyT(func (v GetVpcCidrBlockAssociation) string { return v.AssociationId }).(pulumi.StringOutput)
}

// The cidr block of the desired VPC.
func (o GetVpcCidrBlockAssociationOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func (v GetVpcCidrBlockAssociation) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// The current state of the desired VPC.
// Can be either `"pending"` or `"available"`.
func (o GetVpcCidrBlockAssociationOutput) State() pulumi.StringOutput {
	return o.ApplyT(func (v GetVpcCidrBlockAssociation) string { return v.State }).(pulumi.StringOutput)
}

type GetVpcCidrBlockAssociationArrayOutput struct { *pulumi.OutputState}

func (GetVpcCidrBlockAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcCidrBlockAssociation)(nil)).Elem()
}

func (o GetVpcCidrBlockAssociationArrayOutput) ToGetVpcCidrBlockAssociationArrayOutput() GetVpcCidrBlockAssociationArrayOutput {
	return o
}

func (o GetVpcCidrBlockAssociationArrayOutput) ToGetVpcCidrBlockAssociationArrayOutputWithContext(ctx context.Context) GetVpcCidrBlockAssociationArrayOutput {
	return o
}

func (o GetVpcCidrBlockAssociationArrayOutput) Index(i pulumi.IntInput) GetVpcCidrBlockAssociationOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetVpcCidrBlockAssociation {
		return vs[0].([]GetVpcCidrBlockAssociation)[vs[1].(int)]
	}).(GetVpcCidrBlockAssociationOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVpcCidrBlockAssociationOutput{})
	pulumi.RegisterOutputType(GetVpcCidrBlockAssociationArrayOutput{})
}
