// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type TransitGatewayPeeringAttachmentAccepter struct {
	pulumi.CustomResourceState

	PeerAccountId              pulumi.StringOutput    `pulumi:"peerAccountId"`
	PeerRegion                 pulumi.StringOutput    `pulumi:"peerRegion"`
	PeerTransitGatewayId       pulumi.StringOutput    `pulumi:"peerTransitGatewayId"`
	Tags                       pulumi.StringMapOutput `pulumi:"tags"`
	TransitGatewayAttachmentId pulumi.StringOutput    `pulumi:"transitGatewayAttachmentId"`
	TransitGatewayId           pulumi.StringOutput    `pulumi:"transitGatewayId"`
}

// NewTransitGatewayPeeringAttachmentAccepter registers a new resource with the given unique name, arguments, and options.
func NewTransitGatewayPeeringAttachmentAccepter(ctx *pulumi.Context,
	name string, args *TransitGatewayPeeringAttachmentAccepterArgs, opts ...pulumi.ResourceOption) (*TransitGatewayPeeringAttachmentAccepter, error) {
	if args == nil || args.TransitGatewayAttachmentId == nil {
		return nil, errors.New("missing required argument 'TransitGatewayAttachmentId'")
	}
	if args == nil {
		args = &TransitGatewayPeeringAttachmentAccepterArgs{}
	}
	var resource TransitGatewayPeeringAttachmentAccepter
	err := ctx.RegisterResource("aws:ec2/transitGatewayPeeringAttachmentAccepter:TransitGatewayPeeringAttachmentAccepter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransitGatewayPeeringAttachmentAccepter gets an existing TransitGatewayPeeringAttachmentAccepter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransitGatewayPeeringAttachmentAccepter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransitGatewayPeeringAttachmentAccepterState, opts ...pulumi.ResourceOption) (*TransitGatewayPeeringAttachmentAccepter, error) {
	var resource TransitGatewayPeeringAttachmentAccepter
	err := ctx.ReadResource("aws:ec2/transitGatewayPeeringAttachmentAccepter:TransitGatewayPeeringAttachmentAccepter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransitGatewayPeeringAttachmentAccepter resources.
type transitGatewayPeeringAttachmentAccepterState struct {
	PeerAccountId              *string           `pulumi:"peerAccountId"`
	PeerRegion                 *string           `pulumi:"peerRegion"`
	PeerTransitGatewayId       *string           `pulumi:"peerTransitGatewayId"`
	Tags                       map[string]string `pulumi:"tags"`
	TransitGatewayAttachmentId *string           `pulumi:"transitGatewayAttachmentId"`
	TransitGatewayId           *string           `pulumi:"transitGatewayId"`
}

type TransitGatewayPeeringAttachmentAccepterState struct {
	PeerAccountId              pulumi.StringPtrInput
	PeerRegion                 pulumi.StringPtrInput
	PeerTransitGatewayId       pulumi.StringPtrInput
	Tags                       pulumi.StringMapInput
	TransitGatewayAttachmentId pulumi.StringPtrInput
	TransitGatewayId           pulumi.StringPtrInput
}

func (TransitGatewayPeeringAttachmentAccepterState) ElementType() reflect.Type {
	return reflect.TypeOf((*transitGatewayPeeringAttachmentAccepterState)(nil)).Elem()
}

type transitGatewayPeeringAttachmentAccepterArgs struct {
	Tags                       map[string]string `pulumi:"tags"`
	TransitGatewayAttachmentId string            `pulumi:"transitGatewayAttachmentId"`
}

// The set of arguments for constructing a TransitGatewayPeeringAttachmentAccepter resource.
type TransitGatewayPeeringAttachmentAccepterArgs struct {
	Tags                       pulumi.StringMapInput
	TransitGatewayAttachmentId pulumi.StringInput
}

func (TransitGatewayPeeringAttachmentAccepterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transitGatewayPeeringAttachmentAccepterArgs)(nil)).Elem()
}
