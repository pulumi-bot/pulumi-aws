// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package PeeringConnectionOptionsRequester

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type PeeringConnectionOptionsRequester struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC. This option is not supported for inter-region VPC peering.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection. This option is not supported for inter-region VPC peering.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

type PeeringConnectionOptionsRequesterInput interface {
	pulumi.Input

	ToPeeringConnectionOptionsRequesterOutput() PeeringConnectionOptionsRequesterOutput
	ToPeeringConnectionOptionsRequesterOutputWithContext(context.Context) PeeringConnectionOptionsRequesterOutput
}

type PeeringConnectionOptionsRequesterArgs struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC. This option is not supported for inter-region VPC peering.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection. This option is not supported for inter-region VPC peering.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (PeeringConnectionOptionsRequesterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringConnectionOptionsRequester)(nil)).Elem()
}

func (i PeeringConnectionOptionsRequesterArgs) ToPeeringConnectionOptionsRequesterOutput() PeeringConnectionOptionsRequesterOutput {
	return i.ToPeeringConnectionOptionsRequesterOutputWithContext(context.Background())
}

func (i PeeringConnectionOptionsRequesterArgs) ToPeeringConnectionOptionsRequesterOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsRequesterOutput)
}

func (i PeeringConnectionOptionsRequesterArgs) ToPeeringConnectionOptionsRequesterPtrOutput() PeeringConnectionOptionsRequesterPtrOutput {
	return i.ToPeeringConnectionOptionsRequesterPtrOutputWithContext(context.Background())
}

func (i PeeringConnectionOptionsRequesterArgs) ToPeeringConnectionOptionsRequesterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsRequesterOutput).ToPeeringConnectionOptionsRequesterPtrOutputWithContext(ctx)
}

type PeeringConnectionOptionsRequesterPtrInput interface {
	pulumi.Input

	ToPeeringConnectionOptionsRequesterPtrOutput() PeeringConnectionOptionsRequesterPtrOutput
	ToPeeringConnectionOptionsRequesterPtrOutputWithContext(context.Context) PeeringConnectionOptionsRequesterPtrOutput
}

type peeringConnectionOptionsRequesterPtrType PeeringConnectionOptionsRequesterArgs

func PeeringConnectionOptionsRequesterPtr(v *PeeringConnectionOptionsRequesterArgs) PeeringConnectionOptionsRequesterPtrInput {	return (*peeringConnectionOptionsRequesterPtrType)(v)
}

func (*peeringConnectionOptionsRequesterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringConnectionOptionsRequester)(nil)).Elem()
}

func (i *peeringConnectionOptionsRequesterPtrType) ToPeeringConnectionOptionsRequesterPtrOutput() PeeringConnectionOptionsRequesterPtrOutput {
	return i.ToPeeringConnectionOptionsRequesterPtrOutputWithContext(context.Background())
}

func (i *peeringConnectionOptionsRequesterPtrType) ToPeeringConnectionOptionsRequesterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsRequesterPtrOutput)
}

type PeeringConnectionOptionsRequesterOutput struct { *pulumi.OutputState }

func (PeeringConnectionOptionsRequesterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringConnectionOptionsRequester)(nil)).Elem()
}

func (o PeeringConnectionOptionsRequesterOutput) ToPeeringConnectionOptionsRequesterOutput() PeeringConnectionOptionsRequesterOutput {
	return o
}

func (o PeeringConnectionOptionsRequesterOutput) ToPeeringConnectionOptionsRequesterOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterOutput {
	return o
}

func (o PeeringConnectionOptionsRequesterOutput) ToPeeringConnectionOptionsRequesterPtrOutput() PeeringConnectionOptionsRequesterPtrOutput {
	return o.ToPeeringConnectionOptionsRequesterPtrOutputWithContext(context.Background())
}

func (o PeeringConnectionOptionsRequesterOutput) ToPeeringConnectionOptionsRequesterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsRequester) *PeeringConnectionOptionsRequester {
		return &v
	}).(PeeringConnectionOptionsRequesterPtrOutput)
}
// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsRequesterOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v PeeringConnectionOptionsRequester) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC.
func (o PeeringConnectionOptionsRequesterOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v PeeringConnectionOptionsRequester) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsRequesterOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v PeeringConnectionOptionsRequester) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type PeeringConnectionOptionsRequesterPtrOutput struct { *pulumi.OutputState}

func (PeeringConnectionOptionsRequesterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringConnectionOptionsRequester)(nil)).Elem()
}

func (o PeeringConnectionOptionsRequesterPtrOutput) ToPeeringConnectionOptionsRequesterPtrOutput() PeeringConnectionOptionsRequesterPtrOutput {
	return o
}

func (o PeeringConnectionOptionsRequesterPtrOutput) ToPeeringConnectionOptionsRequesterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterPtrOutput {
	return o
}

func (o PeeringConnectionOptionsRequesterPtrOutput) Elem() PeeringConnectionOptionsRequesterOutput {
	return o.ApplyT(func (v *PeeringConnectionOptionsRequester) PeeringConnectionOptionsRequester { return *v }).(PeeringConnectionOptionsRequesterOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsRequesterPtrOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v PeeringConnectionOptionsRequester) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC.
func (o PeeringConnectionOptionsRequesterPtrOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v PeeringConnectionOptionsRequester) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsRequesterPtrOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v PeeringConnectionOptionsRequester) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(PeeringConnectionOptionsRequesterOutput{})
	pulumi.RegisterOutputType(PeeringConnectionOptionsRequesterPtrOutput{})
}
