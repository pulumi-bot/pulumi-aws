// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type CustomerGateway struct {
	pulumi.CustomResourceState

	Arn       pulumi.StringOutput    `pulumi:"arn"`
	BgpAsn    pulumi.StringOutput    `pulumi:"bgpAsn"`
	IpAddress pulumi.StringOutput    `pulumi:"ipAddress"`
	Tags      pulumi.StringMapOutput `pulumi:"tags"`
	Type      pulumi.StringOutput    `pulumi:"type"`
}

// NewCustomerGateway registers a new resource with the given unique name, arguments, and options.
func NewCustomerGateway(ctx *pulumi.Context,
	name string, args *CustomerGatewayArgs, opts ...pulumi.ResourceOption) (*CustomerGateway, error) {
	if args == nil || args.BgpAsn == nil {
		return nil, errors.New("missing required argument 'BgpAsn'")
	}
	if args == nil || args.IpAddress == nil {
		return nil, errors.New("missing required argument 'IpAddress'")
	}
	if args == nil || args.Type == nil {
		return nil, errors.New("missing required argument 'Type'")
	}
	if args == nil {
		args = &CustomerGatewayArgs{}
	}
	var resource CustomerGateway
	err := ctx.RegisterResource("aws:ec2/customerGateway:CustomerGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomerGateway gets an existing CustomerGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomerGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomerGatewayState, opts ...pulumi.ResourceOption) (*CustomerGateway, error) {
	var resource CustomerGateway
	err := ctx.ReadResource("aws:ec2/customerGateway:CustomerGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomerGateway resources.
type customerGatewayState struct {
	Arn       *string           `pulumi:"arn"`
	BgpAsn    *string           `pulumi:"bgpAsn"`
	IpAddress *string           `pulumi:"ipAddress"`
	Tags      map[string]string `pulumi:"tags"`
	Type      *string           `pulumi:"type"`
}

type CustomerGatewayState struct {
	Arn       pulumi.StringPtrInput
	BgpAsn    pulumi.StringPtrInput
	IpAddress pulumi.StringPtrInput
	Tags      pulumi.StringMapInput
	Type      pulumi.StringPtrInput
}

func (CustomerGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*customerGatewayState)(nil)).Elem()
}

type customerGatewayArgs struct {
	BgpAsn    string            `pulumi:"bgpAsn"`
	IpAddress string            `pulumi:"ipAddress"`
	Tags      map[string]string `pulumi:"tags"`
	Type      string            `pulumi:"type"`
}

// The set of arguments for constructing a CustomerGateway resource.
type CustomerGatewayArgs struct {
	BgpAsn    pulumi.StringInput
	IpAddress pulumi.StringInput
	Tags      pulumi.StringMapInput
	Type      pulumi.StringInput
}

func (CustomerGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customerGatewayArgs)(nil)).Elem()
}
