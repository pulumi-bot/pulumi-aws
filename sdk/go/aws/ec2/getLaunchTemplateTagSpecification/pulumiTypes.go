// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package getLaunchTemplateTagSpecification

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type GetLaunchTemplateTagSpecification struct {
	ResourceType string `pulumi:"resourceType"`
	// (Optional) A mapping of tags to assign to the launch template.
	Tags map[string]interface{} `pulumi:"tags"`
}

type GetLaunchTemplateTagSpecificationInput interface {
	pulumi.Input

	ToGetLaunchTemplateTagSpecificationOutput() GetLaunchTemplateTagSpecificationOutput
	ToGetLaunchTemplateTagSpecificationOutputWithContext(context.Context) GetLaunchTemplateTagSpecificationOutput
}

type GetLaunchTemplateTagSpecificationArgs struct {
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// (Optional) A mapping of tags to assign to the launch template.
	Tags pulumi.MapInput `pulumi:"tags"`
}

func (GetLaunchTemplateTagSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateTagSpecification)(nil)).Elem()
}

func (i GetLaunchTemplateTagSpecificationArgs) ToGetLaunchTemplateTagSpecificationOutput() GetLaunchTemplateTagSpecificationOutput {
	return i.ToGetLaunchTemplateTagSpecificationOutputWithContext(context.Background())
}

func (i GetLaunchTemplateTagSpecificationArgs) ToGetLaunchTemplateTagSpecificationOutputWithContext(ctx context.Context) GetLaunchTemplateTagSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateTagSpecificationOutput)
}

type GetLaunchTemplateTagSpecificationArrayInput interface {
	pulumi.Input

	ToGetLaunchTemplateTagSpecificationArrayOutput() GetLaunchTemplateTagSpecificationArrayOutput
	ToGetLaunchTemplateTagSpecificationArrayOutputWithContext(context.Context) GetLaunchTemplateTagSpecificationArrayOutput
}

type GetLaunchTemplateTagSpecificationArray []GetLaunchTemplateTagSpecificationInput

func (GetLaunchTemplateTagSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateTagSpecification)(nil)).Elem()
}

func (i GetLaunchTemplateTagSpecificationArray) ToGetLaunchTemplateTagSpecificationArrayOutput() GetLaunchTemplateTagSpecificationArrayOutput {
	return i.ToGetLaunchTemplateTagSpecificationArrayOutputWithContext(context.Background())
}

func (i GetLaunchTemplateTagSpecificationArray) ToGetLaunchTemplateTagSpecificationArrayOutputWithContext(ctx context.Context) GetLaunchTemplateTagSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateTagSpecificationArrayOutput)
}

type GetLaunchTemplateTagSpecificationOutput struct { *pulumi.OutputState }

func (GetLaunchTemplateTagSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateTagSpecification)(nil)).Elem()
}

func (o GetLaunchTemplateTagSpecificationOutput) ToGetLaunchTemplateTagSpecificationOutput() GetLaunchTemplateTagSpecificationOutput {
	return o
}

func (o GetLaunchTemplateTagSpecificationOutput) ToGetLaunchTemplateTagSpecificationOutputWithContext(ctx context.Context) GetLaunchTemplateTagSpecificationOutput {
	return o
}

func (o GetLaunchTemplateTagSpecificationOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func (v GetLaunchTemplateTagSpecification) string { return v.ResourceType }).(pulumi.StringOutput)
}

// (Optional) A mapping of tags to assign to the launch template.
func (o GetLaunchTemplateTagSpecificationOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func (v GetLaunchTemplateTagSpecification) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

type GetLaunchTemplateTagSpecificationArrayOutput struct { *pulumi.OutputState}

func (GetLaunchTemplateTagSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateTagSpecification)(nil)).Elem()
}

func (o GetLaunchTemplateTagSpecificationArrayOutput) ToGetLaunchTemplateTagSpecificationArrayOutput() GetLaunchTemplateTagSpecificationArrayOutput {
	return o
}

func (o GetLaunchTemplateTagSpecificationArrayOutput) ToGetLaunchTemplateTagSpecificationArrayOutputWithContext(ctx context.Context) GetLaunchTemplateTagSpecificationArrayOutput {
	return o
}

func (o GetLaunchTemplateTagSpecificationArrayOutput) Index(i pulumi.IntInput) GetLaunchTemplateTagSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetLaunchTemplateTagSpecification {
		return vs[0].([]GetLaunchTemplateTagSpecification)[vs[1].(int)]
	}).(GetLaunchTemplateTagSpecificationOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLaunchTemplateTagSpecificationOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateTagSpecificationArrayOutput{})
}
