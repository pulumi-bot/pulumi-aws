// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type LaunchConfiguration struct {
	pulumi.CustomResourceState

	Arn                          pulumi.StringOutput                                `pulumi:"arn"`
	AssociatePublicIpAddress     pulumi.BoolPtrOutput                               `pulumi:"associatePublicIpAddress"`
	EbsBlockDevices              LaunchConfigurationEbsBlockDeviceArrayOutput       `pulumi:"ebsBlockDevices"`
	EbsOptimized                 pulumi.BoolOutput                                  `pulumi:"ebsOptimized"`
	EnableMonitoring             pulumi.BoolPtrOutput                               `pulumi:"enableMonitoring"`
	EphemeralBlockDevices        LaunchConfigurationEphemeralBlockDeviceArrayOutput `pulumi:"ephemeralBlockDevices"`
	IamInstanceProfile           pulumi.StringPtrOutput                             `pulumi:"iamInstanceProfile"`
	ImageId                      pulumi.StringOutput                                `pulumi:"imageId"`
	InstanceType                 pulumi.StringOutput                                `pulumi:"instanceType"`
	KeyName                      pulumi.StringOutput                                `pulumi:"keyName"`
	Name                         pulumi.StringOutput                                `pulumi:"name"`
	NamePrefix                   pulumi.StringPtrOutput                             `pulumi:"namePrefix"`
	PlacementTenancy             pulumi.StringPtrOutput                             `pulumi:"placementTenancy"`
	RootBlockDevice              LaunchConfigurationRootBlockDeviceOutput           `pulumi:"rootBlockDevice"`
	SecurityGroups               pulumi.StringArrayOutput                           `pulumi:"securityGroups"`
	SpotPrice                    pulumi.StringPtrOutput                             `pulumi:"spotPrice"`
	UserData                     pulumi.StringPtrOutput                             `pulumi:"userData"`
	UserDataBase64               pulumi.StringPtrOutput                             `pulumi:"userDataBase64"`
	VpcClassicLinkId             pulumi.StringPtrOutput                             `pulumi:"vpcClassicLinkId"`
	VpcClassicLinkSecurityGroups pulumi.StringArrayOutput                           `pulumi:"vpcClassicLinkSecurityGroups"`
}

// NewLaunchConfiguration registers a new resource with the given unique name, arguments, and options.
func NewLaunchConfiguration(ctx *pulumi.Context,
	name string, args *LaunchConfigurationArgs, opts ...pulumi.ResourceOption) (*LaunchConfiguration, error) {
	if args == nil || args.ImageId == nil {
		return nil, errors.New("missing required argument 'ImageId'")
	}
	if args == nil || args.InstanceType == nil {
		return nil, errors.New("missing required argument 'InstanceType'")
	}
	if args == nil {
		args = &LaunchConfigurationArgs{}
	}
	var resource LaunchConfiguration
	err := ctx.RegisterResource("aws:ec2/launchConfiguration:LaunchConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLaunchConfiguration gets an existing LaunchConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLaunchConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LaunchConfigurationState, opts ...pulumi.ResourceOption) (*LaunchConfiguration, error) {
	var resource LaunchConfiguration
	err := ctx.ReadResource("aws:ec2/launchConfiguration:LaunchConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LaunchConfiguration resources.
type launchConfigurationState struct {
	Arn                          *string                                   `pulumi:"arn"`
	AssociatePublicIpAddress     *bool                                     `pulumi:"associatePublicIpAddress"`
	EbsBlockDevices              []LaunchConfigurationEbsBlockDevice       `pulumi:"ebsBlockDevices"`
	EbsOptimized                 *bool                                     `pulumi:"ebsOptimized"`
	EnableMonitoring             *bool                                     `pulumi:"enableMonitoring"`
	EphemeralBlockDevices        []LaunchConfigurationEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	IamInstanceProfile           *string                                   `pulumi:"iamInstanceProfile"`
	ImageId                      *string                                   `pulumi:"imageId"`
	InstanceType                 *string                                   `pulumi:"instanceType"`
	KeyName                      *string                                   `pulumi:"keyName"`
	Name                         *string                                   `pulumi:"name"`
	NamePrefix                   *string                                   `pulumi:"namePrefix"`
	PlacementTenancy             *string                                   `pulumi:"placementTenancy"`
	RootBlockDevice              *LaunchConfigurationRootBlockDevice       `pulumi:"rootBlockDevice"`
	SecurityGroups               []string                                  `pulumi:"securityGroups"`
	SpotPrice                    *string                                   `pulumi:"spotPrice"`
	UserData                     *string                                   `pulumi:"userData"`
	UserDataBase64               *string                                   `pulumi:"userDataBase64"`
	VpcClassicLinkId             *string                                   `pulumi:"vpcClassicLinkId"`
	VpcClassicLinkSecurityGroups []string                                  `pulumi:"vpcClassicLinkSecurityGroups"`
}

type LaunchConfigurationState struct {
	Arn                          pulumi.StringPtrInput
	AssociatePublicIpAddress     pulumi.BoolPtrInput
	EbsBlockDevices              LaunchConfigurationEbsBlockDeviceArrayInput
	EbsOptimized                 pulumi.BoolPtrInput
	EnableMonitoring             pulumi.BoolPtrInput
	EphemeralBlockDevices        LaunchConfigurationEphemeralBlockDeviceArrayInput
	IamInstanceProfile           pulumi.StringPtrInput
	ImageId                      pulumi.StringPtrInput
	InstanceType                 pulumi.StringPtrInput
	KeyName                      pulumi.StringPtrInput
	Name                         pulumi.StringPtrInput
	NamePrefix                   pulumi.StringPtrInput
	PlacementTenancy             pulumi.StringPtrInput
	RootBlockDevice              LaunchConfigurationRootBlockDevicePtrInput
	SecurityGroups               pulumi.StringArrayInput
	SpotPrice                    pulumi.StringPtrInput
	UserData                     pulumi.StringPtrInput
	UserDataBase64               pulumi.StringPtrInput
	VpcClassicLinkId             pulumi.StringPtrInput
	VpcClassicLinkSecurityGroups pulumi.StringArrayInput
}

func (LaunchConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*launchConfigurationState)(nil)).Elem()
}

type launchConfigurationArgs struct {
	AssociatePublicIpAddress     *bool                                     `pulumi:"associatePublicIpAddress"`
	EbsBlockDevices              []LaunchConfigurationEbsBlockDevice       `pulumi:"ebsBlockDevices"`
	EbsOptimized                 *bool                                     `pulumi:"ebsOptimized"`
	EnableMonitoring             *bool                                     `pulumi:"enableMonitoring"`
	EphemeralBlockDevices        []LaunchConfigurationEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	IamInstanceProfile           interface{}                               `pulumi:"iamInstanceProfile"`
	ImageId                      string                                    `pulumi:"imageId"`
	InstanceType                 string                                    `pulumi:"instanceType"`
	KeyName                      *string                                   `pulumi:"keyName"`
	Name                         *string                                   `pulumi:"name"`
	NamePrefix                   *string                                   `pulumi:"namePrefix"`
	PlacementTenancy             *string                                   `pulumi:"placementTenancy"`
	RootBlockDevice              *LaunchConfigurationRootBlockDevice       `pulumi:"rootBlockDevice"`
	SecurityGroups               []string                                  `pulumi:"securityGroups"`
	SpotPrice                    *string                                   `pulumi:"spotPrice"`
	UserData                     *string                                   `pulumi:"userData"`
	UserDataBase64               *string                                   `pulumi:"userDataBase64"`
	VpcClassicLinkId             *string                                   `pulumi:"vpcClassicLinkId"`
	VpcClassicLinkSecurityGroups []string                                  `pulumi:"vpcClassicLinkSecurityGroups"`
}

// The set of arguments for constructing a LaunchConfiguration resource.
type LaunchConfigurationArgs struct {
	AssociatePublicIpAddress     pulumi.BoolPtrInput
	EbsBlockDevices              LaunchConfigurationEbsBlockDeviceArrayInput
	EbsOptimized                 pulumi.BoolPtrInput
	EnableMonitoring             pulumi.BoolPtrInput
	EphemeralBlockDevices        LaunchConfigurationEphemeralBlockDeviceArrayInput
	IamInstanceProfile           pulumi.Input
	ImageId                      pulumi.StringInput
	InstanceType                 pulumi.StringInput
	KeyName                      pulumi.StringPtrInput
	Name                         pulumi.StringPtrInput
	NamePrefix                   pulumi.StringPtrInput
	PlacementTenancy             pulumi.StringPtrInput
	RootBlockDevice              LaunchConfigurationRootBlockDevicePtrInput
	SecurityGroups               pulumi.StringArrayInput
	SpotPrice                    pulumi.StringPtrInput
	UserData                     pulumi.StringPtrInput
	UserDataBase64               pulumi.StringPtrInput
	VpcClassicLinkId             pulumi.StringPtrInput
	VpcClassicLinkSecurityGroups pulumi.StringArrayInput
}

func (LaunchConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*launchConfigurationArgs)(nil)).Elem()
}
