// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Use this data source to get IDs or IPs of Amazon EC2 instances to be referenced elsewhere,
// e.g. to allow easier migration from another management solution
// or to make it easier for an operator to connect through bastion host(s).
//
// > **Note:** It's strongly discouraged to use this data source for querying ephemeral
// instances (e.g. managed via autoscaling group), as the output may change at any time
// and you'd need to re-run `apply` every time an instance comes up or dies.
//
// ## Example Usage
//
//
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v2/go/aws/ec2"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		testInstances, err := ec2.LookupInstances(ctx, &ec2.LookupInstancesArgs{
// 			Filters: ec2.getInstancesFilterArray{
// 				&ec2.LookupInstancesFilter{
// 					Name: "instance.group-id",
// 					Values: []string{
// 						"sg-12345678",
// 					},
// 				},
// 			},
// 			InstanceStateNames: []string{
// 				"running",
// 				"stopped",
// 			},
// 			InstanceTags: map[string]interface{}{
// 				"Role": "HardWorker",
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		var testEip []*ec2.Eip
// 		for i0, val0 := range testInstances.Ids.Length {
// 			_res, err := ec2.NewEip(ctx, "testEip-"+string(i0), &ec2.EipArgs{
// 				Instance: testInstances.Ids[val0],
// 			})
// 			if err != nil {
// 				return err
// 			}
// 			testEip = append(testEip, _res)
// 		}
// 		return nil
// 	})
// }
// ```
func GetInstances(ctx *pulumi.Context, args *GetInstancesArgs, opts ...pulumi.InvokeOption) (*GetInstancesResult, error) {
	var rv GetInstancesResult
	err := ctx.Invoke("aws:ec2/getInstances:getInstances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstances.
type GetInstancesArgs struct {
	// One or more name/value pairs to use as filters. There are
	// several valid keys, for a full reference, check out
	// [describe-instances in the AWS CLI reference][1].
	Filters []GetInstancesFilter `pulumi:"filters"`
	// A list of instance states that should be applicable to the desired instances. The permitted values are: `pending, running, shutting-down, stopped, stopping, terminated`. The default value is `running`.
	InstanceStateNames []string `pulumi:"instanceStateNames"`
	// A map of tags, each pair of which must
	// exactly match a pair on desired instances.
	InstanceTags map[string]interface{} `pulumi:"instanceTags"`
}

// A collection of values returned by getInstances.
type GetInstancesResult struct {
	Filters []GetInstancesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// IDs of instances found through the filter
	Ids                []string               `pulumi:"ids"`
	InstanceStateNames []string               `pulumi:"instanceStateNames"`
	InstanceTags       map[string]interface{} `pulumi:"instanceTags"`
	// Private IP addresses of instances found through the filter
	PrivateIps []string `pulumi:"privateIps"`
	// Public IP addresses of instances found through the filter
	PublicIps []string `pulumi:"publicIps"`
}
