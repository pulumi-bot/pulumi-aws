// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"fmt"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type InstancePlatform pulumi.String

const (
	LinuxUnix                      = InstancePlatform("Linux/UNIX")
	RedHatEnterpriseLinux          = InstancePlatform("Red Hat Enterprise Linux")
	SuseLinux                      = InstancePlatform("SUSE Linux")
	Windows                        = InstancePlatform("Windows")
	WindowsWithSqlServer           = InstancePlatform("Windows with SQL Server")
	WindowsWithSqlServerEnterprise = InstancePlatform("Windows with SQL Server Enterprise")
	WindowsWithSqlServerStandard   = InstancePlatform("Windows with SQL Server Standard")
	WindowsWithSqlServerWeb        = InstancePlatform("Windows with SQL Server Web")
)

func (InstancePlatform) possibleValues() map[InstancePlatform]bool {
	return map[InstancePlatform]bool{
		LinuxUnix:                      true,
		RedHatEnterpriseLinux:          true,
		SuseLinux:                      true,
		Windows:                        true,
		WindowsWithSqlServer:           true,
		WindowsWithSqlServerEnterprise: true,
		WindowsWithSqlServerStandard:   true,
		WindowsWithSqlServerWeb:        true,
	}
}

func (e InstancePlatform) Validate() error {
	if !e.possibleValues()[e] {
		return fmt.Errorf("unexpected value: %v", e)
	}
	return nil
}

func (InstancePlatform) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e InstancePlatform) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstancePlatform) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstancePlatform) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstancePlatform) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type InstanceType pulumi.String

const (
	A1_2XLarge    = InstanceType("a1.2xlarge")
	A1_4XLarge    = InstanceType("a1.4xlarge")
	A1_Large      = InstanceType("a1.large")
	A1_Medium     = InstanceType("a1.medium")
	A1_XLarge     = InstanceType("a1.xlarge")
	C3_2XLarge    = InstanceType("c3.2xlarge")
	C3_4XLarge    = InstanceType("c3.4xlarge")
	C3_8XLarge    = InstanceType("c3.8xlarge")
	C3_Large      = InstanceType("c3.large")
	C3_XLarge     = InstanceType("c3.xlarge")
	C4_2XLarge    = InstanceType("c4.2xlarge")
	C4_4XLarge    = InstanceType("c4.4xlarge")
	C4_8XLarge    = InstanceType("c4.8xlarge")
	C4_Large      = InstanceType("c4.large")
	C4_XLarge     = InstanceType("c4.xlarge")
	C5_18XLarge   = InstanceType("c5.18xlarge")
	C5_2XLarge    = InstanceType("c5.2xlarge")
	C5_4XLarge    = InstanceType("c5.4xlarge")
	C5_9XLarge    = InstanceType("c5.9xlarge")
	C5_Large      = InstanceType("c5.large")
	C5_XLarge     = InstanceType("c5.xlarge")
	C5a_12XLarge  = InstanceType("c5a.12xlarge")
	C5a_16XLarge  = InstanceType("c5a.16xlarge")
	C5a_2XLarge   = InstanceType("c5a.2xlarge")
	C5a_24XLarge  = InstanceType("c5a.24xlarge")
	C5a_4XLarge   = InstanceType("c5a.4xlarge")
	C5a_8XLarge   = InstanceType("c5a.8xlarge")
	C5a_Large     = InstanceType("c5a.large")
	C5a_XLarge    = InstanceType("c5a.xlarge")
	C5d_18XLarge  = InstanceType("c5d.18xlarge")
	C5d_2XLarge   = InstanceType("c5d.2xlarge")
	C5d_4XLarge   = InstanceType("c5d.4xlarge")
	C5d_9XLarge   = InstanceType("c5d.9xlarge")
	C5d_Large     = InstanceType("c5d.large")
	C5d_XLarge    = InstanceType("c5d.xlarge")
	C5n_18XLarge  = InstanceType("c5n.18xlarge")
	C5n_2XLarge   = InstanceType("c5n.2xlarge")
	C5n_4XLarge   = InstanceType("c5n.4xlarge")
	C5n_9XLarge   = InstanceType("c5n.9xlarge")
	C5n_Large     = InstanceType("c5n.large")
	C5n_XLarge    = InstanceType("c5n.xlarge")
	D2_2XLarge    = InstanceType("d2.2xlarge")
	D2_4XLarge    = InstanceType("d2.4xlarge")
	D2_8XLarge    = InstanceType("d2.8xlarge")
	D2_XLarge     = InstanceType("d2.xlarge")
	F1_16XLarge   = InstanceType("f1.16xlarge")
	F1_2XLarge    = InstanceType("f1.2xlarge")
	G2_2XLarge    = InstanceType("g2.2xlarge")
	G2_8XLarge    = InstanceType("g2.8xlarge")
	G3_16XLarge   = InstanceType("g3.16xlarge")
	G3_4XLarge    = InstanceType("g3.4xlarge")
	G3_8XLarge    = InstanceType("g3.8xlarge")
	G3s_XLarge    = InstanceType("g3s.xlarge")
	H1_16XLarge   = InstanceType("h1.16xlarge")
	H1_2XLarge    = InstanceType("h1.2xlarge")
	H1_4XLarge    = InstanceType("h1.4xlarge")
	H1_8XLarge    = InstanceType("h1.8xlarge")
	Hs1_8XLarge   = InstanceType("hs1.8xlarge")
	I3_16XLarge   = InstanceType("i3.16xlarge")
	I3_2XLarge    = InstanceType("i3.2xlarge")
	I3_4XLarge    = InstanceType("i3.4xlarge")
	I3_8XLarge    = InstanceType("i3.8xlarge")
	I3_Large      = InstanceType("i3.large")
	I3_XLarge     = InstanceType("i3.xlarge")
	I3_Metal      = InstanceType("i3.metal")
	M3_2XLarge    = InstanceType("m3.2xlarge")
	M3_Large      = InstanceType("m3.large")
	M3_Medium     = InstanceType("m3.medium")
	M3_XLarge     = InstanceType("m3.xlarge")
	M4_10XLarge   = InstanceType("m4.10xlarge")
	M4_16XLarge   = InstanceType("m4.16xlarge")
	M4_2XLarge    = InstanceType("m4.2xlarge")
	M4_4XLarge    = InstanceType("m4.4xlarge")
	M4_Large      = InstanceType("m4.large")
	M4_XLarge     = InstanceType("m4.xlarge")
	M5_Large      = InstanceType("m5.large")
	M5_XLarge     = InstanceType("m5.xlarge")
	M5_2XLarge    = InstanceType("m5.2xlarge")
	M5_4XLarge    = InstanceType("m5.4xlarge")
	M5_12XLarge   = InstanceType("m5.12xlarge")
	M5_24XLarge   = InstanceType("m5.24xlarge")
	M5d_Large     = InstanceType("m5d.large")
	M5d_XLarge    = InstanceType("m5d.xlarge")
	M5d_2XLarge   = InstanceType("m5d.2xlarge")
	M5d_4XLarge   = InstanceType("m5d.4xlarge")
	M5d_12XLarge  = InstanceType("m5d.12xlarge")
	M5d_24XLarge  = InstanceType("m5d.24xlarge")
	M5a_12XLarge  = InstanceType("m5a.12xlarge")
	M5a_24XLarge  = InstanceType("m5a.24xlarge")
	M5a_2XLarge   = InstanceType("m5a.2xlarge")
	M5a_4XLarge   = InstanceType("m5a.4xlarge")
	M5a_Large     = InstanceType("m5a.large")
	M5a_XLarge    = InstanceType("m5a.xlarge")
	P2_16XLarge   = InstanceType("p2.16xlarge")
	P2_8XLarge    = InstanceType("p2.8xlarge")
	P2_XLarge     = InstanceType("p2.xlarge")
	P3_16XLarge   = InstanceType("p3.16xlarge")
	P3_2XLarge    = InstanceType("p3.2xlarge")
	P3_8XLarge    = InstanceType("p3.8xlarge")
	P3dn_24XLarge = InstanceType("p3dn.24xlarge")
	R3_2XLarge    = InstanceType("r3.2xlarge")
	R3_4XLarge    = InstanceType("r3.4xlarge")
	R3_8XLarge    = InstanceType("r3.8xlarge")
	R3_Large      = InstanceType("r3.large")
	R3_XLarge     = InstanceType("r3.xlarge")
	R4_16XLarge   = InstanceType("r4.16xlarge")
	R4_2XLarge    = InstanceType("r4.2xlarge")
	R4_4XLarge    = InstanceType("r4.4xlarge")
	R4_8XLarge    = InstanceType("r4.8xlarge")
	R4_Large      = InstanceType("r4.large")
	R4_XLarge     = InstanceType("r4.xlarge")
	R5_12XLarge   = InstanceType("r5.12xlarge")
	R5_24XLarge   = InstanceType("r5.24xlarge")
	R5_2XLarge    = InstanceType("r5.2xlarge")
	R5_4XLarge    = InstanceType("r5.4xlarge")
	R5_Large      = InstanceType("r5.large")
	R5_XLarge     = InstanceType("r5.xlarge")
	R5a_12XLarge  = InstanceType("r5a.12xlarge")
	R5a_24XLarge  = InstanceType("r5a.24xlarge")
	R5a_2XLarge   = InstanceType("r5a.2xlarge")
	R5a_4XLarge   = InstanceType("r5a.4xlarge")
	R5a_Large     = InstanceType("r5a.large")
	R5a_XLarge    = InstanceType("r5a.xlarge")
	R5d_12XLarge  = InstanceType("r5d.12xlarge")
	R5d_24XLarge  = InstanceType("r5d.24xlarge")
	R5d_2XLarge   = InstanceType("r5d.2xlarge")
	R5d_4XLarge   = InstanceType("r5d.4xlarge")
	R5d_Large     = InstanceType("r5d.large")
	R5d_XLarge    = InstanceType("r5d.xlarge")
	T2_2XLarge    = InstanceType("t2.2xlarge")
	T2_Large      = InstanceType("t2.large")
	T2_Medium     = InstanceType("t2.medium")
	T2_Micro      = InstanceType("t2.micro")
	T2_Nano       = InstanceType("t2.nano")
	T2_Small      = InstanceType("t2.small")
	T2_XLarge     = InstanceType("t2.xlarge")
	T3_2XLarge    = InstanceType("t3.2xlarge")
	T3_Large      = InstanceType("t3.large")
	T3_Medium     = InstanceType("t3.medium")
	T3_Micro      = InstanceType("t3.micro")
	T3_Nano       = InstanceType("t3.nano")
	T3_Small      = InstanceType("t3.small")
	T3_XLarge     = InstanceType("t3.xlarge")
	T3a_2XLarge   = InstanceType("t3a.2xlarge")
	T3a_Large     = InstanceType("t3a.large")
	T3a_Medium    = InstanceType("t3a.medium")
	T3a_Micro     = InstanceType("t3a.micro")
	T3a_Nano      = InstanceType("t3a.nano")
	T3a_Small     = InstanceType("t3a.small")
	T3a_XLarge    = InstanceType("t3a.xlarge")
	U_12tb1Metal  = InstanceType("u-12tb1.metal")
	U_6tb1Metal   = InstanceType("u-6tb1.metal")
	U_9tb1Metal   = InstanceType("u-9tb1.metal")
	X1_16XLarge   = InstanceType("x1.16xlarge")
	X1_32XLarge   = InstanceType("x1.32xlarge")
	X1e_16XLarge  = InstanceType("x1e.16xlarge")
	X1e_2XLarge   = InstanceType("x1e.2xlarge")
	X1e_32XLarge  = InstanceType("x1e.32xlarge")
	X1e_4XLarge   = InstanceType("x1e.4xlarge")
	X1e_8XLarge   = InstanceType("x1e.8xlarge")
	X1e_XLarge    = InstanceType("x1e.xlarge")
	Z1d_12XLarge  = InstanceType("z1d.12xlarge")
	Z1d_2XLarge   = InstanceType("z1d.2xlarge")
	Z1d_3XLarge   = InstanceType("z1d.3xlarge")
	Z1d_6XLarge   = InstanceType("z1d.6xlarge")
	Z1d_Large     = InstanceType("z1d.large")
	Z1d_XLarge    = InstanceType("z1d.xlarge")
)

func (InstanceType) possibleValues() map[InstanceType]bool {
	return map[InstanceType]bool{
		A1_2XLarge:    true,
		A1_4XLarge:    true,
		A1_Large:      true,
		A1_Medium:     true,
		A1_XLarge:     true,
		C3_2XLarge:    true,
		C3_4XLarge:    true,
		C3_8XLarge:    true,
		C3_Large:      true,
		C3_XLarge:     true,
		C4_2XLarge:    true,
		C4_4XLarge:    true,
		C4_8XLarge:    true,
		C4_Large:      true,
		C4_XLarge:     true,
		C5_18XLarge:   true,
		C5_2XLarge:    true,
		C5_4XLarge:    true,
		C5_9XLarge:    true,
		C5_Large:      true,
		C5_XLarge:     true,
		C5a_12XLarge:  true,
		C5a_16XLarge:  true,
		C5a_2XLarge:   true,
		C5a_24XLarge:  true,
		C5a_4XLarge:   true,
		C5a_8XLarge:   true,
		C5a_Large:     true,
		C5a_XLarge:    true,
		C5d_18XLarge:  true,
		C5d_2XLarge:   true,
		C5d_4XLarge:   true,
		C5d_9XLarge:   true,
		C5d_Large:     true,
		C5d_XLarge:    true,
		C5n_18XLarge:  true,
		C5n_2XLarge:   true,
		C5n_4XLarge:   true,
		C5n_9XLarge:   true,
		C5n_Large:     true,
		C5n_XLarge:    true,
		D2_2XLarge:    true,
		D2_4XLarge:    true,
		D2_8XLarge:    true,
		D2_XLarge:     true,
		F1_16XLarge:   true,
		F1_2XLarge:    true,
		G2_2XLarge:    true,
		G2_8XLarge:    true,
		G3_16XLarge:   true,
		G3_4XLarge:    true,
		G3_8XLarge:    true,
		G3s_XLarge:    true,
		H1_16XLarge:   true,
		H1_2XLarge:    true,
		H1_4XLarge:    true,
		H1_8XLarge:    true,
		Hs1_8XLarge:   true,
		I3_16XLarge:   true,
		I3_2XLarge:    true,
		I3_4XLarge:    true,
		I3_8XLarge:    true,
		I3_Large:      true,
		I3_XLarge:     true,
		I3_Metal:      true,
		M3_2XLarge:    true,
		M3_Large:      true,
		M3_Medium:     true,
		M3_XLarge:     true,
		M4_10XLarge:   true,
		M4_16XLarge:   true,
		M4_2XLarge:    true,
		M4_4XLarge:    true,
		M4_Large:      true,
		M4_XLarge:     true,
		M5_Large:      true,
		M5_XLarge:     true,
		M5_2XLarge:    true,
		M5_4XLarge:    true,
		M5_12XLarge:   true,
		M5_24XLarge:   true,
		M5d_Large:     true,
		M5d_XLarge:    true,
		M5d_2XLarge:   true,
		M5d_4XLarge:   true,
		M5d_12XLarge:  true,
		M5d_24XLarge:  true,
		M5a_12XLarge:  true,
		M5a_24XLarge:  true,
		M5a_2XLarge:   true,
		M5a_4XLarge:   true,
		M5a_Large:     true,
		M5a_XLarge:    true,
		P2_16XLarge:   true,
		P2_8XLarge:    true,
		P2_XLarge:     true,
		P3_16XLarge:   true,
		P3_2XLarge:    true,
		P3_8XLarge:    true,
		P3dn_24XLarge: true,
		R3_2XLarge:    true,
		R3_4XLarge:    true,
		R3_8XLarge:    true,
		R3_Large:      true,
		R3_XLarge:     true,
		R4_16XLarge:   true,
		R4_2XLarge:    true,
		R4_4XLarge:    true,
		R4_8XLarge:    true,
		R4_Large:      true,
		R4_XLarge:     true,
		R5_12XLarge:   true,
		R5_24XLarge:   true,
		R5_2XLarge:    true,
		R5_4XLarge:    true,
		R5_Large:      true,
		R5_XLarge:     true,
		R5a_12XLarge:  true,
		R5a_24XLarge:  true,
		R5a_2XLarge:   true,
		R5a_4XLarge:   true,
		R5a_Large:     true,
		R5a_XLarge:    true,
		R5d_12XLarge:  true,
		R5d_24XLarge:  true,
		R5d_2XLarge:   true,
		R5d_4XLarge:   true,
		R5d_Large:     true,
		R5d_XLarge:    true,
		T2_2XLarge:    true,
		T2_Large:      true,
		T2_Medium:     true,
		T2_Micro:      true,
		T2_Nano:       true,
		T2_Small:      true,
		T2_XLarge:     true,
		T3_2XLarge:    true,
		T3_Large:      true,
		T3_Medium:     true,
		T3_Micro:      true,
		T3_Nano:       true,
		T3_Small:      true,
		T3_XLarge:     true,
		T3a_2XLarge:   true,
		T3a_Large:     true,
		T3a_Medium:    true,
		T3a_Micro:     true,
		T3a_Nano:      true,
		T3a_Small:     true,
		T3a_XLarge:    true,
		U_12tb1Metal:  true,
		U_6tb1Metal:   true,
		U_9tb1Metal:   true,
		X1_16XLarge:   true,
		X1_32XLarge:   true,
		X1e_16XLarge:  true,
		X1e_2XLarge:   true,
		X1e_32XLarge:  true,
		X1e_4XLarge:   true,
		X1e_8XLarge:   true,
		X1e_XLarge:    true,
		Z1d_12XLarge:  true,
		Z1d_2XLarge:   true,
		Z1d_3XLarge:   true,
		Z1d_6XLarge:   true,
		Z1d_Large:     true,
		Z1d_XLarge:    true,
	}
}

func (e InstanceType) Validate() error {
	if !e.possibleValues()[e] {
		return fmt.Errorf("unexpected value: %v", e)
	}
	return nil
}

func (InstanceType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e InstanceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e InstanceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e InstanceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

// The strategy of the placement group determines how the instances are organized within the group.
// See https://docs.aws.amazon.com/cli/latest/reference/ec2/create-placement-group.html
type PlacementStrategy pulumi.String

const (
	// A `spread` placement group places instances on distinct hardware.
	Spread = PlacementStrategy("spread")
	// A `cluster` placement group is a logical grouping of instances within a single
	// Availability Zone that benefit from low network latency, high network throughput.
	Cluster = PlacementStrategy("cluster")
)

func (PlacementStrategy) possibleValues() map[PlacementStrategy]bool {
	return map[PlacementStrategy]bool{
		Spread:  true,
		Cluster: true,
	}
}

func (e PlacementStrategy) Validate() error {
	if !e.possibleValues()[e] {
		return fmt.Errorf("unexpected value: %v", e)
	}
	return nil
}

func (PlacementStrategy) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e PlacementStrategy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PlacementStrategy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PlacementStrategy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PlacementStrategy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ProtocolType pulumi.String

const (
	All  = ProtocolType("all")
	TCP  = ProtocolType("tcp")
	UDP  = ProtocolType("udp")
	ICMP = ProtocolType("icmp")
)

func (ProtocolType) possibleValues() map[ProtocolType]bool {
	return map[ProtocolType]bool{
		All:  true,
		TCP:  true,
		UDP:  true,
		ICMP: true,
	}
}

func (e ProtocolType) Validate() error {
	if !e.possibleValues()[e] {
		return fmt.Errorf("unexpected value: %v", e)
	}
	return nil
}

func (ProtocolType) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e ProtocolType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProtocolType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProtocolType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ProtocolType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type Tenancy pulumi.String

const (
	Default   = Tenancy("default")
	Dedicated = Tenancy("dedicated")
)

func (Tenancy) possibleValues() map[Tenancy]bool {
	return map[Tenancy]bool{
		Default:   true,
		Dedicated: true,
	}
}

func (e Tenancy) Validate() error {
	if !e.possibleValues()[e] {
		return fmt.Errorf("unexpected value: %v", e)
	}
	return nil
}

func (Tenancy) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e Tenancy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Tenancy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Tenancy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Tenancy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}
