// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package getRouteTableAssociation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type GetRouteTableAssociation struct {
	// The id of an Internet Gateway or Virtual Private Gateway which is connected to the Route Table (not exported if not passed as a parameter).
	GatewayId string `pulumi:"gatewayId"`
	// If the Association due to the Main Route Table.
	Main bool `pulumi:"main"`
	// The Association ID.
	RouteTableAssociationId string `pulumi:"routeTableAssociationId"`
	// The id of the specific Route Table to retrieve.
	RouteTableId string `pulumi:"routeTableId"`
	// The id of a Subnet which is connected to the Route Table (not exported if not passed as a parameter).
	SubnetId string `pulumi:"subnetId"`
}

type GetRouteTableAssociationInput interface {
	pulumi.Input

	ToGetRouteTableAssociationOutput() GetRouteTableAssociationOutput
	ToGetRouteTableAssociationOutputWithContext(context.Context) GetRouteTableAssociationOutput
}

type GetRouteTableAssociationArgs struct {
	// The id of an Internet Gateway or Virtual Private Gateway which is connected to the Route Table (not exported if not passed as a parameter).
	GatewayId pulumi.StringInput `pulumi:"gatewayId"`
	// If the Association due to the Main Route Table.
	Main pulumi.BoolInput `pulumi:"main"`
	// The Association ID.
	RouteTableAssociationId pulumi.StringInput `pulumi:"routeTableAssociationId"`
	// The id of the specific Route Table to retrieve.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// The id of a Subnet which is connected to the Route Table (not exported if not passed as a parameter).
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetRouteTableAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableAssociation)(nil)).Elem()
}

func (i GetRouteTableAssociationArgs) ToGetRouteTableAssociationOutput() GetRouteTableAssociationOutput {
	return i.ToGetRouteTableAssociationOutputWithContext(context.Background())
}

func (i GetRouteTableAssociationArgs) ToGetRouteTableAssociationOutputWithContext(ctx context.Context) GetRouteTableAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableAssociationOutput)
}

type GetRouteTableAssociationArrayInput interface {
	pulumi.Input

	ToGetRouteTableAssociationArrayOutput() GetRouteTableAssociationArrayOutput
	ToGetRouteTableAssociationArrayOutputWithContext(context.Context) GetRouteTableAssociationArrayOutput
}

type GetRouteTableAssociationArray []GetRouteTableAssociationInput

func (GetRouteTableAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableAssociation)(nil)).Elem()
}

func (i GetRouteTableAssociationArray) ToGetRouteTableAssociationArrayOutput() GetRouteTableAssociationArrayOutput {
	return i.ToGetRouteTableAssociationArrayOutputWithContext(context.Background())
}

func (i GetRouteTableAssociationArray) ToGetRouteTableAssociationArrayOutputWithContext(ctx context.Context) GetRouteTableAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableAssociationArrayOutput)
}

type GetRouteTableAssociationOutput struct { *pulumi.OutputState }

func (GetRouteTableAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableAssociation)(nil)).Elem()
}

func (o GetRouteTableAssociationOutput) ToGetRouteTableAssociationOutput() GetRouteTableAssociationOutput {
	return o
}

func (o GetRouteTableAssociationOutput) ToGetRouteTableAssociationOutputWithContext(ctx context.Context) GetRouteTableAssociationOutput {
	return o
}

// The id of an Internet Gateway or Virtual Private Gateway which is connected to the Route Table (not exported if not passed as a parameter).
func (o GetRouteTableAssociationOutput) GatewayId() pulumi.StringOutput {
	return o.ApplyT(func (v GetRouteTableAssociation) string { return v.GatewayId }).(pulumi.StringOutput)
}

// If the Association due to the Main Route Table.
func (o GetRouteTableAssociationOutput) Main() pulumi.BoolOutput {
	return o.ApplyT(func (v GetRouteTableAssociation) bool { return v.Main }).(pulumi.BoolOutput)
}

// The Association ID.
func (o GetRouteTableAssociationOutput) RouteTableAssociationId() pulumi.StringOutput {
	return o.ApplyT(func (v GetRouteTableAssociation) string { return v.RouteTableAssociationId }).(pulumi.StringOutput)
}

// The id of the specific Route Table to retrieve.
func (o GetRouteTableAssociationOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func (v GetRouteTableAssociation) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// The id of a Subnet which is connected to the Route Table (not exported if not passed as a parameter).
func (o GetRouteTableAssociationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func (v GetRouteTableAssociation) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetRouteTableAssociationArrayOutput struct { *pulumi.OutputState}

func (GetRouteTableAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableAssociation)(nil)).Elem()
}

func (o GetRouteTableAssociationArrayOutput) ToGetRouteTableAssociationArrayOutput() GetRouteTableAssociationArrayOutput {
	return o
}

func (o GetRouteTableAssociationArrayOutput) ToGetRouteTableAssociationArrayOutputWithContext(ctx context.Context) GetRouteTableAssociationArrayOutput {
	return o
}

func (o GetRouteTableAssociationArrayOutput) Index(i pulumi.IntInput) GetRouteTableAssociationOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetRouteTableAssociation {
		return vs[0].([]GetRouteTableAssociation)[vs[1].(int)]
	}).(GetRouteTableAssociationOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRouteTableAssociationOutput{})
	pulumi.RegisterOutputType(GetRouteTableAssociationArrayOutput{})
}
