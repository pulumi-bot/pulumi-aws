// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package getSubnetFilter

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type GetSubnetFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
	// For example, if matching against tag `Name`, use:
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A subnet will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetSubnetFilterInput interface {
	pulumi.Input

	ToGetSubnetFilterOutput() GetSubnetFilterOutput
	ToGetSubnetFilterOutputWithContext(context.Context) GetSubnetFilterOutput
}

type GetSubnetFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
	// For example, if matching against tag `Name`, use:
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A subnet will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSubnetFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetFilter)(nil)).Elem()
}

func (i GetSubnetFilterArgs) ToGetSubnetFilterOutput() GetSubnetFilterOutput {
	return i.ToGetSubnetFilterOutputWithContext(context.Background())
}

func (i GetSubnetFilterArgs) ToGetSubnetFilterOutputWithContext(ctx context.Context) GetSubnetFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetFilterOutput)
}

type GetSubnetFilterArrayInput interface {
	pulumi.Input

	ToGetSubnetFilterArrayOutput() GetSubnetFilterArrayOutput
	ToGetSubnetFilterArrayOutputWithContext(context.Context) GetSubnetFilterArrayOutput
}

type GetSubnetFilterArray []GetSubnetFilterInput

func (GetSubnetFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetFilter)(nil)).Elem()
}

func (i GetSubnetFilterArray) ToGetSubnetFilterArrayOutput() GetSubnetFilterArrayOutput {
	return i.ToGetSubnetFilterArrayOutputWithContext(context.Background())
}

func (i GetSubnetFilterArray) ToGetSubnetFilterArrayOutputWithContext(ctx context.Context) GetSubnetFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetFilterArrayOutput)
}

type GetSubnetFilterOutput struct { *pulumi.OutputState }

func (GetSubnetFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetFilter)(nil)).Elem()
}

func (o GetSubnetFilterOutput) ToGetSubnetFilterOutput() GetSubnetFilterOutput {
	return o
}

func (o GetSubnetFilterOutput) ToGetSubnetFilterOutputWithContext(ctx context.Context) GetSubnetFilterOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
// For example, if matching against tag `Name`, use:
func (o GetSubnetFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetSubnetFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A subnet will be selected if any one of the given values matches.
func (o GetSubnetFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetSubnetFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSubnetFilterArrayOutput struct { *pulumi.OutputState}

func (GetSubnetFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetFilter)(nil)).Elem()
}

func (o GetSubnetFilterArrayOutput) ToGetSubnetFilterArrayOutput() GetSubnetFilterArrayOutput {
	return o
}

func (o GetSubnetFilterArrayOutput) ToGetSubnetFilterArrayOutputWithContext(ctx context.Context) GetSubnetFilterArrayOutput {
	return o
}

func (o GetSubnetFilterArrayOutput) Index(i pulumi.IntInput) GetSubnetFilterOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetSubnetFilter {
		return vs[0].([]GetSubnetFilter)[vs[1].(int)]
	}).(GetSubnetFilterOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSubnetFilterOutput{})
	pulumi.RegisterOutputType(GetSubnetFilterArrayOutput{})
}
