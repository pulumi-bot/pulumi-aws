// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type CapacityReservation struct {
	pulumi.CustomResourceState

	Arn                   pulumi.StringOutput    `pulumi:"arn"`
	AvailabilityZone      pulumi.StringOutput    `pulumi:"availabilityZone"`
	EbsOptimized          pulumi.BoolPtrOutput   `pulumi:"ebsOptimized"`
	EndDate               pulumi.StringPtrOutput `pulumi:"endDate"`
	EndDateType           pulumi.StringPtrOutput `pulumi:"endDateType"`
	EphemeralStorage      pulumi.BoolPtrOutput   `pulumi:"ephemeralStorage"`
	InstanceCount         pulumi.IntOutput       `pulumi:"instanceCount"`
	InstanceMatchCriteria pulumi.StringPtrOutput `pulumi:"instanceMatchCriteria"`
	InstancePlatform      pulumi.StringOutput    `pulumi:"instancePlatform"`
	InstanceType          pulumi.StringOutput    `pulumi:"instanceType"`
	Tags                  pulumi.StringMapOutput `pulumi:"tags"`
	Tenancy               pulumi.StringPtrOutput `pulumi:"tenancy"`
}

// NewCapacityReservation registers a new resource with the given unique name, arguments, and options.
func NewCapacityReservation(ctx *pulumi.Context,
	name string, args *CapacityReservationArgs, opts ...pulumi.ResourceOption) (*CapacityReservation, error) {
	if args == nil || args.AvailabilityZone == nil {
		return nil, errors.New("missing required argument 'AvailabilityZone'")
	}
	if args == nil || args.InstanceCount == nil {
		return nil, errors.New("missing required argument 'InstanceCount'")
	}
	if args == nil || args.InstancePlatform == nil {
		return nil, errors.New("missing required argument 'InstancePlatform'")
	}
	if args == nil || args.InstanceType == nil {
		return nil, errors.New("missing required argument 'InstanceType'")
	}
	if args == nil {
		args = &CapacityReservationArgs{}
	}
	var resource CapacityReservation
	err := ctx.RegisterResource("aws:ec2/capacityReservation:CapacityReservation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCapacityReservation gets an existing CapacityReservation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCapacityReservation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CapacityReservationState, opts ...pulumi.ResourceOption) (*CapacityReservation, error) {
	var resource CapacityReservation
	err := ctx.ReadResource("aws:ec2/capacityReservation:CapacityReservation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CapacityReservation resources.
type capacityReservationState struct {
	Arn                   *string           `pulumi:"arn"`
	AvailabilityZone      *string           `pulumi:"availabilityZone"`
	EbsOptimized          *bool             `pulumi:"ebsOptimized"`
	EndDate               *string           `pulumi:"endDate"`
	EndDateType           *string           `pulumi:"endDateType"`
	EphemeralStorage      *bool             `pulumi:"ephemeralStorage"`
	InstanceCount         *int              `pulumi:"instanceCount"`
	InstanceMatchCriteria *string           `pulumi:"instanceMatchCriteria"`
	InstancePlatform      *string           `pulumi:"instancePlatform"`
	InstanceType          *string           `pulumi:"instanceType"`
	Tags                  map[string]string `pulumi:"tags"`
	Tenancy               *string           `pulumi:"tenancy"`
}

type CapacityReservationState struct {
	Arn                   pulumi.StringPtrInput
	AvailabilityZone      pulumi.StringPtrInput
	EbsOptimized          pulumi.BoolPtrInput
	EndDate               pulumi.StringPtrInput
	EndDateType           pulumi.StringPtrInput
	EphemeralStorage      pulumi.BoolPtrInput
	InstanceCount         pulumi.IntPtrInput
	InstanceMatchCriteria pulumi.StringPtrInput
	InstancePlatform      pulumi.StringPtrInput
	InstanceType          pulumi.StringPtrInput
	Tags                  pulumi.StringMapInput
	Tenancy               pulumi.StringPtrInput
}

func (CapacityReservationState) ElementType() reflect.Type {
	return reflect.TypeOf((*capacityReservationState)(nil)).Elem()
}

type capacityReservationArgs struct {
	AvailabilityZone      string            `pulumi:"availabilityZone"`
	EbsOptimized          *bool             `pulumi:"ebsOptimized"`
	EndDate               *string           `pulumi:"endDate"`
	EndDateType           *string           `pulumi:"endDateType"`
	EphemeralStorage      *bool             `pulumi:"ephemeralStorage"`
	InstanceCount         int               `pulumi:"instanceCount"`
	InstanceMatchCriteria *string           `pulumi:"instanceMatchCriteria"`
	InstancePlatform      string            `pulumi:"instancePlatform"`
	InstanceType          string            `pulumi:"instanceType"`
	Tags                  map[string]string `pulumi:"tags"`
	Tenancy               *string           `pulumi:"tenancy"`
}

// The set of arguments for constructing a CapacityReservation resource.
type CapacityReservationArgs struct {
	AvailabilityZone      pulumi.StringInput
	EbsOptimized          pulumi.BoolPtrInput
	EndDate               pulumi.StringPtrInput
	EndDateType           pulumi.StringPtrInput
	EphemeralStorage      pulumi.BoolPtrInput
	InstanceCount         pulumi.IntInput
	InstanceMatchCriteria pulumi.StringPtrInput
	InstancePlatform      pulumi.StringInput
	InstanceType          pulumi.StringInput
	Tags                  pulumi.StringMapInput
	Tenancy               pulumi.StringPtrInput
}

func (CapacityReservationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*capacityReservationArgs)(nil)).Elem()
}
