// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetNetworkAcls(ctx *pulumi.Context, args *GetNetworkAclsArgs, opts ...pulumi.InvokeOption) (*GetNetworkAclsResult, error) {
	var rv GetNetworkAclsResult
	err := ctx.Invoke("aws:ec2/getNetworkAcls:getNetworkAcls", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkAcls.
type GetNetworkAclsArgs struct {
	// Custom filter block as described below.
	Filters []GetNetworkAclsFilter `pulumi:"filters"`
	// A map of tags, each pair of which must exactly match
	// a pair on the desired network ACLs.
	Tags map[string]string `pulumi:"tags"`
	// The VPC ID that you want to filter from.
	VpcId *string `pulumi:"vpcId"`
}

// A collection of values returned by getNetworkAcls.
type GetNetworkAclsResult struct {
	Filters []GetNetworkAclsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of all the network ACL ids found. This data source will fail if none are found.
	Ids   []string          `pulumi:"ids"`
	Tags  map[string]string `pulumi:"tags"`
	VpcId *string           `pulumi:"vpcId"`
}

func GetNetworkAclsApply(ctx *pulumi.Context, args GetNetworkAclsApplyInput, opts ...pulumi.InvokeOption) GetNetworkAclsResultOutput {
	return args.ToGetNetworkAclsApplyOutput().ApplyT(func(v GetNetworkAclsArgs) (GetNetworkAclsResult, error) {
		r, err := GetNetworkAcls(ctx, &v, opts...)
		return *r, err

	}).(GetNetworkAclsResultOutput)
}

// GetNetworkAclsApplyInput is an input type that accepts GetNetworkAclsApplyArgs and GetNetworkAclsApplyOutput values.
// You can construct a concrete instance of `GetNetworkAclsApplyInput` via:
//
//          GetNetworkAclsApplyArgs{...}
type GetNetworkAclsApplyInput interface {
	pulumi.Input

	ToGetNetworkAclsApplyOutput() GetNetworkAclsApplyOutput
	ToGetNetworkAclsApplyOutputWithContext(context.Context) GetNetworkAclsApplyOutput
}

// A collection of arguments for invoking getNetworkAcls.
type GetNetworkAclsApplyArgs struct {
	// Custom filter block as described below.
	Filters GetNetworkAclsFilterArrayInput `pulumi:"filters"`
	// A map of tags, each pair of which must exactly match
	// a pair on the desired network ACLs.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The VPC ID that you want to filter from.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (GetNetworkAclsApplyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsArgs)(nil)).Elem()
}

func (i GetNetworkAclsApplyArgs) ToGetNetworkAclsApplyOutput() GetNetworkAclsApplyOutput {
	return i.ToGetNetworkAclsApplyOutputWithContext(context.Background())
}

func (i GetNetworkAclsApplyArgs) ToGetNetworkAclsApplyOutputWithContext(ctx context.Context) GetNetworkAclsApplyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAclsApplyOutput)
}

// A collection of arguments for invoking getNetworkAcls.
type GetNetworkAclsApplyOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsApplyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsArgs)(nil)).Elem()
}

func (o GetNetworkAclsApplyOutput) ToGetNetworkAclsApplyOutput() GetNetworkAclsApplyOutput {
	return o
}

func (o GetNetworkAclsApplyOutput) ToGetNetworkAclsApplyOutputWithContext(ctx context.Context) GetNetworkAclsApplyOutput {
	return o
}

// Custom filter block as described below.
func (o GetNetworkAclsApplyOutput) Filters() GetNetworkAclsFilterArrayOutput {
	return o.ApplyT(func(v GetNetworkAclsArgs) []GetNetworkAclsFilter { return v.Filters }).(GetNetworkAclsFilterArrayOutput)
}

// A map of tags, each pair of which must exactly match
// a pair on the desired network ACLs.
func (o GetNetworkAclsApplyOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetNetworkAclsArgs) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The VPC ID that you want to filter from.
func (o GetNetworkAclsApplyOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworkAclsArgs) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

// A collection of values returned by getNetworkAcls.
type GetNetworkAclsResultOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsResult)(nil)).Elem()
}

func (o GetNetworkAclsResultOutput) ToGetNetworkAclsResultOutput() GetNetworkAclsResultOutput {
	return o
}

func (o GetNetworkAclsResultOutput) ToGetNetworkAclsResultOutputWithContext(ctx context.Context) GetNetworkAclsResultOutput {
	return o
}

func (o GetNetworkAclsResultOutput) Filters() GetNetworkAclsFilterArrayOutput {
	return o.ApplyT(func(v GetNetworkAclsResult) []GetNetworkAclsFilter { return v.Filters }).(GetNetworkAclsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetNetworkAclsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of all the network ACL ids found. This data source will fail if none are found.
func (o GetNetworkAclsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkAclsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetNetworkAclsResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetNetworkAclsResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o GetNetworkAclsResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNetworkAclsResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNetworkAclsApplyOutput{})
	pulumi.RegisterOutputType(GetNetworkAclsResultOutput{})
}
