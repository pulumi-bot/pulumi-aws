// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package DefaultNetworkAclEgress

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type DefaultNetworkAclEgress struct {
	// The action to take.
	Action string `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort int `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode *int `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType *int `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol string `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo int `pulumi:"ruleNo"`
	// The to port to match.
	ToPort int `pulumi:"toPort"`
}

type DefaultNetworkAclEgressInput interface {
	pulumi.Input

	ToDefaultNetworkAclEgressOutput() DefaultNetworkAclEgressOutput
	ToDefaultNetworkAclEgressOutputWithContext(context.Context) DefaultNetworkAclEgressOutput
}

type DefaultNetworkAclEgressArgs struct {
	// The action to take.
	Action pulumi.StringInput `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode pulumi.IntPtrInput `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType pulumi.IntPtrInput `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo pulumi.IntInput `pulumi:"ruleNo"`
	// The to port to match.
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (DefaultNetworkAclEgressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultNetworkAclEgress)(nil)).Elem()
}

func (i DefaultNetworkAclEgressArgs) ToDefaultNetworkAclEgressOutput() DefaultNetworkAclEgressOutput {
	return i.ToDefaultNetworkAclEgressOutputWithContext(context.Background())
}

func (i DefaultNetworkAclEgressArgs) ToDefaultNetworkAclEgressOutputWithContext(ctx context.Context) DefaultNetworkAclEgressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultNetworkAclEgressOutput)
}

type DefaultNetworkAclEgressArrayInput interface {
	pulumi.Input

	ToDefaultNetworkAclEgressArrayOutput() DefaultNetworkAclEgressArrayOutput
	ToDefaultNetworkAclEgressArrayOutputWithContext(context.Context) DefaultNetworkAclEgressArrayOutput
}

type DefaultNetworkAclEgressArray []DefaultNetworkAclEgressInput

func (DefaultNetworkAclEgressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultNetworkAclEgress)(nil)).Elem()
}

func (i DefaultNetworkAclEgressArray) ToDefaultNetworkAclEgressArrayOutput() DefaultNetworkAclEgressArrayOutput {
	return i.ToDefaultNetworkAclEgressArrayOutputWithContext(context.Background())
}

func (i DefaultNetworkAclEgressArray) ToDefaultNetworkAclEgressArrayOutputWithContext(ctx context.Context) DefaultNetworkAclEgressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultNetworkAclEgressArrayOutput)
}

type DefaultNetworkAclEgressOutput struct { *pulumi.OutputState }

func (DefaultNetworkAclEgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultNetworkAclEgress)(nil)).Elem()
}

func (o DefaultNetworkAclEgressOutput) ToDefaultNetworkAclEgressOutput() DefaultNetworkAclEgressOutput {
	return o
}

func (o DefaultNetworkAclEgressOutput) ToDefaultNetworkAclEgressOutputWithContext(ctx context.Context) DefaultNetworkAclEgressOutput {
	return o
}

// The action to take.
func (o DefaultNetworkAclEgressOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func (v DefaultNetworkAclEgress) string { return v.Action }).(pulumi.StringOutput)
}

// The CIDR block to match. This must be a
// valid network mask.
func (o DefaultNetworkAclEgressOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func (v DefaultNetworkAclEgress) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// The from port to match.
func (o DefaultNetworkAclEgressOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func (v DefaultNetworkAclEgress) int { return v.FromPort }).(pulumi.IntOutput)
}

// The ICMP type code to be used. Default 0.
func (o DefaultNetworkAclEgressOutput) IcmpCode() pulumi.IntPtrOutput {
	return o.ApplyT(func (v DefaultNetworkAclEgress) *int { return v.IcmpCode }).(pulumi.IntPtrOutput)
}

// The ICMP type to be used. Default 0.
func (o DefaultNetworkAclEgressOutput) IcmpType() pulumi.IntPtrOutput {
	return o.ApplyT(func (v DefaultNetworkAclEgress) *int { return v.IcmpType }).(pulumi.IntPtrOutput)
}

// The IPv6 CIDR block.
func (o DefaultNetworkAclEgressOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func (v DefaultNetworkAclEgress) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// The protocol to match. If using the -1 'all'
// protocol, you must specify a from and to port of 0.
func (o DefaultNetworkAclEgressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func (v DefaultNetworkAclEgress) string { return v.Protocol }).(pulumi.StringOutput)
}

// The rule number. Used for ordering.
func (o DefaultNetworkAclEgressOutput) RuleNo() pulumi.IntOutput {
	return o.ApplyT(func (v DefaultNetworkAclEgress) int { return v.RuleNo }).(pulumi.IntOutput)
}

// The to port to match.
func (o DefaultNetworkAclEgressOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func (v DefaultNetworkAclEgress) int { return v.ToPort }).(pulumi.IntOutput)
}

type DefaultNetworkAclEgressArrayOutput struct { *pulumi.OutputState}

func (DefaultNetworkAclEgressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultNetworkAclEgress)(nil)).Elem()
}

func (o DefaultNetworkAclEgressArrayOutput) ToDefaultNetworkAclEgressArrayOutput() DefaultNetworkAclEgressArrayOutput {
	return o
}

func (o DefaultNetworkAclEgressArrayOutput) ToDefaultNetworkAclEgressArrayOutputWithContext(ctx context.Context) DefaultNetworkAclEgressArrayOutput {
	return o
}

func (o DefaultNetworkAclEgressArrayOutput) Index(i pulumi.IntInput) DefaultNetworkAclEgressOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) DefaultNetworkAclEgress {
		return vs[0].([]DefaultNetworkAclEgress)[vs[1].(int)]
	}).(DefaultNetworkAclEgressOutput)
}

func init() {
	pulumi.RegisterOutputType(DefaultNetworkAclEgressOutput{})
	pulumi.RegisterOutputType(DefaultNetworkAclEgressArrayOutput{})
}
