// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type FlowLog struct {
	pulumi.CustomResourceState

	Arn                pulumi.StringOutput    `pulumi:"arn"`
	EniId              pulumi.StringPtrOutput `pulumi:"eniId"`
	IamRoleArn         pulumi.StringPtrOutput `pulumi:"iamRoleArn"`
	LogDestination     pulumi.StringOutput    `pulumi:"logDestination"`
	LogDestinationType pulumi.StringPtrOutput `pulumi:"logDestinationType"`
	LogFormat          pulumi.StringOutput    `pulumi:"logFormat"`
	// Deprecated: use 'log_destination' argument instead
	LogGroupName           pulumi.StringOutput    `pulumi:"logGroupName"`
	MaxAggregationInterval pulumi.IntPtrOutput    `pulumi:"maxAggregationInterval"`
	SubnetId               pulumi.StringPtrOutput `pulumi:"subnetId"`
	Tags                   pulumi.StringMapOutput `pulumi:"tags"`
	TrafficType            pulumi.StringOutput    `pulumi:"trafficType"`
	VpcId                  pulumi.StringPtrOutput `pulumi:"vpcId"`
}

// NewFlowLog registers a new resource with the given unique name, arguments, and options.
func NewFlowLog(ctx *pulumi.Context,
	name string, args *FlowLogArgs, opts ...pulumi.ResourceOption) (*FlowLog, error) {
	if args == nil || args.TrafficType == nil {
		return nil, errors.New("missing required argument 'TrafficType'")
	}
	if args == nil {
		args = &FlowLogArgs{}
	}
	var resource FlowLog
	err := ctx.RegisterResource("aws:ec2/flowLog:FlowLog", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFlowLog gets an existing FlowLog resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFlowLog(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FlowLogState, opts ...pulumi.ResourceOption) (*FlowLog, error) {
	var resource FlowLog
	err := ctx.ReadResource("aws:ec2/flowLog:FlowLog", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FlowLog resources.
type flowLogState struct {
	Arn                *string `pulumi:"arn"`
	EniId              *string `pulumi:"eniId"`
	IamRoleArn         *string `pulumi:"iamRoleArn"`
	LogDestination     *string `pulumi:"logDestination"`
	LogDestinationType *string `pulumi:"logDestinationType"`
	LogFormat          *string `pulumi:"logFormat"`
	// Deprecated: use 'log_destination' argument instead
	LogGroupName           *string           `pulumi:"logGroupName"`
	MaxAggregationInterval *int              `pulumi:"maxAggregationInterval"`
	SubnetId               *string           `pulumi:"subnetId"`
	Tags                   map[string]string `pulumi:"tags"`
	TrafficType            *string           `pulumi:"trafficType"`
	VpcId                  *string           `pulumi:"vpcId"`
}

type FlowLogState struct {
	Arn                pulumi.StringPtrInput
	EniId              pulumi.StringPtrInput
	IamRoleArn         pulumi.StringPtrInput
	LogDestination     pulumi.StringPtrInput
	LogDestinationType pulumi.StringPtrInput
	LogFormat          pulumi.StringPtrInput
	// Deprecated: use 'log_destination' argument instead
	LogGroupName           pulumi.StringPtrInput
	MaxAggregationInterval pulumi.IntPtrInput
	SubnetId               pulumi.StringPtrInput
	Tags                   pulumi.StringMapInput
	TrafficType            pulumi.StringPtrInput
	VpcId                  pulumi.StringPtrInput
}

func (FlowLogState) ElementType() reflect.Type {
	return reflect.TypeOf((*flowLogState)(nil)).Elem()
}

type flowLogArgs struct {
	EniId              *string `pulumi:"eniId"`
	IamRoleArn         *string `pulumi:"iamRoleArn"`
	LogDestination     *string `pulumi:"logDestination"`
	LogDestinationType *string `pulumi:"logDestinationType"`
	LogFormat          *string `pulumi:"logFormat"`
	// Deprecated: use 'log_destination' argument instead
	LogGroupName           *string           `pulumi:"logGroupName"`
	MaxAggregationInterval *int              `pulumi:"maxAggregationInterval"`
	SubnetId               *string           `pulumi:"subnetId"`
	Tags                   map[string]string `pulumi:"tags"`
	TrafficType            string            `pulumi:"trafficType"`
	VpcId                  *string           `pulumi:"vpcId"`
}

// The set of arguments for constructing a FlowLog resource.
type FlowLogArgs struct {
	EniId              pulumi.StringPtrInput
	IamRoleArn         pulumi.StringPtrInput
	LogDestination     pulumi.StringPtrInput
	LogDestinationType pulumi.StringPtrInput
	LogFormat          pulumi.StringPtrInput
	// Deprecated: use 'log_destination' argument instead
	LogGroupName           pulumi.StringPtrInput
	MaxAggregationInterval pulumi.IntPtrInput
	SubnetId               pulumi.StringPtrInput
	Tags                   pulumi.StringMapInput
	TrafficType            pulumi.StringInput
	VpcId                  pulumi.StringPtrInput
}

func (FlowLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*flowLogArgs)(nil)).Elem()
}
