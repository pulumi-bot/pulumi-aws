// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// `ec2.getSubnetIds` provides a set of ids for a vpcId
//
// This resource can be useful for getting back a set of subnet ids for a vpc.
//
// ## Example Usage
//
// The following shows outputing all cidr blocks for every subnet id in a vpc.
//
// The following example retrieves a set of all subnets in a VPC with a custom
// tag of `Tier` set to a value of "Private" so that the `ec2.Instance` resource
// can loop through the subnets, putting instances across availability zones.
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v2/go/aws/ec2"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := ec2.GetSubnetIds(ctx, &ec2.GetSubnetIdsArgs{
// 			VpcId: _var.Vpc_id,
// 			Tags: map[string]interface{}{
// 				"Tier": "Private",
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		var app []*ec2.Instance
// 		for key0, val0 := range data.Aws_subnet_ids.Example.Ids {
// 			__res, err := ec2.NewInstance(ctx, fmt.Sprintf("app-%v", key0), &ec2.InstanceArgs{
// 				Ami:          pulumi.String(_var.Ami),
// 				InstanceType: pulumi.String("t2.micro"),
// 				SubnetId:     pulumi.String(val0),
// 			})
// 			if err != nil {
// 				return err
// 			}
// 			app = append(app, __res)
// 		}
// 		return nil
// 	})
// }
// ```
func GetSubnetIds(ctx *pulumi.Context, args *GetSubnetIdsArgs, opts ...pulumi.InvokeOption) (*GetSubnetIdsResult, error) {
	var rv GetSubnetIdsResult
	err := ctx.Invoke("aws:ec2/getSubnetIds:getSubnetIds", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubnetIds.
type GetSubnetIdsArgs struct {
	// Custom filter block as described below.
	Filters []GetSubnetIdsFilter `pulumi:"filters"`
	// A map of tags, each pair of which must exactly match
	// a pair on the desired subnets.
	Tags map[string]string `pulumi:"tags"`
	// The VPC ID that you want to filter from.
	VpcId string `pulumi:"vpcId"`
}

// A collection of values returned by getSubnetIds.
type GetSubnetIdsResult struct {
	Filters []GetSubnetIdsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A set of all the subnet ids found. This data source will fail if none are found.
	Ids   []string          `pulumi:"ids"`
	Tags  map[string]string `pulumi:"tags"`
	VpcId string            `pulumi:"vpcId"`
}
