// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type TrafficMirrorTarget struct {
	pulumi.CustomResourceState

	Arn                    pulumi.StringOutput    `pulumi:"arn"`
	Description            pulumi.StringPtrOutput `pulumi:"description"`
	NetworkInterfaceId     pulumi.StringPtrOutput `pulumi:"networkInterfaceId"`
	NetworkLoadBalancerArn pulumi.StringPtrOutput `pulumi:"networkLoadBalancerArn"`
	Tags                   pulumi.StringMapOutput `pulumi:"tags"`
}

// NewTrafficMirrorTarget registers a new resource with the given unique name, arguments, and options.
func NewTrafficMirrorTarget(ctx *pulumi.Context,
	name string, args *TrafficMirrorTargetArgs, opts ...pulumi.ResourceOption) (*TrafficMirrorTarget, error) {
	if args == nil {
		args = &TrafficMirrorTargetArgs{}
	}
	var resource TrafficMirrorTarget
	err := ctx.RegisterResource("aws:ec2/trafficMirrorTarget:TrafficMirrorTarget", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTrafficMirrorTarget gets an existing TrafficMirrorTarget resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTrafficMirrorTarget(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TrafficMirrorTargetState, opts ...pulumi.ResourceOption) (*TrafficMirrorTarget, error) {
	var resource TrafficMirrorTarget
	err := ctx.ReadResource("aws:ec2/trafficMirrorTarget:TrafficMirrorTarget", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TrafficMirrorTarget resources.
type trafficMirrorTargetState struct {
	Arn                    *string           `pulumi:"arn"`
	Description            *string           `pulumi:"description"`
	NetworkInterfaceId     *string           `pulumi:"networkInterfaceId"`
	NetworkLoadBalancerArn *string           `pulumi:"networkLoadBalancerArn"`
	Tags                   map[string]string `pulumi:"tags"`
}

type TrafficMirrorTargetState struct {
	Arn                    pulumi.StringPtrInput
	Description            pulumi.StringPtrInput
	NetworkInterfaceId     pulumi.StringPtrInput
	NetworkLoadBalancerArn pulumi.StringPtrInput
	Tags                   pulumi.StringMapInput
}

func (TrafficMirrorTargetState) ElementType() reflect.Type {
	return reflect.TypeOf((*trafficMirrorTargetState)(nil)).Elem()
}

type trafficMirrorTargetArgs struct {
	Description            *string           `pulumi:"description"`
	NetworkInterfaceId     *string           `pulumi:"networkInterfaceId"`
	NetworkLoadBalancerArn *string           `pulumi:"networkLoadBalancerArn"`
	Tags                   map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a TrafficMirrorTarget resource.
type TrafficMirrorTargetArgs struct {
	Description            pulumi.StringPtrInput
	NetworkInterfaceId     pulumi.StringPtrInput
	NetworkLoadBalancerArn pulumi.StringPtrInput
	Tags                   pulumi.StringMapInput
}

func (TrafficMirrorTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*trafficMirrorTargetArgs)(nil)).Elem()
}
