// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type PeeringConnectionOptions struct {
	pulumi.CustomResourceState

	Accepter               PeeringConnectionOptionsAccepterOutput  `pulumi:"accepter"`
	Requester              PeeringConnectionOptionsRequesterOutput `pulumi:"requester"`
	VpcPeeringConnectionId pulumi.StringOutput                     `pulumi:"vpcPeeringConnectionId"`
}

// NewPeeringConnectionOptions registers a new resource with the given unique name, arguments, and options.
func NewPeeringConnectionOptions(ctx *pulumi.Context,
	name string, args *PeeringConnectionOptionsArgs, opts ...pulumi.ResourceOption) (*PeeringConnectionOptions, error) {
	if args == nil || args.VpcPeeringConnectionId == nil {
		return nil, errors.New("missing required argument 'VpcPeeringConnectionId'")
	}
	if args == nil {
		args = &PeeringConnectionOptionsArgs{}
	}
	var resource PeeringConnectionOptions
	err := ctx.RegisterResource("aws:ec2/peeringConnectionOptions:PeeringConnectionOptions", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPeeringConnectionOptions gets an existing PeeringConnectionOptions resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPeeringConnectionOptions(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PeeringConnectionOptionsState, opts ...pulumi.ResourceOption) (*PeeringConnectionOptions, error) {
	var resource PeeringConnectionOptions
	err := ctx.ReadResource("aws:ec2/peeringConnectionOptions:PeeringConnectionOptions", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PeeringConnectionOptions resources.
type peeringConnectionOptionsState struct {
	Accepter               *PeeringConnectionOptionsAccepter  `pulumi:"accepter"`
	Requester              *PeeringConnectionOptionsRequester `pulumi:"requester"`
	VpcPeeringConnectionId *string                            `pulumi:"vpcPeeringConnectionId"`
}

type PeeringConnectionOptionsState struct {
	Accepter               PeeringConnectionOptionsAccepterPtrInput
	Requester              PeeringConnectionOptionsRequesterPtrInput
	VpcPeeringConnectionId pulumi.StringPtrInput
}

func (PeeringConnectionOptionsState) ElementType() reflect.Type {
	return reflect.TypeOf((*peeringConnectionOptionsState)(nil)).Elem()
}

type peeringConnectionOptionsArgs struct {
	Accepter               *PeeringConnectionOptionsAccepter  `pulumi:"accepter"`
	Requester              *PeeringConnectionOptionsRequester `pulumi:"requester"`
	VpcPeeringConnectionId string                             `pulumi:"vpcPeeringConnectionId"`
}

// The set of arguments for constructing a PeeringConnectionOptions resource.
type PeeringConnectionOptionsArgs struct {
	Accepter               PeeringConnectionOptionsAccepterPtrInput
	Requester              PeeringConnectionOptionsRequesterPtrInput
	VpcPeeringConnectionId pulumi.StringInput
}

func (PeeringConnectionOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*peeringConnectionOptionsArgs)(nil)).Elem()
}
