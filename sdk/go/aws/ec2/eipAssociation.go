// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type EipAssociation struct {
	pulumi.CustomResourceState

	AllocationId       pulumi.StringOutput  `pulumi:"allocationId"`
	AllowReassociation pulumi.BoolPtrOutput `pulumi:"allowReassociation"`
	InstanceId         pulumi.StringOutput  `pulumi:"instanceId"`
	NetworkInterfaceId pulumi.StringOutput  `pulumi:"networkInterfaceId"`
	PrivateIpAddress   pulumi.StringOutput  `pulumi:"privateIpAddress"`
	PublicIp           pulumi.StringOutput  `pulumi:"publicIp"`
}

// NewEipAssociation registers a new resource with the given unique name, arguments, and options.
func NewEipAssociation(ctx *pulumi.Context,
	name string, args *EipAssociationArgs, opts ...pulumi.ResourceOption) (*EipAssociation, error) {
	if args == nil {
		args = &EipAssociationArgs{}
	}
	var resource EipAssociation
	err := ctx.RegisterResource("aws:ec2/eipAssociation:EipAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEipAssociation gets an existing EipAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEipAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EipAssociationState, opts ...pulumi.ResourceOption) (*EipAssociation, error) {
	var resource EipAssociation
	err := ctx.ReadResource("aws:ec2/eipAssociation:EipAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EipAssociation resources.
type eipAssociationState struct {
	AllocationId       *string `pulumi:"allocationId"`
	AllowReassociation *bool   `pulumi:"allowReassociation"`
	InstanceId         *string `pulumi:"instanceId"`
	NetworkInterfaceId *string `pulumi:"networkInterfaceId"`
	PrivateIpAddress   *string `pulumi:"privateIpAddress"`
	PublicIp           *string `pulumi:"publicIp"`
}

type EipAssociationState struct {
	AllocationId       pulumi.StringPtrInput
	AllowReassociation pulumi.BoolPtrInput
	InstanceId         pulumi.StringPtrInput
	NetworkInterfaceId pulumi.StringPtrInput
	PrivateIpAddress   pulumi.StringPtrInput
	PublicIp           pulumi.StringPtrInput
}

func (EipAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*eipAssociationState)(nil)).Elem()
}

type eipAssociationArgs struct {
	AllocationId       *string `pulumi:"allocationId"`
	AllowReassociation *bool   `pulumi:"allowReassociation"`
	InstanceId         *string `pulumi:"instanceId"`
	NetworkInterfaceId *string `pulumi:"networkInterfaceId"`
	PrivateIpAddress   *string `pulumi:"privateIpAddress"`
	PublicIp           *string `pulumi:"publicIp"`
}

// The set of arguments for constructing a EipAssociation resource.
type EipAssociationArgs struct {
	AllocationId       pulumi.StringPtrInput
	AllowReassociation pulumi.BoolPtrInput
	InstanceId         pulumi.StringPtrInput
	NetworkInterfaceId pulumi.StringPtrInput
	PrivateIpAddress   pulumi.StringPtrInput
	PublicIp           pulumi.StringPtrInput
}

func (EipAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*eipAssociationArgs)(nil)).Elem()
}
