// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AmiFromInstance struct {
	pulumi.CustomResourceState

	Architecture          pulumi.StringOutput                            `pulumi:"architecture"`
	Arn                   pulumi.StringOutput                            `pulumi:"arn"`
	Description           pulumi.StringPtrOutput                         `pulumi:"description"`
	EbsBlockDevices       AmiFromInstanceEbsBlockDeviceArrayOutput       `pulumi:"ebsBlockDevices"`
	EnaSupport            pulumi.BoolOutput                              `pulumi:"enaSupport"`
	EphemeralBlockDevices AmiFromInstanceEphemeralBlockDeviceArrayOutput `pulumi:"ephemeralBlockDevices"`
	ImageLocation         pulumi.StringOutput                            `pulumi:"imageLocation"`
	KernelId              pulumi.StringOutput                            `pulumi:"kernelId"`
	ManageEbsSnapshots    pulumi.BoolOutput                              `pulumi:"manageEbsSnapshots"`
	Name                  pulumi.StringOutput                            `pulumi:"name"`
	RamdiskId             pulumi.StringOutput                            `pulumi:"ramdiskId"`
	RootDeviceName        pulumi.StringOutput                            `pulumi:"rootDeviceName"`
	RootSnapshotId        pulumi.StringOutput                            `pulumi:"rootSnapshotId"`
	SnapshotWithoutReboot pulumi.BoolPtrOutput                           `pulumi:"snapshotWithoutReboot"`
	SourceInstanceId      pulumi.StringOutput                            `pulumi:"sourceInstanceId"`
	SriovNetSupport       pulumi.StringOutput                            `pulumi:"sriovNetSupport"`
	Tags                  pulumi.StringMapOutput                         `pulumi:"tags"`
	VirtualizationType    pulumi.StringOutput                            `pulumi:"virtualizationType"`
}

// NewAmiFromInstance registers a new resource with the given unique name, arguments, and options.
func NewAmiFromInstance(ctx *pulumi.Context,
	name string, args *AmiFromInstanceArgs, opts ...pulumi.ResourceOption) (*AmiFromInstance, error) {
	if args == nil || args.SourceInstanceId == nil {
		return nil, errors.New("missing required argument 'SourceInstanceId'")
	}
	if args == nil {
		args = &AmiFromInstanceArgs{}
	}
	var resource AmiFromInstance
	err := ctx.RegisterResource("aws:ec2/amiFromInstance:AmiFromInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAmiFromInstance gets an existing AmiFromInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAmiFromInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AmiFromInstanceState, opts ...pulumi.ResourceOption) (*AmiFromInstance, error) {
	var resource AmiFromInstance
	err := ctx.ReadResource("aws:ec2/amiFromInstance:AmiFromInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AmiFromInstance resources.
type amiFromInstanceState struct {
	Architecture          *string                               `pulumi:"architecture"`
	Arn                   *string                               `pulumi:"arn"`
	Description           *string                               `pulumi:"description"`
	EbsBlockDevices       []AmiFromInstanceEbsBlockDevice       `pulumi:"ebsBlockDevices"`
	EnaSupport            *bool                                 `pulumi:"enaSupport"`
	EphemeralBlockDevices []AmiFromInstanceEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	ImageLocation         *string                               `pulumi:"imageLocation"`
	KernelId              *string                               `pulumi:"kernelId"`
	ManageEbsSnapshots    *bool                                 `pulumi:"manageEbsSnapshots"`
	Name                  *string                               `pulumi:"name"`
	RamdiskId             *string                               `pulumi:"ramdiskId"`
	RootDeviceName        *string                               `pulumi:"rootDeviceName"`
	RootSnapshotId        *string                               `pulumi:"rootSnapshotId"`
	SnapshotWithoutReboot *bool                                 `pulumi:"snapshotWithoutReboot"`
	SourceInstanceId      *string                               `pulumi:"sourceInstanceId"`
	SriovNetSupport       *string                               `pulumi:"sriovNetSupport"`
	Tags                  map[string]string                     `pulumi:"tags"`
	VirtualizationType    *string                               `pulumi:"virtualizationType"`
}

type AmiFromInstanceState struct {
	Architecture          pulumi.StringPtrInput
	Arn                   pulumi.StringPtrInput
	Description           pulumi.StringPtrInput
	EbsBlockDevices       AmiFromInstanceEbsBlockDeviceArrayInput
	EnaSupport            pulumi.BoolPtrInput
	EphemeralBlockDevices AmiFromInstanceEphemeralBlockDeviceArrayInput
	ImageLocation         pulumi.StringPtrInput
	KernelId              pulumi.StringPtrInput
	ManageEbsSnapshots    pulumi.BoolPtrInput
	Name                  pulumi.StringPtrInput
	RamdiskId             pulumi.StringPtrInput
	RootDeviceName        pulumi.StringPtrInput
	RootSnapshotId        pulumi.StringPtrInput
	SnapshotWithoutReboot pulumi.BoolPtrInput
	SourceInstanceId      pulumi.StringPtrInput
	SriovNetSupport       pulumi.StringPtrInput
	Tags                  pulumi.StringMapInput
	VirtualizationType    pulumi.StringPtrInput
}

func (AmiFromInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*amiFromInstanceState)(nil)).Elem()
}

type amiFromInstanceArgs struct {
	Description           *string                               `pulumi:"description"`
	EbsBlockDevices       []AmiFromInstanceEbsBlockDevice       `pulumi:"ebsBlockDevices"`
	EphemeralBlockDevices []AmiFromInstanceEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	Name                  *string                               `pulumi:"name"`
	SnapshotWithoutReboot *bool                                 `pulumi:"snapshotWithoutReboot"`
	SourceInstanceId      string                                `pulumi:"sourceInstanceId"`
	Tags                  map[string]string                     `pulumi:"tags"`
}

// The set of arguments for constructing a AmiFromInstance resource.
type AmiFromInstanceArgs struct {
	Description           pulumi.StringPtrInput
	EbsBlockDevices       AmiFromInstanceEbsBlockDeviceArrayInput
	EphemeralBlockDevices AmiFromInstanceEphemeralBlockDeviceArrayInput
	Name                  pulumi.StringPtrInput
	SnapshotWithoutReboot pulumi.BoolPtrInput
	SourceInstanceId      pulumi.StringInput
	Tags                  pulumi.StringMapInput
}

func (AmiFromInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*amiFromInstanceArgs)(nil)).Elem()
}
