// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package LaunchTemplateLicenseSpecification

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type LaunchTemplateLicenseSpecification struct {
	LicenseConfigurationArn string `pulumi:"licenseConfigurationArn"`
}

type LaunchTemplateLicenseSpecificationInput interface {
	pulumi.Input

	ToLaunchTemplateLicenseSpecificationOutput() LaunchTemplateLicenseSpecificationOutput
	ToLaunchTemplateLicenseSpecificationOutputWithContext(context.Context) LaunchTemplateLicenseSpecificationOutput
}

type LaunchTemplateLicenseSpecificationArgs struct {
	LicenseConfigurationArn pulumi.StringInput `pulumi:"licenseConfigurationArn"`
}

func (LaunchTemplateLicenseSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateLicenseSpecification)(nil)).Elem()
}

func (i LaunchTemplateLicenseSpecificationArgs) ToLaunchTemplateLicenseSpecificationOutput() LaunchTemplateLicenseSpecificationOutput {
	return i.ToLaunchTemplateLicenseSpecificationOutputWithContext(context.Background())
}

func (i LaunchTemplateLicenseSpecificationArgs) ToLaunchTemplateLicenseSpecificationOutputWithContext(ctx context.Context) LaunchTemplateLicenseSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateLicenseSpecificationOutput)
}

type LaunchTemplateLicenseSpecificationArrayInput interface {
	pulumi.Input

	ToLaunchTemplateLicenseSpecificationArrayOutput() LaunchTemplateLicenseSpecificationArrayOutput
	ToLaunchTemplateLicenseSpecificationArrayOutputWithContext(context.Context) LaunchTemplateLicenseSpecificationArrayOutput
}

type LaunchTemplateLicenseSpecificationArray []LaunchTemplateLicenseSpecificationInput

func (LaunchTemplateLicenseSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateLicenseSpecification)(nil)).Elem()
}

func (i LaunchTemplateLicenseSpecificationArray) ToLaunchTemplateLicenseSpecificationArrayOutput() LaunchTemplateLicenseSpecificationArrayOutput {
	return i.ToLaunchTemplateLicenseSpecificationArrayOutputWithContext(context.Background())
}

func (i LaunchTemplateLicenseSpecificationArray) ToLaunchTemplateLicenseSpecificationArrayOutputWithContext(ctx context.Context) LaunchTemplateLicenseSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateLicenseSpecificationArrayOutput)
}

type LaunchTemplateLicenseSpecificationOutput struct { *pulumi.OutputState }

func (LaunchTemplateLicenseSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateLicenseSpecification)(nil)).Elem()
}

func (o LaunchTemplateLicenseSpecificationOutput) ToLaunchTemplateLicenseSpecificationOutput() LaunchTemplateLicenseSpecificationOutput {
	return o
}

func (o LaunchTemplateLicenseSpecificationOutput) ToLaunchTemplateLicenseSpecificationOutputWithContext(ctx context.Context) LaunchTemplateLicenseSpecificationOutput {
	return o
}

func (o LaunchTemplateLicenseSpecificationOutput) LicenseConfigurationArn() pulumi.StringOutput {
	return o.ApplyT(func (v LaunchTemplateLicenseSpecification) string { return v.LicenseConfigurationArn }).(pulumi.StringOutput)
}

type LaunchTemplateLicenseSpecificationArrayOutput struct { *pulumi.OutputState}

func (LaunchTemplateLicenseSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateLicenseSpecification)(nil)).Elem()
}

func (o LaunchTemplateLicenseSpecificationArrayOutput) ToLaunchTemplateLicenseSpecificationArrayOutput() LaunchTemplateLicenseSpecificationArrayOutput {
	return o
}

func (o LaunchTemplateLicenseSpecificationArrayOutput) ToLaunchTemplateLicenseSpecificationArrayOutputWithContext(ctx context.Context) LaunchTemplateLicenseSpecificationArrayOutput {
	return o
}

func (o LaunchTemplateLicenseSpecificationArrayOutput) Index(i pulumi.IntInput) LaunchTemplateLicenseSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) LaunchTemplateLicenseSpecification {
		return vs[0].([]LaunchTemplateLicenseSpecification)[vs[1].(int)]
	}).(LaunchTemplateLicenseSpecificationOutput)
}

func init() {
	pulumi.RegisterOutputType(LaunchTemplateLicenseSpecificationOutput{})
	pulumi.RegisterOutputType(LaunchTemplateLicenseSpecificationArrayOutput{})
}
