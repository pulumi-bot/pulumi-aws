// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package InstanceRootBlockDevice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type InstanceRootBlockDevice struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// Enables [EBS
	// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
	Encrypted *bool `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops *int `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	VolumeId *string `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`,
	// or `"io1"`. (Default: `"standard"`).
	VolumeType *string `pulumi:"volumeType"`
}

type InstanceRootBlockDeviceInput interface {
	pulumi.Input

	ToInstanceRootBlockDeviceOutput() InstanceRootBlockDeviceOutput
	ToInstanceRootBlockDeviceOutputWithContext(context.Context) InstanceRootBlockDeviceOutput
}

type InstanceRootBlockDeviceArgs struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// Enables [EBS
	// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	VolumeId pulumi.StringPtrInput `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`,
	// or `"io1"`. (Default: `"standard"`).
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (InstanceRootBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceRootBlockDevice)(nil)).Elem()
}

func (i InstanceRootBlockDeviceArgs) ToInstanceRootBlockDeviceOutput() InstanceRootBlockDeviceOutput {
	return i.ToInstanceRootBlockDeviceOutputWithContext(context.Background())
}

func (i InstanceRootBlockDeviceArgs) ToInstanceRootBlockDeviceOutputWithContext(ctx context.Context) InstanceRootBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRootBlockDeviceOutput)
}

func (i InstanceRootBlockDeviceArgs) ToInstanceRootBlockDevicePtrOutput() InstanceRootBlockDevicePtrOutput {
	return i.ToInstanceRootBlockDevicePtrOutputWithContext(context.Background())
}

func (i InstanceRootBlockDeviceArgs) ToInstanceRootBlockDevicePtrOutputWithContext(ctx context.Context) InstanceRootBlockDevicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRootBlockDeviceOutput).ToInstanceRootBlockDevicePtrOutputWithContext(ctx)
}

type InstanceRootBlockDevicePtrInput interface {
	pulumi.Input

	ToInstanceRootBlockDevicePtrOutput() InstanceRootBlockDevicePtrOutput
	ToInstanceRootBlockDevicePtrOutputWithContext(context.Context) InstanceRootBlockDevicePtrOutput
}

type instanceRootBlockDevicePtrType InstanceRootBlockDeviceArgs

func InstanceRootBlockDevicePtr(v *InstanceRootBlockDeviceArgs) InstanceRootBlockDevicePtrInput {	return (*instanceRootBlockDevicePtrType)(v)
}

func (*instanceRootBlockDevicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceRootBlockDevice)(nil)).Elem()
}

func (i *instanceRootBlockDevicePtrType) ToInstanceRootBlockDevicePtrOutput() InstanceRootBlockDevicePtrOutput {
	return i.ToInstanceRootBlockDevicePtrOutputWithContext(context.Background())
}

func (i *instanceRootBlockDevicePtrType) ToInstanceRootBlockDevicePtrOutputWithContext(ctx context.Context) InstanceRootBlockDevicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRootBlockDevicePtrOutput)
}

type InstanceRootBlockDeviceOutput struct { *pulumi.OutputState }

func (InstanceRootBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceRootBlockDevice)(nil)).Elem()
}

func (o InstanceRootBlockDeviceOutput) ToInstanceRootBlockDeviceOutput() InstanceRootBlockDeviceOutput {
	return o
}

func (o InstanceRootBlockDeviceOutput) ToInstanceRootBlockDeviceOutputWithContext(ctx context.Context) InstanceRootBlockDeviceOutput {
	return o
}

func (o InstanceRootBlockDeviceOutput) ToInstanceRootBlockDevicePtrOutput() InstanceRootBlockDevicePtrOutput {
	return o.ToInstanceRootBlockDevicePtrOutputWithContext(context.Background())
}

func (o InstanceRootBlockDeviceOutput) ToInstanceRootBlockDevicePtrOutputWithContext(ctx context.Context) InstanceRootBlockDevicePtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *InstanceRootBlockDevice {
		return &v
	}).(InstanceRootBlockDevicePtrOutput)
}
// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o InstanceRootBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v InstanceRootBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// Enables [EBS
// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
func (o InstanceRootBlockDeviceOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v InstanceRootBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This must be set with a `volumeType` of `"io1"`.
func (o InstanceRootBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func (v InstanceRootBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o InstanceRootBlockDeviceOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceRootBlockDevice) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o InstanceRootBlockDeviceOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceRootBlockDevice) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gibibytes (GiB).
func (o InstanceRootBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func (v InstanceRootBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`,
// or `"io1"`. (Default: `"standard"`).
func (o InstanceRootBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceRootBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type InstanceRootBlockDevicePtrOutput struct { *pulumi.OutputState}

func (InstanceRootBlockDevicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceRootBlockDevice)(nil)).Elem()
}

func (o InstanceRootBlockDevicePtrOutput) ToInstanceRootBlockDevicePtrOutput() InstanceRootBlockDevicePtrOutput {
	return o
}

func (o InstanceRootBlockDevicePtrOutput) ToInstanceRootBlockDevicePtrOutputWithContext(ctx context.Context) InstanceRootBlockDevicePtrOutput {
	return o
}

func (o InstanceRootBlockDevicePtrOutput) Elem() InstanceRootBlockDeviceOutput {
	return o.ApplyT(func (v *InstanceRootBlockDevice) InstanceRootBlockDevice { return *v }).(InstanceRootBlockDeviceOutput)
}

// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o InstanceRootBlockDevicePtrOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v InstanceRootBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// Enables [EBS
// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
func (o InstanceRootBlockDevicePtrOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v InstanceRootBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This must be set with a `volumeType` of `"io1"`.
func (o InstanceRootBlockDevicePtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func (v InstanceRootBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o InstanceRootBlockDevicePtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceRootBlockDevice) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o InstanceRootBlockDevicePtrOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceRootBlockDevice) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gibibytes (GiB).
func (o InstanceRootBlockDevicePtrOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func (v InstanceRootBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`,
// or `"io1"`. (Default: `"standard"`).
func (o InstanceRootBlockDevicePtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InstanceRootBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(InstanceRootBlockDeviceOutput{})
	pulumi.RegisterOutputType(InstanceRootBlockDevicePtrOutput{})
}
