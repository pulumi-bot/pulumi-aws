// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type AmiCopyEbsBlockDevice struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination bool `pulumi:"deleteOnTermination"`
	// The path at which the device is exposed to created instances.
	DeviceName string `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted bool `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops int `pulumi:"iops"`
	// The id of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId string `pulumi:"snapshotId"`
	// The size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize int `pulumi:"volumeSize"`
	// The type of EBS volume to create. Can be one of "standard" (the
	// default), "io1" or "gp2".
	VolumeType string `pulumi:"volumeType"`
}

type AmiCopyEbsBlockDeviceInput interface {
	pulumi.Input

	ToAmiCopyEbsBlockDeviceOutput() AmiCopyEbsBlockDeviceOutput
	ToAmiCopyEbsBlockDeviceOutputWithContext(context.Context) AmiCopyEbsBlockDeviceOutput
}

type AmiCopyEbsBlockDeviceArgs struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination pulumi.BoolInput `pulumi:"deleteOnTermination"`
	// The path at which the device is exposed to created instances.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted pulumi.BoolInput `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops pulumi.IntInput `pulumi:"iops"`
	// The id of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	// The size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
	// The type of EBS volume to create. Can be one of "standard" (the
	// default), "io1" or "gp2".
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (AmiCopyEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiCopyEbsBlockDevice)(nil)).Elem()
}

func (i AmiCopyEbsBlockDeviceArgs) ToAmiCopyEbsBlockDeviceOutput() AmiCopyEbsBlockDeviceOutput {
	return i.ToAmiCopyEbsBlockDeviceOutputWithContext(context.Background())
}

func (i AmiCopyEbsBlockDeviceArgs) ToAmiCopyEbsBlockDeviceOutputWithContext(ctx context.Context) AmiCopyEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiCopyEbsBlockDeviceOutput)
}

type AmiCopyEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToAmiCopyEbsBlockDeviceArrayOutput() AmiCopyEbsBlockDeviceArrayOutput
	ToAmiCopyEbsBlockDeviceArrayOutputWithContext(context.Context) AmiCopyEbsBlockDeviceArrayOutput
}

type AmiCopyEbsBlockDeviceArray []AmiCopyEbsBlockDeviceInput

func (AmiCopyEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiCopyEbsBlockDevice)(nil)).Elem()
}

func (i AmiCopyEbsBlockDeviceArray) ToAmiCopyEbsBlockDeviceArrayOutput() AmiCopyEbsBlockDeviceArrayOutput {
	return i.ToAmiCopyEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i AmiCopyEbsBlockDeviceArray) ToAmiCopyEbsBlockDeviceArrayOutputWithContext(ctx context.Context) AmiCopyEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiCopyEbsBlockDeviceArrayOutput)
}

type AmiCopyEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (AmiCopyEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiCopyEbsBlockDevice)(nil)).Elem()
}

func (o AmiCopyEbsBlockDeviceOutput) ToAmiCopyEbsBlockDeviceOutput() AmiCopyEbsBlockDeviceOutput {
	return o
}

func (o AmiCopyEbsBlockDeviceOutput) ToAmiCopyEbsBlockDeviceOutputWithContext(ctx context.Context) AmiCopyEbsBlockDeviceOutput {
	return o
}

// Boolean controlling whether the EBS volumes created to
// support each created instance will be deleted once that instance is terminated.
func (o AmiCopyEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDevice) bool { return v.DeleteOnTermination }).(pulumi.BoolOutput)
}

// The path at which the device is exposed to created instances.
func (o AmiCopyEbsBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
func (o AmiCopyEbsBlockDeviceOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDevice) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

// Number of I/O operations per second the
// created volumes will support.
func (o AmiCopyEbsBlockDeviceOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDevice) int { return v.Iops }).(pulumi.IntOutput)
}

// The id of an EBS snapshot that will be used to initialize the created
// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
// snapshot.
func (o AmiCopyEbsBlockDeviceOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDevice) string { return v.SnapshotId }).(pulumi.StringOutput)
}

// The size of created volumes in GiB.
// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
// as the selected snapshot.
func (o AmiCopyEbsBlockDeviceOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDevice) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// The type of EBS volume to create. Can be one of "standard" (the
// default), "io1" or "gp2".
func (o AmiCopyEbsBlockDeviceOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDevice) string { return v.VolumeType }).(pulumi.StringOutput)
}

type AmiCopyEbsBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (AmiCopyEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiCopyEbsBlockDevice)(nil)).Elem()
}

func (o AmiCopyEbsBlockDeviceArrayOutput) ToAmiCopyEbsBlockDeviceArrayOutput() AmiCopyEbsBlockDeviceArrayOutput {
	return o
}

func (o AmiCopyEbsBlockDeviceArrayOutput) ToAmiCopyEbsBlockDeviceArrayOutputWithContext(ctx context.Context) AmiCopyEbsBlockDeviceArrayOutput {
	return o
}

func (o AmiCopyEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) AmiCopyEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmiCopyEbsBlockDevice {
		return vs[0].([]AmiCopyEbsBlockDevice)[vs[1].(int)]
	}).(AmiCopyEbsBlockDeviceOutput)
}

type AmiCopyEbsBlockDeviceArgs struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The path at which the device is exposed to created instances.
	DeviceName *string `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted *bool `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops *int `pulumi:"iops"`
	// The id of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId *string `pulumi:"snapshotId"`
	// The size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of EBS volume to create. Can be one of "standard" (the
	// default), "io1" or "gp2".
	VolumeType *string `pulumi:"volumeType"`
}

type AmiCopyEbsBlockDeviceArgsInput interface {
	pulumi.Input

	ToAmiCopyEbsBlockDeviceArgsOutput() AmiCopyEbsBlockDeviceArgsOutput
	ToAmiCopyEbsBlockDeviceArgsOutputWithContext(context.Context) AmiCopyEbsBlockDeviceArgsOutput
}

type AmiCopyEbsBlockDeviceArgsArgs struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The path at which the device is exposed to created instances.
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The id of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// The size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of EBS volume to create. Can be one of "standard" (the
	// default), "io1" or "gp2".
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (AmiCopyEbsBlockDeviceArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiCopyEbsBlockDeviceArgs)(nil)).Elem()
}

func (i AmiCopyEbsBlockDeviceArgsArgs) ToAmiCopyEbsBlockDeviceArgsOutput() AmiCopyEbsBlockDeviceArgsOutput {
	return i.ToAmiCopyEbsBlockDeviceArgsOutputWithContext(context.Background())
}

func (i AmiCopyEbsBlockDeviceArgsArgs) ToAmiCopyEbsBlockDeviceArgsOutputWithContext(ctx context.Context) AmiCopyEbsBlockDeviceArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiCopyEbsBlockDeviceArgsOutput)
}

type AmiCopyEbsBlockDeviceArgsArrayInput interface {
	pulumi.Input

	ToAmiCopyEbsBlockDeviceArgsArrayOutput() AmiCopyEbsBlockDeviceArgsArrayOutput
	ToAmiCopyEbsBlockDeviceArgsArrayOutputWithContext(context.Context) AmiCopyEbsBlockDeviceArgsArrayOutput
}

type AmiCopyEbsBlockDeviceArgsArray []AmiCopyEbsBlockDeviceArgsInput

func (AmiCopyEbsBlockDeviceArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiCopyEbsBlockDeviceArgs)(nil)).Elem()
}

func (i AmiCopyEbsBlockDeviceArgsArray) ToAmiCopyEbsBlockDeviceArgsArrayOutput() AmiCopyEbsBlockDeviceArgsArrayOutput {
	return i.ToAmiCopyEbsBlockDeviceArgsArrayOutputWithContext(context.Background())
}

func (i AmiCopyEbsBlockDeviceArgsArray) ToAmiCopyEbsBlockDeviceArgsArrayOutputWithContext(ctx context.Context) AmiCopyEbsBlockDeviceArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiCopyEbsBlockDeviceArgsArrayOutput)
}

type AmiCopyEbsBlockDeviceArgsOutput struct{ *pulumi.OutputState }

func (AmiCopyEbsBlockDeviceArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiCopyEbsBlockDeviceArgs)(nil)).Elem()
}

func (o AmiCopyEbsBlockDeviceArgsOutput) ToAmiCopyEbsBlockDeviceArgsOutput() AmiCopyEbsBlockDeviceArgsOutput {
	return o
}

func (o AmiCopyEbsBlockDeviceArgsOutput) ToAmiCopyEbsBlockDeviceArgsOutputWithContext(ctx context.Context) AmiCopyEbsBlockDeviceArgsOutput {
	return o
}

// Boolean controlling whether the EBS volumes created to
// support each created instance will be deleted once that instance is terminated.
func (o AmiCopyEbsBlockDeviceArgsOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDeviceArgs) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The path at which the device is exposed to created instances.
func (o AmiCopyEbsBlockDeviceArgsOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDeviceArgs) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
func (o AmiCopyEbsBlockDeviceArgsOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDeviceArgs) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// Number of I/O operations per second the
// created volumes will support.
func (o AmiCopyEbsBlockDeviceArgsOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDeviceArgs) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The id of an EBS snapshot that will be used to initialize the created
// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
// snapshot.
func (o AmiCopyEbsBlockDeviceArgsOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDeviceArgs) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The size of created volumes in GiB.
// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
// as the selected snapshot.
func (o AmiCopyEbsBlockDeviceArgsOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDeviceArgs) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of EBS volume to create. Can be one of "standard" (the
// default), "io1" or "gp2".
func (o AmiCopyEbsBlockDeviceArgsOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDeviceArgs) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type AmiCopyEbsBlockDeviceArgsArrayOutput struct{ *pulumi.OutputState }

func (AmiCopyEbsBlockDeviceArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiCopyEbsBlockDeviceArgs)(nil)).Elem()
}

func (o AmiCopyEbsBlockDeviceArgsArrayOutput) ToAmiCopyEbsBlockDeviceArgsArrayOutput() AmiCopyEbsBlockDeviceArgsArrayOutput {
	return o
}

func (o AmiCopyEbsBlockDeviceArgsArrayOutput) ToAmiCopyEbsBlockDeviceArgsArrayOutputWithContext(ctx context.Context) AmiCopyEbsBlockDeviceArgsArrayOutput {
	return o
}

func (o AmiCopyEbsBlockDeviceArgsArrayOutput) Index(i pulumi.IntInput) AmiCopyEbsBlockDeviceArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmiCopyEbsBlockDeviceArgs {
		return vs[0].([]AmiCopyEbsBlockDeviceArgs)[vs[1].(int)]
	}).(AmiCopyEbsBlockDeviceArgsOutput)
}

type AmiCopyEbsBlockDeviceState struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The path at which the device is exposed to created instances.
	DeviceName *string `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted *bool `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops *int `pulumi:"iops"`
	// The id of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId *string `pulumi:"snapshotId"`
	// The size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of EBS volume to create. Can be one of "standard" (the
	// default), "io1" or "gp2".
	VolumeType *string `pulumi:"volumeType"`
}

type AmiCopyEbsBlockDeviceStateInput interface {
	pulumi.Input

	ToAmiCopyEbsBlockDeviceStateOutput() AmiCopyEbsBlockDeviceStateOutput
	ToAmiCopyEbsBlockDeviceStateOutputWithContext(context.Context) AmiCopyEbsBlockDeviceStateOutput
}

type AmiCopyEbsBlockDeviceStateArgs struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The path at which the device is exposed to created instances.
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The id of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// The size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of EBS volume to create. Can be one of "standard" (the
	// default), "io1" or "gp2".
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (AmiCopyEbsBlockDeviceStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiCopyEbsBlockDeviceState)(nil)).Elem()
}

func (i AmiCopyEbsBlockDeviceStateArgs) ToAmiCopyEbsBlockDeviceStateOutput() AmiCopyEbsBlockDeviceStateOutput {
	return i.ToAmiCopyEbsBlockDeviceStateOutputWithContext(context.Background())
}

func (i AmiCopyEbsBlockDeviceStateArgs) ToAmiCopyEbsBlockDeviceStateOutputWithContext(ctx context.Context) AmiCopyEbsBlockDeviceStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiCopyEbsBlockDeviceStateOutput)
}

type AmiCopyEbsBlockDeviceStateArrayInput interface {
	pulumi.Input

	ToAmiCopyEbsBlockDeviceStateArrayOutput() AmiCopyEbsBlockDeviceStateArrayOutput
	ToAmiCopyEbsBlockDeviceStateArrayOutputWithContext(context.Context) AmiCopyEbsBlockDeviceStateArrayOutput
}

type AmiCopyEbsBlockDeviceStateArray []AmiCopyEbsBlockDeviceStateInput

func (AmiCopyEbsBlockDeviceStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiCopyEbsBlockDeviceState)(nil)).Elem()
}

func (i AmiCopyEbsBlockDeviceStateArray) ToAmiCopyEbsBlockDeviceStateArrayOutput() AmiCopyEbsBlockDeviceStateArrayOutput {
	return i.ToAmiCopyEbsBlockDeviceStateArrayOutputWithContext(context.Background())
}

func (i AmiCopyEbsBlockDeviceStateArray) ToAmiCopyEbsBlockDeviceStateArrayOutputWithContext(ctx context.Context) AmiCopyEbsBlockDeviceStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiCopyEbsBlockDeviceStateArrayOutput)
}

type AmiCopyEbsBlockDeviceStateOutput struct{ *pulumi.OutputState }

func (AmiCopyEbsBlockDeviceStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiCopyEbsBlockDeviceState)(nil)).Elem()
}

func (o AmiCopyEbsBlockDeviceStateOutput) ToAmiCopyEbsBlockDeviceStateOutput() AmiCopyEbsBlockDeviceStateOutput {
	return o
}

func (o AmiCopyEbsBlockDeviceStateOutput) ToAmiCopyEbsBlockDeviceStateOutputWithContext(ctx context.Context) AmiCopyEbsBlockDeviceStateOutput {
	return o
}

// Boolean controlling whether the EBS volumes created to
// support each created instance will be deleted once that instance is terminated.
func (o AmiCopyEbsBlockDeviceStateOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDeviceState) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The path at which the device is exposed to created instances.
func (o AmiCopyEbsBlockDeviceStateOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDeviceState) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
func (o AmiCopyEbsBlockDeviceStateOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDeviceState) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// Number of I/O operations per second the
// created volumes will support.
func (o AmiCopyEbsBlockDeviceStateOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDeviceState) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The id of an EBS snapshot that will be used to initialize the created
// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
// snapshot.
func (o AmiCopyEbsBlockDeviceStateOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDeviceState) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The size of created volumes in GiB.
// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
// as the selected snapshot.
func (o AmiCopyEbsBlockDeviceStateOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDeviceState) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of EBS volume to create. Can be one of "standard" (the
// default), "io1" or "gp2".
func (o AmiCopyEbsBlockDeviceStateOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDeviceState) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type AmiCopyEbsBlockDeviceStateArrayOutput struct{ *pulumi.OutputState }

func (AmiCopyEbsBlockDeviceStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiCopyEbsBlockDeviceState)(nil)).Elem()
}

func (o AmiCopyEbsBlockDeviceStateArrayOutput) ToAmiCopyEbsBlockDeviceStateArrayOutput() AmiCopyEbsBlockDeviceStateArrayOutput {
	return o
}

func (o AmiCopyEbsBlockDeviceStateArrayOutput) ToAmiCopyEbsBlockDeviceStateArrayOutputWithContext(ctx context.Context) AmiCopyEbsBlockDeviceStateArrayOutput {
	return o
}

func (o AmiCopyEbsBlockDeviceStateArrayOutput) Index(i pulumi.IntInput) AmiCopyEbsBlockDeviceStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmiCopyEbsBlockDeviceState {
		return vs[0].([]AmiCopyEbsBlockDeviceState)[vs[1].(int)]
	}).(AmiCopyEbsBlockDeviceStateOutput)
}

type AmiCopyEphemeralBlockDevice struct {
	// The path at which the device is exposed to created instances.
	DeviceName string `pulumi:"deviceName"`
	// A name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName string `pulumi:"virtualName"`
}

type AmiCopyEphemeralBlockDeviceInput interface {
	pulumi.Input

	ToAmiCopyEphemeralBlockDeviceOutput() AmiCopyEphemeralBlockDeviceOutput
	ToAmiCopyEphemeralBlockDeviceOutputWithContext(context.Context) AmiCopyEphemeralBlockDeviceOutput
}

type AmiCopyEphemeralBlockDeviceArgs struct {
	// The path at which the device is exposed to created instances.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// A name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName pulumi.StringInput `pulumi:"virtualName"`
}

func (AmiCopyEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiCopyEphemeralBlockDevice)(nil)).Elem()
}

func (i AmiCopyEphemeralBlockDeviceArgs) ToAmiCopyEphemeralBlockDeviceOutput() AmiCopyEphemeralBlockDeviceOutput {
	return i.ToAmiCopyEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i AmiCopyEphemeralBlockDeviceArgs) ToAmiCopyEphemeralBlockDeviceOutputWithContext(ctx context.Context) AmiCopyEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiCopyEphemeralBlockDeviceOutput)
}

type AmiCopyEphemeralBlockDeviceArrayInput interface {
	pulumi.Input

	ToAmiCopyEphemeralBlockDeviceArrayOutput() AmiCopyEphemeralBlockDeviceArrayOutput
	ToAmiCopyEphemeralBlockDeviceArrayOutputWithContext(context.Context) AmiCopyEphemeralBlockDeviceArrayOutput
}

type AmiCopyEphemeralBlockDeviceArray []AmiCopyEphemeralBlockDeviceInput

func (AmiCopyEphemeralBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiCopyEphemeralBlockDevice)(nil)).Elem()
}

func (i AmiCopyEphemeralBlockDeviceArray) ToAmiCopyEphemeralBlockDeviceArrayOutput() AmiCopyEphemeralBlockDeviceArrayOutput {
	return i.ToAmiCopyEphemeralBlockDeviceArrayOutputWithContext(context.Background())
}

func (i AmiCopyEphemeralBlockDeviceArray) ToAmiCopyEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) AmiCopyEphemeralBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiCopyEphemeralBlockDeviceArrayOutput)
}

type AmiCopyEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (AmiCopyEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiCopyEphemeralBlockDevice)(nil)).Elem()
}

func (o AmiCopyEphemeralBlockDeviceOutput) ToAmiCopyEphemeralBlockDeviceOutput() AmiCopyEphemeralBlockDeviceOutput {
	return o
}

func (o AmiCopyEphemeralBlockDeviceOutput) ToAmiCopyEphemeralBlockDeviceOutputWithContext(ctx context.Context) AmiCopyEphemeralBlockDeviceOutput {
	return o
}

// The path at which the device is exposed to created instances.
func (o AmiCopyEphemeralBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v AmiCopyEphemeralBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// A name for the ephemeral device, of the form "ephemeralN" where
// *N* is a volume number starting from zero.
func (o AmiCopyEphemeralBlockDeviceOutput) VirtualName() pulumi.StringOutput {
	return o.ApplyT(func(v AmiCopyEphemeralBlockDevice) string { return v.VirtualName }).(pulumi.StringOutput)
}

type AmiCopyEphemeralBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (AmiCopyEphemeralBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiCopyEphemeralBlockDevice)(nil)).Elem()
}

func (o AmiCopyEphemeralBlockDeviceArrayOutput) ToAmiCopyEphemeralBlockDeviceArrayOutput() AmiCopyEphemeralBlockDeviceArrayOutput {
	return o
}

func (o AmiCopyEphemeralBlockDeviceArrayOutput) ToAmiCopyEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) AmiCopyEphemeralBlockDeviceArrayOutput {
	return o
}

func (o AmiCopyEphemeralBlockDeviceArrayOutput) Index(i pulumi.IntInput) AmiCopyEphemeralBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmiCopyEphemeralBlockDevice {
		return vs[0].([]AmiCopyEphemeralBlockDevice)[vs[1].(int)]
	}).(AmiCopyEphemeralBlockDeviceOutput)
}

type AmiCopyEphemeralBlockDeviceArgs struct {
	// The path at which the device is exposed to created instances.
	DeviceName *string `pulumi:"deviceName"`
	// A name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName *string `pulumi:"virtualName"`
}

type AmiCopyEphemeralBlockDeviceArgsInput interface {
	pulumi.Input

	ToAmiCopyEphemeralBlockDeviceArgsOutput() AmiCopyEphemeralBlockDeviceArgsOutput
	ToAmiCopyEphemeralBlockDeviceArgsOutputWithContext(context.Context) AmiCopyEphemeralBlockDeviceArgsOutput
}

type AmiCopyEphemeralBlockDeviceArgsArgs struct {
	// The path at which the device is exposed to created instances.
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	// A name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName pulumi.StringPtrInput `pulumi:"virtualName"`
}

func (AmiCopyEphemeralBlockDeviceArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiCopyEphemeralBlockDeviceArgs)(nil)).Elem()
}

func (i AmiCopyEphemeralBlockDeviceArgsArgs) ToAmiCopyEphemeralBlockDeviceArgsOutput() AmiCopyEphemeralBlockDeviceArgsOutput {
	return i.ToAmiCopyEphemeralBlockDeviceArgsOutputWithContext(context.Background())
}

func (i AmiCopyEphemeralBlockDeviceArgsArgs) ToAmiCopyEphemeralBlockDeviceArgsOutputWithContext(ctx context.Context) AmiCopyEphemeralBlockDeviceArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiCopyEphemeralBlockDeviceArgsOutput)
}

type AmiCopyEphemeralBlockDeviceArgsArrayInput interface {
	pulumi.Input

	ToAmiCopyEphemeralBlockDeviceArgsArrayOutput() AmiCopyEphemeralBlockDeviceArgsArrayOutput
	ToAmiCopyEphemeralBlockDeviceArgsArrayOutputWithContext(context.Context) AmiCopyEphemeralBlockDeviceArgsArrayOutput
}

type AmiCopyEphemeralBlockDeviceArgsArray []AmiCopyEphemeralBlockDeviceArgsInput

func (AmiCopyEphemeralBlockDeviceArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiCopyEphemeralBlockDeviceArgs)(nil)).Elem()
}

func (i AmiCopyEphemeralBlockDeviceArgsArray) ToAmiCopyEphemeralBlockDeviceArgsArrayOutput() AmiCopyEphemeralBlockDeviceArgsArrayOutput {
	return i.ToAmiCopyEphemeralBlockDeviceArgsArrayOutputWithContext(context.Background())
}

func (i AmiCopyEphemeralBlockDeviceArgsArray) ToAmiCopyEphemeralBlockDeviceArgsArrayOutputWithContext(ctx context.Context) AmiCopyEphemeralBlockDeviceArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiCopyEphemeralBlockDeviceArgsArrayOutput)
}

type AmiCopyEphemeralBlockDeviceArgsOutput struct{ *pulumi.OutputState }

func (AmiCopyEphemeralBlockDeviceArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiCopyEphemeralBlockDeviceArgs)(nil)).Elem()
}

func (o AmiCopyEphemeralBlockDeviceArgsOutput) ToAmiCopyEphemeralBlockDeviceArgsOutput() AmiCopyEphemeralBlockDeviceArgsOutput {
	return o
}

func (o AmiCopyEphemeralBlockDeviceArgsOutput) ToAmiCopyEphemeralBlockDeviceArgsOutputWithContext(ctx context.Context) AmiCopyEphemeralBlockDeviceArgsOutput {
	return o
}

// The path at which the device is exposed to created instances.
func (o AmiCopyEphemeralBlockDeviceArgsOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiCopyEphemeralBlockDeviceArgs) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

// A name for the ephemeral device, of the form "ephemeralN" where
// *N* is a volume number starting from zero.
func (o AmiCopyEphemeralBlockDeviceArgsOutput) VirtualName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiCopyEphemeralBlockDeviceArgs) *string { return v.VirtualName }).(pulumi.StringPtrOutput)
}

type AmiCopyEphemeralBlockDeviceArgsArrayOutput struct{ *pulumi.OutputState }

func (AmiCopyEphemeralBlockDeviceArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiCopyEphemeralBlockDeviceArgs)(nil)).Elem()
}

func (o AmiCopyEphemeralBlockDeviceArgsArrayOutput) ToAmiCopyEphemeralBlockDeviceArgsArrayOutput() AmiCopyEphemeralBlockDeviceArgsArrayOutput {
	return o
}

func (o AmiCopyEphemeralBlockDeviceArgsArrayOutput) ToAmiCopyEphemeralBlockDeviceArgsArrayOutputWithContext(ctx context.Context) AmiCopyEphemeralBlockDeviceArgsArrayOutput {
	return o
}

func (o AmiCopyEphemeralBlockDeviceArgsArrayOutput) Index(i pulumi.IntInput) AmiCopyEphemeralBlockDeviceArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmiCopyEphemeralBlockDeviceArgs {
		return vs[0].([]AmiCopyEphemeralBlockDeviceArgs)[vs[1].(int)]
	}).(AmiCopyEphemeralBlockDeviceArgsOutput)
}

type AmiCopyEphemeralBlockDeviceState struct {
	// The path at which the device is exposed to created instances.
	DeviceName *string `pulumi:"deviceName"`
	// A name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName *string `pulumi:"virtualName"`
}

type AmiCopyEphemeralBlockDeviceStateInput interface {
	pulumi.Input

	ToAmiCopyEphemeralBlockDeviceStateOutput() AmiCopyEphemeralBlockDeviceStateOutput
	ToAmiCopyEphemeralBlockDeviceStateOutputWithContext(context.Context) AmiCopyEphemeralBlockDeviceStateOutput
}

type AmiCopyEphemeralBlockDeviceStateArgs struct {
	// The path at which the device is exposed to created instances.
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	// A name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName pulumi.StringPtrInput `pulumi:"virtualName"`
}

func (AmiCopyEphemeralBlockDeviceStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiCopyEphemeralBlockDeviceState)(nil)).Elem()
}

func (i AmiCopyEphemeralBlockDeviceStateArgs) ToAmiCopyEphemeralBlockDeviceStateOutput() AmiCopyEphemeralBlockDeviceStateOutput {
	return i.ToAmiCopyEphemeralBlockDeviceStateOutputWithContext(context.Background())
}

func (i AmiCopyEphemeralBlockDeviceStateArgs) ToAmiCopyEphemeralBlockDeviceStateOutputWithContext(ctx context.Context) AmiCopyEphemeralBlockDeviceStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiCopyEphemeralBlockDeviceStateOutput)
}

type AmiCopyEphemeralBlockDeviceStateArrayInput interface {
	pulumi.Input

	ToAmiCopyEphemeralBlockDeviceStateArrayOutput() AmiCopyEphemeralBlockDeviceStateArrayOutput
	ToAmiCopyEphemeralBlockDeviceStateArrayOutputWithContext(context.Context) AmiCopyEphemeralBlockDeviceStateArrayOutput
}

type AmiCopyEphemeralBlockDeviceStateArray []AmiCopyEphemeralBlockDeviceStateInput

func (AmiCopyEphemeralBlockDeviceStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiCopyEphemeralBlockDeviceState)(nil)).Elem()
}

func (i AmiCopyEphemeralBlockDeviceStateArray) ToAmiCopyEphemeralBlockDeviceStateArrayOutput() AmiCopyEphemeralBlockDeviceStateArrayOutput {
	return i.ToAmiCopyEphemeralBlockDeviceStateArrayOutputWithContext(context.Background())
}

func (i AmiCopyEphemeralBlockDeviceStateArray) ToAmiCopyEphemeralBlockDeviceStateArrayOutputWithContext(ctx context.Context) AmiCopyEphemeralBlockDeviceStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiCopyEphemeralBlockDeviceStateArrayOutput)
}

type AmiCopyEphemeralBlockDeviceStateOutput struct{ *pulumi.OutputState }

func (AmiCopyEphemeralBlockDeviceStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiCopyEphemeralBlockDeviceState)(nil)).Elem()
}

func (o AmiCopyEphemeralBlockDeviceStateOutput) ToAmiCopyEphemeralBlockDeviceStateOutput() AmiCopyEphemeralBlockDeviceStateOutput {
	return o
}

func (o AmiCopyEphemeralBlockDeviceStateOutput) ToAmiCopyEphemeralBlockDeviceStateOutputWithContext(ctx context.Context) AmiCopyEphemeralBlockDeviceStateOutput {
	return o
}

// The path at which the device is exposed to created instances.
func (o AmiCopyEphemeralBlockDeviceStateOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiCopyEphemeralBlockDeviceState) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

// A name for the ephemeral device, of the form "ephemeralN" where
// *N* is a volume number starting from zero.
func (o AmiCopyEphemeralBlockDeviceStateOutput) VirtualName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiCopyEphemeralBlockDeviceState) *string { return v.VirtualName }).(pulumi.StringPtrOutput)
}

type AmiCopyEphemeralBlockDeviceStateArrayOutput struct{ *pulumi.OutputState }

func (AmiCopyEphemeralBlockDeviceStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiCopyEphemeralBlockDeviceState)(nil)).Elem()
}

func (o AmiCopyEphemeralBlockDeviceStateArrayOutput) ToAmiCopyEphemeralBlockDeviceStateArrayOutput() AmiCopyEphemeralBlockDeviceStateArrayOutput {
	return o
}

func (o AmiCopyEphemeralBlockDeviceStateArrayOutput) ToAmiCopyEphemeralBlockDeviceStateArrayOutputWithContext(ctx context.Context) AmiCopyEphemeralBlockDeviceStateArrayOutput {
	return o
}

func (o AmiCopyEphemeralBlockDeviceStateArrayOutput) Index(i pulumi.IntInput) AmiCopyEphemeralBlockDeviceStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmiCopyEphemeralBlockDeviceState {
		return vs[0].([]AmiCopyEphemeralBlockDeviceState)[vs[1].(int)]
	}).(AmiCopyEphemeralBlockDeviceStateOutput)
}

type AmiEbsBlockDevice struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The path at which the device is exposed to created instances.
	DeviceName string `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted *bool `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops *int `pulumi:"iops"`
	// The id of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId *string `pulumi:"snapshotId"`
	// The size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize int `pulumi:"volumeSize"`
	// The type of EBS volume to create. Can be one of "standard" (the
	// default), "io1" or "gp2".
	VolumeType *string `pulumi:"volumeType"`
}

type AmiEbsBlockDeviceInput interface {
	pulumi.Input

	ToAmiEbsBlockDeviceOutput() AmiEbsBlockDeviceOutput
	ToAmiEbsBlockDeviceOutputWithContext(context.Context) AmiEbsBlockDeviceOutput
}

type AmiEbsBlockDeviceArgs struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The path at which the device is exposed to created instances.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The id of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// The size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
	// The type of EBS volume to create. Can be one of "standard" (the
	// default), "io1" or "gp2".
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (AmiEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiEbsBlockDevice)(nil)).Elem()
}

func (i AmiEbsBlockDeviceArgs) ToAmiEbsBlockDeviceOutput() AmiEbsBlockDeviceOutput {
	return i.ToAmiEbsBlockDeviceOutputWithContext(context.Background())
}

func (i AmiEbsBlockDeviceArgs) ToAmiEbsBlockDeviceOutputWithContext(ctx context.Context) AmiEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiEbsBlockDeviceOutput)
}

type AmiEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToAmiEbsBlockDeviceArrayOutput() AmiEbsBlockDeviceArrayOutput
	ToAmiEbsBlockDeviceArrayOutputWithContext(context.Context) AmiEbsBlockDeviceArrayOutput
}

type AmiEbsBlockDeviceArray []AmiEbsBlockDeviceInput

func (AmiEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiEbsBlockDevice)(nil)).Elem()
}

func (i AmiEbsBlockDeviceArray) ToAmiEbsBlockDeviceArrayOutput() AmiEbsBlockDeviceArrayOutput {
	return i.ToAmiEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i AmiEbsBlockDeviceArray) ToAmiEbsBlockDeviceArrayOutputWithContext(ctx context.Context) AmiEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiEbsBlockDeviceArrayOutput)
}

type AmiEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (AmiEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiEbsBlockDevice)(nil)).Elem()
}

func (o AmiEbsBlockDeviceOutput) ToAmiEbsBlockDeviceOutput() AmiEbsBlockDeviceOutput {
	return o
}

func (o AmiEbsBlockDeviceOutput) ToAmiEbsBlockDeviceOutputWithContext(ctx context.Context) AmiEbsBlockDeviceOutput {
	return o
}

// Boolean controlling whether the EBS volumes created to
// support each created instance will be deleted once that instance is terminated.
func (o AmiEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmiEbsBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The path at which the device is exposed to created instances.
func (o AmiEbsBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v AmiEbsBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
func (o AmiEbsBlockDeviceOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmiEbsBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// Number of I/O operations per second the
// created volumes will support.
func (o AmiEbsBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AmiEbsBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The id of an EBS snapshot that will be used to initialize the created
// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
// snapshot.
func (o AmiEbsBlockDeviceOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiEbsBlockDevice) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The size of created volumes in GiB.
// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
// as the selected snapshot.
func (o AmiEbsBlockDeviceOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v AmiEbsBlockDevice) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// The type of EBS volume to create. Can be one of "standard" (the
// default), "io1" or "gp2".
func (o AmiEbsBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiEbsBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type AmiEbsBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (AmiEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiEbsBlockDevice)(nil)).Elem()
}

func (o AmiEbsBlockDeviceArrayOutput) ToAmiEbsBlockDeviceArrayOutput() AmiEbsBlockDeviceArrayOutput {
	return o
}

func (o AmiEbsBlockDeviceArrayOutput) ToAmiEbsBlockDeviceArrayOutputWithContext(ctx context.Context) AmiEbsBlockDeviceArrayOutput {
	return o
}

func (o AmiEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) AmiEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmiEbsBlockDevice {
		return vs[0].([]AmiEbsBlockDevice)[vs[1].(int)]
	}).(AmiEbsBlockDeviceOutput)
}

type AmiEbsBlockDeviceArgs struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The path at which the device is exposed to created instances.
	DeviceName string `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted *bool `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops *int `pulumi:"iops"`
	// The id of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId *string `pulumi:"snapshotId"`
	// The size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of EBS volume to create. Can be one of "standard" (the
	// default), "io1" or "gp2".
	VolumeType *string `pulumi:"volumeType"`
}

type AmiEbsBlockDeviceArgsInput interface {
	pulumi.Input

	ToAmiEbsBlockDeviceArgsOutput() AmiEbsBlockDeviceArgsOutput
	ToAmiEbsBlockDeviceArgsOutputWithContext(context.Context) AmiEbsBlockDeviceArgsOutput
}

type AmiEbsBlockDeviceArgsArgs struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The path at which the device is exposed to created instances.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The id of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// The size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of EBS volume to create. Can be one of "standard" (the
	// default), "io1" or "gp2".
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (AmiEbsBlockDeviceArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiEbsBlockDeviceArgs)(nil)).Elem()
}

func (i AmiEbsBlockDeviceArgsArgs) ToAmiEbsBlockDeviceArgsOutput() AmiEbsBlockDeviceArgsOutput {
	return i.ToAmiEbsBlockDeviceArgsOutputWithContext(context.Background())
}

func (i AmiEbsBlockDeviceArgsArgs) ToAmiEbsBlockDeviceArgsOutputWithContext(ctx context.Context) AmiEbsBlockDeviceArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiEbsBlockDeviceArgsOutput)
}

type AmiEbsBlockDeviceArgsArrayInput interface {
	pulumi.Input

	ToAmiEbsBlockDeviceArgsArrayOutput() AmiEbsBlockDeviceArgsArrayOutput
	ToAmiEbsBlockDeviceArgsArrayOutputWithContext(context.Context) AmiEbsBlockDeviceArgsArrayOutput
}

type AmiEbsBlockDeviceArgsArray []AmiEbsBlockDeviceArgsInput

func (AmiEbsBlockDeviceArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiEbsBlockDeviceArgs)(nil)).Elem()
}

func (i AmiEbsBlockDeviceArgsArray) ToAmiEbsBlockDeviceArgsArrayOutput() AmiEbsBlockDeviceArgsArrayOutput {
	return i.ToAmiEbsBlockDeviceArgsArrayOutputWithContext(context.Background())
}

func (i AmiEbsBlockDeviceArgsArray) ToAmiEbsBlockDeviceArgsArrayOutputWithContext(ctx context.Context) AmiEbsBlockDeviceArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiEbsBlockDeviceArgsArrayOutput)
}

type AmiEbsBlockDeviceArgsOutput struct{ *pulumi.OutputState }

func (AmiEbsBlockDeviceArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiEbsBlockDeviceArgs)(nil)).Elem()
}

func (o AmiEbsBlockDeviceArgsOutput) ToAmiEbsBlockDeviceArgsOutput() AmiEbsBlockDeviceArgsOutput {
	return o
}

func (o AmiEbsBlockDeviceArgsOutput) ToAmiEbsBlockDeviceArgsOutputWithContext(ctx context.Context) AmiEbsBlockDeviceArgsOutput {
	return o
}

// Boolean controlling whether the EBS volumes created to
// support each created instance will be deleted once that instance is terminated.
func (o AmiEbsBlockDeviceArgsOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmiEbsBlockDeviceArgs) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The path at which the device is exposed to created instances.
func (o AmiEbsBlockDeviceArgsOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v AmiEbsBlockDeviceArgs) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
func (o AmiEbsBlockDeviceArgsOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmiEbsBlockDeviceArgs) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// Number of I/O operations per second the
// created volumes will support.
func (o AmiEbsBlockDeviceArgsOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AmiEbsBlockDeviceArgs) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The id of an EBS snapshot that will be used to initialize the created
// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
// snapshot.
func (o AmiEbsBlockDeviceArgsOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiEbsBlockDeviceArgs) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The size of created volumes in GiB.
// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
// as the selected snapshot.
func (o AmiEbsBlockDeviceArgsOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AmiEbsBlockDeviceArgs) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of EBS volume to create. Can be one of "standard" (the
// default), "io1" or "gp2".
func (o AmiEbsBlockDeviceArgsOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiEbsBlockDeviceArgs) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type AmiEbsBlockDeviceArgsArrayOutput struct{ *pulumi.OutputState }

func (AmiEbsBlockDeviceArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiEbsBlockDeviceArgs)(nil)).Elem()
}

func (o AmiEbsBlockDeviceArgsArrayOutput) ToAmiEbsBlockDeviceArgsArrayOutput() AmiEbsBlockDeviceArgsArrayOutput {
	return o
}

func (o AmiEbsBlockDeviceArgsArrayOutput) ToAmiEbsBlockDeviceArgsArrayOutputWithContext(ctx context.Context) AmiEbsBlockDeviceArgsArrayOutput {
	return o
}

func (o AmiEbsBlockDeviceArgsArrayOutput) Index(i pulumi.IntInput) AmiEbsBlockDeviceArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmiEbsBlockDeviceArgs {
		return vs[0].([]AmiEbsBlockDeviceArgs)[vs[1].(int)]
	}).(AmiEbsBlockDeviceArgsOutput)
}

type AmiEbsBlockDeviceState struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The path at which the device is exposed to created instances.
	DeviceName string `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted *bool `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops *int `pulumi:"iops"`
	// The id of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId *string `pulumi:"snapshotId"`
	// The size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of EBS volume to create. Can be one of "standard" (the
	// default), "io1" or "gp2".
	VolumeType *string `pulumi:"volumeType"`
}

type AmiEbsBlockDeviceStateInput interface {
	pulumi.Input

	ToAmiEbsBlockDeviceStateOutput() AmiEbsBlockDeviceStateOutput
	ToAmiEbsBlockDeviceStateOutputWithContext(context.Context) AmiEbsBlockDeviceStateOutput
}

type AmiEbsBlockDeviceStateArgs struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The path at which the device is exposed to created instances.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The id of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// The size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of EBS volume to create. Can be one of "standard" (the
	// default), "io1" or "gp2".
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (AmiEbsBlockDeviceStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiEbsBlockDeviceState)(nil)).Elem()
}

func (i AmiEbsBlockDeviceStateArgs) ToAmiEbsBlockDeviceStateOutput() AmiEbsBlockDeviceStateOutput {
	return i.ToAmiEbsBlockDeviceStateOutputWithContext(context.Background())
}

func (i AmiEbsBlockDeviceStateArgs) ToAmiEbsBlockDeviceStateOutputWithContext(ctx context.Context) AmiEbsBlockDeviceStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiEbsBlockDeviceStateOutput)
}

type AmiEbsBlockDeviceStateArrayInput interface {
	pulumi.Input

	ToAmiEbsBlockDeviceStateArrayOutput() AmiEbsBlockDeviceStateArrayOutput
	ToAmiEbsBlockDeviceStateArrayOutputWithContext(context.Context) AmiEbsBlockDeviceStateArrayOutput
}

type AmiEbsBlockDeviceStateArray []AmiEbsBlockDeviceStateInput

func (AmiEbsBlockDeviceStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiEbsBlockDeviceState)(nil)).Elem()
}

func (i AmiEbsBlockDeviceStateArray) ToAmiEbsBlockDeviceStateArrayOutput() AmiEbsBlockDeviceStateArrayOutput {
	return i.ToAmiEbsBlockDeviceStateArrayOutputWithContext(context.Background())
}

func (i AmiEbsBlockDeviceStateArray) ToAmiEbsBlockDeviceStateArrayOutputWithContext(ctx context.Context) AmiEbsBlockDeviceStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiEbsBlockDeviceStateArrayOutput)
}

type AmiEbsBlockDeviceStateOutput struct{ *pulumi.OutputState }

func (AmiEbsBlockDeviceStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiEbsBlockDeviceState)(nil)).Elem()
}

func (o AmiEbsBlockDeviceStateOutput) ToAmiEbsBlockDeviceStateOutput() AmiEbsBlockDeviceStateOutput {
	return o
}

func (o AmiEbsBlockDeviceStateOutput) ToAmiEbsBlockDeviceStateOutputWithContext(ctx context.Context) AmiEbsBlockDeviceStateOutput {
	return o
}

// Boolean controlling whether the EBS volumes created to
// support each created instance will be deleted once that instance is terminated.
func (o AmiEbsBlockDeviceStateOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmiEbsBlockDeviceState) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The path at which the device is exposed to created instances.
func (o AmiEbsBlockDeviceStateOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v AmiEbsBlockDeviceState) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
func (o AmiEbsBlockDeviceStateOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmiEbsBlockDeviceState) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// Number of I/O operations per second the
// created volumes will support.
func (o AmiEbsBlockDeviceStateOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AmiEbsBlockDeviceState) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The id of an EBS snapshot that will be used to initialize the created
// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
// snapshot.
func (o AmiEbsBlockDeviceStateOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiEbsBlockDeviceState) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The size of created volumes in GiB.
// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
// as the selected snapshot.
func (o AmiEbsBlockDeviceStateOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AmiEbsBlockDeviceState) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of EBS volume to create. Can be one of "standard" (the
// default), "io1" or "gp2".
func (o AmiEbsBlockDeviceStateOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiEbsBlockDeviceState) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type AmiEbsBlockDeviceStateArrayOutput struct{ *pulumi.OutputState }

func (AmiEbsBlockDeviceStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiEbsBlockDeviceState)(nil)).Elem()
}

func (o AmiEbsBlockDeviceStateArrayOutput) ToAmiEbsBlockDeviceStateArrayOutput() AmiEbsBlockDeviceStateArrayOutput {
	return o
}

func (o AmiEbsBlockDeviceStateArrayOutput) ToAmiEbsBlockDeviceStateArrayOutputWithContext(ctx context.Context) AmiEbsBlockDeviceStateArrayOutput {
	return o
}

func (o AmiEbsBlockDeviceStateArrayOutput) Index(i pulumi.IntInput) AmiEbsBlockDeviceStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmiEbsBlockDeviceState {
		return vs[0].([]AmiEbsBlockDeviceState)[vs[1].(int)]
	}).(AmiEbsBlockDeviceStateOutput)
}

type AmiEphemeralBlockDevice struct {
	// The path at which the device is exposed to created instances.
	DeviceName string `pulumi:"deviceName"`
	// A name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName string `pulumi:"virtualName"`
}

type AmiEphemeralBlockDeviceInput interface {
	pulumi.Input

	ToAmiEphemeralBlockDeviceOutput() AmiEphemeralBlockDeviceOutput
	ToAmiEphemeralBlockDeviceOutputWithContext(context.Context) AmiEphemeralBlockDeviceOutput
}

type AmiEphemeralBlockDeviceArgs struct {
	// The path at which the device is exposed to created instances.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// A name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName pulumi.StringInput `pulumi:"virtualName"`
}

func (AmiEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiEphemeralBlockDevice)(nil)).Elem()
}

func (i AmiEphemeralBlockDeviceArgs) ToAmiEphemeralBlockDeviceOutput() AmiEphemeralBlockDeviceOutput {
	return i.ToAmiEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i AmiEphemeralBlockDeviceArgs) ToAmiEphemeralBlockDeviceOutputWithContext(ctx context.Context) AmiEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiEphemeralBlockDeviceOutput)
}

type AmiEphemeralBlockDeviceArrayInput interface {
	pulumi.Input

	ToAmiEphemeralBlockDeviceArrayOutput() AmiEphemeralBlockDeviceArrayOutput
	ToAmiEphemeralBlockDeviceArrayOutputWithContext(context.Context) AmiEphemeralBlockDeviceArrayOutput
}

type AmiEphemeralBlockDeviceArray []AmiEphemeralBlockDeviceInput

func (AmiEphemeralBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiEphemeralBlockDevice)(nil)).Elem()
}

func (i AmiEphemeralBlockDeviceArray) ToAmiEphemeralBlockDeviceArrayOutput() AmiEphemeralBlockDeviceArrayOutput {
	return i.ToAmiEphemeralBlockDeviceArrayOutputWithContext(context.Background())
}

func (i AmiEphemeralBlockDeviceArray) ToAmiEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) AmiEphemeralBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiEphemeralBlockDeviceArrayOutput)
}

type AmiEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (AmiEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiEphemeralBlockDevice)(nil)).Elem()
}

func (o AmiEphemeralBlockDeviceOutput) ToAmiEphemeralBlockDeviceOutput() AmiEphemeralBlockDeviceOutput {
	return o
}

func (o AmiEphemeralBlockDeviceOutput) ToAmiEphemeralBlockDeviceOutputWithContext(ctx context.Context) AmiEphemeralBlockDeviceOutput {
	return o
}

// The path at which the device is exposed to created instances.
func (o AmiEphemeralBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v AmiEphemeralBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// A name for the ephemeral device, of the form "ephemeralN" where
// *N* is a volume number starting from zero.
func (o AmiEphemeralBlockDeviceOutput) VirtualName() pulumi.StringOutput {
	return o.ApplyT(func(v AmiEphemeralBlockDevice) string { return v.VirtualName }).(pulumi.StringOutput)
}

type AmiEphemeralBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (AmiEphemeralBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiEphemeralBlockDevice)(nil)).Elem()
}

func (o AmiEphemeralBlockDeviceArrayOutput) ToAmiEphemeralBlockDeviceArrayOutput() AmiEphemeralBlockDeviceArrayOutput {
	return o
}

func (o AmiEphemeralBlockDeviceArrayOutput) ToAmiEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) AmiEphemeralBlockDeviceArrayOutput {
	return o
}

func (o AmiEphemeralBlockDeviceArrayOutput) Index(i pulumi.IntInput) AmiEphemeralBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmiEphemeralBlockDevice {
		return vs[0].([]AmiEphemeralBlockDevice)[vs[1].(int)]
	}).(AmiEphemeralBlockDeviceOutput)
}

type AmiEphemeralBlockDeviceArgs struct {
	// The path at which the device is exposed to created instances.
	DeviceName string `pulumi:"deviceName"`
	// A name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName string `pulumi:"virtualName"`
}

type AmiEphemeralBlockDeviceArgsInput interface {
	pulumi.Input

	ToAmiEphemeralBlockDeviceArgsOutput() AmiEphemeralBlockDeviceArgsOutput
	ToAmiEphemeralBlockDeviceArgsOutputWithContext(context.Context) AmiEphemeralBlockDeviceArgsOutput
}

type AmiEphemeralBlockDeviceArgsArgs struct {
	// The path at which the device is exposed to created instances.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// A name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName pulumi.StringInput `pulumi:"virtualName"`
}

func (AmiEphemeralBlockDeviceArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiEphemeralBlockDeviceArgs)(nil)).Elem()
}

func (i AmiEphemeralBlockDeviceArgsArgs) ToAmiEphemeralBlockDeviceArgsOutput() AmiEphemeralBlockDeviceArgsOutput {
	return i.ToAmiEphemeralBlockDeviceArgsOutputWithContext(context.Background())
}

func (i AmiEphemeralBlockDeviceArgsArgs) ToAmiEphemeralBlockDeviceArgsOutputWithContext(ctx context.Context) AmiEphemeralBlockDeviceArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiEphemeralBlockDeviceArgsOutput)
}

type AmiEphemeralBlockDeviceArgsArrayInput interface {
	pulumi.Input

	ToAmiEphemeralBlockDeviceArgsArrayOutput() AmiEphemeralBlockDeviceArgsArrayOutput
	ToAmiEphemeralBlockDeviceArgsArrayOutputWithContext(context.Context) AmiEphemeralBlockDeviceArgsArrayOutput
}

type AmiEphemeralBlockDeviceArgsArray []AmiEphemeralBlockDeviceArgsInput

func (AmiEphemeralBlockDeviceArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiEphemeralBlockDeviceArgs)(nil)).Elem()
}

func (i AmiEphemeralBlockDeviceArgsArray) ToAmiEphemeralBlockDeviceArgsArrayOutput() AmiEphemeralBlockDeviceArgsArrayOutput {
	return i.ToAmiEphemeralBlockDeviceArgsArrayOutputWithContext(context.Background())
}

func (i AmiEphemeralBlockDeviceArgsArray) ToAmiEphemeralBlockDeviceArgsArrayOutputWithContext(ctx context.Context) AmiEphemeralBlockDeviceArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiEphemeralBlockDeviceArgsArrayOutput)
}

type AmiEphemeralBlockDeviceArgsOutput struct{ *pulumi.OutputState }

func (AmiEphemeralBlockDeviceArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiEphemeralBlockDeviceArgs)(nil)).Elem()
}

func (o AmiEphemeralBlockDeviceArgsOutput) ToAmiEphemeralBlockDeviceArgsOutput() AmiEphemeralBlockDeviceArgsOutput {
	return o
}

func (o AmiEphemeralBlockDeviceArgsOutput) ToAmiEphemeralBlockDeviceArgsOutputWithContext(ctx context.Context) AmiEphemeralBlockDeviceArgsOutput {
	return o
}

// The path at which the device is exposed to created instances.
func (o AmiEphemeralBlockDeviceArgsOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v AmiEphemeralBlockDeviceArgs) string { return v.DeviceName }).(pulumi.StringOutput)
}

// A name for the ephemeral device, of the form "ephemeralN" where
// *N* is a volume number starting from zero.
func (o AmiEphemeralBlockDeviceArgsOutput) VirtualName() pulumi.StringOutput {
	return o.ApplyT(func(v AmiEphemeralBlockDeviceArgs) string { return v.VirtualName }).(pulumi.StringOutput)
}

type AmiEphemeralBlockDeviceArgsArrayOutput struct{ *pulumi.OutputState }

func (AmiEphemeralBlockDeviceArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiEphemeralBlockDeviceArgs)(nil)).Elem()
}

func (o AmiEphemeralBlockDeviceArgsArrayOutput) ToAmiEphemeralBlockDeviceArgsArrayOutput() AmiEphemeralBlockDeviceArgsArrayOutput {
	return o
}

func (o AmiEphemeralBlockDeviceArgsArrayOutput) ToAmiEphemeralBlockDeviceArgsArrayOutputWithContext(ctx context.Context) AmiEphemeralBlockDeviceArgsArrayOutput {
	return o
}

func (o AmiEphemeralBlockDeviceArgsArrayOutput) Index(i pulumi.IntInput) AmiEphemeralBlockDeviceArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmiEphemeralBlockDeviceArgs {
		return vs[0].([]AmiEphemeralBlockDeviceArgs)[vs[1].(int)]
	}).(AmiEphemeralBlockDeviceArgsOutput)
}

type AmiEphemeralBlockDeviceState struct {
	// The path at which the device is exposed to created instances.
	DeviceName string `pulumi:"deviceName"`
	// A name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName string `pulumi:"virtualName"`
}

type AmiEphemeralBlockDeviceStateInput interface {
	pulumi.Input

	ToAmiEphemeralBlockDeviceStateOutput() AmiEphemeralBlockDeviceStateOutput
	ToAmiEphemeralBlockDeviceStateOutputWithContext(context.Context) AmiEphemeralBlockDeviceStateOutput
}

type AmiEphemeralBlockDeviceStateArgs struct {
	// The path at which the device is exposed to created instances.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// A name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName pulumi.StringInput `pulumi:"virtualName"`
}

func (AmiEphemeralBlockDeviceStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiEphemeralBlockDeviceState)(nil)).Elem()
}

func (i AmiEphemeralBlockDeviceStateArgs) ToAmiEphemeralBlockDeviceStateOutput() AmiEphemeralBlockDeviceStateOutput {
	return i.ToAmiEphemeralBlockDeviceStateOutputWithContext(context.Background())
}

func (i AmiEphemeralBlockDeviceStateArgs) ToAmiEphemeralBlockDeviceStateOutputWithContext(ctx context.Context) AmiEphemeralBlockDeviceStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiEphemeralBlockDeviceStateOutput)
}

type AmiEphemeralBlockDeviceStateArrayInput interface {
	pulumi.Input

	ToAmiEphemeralBlockDeviceStateArrayOutput() AmiEphemeralBlockDeviceStateArrayOutput
	ToAmiEphemeralBlockDeviceStateArrayOutputWithContext(context.Context) AmiEphemeralBlockDeviceStateArrayOutput
}

type AmiEphemeralBlockDeviceStateArray []AmiEphemeralBlockDeviceStateInput

func (AmiEphemeralBlockDeviceStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiEphemeralBlockDeviceState)(nil)).Elem()
}

func (i AmiEphemeralBlockDeviceStateArray) ToAmiEphemeralBlockDeviceStateArrayOutput() AmiEphemeralBlockDeviceStateArrayOutput {
	return i.ToAmiEphemeralBlockDeviceStateArrayOutputWithContext(context.Background())
}

func (i AmiEphemeralBlockDeviceStateArray) ToAmiEphemeralBlockDeviceStateArrayOutputWithContext(ctx context.Context) AmiEphemeralBlockDeviceStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiEphemeralBlockDeviceStateArrayOutput)
}

type AmiEphemeralBlockDeviceStateOutput struct{ *pulumi.OutputState }

func (AmiEphemeralBlockDeviceStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiEphemeralBlockDeviceState)(nil)).Elem()
}

func (o AmiEphemeralBlockDeviceStateOutput) ToAmiEphemeralBlockDeviceStateOutput() AmiEphemeralBlockDeviceStateOutput {
	return o
}

func (o AmiEphemeralBlockDeviceStateOutput) ToAmiEphemeralBlockDeviceStateOutputWithContext(ctx context.Context) AmiEphemeralBlockDeviceStateOutput {
	return o
}

// The path at which the device is exposed to created instances.
func (o AmiEphemeralBlockDeviceStateOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v AmiEphemeralBlockDeviceState) string { return v.DeviceName }).(pulumi.StringOutput)
}

// A name for the ephemeral device, of the form "ephemeralN" where
// *N* is a volume number starting from zero.
func (o AmiEphemeralBlockDeviceStateOutput) VirtualName() pulumi.StringOutput {
	return o.ApplyT(func(v AmiEphemeralBlockDeviceState) string { return v.VirtualName }).(pulumi.StringOutput)
}

type AmiEphemeralBlockDeviceStateArrayOutput struct{ *pulumi.OutputState }

func (AmiEphemeralBlockDeviceStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiEphemeralBlockDeviceState)(nil)).Elem()
}

func (o AmiEphemeralBlockDeviceStateArrayOutput) ToAmiEphemeralBlockDeviceStateArrayOutput() AmiEphemeralBlockDeviceStateArrayOutput {
	return o
}

func (o AmiEphemeralBlockDeviceStateArrayOutput) ToAmiEphemeralBlockDeviceStateArrayOutputWithContext(ctx context.Context) AmiEphemeralBlockDeviceStateArrayOutput {
	return o
}

func (o AmiEphemeralBlockDeviceStateArrayOutput) Index(i pulumi.IntInput) AmiEphemeralBlockDeviceStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmiEphemeralBlockDeviceState {
		return vs[0].([]AmiEphemeralBlockDeviceState)[vs[1].(int)]
	}).(AmiEphemeralBlockDeviceStateOutput)
}

type AmiFromInstanceEbsBlockDevice struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination bool `pulumi:"deleteOnTermination"`
	// The path at which the device is exposed to created instances.
	DeviceName string `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted bool `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops int `pulumi:"iops"`
	// The id of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId string `pulumi:"snapshotId"`
	// The size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize int `pulumi:"volumeSize"`
	// The type of EBS volume to create. Can be one of "standard" (the
	// default), "io1" or "gp2".
	VolumeType string `pulumi:"volumeType"`
}

type AmiFromInstanceEbsBlockDeviceInput interface {
	pulumi.Input

	ToAmiFromInstanceEbsBlockDeviceOutput() AmiFromInstanceEbsBlockDeviceOutput
	ToAmiFromInstanceEbsBlockDeviceOutputWithContext(context.Context) AmiFromInstanceEbsBlockDeviceOutput
}

type AmiFromInstanceEbsBlockDeviceArgs struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination pulumi.BoolInput `pulumi:"deleteOnTermination"`
	// The path at which the device is exposed to created instances.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted pulumi.BoolInput `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops pulumi.IntInput `pulumi:"iops"`
	// The id of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	// The size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
	// The type of EBS volume to create. Can be one of "standard" (the
	// default), "io1" or "gp2".
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (AmiFromInstanceEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiFromInstanceEbsBlockDevice)(nil)).Elem()
}

func (i AmiFromInstanceEbsBlockDeviceArgs) ToAmiFromInstanceEbsBlockDeviceOutput() AmiFromInstanceEbsBlockDeviceOutput {
	return i.ToAmiFromInstanceEbsBlockDeviceOutputWithContext(context.Background())
}

func (i AmiFromInstanceEbsBlockDeviceArgs) ToAmiFromInstanceEbsBlockDeviceOutputWithContext(ctx context.Context) AmiFromInstanceEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiFromInstanceEbsBlockDeviceOutput)
}

type AmiFromInstanceEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToAmiFromInstanceEbsBlockDeviceArrayOutput() AmiFromInstanceEbsBlockDeviceArrayOutput
	ToAmiFromInstanceEbsBlockDeviceArrayOutputWithContext(context.Context) AmiFromInstanceEbsBlockDeviceArrayOutput
}

type AmiFromInstanceEbsBlockDeviceArray []AmiFromInstanceEbsBlockDeviceInput

func (AmiFromInstanceEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiFromInstanceEbsBlockDevice)(nil)).Elem()
}

func (i AmiFromInstanceEbsBlockDeviceArray) ToAmiFromInstanceEbsBlockDeviceArrayOutput() AmiFromInstanceEbsBlockDeviceArrayOutput {
	return i.ToAmiFromInstanceEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i AmiFromInstanceEbsBlockDeviceArray) ToAmiFromInstanceEbsBlockDeviceArrayOutputWithContext(ctx context.Context) AmiFromInstanceEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiFromInstanceEbsBlockDeviceArrayOutput)
}

type AmiFromInstanceEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (AmiFromInstanceEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiFromInstanceEbsBlockDevice)(nil)).Elem()
}

func (o AmiFromInstanceEbsBlockDeviceOutput) ToAmiFromInstanceEbsBlockDeviceOutput() AmiFromInstanceEbsBlockDeviceOutput {
	return o
}

func (o AmiFromInstanceEbsBlockDeviceOutput) ToAmiFromInstanceEbsBlockDeviceOutputWithContext(ctx context.Context) AmiFromInstanceEbsBlockDeviceOutput {
	return o
}

// Boolean controlling whether the EBS volumes created to
// support each created instance will be deleted once that instance is terminated.
func (o AmiFromInstanceEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDevice) bool { return v.DeleteOnTermination }).(pulumi.BoolOutput)
}

// The path at which the device is exposed to created instances.
func (o AmiFromInstanceEbsBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
func (o AmiFromInstanceEbsBlockDeviceOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDevice) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

// Number of I/O operations per second the
// created volumes will support.
func (o AmiFromInstanceEbsBlockDeviceOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDevice) int { return v.Iops }).(pulumi.IntOutput)
}

// The id of an EBS snapshot that will be used to initialize the created
// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
// snapshot.
func (o AmiFromInstanceEbsBlockDeviceOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDevice) string { return v.SnapshotId }).(pulumi.StringOutput)
}

// The size of created volumes in GiB.
// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
// as the selected snapshot.
func (o AmiFromInstanceEbsBlockDeviceOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDevice) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// The type of EBS volume to create. Can be one of "standard" (the
// default), "io1" or "gp2".
func (o AmiFromInstanceEbsBlockDeviceOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDevice) string { return v.VolumeType }).(pulumi.StringOutput)
}

type AmiFromInstanceEbsBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (AmiFromInstanceEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiFromInstanceEbsBlockDevice)(nil)).Elem()
}

func (o AmiFromInstanceEbsBlockDeviceArrayOutput) ToAmiFromInstanceEbsBlockDeviceArrayOutput() AmiFromInstanceEbsBlockDeviceArrayOutput {
	return o
}

func (o AmiFromInstanceEbsBlockDeviceArrayOutput) ToAmiFromInstanceEbsBlockDeviceArrayOutputWithContext(ctx context.Context) AmiFromInstanceEbsBlockDeviceArrayOutput {
	return o
}

func (o AmiFromInstanceEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) AmiFromInstanceEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmiFromInstanceEbsBlockDevice {
		return vs[0].([]AmiFromInstanceEbsBlockDevice)[vs[1].(int)]
	}).(AmiFromInstanceEbsBlockDeviceOutput)
}

type AmiFromInstanceEbsBlockDeviceArgs struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The path at which the device is exposed to created instances.
	DeviceName *string `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted *bool `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops *int `pulumi:"iops"`
	// The id of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId *string `pulumi:"snapshotId"`
	// The size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of EBS volume to create. Can be one of "standard" (the
	// default), "io1" or "gp2".
	VolumeType *string `pulumi:"volumeType"`
}

type AmiFromInstanceEbsBlockDeviceArgsInput interface {
	pulumi.Input

	ToAmiFromInstanceEbsBlockDeviceArgsOutput() AmiFromInstanceEbsBlockDeviceArgsOutput
	ToAmiFromInstanceEbsBlockDeviceArgsOutputWithContext(context.Context) AmiFromInstanceEbsBlockDeviceArgsOutput
}

type AmiFromInstanceEbsBlockDeviceArgsArgs struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The path at which the device is exposed to created instances.
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The id of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// The size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of EBS volume to create. Can be one of "standard" (the
	// default), "io1" or "gp2".
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (AmiFromInstanceEbsBlockDeviceArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiFromInstanceEbsBlockDeviceArgs)(nil)).Elem()
}

func (i AmiFromInstanceEbsBlockDeviceArgsArgs) ToAmiFromInstanceEbsBlockDeviceArgsOutput() AmiFromInstanceEbsBlockDeviceArgsOutput {
	return i.ToAmiFromInstanceEbsBlockDeviceArgsOutputWithContext(context.Background())
}

func (i AmiFromInstanceEbsBlockDeviceArgsArgs) ToAmiFromInstanceEbsBlockDeviceArgsOutputWithContext(ctx context.Context) AmiFromInstanceEbsBlockDeviceArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiFromInstanceEbsBlockDeviceArgsOutput)
}

type AmiFromInstanceEbsBlockDeviceArgsArrayInput interface {
	pulumi.Input

	ToAmiFromInstanceEbsBlockDeviceArgsArrayOutput() AmiFromInstanceEbsBlockDeviceArgsArrayOutput
	ToAmiFromInstanceEbsBlockDeviceArgsArrayOutputWithContext(context.Context) AmiFromInstanceEbsBlockDeviceArgsArrayOutput
}

type AmiFromInstanceEbsBlockDeviceArgsArray []AmiFromInstanceEbsBlockDeviceArgsInput

func (AmiFromInstanceEbsBlockDeviceArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiFromInstanceEbsBlockDeviceArgs)(nil)).Elem()
}

func (i AmiFromInstanceEbsBlockDeviceArgsArray) ToAmiFromInstanceEbsBlockDeviceArgsArrayOutput() AmiFromInstanceEbsBlockDeviceArgsArrayOutput {
	return i.ToAmiFromInstanceEbsBlockDeviceArgsArrayOutputWithContext(context.Background())
}

func (i AmiFromInstanceEbsBlockDeviceArgsArray) ToAmiFromInstanceEbsBlockDeviceArgsArrayOutputWithContext(ctx context.Context) AmiFromInstanceEbsBlockDeviceArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiFromInstanceEbsBlockDeviceArgsArrayOutput)
}

type AmiFromInstanceEbsBlockDeviceArgsOutput struct{ *pulumi.OutputState }

func (AmiFromInstanceEbsBlockDeviceArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiFromInstanceEbsBlockDeviceArgs)(nil)).Elem()
}

func (o AmiFromInstanceEbsBlockDeviceArgsOutput) ToAmiFromInstanceEbsBlockDeviceArgsOutput() AmiFromInstanceEbsBlockDeviceArgsOutput {
	return o
}

func (o AmiFromInstanceEbsBlockDeviceArgsOutput) ToAmiFromInstanceEbsBlockDeviceArgsOutputWithContext(ctx context.Context) AmiFromInstanceEbsBlockDeviceArgsOutput {
	return o
}

// Boolean controlling whether the EBS volumes created to
// support each created instance will be deleted once that instance is terminated.
func (o AmiFromInstanceEbsBlockDeviceArgsOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDeviceArgs) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The path at which the device is exposed to created instances.
func (o AmiFromInstanceEbsBlockDeviceArgsOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDeviceArgs) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
func (o AmiFromInstanceEbsBlockDeviceArgsOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDeviceArgs) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// Number of I/O operations per second the
// created volumes will support.
func (o AmiFromInstanceEbsBlockDeviceArgsOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDeviceArgs) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The id of an EBS snapshot that will be used to initialize the created
// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
// snapshot.
func (o AmiFromInstanceEbsBlockDeviceArgsOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDeviceArgs) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The size of created volumes in GiB.
// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
// as the selected snapshot.
func (o AmiFromInstanceEbsBlockDeviceArgsOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDeviceArgs) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of EBS volume to create. Can be one of "standard" (the
// default), "io1" or "gp2".
func (o AmiFromInstanceEbsBlockDeviceArgsOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDeviceArgs) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type AmiFromInstanceEbsBlockDeviceArgsArrayOutput struct{ *pulumi.OutputState }

func (AmiFromInstanceEbsBlockDeviceArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiFromInstanceEbsBlockDeviceArgs)(nil)).Elem()
}

func (o AmiFromInstanceEbsBlockDeviceArgsArrayOutput) ToAmiFromInstanceEbsBlockDeviceArgsArrayOutput() AmiFromInstanceEbsBlockDeviceArgsArrayOutput {
	return o
}

func (o AmiFromInstanceEbsBlockDeviceArgsArrayOutput) ToAmiFromInstanceEbsBlockDeviceArgsArrayOutputWithContext(ctx context.Context) AmiFromInstanceEbsBlockDeviceArgsArrayOutput {
	return o
}

func (o AmiFromInstanceEbsBlockDeviceArgsArrayOutput) Index(i pulumi.IntInput) AmiFromInstanceEbsBlockDeviceArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmiFromInstanceEbsBlockDeviceArgs {
		return vs[0].([]AmiFromInstanceEbsBlockDeviceArgs)[vs[1].(int)]
	}).(AmiFromInstanceEbsBlockDeviceArgsOutput)
}

type AmiFromInstanceEbsBlockDeviceState struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The path at which the device is exposed to created instances.
	DeviceName *string `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted *bool `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops *int `pulumi:"iops"`
	// The id of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId *string `pulumi:"snapshotId"`
	// The size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of EBS volume to create. Can be one of "standard" (the
	// default), "io1" or "gp2".
	VolumeType *string `pulumi:"volumeType"`
}

type AmiFromInstanceEbsBlockDeviceStateInput interface {
	pulumi.Input

	ToAmiFromInstanceEbsBlockDeviceStateOutput() AmiFromInstanceEbsBlockDeviceStateOutput
	ToAmiFromInstanceEbsBlockDeviceStateOutputWithContext(context.Context) AmiFromInstanceEbsBlockDeviceStateOutput
}

type AmiFromInstanceEbsBlockDeviceStateArgs struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The path at which the device is exposed to created instances.
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The id of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// The size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of EBS volume to create. Can be one of "standard" (the
	// default), "io1" or "gp2".
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (AmiFromInstanceEbsBlockDeviceStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiFromInstanceEbsBlockDeviceState)(nil)).Elem()
}

func (i AmiFromInstanceEbsBlockDeviceStateArgs) ToAmiFromInstanceEbsBlockDeviceStateOutput() AmiFromInstanceEbsBlockDeviceStateOutput {
	return i.ToAmiFromInstanceEbsBlockDeviceStateOutputWithContext(context.Background())
}

func (i AmiFromInstanceEbsBlockDeviceStateArgs) ToAmiFromInstanceEbsBlockDeviceStateOutputWithContext(ctx context.Context) AmiFromInstanceEbsBlockDeviceStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiFromInstanceEbsBlockDeviceStateOutput)
}

type AmiFromInstanceEbsBlockDeviceStateArrayInput interface {
	pulumi.Input

	ToAmiFromInstanceEbsBlockDeviceStateArrayOutput() AmiFromInstanceEbsBlockDeviceStateArrayOutput
	ToAmiFromInstanceEbsBlockDeviceStateArrayOutputWithContext(context.Context) AmiFromInstanceEbsBlockDeviceStateArrayOutput
}

type AmiFromInstanceEbsBlockDeviceStateArray []AmiFromInstanceEbsBlockDeviceStateInput

func (AmiFromInstanceEbsBlockDeviceStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiFromInstanceEbsBlockDeviceState)(nil)).Elem()
}

func (i AmiFromInstanceEbsBlockDeviceStateArray) ToAmiFromInstanceEbsBlockDeviceStateArrayOutput() AmiFromInstanceEbsBlockDeviceStateArrayOutput {
	return i.ToAmiFromInstanceEbsBlockDeviceStateArrayOutputWithContext(context.Background())
}

func (i AmiFromInstanceEbsBlockDeviceStateArray) ToAmiFromInstanceEbsBlockDeviceStateArrayOutputWithContext(ctx context.Context) AmiFromInstanceEbsBlockDeviceStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiFromInstanceEbsBlockDeviceStateArrayOutput)
}

type AmiFromInstanceEbsBlockDeviceStateOutput struct{ *pulumi.OutputState }

func (AmiFromInstanceEbsBlockDeviceStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiFromInstanceEbsBlockDeviceState)(nil)).Elem()
}

func (o AmiFromInstanceEbsBlockDeviceStateOutput) ToAmiFromInstanceEbsBlockDeviceStateOutput() AmiFromInstanceEbsBlockDeviceStateOutput {
	return o
}

func (o AmiFromInstanceEbsBlockDeviceStateOutput) ToAmiFromInstanceEbsBlockDeviceStateOutputWithContext(ctx context.Context) AmiFromInstanceEbsBlockDeviceStateOutput {
	return o
}

// Boolean controlling whether the EBS volumes created to
// support each created instance will be deleted once that instance is terminated.
func (o AmiFromInstanceEbsBlockDeviceStateOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDeviceState) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The path at which the device is exposed to created instances.
func (o AmiFromInstanceEbsBlockDeviceStateOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDeviceState) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
func (o AmiFromInstanceEbsBlockDeviceStateOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDeviceState) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// Number of I/O operations per second the
// created volumes will support.
func (o AmiFromInstanceEbsBlockDeviceStateOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDeviceState) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The id of an EBS snapshot that will be used to initialize the created
// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
// snapshot.
func (o AmiFromInstanceEbsBlockDeviceStateOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDeviceState) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The size of created volumes in GiB.
// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
// as the selected snapshot.
func (o AmiFromInstanceEbsBlockDeviceStateOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDeviceState) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of EBS volume to create. Can be one of "standard" (the
// default), "io1" or "gp2".
func (o AmiFromInstanceEbsBlockDeviceStateOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDeviceState) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type AmiFromInstanceEbsBlockDeviceStateArrayOutput struct{ *pulumi.OutputState }

func (AmiFromInstanceEbsBlockDeviceStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiFromInstanceEbsBlockDeviceState)(nil)).Elem()
}

func (o AmiFromInstanceEbsBlockDeviceStateArrayOutput) ToAmiFromInstanceEbsBlockDeviceStateArrayOutput() AmiFromInstanceEbsBlockDeviceStateArrayOutput {
	return o
}

func (o AmiFromInstanceEbsBlockDeviceStateArrayOutput) ToAmiFromInstanceEbsBlockDeviceStateArrayOutputWithContext(ctx context.Context) AmiFromInstanceEbsBlockDeviceStateArrayOutput {
	return o
}

func (o AmiFromInstanceEbsBlockDeviceStateArrayOutput) Index(i pulumi.IntInput) AmiFromInstanceEbsBlockDeviceStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmiFromInstanceEbsBlockDeviceState {
		return vs[0].([]AmiFromInstanceEbsBlockDeviceState)[vs[1].(int)]
	}).(AmiFromInstanceEbsBlockDeviceStateOutput)
}

type AmiFromInstanceEphemeralBlockDevice struct {
	// The path at which the device is exposed to created instances.
	DeviceName string `pulumi:"deviceName"`
	// A name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName string `pulumi:"virtualName"`
}

type AmiFromInstanceEphemeralBlockDeviceInput interface {
	pulumi.Input

	ToAmiFromInstanceEphemeralBlockDeviceOutput() AmiFromInstanceEphemeralBlockDeviceOutput
	ToAmiFromInstanceEphemeralBlockDeviceOutputWithContext(context.Context) AmiFromInstanceEphemeralBlockDeviceOutput
}

type AmiFromInstanceEphemeralBlockDeviceArgs struct {
	// The path at which the device is exposed to created instances.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// A name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName pulumi.StringInput `pulumi:"virtualName"`
}

func (AmiFromInstanceEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiFromInstanceEphemeralBlockDevice)(nil)).Elem()
}

func (i AmiFromInstanceEphemeralBlockDeviceArgs) ToAmiFromInstanceEphemeralBlockDeviceOutput() AmiFromInstanceEphemeralBlockDeviceOutput {
	return i.ToAmiFromInstanceEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i AmiFromInstanceEphemeralBlockDeviceArgs) ToAmiFromInstanceEphemeralBlockDeviceOutputWithContext(ctx context.Context) AmiFromInstanceEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiFromInstanceEphemeralBlockDeviceOutput)
}

type AmiFromInstanceEphemeralBlockDeviceArrayInput interface {
	pulumi.Input

	ToAmiFromInstanceEphemeralBlockDeviceArrayOutput() AmiFromInstanceEphemeralBlockDeviceArrayOutput
	ToAmiFromInstanceEphemeralBlockDeviceArrayOutputWithContext(context.Context) AmiFromInstanceEphemeralBlockDeviceArrayOutput
}

type AmiFromInstanceEphemeralBlockDeviceArray []AmiFromInstanceEphemeralBlockDeviceInput

func (AmiFromInstanceEphemeralBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiFromInstanceEphemeralBlockDevice)(nil)).Elem()
}

func (i AmiFromInstanceEphemeralBlockDeviceArray) ToAmiFromInstanceEphemeralBlockDeviceArrayOutput() AmiFromInstanceEphemeralBlockDeviceArrayOutput {
	return i.ToAmiFromInstanceEphemeralBlockDeviceArrayOutputWithContext(context.Background())
}

func (i AmiFromInstanceEphemeralBlockDeviceArray) ToAmiFromInstanceEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) AmiFromInstanceEphemeralBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiFromInstanceEphemeralBlockDeviceArrayOutput)
}

type AmiFromInstanceEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (AmiFromInstanceEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiFromInstanceEphemeralBlockDevice)(nil)).Elem()
}

func (o AmiFromInstanceEphemeralBlockDeviceOutput) ToAmiFromInstanceEphemeralBlockDeviceOutput() AmiFromInstanceEphemeralBlockDeviceOutput {
	return o
}

func (o AmiFromInstanceEphemeralBlockDeviceOutput) ToAmiFromInstanceEphemeralBlockDeviceOutputWithContext(ctx context.Context) AmiFromInstanceEphemeralBlockDeviceOutput {
	return o
}

// The path at which the device is exposed to created instances.
func (o AmiFromInstanceEphemeralBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v AmiFromInstanceEphemeralBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// A name for the ephemeral device, of the form "ephemeralN" where
// *N* is a volume number starting from zero.
func (o AmiFromInstanceEphemeralBlockDeviceOutput) VirtualName() pulumi.StringOutput {
	return o.ApplyT(func(v AmiFromInstanceEphemeralBlockDevice) string { return v.VirtualName }).(pulumi.StringOutput)
}

type AmiFromInstanceEphemeralBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (AmiFromInstanceEphemeralBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiFromInstanceEphemeralBlockDevice)(nil)).Elem()
}

func (o AmiFromInstanceEphemeralBlockDeviceArrayOutput) ToAmiFromInstanceEphemeralBlockDeviceArrayOutput() AmiFromInstanceEphemeralBlockDeviceArrayOutput {
	return o
}

func (o AmiFromInstanceEphemeralBlockDeviceArrayOutput) ToAmiFromInstanceEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) AmiFromInstanceEphemeralBlockDeviceArrayOutput {
	return o
}

func (o AmiFromInstanceEphemeralBlockDeviceArrayOutput) Index(i pulumi.IntInput) AmiFromInstanceEphemeralBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmiFromInstanceEphemeralBlockDevice {
		return vs[0].([]AmiFromInstanceEphemeralBlockDevice)[vs[1].(int)]
	}).(AmiFromInstanceEphemeralBlockDeviceOutput)
}

type AmiFromInstanceEphemeralBlockDeviceArgs struct {
	// The path at which the device is exposed to created instances.
	DeviceName *string `pulumi:"deviceName"`
	// A name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName *string `pulumi:"virtualName"`
}

type AmiFromInstanceEphemeralBlockDeviceArgsInput interface {
	pulumi.Input

	ToAmiFromInstanceEphemeralBlockDeviceArgsOutput() AmiFromInstanceEphemeralBlockDeviceArgsOutput
	ToAmiFromInstanceEphemeralBlockDeviceArgsOutputWithContext(context.Context) AmiFromInstanceEphemeralBlockDeviceArgsOutput
}

type AmiFromInstanceEphemeralBlockDeviceArgsArgs struct {
	// The path at which the device is exposed to created instances.
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	// A name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName pulumi.StringPtrInput `pulumi:"virtualName"`
}

func (AmiFromInstanceEphemeralBlockDeviceArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiFromInstanceEphemeralBlockDeviceArgs)(nil)).Elem()
}

func (i AmiFromInstanceEphemeralBlockDeviceArgsArgs) ToAmiFromInstanceEphemeralBlockDeviceArgsOutput() AmiFromInstanceEphemeralBlockDeviceArgsOutput {
	return i.ToAmiFromInstanceEphemeralBlockDeviceArgsOutputWithContext(context.Background())
}

func (i AmiFromInstanceEphemeralBlockDeviceArgsArgs) ToAmiFromInstanceEphemeralBlockDeviceArgsOutputWithContext(ctx context.Context) AmiFromInstanceEphemeralBlockDeviceArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiFromInstanceEphemeralBlockDeviceArgsOutput)
}

type AmiFromInstanceEphemeralBlockDeviceArgsArrayInput interface {
	pulumi.Input

	ToAmiFromInstanceEphemeralBlockDeviceArgsArrayOutput() AmiFromInstanceEphemeralBlockDeviceArgsArrayOutput
	ToAmiFromInstanceEphemeralBlockDeviceArgsArrayOutputWithContext(context.Context) AmiFromInstanceEphemeralBlockDeviceArgsArrayOutput
}

type AmiFromInstanceEphemeralBlockDeviceArgsArray []AmiFromInstanceEphemeralBlockDeviceArgsInput

func (AmiFromInstanceEphemeralBlockDeviceArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiFromInstanceEphemeralBlockDeviceArgs)(nil)).Elem()
}

func (i AmiFromInstanceEphemeralBlockDeviceArgsArray) ToAmiFromInstanceEphemeralBlockDeviceArgsArrayOutput() AmiFromInstanceEphemeralBlockDeviceArgsArrayOutput {
	return i.ToAmiFromInstanceEphemeralBlockDeviceArgsArrayOutputWithContext(context.Background())
}

func (i AmiFromInstanceEphemeralBlockDeviceArgsArray) ToAmiFromInstanceEphemeralBlockDeviceArgsArrayOutputWithContext(ctx context.Context) AmiFromInstanceEphemeralBlockDeviceArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiFromInstanceEphemeralBlockDeviceArgsArrayOutput)
}

type AmiFromInstanceEphemeralBlockDeviceArgsOutput struct{ *pulumi.OutputState }

func (AmiFromInstanceEphemeralBlockDeviceArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiFromInstanceEphemeralBlockDeviceArgs)(nil)).Elem()
}

func (o AmiFromInstanceEphemeralBlockDeviceArgsOutput) ToAmiFromInstanceEphemeralBlockDeviceArgsOutput() AmiFromInstanceEphemeralBlockDeviceArgsOutput {
	return o
}

func (o AmiFromInstanceEphemeralBlockDeviceArgsOutput) ToAmiFromInstanceEphemeralBlockDeviceArgsOutputWithContext(ctx context.Context) AmiFromInstanceEphemeralBlockDeviceArgsOutput {
	return o
}

// The path at which the device is exposed to created instances.
func (o AmiFromInstanceEphemeralBlockDeviceArgsOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEphemeralBlockDeviceArgs) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

// A name for the ephemeral device, of the form "ephemeralN" where
// *N* is a volume number starting from zero.
func (o AmiFromInstanceEphemeralBlockDeviceArgsOutput) VirtualName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEphemeralBlockDeviceArgs) *string { return v.VirtualName }).(pulumi.StringPtrOutput)
}

type AmiFromInstanceEphemeralBlockDeviceArgsArrayOutput struct{ *pulumi.OutputState }

func (AmiFromInstanceEphemeralBlockDeviceArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiFromInstanceEphemeralBlockDeviceArgs)(nil)).Elem()
}

func (o AmiFromInstanceEphemeralBlockDeviceArgsArrayOutput) ToAmiFromInstanceEphemeralBlockDeviceArgsArrayOutput() AmiFromInstanceEphemeralBlockDeviceArgsArrayOutput {
	return o
}

func (o AmiFromInstanceEphemeralBlockDeviceArgsArrayOutput) ToAmiFromInstanceEphemeralBlockDeviceArgsArrayOutputWithContext(ctx context.Context) AmiFromInstanceEphemeralBlockDeviceArgsArrayOutput {
	return o
}

func (o AmiFromInstanceEphemeralBlockDeviceArgsArrayOutput) Index(i pulumi.IntInput) AmiFromInstanceEphemeralBlockDeviceArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmiFromInstanceEphemeralBlockDeviceArgs {
		return vs[0].([]AmiFromInstanceEphemeralBlockDeviceArgs)[vs[1].(int)]
	}).(AmiFromInstanceEphemeralBlockDeviceArgsOutput)
}

type AmiFromInstanceEphemeralBlockDeviceState struct {
	// The path at which the device is exposed to created instances.
	DeviceName *string `pulumi:"deviceName"`
	// A name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName *string `pulumi:"virtualName"`
}

type AmiFromInstanceEphemeralBlockDeviceStateInput interface {
	pulumi.Input

	ToAmiFromInstanceEphemeralBlockDeviceStateOutput() AmiFromInstanceEphemeralBlockDeviceStateOutput
	ToAmiFromInstanceEphemeralBlockDeviceStateOutputWithContext(context.Context) AmiFromInstanceEphemeralBlockDeviceStateOutput
}

type AmiFromInstanceEphemeralBlockDeviceStateArgs struct {
	// The path at which the device is exposed to created instances.
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	// A name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName pulumi.StringPtrInput `pulumi:"virtualName"`
}

func (AmiFromInstanceEphemeralBlockDeviceStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiFromInstanceEphemeralBlockDeviceState)(nil)).Elem()
}

func (i AmiFromInstanceEphemeralBlockDeviceStateArgs) ToAmiFromInstanceEphemeralBlockDeviceStateOutput() AmiFromInstanceEphemeralBlockDeviceStateOutput {
	return i.ToAmiFromInstanceEphemeralBlockDeviceStateOutputWithContext(context.Background())
}

func (i AmiFromInstanceEphemeralBlockDeviceStateArgs) ToAmiFromInstanceEphemeralBlockDeviceStateOutputWithContext(ctx context.Context) AmiFromInstanceEphemeralBlockDeviceStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiFromInstanceEphemeralBlockDeviceStateOutput)
}

type AmiFromInstanceEphemeralBlockDeviceStateArrayInput interface {
	pulumi.Input

	ToAmiFromInstanceEphemeralBlockDeviceStateArrayOutput() AmiFromInstanceEphemeralBlockDeviceStateArrayOutput
	ToAmiFromInstanceEphemeralBlockDeviceStateArrayOutputWithContext(context.Context) AmiFromInstanceEphemeralBlockDeviceStateArrayOutput
}

type AmiFromInstanceEphemeralBlockDeviceStateArray []AmiFromInstanceEphemeralBlockDeviceStateInput

func (AmiFromInstanceEphemeralBlockDeviceStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiFromInstanceEphemeralBlockDeviceState)(nil)).Elem()
}

func (i AmiFromInstanceEphemeralBlockDeviceStateArray) ToAmiFromInstanceEphemeralBlockDeviceStateArrayOutput() AmiFromInstanceEphemeralBlockDeviceStateArrayOutput {
	return i.ToAmiFromInstanceEphemeralBlockDeviceStateArrayOutputWithContext(context.Background())
}

func (i AmiFromInstanceEphemeralBlockDeviceStateArray) ToAmiFromInstanceEphemeralBlockDeviceStateArrayOutputWithContext(ctx context.Context) AmiFromInstanceEphemeralBlockDeviceStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiFromInstanceEphemeralBlockDeviceStateArrayOutput)
}

type AmiFromInstanceEphemeralBlockDeviceStateOutput struct{ *pulumi.OutputState }

func (AmiFromInstanceEphemeralBlockDeviceStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiFromInstanceEphemeralBlockDeviceState)(nil)).Elem()
}

func (o AmiFromInstanceEphemeralBlockDeviceStateOutput) ToAmiFromInstanceEphemeralBlockDeviceStateOutput() AmiFromInstanceEphemeralBlockDeviceStateOutput {
	return o
}

func (o AmiFromInstanceEphemeralBlockDeviceStateOutput) ToAmiFromInstanceEphemeralBlockDeviceStateOutputWithContext(ctx context.Context) AmiFromInstanceEphemeralBlockDeviceStateOutput {
	return o
}

// The path at which the device is exposed to created instances.
func (o AmiFromInstanceEphemeralBlockDeviceStateOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEphemeralBlockDeviceState) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

// A name for the ephemeral device, of the form "ephemeralN" where
// *N* is a volume number starting from zero.
func (o AmiFromInstanceEphemeralBlockDeviceStateOutput) VirtualName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEphemeralBlockDeviceState) *string { return v.VirtualName }).(pulumi.StringPtrOutput)
}

type AmiFromInstanceEphemeralBlockDeviceStateArrayOutput struct{ *pulumi.OutputState }

func (AmiFromInstanceEphemeralBlockDeviceStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiFromInstanceEphemeralBlockDeviceState)(nil)).Elem()
}

func (o AmiFromInstanceEphemeralBlockDeviceStateArrayOutput) ToAmiFromInstanceEphemeralBlockDeviceStateArrayOutput() AmiFromInstanceEphemeralBlockDeviceStateArrayOutput {
	return o
}

func (o AmiFromInstanceEphemeralBlockDeviceStateArrayOutput) ToAmiFromInstanceEphemeralBlockDeviceStateArrayOutputWithContext(ctx context.Context) AmiFromInstanceEphemeralBlockDeviceStateArrayOutput {
	return o
}

func (o AmiFromInstanceEphemeralBlockDeviceStateArrayOutput) Index(i pulumi.IntInput) AmiFromInstanceEphemeralBlockDeviceStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmiFromInstanceEphemeralBlockDeviceState {
		return vs[0].([]AmiFromInstanceEphemeralBlockDeviceState)[vs[1].(int)]
	}).(AmiFromInstanceEphemeralBlockDeviceStateOutput)
}

type DefaultNetworkAclEgress struct {
	// The action to take.
	Action string `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort int `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode *int `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType *int `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol string `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo int `pulumi:"ruleNo"`
	// The to port to match.
	ToPort int `pulumi:"toPort"`
}

type DefaultNetworkAclEgressInput interface {
	pulumi.Input

	ToDefaultNetworkAclEgressOutput() DefaultNetworkAclEgressOutput
	ToDefaultNetworkAclEgressOutputWithContext(context.Context) DefaultNetworkAclEgressOutput
}

type DefaultNetworkAclEgressArgs struct {
	// The action to take.
	Action pulumi.StringInput `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode pulumi.IntPtrInput `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType pulumi.IntPtrInput `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo pulumi.IntInput `pulumi:"ruleNo"`
	// The to port to match.
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (DefaultNetworkAclEgressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultNetworkAclEgress)(nil)).Elem()
}

func (i DefaultNetworkAclEgressArgs) ToDefaultNetworkAclEgressOutput() DefaultNetworkAclEgressOutput {
	return i.ToDefaultNetworkAclEgressOutputWithContext(context.Background())
}

func (i DefaultNetworkAclEgressArgs) ToDefaultNetworkAclEgressOutputWithContext(ctx context.Context) DefaultNetworkAclEgressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultNetworkAclEgressOutput)
}

type DefaultNetworkAclEgressArrayInput interface {
	pulumi.Input

	ToDefaultNetworkAclEgressArrayOutput() DefaultNetworkAclEgressArrayOutput
	ToDefaultNetworkAclEgressArrayOutputWithContext(context.Context) DefaultNetworkAclEgressArrayOutput
}

type DefaultNetworkAclEgressArray []DefaultNetworkAclEgressInput

func (DefaultNetworkAclEgressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultNetworkAclEgress)(nil)).Elem()
}

func (i DefaultNetworkAclEgressArray) ToDefaultNetworkAclEgressArrayOutput() DefaultNetworkAclEgressArrayOutput {
	return i.ToDefaultNetworkAclEgressArrayOutputWithContext(context.Background())
}

func (i DefaultNetworkAclEgressArray) ToDefaultNetworkAclEgressArrayOutputWithContext(ctx context.Context) DefaultNetworkAclEgressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultNetworkAclEgressArrayOutput)
}

type DefaultNetworkAclEgressOutput struct{ *pulumi.OutputState }

func (DefaultNetworkAclEgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultNetworkAclEgress)(nil)).Elem()
}

func (o DefaultNetworkAclEgressOutput) ToDefaultNetworkAclEgressOutput() DefaultNetworkAclEgressOutput {
	return o
}

func (o DefaultNetworkAclEgressOutput) ToDefaultNetworkAclEgressOutputWithContext(ctx context.Context) DefaultNetworkAclEgressOutput {
	return o
}

// The action to take.
func (o DefaultNetworkAclEgressOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgress) string { return v.Action }).(pulumi.StringOutput)
}

// The CIDR block to match. This must be a
// valid network mask.
func (o DefaultNetworkAclEgressOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgress) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// The from port to match.
func (o DefaultNetworkAclEgressOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgress) int { return v.FromPort }).(pulumi.IntOutput)
}

// The ICMP type code to be used. Default 0.
func (o DefaultNetworkAclEgressOutput) IcmpCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgress) *int { return v.IcmpCode }).(pulumi.IntPtrOutput)
}

// The ICMP type to be used. Default 0.
func (o DefaultNetworkAclEgressOutput) IcmpType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgress) *int { return v.IcmpType }).(pulumi.IntPtrOutput)
}

// The IPv6 CIDR block.
func (o DefaultNetworkAclEgressOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgress) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// The protocol to match. If using the -1 'all'
// protocol, you must specify a from and to port of 0.
func (o DefaultNetworkAclEgressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgress) string { return v.Protocol }).(pulumi.StringOutput)
}

// The rule number. Used for ordering.
func (o DefaultNetworkAclEgressOutput) RuleNo() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgress) int { return v.RuleNo }).(pulumi.IntOutput)
}

// The to port to match.
func (o DefaultNetworkAclEgressOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgress) int { return v.ToPort }).(pulumi.IntOutput)
}

type DefaultNetworkAclEgressArrayOutput struct{ *pulumi.OutputState }

func (DefaultNetworkAclEgressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultNetworkAclEgress)(nil)).Elem()
}

func (o DefaultNetworkAclEgressArrayOutput) ToDefaultNetworkAclEgressArrayOutput() DefaultNetworkAclEgressArrayOutput {
	return o
}

func (o DefaultNetworkAclEgressArrayOutput) ToDefaultNetworkAclEgressArrayOutputWithContext(ctx context.Context) DefaultNetworkAclEgressArrayOutput {
	return o
}

func (o DefaultNetworkAclEgressArrayOutput) Index(i pulumi.IntInput) DefaultNetworkAclEgressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DefaultNetworkAclEgress {
		return vs[0].([]DefaultNetworkAclEgress)[vs[1].(int)]
	}).(DefaultNetworkAclEgressOutput)
}

type DefaultNetworkAclEgressArgs struct {
	// The action to take.
	Action string `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort int `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode *int `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType *int `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol string `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo int `pulumi:"ruleNo"`
	// The to port to match.
	ToPort int `pulumi:"toPort"`
}

type DefaultNetworkAclEgressArgsInput interface {
	pulumi.Input

	ToDefaultNetworkAclEgressArgsOutput() DefaultNetworkAclEgressArgsOutput
	ToDefaultNetworkAclEgressArgsOutputWithContext(context.Context) DefaultNetworkAclEgressArgsOutput
}

type DefaultNetworkAclEgressArgsArgs struct {
	// The action to take.
	Action pulumi.StringInput `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode pulumi.IntPtrInput `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType pulumi.IntPtrInput `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo pulumi.IntInput `pulumi:"ruleNo"`
	// The to port to match.
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (DefaultNetworkAclEgressArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultNetworkAclEgressArgs)(nil)).Elem()
}

func (i DefaultNetworkAclEgressArgsArgs) ToDefaultNetworkAclEgressArgsOutput() DefaultNetworkAclEgressArgsOutput {
	return i.ToDefaultNetworkAclEgressArgsOutputWithContext(context.Background())
}

func (i DefaultNetworkAclEgressArgsArgs) ToDefaultNetworkAclEgressArgsOutputWithContext(ctx context.Context) DefaultNetworkAclEgressArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultNetworkAclEgressArgsOutput)
}

type DefaultNetworkAclEgressArgsArrayInput interface {
	pulumi.Input

	ToDefaultNetworkAclEgressArgsArrayOutput() DefaultNetworkAclEgressArgsArrayOutput
	ToDefaultNetworkAclEgressArgsArrayOutputWithContext(context.Context) DefaultNetworkAclEgressArgsArrayOutput
}

type DefaultNetworkAclEgressArgsArray []DefaultNetworkAclEgressArgsInput

func (DefaultNetworkAclEgressArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultNetworkAclEgressArgs)(nil)).Elem()
}

func (i DefaultNetworkAclEgressArgsArray) ToDefaultNetworkAclEgressArgsArrayOutput() DefaultNetworkAclEgressArgsArrayOutput {
	return i.ToDefaultNetworkAclEgressArgsArrayOutputWithContext(context.Background())
}

func (i DefaultNetworkAclEgressArgsArray) ToDefaultNetworkAclEgressArgsArrayOutputWithContext(ctx context.Context) DefaultNetworkAclEgressArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultNetworkAclEgressArgsArrayOutput)
}

type DefaultNetworkAclEgressArgsOutput struct{ *pulumi.OutputState }

func (DefaultNetworkAclEgressArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultNetworkAclEgressArgs)(nil)).Elem()
}

func (o DefaultNetworkAclEgressArgsOutput) ToDefaultNetworkAclEgressArgsOutput() DefaultNetworkAclEgressArgsOutput {
	return o
}

func (o DefaultNetworkAclEgressArgsOutput) ToDefaultNetworkAclEgressArgsOutputWithContext(ctx context.Context) DefaultNetworkAclEgressArgsOutput {
	return o
}

// The action to take.
func (o DefaultNetworkAclEgressArgsOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgressArgs) string { return v.Action }).(pulumi.StringOutput)
}

// The CIDR block to match. This must be a
// valid network mask.
func (o DefaultNetworkAclEgressArgsOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgressArgs) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// The from port to match.
func (o DefaultNetworkAclEgressArgsOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgressArgs) int { return v.FromPort }).(pulumi.IntOutput)
}

// The ICMP type code to be used. Default 0.
func (o DefaultNetworkAclEgressArgsOutput) IcmpCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgressArgs) *int { return v.IcmpCode }).(pulumi.IntPtrOutput)
}

// The ICMP type to be used. Default 0.
func (o DefaultNetworkAclEgressArgsOutput) IcmpType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgressArgs) *int { return v.IcmpType }).(pulumi.IntPtrOutput)
}

// The IPv6 CIDR block.
func (o DefaultNetworkAclEgressArgsOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgressArgs) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// The protocol to match. If using the -1 'all'
// protocol, you must specify a from and to port of 0.
func (o DefaultNetworkAclEgressArgsOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgressArgs) string { return v.Protocol }).(pulumi.StringOutput)
}

// The rule number. Used for ordering.
func (o DefaultNetworkAclEgressArgsOutput) RuleNo() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgressArgs) int { return v.RuleNo }).(pulumi.IntOutput)
}

// The to port to match.
func (o DefaultNetworkAclEgressArgsOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgressArgs) int { return v.ToPort }).(pulumi.IntOutput)
}

type DefaultNetworkAclEgressArgsArrayOutput struct{ *pulumi.OutputState }

func (DefaultNetworkAclEgressArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultNetworkAclEgressArgs)(nil)).Elem()
}

func (o DefaultNetworkAclEgressArgsArrayOutput) ToDefaultNetworkAclEgressArgsArrayOutput() DefaultNetworkAclEgressArgsArrayOutput {
	return o
}

func (o DefaultNetworkAclEgressArgsArrayOutput) ToDefaultNetworkAclEgressArgsArrayOutputWithContext(ctx context.Context) DefaultNetworkAclEgressArgsArrayOutput {
	return o
}

func (o DefaultNetworkAclEgressArgsArrayOutput) Index(i pulumi.IntInput) DefaultNetworkAclEgressArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DefaultNetworkAclEgressArgs {
		return vs[0].([]DefaultNetworkAclEgressArgs)[vs[1].(int)]
	}).(DefaultNetworkAclEgressArgsOutput)
}

type DefaultNetworkAclEgressState struct {
	// The action to take.
	Action string `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort int `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode *int `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType *int `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol string `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo int `pulumi:"ruleNo"`
	// The to port to match.
	ToPort int `pulumi:"toPort"`
}

type DefaultNetworkAclEgressStateInput interface {
	pulumi.Input

	ToDefaultNetworkAclEgressStateOutput() DefaultNetworkAclEgressStateOutput
	ToDefaultNetworkAclEgressStateOutputWithContext(context.Context) DefaultNetworkAclEgressStateOutput
}

type DefaultNetworkAclEgressStateArgs struct {
	// The action to take.
	Action pulumi.StringInput `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode pulumi.IntPtrInput `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType pulumi.IntPtrInput `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo pulumi.IntInput `pulumi:"ruleNo"`
	// The to port to match.
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (DefaultNetworkAclEgressStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultNetworkAclEgressState)(nil)).Elem()
}

func (i DefaultNetworkAclEgressStateArgs) ToDefaultNetworkAclEgressStateOutput() DefaultNetworkAclEgressStateOutput {
	return i.ToDefaultNetworkAclEgressStateOutputWithContext(context.Background())
}

func (i DefaultNetworkAclEgressStateArgs) ToDefaultNetworkAclEgressStateOutputWithContext(ctx context.Context) DefaultNetworkAclEgressStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultNetworkAclEgressStateOutput)
}

type DefaultNetworkAclEgressStateArrayInput interface {
	pulumi.Input

	ToDefaultNetworkAclEgressStateArrayOutput() DefaultNetworkAclEgressStateArrayOutput
	ToDefaultNetworkAclEgressStateArrayOutputWithContext(context.Context) DefaultNetworkAclEgressStateArrayOutput
}

type DefaultNetworkAclEgressStateArray []DefaultNetworkAclEgressStateInput

func (DefaultNetworkAclEgressStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultNetworkAclEgressState)(nil)).Elem()
}

func (i DefaultNetworkAclEgressStateArray) ToDefaultNetworkAclEgressStateArrayOutput() DefaultNetworkAclEgressStateArrayOutput {
	return i.ToDefaultNetworkAclEgressStateArrayOutputWithContext(context.Background())
}

func (i DefaultNetworkAclEgressStateArray) ToDefaultNetworkAclEgressStateArrayOutputWithContext(ctx context.Context) DefaultNetworkAclEgressStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultNetworkAclEgressStateArrayOutput)
}

type DefaultNetworkAclEgressStateOutput struct{ *pulumi.OutputState }

func (DefaultNetworkAclEgressStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultNetworkAclEgressState)(nil)).Elem()
}

func (o DefaultNetworkAclEgressStateOutput) ToDefaultNetworkAclEgressStateOutput() DefaultNetworkAclEgressStateOutput {
	return o
}

func (o DefaultNetworkAclEgressStateOutput) ToDefaultNetworkAclEgressStateOutputWithContext(ctx context.Context) DefaultNetworkAclEgressStateOutput {
	return o
}

// The action to take.
func (o DefaultNetworkAclEgressStateOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgressState) string { return v.Action }).(pulumi.StringOutput)
}

// The CIDR block to match. This must be a
// valid network mask.
func (o DefaultNetworkAclEgressStateOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgressState) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// The from port to match.
func (o DefaultNetworkAclEgressStateOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgressState) int { return v.FromPort }).(pulumi.IntOutput)
}

// The ICMP type code to be used. Default 0.
func (o DefaultNetworkAclEgressStateOutput) IcmpCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgressState) *int { return v.IcmpCode }).(pulumi.IntPtrOutput)
}

// The ICMP type to be used. Default 0.
func (o DefaultNetworkAclEgressStateOutput) IcmpType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgressState) *int { return v.IcmpType }).(pulumi.IntPtrOutput)
}

// The IPv6 CIDR block.
func (o DefaultNetworkAclEgressStateOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgressState) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// The protocol to match. If using the -1 'all'
// protocol, you must specify a from and to port of 0.
func (o DefaultNetworkAclEgressStateOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgressState) string { return v.Protocol }).(pulumi.StringOutput)
}

// The rule number. Used for ordering.
func (o DefaultNetworkAclEgressStateOutput) RuleNo() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgressState) int { return v.RuleNo }).(pulumi.IntOutput)
}

// The to port to match.
func (o DefaultNetworkAclEgressStateOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgressState) int { return v.ToPort }).(pulumi.IntOutput)
}

type DefaultNetworkAclEgressStateArrayOutput struct{ *pulumi.OutputState }

func (DefaultNetworkAclEgressStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultNetworkAclEgressState)(nil)).Elem()
}

func (o DefaultNetworkAclEgressStateArrayOutput) ToDefaultNetworkAclEgressStateArrayOutput() DefaultNetworkAclEgressStateArrayOutput {
	return o
}

func (o DefaultNetworkAclEgressStateArrayOutput) ToDefaultNetworkAclEgressStateArrayOutputWithContext(ctx context.Context) DefaultNetworkAclEgressStateArrayOutput {
	return o
}

func (o DefaultNetworkAclEgressStateArrayOutput) Index(i pulumi.IntInput) DefaultNetworkAclEgressStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DefaultNetworkAclEgressState {
		return vs[0].([]DefaultNetworkAclEgressState)[vs[1].(int)]
	}).(DefaultNetworkAclEgressStateOutput)
}

type DefaultNetworkAclIngress struct {
	// The action to take.
	Action string `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort int `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode *int `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType *int `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol string `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo int `pulumi:"ruleNo"`
	// The to port to match.
	ToPort int `pulumi:"toPort"`
}

type DefaultNetworkAclIngressInput interface {
	pulumi.Input

	ToDefaultNetworkAclIngressOutput() DefaultNetworkAclIngressOutput
	ToDefaultNetworkAclIngressOutputWithContext(context.Context) DefaultNetworkAclIngressOutput
}

type DefaultNetworkAclIngressArgs struct {
	// The action to take.
	Action pulumi.StringInput `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode pulumi.IntPtrInput `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType pulumi.IntPtrInput `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo pulumi.IntInput `pulumi:"ruleNo"`
	// The to port to match.
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (DefaultNetworkAclIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultNetworkAclIngress)(nil)).Elem()
}

func (i DefaultNetworkAclIngressArgs) ToDefaultNetworkAclIngressOutput() DefaultNetworkAclIngressOutput {
	return i.ToDefaultNetworkAclIngressOutputWithContext(context.Background())
}

func (i DefaultNetworkAclIngressArgs) ToDefaultNetworkAclIngressOutputWithContext(ctx context.Context) DefaultNetworkAclIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultNetworkAclIngressOutput)
}

type DefaultNetworkAclIngressArrayInput interface {
	pulumi.Input

	ToDefaultNetworkAclIngressArrayOutput() DefaultNetworkAclIngressArrayOutput
	ToDefaultNetworkAclIngressArrayOutputWithContext(context.Context) DefaultNetworkAclIngressArrayOutput
}

type DefaultNetworkAclIngressArray []DefaultNetworkAclIngressInput

func (DefaultNetworkAclIngressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultNetworkAclIngress)(nil)).Elem()
}

func (i DefaultNetworkAclIngressArray) ToDefaultNetworkAclIngressArrayOutput() DefaultNetworkAclIngressArrayOutput {
	return i.ToDefaultNetworkAclIngressArrayOutputWithContext(context.Background())
}

func (i DefaultNetworkAclIngressArray) ToDefaultNetworkAclIngressArrayOutputWithContext(ctx context.Context) DefaultNetworkAclIngressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultNetworkAclIngressArrayOutput)
}

type DefaultNetworkAclIngressOutput struct{ *pulumi.OutputState }

func (DefaultNetworkAclIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultNetworkAclIngress)(nil)).Elem()
}

func (o DefaultNetworkAclIngressOutput) ToDefaultNetworkAclIngressOutput() DefaultNetworkAclIngressOutput {
	return o
}

func (o DefaultNetworkAclIngressOutput) ToDefaultNetworkAclIngressOutputWithContext(ctx context.Context) DefaultNetworkAclIngressOutput {
	return o
}

// The action to take.
func (o DefaultNetworkAclIngressOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngress) string { return v.Action }).(pulumi.StringOutput)
}

// The CIDR block to match. This must be a
// valid network mask.
func (o DefaultNetworkAclIngressOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngress) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// The from port to match.
func (o DefaultNetworkAclIngressOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngress) int { return v.FromPort }).(pulumi.IntOutput)
}

// The ICMP type code to be used. Default 0.
func (o DefaultNetworkAclIngressOutput) IcmpCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngress) *int { return v.IcmpCode }).(pulumi.IntPtrOutput)
}

// The ICMP type to be used. Default 0.
func (o DefaultNetworkAclIngressOutput) IcmpType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngress) *int { return v.IcmpType }).(pulumi.IntPtrOutput)
}

// The IPv6 CIDR block.
func (o DefaultNetworkAclIngressOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngress) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// The protocol to match. If using the -1 'all'
// protocol, you must specify a from and to port of 0.
func (o DefaultNetworkAclIngressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngress) string { return v.Protocol }).(pulumi.StringOutput)
}

// The rule number. Used for ordering.
func (o DefaultNetworkAclIngressOutput) RuleNo() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngress) int { return v.RuleNo }).(pulumi.IntOutput)
}

// The to port to match.
func (o DefaultNetworkAclIngressOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngress) int { return v.ToPort }).(pulumi.IntOutput)
}

type DefaultNetworkAclIngressArrayOutput struct{ *pulumi.OutputState }

func (DefaultNetworkAclIngressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultNetworkAclIngress)(nil)).Elem()
}

func (o DefaultNetworkAclIngressArrayOutput) ToDefaultNetworkAclIngressArrayOutput() DefaultNetworkAclIngressArrayOutput {
	return o
}

func (o DefaultNetworkAclIngressArrayOutput) ToDefaultNetworkAclIngressArrayOutputWithContext(ctx context.Context) DefaultNetworkAclIngressArrayOutput {
	return o
}

func (o DefaultNetworkAclIngressArrayOutput) Index(i pulumi.IntInput) DefaultNetworkAclIngressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DefaultNetworkAclIngress {
		return vs[0].([]DefaultNetworkAclIngress)[vs[1].(int)]
	}).(DefaultNetworkAclIngressOutput)
}

type DefaultNetworkAclIngressArgs struct {
	// The action to take.
	Action string `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort int `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode *int `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType *int `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol string `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo int `pulumi:"ruleNo"`
	// The to port to match.
	ToPort int `pulumi:"toPort"`
}

type DefaultNetworkAclIngressArgsInput interface {
	pulumi.Input

	ToDefaultNetworkAclIngressArgsOutput() DefaultNetworkAclIngressArgsOutput
	ToDefaultNetworkAclIngressArgsOutputWithContext(context.Context) DefaultNetworkAclIngressArgsOutput
}

type DefaultNetworkAclIngressArgsArgs struct {
	// The action to take.
	Action pulumi.StringInput `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode pulumi.IntPtrInput `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType pulumi.IntPtrInput `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo pulumi.IntInput `pulumi:"ruleNo"`
	// The to port to match.
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (DefaultNetworkAclIngressArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultNetworkAclIngressArgs)(nil)).Elem()
}

func (i DefaultNetworkAclIngressArgsArgs) ToDefaultNetworkAclIngressArgsOutput() DefaultNetworkAclIngressArgsOutput {
	return i.ToDefaultNetworkAclIngressArgsOutputWithContext(context.Background())
}

func (i DefaultNetworkAclIngressArgsArgs) ToDefaultNetworkAclIngressArgsOutputWithContext(ctx context.Context) DefaultNetworkAclIngressArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultNetworkAclIngressArgsOutput)
}

type DefaultNetworkAclIngressArgsArrayInput interface {
	pulumi.Input

	ToDefaultNetworkAclIngressArgsArrayOutput() DefaultNetworkAclIngressArgsArrayOutput
	ToDefaultNetworkAclIngressArgsArrayOutputWithContext(context.Context) DefaultNetworkAclIngressArgsArrayOutput
}

type DefaultNetworkAclIngressArgsArray []DefaultNetworkAclIngressArgsInput

func (DefaultNetworkAclIngressArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultNetworkAclIngressArgs)(nil)).Elem()
}

func (i DefaultNetworkAclIngressArgsArray) ToDefaultNetworkAclIngressArgsArrayOutput() DefaultNetworkAclIngressArgsArrayOutput {
	return i.ToDefaultNetworkAclIngressArgsArrayOutputWithContext(context.Background())
}

func (i DefaultNetworkAclIngressArgsArray) ToDefaultNetworkAclIngressArgsArrayOutputWithContext(ctx context.Context) DefaultNetworkAclIngressArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultNetworkAclIngressArgsArrayOutput)
}

type DefaultNetworkAclIngressArgsOutput struct{ *pulumi.OutputState }

func (DefaultNetworkAclIngressArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultNetworkAclIngressArgs)(nil)).Elem()
}

func (o DefaultNetworkAclIngressArgsOutput) ToDefaultNetworkAclIngressArgsOutput() DefaultNetworkAclIngressArgsOutput {
	return o
}

func (o DefaultNetworkAclIngressArgsOutput) ToDefaultNetworkAclIngressArgsOutputWithContext(ctx context.Context) DefaultNetworkAclIngressArgsOutput {
	return o
}

// The action to take.
func (o DefaultNetworkAclIngressArgsOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngressArgs) string { return v.Action }).(pulumi.StringOutput)
}

// The CIDR block to match. This must be a
// valid network mask.
func (o DefaultNetworkAclIngressArgsOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngressArgs) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// The from port to match.
func (o DefaultNetworkAclIngressArgsOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngressArgs) int { return v.FromPort }).(pulumi.IntOutput)
}

// The ICMP type code to be used. Default 0.
func (o DefaultNetworkAclIngressArgsOutput) IcmpCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngressArgs) *int { return v.IcmpCode }).(pulumi.IntPtrOutput)
}

// The ICMP type to be used. Default 0.
func (o DefaultNetworkAclIngressArgsOutput) IcmpType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngressArgs) *int { return v.IcmpType }).(pulumi.IntPtrOutput)
}

// The IPv6 CIDR block.
func (o DefaultNetworkAclIngressArgsOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngressArgs) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// The protocol to match. If using the -1 'all'
// protocol, you must specify a from and to port of 0.
func (o DefaultNetworkAclIngressArgsOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngressArgs) string { return v.Protocol }).(pulumi.StringOutput)
}

// The rule number. Used for ordering.
func (o DefaultNetworkAclIngressArgsOutput) RuleNo() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngressArgs) int { return v.RuleNo }).(pulumi.IntOutput)
}

// The to port to match.
func (o DefaultNetworkAclIngressArgsOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngressArgs) int { return v.ToPort }).(pulumi.IntOutput)
}

type DefaultNetworkAclIngressArgsArrayOutput struct{ *pulumi.OutputState }

func (DefaultNetworkAclIngressArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultNetworkAclIngressArgs)(nil)).Elem()
}

func (o DefaultNetworkAclIngressArgsArrayOutput) ToDefaultNetworkAclIngressArgsArrayOutput() DefaultNetworkAclIngressArgsArrayOutput {
	return o
}

func (o DefaultNetworkAclIngressArgsArrayOutput) ToDefaultNetworkAclIngressArgsArrayOutputWithContext(ctx context.Context) DefaultNetworkAclIngressArgsArrayOutput {
	return o
}

func (o DefaultNetworkAclIngressArgsArrayOutput) Index(i pulumi.IntInput) DefaultNetworkAclIngressArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DefaultNetworkAclIngressArgs {
		return vs[0].([]DefaultNetworkAclIngressArgs)[vs[1].(int)]
	}).(DefaultNetworkAclIngressArgsOutput)
}

type DefaultNetworkAclIngressState struct {
	// The action to take.
	Action string `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort int `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode *int `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType *int `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol string `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo int `pulumi:"ruleNo"`
	// The to port to match.
	ToPort int `pulumi:"toPort"`
}

type DefaultNetworkAclIngressStateInput interface {
	pulumi.Input

	ToDefaultNetworkAclIngressStateOutput() DefaultNetworkAclIngressStateOutput
	ToDefaultNetworkAclIngressStateOutputWithContext(context.Context) DefaultNetworkAclIngressStateOutput
}

type DefaultNetworkAclIngressStateArgs struct {
	// The action to take.
	Action pulumi.StringInput `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode pulumi.IntPtrInput `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType pulumi.IntPtrInput `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo pulumi.IntInput `pulumi:"ruleNo"`
	// The to port to match.
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (DefaultNetworkAclIngressStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultNetworkAclIngressState)(nil)).Elem()
}

func (i DefaultNetworkAclIngressStateArgs) ToDefaultNetworkAclIngressStateOutput() DefaultNetworkAclIngressStateOutput {
	return i.ToDefaultNetworkAclIngressStateOutputWithContext(context.Background())
}

func (i DefaultNetworkAclIngressStateArgs) ToDefaultNetworkAclIngressStateOutputWithContext(ctx context.Context) DefaultNetworkAclIngressStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultNetworkAclIngressStateOutput)
}

type DefaultNetworkAclIngressStateArrayInput interface {
	pulumi.Input

	ToDefaultNetworkAclIngressStateArrayOutput() DefaultNetworkAclIngressStateArrayOutput
	ToDefaultNetworkAclIngressStateArrayOutputWithContext(context.Context) DefaultNetworkAclIngressStateArrayOutput
}

type DefaultNetworkAclIngressStateArray []DefaultNetworkAclIngressStateInput

func (DefaultNetworkAclIngressStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultNetworkAclIngressState)(nil)).Elem()
}

func (i DefaultNetworkAclIngressStateArray) ToDefaultNetworkAclIngressStateArrayOutput() DefaultNetworkAclIngressStateArrayOutput {
	return i.ToDefaultNetworkAclIngressStateArrayOutputWithContext(context.Background())
}

func (i DefaultNetworkAclIngressStateArray) ToDefaultNetworkAclIngressStateArrayOutputWithContext(ctx context.Context) DefaultNetworkAclIngressStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultNetworkAclIngressStateArrayOutput)
}

type DefaultNetworkAclIngressStateOutput struct{ *pulumi.OutputState }

func (DefaultNetworkAclIngressStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultNetworkAclIngressState)(nil)).Elem()
}

func (o DefaultNetworkAclIngressStateOutput) ToDefaultNetworkAclIngressStateOutput() DefaultNetworkAclIngressStateOutput {
	return o
}

func (o DefaultNetworkAclIngressStateOutput) ToDefaultNetworkAclIngressStateOutputWithContext(ctx context.Context) DefaultNetworkAclIngressStateOutput {
	return o
}

// The action to take.
func (o DefaultNetworkAclIngressStateOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngressState) string { return v.Action }).(pulumi.StringOutput)
}

// The CIDR block to match. This must be a
// valid network mask.
func (o DefaultNetworkAclIngressStateOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngressState) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// The from port to match.
func (o DefaultNetworkAclIngressStateOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngressState) int { return v.FromPort }).(pulumi.IntOutput)
}

// The ICMP type code to be used. Default 0.
func (o DefaultNetworkAclIngressStateOutput) IcmpCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngressState) *int { return v.IcmpCode }).(pulumi.IntPtrOutput)
}

// The ICMP type to be used. Default 0.
func (o DefaultNetworkAclIngressStateOutput) IcmpType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngressState) *int { return v.IcmpType }).(pulumi.IntPtrOutput)
}

// The IPv6 CIDR block.
func (o DefaultNetworkAclIngressStateOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngressState) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// The protocol to match. If using the -1 'all'
// protocol, you must specify a from and to port of 0.
func (o DefaultNetworkAclIngressStateOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngressState) string { return v.Protocol }).(pulumi.StringOutput)
}

// The rule number. Used for ordering.
func (o DefaultNetworkAclIngressStateOutput) RuleNo() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngressState) int { return v.RuleNo }).(pulumi.IntOutput)
}

// The to port to match.
func (o DefaultNetworkAclIngressStateOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngressState) int { return v.ToPort }).(pulumi.IntOutput)
}

type DefaultNetworkAclIngressStateArrayOutput struct{ *pulumi.OutputState }

func (DefaultNetworkAclIngressStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultNetworkAclIngressState)(nil)).Elem()
}

func (o DefaultNetworkAclIngressStateArrayOutput) ToDefaultNetworkAclIngressStateArrayOutput() DefaultNetworkAclIngressStateArrayOutput {
	return o
}

func (o DefaultNetworkAclIngressStateArrayOutput) ToDefaultNetworkAclIngressStateArrayOutputWithContext(ctx context.Context) DefaultNetworkAclIngressStateArrayOutput {
	return o
}

func (o DefaultNetworkAclIngressStateArrayOutput) Index(i pulumi.IntInput) DefaultNetworkAclIngressStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DefaultNetworkAclIngressState {
		return vs[0].([]DefaultNetworkAclIngressState)[vs[1].(int)]
	}).(DefaultNetworkAclIngressStateOutput)
}

type DefaultRouteTableRoute struct {
	// The CIDR block of the route.
	CidrBlock *string `pulumi:"cidrBlock"`
	// Identifier of a VPC Egress Only Internet Gateway.
	EgressOnlyGatewayId *string `pulumi:"egressOnlyGatewayId"`
	// Identifier of a VPC internet gateway or a virtual private gateway.
	GatewayId *string `pulumi:"gatewayId"`
	// Identifier of an EC2 instance.
	InstanceId *string `pulumi:"instanceId"`
	// The Ipv6 CIDR block of the route
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// Identifier of a VPC NAT gateway.
	NatGatewayId *string `pulumi:"natGatewayId"`
	// Identifier of an EC2 network interface.
	NetworkInterfaceId *string `pulumi:"networkInterfaceId"`
	// Identifier of an EC2 Transit Gateway.
	TransitGatewayId *string `pulumi:"transitGatewayId"`
	// Identifier of a VPC peering connection.
	VpcPeeringConnectionId *string `pulumi:"vpcPeeringConnectionId"`
}

type DefaultRouteTableRouteInput interface {
	pulumi.Input

	ToDefaultRouteTableRouteOutput() DefaultRouteTableRouteOutput
	ToDefaultRouteTableRouteOutputWithContext(context.Context) DefaultRouteTableRouteOutput
}

type DefaultRouteTableRouteArgs struct {
	// The CIDR block of the route.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// Identifier of a VPC Egress Only Internet Gateway.
	EgressOnlyGatewayId pulumi.StringPtrInput `pulumi:"egressOnlyGatewayId"`
	// Identifier of a VPC internet gateway or a virtual private gateway.
	GatewayId pulumi.StringPtrInput `pulumi:"gatewayId"`
	// Identifier of an EC2 instance.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// The Ipv6 CIDR block of the route
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// Identifier of a VPC NAT gateway.
	NatGatewayId pulumi.StringPtrInput `pulumi:"natGatewayId"`
	// Identifier of an EC2 network interface.
	NetworkInterfaceId pulumi.StringPtrInput `pulumi:"networkInterfaceId"`
	// Identifier of an EC2 Transit Gateway.
	TransitGatewayId pulumi.StringPtrInput `pulumi:"transitGatewayId"`
	// Identifier of a VPC peering connection.
	VpcPeeringConnectionId pulumi.StringPtrInput `pulumi:"vpcPeeringConnectionId"`
}

func (DefaultRouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultRouteTableRoute)(nil)).Elem()
}

func (i DefaultRouteTableRouteArgs) ToDefaultRouteTableRouteOutput() DefaultRouteTableRouteOutput {
	return i.ToDefaultRouteTableRouteOutputWithContext(context.Background())
}

func (i DefaultRouteTableRouteArgs) ToDefaultRouteTableRouteOutputWithContext(ctx context.Context) DefaultRouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultRouteTableRouteOutput)
}

type DefaultRouteTableRouteArrayInput interface {
	pulumi.Input

	ToDefaultRouteTableRouteArrayOutput() DefaultRouteTableRouteArrayOutput
	ToDefaultRouteTableRouteArrayOutputWithContext(context.Context) DefaultRouteTableRouteArrayOutput
}

type DefaultRouteTableRouteArray []DefaultRouteTableRouteInput

func (DefaultRouteTableRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultRouteTableRoute)(nil)).Elem()
}

func (i DefaultRouteTableRouteArray) ToDefaultRouteTableRouteArrayOutput() DefaultRouteTableRouteArrayOutput {
	return i.ToDefaultRouteTableRouteArrayOutputWithContext(context.Background())
}

func (i DefaultRouteTableRouteArray) ToDefaultRouteTableRouteArrayOutputWithContext(ctx context.Context) DefaultRouteTableRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultRouteTableRouteArrayOutput)
}

type DefaultRouteTableRouteOutput struct{ *pulumi.OutputState }

func (DefaultRouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultRouteTableRoute)(nil)).Elem()
}

func (o DefaultRouteTableRouteOutput) ToDefaultRouteTableRouteOutput() DefaultRouteTableRouteOutput {
	return o
}

func (o DefaultRouteTableRouteOutput) ToDefaultRouteTableRouteOutputWithContext(ctx context.Context) DefaultRouteTableRouteOutput {
	return o
}

// The CIDR block of the route.
func (o DefaultRouteTableRouteOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRoute) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC Egress Only Internet Gateway.
func (o DefaultRouteTableRouteOutput) EgressOnlyGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRoute) *string { return v.EgressOnlyGatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC internet gateway or a virtual private gateway.
func (o DefaultRouteTableRouteOutput) GatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRoute) *string { return v.GatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of an EC2 instance.
func (o DefaultRouteTableRouteOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRoute) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// The Ipv6 CIDR block of the route
func (o DefaultRouteTableRouteOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRoute) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC NAT gateway.
func (o DefaultRouteTableRouteOutput) NatGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRoute) *string { return v.NatGatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of an EC2 network interface.
func (o DefaultRouteTableRouteOutput) NetworkInterfaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRoute) *string { return v.NetworkInterfaceId }).(pulumi.StringPtrOutput)
}

// Identifier of an EC2 Transit Gateway.
func (o DefaultRouteTableRouteOutput) TransitGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRoute) *string { return v.TransitGatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC peering connection.
func (o DefaultRouteTableRouteOutput) VpcPeeringConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRoute) *string { return v.VpcPeeringConnectionId }).(pulumi.StringPtrOutput)
}

type DefaultRouteTableRouteArrayOutput struct{ *pulumi.OutputState }

func (DefaultRouteTableRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultRouteTableRoute)(nil)).Elem()
}

func (o DefaultRouteTableRouteArrayOutput) ToDefaultRouteTableRouteArrayOutput() DefaultRouteTableRouteArrayOutput {
	return o
}

func (o DefaultRouteTableRouteArrayOutput) ToDefaultRouteTableRouteArrayOutputWithContext(ctx context.Context) DefaultRouteTableRouteArrayOutput {
	return o
}

func (o DefaultRouteTableRouteArrayOutput) Index(i pulumi.IntInput) DefaultRouteTableRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DefaultRouteTableRoute {
		return vs[0].([]DefaultRouteTableRoute)[vs[1].(int)]
	}).(DefaultRouteTableRouteOutput)
}

type DefaultRouteTableRouteArgs struct {
	// The CIDR block of the route.
	CidrBlock *string `pulumi:"cidrBlock"`
	// Identifier of a VPC Egress Only Internet Gateway.
	EgressOnlyGatewayId *string `pulumi:"egressOnlyGatewayId"`
	// Identifier of a VPC internet gateway or a virtual private gateway.
	GatewayId *string `pulumi:"gatewayId"`
	// Identifier of an EC2 instance.
	InstanceId *string `pulumi:"instanceId"`
	// The Ipv6 CIDR block of the route
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// Identifier of a VPC NAT gateway.
	NatGatewayId *string `pulumi:"natGatewayId"`
	// Identifier of an EC2 network interface.
	NetworkInterfaceId *string `pulumi:"networkInterfaceId"`
	// Identifier of an EC2 Transit Gateway.
	TransitGatewayId *string `pulumi:"transitGatewayId"`
	// Identifier of a VPC peering connection.
	VpcPeeringConnectionId *string `pulumi:"vpcPeeringConnectionId"`
}

type DefaultRouteTableRouteArgsInput interface {
	pulumi.Input

	ToDefaultRouteTableRouteArgsOutput() DefaultRouteTableRouteArgsOutput
	ToDefaultRouteTableRouteArgsOutputWithContext(context.Context) DefaultRouteTableRouteArgsOutput
}

type DefaultRouteTableRouteArgsArgs struct {
	// The CIDR block of the route.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// Identifier of a VPC Egress Only Internet Gateway.
	EgressOnlyGatewayId pulumi.StringPtrInput `pulumi:"egressOnlyGatewayId"`
	// Identifier of a VPC internet gateway or a virtual private gateway.
	GatewayId pulumi.StringPtrInput `pulumi:"gatewayId"`
	// Identifier of an EC2 instance.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// The Ipv6 CIDR block of the route
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// Identifier of a VPC NAT gateway.
	NatGatewayId pulumi.StringPtrInput `pulumi:"natGatewayId"`
	// Identifier of an EC2 network interface.
	NetworkInterfaceId pulumi.StringPtrInput `pulumi:"networkInterfaceId"`
	// Identifier of an EC2 Transit Gateway.
	TransitGatewayId pulumi.StringPtrInput `pulumi:"transitGatewayId"`
	// Identifier of a VPC peering connection.
	VpcPeeringConnectionId pulumi.StringPtrInput `pulumi:"vpcPeeringConnectionId"`
}

func (DefaultRouteTableRouteArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultRouteTableRouteArgs)(nil)).Elem()
}

func (i DefaultRouteTableRouteArgsArgs) ToDefaultRouteTableRouteArgsOutput() DefaultRouteTableRouteArgsOutput {
	return i.ToDefaultRouteTableRouteArgsOutputWithContext(context.Background())
}

func (i DefaultRouteTableRouteArgsArgs) ToDefaultRouteTableRouteArgsOutputWithContext(ctx context.Context) DefaultRouteTableRouteArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultRouteTableRouteArgsOutput)
}

type DefaultRouteTableRouteArgsArrayInput interface {
	pulumi.Input

	ToDefaultRouteTableRouteArgsArrayOutput() DefaultRouteTableRouteArgsArrayOutput
	ToDefaultRouteTableRouteArgsArrayOutputWithContext(context.Context) DefaultRouteTableRouteArgsArrayOutput
}

type DefaultRouteTableRouteArgsArray []DefaultRouteTableRouteArgsInput

func (DefaultRouteTableRouteArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultRouteTableRouteArgs)(nil)).Elem()
}

func (i DefaultRouteTableRouteArgsArray) ToDefaultRouteTableRouteArgsArrayOutput() DefaultRouteTableRouteArgsArrayOutput {
	return i.ToDefaultRouteTableRouteArgsArrayOutputWithContext(context.Background())
}

func (i DefaultRouteTableRouteArgsArray) ToDefaultRouteTableRouteArgsArrayOutputWithContext(ctx context.Context) DefaultRouteTableRouteArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultRouteTableRouteArgsArrayOutput)
}

type DefaultRouteTableRouteArgsOutput struct{ *pulumi.OutputState }

func (DefaultRouteTableRouteArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultRouteTableRouteArgs)(nil)).Elem()
}

func (o DefaultRouteTableRouteArgsOutput) ToDefaultRouteTableRouteArgsOutput() DefaultRouteTableRouteArgsOutput {
	return o
}

func (o DefaultRouteTableRouteArgsOutput) ToDefaultRouteTableRouteArgsOutputWithContext(ctx context.Context) DefaultRouteTableRouteArgsOutput {
	return o
}

// The CIDR block of the route.
func (o DefaultRouteTableRouteArgsOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRouteArgs) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC Egress Only Internet Gateway.
func (o DefaultRouteTableRouteArgsOutput) EgressOnlyGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRouteArgs) *string { return v.EgressOnlyGatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC internet gateway or a virtual private gateway.
func (o DefaultRouteTableRouteArgsOutput) GatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRouteArgs) *string { return v.GatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of an EC2 instance.
func (o DefaultRouteTableRouteArgsOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRouteArgs) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// The Ipv6 CIDR block of the route
func (o DefaultRouteTableRouteArgsOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRouteArgs) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC NAT gateway.
func (o DefaultRouteTableRouteArgsOutput) NatGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRouteArgs) *string { return v.NatGatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of an EC2 network interface.
func (o DefaultRouteTableRouteArgsOutput) NetworkInterfaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRouteArgs) *string { return v.NetworkInterfaceId }).(pulumi.StringPtrOutput)
}

// Identifier of an EC2 Transit Gateway.
func (o DefaultRouteTableRouteArgsOutput) TransitGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRouteArgs) *string { return v.TransitGatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC peering connection.
func (o DefaultRouteTableRouteArgsOutput) VpcPeeringConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRouteArgs) *string { return v.VpcPeeringConnectionId }).(pulumi.StringPtrOutput)
}

type DefaultRouteTableRouteArgsArrayOutput struct{ *pulumi.OutputState }

func (DefaultRouteTableRouteArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultRouteTableRouteArgs)(nil)).Elem()
}

func (o DefaultRouteTableRouteArgsArrayOutput) ToDefaultRouteTableRouteArgsArrayOutput() DefaultRouteTableRouteArgsArrayOutput {
	return o
}

func (o DefaultRouteTableRouteArgsArrayOutput) ToDefaultRouteTableRouteArgsArrayOutputWithContext(ctx context.Context) DefaultRouteTableRouteArgsArrayOutput {
	return o
}

func (o DefaultRouteTableRouteArgsArrayOutput) Index(i pulumi.IntInput) DefaultRouteTableRouteArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DefaultRouteTableRouteArgs {
		return vs[0].([]DefaultRouteTableRouteArgs)[vs[1].(int)]
	}).(DefaultRouteTableRouteArgsOutput)
}

type DefaultRouteTableRouteState struct {
	// The CIDR block of the route.
	CidrBlock *string `pulumi:"cidrBlock"`
	// Identifier of a VPC Egress Only Internet Gateway.
	EgressOnlyGatewayId *string `pulumi:"egressOnlyGatewayId"`
	// Identifier of a VPC internet gateway or a virtual private gateway.
	GatewayId *string `pulumi:"gatewayId"`
	// Identifier of an EC2 instance.
	InstanceId *string `pulumi:"instanceId"`
	// The Ipv6 CIDR block of the route
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// Identifier of a VPC NAT gateway.
	NatGatewayId *string `pulumi:"natGatewayId"`
	// Identifier of an EC2 network interface.
	NetworkInterfaceId *string `pulumi:"networkInterfaceId"`
	// Identifier of an EC2 Transit Gateway.
	TransitGatewayId *string `pulumi:"transitGatewayId"`
	// Identifier of a VPC peering connection.
	VpcPeeringConnectionId *string `pulumi:"vpcPeeringConnectionId"`
}

type DefaultRouteTableRouteStateInput interface {
	pulumi.Input

	ToDefaultRouteTableRouteStateOutput() DefaultRouteTableRouteStateOutput
	ToDefaultRouteTableRouteStateOutputWithContext(context.Context) DefaultRouteTableRouteStateOutput
}

type DefaultRouteTableRouteStateArgs struct {
	// The CIDR block of the route.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// Identifier of a VPC Egress Only Internet Gateway.
	EgressOnlyGatewayId pulumi.StringPtrInput `pulumi:"egressOnlyGatewayId"`
	// Identifier of a VPC internet gateway or a virtual private gateway.
	GatewayId pulumi.StringPtrInput `pulumi:"gatewayId"`
	// Identifier of an EC2 instance.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// The Ipv6 CIDR block of the route
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// Identifier of a VPC NAT gateway.
	NatGatewayId pulumi.StringPtrInput `pulumi:"natGatewayId"`
	// Identifier of an EC2 network interface.
	NetworkInterfaceId pulumi.StringPtrInput `pulumi:"networkInterfaceId"`
	// Identifier of an EC2 Transit Gateway.
	TransitGatewayId pulumi.StringPtrInput `pulumi:"transitGatewayId"`
	// Identifier of a VPC peering connection.
	VpcPeeringConnectionId pulumi.StringPtrInput `pulumi:"vpcPeeringConnectionId"`
}

func (DefaultRouteTableRouteStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultRouteTableRouteState)(nil)).Elem()
}

func (i DefaultRouteTableRouteStateArgs) ToDefaultRouteTableRouteStateOutput() DefaultRouteTableRouteStateOutput {
	return i.ToDefaultRouteTableRouteStateOutputWithContext(context.Background())
}

func (i DefaultRouteTableRouteStateArgs) ToDefaultRouteTableRouteStateOutputWithContext(ctx context.Context) DefaultRouteTableRouteStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultRouteTableRouteStateOutput)
}

type DefaultRouteTableRouteStateArrayInput interface {
	pulumi.Input

	ToDefaultRouteTableRouteStateArrayOutput() DefaultRouteTableRouteStateArrayOutput
	ToDefaultRouteTableRouteStateArrayOutputWithContext(context.Context) DefaultRouteTableRouteStateArrayOutput
}

type DefaultRouteTableRouteStateArray []DefaultRouteTableRouteStateInput

func (DefaultRouteTableRouteStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultRouteTableRouteState)(nil)).Elem()
}

func (i DefaultRouteTableRouteStateArray) ToDefaultRouteTableRouteStateArrayOutput() DefaultRouteTableRouteStateArrayOutput {
	return i.ToDefaultRouteTableRouteStateArrayOutputWithContext(context.Background())
}

func (i DefaultRouteTableRouteStateArray) ToDefaultRouteTableRouteStateArrayOutputWithContext(ctx context.Context) DefaultRouteTableRouteStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultRouteTableRouteStateArrayOutput)
}

type DefaultRouteTableRouteStateOutput struct{ *pulumi.OutputState }

func (DefaultRouteTableRouteStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultRouteTableRouteState)(nil)).Elem()
}

func (o DefaultRouteTableRouteStateOutput) ToDefaultRouteTableRouteStateOutput() DefaultRouteTableRouteStateOutput {
	return o
}

func (o DefaultRouteTableRouteStateOutput) ToDefaultRouteTableRouteStateOutputWithContext(ctx context.Context) DefaultRouteTableRouteStateOutput {
	return o
}

// The CIDR block of the route.
func (o DefaultRouteTableRouteStateOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRouteState) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC Egress Only Internet Gateway.
func (o DefaultRouteTableRouteStateOutput) EgressOnlyGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRouteState) *string { return v.EgressOnlyGatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC internet gateway or a virtual private gateway.
func (o DefaultRouteTableRouteStateOutput) GatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRouteState) *string { return v.GatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of an EC2 instance.
func (o DefaultRouteTableRouteStateOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRouteState) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// The Ipv6 CIDR block of the route
func (o DefaultRouteTableRouteStateOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRouteState) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC NAT gateway.
func (o DefaultRouteTableRouteStateOutput) NatGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRouteState) *string { return v.NatGatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of an EC2 network interface.
func (o DefaultRouteTableRouteStateOutput) NetworkInterfaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRouteState) *string { return v.NetworkInterfaceId }).(pulumi.StringPtrOutput)
}

// Identifier of an EC2 Transit Gateway.
func (o DefaultRouteTableRouteStateOutput) TransitGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRouteState) *string { return v.TransitGatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC peering connection.
func (o DefaultRouteTableRouteStateOutput) VpcPeeringConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRouteState) *string { return v.VpcPeeringConnectionId }).(pulumi.StringPtrOutput)
}

type DefaultRouteTableRouteStateArrayOutput struct{ *pulumi.OutputState }

func (DefaultRouteTableRouteStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultRouteTableRouteState)(nil)).Elem()
}

func (o DefaultRouteTableRouteStateArrayOutput) ToDefaultRouteTableRouteStateArrayOutput() DefaultRouteTableRouteStateArrayOutput {
	return o
}

func (o DefaultRouteTableRouteStateArrayOutput) ToDefaultRouteTableRouteStateArrayOutputWithContext(ctx context.Context) DefaultRouteTableRouteStateArrayOutput {
	return o
}

func (o DefaultRouteTableRouteStateArrayOutput) Index(i pulumi.IntInput) DefaultRouteTableRouteStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DefaultRouteTableRouteState {
		return vs[0].([]DefaultRouteTableRouteState)[vs[1].(int)]
	}).(DefaultRouteTableRouteStateOutput)
}

type DefaultSecurityGroupEgress struct {
	CidrBlocks []string `pulumi:"cidrBlocks"`
	// The description of the security group
	Description    *string  `pulumi:"description"`
	FromPort       int      `pulumi:"fromPort"`
	Ipv6CidrBlocks []string `pulumi:"ipv6CidrBlocks"`
	PrefixListIds  []string `pulumi:"prefixListIds"`
	Protocol       string   `pulumi:"protocol"`
	SecurityGroups []string `pulumi:"securityGroups"`
	Self           *bool    `pulumi:"self"`
	ToPort         int      `pulumi:"toPort"`
}

type DefaultSecurityGroupEgressInput interface {
	pulumi.Input

	ToDefaultSecurityGroupEgressOutput() DefaultSecurityGroupEgressOutput
	ToDefaultSecurityGroupEgressOutputWithContext(context.Context) DefaultSecurityGroupEgressOutput
}

type DefaultSecurityGroupEgressArgs struct {
	CidrBlocks pulumi.StringArrayInput `pulumi:"cidrBlocks"`
	// The description of the security group
	Description    pulumi.StringPtrInput   `pulumi:"description"`
	FromPort       pulumi.IntInput         `pulumi:"fromPort"`
	Ipv6CidrBlocks pulumi.StringArrayInput `pulumi:"ipv6CidrBlocks"`
	PrefixListIds  pulumi.StringArrayInput `pulumi:"prefixListIds"`
	Protocol       pulumi.StringInput      `pulumi:"protocol"`
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	Self           pulumi.BoolPtrInput     `pulumi:"self"`
	ToPort         pulumi.IntInput         `pulumi:"toPort"`
}

func (DefaultSecurityGroupEgressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultSecurityGroupEgress)(nil)).Elem()
}

func (i DefaultSecurityGroupEgressArgs) ToDefaultSecurityGroupEgressOutput() DefaultSecurityGroupEgressOutput {
	return i.ToDefaultSecurityGroupEgressOutputWithContext(context.Background())
}

func (i DefaultSecurityGroupEgressArgs) ToDefaultSecurityGroupEgressOutputWithContext(ctx context.Context) DefaultSecurityGroupEgressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultSecurityGroupEgressOutput)
}

type DefaultSecurityGroupEgressArrayInput interface {
	pulumi.Input

	ToDefaultSecurityGroupEgressArrayOutput() DefaultSecurityGroupEgressArrayOutput
	ToDefaultSecurityGroupEgressArrayOutputWithContext(context.Context) DefaultSecurityGroupEgressArrayOutput
}

type DefaultSecurityGroupEgressArray []DefaultSecurityGroupEgressInput

func (DefaultSecurityGroupEgressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultSecurityGroupEgress)(nil)).Elem()
}

func (i DefaultSecurityGroupEgressArray) ToDefaultSecurityGroupEgressArrayOutput() DefaultSecurityGroupEgressArrayOutput {
	return i.ToDefaultSecurityGroupEgressArrayOutputWithContext(context.Background())
}

func (i DefaultSecurityGroupEgressArray) ToDefaultSecurityGroupEgressArrayOutputWithContext(ctx context.Context) DefaultSecurityGroupEgressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultSecurityGroupEgressArrayOutput)
}

type DefaultSecurityGroupEgressOutput struct{ *pulumi.OutputState }

func (DefaultSecurityGroupEgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultSecurityGroupEgress)(nil)).Elem()
}

func (o DefaultSecurityGroupEgressOutput) ToDefaultSecurityGroupEgressOutput() DefaultSecurityGroupEgressOutput {
	return o
}

func (o DefaultSecurityGroupEgressOutput) ToDefaultSecurityGroupEgressOutputWithContext(ctx context.Context) DefaultSecurityGroupEgressOutput {
	return o
}

func (o DefaultSecurityGroupEgressOutput) CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgress) []string { return v.CidrBlocks }).(pulumi.StringArrayOutput)
}

// The description of the security group
func (o DefaultSecurityGroupEgressOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgress) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DefaultSecurityGroupEgressOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgress) int { return v.FromPort }).(pulumi.IntOutput)
}

func (o DefaultSecurityGroupEgressOutput) Ipv6CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgress) []string { return v.Ipv6CidrBlocks }).(pulumi.StringArrayOutput)
}

func (o DefaultSecurityGroupEgressOutput) PrefixListIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgress) []string { return v.PrefixListIds }).(pulumi.StringArrayOutput)
}

func (o DefaultSecurityGroupEgressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgress) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o DefaultSecurityGroupEgressOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgress) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o DefaultSecurityGroupEgressOutput) Self() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgress) *bool { return v.Self }).(pulumi.BoolPtrOutput)
}

func (o DefaultSecurityGroupEgressOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgress) int { return v.ToPort }).(pulumi.IntOutput)
}

type DefaultSecurityGroupEgressArrayOutput struct{ *pulumi.OutputState }

func (DefaultSecurityGroupEgressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultSecurityGroupEgress)(nil)).Elem()
}

func (o DefaultSecurityGroupEgressArrayOutput) ToDefaultSecurityGroupEgressArrayOutput() DefaultSecurityGroupEgressArrayOutput {
	return o
}

func (o DefaultSecurityGroupEgressArrayOutput) ToDefaultSecurityGroupEgressArrayOutputWithContext(ctx context.Context) DefaultSecurityGroupEgressArrayOutput {
	return o
}

func (o DefaultSecurityGroupEgressArrayOutput) Index(i pulumi.IntInput) DefaultSecurityGroupEgressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DefaultSecurityGroupEgress {
		return vs[0].([]DefaultSecurityGroupEgress)[vs[1].(int)]
	}).(DefaultSecurityGroupEgressOutput)
}

type DefaultSecurityGroupEgressArgs struct {
	CidrBlocks []string `pulumi:"cidrBlocks"`
	// The description of the security group
	Description    *string  `pulumi:"description"`
	FromPort       int      `pulumi:"fromPort"`
	Ipv6CidrBlocks []string `pulumi:"ipv6CidrBlocks"`
	PrefixListIds  []string `pulumi:"prefixListIds"`
	Protocol       string   `pulumi:"protocol"`
	SecurityGroups []string `pulumi:"securityGroups"`
	Self           *bool    `pulumi:"self"`
	ToPort         int      `pulumi:"toPort"`
}

type DefaultSecurityGroupEgressArgsInput interface {
	pulumi.Input

	ToDefaultSecurityGroupEgressArgsOutput() DefaultSecurityGroupEgressArgsOutput
	ToDefaultSecurityGroupEgressArgsOutputWithContext(context.Context) DefaultSecurityGroupEgressArgsOutput
}

type DefaultSecurityGroupEgressArgsArgs struct {
	CidrBlocks pulumi.StringArrayInput `pulumi:"cidrBlocks"`
	// The description of the security group
	Description    pulumi.StringPtrInput   `pulumi:"description"`
	FromPort       pulumi.IntInput         `pulumi:"fromPort"`
	Ipv6CidrBlocks pulumi.StringArrayInput `pulumi:"ipv6CidrBlocks"`
	PrefixListIds  pulumi.StringArrayInput `pulumi:"prefixListIds"`
	Protocol       pulumi.StringInput      `pulumi:"protocol"`
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	Self           pulumi.BoolPtrInput     `pulumi:"self"`
	ToPort         pulumi.IntInput         `pulumi:"toPort"`
}

func (DefaultSecurityGroupEgressArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultSecurityGroupEgressArgs)(nil)).Elem()
}

func (i DefaultSecurityGroupEgressArgsArgs) ToDefaultSecurityGroupEgressArgsOutput() DefaultSecurityGroupEgressArgsOutput {
	return i.ToDefaultSecurityGroupEgressArgsOutputWithContext(context.Background())
}

func (i DefaultSecurityGroupEgressArgsArgs) ToDefaultSecurityGroupEgressArgsOutputWithContext(ctx context.Context) DefaultSecurityGroupEgressArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultSecurityGroupEgressArgsOutput)
}

type DefaultSecurityGroupEgressArgsArrayInput interface {
	pulumi.Input

	ToDefaultSecurityGroupEgressArgsArrayOutput() DefaultSecurityGroupEgressArgsArrayOutput
	ToDefaultSecurityGroupEgressArgsArrayOutputWithContext(context.Context) DefaultSecurityGroupEgressArgsArrayOutput
}

type DefaultSecurityGroupEgressArgsArray []DefaultSecurityGroupEgressArgsInput

func (DefaultSecurityGroupEgressArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultSecurityGroupEgressArgs)(nil)).Elem()
}

func (i DefaultSecurityGroupEgressArgsArray) ToDefaultSecurityGroupEgressArgsArrayOutput() DefaultSecurityGroupEgressArgsArrayOutput {
	return i.ToDefaultSecurityGroupEgressArgsArrayOutputWithContext(context.Background())
}

func (i DefaultSecurityGroupEgressArgsArray) ToDefaultSecurityGroupEgressArgsArrayOutputWithContext(ctx context.Context) DefaultSecurityGroupEgressArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultSecurityGroupEgressArgsArrayOutput)
}

type DefaultSecurityGroupEgressArgsOutput struct{ *pulumi.OutputState }

func (DefaultSecurityGroupEgressArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultSecurityGroupEgressArgs)(nil)).Elem()
}

func (o DefaultSecurityGroupEgressArgsOutput) ToDefaultSecurityGroupEgressArgsOutput() DefaultSecurityGroupEgressArgsOutput {
	return o
}

func (o DefaultSecurityGroupEgressArgsOutput) ToDefaultSecurityGroupEgressArgsOutputWithContext(ctx context.Context) DefaultSecurityGroupEgressArgsOutput {
	return o
}

func (o DefaultSecurityGroupEgressArgsOutput) CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgressArgs) []string { return v.CidrBlocks }).(pulumi.StringArrayOutput)
}

// The description of the security group
func (o DefaultSecurityGroupEgressArgsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgressArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DefaultSecurityGroupEgressArgsOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgressArgs) int { return v.FromPort }).(pulumi.IntOutput)
}

func (o DefaultSecurityGroupEgressArgsOutput) Ipv6CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgressArgs) []string { return v.Ipv6CidrBlocks }).(pulumi.StringArrayOutput)
}

func (o DefaultSecurityGroupEgressArgsOutput) PrefixListIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgressArgs) []string { return v.PrefixListIds }).(pulumi.StringArrayOutput)
}

func (o DefaultSecurityGroupEgressArgsOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgressArgs) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o DefaultSecurityGroupEgressArgsOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgressArgs) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o DefaultSecurityGroupEgressArgsOutput) Self() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgressArgs) *bool { return v.Self }).(pulumi.BoolPtrOutput)
}

func (o DefaultSecurityGroupEgressArgsOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgressArgs) int { return v.ToPort }).(pulumi.IntOutput)
}

type DefaultSecurityGroupEgressArgsArrayOutput struct{ *pulumi.OutputState }

func (DefaultSecurityGroupEgressArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultSecurityGroupEgressArgs)(nil)).Elem()
}

func (o DefaultSecurityGroupEgressArgsArrayOutput) ToDefaultSecurityGroupEgressArgsArrayOutput() DefaultSecurityGroupEgressArgsArrayOutput {
	return o
}

func (o DefaultSecurityGroupEgressArgsArrayOutput) ToDefaultSecurityGroupEgressArgsArrayOutputWithContext(ctx context.Context) DefaultSecurityGroupEgressArgsArrayOutput {
	return o
}

func (o DefaultSecurityGroupEgressArgsArrayOutput) Index(i pulumi.IntInput) DefaultSecurityGroupEgressArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DefaultSecurityGroupEgressArgs {
		return vs[0].([]DefaultSecurityGroupEgressArgs)[vs[1].(int)]
	}).(DefaultSecurityGroupEgressArgsOutput)
}

type DefaultSecurityGroupEgressState struct {
	CidrBlocks []string `pulumi:"cidrBlocks"`
	// The description of the security group
	Description    *string  `pulumi:"description"`
	FromPort       int      `pulumi:"fromPort"`
	Ipv6CidrBlocks []string `pulumi:"ipv6CidrBlocks"`
	PrefixListIds  []string `pulumi:"prefixListIds"`
	Protocol       string   `pulumi:"protocol"`
	SecurityGroups []string `pulumi:"securityGroups"`
	Self           *bool    `pulumi:"self"`
	ToPort         int      `pulumi:"toPort"`
}

type DefaultSecurityGroupEgressStateInput interface {
	pulumi.Input

	ToDefaultSecurityGroupEgressStateOutput() DefaultSecurityGroupEgressStateOutput
	ToDefaultSecurityGroupEgressStateOutputWithContext(context.Context) DefaultSecurityGroupEgressStateOutput
}

type DefaultSecurityGroupEgressStateArgs struct {
	CidrBlocks pulumi.StringArrayInput `pulumi:"cidrBlocks"`
	// The description of the security group
	Description    pulumi.StringPtrInput   `pulumi:"description"`
	FromPort       pulumi.IntInput         `pulumi:"fromPort"`
	Ipv6CidrBlocks pulumi.StringArrayInput `pulumi:"ipv6CidrBlocks"`
	PrefixListIds  pulumi.StringArrayInput `pulumi:"prefixListIds"`
	Protocol       pulumi.StringInput      `pulumi:"protocol"`
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	Self           pulumi.BoolPtrInput     `pulumi:"self"`
	ToPort         pulumi.IntInput         `pulumi:"toPort"`
}

func (DefaultSecurityGroupEgressStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultSecurityGroupEgressState)(nil)).Elem()
}

func (i DefaultSecurityGroupEgressStateArgs) ToDefaultSecurityGroupEgressStateOutput() DefaultSecurityGroupEgressStateOutput {
	return i.ToDefaultSecurityGroupEgressStateOutputWithContext(context.Background())
}

func (i DefaultSecurityGroupEgressStateArgs) ToDefaultSecurityGroupEgressStateOutputWithContext(ctx context.Context) DefaultSecurityGroupEgressStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultSecurityGroupEgressStateOutput)
}

type DefaultSecurityGroupEgressStateArrayInput interface {
	pulumi.Input

	ToDefaultSecurityGroupEgressStateArrayOutput() DefaultSecurityGroupEgressStateArrayOutput
	ToDefaultSecurityGroupEgressStateArrayOutputWithContext(context.Context) DefaultSecurityGroupEgressStateArrayOutput
}

type DefaultSecurityGroupEgressStateArray []DefaultSecurityGroupEgressStateInput

func (DefaultSecurityGroupEgressStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultSecurityGroupEgressState)(nil)).Elem()
}

func (i DefaultSecurityGroupEgressStateArray) ToDefaultSecurityGroupEgressStateArrayOutput() DefaultSecurityGroupEgressStateArrayOutput {
	return i.ToDefaultSecurityGroupEgressStateArrayOutputWithContext(context.Background())
}

func (i DefaultSecurityGroupEgressStateArray) ToDefaultSecurityGroupEgressStateArrayOutputWithContext(ctx context.Context) DefaultSecurityGroupEgressStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultSecurityGroupEgressStateArrayOutput)
}

type DefaultSecurityGroupEgressStateOutput struct{ *pulumi.OutputState }

func (DefaultSecurityGroupEgressStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultSecurityGroupEgressState)(nil)).Elem()
}

func (o DefaultSecurityGroupEgressStateOutput) ToDefaultSecurityGroupEgressStateOutput() DefaultSecurityGroupEgressStateOutput {
	return o
}

func (o DefaultSecurityGroupEgressStateOutput) ToDefaultSecurityGroupEgressStateOutputWithContext(ctx context.Context) DefaultSecurityGroupEgressStateOutput {
	return o
}

func (o DefaultSecurityGroupEgressStateOutput) CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgressState) []string { return v.CidrBlocks }).(pulumi.StringArrayOutput)
}

// The description of the security group
func (o DefaultSecurityGroupEgressStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgressState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DefaultSecurityGroupEgressStateOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgressState) int { return v.FromPort }).(pulumi.IntOutput)
}

func (o DefaultSecurityGroupEgressStateOutput) Ipv6CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgressState) []string { return v.Ipv6CidrBlocks }).(pulumi.StringArrayOutput)
}

func (o DefaultSecurityGroupEgressStateOutput) PrefixListIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgressState) []string { return v.PrefixListIds }).(pulumi.StringArrayOutput)
}

func (o DefaultSecurityGroupEgressStateOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgressState) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o DefaultSecurityGroupEgressStateOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgressState) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o DefaultSecurityGroupEgressStateOutput) Self() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgressState) *bool { return v.Self }).(pulumi.BoolPtrOutput)
}

func (o DefaultSecurityGroupEgressStateOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgressState) int { return v.ToPort }).(pulumi.IntOutput)
}

type DefaultSecurityGroupEgressStateArrayOutput struct{ *pulumi.OutputState }

func (DefaultSecurityGroupEgressStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultSecurityGroupEgressState)(nil)).Elem()
}

func (o DefaultSecurityGroupEgressStateArrayOutput) ToDefaultSecurityGroupEgressStateArrayOutput() DefaultSecurityGroupEgressStateArrayOutput {
	return o
}

func (o DefaultSecurityGroupEgressStateArrayOutput) ToDefaultSecurityGroupEgressStateArrayOutputWithContext(ctx context.Context) DefaultSecurityGroupEgressStateArrayOutput {
	return o
}

func (o DefaultSecurityGroupEgressStateArrayOutput) Index(i pulumi.IntInput) DefaultSecurityGroupEgressStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DefaultSecurityGroupEgressState {
		return vs[0].([]DefaultSecurityGroupEgressState)[vs[1].(int)]
	}).(DefaultSecurityGroupEgressStateOutput)
}

type DefaultSecurityGroupIngress struct {
	CidrBlocks []string `pulumi:"cidrBlocks"`
	// The description of the security group
	Description    *string  `pulumi:"description"`
	FromPort       int      `pulumi:"fromPort"`
	Ipv6CidrBlocks []string `pulumi:"ipv6CidrBlocks"`
	PrefixListIds  []string `pulumi:"prefixListIds"`
	Protocol       string   `pulumi:"protocol"`
	SecurityGroups []string `pulumi:"securityGroups"`
	Self           *bool    `pulumi:"self"`
	ToPort         int      `pulumi:"toPort"`
}

type DefaultSecurityGroupIngressInput interface {
	pulumi.Input

	ToDefaultSecurityGroupIngressOutput() DefaultSecurityGroupIngressOutput
	ToDefaultSecurityGroupIngressOutputWithContext(context.Context) DefaultSecurityGroupIngressOutput
}

type DefaultSecurityGroupIngressArgs struct {
	CidrBlocks pulumi.StringArrayInput `pulumi:"cidrBlocks"`
	// The description of the security group
	Description    pulumi.StringPtrInput   `pulumi:"description"`
	FromPort       pulumi.IntInput         `pulumi:"fromPort"`
	Ipv6CidrBlocks pulumi.StringArrayInput `pulumi:"ipv6CidrBlocks"`
	PrefixListIds  pulumi.StringArrayInput `pulumi:"prefixListIds"`
	Protocol       pulumi.StringInput      `pulumi:"protocol"`
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	Self           pulumi.BoolPtrInput     `pulumi:"self"`
	ToPort         pulumi.IntInput         `pulumi:"toPort"`
}

func (DefaultSecurityGroupIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultSecurityGroupIngress)(nil)).Elem()
}

func (i DefaultSecurityGroupIngressArgs) ToDefaultSecurityGroupIngressOutput() DefaultSecurityGroupIngressOutput {
	return i.ToDefaultSecurityGroupIngressOutputWithContext(context.Background())
}

func (i DefaultSecurityGroupIngressArgs) ToDefaultSecurityGroupIngressOutputWithContext(ctx context.Context) DefaultSecurityGroupIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultSecurityGroupIngressOutput)
}

type DefaultSecurityGroupIngressArrayInput interface {
	pulumi.Input

	ToDefaultSecurityGroupIngressArrayOutput() DefaultSecurityGroupIngressArrayOutput
	ToDefaultSecurityGroupIngressArrayOutputWithContext(context.Context) DefaultSecurityGroupIngressArrayOutput
}

type DefaultSecurityGroupIngressArray []DefaultSecurityGroupIngressInput

func (DefaultSecurityGroupIngressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultSecurityGroupIngress)(nil)).Elem()
}

func (i DefaultSecurityGroupIngressArray) ToDefaultSecurityGroupIngressArrayOutput() DefaultSecurityGroupIngressArrayOutput {
	return i.ToDefaultSecurityGroupIngressArrayOutputWithContext(context.Background())
}

func (i DefaultSecurityGroupIngressArray) ToDefaultSecurityGroupIngressArrayOutputWithContext(ctx context.Context) DefaultSecurityGroupIngressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultSecurityGroupIngressArrayOutput)
}

type DefaultSecurityGroupIngressOutput struct{ *pulumi.OutputState }

func (DefaultSecurityGroupIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultSecurityGroupIngress)(nil)).Elem()
}

func (o DefaultSecurityGroupIngressOutput) ToDefaultSecurityGroupIngressOutput() DefaultSecurityGroupIngressOutput {
	return o
}

func (o DefaultSecurityGroupIngressOutput) ToDefaultSecurityGroupIngressOutputWithContext(ctx context.Context) DefaultSecurityGroupIngressOutput {
	return o
}

func (o DefaultSecurityGroupIngressOutput) CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngress) []string { return v.CidrBlocks }).(pulumi.StringArrayOutput)
}

// The description of the security group
func (o DefaultSecurityGroupIngressOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngress) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DefaultSecurityGroupIngressOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngress) int { return v.FromPort }).(pulumi.IntOutput)
}

func (o DefaultSecurityGroupIngressOutput) Ipv6CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngress) []string { return v.Ipv6CidrBlocks }).(pulumi.StringArrayOutput)
}

func (o DefaultSecurityGroupIngressOutput) PrefixListIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngress) []string { return v.PrefixListIds }).(pulumi.StringArrayOutput)
}

func (o DefaultSecurityGroupIngressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngress) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o DefaultSecurityGroupIngressOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngress) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o DefaultSecurityGroupIngressOutput) Self() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngress) *bool { return v.Self }).(pulumi.BoolPtrOutput)
}

func (o DefaultSecurityGroupIngressOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngress) int { return v.ToPort }).(pulumi.IntOutput)
}

type DefaultSecurityGroupIngressArrayOutput struct{ *pulumi.OutputState }

func (DefaultSecurityGroupIngressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultSecurityGroupIngress)(nil)).Elem()
}

func (o DefaultSecurityGroupIngressArrayOutput) ToDefaultSecurityGroupIngressArrayOutput() DefaultSecurityGroupIngressArrayOutput {
	return o
}

func (o DefaultSecurityGroupIngressArrayOutput) ToDefaultSecurityGroupIngressArrayOutputWithContext(ctx context.Context) DefaultSecurityGroupIngressArrayOutput {
	return o
}

func (o DefaultSecurityGroupIngressArrayOutput) Index(i pulumi.IntInput) DefaultSecurityGroupIngressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DefaultSecurityGroupIngress {
		return vs[0].([]DefaultSecurityGroupIngress)[vs[1].(int)]
	}).(DefaultSecurityGroupIngressOutput)
}

type DefaultSecurityGroupIngressArgs struct {
	CidrBlocks []string `pulumi:"cidrBlocks"`
	// The description of the security group
	Description    *string  `pulumi:"description"`
	FromPort       int      `pulumi:"fromPort"`
	Ipv6CidrBlocks []string `pulumi:"ipv6CidrBlocks"`
	PrefixListIds  []string `pulumi:"prefixListIds"`
	Protocol       string   `pulumi:"protocol"`
	SecurityGroups []string `pulumi:"securityGroups"`
	Self           *bool    `pulumi:"self"`
	ToPort         int      `pulumi:"toPort"`
}

type DefaultSecurityGroupIngressArgsInput interface {
	pulumi.Input

	ToDefaultSecurityGroupIngressArgsOutput() DefaultSecurityGroupIngressArgsOutput
	ToDefaultSecurityGroupIngressArgsOutputWithContext(context.Context) DefaultSecurityGroupIngressArgsOutput
}

type DefaultSecurityGroupIngressArgsArgs struct {
	CidrBlocks pulumi.StringArrayInput `pulumi:"cidrBlocks"`
	// The description of the security group
	Description    pulumi.StringPtrInput   `pulumi:"description"`
	FromPort       pulumi.IntInput         `pulumi:"fromPort"`
	Ipv6CidrBlocks pulumi.StringArrayInput `pulumi:"ipv6CidrBlocks"`
	PrefixListIds  pulumi.StringArrayInput `pulumi:"prefixListIds"`
	Protocol       pulumi.StringInput      `pulumi:"protocol"`
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	Self           pulumi.BoolPtrInput     `pulumi:"self"`
	ToPort         pulumi.IntInput         `pulumi:"toPort"`
}

func (DefaultSecurityGroupIngressArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultSecurityGroupIngressArgs)(nil)).Elem()
}

func (i DefaultSecurityGroupIngressArgsArgs) ToDefaultSecurityGroupIngressArgsOutput() DefaultSecurityGroupIngressArgsOutput {
	return i.ToDefaultSecurityGroupIngressArgsOutputWithContext(context.Background())
}

func (i DefaultSecurityGroupIngressArgsArgs) ToDefaultSecurityGroupIngressArgsOutputWithContext(ctx context.Context) DefaultSecurityGroupIngressArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultSecurityGroupIngressArgsOutput)
}

type DefaultSecurityGroupIngressArgsArrayInput interface {
	pulumi.Input

	ToDefaultSecurityGroupIngressArgsArrayOutput() DefaultSecurityGroupIngressArgsArrayOutput
	ToDefaultSecurityGroupIngressArgsArrayOutputWithContext(context.Context) DefaultSecurityGroupIngressArgsArrayOutput
}

type DefaultSecurityGroupIngressArgsArray []DefaultSecurityGroupIngressArgsInput

func (DefaultSecurityGroupIngressArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultSecurityGroupIngressArgs)(nil)).Elem()
}

func (i DefaultSecurityGroupIngressArgsArray) ToDefaultSecurityGroupIngressArgsArrayOutput() DefaultSecurityGroupIngressArgsArrayOutput {
	return i.ToDefaultSecurityGroupIngressArgsArrayOutputWithContext(context.Background())
}

func (i DefaultSecurityGroupIngressArgsArray) ToDefaultSecurityGroupIngressArgsArrayOutputWithContext(ctx context.Context) DefaultSecurityGroupIngressArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultSecurityGroupIngressArgsArrayOutput)
}

type DefaultSecurityGroupIngressArgsOutput struct{ *pulumi.OutputState }

func (DefaultSecurityGroupIngressArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultSecurityGroupIngressArgs)(nil)).Elem()
}

func (o DefaultSecurityGroupIngressArgsOutput) ToDefaultSecurityGroupIngressArgsOutput() DefaultSecurityGroupIngressArgsOutput {
	return o
}

func (o DefaultSecurityGroupIngressArgsOutput) ToDefaultSecurityGroupIngressArgsOutputWithContext(ctx context.Context) DefaultSecurityGroupIngressArgsOutput {
	return o
}

func (o DefaultSecurityGroupIngressArgsOutput) CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngressArgs) []string { return v.CidrBlocks }).(pulumi.StringArrayOutput)
}

// The description of the security group
func (o DefaultSecurityGroupIngressArgsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngressArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DefaultSecurityGroupIngressArgsOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngressArgs) int { return v.FromPort }).(pulumi.IntOutput)
}

func (o DefaultSecurityGroupIngressArgsOutput) Ipv6CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngressArgs) []string { return v.Ipv6CidrBlocks }).(pulumi.StringArrayOutput)
}

func (o DefaultSecurityGroupIngressArgsOutput) PrefixListIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngressArgs) []string { return v.PrefixListIds }).(pulumi.StringArrayOutput)
}

func (o DefaultSecurityGroupIngressArgsOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngressArgs) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o DefaultSecurityGroupIngressArgsOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngressArgs) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o DefaultSecurityGroupIngressArgsOutput) Self() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngressArgs) *bool { return v.Self }).(pulumi.BoolPtrOutput)
}

func (o DefaultSecurityGroupIngressArgsOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngressArgs) int { return v.ToPort }).(pulumi.IntOutput)
}

type DefaultSecurityGroupIngressArgsArrayOutput struct{ *pulumi.OutputState }

func (DefaultSecurityGroupIngressArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultSecurityGroupIngressArgs)(nil)).Elem()
}

func (o DefaultSecurityGroupIngressArgsArrayOutput) ToDefaultSecurityGroupIngressArgsArrayOutput() DefaultSecurityGroupIngressArgsArrayOutput {
	return o
}

func (o DefaultSecurityGroupIngressArgsArrayOutput) ToDefaultSecurityGroupIngressArgsArrayOutputWithContext(ctx context.Context) DefaultSecurityGroupIngressArgsArrayOutput {
	return o
}

func (o DefaultSecurityGroupIngressArgsArrayOutput) Index(i pulumi.IntInput) DefaultSecurityGroupIngressArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DefaultSecurityGroupIngressArgs {
		return vs[0].([]DefaultSecurityGroupIngressArgs)[vs[1].(int)]
	}).(DefaultSecurityGroupIngressArgsOutput)
}

type DefaultSecurityGroupIngressState struct {
	CidrBlocks []string `pulumi:"cidrBlocks"`
	// The description of the security group
	Description    *string  `pulumi:"description"`
	FromPort       int      `pulumi:"fromPort"`
	Ipv6CidrBlocks []string `pulumi:"ipv6CidrBlocks"`
	PrefixListIds  []string `pulumi:"prefixListIds"`
	Protocol       string   `pulumi:"protocol"`
	SecurityGroups []string `pulumi:"securityGroups"`
	Self           *bool    `pulumi:"self"`
	ToPort         int      `pulumi:"toPort"`
}

type DefaultSecurityGroupIngressStateInput interface {
	pulumi.Input

	ToDefaultSecurityGroupIngressStateOutput() DefaultSecurityGroupIngressStateOutput
	ToDefaultSecurityGroupIngressStateOutputWithContext(context.Context) DefaultSecurityGroupIngressStateOutput
}

type DefaultSecurityGroupIngressStateArgs struct {
	CidrBlocks pulumi.StringArrayInput `pulumi:"cidrBlocks"`
	// The description of the security group
	Description    pulumi.StringPtrInput   `pulumi:"description"`
	FromPort       pulumi.IntInput         `pulumi:"fromPort"`
	Ipv6CidrBlocks pulumi.StringArrayInput `pulumi:"ipv6CidrBlocks"`
	PrefixListIds  pulumi.StringArrayInput `pulumi:"prefixListIds"`
	Protocol       pulumi.StringInput      `pulumi:"protocol"`
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	Self           pulumi.BoolPtrInput     `pulumi:"self"`
	ToPort         pulumi.IntInput         `pulumi:"toPort"`
}

func (DefaultSecurityGroupIngressStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultSecurityGroupIngressState)(nil)).Elem()
}

func (i DefaultSecurityGroupIngressStateArgs) ToDefaultSecurityGroupIngressStateOutput() DefaultSecurityGroupIngressStateOutput {
	return i.ToDefaultSecurityGroupIngressStateOutputWithContext(context.Background())
}

func (i DefaultSecurityGroupIngressStateArgs) ToDefaultSecurityGroupIngressStateOutputWithContext(ctx context.Context) DefaultSecurityGroupIngressStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultSecurityGroupIngressStateOutput)
}

type DefaultSecurityGroupIngressStateArrayInput interface {
	pulumi.Input

	ToDefaultSecurityGroupIngressStateArrayOutput() DefaultSecurityGroupIngressStateArrayOutput
	ToDefaultSecurityGroupIngressStateArrayOutputWithContext(context.Context) DefaultSecurityGroupIngressStateArrayOutput
}

type DefaultSecurityGroupIngressStateArray []DefaultSecurityGroupIngressStateInput

func (DefaultSecurityGroupIngressStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultSecurityGroupIngressState)(nil)).Elem()
}

func (i DefaultSecurityGroupIngressStateArray) ToDefaultSecurityGroupIngressStateArrayOutput() DefaultSecurityGroupIngressStateArrayOutput {
	return i.ToDefaultSecurityGroupIngressStateArrayOutputWithContext(context.Background())
}

func (i DefaultSecurityGroupIngressStateArray) ToDefaultSecurityGroupIngressStateArrayOutputWithContext(ctx context.Context) DefaultSecurityGroupIngressStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultSecurityGroupIngressStateArrayOutput)
}

type DefaultSecurityGroupIngressStateOutput struct{ *pulumi.OutputState }

func (DefaultSecurityGroupIngressStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultSecurityGroupIngressState)(nil)).Elem()
}

func (o DefaultSecurityGroupIngressStateOutput) ToDefaultSecurityGroupIngressStateOutput() DefaultSecurityGroupIngressStateOutput {
	return o
}

func (o DefaultSecurityGroupIngressStateOutput) ToDefaultSecurityGroupIngressStateOutputWithContext(ctx context.Context) DefaultSecurityGroupIngressStateOutput {
	return o
}

func (o DefaultSecurityGroupIngressStateOutput) CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngressState) []string { return v.CidrBlocks }).(pulumi.StringArrayOutput)
}

// The description of the security group
func (o DefaultSecurityGroupIngressStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngressState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DefaultSecurityGroupIngressStateOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngressState) int { return v.FromPort }).(pulumi.IntOutput)
}

func (o DefaultSecurityGroupIngressStateOutput) Ipv6CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngressState) []string { return v.Ipv6CidrBlocks }).(pulumi.StringArrayOutput)
}

func (o DefaultSecurityGroupIngressStateOutput) PrefixListIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngressState) []string { return v.PrefixListIds }).(pulumi.StringArrayOutput)
}

func (o DefaultSecurityGroupIngressStateOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngressState) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o DefaultSecurityGroupIngressStateOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngressState) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o DefaultSecurityGroupIngressStateOutput) Self() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngressState) *bool { return v.Self }).(pulumi.BoolPtrOutput)
}

func (o DefaultSecurityGroupIngressStateOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngressState) int { return v.ToPort }).(pulumi.IntOutput)
}

type DefaultSecurityGroupIngressStateArrayOutput struct{ *pulumi.OutputState }

func (DefaultSecurityGroupIngressStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultSecurityGroupIngressState)(nil)).Elem()
}

func (o DefaultSecurityGroupIngressStateArrayOutput) ToDefaultSecurityGroupIngressStateArrayOutput() DefaultSecurityGroupIngressStateArrayOutput {
	return o
}

func (o DefaultSecurityGroupIngressStateArrayOutput) ToDefaultSecurityGroupIngressStateArrayOutputWithContext(ctx context.Context) DefaultSecurityGroupIngressStateArrayOutput {
	return o
}

func (o DefaultSecurityGroupIngressStateArrayOutput) Index(i pulumi.IntInput) DefaultSecurityGroupIngressStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DefaultSecurityGroupIngressState {
		return vs[0].([]DefaultSecurityGroupIngressState)[vs[1].(int)]
	}).(DefaultSecurityGroupIngressStateOutput)
}

type FleetLaunchTemplateConfig struct {
	// Nested argument containing EC2 Launch Template to use. Defined below.
	LaunchTemplateSpecification FleetLaunchTemplateConfigLaunchTemplateSpecification `pulumi:"launchTemplateSpecification"`
	// Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
	Overrides []FleetLaunchTemplateConfigOverride `pulumi:"overrides"`
}

type FleetLaunchTemplateConfigInput interface {
	pulumi.Input

	ToFleetLaunchTemplateConfigOutput() FleetLaunchTemplateConfigOutput
	ToFleetLaunchTemplateConfigOutputWithContext(context.Context) FleetLaunchTemplateConfigOutput
}

type FleetLaunchTemplateConfigArgs struct {
	// Nested argument containing EC2 Launch Template to use. Defined below.
	LaunchTemplateSpecification FleetLaunchTemplateConfigLaunchTemplateSpecificationInput `pulumi:"launchTemplateSpecification"`
	// Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
	Overrides FleetLaunchTemplateConfigOverrideArrayInput `pulumi:"overrides"`
}

func (FleetLaunchTemplateConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfig)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigArgs) ToFleetLaunchTemplateConfigOutput() FleetLaunchTemplateConfigOutput {
	return i.ToFleetLaunchTemplateConfigOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigArgs) ToFleetLaunchTemplateConfigOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigOutput)
}

func (i FleetLaunchTemplateConfigArgs) ToFleetLaunchTemplateConfigPtrOutput() FleetLaunchTemplateConfigPtrOutput {
	return i.ToFleetLaunchTemplateConfigPtrOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigArgs) ToFleetLaunchTemplateConfigPtrOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigOutput).ToFleetLaunchTemplateConfigPtrOutputWithContext(ctx)
}

type FleetLaunchTemplateConfigPtrInput interface {
	pulumi.Input

	ToFleetLaunchTemplateConfigPtrOutput() FleetLaunchTemplateConfigPtrOutput
	ToFleetLaunchTemplateConfigPtrOutputWithContext(context.Context) FleetLaunchTemplateConfigPtrOutput
}

type fleetLaunchTemplateConfigPtrType FleetLaunchTemplateConfigArgs

func FleetLaunchTemplateConfigPtr(v *FleetLaunchTemplateConfigArgs) FleetLaunchTemplateConfigPtrInput {
	return (*fleetLaunchTemplateConfigPtrType)(v)
}

func (*fleetLaunchTemplateConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetLaunchTemplateConfig)(nil)).Elem()
}

func (i *fleetLaunchTemplateConfigPtrType) ToFleetLaunchTemplateConfigPtrOutput() FleetLaunchTemplateConfigPtrOutput {
	return i.ToFleetLaunchTemplateConfigPtrOutputWithContext(context.Background())
}

func (i *fleetLaunchTemplateConfigPtrType) ToFleetLaunchTemplateConfigPtrOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigPtrOutput)
}

type FleetLaunchTemplateConfigOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfig)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigOutput) ToFleetLaunchTemplateConfigOutput() FleetLaunchTemplateConfigOutput {
	return o
}

func (o FleetLaunchTemplateConfigOutput) ToFleetLaunchTemplateConfigOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOutput {
	return o
}

func (o FleetLaunchTemplateConfigOutput) ToFleetLaunchTemplateConfigPtrOutput() FleetLaunchTemplateConfigPtrOutput {
	return o.ToFleetLaunchTemplateConfigPtrOutputWithContext(context.Background())
}

func (o FleetLaunchTemplateConfigOutput) ToFleetLaunchTemplateConfigPtrOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfig) *FleetLaunchTemplateConfig {
		return &v
	}).(FleetLaunchTemplateConfigPtrOutput)
}

// Nested argument containing EC2 Launch Template to use. Defined below.
func (o FleetLaunchTemplateConfigOutput) LaunchTemplateSpecification() FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfig) FleetLaunchTemplateConfigLaunchTemplateSpecification {
		return v.LaunchTemplateSpecification
	}).(FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput)
}

// Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
func (o FleetLaunchTemplateConfigOutput) Overrides() FleetLaunchTemplateConfigOverrideArrayOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfig) []FleetLaunchTemplateConfigOverride { return v.Overrides }).(FleetLaunchTemplateConfigOverrideArrayOutput)
}

type FleetLaunchTemplateConfigPtrOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetLaunchTemplateConfig)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigPtrOutput) ToFleetLaunchTemplateConfigPtrOutput() FleetLaunchTemplateConfigPtrOutput {
	return o
}

func (o FleetLaunchTemplateConfigPtrOutput) ToFleetLaunchTemplateConfigPtrOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigPtrOutput {
	return o
}

func (o FleetLaunchTemplateConfigPtrOutput) Elem() FleetLaunchTemplateConfigOutput {
	return o.ApplyT(func(v *FleetLaunchTemplateConfig) FleetLaunchTemplateConfig { return *v }).(FleetLaunchTemplateConfigOutput)
}

// Nested argument containing EC2 Launch Template to use. Defined below.
func (o FleetLaunchTemplateConfigPtrOutput) LaunchTemplateSpecification() FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfig) FleetLaunchTemplateConfigLaunchTemplateSpecification {
		return v.LaunchTemplateSpecification
	}).(FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput)
}

// Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
func (o FleetLaunchTemplateConfigPtrOutput) Overrides() FleetLaunchTemplateConfigOverrideArrayOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfig) []FleetLaunchTemplateConfigOverride { return v.Overrides }).(FleetLaunchTemplateConfigOverrideArrayOutput)
}

type FleetLaunchTemplateConfigArgs struct {
	// Nested argument containing EC2 Launch Template to use. Defined below.
	LaunchTemplateSpecification FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs `pulumi:"launchTemplateSpecification"`
	// Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
	Overrides []FleetLaunchTemplateConfigOverrideArgs `pulumi:"overrides"`
}

type FleetLaunchTemplateConfigArgsInput interface {
	pulumi.Input

	ToFleetLaunchTemplateConfigArgsOutput() FleetLaunchTemplateConfigArgsOutput
	ToFleetLaunchTemplateConfigArgsOutputWithContext(context.Context) FleetLaunchTemplateConfigArgsOutput
}

type FleetLaunchTemplateConfigArgsArgs struct {
	// Nested argument containing EC2 Launch Template to use. Defined below.
	LaunchTemplateSpecification FleetLaunchTemplateConfigLaunchTemplateSpecificationArgsInput `pulumi:"launchTemplateSpecification"`
	// Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
	Overrides FleetLaunchTemplateConfigOverrideArgsArrayInput `pulumi:"overrides"`
}

func (FleetLaunchTemplateConfigArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigArgs)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigArgsArgs) ToFleetLaunchTemplateConfigArgsOutput() FleetLaunchTemplateConfigArgsOutput {
	return i.ToFleetLaunchTemplateConfigArgsOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigArgsArgs) ToFleetLaunchTemplateConfigArgsOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigArgsOutput)
}

func (i FleetLaunchTemplateConfigArgsArgs) ToFleetLaunchTemplateConfigArgsPtrOutput() FleetLaunchTemplateConfigArgsPtrOutput {
	return i.ToFleetLaunchTemplateConfigArgsPtrOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigArgsArgs) ToFleetLaunchTemplateConfigArgsPtrOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigArgsOutput).ToFleetLaunchTemplateConfigArgsPtrOutputWithContext(ctx)
}

type FleetLaunchTemplateConfigArgsPtrInput interface {
	pulumi.Input

	ToFleetLaunchTemplateConfigArgsPtrOutput() FleetLaunchTemplateConfigArgsPtrOutput
	ToFleetLaunchTemplateConfigArgsPtrOutputWithContext(context.Context) FleetLaunchTemplateConfigArgsPtrOutput
}

type fleetLaunchTemplateConfigArgsPtrType FleetLaunchTemplateConfigArgsArgs

func FleetLaunchTemplateConfigArgsPtr(v *FleetLaunchTemplateConfigArgsArgs) FleetLaunchTemplateConfigArgsPtrInput {
	return (*fleetLaunchTemplateConfigArgsPtrType)(v)
}

func (*fleetLaunchTemplateConfigArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetLaunchTemplateConfigArgs)(nil)).Elem()
}

func (i *fleetLaunchTemplateConfigArgsPtrType) ToFleetLaunchTemplateConfigArgsPtrOutput() FleetLaunchTemplateConfigArgsPtrOutput {
	return i.ToFleetLaunchTemplateConfigArgsPtrOutputWithContext(context.Background())
}

func (i *fleetLaunchTemplateConfigArgsPtrType) ToFleetLaunchTemplateConfigArgsPtrOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigArgsPtrOutput)
}

type FleetLaunchTemplateConfigArgsOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigArgs)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigArgsOutput) ToFleetLaunchTemplateConfigArgsOutput() FleetLaunchTemplateConfigArgsOutput {
	return o
}

func (o FleetLaunchTemplateConfigArgsOutput) ToFleetLaunchTemplateConfigArgsOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigArgsOutput {
	return o
}

func (o FleetLaunchTemplateConfigArgsOutput) ToFleetLaunchTemplateConfigArgsPtrOutput() FleetLaunchTemplateConfigArgsPtrOutput {
	return o.ToFleetLaunchTemplateConfigArgsPtrOutputWithContext(context.Background())
}

func (o FleetLaunchTemplateConfigArgsOutput) ToFleetLaunchTemplateConfigArgsPtrOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigArgsPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigArgs) *FleetLaunchTemplateConfigArgs {
		return &v
	}).(FleetLaunchTemplateConfigArgsPtrOutput)
}

// Nested argument containing EC2 Launch Template to use. Defined below.
func (o FleetLaunchTemplateConfigArgsOutput) LaunchTemplateSpecification() FleetLaunchTemplateConfigLaunchTemplateSpecificationArgsOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigArgs) FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs {
		return v.LaunchTemplateSpecification
	}).(FleetLaunchTemplateConfigLaunchTemplateSpecificationArgsOutput)
}

// Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
func (o FleetLaunchTemplateConfigArgsOutput) Overrides() FleetLaunchTemplateConfigOverrideArgsArrayOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigArgs) []FleetLaunchTemplateConfigOverrideArgs { return v.Overrides }).(FleetLaunchTemplateConfigOverrideArgsArrayOutput)
}

type FleetLaunchTemplateConfigArgsPtrOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetLaunchTemplateConfigArgs)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigArgsPtrOutput) ToFleetLaunchTemplateConfigArgsPtrOutput() FleetLaunchTemplateConfigArgsPtrOutput {
	return o
}

func (o FleetLaunchTemplateConfigArgsPtrOutput) ToFleetLaunchTemplateConfigArgsPtrOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigArgsPtrOutput {
	return o
}

func (o FleetLaunchTemplateConfigArgsPtrOutput) Elem() FleetLaunchTemplateConfigArgsOutput {
	return o.ApplyT(func(v *FleetLaunchTemplateConfigArgs) FleetLaunchTemplateConfigArgs { return *v }).(FleetLaunchTemplateConfigArgsOutput)
}

// Nested argument containing EC2 Launch Template to use. Defined below.
func (o FleetLaunchTemplateConfigArgsPtrOutput) LaunchTemplateSpecification() FleetLaunchTemplateConfigLaunchTemplateSpecificationArgsOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigArgs) FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs {
		return v.LaunchTemplateSpecification
	}).(FleetLaunchTemplateConfigLaunchTemplateSpecificationArgsOutput)
}

// Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
func (o FleetLaunchTemplateConfigArgsPtrOutput) Overrides() FleetLaunchTemplateConfigOverrideArgsArrayOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigArgs) []FleetLaunchTemplateConfigOverrideArgs { return v.Overrides }).(FleetLaunchTemplateConfigOverrideArgsArrayOutput)
}

type FleetLaunchTemplateConfigLaunchTemplateSpecification struct {
	// ID of the launch template.
	LaunchTemplateId *string `pulumi:"launchTemplateId"`
	// Name of the launch template.
	LaunchTemplateName *string `pulumi:"launchTemplateName"`
	// Version number of the launch template.
	Version string `pulumi:"version"`
}

type FleetLaunchTemplateConfigLaunchTemplateSpecificationInput interface {
	pulumi.Input

	ToFleetLaunchTemplateConfigLaunchTemplateSpecificationOutput() FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput
	ToFleetLaunchTemplateConfigLaunchTemplateSpecificationOutputWithContext(context.Context) FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput
}

type FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs struct {
	// ID of the launch template.
	LaunchTemplateId pulumi.StringPtrInput `pulumi:"launchTemplateId"`
	// Name of the launch template.
	LaunchTemplateName pulumi.StringPtrInput `pulumi:"launchTemplateName"`
	// Version number of the launch template.
	Version pulumi.StringInput `pulumi:"version"`
}

func (FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigLaunchTemplateSpecification)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs) ToFleetLaunchTemplateConfigLaunchTemplateSpecificationOutput() FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return i.ToFleetLaunchTemplateConfigLaunchTemplateSpecificationOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs) ToFleetLaunchTemplateConfigLaunchTemplateSpecificationOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput)
}

type FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigLaunchTemplateSpecification)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput) ToFleetLaunchTemplateConfigLaunchTemplateSpecificationOutput() FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return o
}

func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput) ToFleetLaunchTemplateConfigLaunchTemplateSpecificationOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return o
}

// ID of the launch template.
func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput) LaunchTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigLaunchTemplateSpecification) *string { return v.LaunchTemplateId }).(pulumi.StringPtrOutput)
}

// Name of the launch template.
func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput) LaunchTemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigLaunchTemplateSpecification) *string { return v.LaunchTemplateName }).(pulumi.StringPtrOutput)
}

// Version number of the launch template.
func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigLaunchTemplateSpecification) string { return v.Version }).(pulumi.StringOutput)
}

type FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs struct {
	// ID of the launch template.
	LaunchTemplateId *string `pulumi:"launchTemplateId"`
	// Name of the launch template.
	LaunchTemplateName *string `pulumi:"launchTemplateName"`
	// Version number of the launch template.
	Version string `pulumi:"version"`
}

type FleetLaunchTemplateConfigLaunchTemplateSpecificationArgsInput interface {
	pulumi.Input

	ToFleetLaunchTemplateConfigLaunchTemplateSpecificationArgsOutput() FleetLaunchTemplateConfigLaunchTemplateSpecificationArgsOutput
	ToFleetLaunchTemplateConfigLaunchTemplateSpecificationArgsOutputWithContext(context.Context) FleetLaunchTemplateConfigLaunchTemplateSpecificationArgsOutput
}

type FleetLaunchTemplateConfigLaunchTemplateSpecificationArgsArgs struct {
	// ID of the launch template.
	LaunchTemplateId pulumi.StringPtrInput `pulumi:"launchTemplateId"`
	// Name of the launch template.
	LaunchTemplateName pulumi.StringPtrInput `pulumi:"launchTemplateName"`
	// Version number of the launch template.
	Version pulumi.StringInput `pulumi:"version"`
}

func (FleetLaunchTemplateConfigLaunchTemplateSpecificationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigLaunchTemplateSpecificationArgsArgs) ToFleetLaunchTemplateConfigLaunchTemplateSpecificationArgsOutput() FleetLaunchTemplateConfigLaunchTemplateSpecificationArgsOutput {
	return i.ToFleetLaunchTemplateConfigLaunchTemplateSpecificationArgsOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigLaunchTemplateSpecificationArgsArgs) ToFleetLaunchTemplateConfigLaunchTemplateSpecificationArgsOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigLaunchTemplateSpecificationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigLaunchTemplateSpecificationArgsOutput)
}

type FleetLaunchTemplateConfigLaunchTemplateSpecificationArgsOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigLaunchTemplateSpecificationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationArgsOutput) ToFleetLaunchTemplateConfigLaunchTemplateSpecificationArgsOutput() FleetLaunchTemplateConfigLaunchTemplateSpecificationArgsOutput {
	return o
}

func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationArgsOutput) ToFleetLaunchTemplateConfigLaunchTemplateSpecificationArgsOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigLaunchTemplateSpecificationArgsOutput {
	return o
}

// ID of the launch template.
func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationArgsOutput) LaunchTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs) *string { return v.LaunchTemplateId }).(pulumi.StringPtrOutput)
}

// Name of the launch template.
func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationArgsOutput) LaunchTemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs) *string { return v.LaunchTemplateName }).(pulumi.StringPtrOutput)
}

// Version number of the launch template.
func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationArgsOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs) string { return v.Version }).(pulumi.StringOutput)
}

type FleetLaunchTemplateConfigOverride struct {
	// Availability Zone in which to launch the instances.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Instance type.
	InstanceType *string `pulumi:"instanceType"`
	// Maximum price per unit hour that you are willing to pay for a Spot Instance.
	MaxPrice *string `pulumi:"maxPrice"`
	// Priority for the launch template override. If `onDemandOptions` `allocationStrategy` is set to `prioritized`, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
	Priority *float64 `pulumi:"priority"`
	// ID of the subnet in which to launch the instances.
	SubnetId *string `pulumi:"subnetId"`
	// Number of units provided by the specified instance type.
	WeightedCapacity *float64 `pulumi:"weightedCapacity"`
}

type FleetLaunchTemplateConfigOverrideInput interface {
	pulumi.Input

	ToFleetLaunchTemplateConfigOverrideOutput() FleetLaunchTemplateConfigOverrideOutput
	ToFleetLaunchTemplateConfigOverrideOutputWithContext(context.Context) FleetLaunchTemplateConfigOverrideOutput
}

type FleetLaunchTemplateConfigOverrideArgs struct {
	// Availability Zone in which to launch the instances.
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// Instance type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// Maximum price per unit hour that you are willing to pay for a Spot Instance.
	MaxPrice pulumi.StringPtrInput `pulumi:"maxPrice"`
	// Priority for the launch template override. If `onDemandOptions` `allocationStrategy` is set to `prioritized`, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
	Priority pulumi.Float64PtrInput `pulumi:"priority"`
	// ID of the subnet in which to launch the instances.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// Number of units provided by the specified instance type.
	WeightedCapacity pulumi.Float64PtrInput `pulumi:"weightedCapacity"`
}

func (FleetLaunchTemplateConfigOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigOverride)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigOverrideArgs) ToFleetLaunchTemplateConfigOverrideOutput() FleetLaunchTemplateConfigOverrideOutput {
	return i.ToFleetLaunchTemplateConfigOverrideOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigOverrideArgs) ToFleetLaunchTemplateConfigOverrideOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigOverrideOutput)
}

type FleetLaunchTemplateConfigOverrideArrayInput interface {
	pulumi.Input

	ToFleetLaunchTemplateConfigOverrideArrayOutput() FleetLaunchTemplateConfigOverrideArrayOutput
	ToFleetLaunchTemplateConfigOverrideArrayOutputWithContext(context.Context) FleetLaunchTemplateConfigOverrideArrayOutput
}

type FleetLaunchTemplateConfigOverrideArray []FleetLaunchTemplateConfigOverrideInput

func (FleetLaunchTemplateConfigOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FleetLaunchTemplateConfigOverride)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigOverrideArray) ToFleetLaunchTemplateConfigOverrideArrayOutput() FleetLaunchTemplateConfigOverrideArrayOutput {
	return i.ToFleetLaunchTemplateConfigOverrideArrayOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigOverrideArray) ToFleetLaunchTemplateConfigOverrideArrayOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigOverrideArrayOutput)
}

type FleetLaunchTemplateConfigOverrideOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigOverride)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigOverrideOutput) ToFleetLaunchTemplateConfigOverrideOutput() FleetLaunchTemplateConfigOverrideOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideOutput) ToFleetLaunchTemplateConfigOverrideOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideOutput {
	return o
}

// Availability Zone in which to launch the instances.
func (o FleetLaunchTemplateConfigOverrideOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigOverride) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// Instance type.
func (o FleetLaunchTemplateConfigOverrideOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigOverride) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// Maximum price per unit hour that you are willing to pay for a Spot Instance.
func (o FleetLaunchTemplateConfigOverrideOutput) MaxPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigOverride) *string { return v.MaxPrice }).(pulumi.StringPtrOutput)
}

// Priority for the launch template override. If `onDemandOptions` `allocationStrategy` is set to `prioritized`, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
func (o FleetLaunchTemplateConfigOverrideOutput) Priority() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigOverride) *float64 { return v.Priority }).(pulumi.Float64PtrOutput)
}

// ID of the subnet in which to launch the instances.
func (o FleetLaunchTemplateConfigOverrideOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigOverride) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// Number of units provided by the specified instance type.
func (o FleetLaunchTemplateConfigOverrideOutput) WeightedCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigOverride) *float64 { return v.WeightedCapacity }).(pulumi.Float64PtrOutput)
}

type FleetLaunchTemplateConfigOverrideArrayOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FleetLaunchTemplateConfigOverride)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigOverrideArrayOutput) ToFleetLaunchTemplateConfigOverrideArrayOutput() FleetLaunchTemplateConfigOverrideArrayOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideArrayOutput) ToFleetLaunchTemplateConfigOverrideArrayOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideArrayOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideArrayOutput) Index(i pulumi.IntInput) FleetLaunchTemplateConfigOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FleetLaunchTemplateConfigOverride {
		return vs[0].([]FleetLaunchTemplateConfigOverride)[vs[1].(int)]
	}).(FleetLaunchTemplateConfigOverrideOutput)
}

type FleetLaunchTemplateConfigOverrideArgs struct {
	// Availability Zone in which to launch the instances.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Instance type.
	InstanceType *string `pulumi:"instanceType"`
	// Maximum price per unit hour that you are willing to pay for a Spot Instance.
	MaxPrice *string `pulumi:"maxPrice"`
	// Priority for the launch template override. If `onDemandOptions` `allocationStrategy` is set to `prioritized`, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
	Priority *float64 `pulumi:"priority"`
	// ID of the subnet in which to launch the instances.
	SubnetId *string `pulumi:"subnetId"`
	// Number of units provided by the specified instance type.
	WeightedCapacity *float64 `pulumi:"weightedCapacity"`
}

type FleetLaunchTemplateConfigOverrideArgsInput interface {
	pulumi.Input

	ToFleetLaunchTemplateConfigOverrideArgsOutput() FleetLaunchTemplateConfigOverrideArgsOutput
	ToFleetLaunchTemplateConfigOverrideArgsOutputWithContext(context.Context) FleetLaunchTemplateConfigOverrideArgsOutput
}

type FleetLaunchTemplateConfigOverrideArgsArgs struct {
	// Availability Zone in which to launch the instances.
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// Instance type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// Maximum price per unit hour that you are willing to pay for a Spot Instance.
	MaxPrice pulumi.StringPtrInput `pulumi:"maxPrice"`
	// Priority for the launch template override. If `onDemandOptions` `allocationStrategy` is set to `prioritized`, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
	Priority pulumi.Float64PtrInput `pulumi:"priority"`
	// ID of the subnet in which to launch the instances.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// Number of units provided by the specified instance type.
	WeightedCapacity pulumi.Float64PtrInput `pulumi:"weightedCapacity"`
}

func (FleetLaunchTemplateConfigOverrideArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigOverrideArgs)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigOverrideArgsArgs) ToFleetLaunchTemplateConfigOverrideArgsOutput() FleetLaunchTemplateConfigOverrideArgsOutput {
	return i.ToFleetLaunchTemplateConfigOverrideArgsOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigOverrideArgsArgs) ToFleetLaunchTemplateConfigOverrideArgsOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigOverrideArgsOutput)
}

type FleetLaunchTemplateConfigOverrideArgsArrayInput interface {
	pulumi.Input

	ToFleetLaunchTemplateConfigOverrideArgsArrayOutput() FleetLaunchTemplateConfigOverrideArgsArrayOutput
	ToFleetLaunchTemplateConfigOverrideArgsArrayOutputWithContext(context.Context) FleetLaunchTemplateConfigOverrideArgsArrayOutput
}

type FleetLaunchTemplateConfigOverrideArgsArray []FleetLaunchTemplateConfigOverrideArgsInput

func (FleetLaunchTemplateConfigOverrideArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FleetLaunchTemplateConfigOverrideArgs)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigOverrideArgsArray) ToFleetLaunchTemplateConfigOverrideArgsArrayOutput() FleetLaunchTemplateConfigOverrideArgsArrayOutput {
	return i.ToFleetLaunchTemplateConfigOverrideArgsArrayOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigOverrideArgsArray) ToFleetLaunchTemplateConfigOverrideArgsArrayOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigOverrideArgsArrayOutput)
}

type FleetLaunchTemplateConfigOverrideArgsOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigOverrideArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigOverrideArgs)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigOverrideArgsOutput) ToFleetLaunchTemplateConfigOverrideArgsOutput() FleetLaunchTemplateConfigOverrideArgsOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideArgsOutput) ToFleetLaunchTemplateConfigOverrideArgsOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideArgsOutput {
	return o
}

// Availability Zone in which to launch the instances.
func (o FleetLaunchTemplateConfigOverrideArgsOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigOverrideArgs) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// Instance type.
func (o FleetLaunchTemplateConfigOverrideArgsOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigOverrideArgs) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// Maximum price per unit hour that you are willing to pay for a Spot Instance.
func (o FleetLaunchTemplateConfigOverrideArgsOutput) MaxPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigOverrideArgs) *string { return v.MaxPrice }).(pulumi.StringPtrOutput)
}

// Priority for the launch template override. If `onDemandOptions` `allocationStrategy` is set to `prioritized`, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
func (o FleetLaunchTemplateConfigOverrideArgsOutput) Priority() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigOverrideArgs) *float64 { return v.Priority }).(pulumi.Float64PtrOutput)
}

// ID of the subnet in which to launch the instances.
func (o FleetLaunchTemplateConfigOverrideArgsOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigOverrideArgs) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// Number of units provided by the specified instance type.
func (o FleetLaunchTemplateConfigOverrideArgsOutput) WeightedCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigOverrideArgs) *float64 { return v.WeightedCapacity }).(pulumi.Float64PtrOutput)
}

type FleetLaunchTemplateConfigOverrideArgsArrayOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigOverrideArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FleetLaunchTemplateConfigOverrideArgs)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigOverrideArgsArrayOutput) ToFleetLaunchTemplateConfigOverrideArgsArrayOutput() FleetLaunchTemplateConfigOverrideArgsArrayOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideArgsArrayOutput) ToFleetLaunchTemplateConfigOverrideArgsArrayOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideArgsArrayOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideArgsArrayOutput) Index(i pulumi.IntInput) FleetLaunchTemplateConfigOverrideArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FleetLaunchTemplateConfigOverrideArgs {
		return vs[0].([]FleetLaunchTemplateConfigOverrideArgs)[vs[1].(int)]
	}).(FleetLaunchTemplateConfigOverrideArgsOutput)
}

type FleetLaunchTemplateConfigState struct {
	// Nested argument containing EC2 Launch Template to use. Defined below.
	LaunchTemplateSpecification FleetLaunchTemplateConfigStateLaunchTemplateSpecification `pulumi:"launchTemplateSpecification"`
	// Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
	Overrides []FleetLaunchTemplateConfigStateOverride `pulumi:"overrides"`
}

type FleetLaunchTemplateConfigStateInput interface {
	pulumi.Input

	ToFleetLaunchTemplateConfigStateOutput() FleetLaunchTemplateConfigStateOutput
	ToFleetLaunchTemplateConfigStateOutputWithContext(context.Context) FleetLaunchTemplateConfigStateOutput
}

type FleetLaunchTemplateConfigStateArgs struct {
	// Nested argument containing EC2 Launch Template to use. Defined below.
	LaunchTemplateSpecification FleetLaunchTemplateConfigStateLaunchTemplateSpecificationInput `pulumi:"launchTemplateSpecification"`
	// Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
	Overrides FleetLaunchTemplateConfigStateOverrideArrayInput `pulumi:"overrides"`
}

func (FleetLaunchTemplateConfigStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigState)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigStateArgs) ToFleetLaunchTemplateConfigStateOutput() FleetLaunchTemplateConfigStateOutput {
	return i.ToFleetLaunchTemplateConfigStateOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigStateArgs) ToFleetLaunchTemplateConfigStateOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigStateOutput)
}

type FleetLaunchTemplateConfigStateOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigState)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigStateOutput) ToFleetLaunchTemplateConfigStateOutput() FleetLaunchTemplateConfigStateOutput {
	return o
}

func (o FleetLaunchTemplateConfigStateOutput) ToFleetLaunchTemplateConfigStateOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigStateOutput {
	return o
}

// Nested argument containing EC2 Launch Template to use. Defined below.
func (o FleetLaunchTemplateConfigStateOutput) LaunchTemplateSpecification() FleetLaunchTemplateConfigStateLaunchTemplateSpecificationOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigState) FleetLaunchTemplateConfigStateLaunchTemplateSpecification {
		return v.LaunchTemplateSpecification
	}).(FleetLaunchTemplateConfigStateLaunchTemplateSpecificationOutput)
}

// Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
func (o FleetLaunchTemplateConfigStateOutput) Overrides() FleetLaunchTemplateConfigStateOverrideArrayOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigState) []FleetLaunchTemplateConfigStateOverride { return v.Overrides }).(FleetLaunchTemplateConfigStateOverrideArrayOutput)
}

type FleetLaunchTemplateConfigStateLaunchTemplateSpecification struct {
	// ID of the launch template.
	LaunchTemplateId *string `pulumi:"launchTemplateId"`
	// Name of the launch template.
	LaunchTemplateName *string `pulumi:"launchTemplateName"`
	// Version number of the launch template.
	Version string `pulumi:"version"`
}

type FleetLaunchTemplateConfigStateLaunchTemplateSpecificationInput interface {
	pulumi.Input

	ToFleetLaunchTemplateConfigStateLaunchTemplateSpecificationOutput() FleetLaunchTemplateConfigStateLaunchTemplateSpecificationOutput
	ToFleetLaunchTemplateConfigStateLaunchTemplateSpecificationOutputWithContext(context.Context) FleetLaunchTemplateConfigStateLaunchTemplateSpecificationOutput
}

type FleetLaunchTemplateConfigStateLaunchTemplateSpecificationArgs struct {
	// ID of the launch template.
	LaunchTemplateId pulumi.StringPtrInput `pulumi:"launchTemplateId"`
	// Name of the launch template.
	LaunchTemplateName pulumi.StringPtrInput `pulumi:"launchTemplateName"`
	// Version number of the launch template.
	Version pulumi.StringInput `pulumi:"version"`
}

func (FleetLaunchTemplateConfigStateLaunchTemplateSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigStateLaunchTemplateSpecification)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigStateLaunchTemplateSpecificationArgs) ToFleetLaunchTemplateConfigStateLaunchTemplateSpecificationOutput() FleetLaunchTemplateConfigStateLaunchTemplateSpecificationOutput {
	return i.ToFleetLaunchTemplateConfigStateLaunchTemplateSpecificationOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigStateLaunchTemplateSpecificationArgs) ToFleetLaunchTemplateConfigStateLaunchTemplateSpecificationOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigStateLaunchTemplateSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigStateLaunchTemplateSpecificationOutput)
}

type FleetLaunchTemplateConfigStateLaunchTemplateSpecificationOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigStateLaunchTemplateSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigStateLaunchTemplateSpecification)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigStateLaunchTemplateSpecificationOutput) ToFleetLaunchTemplateConfigStateLaunchTemplateSpecificationOutput() FleetLaunchTemplateConfigStateLaunchTemplateSpecificationOutput {
	return o
}

func (o FleetLaunchTemplateConfigStateLaunchTemplateSpecificationOutput) ToFleetLaunchTemplateConfigStateLaunchTemplateSpecificationOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigStateLaunchTemplateSpecificationOutput {
	return o
}

// ID of the launch template.
func (o FleetLaunchTemplateConfigStateLaunchTemplateSpecificationOutput) LaunchTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigStateLaunchTemplateSpecification) *string { return v.LaunchTemplateId }).(pulumi.StringPtrOutput)
}

// Name of the launch template.
func (o FleetLaunchTemplateConfigStateLaunchTemplateSpecificationOutput) LaunchTemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigStateLaunchTemplateSpecification) *string {
		return v.LaunchTemplateName
	}).(pulumi.StringPtrOutput)
}

// Version number of the launch template.
func (o FleetLaunchTemplateConfigStateLaunchTemplateSpecificationOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigStateLaunchTemplateSpecification) string { return v.Version }).(pulumi.StringOutput)
}

type FleetLaunchTemplateConfigStateOverride struct {
	// Availability Zone in which to launch the instances.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Instance type.
	InstanceType *string `pulumi:"instanceType"`
	// Maximum price per unit hour that you are willing to pay for a Spot Instance.
	MaxPrice *string `pulumi:"maxPrice"`
	// Priority for the launch template override. If `onDemandOptions` `allocationStrategy` is set to `prioritized`, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
	Priority *float64 `pulumi:"priority"`
	// ID of the subnet in which to launch the instances.
	SubnetId *string `pulumi:"subnetId"`
	// Number of units provided by the specified instance type.
	WeightedCapacity *float64 `pulumi:"weightedCapacity"`
}

type FleetLaunchTemplateConfigStateOverrideInput interface {
	pulumi.Input

	ToFleetLaunchTemplateConfigStateOverrideOutput() FleetLaunchTemplateConfigStateOverrideOutput
	ToFleetLaunchTemplateConfigStateOverrideOutputWithContext(context.Context) FleetLaunchTemplateConfigStateOverrideOutput
}

type FleetLaunchTemplateConfigStateOverrideArgs struct {
	// Availability Zone in which to launch the instances.
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// Instance type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// Maximum price per unit hour that you are willing to pay for a Spot Instance.
	MaxPrice pulumi.StringPtrInput `pulumi:"maxPrice"`
	// Priority for the launch template override. If `onDemandOptions` `allocationStrategy` is set to `prioritized`, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
	Priority pulumi.Float64PtrInput `pulumi:"priority"`
	// ID of the subnet in which to launch the instances.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// Number of units provided by the specified instance type.
	WeightedCapacity pulumi.Float64PtrInput `pulumi:"weightedCapacity"`
}

func (FleetLaunchTemplateConfigStateOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigStateOverride)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigStateOverrideArgs) ToFleetLaunchTemplateConfigStateOverrideOutput() FleetLaunchTemplateConfigStateOverrideOutput {
	return i.ToFleetLaunchTemplateConfigStateOverrideOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigStateOverrideArgs) ToFleetLaunchTemplateConfigStateOverrideOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigStateOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigStateOverrideOutput)
}

type FleetLaunchTemplateConfigStateOverrideArrayInput interface {
	pulumi.Input

	ToFleetLaunchTemplateConfigStateOverrideArrayOutput() FleetLaunchTemplateConfigStateOverrideArrayOutput
	ToFleetLaunchTemplateConfigStateOverrideArrayOutputWithContext(context.Context) FleetLaunchTemplateConfigStateOverrideArrayOutput
}

type FleetLaunchTemplateConfigStateOverrideArray []FleetLaunchTemplateConfigStateOverrideInput

func (FleetLaunchTemplateConfigStateOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FleetLaunchTemplateConfigStateOverride)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigStateOverrideArray) ToFleetLaunchTemplateConfigStateOverrideArrayOutput() FleetLaunchTemplateConfigStateOverrideArrayOutput {
	return i.ToFleetLaunchTemplateConfigStateOverrideArrayOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigStateOverrideArray) ToFleetLaunchTemplateConfigStateOverrideArrayOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigStateOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigStateOverrideArrayOutput)
}

type FleetLaunchTemplateConfigStateOverrideOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigStateOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigStateOverride)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigStateOverrideOutput) ToFleetLaunchTemplateConfigStateOverrideOutput() FleetLaunchTemplateConfigStateOverrideOutput {
	return o
}

func (o FleetLaunchTemplateConfigStateOverrideOutput) ToFleetLaunchTemplateConfigStateOverrideOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigStateOverrideOutput {
	return o
}

// Availability Zone in which to launch the instances.
func (o FleetLaunchTemplateConfigStateOverrideOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigStateOverride) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// Instance type.
func (o FleetLaunchTemplateConfigStateOverrideOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigStateOverride) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// Maximum price per unit hour that you are willing to pay for a Spot Instance.
func (o FleetLaunchTemplateConfigStateOverrideOutput) MaxPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigStateOverride) *string { return v.MaxPrice }).(pulumi.StringPtrOutput)
}

// Priority for the launch template override. If `onDemandOptions` `allocationStrategy` is set to `prioritized`, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
func (o FleetLaunchTemplateConfigStateOverrideOutput) Priority() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigStateOverride) *float64 { return v.Priority }).(pulumi.Float64PtrOutput)
}

// ID of the subnet in which to launch the instances.
func (o FleetLaunchTemplateConfigStateOverrideOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigStateOverride) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// Number of units provided by the specified instance type.
func (o FleetLaunchTemplateConfigStateOverrideOutput) WeightedCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigStateOverride) *float64 { return v.WeightedCapacity }).(pulumi.Float64PtrOutput)
}

type FleetLaunchTemplateConfigStateOverrideArrayOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigStateOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FleetLaunchTemplateConfigStateOverride)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigStateOverrideArrayOutput) ToFleetLaunchTemplateConfigStateOverrideArrayOutput() FleetLaunchTemplateConfigStateOverrideArrayOutput {
	return o
}

func (o FleetLaunchTemplateConfigStateOverrideArrayOutput) ToFleetLaunchTemplateConfigStateOverrideArrayOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigStateOverrideArrayOutput {
	return o
}

func (o FleetLaunchTemplateConfigStateOverrideArrayOutput) Index(i pulumi.IntInput) FleetLaunchTemplateConfigStateOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FleetLaunchTemplateConfigStateOverride {
		return vs[0].([]FleetLaunchTemplateConfigStateOverride)[vs[1].(int)]
	}).(FleetLaunchTemplateConfigStateOverrideOutput)
}

type FleetOnDemandOptions struct {
	// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
	AllocationStrategy *string `pulumi:"allocationStrategy"`
}

type FleetOnDemandOptionsInput interface {
	pulumi.Input

	ToFleetOnDemandOptionsOutput() FleetOnDemandOptionsOutput
	ToFleetOnDemandOptionsOutputWithContext(context.Context) FleetOnDemandOptionsOutput
}

type FleetOnDemandOptionsArgs struct {
	// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
	AllocationStrategy pulumi.StringPtrInput `pulumi:"allocationStrategy"`
}

func (FleetOnDemandOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetOnDemandOptions)(nil)).Elem()
}

func (i FleetOnDemandOptionsArgs) ToFleetOnDemandOptionsOutput() FleetOnDemandOptionsOutput {
	return i.ToFleetOnDemandOptionsOutputWithContext(context.Background())
}

func (i FleetOnDemandOptionsArgs) ToFleetOnDemandOptionsOutputWithContext(ctx context.Context) FleetOnDemandOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetOnDemandOptionsOutput)
}

func (i FleetOnDemandOptionsArgs) ToFleetOnDemandOptionsPtrOutput() FleetOnDemandOptionsPtrOutput {
	return i.ToFleetOnDemandOptionsPtrOutputWithContext(context.Background())
}

func (i FleetOnDemandOptionsArgs) ToFleetOnDemandOptionsPtrOutputWithContext(ctx context.Context) FleetOnDemandOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetOnDemandOptionsOutput).ToFleetOnDemandOptionsPtrOutputWithContext(ctx)
}

type FleetOnDemandOptionsPtrInput interface {
	pulumi.Input

	ToFleetOnDemandOptionsPtrOutput() FleetOnDemandOptionsPtrOutput
	ToFleetOnDemandOptionsPtrOutputWithContext(context.Context) FleetOnDemandOptionsPtrOutput
}

type fleetOnDemandOptionsPtrType FleetOnDemandOptionsArgs

func FleetOnDemandOptionsPtr(v *FleetOnDemandOptionsArgs) FleetOnDemandOptionsPtrInput {
	return (*fleetOnDemandOptionsPtrType)(v)
}

func (*fleetOnDemandOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetOnDemandOptions)(nil)).Elem()
}

func (i *fleetOnDemandOptionsPtrType) ToFleetOnDemandOptionsPtrOutput() FleetOnDemandOptionsPtrOutput {
	return i.ToFleetOnDemandOptionsPtrOutputWithContext(context.Background())
}

func (i *fleetOnDemandOptionsPtrType) ToFleetOnDemandOptionsPtrOutputWithContext(ctx context.Context) FleetOnDemandOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetOnDemandOptionsPtrOutput)
}

type FleetOnDemandOptionsOutput struct{ *pulumi.OutputState }

func (FleetOnDemandOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetOnDemandOptions)(nil)).Elem()
}

func (o FleetOnDemandOptionsOutput) ToFleetOnDemandOptionsOutput() FleetOnDemandOptionsOutput {
	return o
}

func (o FleetOnDemandOptionsOutput) ToFleetOnDemandOptionsOutputWithContext(ctx context.Context) FleetOnDemandOptionsOutput {
	return o
}

func (o FleetOnDemandOptionsOutput) ToFleetOnDemandOptionsPtrOutput() FleetOnDemandOptionsPtrOutput {
	return o.ToFleetOnDemandOptionsPtrOutputWithContext(context.Background())
}

func (o FleetOnDemandOptionsOutput) ToFleetOnDemandOptionsPtrOutputWithContext(ctx context.Context) FleetOnDemandOptionsPtrOutput {
	return o.ApplyT(func(v FleetOnDemandOptions) *FleetOnDemandOptions {
		return &v
	}).(FleetOnDemandOptionsPtrOutput)
}

// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
func (o FleetOnDemandOptionsOutput) AllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetOnDemandOptions) *string { return v.AllocationStrategy }).(pulumi.StringPtrOutput)
}

type FleetOnDemandOptionsPtrOutput struct{ *pulumi.OutputState }

func (FleetOnDemandOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetOnDemandOptions)(nil)).Elem()
}

func (o FleetOnDemandOptionsPtrOutput) ToFleetOnDemandOptionsPtrOutput() FleetOnDemandOptionsPtrOutput {
	return o
}

func (o FleetOnDemandOptionsPtrOutput) ToFleetOnDemandOptionsPtrOutputWithContext(ctx context.Context) FleetOnDemandOptionsPtrOutput {
	return o
}

func (o FleetOnDemandOptionsPtrOutput) Elem() FleetOnDemandOptionsOutput {
	return o.ApplyT(func(v *FleetOnDemandOptions) FleetOnDemandOptions { return *v }).(FleetOnDemandOptionsOutput)
}

// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
func (o FleetOnDemandOptionsPtrOutput) AllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetOnDemandOptions) *string { return v.AllocationStrategy }).(pulumi.StringPtrOutput)
}

type FleetOnDemandOptionsArgs struct {
	// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
	AllocationStrategy *string `pulumi:"allocationStrategy"`
}

type FleetOnDemandOptionsArgsInput interface {
	pulumi.Input

	ToFleetOnDemandOptionsArgsOutput() FleetOnDemandOptionsArgsOutput
	ToFleetOnDemandOptionsArgsOutputWithContext(context.Context) FleetOnDemandOptionsArgsOutput
}

type FleetOnDemandOptionsArgsArgs struct {
	// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
	AllocationStrategy pulumi.StringPtrInput `pulumi:"allocationStrategy"`
}

func (FleetOnDemandOptionsArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetOnDemandOptionsArgs)(nil)).Elem()
}

func (i FleetOnDemandOptionsArgsArgs) ToFleetOnDemandOptionsArgsOutput() FleetOnDemandOptionsArgsOutput {
	return i.ToFleetOnDemandOptionsArgsOutputWithContext(context.Background())
}

func (i FleetOnDemandOptionsArgsArgs) ToFleetOnDemandOptionsArgsOutputWithContext(ctx context.Context) FleetOnDemandOptionsArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetOnDemandOptionsArgsOutput)
}

func (i FleetOnDemandOptionsArgsArgs) ToFleetOnDemandOptionsArgsPtrOutput() FleetOnDemandOptionsArgsPtrOutput {
	return i.ToFleetOnDemandOptionsArgsPtrOutputWithContext(context.Background())
}

func (i FleetOnDemandOptionsArgsArgs) ToFleetOnDemandOptionsArgsPtrOutputWithContext(ctx context.Context) FleetOnDemandOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetOnDemandOptionsArgsOutput).ToFleetOnDemandOptionsArgsPtrOutputWithContext(ctx)
}

type FleetOnDemandOptionsArgsPtrInput interface {
	pulumi.Input

	ToFleetOnDemandOptionsArgsPtrOutput() FleetOnDemandOptionsArgsPtrOutput
	ToFleetOnDemandOptionsArgsPtrOutputWithContext(context.Context) FleetOnDemandOptionsArgsPtrOutput
}

type fleetOnDemandOptionsArgsPtrType FleetOnDemandOptionsArgsArgs

func FleetOnDemandOptionsArgsPtr(v *FleetOnDemandOptionsArgsArgs) FleetOnDemandOptionsArgsPtrInput {
	return (*fleetOnDemandOptionsArgsPtrType)(v)
}

func (*fleetOnDemandOptionsArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetOnDemandOptionsArgs)(nil)).Elem()
}

func (i *fleetOnDemandOptionsArgsPtrType) ToFleetOnDemandOptionsArgsPtrOutput() FleetOnDemandOptionsArgsPtrOutput {
	return i.ToFleetOnDemandOptionsArgsPtrOutputWithContext(context.Background())
}

func (i *fleetOnDemandOptionsArgsPtrType) ToFleetOnDemandOptionsArgsPtrOutputWithContext(ctx context.Context) FleetOnDemandOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetOnDemandOptionsArgsPtrOutput)
}

type FleetOnDemandOptionsArgsOutput struct{ *pulumi.OutputState }

func (FleetOnDemandOptionsArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetOnDemandOptionsArgs)(nil)).Elem()
}

func (o FleetOnDemandOptionsArgsOutput) ToFleetOnDemandOptionsArgsOutput() FleetOnDemandOptionsArgsOutput {
	return o
}

func (o FleetOnDemandOptionsArgsOutput) ToFleetOnDemandOptionsArgsOutputWithContext(ctx context.Context) FleetOnDemandOptionsArgsOutput {
	return o
}

func (o FleetOnDemandOptionsArgsOutput) ToFleetOnDemandOptionsArgsPtrOutput() FleetOnDemandOptionsArgsPtrOutput {
	return o.ToFleetOnDemandOptionsArgsPtrOutputWithContext(context.Background())
}

func (o FleetOnDemandOptionsArgsOutput) ToFleetOnDemandOptionsArgsPtrOutputWithContext(ctx context.Context) FleetOnDemandOptionsArgsPtrOutput {
	return o.ApplyT(func(v FleetOnDemandOptionsArgs) *FleetOnDemandOptionsArgs {
		return &v
	}).(FleetOnDemandOptionsArgsPtrOutput)
}

// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
func (o FleetOnDemandOptionsArgsOutput) AllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetOnDemandOptionsArgs) *string { return v.AllocationStrategy }).(pulumi.StringPtrOutput)
}

type FleetOnDemandOptionsArgsPtrOutput struct{ *pulumi.OutputState }

func (FleetOnDemandOptionsArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetOnDemandOptionsArgs)(nil)).Elem()
}

func (o FleetOnDemandOptionsArgsPtrOutput) ToFleetOnDemandOptionsArgsPtrOutput() FleetOnDemandOptionsArgsPtrOutput {
	return o
}

func (o FleetOnDemandOptionsArgsPtrOutput) ToFleetOnDemandOptionsArgsPtrOutputWithContext(ctx context.Context) FleetOnDemandOptionsArgsPtrOutput {
	return o
}

func (o FleetOnDemandOptionsArgsPtrOutput) Elem() FleetOnDemandOptionsArgsOutput {
	return o.ApplyT(func(v *FleetOnDemandOptionsArgs) FleetOnDemandOptionsArgs { return *v }).(FleetOnDemandOptionsArgsOutput)
}

// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
func (o FleetOnDemandOptionsArgsPtrOutput) AllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetOnDemandOptionsArgs) *string { return v.AllocationStrategy }).(pulumi.StringPtrOutput)
}

type FleetOnDemandOptionsState struct {
	// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
	AllocationStrategy *string `pulumi:"allocationStrategy"`
}

type FleetOnDemandOptionsStateInput interface {
	pulumi.Input

	ToFleetOnDemandOptionsStateOutput() FleetOnDemandOptionsStateOutput
	ToFleetOnDemandOptionsStateOutputWithContext(context.Context) FleetOnDemandOptionsStateOutput
}

type FleetOnDemandOptionsStateArgs struct {
	// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
	AllocationStrategy pulumi.StringPtrInput `pulumi:"allocationStrategy"`
}

func (FleetOnDemandOptionsStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetOnDemandOptionsState)(nil)).Elem()
}

func (i FleetOnDemandOptionsStateArgs) ToFleetOnDemandOptionsStateOutput() FleetOnDemandOptionsStateOutput {
	return i.ToFleetOnDemandOptionsStateOutputWithContext(context.Background())
}

func (i FleetOnDemandOptionsStateArgs) ToFleetOnDemandOptionsStateOutputWithContext(ctx context.Context) FleetOnDemandOptionsStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetOnDemandOptionsStateOutput)
}

type FleetOnDemandOptionsStateOutput struct{ *pulumi.OutputState }

func (FleetOnDemandOptionsStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetOnDemandOptionsState)(nil)).Elem()
}

func (o FleetOnDemandOptionsStateOutput) ToFleetOnDemandOptionsStateOutput() FleetOnDemandOptionsStateOutput {
	return o
}

func (o FleetOnDemandOptionsStateOutput) ToFleetOnDemandOptionsStateOutputWithContext(ctx context.Context) FleetOnDemandOptionsStateOutput {
	return o
}

// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
func (o FleetOnDemandOptionsStateOutput) AllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetOnDemandOptionsState) *string { return v.AllocationStrategy }).(pulumi.StringPtrOutput)
}

type FleetSpotOptions struct {
	// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
	AllocationStrategy *string `pulumi:"allocationStrategy"`
	// Behavior when a Spot Instance is interrupted. Valid values: `hibernate`, `stop`, `terminate`. Default: `terminate`.
	InstanceInterruptionBehavior *string `pulumi:"instanceInterruptionBehavior"`
	// Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot `allocationStrategy` is set to `lowestPrice`. Default: `1`.
	InstancePoolsToUseCount *int `pulumi:"instancePoolsToUseCount"`
}

type FleetSpotOptionsInput interface {
	pulumi.Input

	ToFleetSpotOptionsOutput() FleetSpotOptionsOutput
	ToFleetSpotOptionsOutputWithContext(context.Context) FleetSpotOptionsOutput
}

type FleetSpotOptionsArgs struct {
	// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
	AllocationStrategy pulumi.StringPtrInput `pulumi:"allocationStrategy"`
	// Behavior when a Spot Instance is interrupted. Valid values: `hibernate`, `stop`, `terminate`. Default: `terminate`.
	InstanceInterruptionBehavior pulumi.StringPtrInput `pulumi:"instanceInterruptionBehavior"`
	// Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot `allocationStrategy` is set to `lowestPrice`. Default: `1`.
	InstancePoolsToUseCount pulumi.IntPtrInput `pulumi:"instancePoolsToUseCount"`
}

func (FleetSpotOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetSpotOptions)(nil)).Elem()
}

func (i FleetSpotOptionsArgs) ToFleetSpotOptionsOutput() FleetSpotOptionsOutput {
	return i.ToFleetSpotOptionsOutputWithContext(context.Background())
}

func (i FleetSpotOptionsArgs) ToFleetSpotOptionsOutputWithContext(ctx context.Context) FleetSpotOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetSpotOptionsOutput)
}

func (i FleetSpotOptionsArgs) ToFleetSpotOptionsPtrOutput() FleetSpotOptionsPtrOutput {
	return i.ToFleetSpotOptionsPtrOutputWithContext(context.Background())
}

func (i FleetSpotOptionsArgs) ToFleetSpotOptionsPtrOutputWithContext(ctx context.Context) FleetSpotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetSpotOptionsOutput).ToFleetSpotOptionsPtrOutputWithContext(ctx)
}

type FleetSpotOptionsPtrInput interface {
	pulumi.Input

	ToFleetSpotOptionsPtrOutput() FleetSpotOptionsPtrOutput
	ToFleetSpotOptionsPtrOutputWithContext(context.Context) FleetSpotOptionsPtrOutput
}

type fleetSpotOptionsPtrType FleetSpotOptionsArgs

func FleetSpotOptionsPtr(v *FleetSpotOptionsArgs) FleetSpotOptionsPtrInput {
	return (*fleetSpotOptionsPtrType)(v)
}

func (*fleetSpotOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetSpotOptions)(nil)).Elem()
}

func (i *fleetSpotOptionsPtrType) ToFleetSpotOptionsPtrOutput() FleetSpotOptionsPtrOutput {
	return i.ToFleetSpotOptionsPtrOutputWithContext(context.Background())
}

func (i *fleetSpotOptionsPtrType) ToFleetSpotOptionsPtrOutputWithContext(ctx context.Context) FleetSpotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetSpotOptionsPtrOutput)
}

type FleetSpotOptionsOutput struct{ *pulumi.OutputState }

func (FleetSpotOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetSpotOptions)(nil)).Elem()
}

func (o FleetSpotOptionsOutput) ToFleetSpotOptionsOutput() FleetSpotOptionsOutput {
	return o
}

func (o FleetSpotOptionsOutput) ToFleetSpotOptionsOutputWithContext(ctx context.Context) FleetSpotOptionsOutput {
	return o
}

func (o FleetSpotOptionsOutput) ToFleetSpotOptionsPtrOutput() FleetSpotOptionsPtrOutput {
	return o.ToFleetSpotOptionsPtrOutputWithContext(context.Background())
}

func (o FleetSpotOptionsOutput) ToFleetSpotOptionsPtrOutputWithContext(ctx context.Context) FleetSpotOptionsPtrOutput {
	return o.ApplyT(func(v FleetSpotOptions) *FleetSpotOptions {
		return &v
	}).(FleetSpotOptionsPtrOutput)
}

// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
func (o FleetSpotOptionsOutput) AllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetSpotOptions) *string { return v.AllocationStrategy }).(pulumi.StringPtrOutput)
}

// Behavior when a Spot Instance is interrupted. Valid values: `hibernate`, `stop`, `terminate`. Default: `terminate`.
func (o FleetSpotOptionsOutput) InstanceInterruptionBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetSpotOptions) *string { return v.InstanceInterruptionBehavior }).(pulumi.StringPtrOutput)
}

// Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot `allocationStrategy` is set to `lowestPrice`. Default: `1`.
func (o FleetSpotOptionsOutput) InstancePoolsToUseCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetSpotOptions) *int { return v.InstancePoolsToUseCount }).(pulumi.IntPtrOutput)
}

type FleetSpotOptionsPtrOutput struct{ *pulumi.OutputState }

func (FleetSpotOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetSpotOptions)(nil)).Elem()
}

func (o FleetSpotOptionsPtrOutput) ToFleetSpotOptionsPtrOutput() FleetSpotOptionsPtrOutput {
	return o
}

func (o FleetSpotOptionsPtrOutput) ToFleetSpotOptionsPtrOutputWithContext(ctx context.Context) FleetSpotOptionsPtrOutput {
	return o
}

func (o FleetSpotOptionsPtrOutput) Elem() FleetSpotOptionsOutput {
	return o.ApplyT(func(v *FleetSpotOptions) FleetSpotOptions { return *v }).(FleetSpotOptionsOutput)
}

// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
func (o FleetSpotOptionsPtrOutput) AllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetSpotOptions) *string { return v.AllocationStrategy }).(pulumi.StringPtrOutput)
}

// Behavior when a Spot Instance is interrupted. Valid values: `hibernate`, `stop`, `terminate`. Default: `terminate`.
func (o FleetSpotOptionsPtrOutput) InstanceInterruptionBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetSpotOptions) *string { return v.InstanceInterruptionBehavior }).(pulumi.StringPtrOutput)
}

// Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot `allocationStrategy` is set to `lowestPrice`. Default: `1`.
func (o FleetSpotOptionsPtrOutput) InstancePoolsToUseCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetSpotOptions) *int { return v.InstancePoolsToUseCount }).(pulumi.IntPtrOutput)
}

type FleetSpotOptionsArgs struct {
	// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
	AllocationStrategy *string `pulumi:"allocationStrategy"`
	// Behavior when a Spot Instance is interrupted. Valid values: `hibernate`, `stop`, `terminate`. Default: `terminate`.
	InstanceInterruptionBehavior *string `pulumi:"instanceInterruptionBehavior"`
	// Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot `allocationStrategy` is set to `lowestPrice`. Default: `1`.
	InstancePoolsToUseCount *int `pulumi:"instancePoolsToUseCount"`
}

type FleetSpotOptionsArgsInput interface {
	pulumi.Input

	ToFleetSpotOptionsArgsOutput() FleetSpotOptionsArgsOutput
	ToFleetSpotOptionsArgsOutputWithContext(context.Context) FleetSpotOptionsArgsOutput
}

type FleetSpotOptionsArgsArgs struct {
	// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
	AllocationStrategy pulumi.StringPtrInput `pulumi:"allocationStrategy"`
	// Behavior when a Spot Instance is interrupted. Valid values: `hibernate`, `stop`, `terminate`. Default: `terminate`.
	InstanceInterruptionBehavior pulumi.StringPtrInput `pulumi:"instanceInterruptionBehavior"`
	// Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot `allocationStrategy` is set to `lowestPrice`. Default: `1`.
	InstancePoolsToUseCount pulumi.IntPtrInput `pulumi:"instancePoolsToUseCount"`
}

func (FleetSpotOptionsArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetSpotOptionsArgs)(nil)).Elem()
}

func (i FleetSpotOptionsArgsArgs) ToFleetSpotOptionsArgsOutput() FleetSpotOptionsArgsOutput {
	return i.ToFleetSpotOptionsArgsOutputWithContext(context.Background())
}

func (i FleetSpotOptionsArgsArgs) ToFleetSpotOptionsArgsOutputWithContext(ctx context.Context) FleetSpotOptionsArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetSpotOptionsArgsOutput)
}

func (i FleetSpotOptionsArgsArgs) ToFleetSpotOptionsArgsPtrOutput() FleetSpotOptionsArgsPtrOutput {
	return i.ToFleetSpotOptionsArgsPtrOutputWithContext(context.Background())
}

func (i FleetSpotOptionsArgsArgs) ToFleetSpotOptionsArgsPtrOutputWithContext(ctx context.Context) FleetSpotOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetSpotOptionsArgsOutput).ToFleetSpotOptionsArgsPtrOutputWithContext(ctx)
}

type FleetSpotOptionsArgsPtrInput interface {
	pulumi.Input

	ToFleetSpotOptionsArgsPtrOutput() FleetSpotOptionsArgsPtrOutput
	ToFleetSpotOptionsArgsPtrOutputWithContext(context.Context) FleetSpotOptionsArgsPtrOutput
}

type fleetSpotOptionsArgsPtrType FleetSpotOptionsArgsArgs

func FleetSpotOptionsArgsPtr(v *FleetSpotOptionsArgsArgs) FleetSpotOptionsArgsPtrInput {
	return (*fleetSpotOptionsArgsPtrType)(v)
}

func (*fleetSpotOptionsArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetSpotOptionsArgs)(nil)).Elem()
}

func (i *fleetSpotOptionsArgsPtrType) ToFleetSpotOptionsArgsPtrOutput() FleetSpotOptionsArgsPtrOutput {
	return i.ToFleetSpotOptionsArgsPtrOutputWithContext(context.Background())
}

func (i *fleetSpotOptionsArgsPtrType) ToFleetSpotOptionsArgsPtrOutputWithContext(ctx context.Context) FleetSpotOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetSpotOptionsArgsPtrOutput)
}

type FleetSpotOptionsArgsOutput struct{ *pulumi.OutputState }

func (FleetSpotOptionsArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetSpotOptionsArgs)(nil)).Elem()
}

func (o FleetSpotOptionsArgsOutput) ToFleetSpotOptionsArgsOutput() FleetSpotOptionsArgsOutput {
	return o
}

func (o FleetSpotOptionsArgsOutput) ToFleetSpotOptionsArgsOutputWithContext(ctx context.Context) FleetSpotOptionsArgsOutput {
	return o
}

func (o FleetSpotOptionsArgsOutput) ToFleetSpotOptionsArgsPtrOutput() FleetSpotOptionsArgsPtrOutput {
	return o.ToFleetSpotOptionsArgsPtrOutputWithContext(context.Background())
}

func (o FleetSpotOptionsArgsOutput) ToFleetSpotOptionsArgsPtrOutputWithContext(ctx context.Context) FleetSpotOptionsArgsPtrOutput {
	return o.ApplyT(func(v FleetSpotOptionsArgs) *FleetSpotOptionsArgs {
		return &v
	}).(FleetSpotOptionsArgsPtrOutput)
}

// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
func (o FleetSpotOptionsArgsOutput) AllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetSpotOptionsArgs) *string { return v.AllocationStrategy }).(pulumi.StringPtrOutput)
}

// Behavior when a Spot Instance is interrupted. Valid values: `hibernate`, `stop`, `terminate`. Default: `terminate`.
func (o FleetSpotOptionsArgsOutput) InstanceInterruptionBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetSpotOptionsArgs) *string { return v.InstanceInterruptionBehavior }).(pulumi.StringPtrOutput)
}

// Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot `allocationStrategy` is set to `lowestPrice`. Default: `1`.
func (o FleetSpotOptionsArgsOutput) InstancePoolsToUseCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetSpotOptionsArgs) *int { return v.InstancePoolsToUseCount }).(pulumi.IntPtrOutput)
}

type FleetSpotOptionsArgsPtrOutput struct{ *pulumi.OutputState }

func (FleetSpotOptionsArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetSpotOptionsArgs)(nil)).Elem()
}

func (o FleetSpotOptionsArgsPtrOutput) ToFleetSpotOptionsArgsPtrOutput() FleetSpotOptionsArgsPtrOutput {
	return o
}

func (o FleetSpotOptionsArgsPtrOutput) ToFleetSpotOptionsArgsPtrOutputWithContext(ctx context.Context) FleetSpotOptionsArgsPtrOutput {
	return o
}

func (o FleetSpotOptionsArgsPtrOutput) Elem() FleetSpotOptionsArgsOutput {
	return o.ApplyT(func(v *FleetSpotOptionsArgs) FleetSpotOptionsArgs { return *v }).(FleetSpotOptionsArgsOutput)
}

// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
func (o FleetSpotOptionsArgsPtrOutput) AllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetSpotOptionsArgs) *string { return v.AllocationStrategy }).(pulumi.StringPtrOutput)
}

// Behavior when a Spot Instance is interrupted. Valid values: `hibernate`, `stop`, `terminate`. Default: `terminate`.
func (o FleetSpotOptionsArgsPtrOutput) InstanceInterruptionBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetSpotOptionsArgs) *string { return v.InstanceInterruptionBehavior }).(pulumi.StringPtrOutput)
}

// Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot `allocationStrategy` is set to `lowestPrice`. Default: `1`.
func (o FleetSpotOptionsArgsPtrOutput) InstancePoolsToUseCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetSpotOptionsArgs) *int { return v.InstancePoolsToUseCount }).(pulumi.IntPtrOutput)
}

type FleetSpotOptionsState struct {
	// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
	AllocationStrategy *string `pulumi:"allocationStrategy"`
	// Behavior when a Spot Instance is interrupted. Valid values: `hibernate`, `stop`, `terminate`. Default: `terminate`.
	InstanceInterruptionBehavior *string `pulumi:"instanceInterruptionBehavior"`
	// Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot `allocationStrategy` is set to `lowestPrice`. Default: `1`.
	InstancePoolsToUseCount *int `pulumi:"instancePoolsToUseCount"`
}

type FleetSpotOptionsStateInput interface {
	pulumi.Input

	ToFleetSpotOptionsStateOutput() FleetSpotOptionsStateOutput
	ToFleetSpotOptionsStateOutputWithContext(context.Context) FleetSpotOptionsStateOutput
}

type FleetSpotOptionsStateArgs struct {
	// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
	AllocationStrategy pulumi.StringPtrInput `pulumi:"allocationStrategy"`
	// Behavior when a Spot Instance is interrupted. Valid values: `hibernate`, `stop`, `terminate`. Default: `terminate`.
	InstanceInterruptionBehavior pulumi.StringPtrInput `pulumi:"instanceInterruptionBehavior"`
	// Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot `allocationStrategy` is set to `lowestPrice`. Default: `1`.
	InstancePoolsToUseCount pulumi.IntPtrInput `pulumi:"instancePoolsToUseCount"`
}

func (FleetSpotOptionsStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetSpotOptionsState)(nil)).Elem()
}

func (i FleetSpotOptionsStateArgs) ToFleetSpotOptionsStateOutput() FleetSpotOptionsStateOutput {
	return i.ToFleetSpotOptionsStateOutputWithContext(context.Background())
}

func (i FleetSpotOptionsStateArgs) ToFleetSpotOptionsStateOutputWithContext(ctx context.Context) FleetSpotOptionsStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetSpotOptionsStateOutput)
}

type FleetSpotOptionsStateOutput struct{ *pulumi.OutputState }

func (FleetSpotOptionsStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetSpotOptionsState)(nil)).Elem()
}

func (o FleetSpotOptionsStateOutput) ToFleetSpotOptionsStateOutput() FleetSpotOptionsStateOutput {
	return o
}

func (o FleetSpotOptionsStateOutput) ToFleetSpotOptionsStateOutputWithContext(ctx context.Context) FleetSpotOptionsStateOutput {
	return o
}

// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
func (o FleetSpotOptionsStateOutput) AllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetSpotOptionsState) *string { return v.AllocationStrategy }).(pulumi.StringPtrOutput)
}

// Behavior when a Spot Instance is interrupted. Valid values: `hibernate`, `stop`, `terminate`. Default: `terminate`.
func (o FleetSpotOptionsStateOutput) InstanceInterruptionBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetSpotOptionsState) *string { return v.InstanceInterruptionBehavior }).(pulumi.StringPtrOutput)
}

// Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot `allocationStrategy` is set to `lowestPrice`. Default: `1`.
func (o FleetSpotOptionsStateOutput) InstancePoolsToUseCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetSpotOptionsState) *int { return v.InstancePoolsToUseCount }).(pulumi.IntPtrOutput)
}

type FleetTargetCapacitySpecification struct {
	// Default target capacity type. Valid values: `on-demand`, `spot`.
	DefaultTargetCapacityType string `pulumi:"defaultTargetCapacityType"`
	// The number of On-Demand units to request.
	OnDemandTargetCapacity *int `pulumi:"onDemandTargetCapacity"`
	// The number of Spot units to request.
	SpotTargetCapacity *int `pulumi:"spotTargetCapacity"`
	// The number of units to request, filled using `defaultTargetCapacityType`.
	TotalTargetCapacity int `pulumi:"totalTargetCapacity"`
}

type FleetTargetCapacitySpecificationInput interface {
	pulumi.Input

	ToFleetTargetCapacitySpecificationOutput() FleetTargetCapacitySpecificationOutput
	ToFleetTargetCapacitySpecificationOutputWithContext(context.Context) FleetTargetCapacitySpecificationOutput
}

type FleetTargetCapacitySpecificationArgs struct {
	// Default target capacity type. Valid values: `on-demand`, `spot`.
	DefaultTargetCapacityType pulumi.StringInput `pulumi:"defaultTargetCapacityType"`
	// The number of On-Demand units to request.
	OnDemandTargetCapacity pulumi.IntPtrInput `pulumi:"onDemandTargetCapacity"`
	// The number of Spot units to request.
	SpotTargetCapacity pulumi.IntPtrInput `pulumi:"spotTargetCapacity"`
	// The number of units to request, filled using `defaultTargetCapacityType`.
	TotalTargetCapacity pulumi.IntInput `pulumi:"totalTargetCapacity"`
}

func (FleetTargetCapacitySpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetTargetCapacitySpecification)(nil)).Elem()
}

func (i FleetTargetCapacitySpecificationArgs) ToFleetTargetCapacitySpecificationOutput() FleetTargetCapacitySpecificationOutput {
	return i.ToFleetTargetCapacitySpecificationOutputWithContext(context.Background())
}

func (i FleetTargetCapacitySpecificationArgs) ToFleetTargetCapacitySpecificationOutputWithContext(ctx context.Context) FleetTargetCapacitySpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetTargetCapacitySpecificationOutput)
}

func (i FleetTargetCapacitySpecificationArgs) ToFleetTargetCapacitySpecificationPtrOutput() FleetTargetCapacitySpecificationPtrOutput {
	return i.ToFleetTargetCapacitySpecificationPtrOutputWithContext(context.Background())
}

func (i FleetTargetCapacitySpecificationArgs) ToFleetTargetCapacitySpecificationPtrOutputWithContext(ctx context.Context) FleetTargetCapacitySpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetTargetCapacitySpecificationOutput).ToFleetTargetCapacitySpecificationPtrOutputWithContext(ctx)
}

type FleetTargetCapacitySpecificationPtrInput interface {
	pulumi.Input

	ToFleetTargetCapacitySpecificationPtrOutput() FleetTargetCapacitySpecificationPtrOutput
	ToFleetTargetCapacitySpecificationPtrOutputWithContext(context.Context) FleetTargetCapacitySpecificationPtrOutput
}

type fleetTargetCapacitySpecificationPtrType FleetTargetCapacitySpecificationArgs

func FleetTargetCapacitySpecificationPtr(v *FleetTargetCapacitySpecificationArgs) FleetTargetCapacitySpecificationPtrInput {
	return (*fleetTargetCapacitySpecificationPtrType)(v)
}

func (*fleetTargetCapacitySpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetTargetCapacitySpecification)(nil)).Elem()
}

func (i *fleetTargetCapacitySpecificationPtrType) ToFleetTargetCapacitySpecificationPtrOutput() FleetTargetCapacitySpecificationPtrOutput {
	return i.ToFleetTargetCapacitySpecificationPtrOutputWithContext(context.Background())
}

func (i *fleetTargetCapacitySpecificationPtrType) ToFleetTargetCapacitySpecificationPtrOutputWithContext(ctx context.Context) FleetTargetCapacitySpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetTargetCapacitySpecificationPtrOutput)
}

type FleetTargetCapacitySpecificationOutput struct{ *pulumi.OutputState }

func (FleetTargetCapacitySpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetTargetCapacitySpecification)(nil)).Elem()
}

func (o FleetTargetCapacitySpecificationOutput) ToFleetTargetCapacitySpecificationOutput() FleetTargetCapacitySpecificationOutput {
	return o
}

func (o FleetTargetCapacitySpecificationOutput) ToFleetTargetCapacitySpecificationOutputWithContext(ctx context.Context) FleetTargetCapacitySpecificationOutput {
	return o
}

func (o FleetTargetCapacitySpecificationOutput) ToFleetTargetCapacitySpecificationPtrOutput() FleetTargetCapacitySpecificationPtrOutput {
	return o.ToFleetTargetCapacitySpecificationPtrOutputWithContext(context.Background())
}

func (o FleetTargetCapacitySpecificationOutput) ToFleetTargetCapacitySpecificationPtrOutputWithContext(ctx context.Context) FleetTargetCapacitySpecificationPtrOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecification) *FleetTargetCapacitySpecification {
		return &v
	}).(FleetTargetCapacitySpecificationPtrOutput)
}

// Default target capacity type. Valid values: `on-demand`, `spot`.
func (o FleetTargetCapacitySpecificationOutput) DefaultTargetCapacityType() pulumi.StringOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecification) string { return v.DefaultTargetCapacityType }).(pulumi.StringOutput)
}

// The number of On-Demand units to request.
func (o FleetTargetCapacitySpecificationOutput) OnDemandTargetCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecification) *int { return v.OnDemandTargetCapacity }).(pulumi.IntPtrOutput)
}

// The number of Spot units to request.
func (o FleetTargetCapacitySpecificationOutput) SpotTargetCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecification) *int { return v.SpotTargetCapacity }).(pulumi.IntPtrOutput)
}

// The number of units to request, filled using `defaultTargetCapacityType`.
func (o FleetTargetCapacitySpecificationOutput) TotalTargetCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecification) int { return v.TotalTargetCapacity }).(pulumi.IntOutput)
}

type FleetTargetCapacitySpecificationPtrOutput struct{ *pulumi.OutputState }

func (FleetTargetCapacitySpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetTargetCapacitySpecification)(nil)).Elem()
}

func (o FleetTargetCapacitySpecificationPtrOutput) ToFleetTargetCapacitySpecificationPtrOutput() FleetTargetCapacitySpecificationPtrOutput {
	return o
}

func (o FleetTargetCapacitySpecificationPtrOutput) ToFleetTargetCapacitySpecificationPtrOutputWithContext(ctx context.Context) FleetTargetCapacitySpecificationPtrOutput {
	return o
}

func (o FleetTargetCapacitySpecificationPtrOutput) Elem() FleetTargetCapacitySpecificationOutput {
	return o.ApplyT(func(v *FleetTargetCapacitySpecification) FleetTargetCapacitySpecification { return *v }).(FleetTargetCapacitySpecificationOutput)
}

// Default target capacity type. Valid values: `on-demand`, `spot`.
func (o FleetTargetCapacitySpecificationPtrOutput) DefaultTargetCapacityType() pulumi.StringOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecification) string { return v.DefaultTargetCapacityType }).(pulumi.StringOutput)
}

// The number of On-Demand units to request.
func (o FleetTargetCapacitySpecificationPtrOutput) OnDemandTargetCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecification) *int { return v.OnDemandTargetCapacity }).(pulumi.IntPtrOutput)
}

// The number of Spot units to request.
func (o FleetTargetCapacitySpecificationPtrOutput) SpotTargetCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecification) *int { return v.SpotTargetCapacity }).(pulumi.IntPtrOutput)
}

// The number of units to request, filled using `defaultTargetCapacityType`.
func (o FleetTargetCapacitySpecificationPtrOutput) TotalTargetCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecification) int { return v.TotalTargetCapacity }).(pulumi.IntOutput)
}

type FleetTargetCapacitySpecificationArgs struct {
	// Default target capacity type. Valid values: `on-demand`, `spot`.
	DefaultTargetCapacityType string `pulumi:"defaultTargetCapacityType"`
	// The number of On-Demand units to request.
	OnDemandTargetCapacity *int `pulumi:"onDemandTargetCapacity"`
	// The number of Spot units to request.
	SpotTargetCapacity *int `pulumi:"spotTargetCapacity"`
	// The number of units to request, filled using `defaultTargetCapacityType`.
	TotalTargetCapacity int `pulumi:"totalTargetCapacity"`
}

type FleetTargetCapacitySpecificationArgsInput interface {
	pulumi.Input

	ToFleetTargetCapacitySpecificationArgsOutput() FleetTargetCapacitySpecificationArgsOutput
	ToFleetTargetCapacitySpecificationArgsOutputWithContext(context.Context) FleetTargetCapacitySpecificationArgsOutput
}

type FleetTargetCapacitySpecificationArgsArgs struct {
	// Default target capacity type. Valid values: `on-demand`, `spot`.
	DefaultTargetCapacityType pulumi.StringInput `pulumi:"defaultTargetCapacityType"`
	// The number of On-Demand units to request.
	OnDemandTargetCapacity pulumi.IntPtrInput `pulumi:"onDemandTargetCapacity"`
	// The number of Spot units to request.
	SpotTargetCapacity pulumi.IntPtrInput `pulumi:"spotTargetCapacity"`
	// The number of units to request, filled using `defaultTargetCapacityType`.
	TotalTargetCapacity pulumi.IntInput `pulumi:"totalTargetCapacity"`
}

func (FleetTargetCapacitySpecificationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetTargetCapacitySpecificationArgs)(nil)).Elem()
}

func (i FleetTargetCapacitySpecificationArgsArgs) ToFleetTargetCapacitySpecificationArgsOutput() FleetTargetCapacitySpecificationArgsOutput {
	return i.ToFleetTargetCapacitySpecificationArgsOutputWithContext(context.Background())
}

func (i FleetTargetCapacitySpecificationArgsArgs) ToFleetTargetCapacitySpecificationArgsOutputWithContext(ctx context.Context) FleetTargetCapacitySpecificationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetTargetCapacitySpecificationArgsOutput)
}

func (i FleetTargetCapacitySpecificationArgsArgs) ToFleetTargetCapacitySpecificationArgsPtrOutput() FleetTargetCapacitySpecificationArgsPtrOutput {
	return i.ToFleetTargetCapacitySpecificationArgsPtrOutputWithContext(context.Background())
}

func (i FleetTargetCapacitySpecificationArgsArgs) ToFleetTargetCapacitySpecificationArgsPtrOutputWithContext(ctx context.Context) FleetTargetCapacitySpecificationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetTargetCapacitySpecificationArgsOutput).ToFleetTargetCapacitySpecificationArgsPtrOutputWithContext(ctx)
}

type FleetTargetCapacitySpecificationArgsPtrInput interface {
	pulumi.Input

	ToFleetTargetCapacitySpecificationArgsPtrOutput() FleetTargetCapacitySpecificationArgsPtrOutput
	ToFleetTargetCapacitySpecificationArgsPtrOutputWithContext(context.Context) FleetTargetCapacitySpecificationArgsPtrOutput
}

type fleetTargetCapacitySpecificationArgsPtrType FleetTargetCapacitySpecificationArgsArgs

func FleetTargetCapacitySpecificationArgsPtr(v *FleetTargetCapacitySpecificationArgsArgs) FleetTargetCapacitySpecificationArgsPtrInput {
	return (*fleetTargetCapacitySpecificationArgsPtrType)(v)
}

func (*fleetTargetCapacitySpecificationArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetTargetCapacitySpecificationArgs)(nil)).Elem()
}

func (i *fleetTargetCapacitySpecificationArgsPtrType) ToFleetTargetCapacitySpecificationArgsPtrOutput() FleetTargetCapacitySpecificationArgsPtrOutput {
	return i.ToFleetTargetCapacitySpecificationArgsPtrOutputWithContext(context.Background())
}

func (i *fleetTargetCapacitySpecificationArgsPtrType) ToFleetTargetCapacitySpecificationArgsPtrOutputWithContext(ctx context.Context) FleetTargetCapacitySpecificationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetTargetCapacitySpecificationArgsPtrOutput)
}

type FleetTargetCapacitySpecificationArgsOutput struct{ *pulumi.OutputState }

func (FleetTargetCapacitySpecificationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetTargetCapacitySpecificationArgs)(nil)).Elem()
}

func (o FleetTargetCapacitySpecificationArgsOutput) ToFleetTargetCapacitySpecificationArgsOutput() FleetTargetCapacitySpecificationArgsOutput {
	return o
}

func (o FleetTargetCapacitySpecificationArgsOutput) ToFleetTargetCapacitySpecificationArgsOutputWithContext(ctx context.Context) FleetTargetCapacitySpecificationArgsOutput {
	return o
}

func (o FleetTargetCapacitySpecificationArgsOutput) ToFleetTargetCapacitySpecificationArgsPtrOutput() FleetTargetCapacitySpecificationArgsPtrOutput {
	return o.ToFleetTargetCapacitySpecificationArgsPtrOutputWithContext(context.Background())
}

func (o FleetTargetCapacitySpecificationArgsOutput) ToFleetTargetCapacitySpecificationArgsPtrOutputWithContext(ctx context.Context) FleetTargetCapacitySpecificationArgsPtrOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecificationArgs) *FleetTargetCapacitySpecificationArgs {
		return &v
	}).(FleetTargetCapacitySpecificationArgsPtrOutput)
}

// Default target capacity type. Valid values: `on-demand`, `spot`.
func (o FleetTargetCapacitySpecificationArgsOutput) DefaultTargetCapacityType() pulumi.StringOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecificationArgs) string { return v.DefaultTargetCapacityType }).(pulumi.StringOutput)
}

// The number of On-Demand units to request.
func (o FleetTargetCapacitySpecificationArgsOutput) OnDemandTargetCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecificationArgs) *int { return v.OnDemandTargetCapacity }).(pulumi.IntPtrOutput)
}

// The number of Spot units to request.
func (o FleetTargetCapacitySpecificationArgsOutput) SpotTargetCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecificationArgs) *int { return v.SpotTargetCapacity }).(pulumi.IntPtrOutput)
}

// The number of units to request, filled using `defaultTargetCapacityType`.
func (o FleetTargetCapacitySpecificationArgsOutput) TotalTargetCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecificationArgs) int { return v.TotalTargetCapacity }).(pulumi.IntOutput)
}

type FleetTargetCapacitySpecificationArgsPtrOutput struct{ *pulumi.OutputState }

func (FleetTargetCapacitySpecificationArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetTargetCapacitySpecificationArgs)(nil)).Elem()
}

func (o FleetTargetCapacitySpecificationArgsPtrOutput) ToFleetTargetCapacitySpecificationArgsPtrOutput() FleetTargetCapacitySpecificationArgsPtrOutput {
	return o
}

func (o FleetTargetCapacitySpecificationArgsPtrOutput) ToFleetTargetCapacitySpecificationArgsPtrOutputWithContext(ctx context.Context) FleetTargetCapacitySpecificationArgsPtrOutput {
	return o
}

func (o FleetTargetCapacitySpecificationArgsPtrOutput) Elem() FleetTargetCapacitySpecificationArgsOutput {
	return o.ApplyT(func(v *FleetTargetCapacitySpecificationArgs) FleetTargetCapacitySpecificationArgs { return *v }).(FleetTargetCapacitySpecificationArgsOutput)
}

// Default target capacity type. Valid values: `on-demand`, `spot`.
func (o FleetTargetCapacitySpecificationArgsPtrOutput) DefaultTargetCapacityType() pulumi.StringOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecificationArgs) string { return v.DefaultTargetCapacityType }).(pulumi.StringOutput)
}

// The number of On-Demand units to request.
func (o FleetTargetCapacitySpecificationArgsPtrOutput) OnDemandTargetCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecificationArgs) *int { return v.OnDemandTargetCapacity }).(pulumi.IntPtrOutput)
}

// The number of Spot units to request.
func (o FleetTargetCapacitySpecificationArgsPtrOutput) SpotTargetCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecificationArgs) *int { return v.SpotTargetCapacity }).(pulumi.IntPtrOutput)
}

// The number of units to request, filled using `defaultTargetCapacityType`.
func (o FleetTargetCapacitySpecificationArgsPtrOutput) TotalTargetCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecificationArgs) int { return v.TotalTargetCapacity }).(pulumi.IntOutput)
}

type FleetTargetCapacitySpecificationState struct {
	// Default target capacity type. Valid values: `on-demand`, `spot`.
	DefaultTargetCapacityType string `pulumi:"defaultTargetCapacityType"`
	// The number of On-Demand units to request.
	OnDemandTargetCapacity *int `pulumi:"onDemandTargetCapacity"`
	// The number of Spot units to request.
	SpotTargetCapacity *int `pulumi:"spotTargetCapacity"`
	// The number of units to request, filled using `defaultTargetCapacityType`.
	TotalTargetCapacity int `pulumi:"totalTargetCapacity"`
}

type FleetTargetCapacitySpecificationStateInput interface {
	pulumi.Input

	ToFleetTargetCapacitySpecificationStateOutput() FleetTargetCapacitySpecificationStateOutput
	ToFleetTargetCapacitySpecificationStateOutputWithContext(context.Context) FleetTargetCapacitySpecificationStateOutput
}

type FleetTargetCapacitySpecificationStateArgs struct {
	// Default target capacity type. Valid values: `on-demand`, `spot`.
	DefaultTargetCapacityType pulumi.StringInput `pulumi:"defaultTargetCapacityType"`
	// The number of On-Demand units to request.
	OnDemandTargetCapacity pulumi.IntPtrInput `pulumi:"onDemandTargetCapacity"`
	// The number of Spot units to request.
	SpotTargetCapacity pulumi.IntPtrInput `pulumi:"spotTargetCapacity"`
	// The number of units to request, filled using `defaultTargetCapacityType`.
	TotalTargetCapacity pulumi.IntInput `pulumi:"totalTargetCapacity"`
}

func (FleetTargetCapacitySpecificationStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetTargetCapacitySpecificationState)(nil)).Elem()
}

func (i FleetTargetCapacitySpecificationStateArgs) ToFleetTargetCapacitySpecificationStateOutput() FleetTargetCapacitySpecificationStateOutput {
	return i.ToFleetTargetCapacitySpecificationStateOutputWithContext(context.Background())
}

func (i FleetTargetCapacitySpecificationStateArgs) ToFleetTargetCapacitySpecificationStateOutputWithContext(ctx context.Context) FleetTargetCapacitySpecificationStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetTargetCapacitySpecificationStateOutput)
}

type FleetTargetCapacitySpecificationStateOutput struct{ *pulumi.OutputState }

func (FleetTargetCapacitySpecificationStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetTargetCapacitySpecificationState)(nil)).Elem()
}

func (o FleetTargetCapacitySpecificationStateOutput) ToFleetTargetCapacitySpecificationStateOutput() FleetTargetCapacitySpecificationStateOutput {
	return o
}

func (o FleetTargetCapacitySpecificationStateOutput) ToFleetTargetCapacitySpecificationStateOutputWithContext(ctx context.Context) FleetTargetCapacitySpecificationStateOutput {
	return o
}

// Default target capacity type. Valid values: `on-demand`, `spot`.
func (o FleetTargetCapacitySpecificationStateOutput) DefaultTargetCapacityType() pulumi.StringOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecificationState) string { return v.DefaultTargetCapacityType }).(pulumi.StringOutput)
}

// The number of On-Demand units to request.
func (o FleetTargetCapacitySpecificationStateOutput) OnDemandTargetCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecificationState) *int { return v.OnDemandTargetCapacity }).(pulumi.IntPtrOutput)
}

// The number of Spot units to request.
func (o FleetTargetCapacitySpecificationStateOutput) SpotTargetCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecificationState) *int { return v.SpotTargetCapacity }).(pulumi.IntPtrOutput)
}

// The number of units to request, filled using `defaultTargetCapacityType`.
func (o FleetTargetCapacitySpecificationStateOutput) TotalTargetCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecificationState) int { return v.TotalTargetCapacity }).(pulumi.IntOutput)
}

type InstanceCreditSpecification struct {
	// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits *string `pulumi:"cpuCredits"`
}

type InstanceCreditSpecificationInput interface {
	pulumi.Input

	ToInstanceCreditSpecificationOutput() InstanceCreditSpecificationOutput
	ToInstanceCreditSpecificationOutputWithContext(context.Context) InstanceCreditSpecificationOutput
}

type InstanceCreditSpecificationArgs struct {
	// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits pulumi.StringPtrInput `pulumi:"cpuCredits"`
}

func (InstanceCreditSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceCreditSpecification)(nil)).Elem()
}

func (i InstanceCreditSpecificationArgs) ToInstanceCreditSpecificationOutput() InstanceCreditSpecificationOutput {
	return i.ToInstanceCreditSpecificationOutputWithContext(context.Background())
}

func (i InstanceCreditSpecificationArgs) ToInstanceCreditSpecificationOutputWithContext(ctx context.Context) InstanceCreditSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceCreditSpecificationOutput)
}

func (i InstanceCreditSpecificationArgs) ToInstanceCreditSpecificationPtrOutput() InstanceCreditSpecificationPtrOutput {
	return i.ToInstanceCreditSpecificationPtrOutputWithContext(context.Background())
}

func (i InstanceCreditSpecificationArgs) ToInstanceCreditSpecificationPtrOutputWithContext(ctx context.Context) InstanceCreditSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceCreditSpecificationOutput).ToInstanceCreditSpecificationPtrOutputWithContext(ctx)
}

type InstanceCreditSpecificationPtrInput interface {
	pulumi.Input

	ToInstanceCreditSpecificationPtrOutput() InstanceCreditSpecificationPtrOutput
	ToInstanceCreditSpecificationPtrOutputWithContext(context.Context) InstanceCreditSpecificationPtrOutput
}

type instanceCreditSpecificationPtrType InstanceCreditSpecificationArgs

func InstanceCreditSpecificationPtr(v *InstanceCreditSpecificationArgs) InstanceCreditSpecificationPtrInput {
	return (*instanceCreditSpecificationPtrType)(v)
}

func (*instanceCreditSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceCreditSpecification)(nil)).Elem()
}

func (i *instanceCreditSpecificationPtrType) ToInstanceCreditSpecificationPtrOutput() InstanceCreditSpecificationPtrOutput {
	return i.ToInstanceCreditSpecificationPtrOutputWithContext(context.Background())
}

func (i *instanceCreditSpecificationPtrType) ToInstanceCreditSpecificationPtrOutputWithContext(ctx context.Context) InstanceCreditSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceCreditSpecificationPtrOutput)
}

type InstanceCreditSpecificationOutput struct{ *pulumi.OutputState }

func (InstanceCreditSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceCreditSpecification)(nil)).Elem()
}

func (o InstanceCreditSpecificationOutput) ToInstanceCreditSpecificationOutput() InstanceCreditSpecificationOutput {
	return o
}

func (o InstanceCreditSpecificationOutput) ToInstanceCreditSpecificationOutputWithContext(ctx context.Context) InstanceCreditSpecificationOutput {
	return o
}

func (o InstanceCreditSpecificationOutput) ToInstanceCreditSpecificationPtrOutput() InstanceCreditSpecificationPtrOutput {
	return o.ToInstanceCreditSpecificationPtrOutputWithContext(context.Background())
}

func (o InstanceCreditSpecificationOutput) ToInstanceCreditSpecificationPtrOutputWithContext(ctx context.Context) InstanceCreditSpecificationPtrOutput {
	return o.ApplyT(func(v InstanceCreditSpecification) *InstanceCreditSpecification {
		return &v
	}).(InstanceCreditSpecificationPtrOutput)
}

// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
func (o InstanceCreditSpecificationOutput) CpuCredits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceCreditSpecification) *string { return v.CpuCredits }).(pulumi.StringPtrOutput)
}

type InstanceCreditSpecificationPtrOutput struct{ *pulumi.OutputState }

func (InstanceCreditSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceCreditSpecification)(nil)).Elem()
}

func (o InstanceCreditSpecificationPtrOutput) ToInstanceCreditSpecificationPtrOutput() InstanceCreditSpecificationPtrOutput {
	return o
}

func (o InstanceCreditSpecificationPtrOutput) ToInstanceCreditSpecificationPtrOutputWithContext(ctx context.Context) InstanceCreditSpecificationPtrOutput {
	return o
}

func (o InstanceCreditSpecificationPtrOutput) Elem() InstanceCreditSpecificationOutput {
	return o.ApplyT(func(v *InstanceCreditSpecification) InstanceCreditSpecification { return *v }).(InstanceCreditSpecificationOutput)
}

// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
func (o InstanceCreditSpecificationPtrOutput) CpuCredits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceCreditSpecification) *string { return v.CpuCredits }).(pulumi.StringPtrOutput)
}

type InstanceCreditSpecificationArgs struct {
	// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits *string `pulumi:"cpuCredits"`
}

type InstanceCreditSpecificationArgsInput interface {
	pulumi.Input

	ToInstanceCreditSpecificationArgsOutput() InstanceCreditSpecificationArgsOutput
	ToInstanceCreditSpecificationArgsOutputWithContext(context.Context) InstanceCreditSpecificationArgsOutput
}

type InstanceCreditSpecificationArgsArgs struct {
	// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits pulumi.StringPtrInput `pulumi:"cpuCredits"`
}

func (InstanceCreditSpecificationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceCreditSpecificationArgs)(nil)).Elem()
}

func (i InstanceCreditSpecificationArgsArgs) ToInstanceCreditSpecificationArgsOutput() InstanceCreditSpecificationArgsOutput {
	return i.ToInstanceCreditSpecificationArgsOutputWithContext(context.Background())
}

func (i InstanceCreditSpecificationArgsArgs) ToInstanceCreditSpecificationArgsOutputWithContext(ctx context.Context) InstanceCreditSpecificationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceCreditSpecificationArgsOutput)
}

func (i InstanceCreditSpecificationArgsArgs) ToInstanceCreditSpecificationArgsPtrOutput() InstanceCreditSpecificationArgsPtrOutput {
	return i.ToInstanceCreditSpecificationArgsPtrOutputWithContext(context.Background())
}

func (i InstanceCreditSpecificationArgsArgs) ToInstanceCreditSpecificationArgsPtrOutputWithContext(ctx context.Context) InstanceCreditSpecificationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceCreditSpecificationArgsOutput).ToInstanceCreditSpecificationArgsPtrOutputWithContext(ctx)
}

type InstanceCreditSpecificationArgsPtrInput interface {
	pulumi.Input

	ToInstanceCreditSpecificationArgsPtrOutput() InstanceCreditSpecificationArgsPtrOutput
	ToInstanceCreditSpecificationArgsPtrOutputWithContext(context.Context) InstanceCreditSpecificationArgsPtrOutput
}

type instanceCreditSpecificationArgsPtrType InstanceCreditSpecificationArgsArgs

func InstanceCreditSpecificationArgsPtr(v *InstanceCreditSpecificationArgsArgs) InstanceCreditSpecificationArgsPtrInput {
	return (*instanceCreditSpecificationArgsPtrType)(v)
}

func (*instanceCreditSpecificationArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceCreditSpecificationArgs)(nil)).Elem()
}

func (i *instanceCreditSpecificationArgsPtrType) ToInstanceCreditSpecificationArgsPtrOutput() InstanceCreditSpecificationArgsPtrOutput {
	return i.ToInstanceCreditSpecificationArgsPtrOutputWithContext(context.Background())
}

func (i *instanceCreditSpecificationArgsPtrType) ToInstanceCreditSpecificationArgsPtrOutputWithContext(ctx context.Context) InstanceCreditSpecificationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceCreditSpecificationArgsPtrOutput)
}

type InstanceCreditSpecificationArgsOutput struct{ *pulumi.OutputState }

func (InstanceCreditSpecificationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceCreditSpecificationArgs)(nil)).Elem()
}

func (o InstanceCreditSpecificationArgsOutput) ToInstanceCreditSpecificationArgsOutput() InstanceCreditSpecificationArgsOutput {
	return o
}

func (o InstanceCreditSpecificationArgsOutput) ToInstanceCreditSpecificationArgsOutputWithContext(ctx context.Context) InstanceCreditSpecificationArgsOutput {
	return o
}

func (o InstanceCreditSpecificationArgsOutput) ToInstanceCreditSpecificationArgsPtrOutput() InstanceCreditSpecificationArgsPtrOutput {
	return o.ToInstanceCreditSpecificationArgsPtrOutputWithContext(context.Background())
}

func (o InstanceCreditSpecificationArgsOutput) ToInstanceCreditSpecificationArgsPtrOutputWithContext(ctx context.Context) InstanceCreditSpecificationArgsPtrOutput {
	return o.ApplyT(func(v InstanceCreditSpecificationArgs) *InstanceCreditSpecificationArgs {
		return &v
	}).(InstanceCreditSpecificationArgsPtrOutput)
}

// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
func (o InstanceCreditSpecificationArgsOutput) CpuCredits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceCreditSpecificationArgs) *string { return v.CpuCredits }).(pulumi.StringPtrOutput)
}

type InstanceCreditSpecificationArgsPtrOutput struct{ *pulumi.OutputState }

func (InstanceCreditSpecificationArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceCreditSpecificationArgs)(nil)).Elem()
}

func (o InstanceCreditSpecificationArgsPtrOutput) ToInstanceCreditSpecificationArgsPtrOutput() InstanceCreditSpecificationArgsPtrOutput {
	return o
}

func (o InstanceCreditSpecificationArgsPtrOutput) ToInstanceCreditSpecificationArgsPtrOutputWithContext(ctx context.Context) InstanceCreditSpecificationArgsPtrOutput {
	return o
}

func (o InstanceCreditSpecificationArgsPtrOutput) Elem() InstanceCreditSpecificationArgsOutput {
	return o.ApplyT(func(v *InstanceCreditSpecificationArgs) InstanceCreditSpecificationArgs { return *v }).(InstanceCreditSpecificationArgsOutput)
}

// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
func (o InstanceCreditSpecificationArgsPtrOutput) CpuCredits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceCreditSpecificationArgs) *string { return v.CpuCredits }).(pulumi.StringPtrOutput)
}

type InstanceCreditSpecificationState struct {
	// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits *string `pulumi:"cpuCredits"`
}

type InstanceCreditSpecificationStateInput interface {
	pulumi.Input

	ToInstanceCreditSpecificationStateOutput() InstanceCreditSpecificationStateOutput
	ToInstanceCreditSpecificationStateOutputWithContext(context.Context) InstanceCreditSpecificationStateOutput
}

type InstanceCreditSpecificationStateArgs struct {
	// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits pulumi.StringPtrInput `pulumi:"cpuCredits"`
}

func (InstanceCreditSpecificationStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceCreditSpecificationState)(nil)).Elem()
}

func (i InstanceCreditSpecificationStateArgs) ToInstanceCreditSpecificationStateOutput() InstanceCreditSpecificationStateOutput {
	return i.ToInstanceCreditSpecificationStateOutputWithContext(context.Background())
}

func (i InstanceCreditSpecificationStateArgs) ToInstanceCreditSpecificationStateOutputWithContext(ctx context.Context) InstanceCreditSpecificationStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceCreditSpecificationStateOutput)
}

type InstanceCreditSpecificationStateOutput struct{ *pulumi.OutputState }

func (InstanceCreditSpecificationStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceCreditSpecificationState)(nil)).Elem()
}

func (o InstanceCreditSpecificationStateOutput) ToInstanceCreditSpecificationStateOutput() InstanceCreditSpecificationStateOutput {
	return o
}

func (o InstanceCreditSpecificationStateOutput) ToInstanceCreditSpecificationStateOutputWithContext(ctx context.Context) InstanceCreditSpecificationStateOutput {
	return o
}

// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
func (o InstanceCreditSpecificationStateOutput) CpuCredits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceCreditSpecificationState) *string { return v.CpuCredits }).(pulumi.StringPtrOutput)
}

type InstanceEbsBlockDevice struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The name of the device to mount.
	DeviceName string `pulumi:"deviceName"`
	// Enables [EBS
	// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
	Encrypted bool `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops int `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId string `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId string `pulumi:"snapshotId"`
	VolumeId   string `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize int `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`,
	// or `"io1"`. (Default: `"gp2"`).
	VolumeType string `pulumi:"volumeType"`
}

type InstanceEbsBlockDeviceInput interface {
	pulumi.Input

	ToInstanceEbsBlockDeviceOutput() InstanceEbsBlockDeviceOutput
	ToInstanceEbsBlockDeviceOutputWithContext(context.Context) InstanceEbsBlockDeviceOutput
}

type InstanceEbsBlockDeviceArgs struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The name of the device to mount.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Enables [EBS
	// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
	Encrypted pulumi.BoolInput `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops pulumi.IntInput `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	VolumeId   pulumi.StringInput `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`,
	// or `"io1"`. (Default: `"gp2"`).
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (InstanceEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEbsBlockDevice)(nil)).Elem()
}

func (i InstanceEbsBlockDeviceArgs) ToInstanceEbsBlockDeviceOutput() InstanceEbsBlockDeviceOutput {
	return i.ToInstanceEbsBlockDeviceOutputWithContext(context.Background())
}

func (i InstanceEbsBlockDeviceArgs) ToInstanceEbsBlockDeviceOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEbsBlockDeviceOutput)
}

type InstanceEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToInstanceEbsBlockDeviceArrayOutput() InstanceEbsBlockDeviceArrayOutput
	ToInstanceEbsBlockDeviceArrayOutputWithContext(context.Context) InstanceEbsBlockDeviceArrayOutput
}

type InstanceEbsBlockDeviceArray []InstanceEbsBlockDeviceInput

func (InstanceEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEbsBlockDevice)(nil)).Elem()
}

func (i InstanceEbsBlockDeviceArray) ToInstanceEbsBlockDeviceArrayOutput() InstanceEbsBlockDeviceArrayOutput {
	return i.ToInstanceEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i InstanceEbsBlockDeviceArray) ToInstanceEbsBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEbsBlockDeviceArrayOutput)
}

type InstanceEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (InstanceEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEbsBlockDevice)(nil)).Elem()
}

func (o InstanceEbsBlockDeviceOutput) ToInstanceEbsBlockDeviceOutput() InstanceEbsBlockDeviceOutput {
	return o
}

func (o InstanceEbsBlockDeviceOutput) ToInstanceEbsBlockDeviceOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceOutput {
	return o
}

// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o InstanceEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The name of the device to mount.
func (o InstanceEbsBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Enables [EBS
// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
func (o InstanceEbsBlockDeviceOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This must be set with a `volumeType` of `"io1"`.
func (o InstanceEbsBlockDeviceOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) int { return v.Iops }).(pulumi.IntOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o InstanceEbsBlockDeviceOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

// The Snapshot ID to mount.
func (o InstanceEbsBlockDeviceOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) string { return v.SnapshotId }).(pulumi.StringOutput)
}

func (o InstanceEbsBlockDeviceOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) string { return v.VolumeId }).(pulumi.StringOutput)
}

// The size of the volume in gibibytes (GiB).
func (o InstanceEbsBlockDeviceOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`,
// or `"io1"`. (Default: `"gp2"`).
func (o InstanceEbsBlockDeviceOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) string { return v.VolumeType }).(pulumi.StringOutput)
}

type InstanceEbsBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (InstanceEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEbsBlockDevice)(nil)).Elem()
}

func (o InstanceEbsBlockDeviceArrayOutput) ToInstanceEbsBlockDeviceArrayOutput() InstanceEbsBlockDeviceArrayOutput {
	return o
}

func (o InstanceEbsBlockDeviceArrayOutput) ToInstanceEbsBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceArrayOutput {
	return o
}

func (o InstanceEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) InstanceEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceEbsBlockDevice {
		return vs[0].([]InstanceEbsBlockDevice)[vs[1].(int)]
	}).(InstanceEbsBlockDeviceOutput)
}

type InstanceEbsBlockDeviceArgs struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The name of the device to mount.
	DeviceName string `pulumi:"deviceName"`
	// Enables [EBS
	// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
	Encrypted *bool `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops *int `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId *string `pulumi:"snapshotId"`
	VolumeId   *string `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`,
	// or `"io1"`. (Default: `"gp2"`).
	VolumeType *string `pulumi:"volumeType"`
}

type InstanceEbsBlockDeviceArgsInput interface {
	pulumi.Input

	ToInstanceEbsBlockDeviceArgsOutput() InstanceEbsBlockDeviceArgsOutput
	ToInstanceEbsBlockDeviceArgsOutputWithContext(context.Context) InstanceEbsBlockDeviceArgsOutput
}

type InstanceEbsBlockDeviceArgsArgs struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The name of the device to mount.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Enables [EBS
	// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	VolumeId   pulumi.StringPtrInput `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`,
	// or `"io1"`. (Default: `"gp2"`).
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (InstanceEbsBlockDeviceArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEbsBlockDeviceArgs)(nil)).Elem()
}

func (i InstanceEbsBlockDeviceArgsArgs) ToInstanceEbsBlockDeviceArgsOutput() InstanceEbsBlockDeviceArgsOutput {
	return i.ToInstanceEbsBlockDeviceArgsOutputWithContext(context.Background())
}

func (i InstanceEbsBlockDeviceArgsArgs) ToInstanceEbsBlockDeviceArgsOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEbsBlockDeviceArgsOutput)
}

type InstanceEbsBlockDeviceArgsArrayInput interface {
	pulumi.Input

	ToInstanceEbsBlockDeviceArgsArrayOutput() InstanceEbsBlockDeviceArgsArrayOutput
	ToInstanceEbsBlockDeviceArgsArrayOutputWithContext(context.Context) InstanceEbsBlockDeviceArgsArrayOutput
}

type InstanceEbsBlockDeviceArgsArray []InstanceEbsBlockDeviceArgsInput

func (InstanceEbsBlockDeviceArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEbsBlockDeviceArgs)(nil)).Elem()
}

func (i InstanceEbsBlockDeviceArgsArray) ToInstanceEbsBlockDeviceArgsArrayOutput() InstanceEbsBlockDeviceArgsArrayOutput {
	return i.ToInstanceEbsBlockDeviceArgsArrayOutputWithContext(context.Background())
}

func (i InstanceEbsBlockDeviceArgsArray) ToInstanceEbsBlockDeviceArgsArrayOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEbsBlockDeviceArgsArrayOutput)
}

type InstanceEbsBlockDeviceArgsOutput struct{ *pulumi.OutputState }

func (InstanceEbsBlockDeviceArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEbsBlockDeviceArgs)(nil)).Elem()
}

func (o InstanceEbsBlockDeviceArgsOutput) ToInstanceEbsBlockDeviceArgsOutput() InstanceEbsBlockDeviceArgsOutput {
	return o
}

func (o InstanceEbsBlockDeviceArgsOutput) ToInstanceEbsBlockDeviceArgsOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceArgsOutput {
	return o
}

// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o InstanceEbsBlockDeviceArgsOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDeviceArgs) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The name of the device to mount.
func (o InstanceEbsBlockDeviceArgsOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceEbsBlockDeviceArgs) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Enables [EBS
// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
func (o InstanceEbsBlockDeviceArgsOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDeviceArgs) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This must be set with a `volumeType` of `"io1"`.
func (o InstanceEbsBlockDeviceArgsOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDeviceArgs) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o InstanceEbsBlockDeviceArgsOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDeviceArgs) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The Snapshot ID to mount.
func (o InstanceEbsBlockDeviceArgsOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDeviceArgs) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

func (o InstanceEbsBlockDeviceArgsOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDeviceArgs) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gibibytes (GiB).
func (o InstanceEbsBlockDeviceArgsOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDeviceArgs) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`,
// or `"io1"`. (Default: `"gp2"`).
func (o InstanceEbsBlockDeviceArgsOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDeviceArgs) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type InstanceEbsBlockDeviceArgsArrayOutput struct{ *pulumi.OutputState }

func (InstanceEbsBlockDeviceArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEbsBlockDeviceArgs)(nil)).Elem()
}

func (o InstanceEbsBlockDeviceArgsArrayOutput) ToInstanceEbsBlockDeviceArgsArrayOutput() InstanceEbsBlockDeviceArgsArrayOutput {
	return o
}

func (o InstanceEbsBlockDeviceArgsArrayOutput) ToInstanceEbsBlockDeviceArgsArrayOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceArgsArrayOutput {
	return o
}

func (o InstanceEbsBlockDeviceArgsArrayOutput) Index(i pulumi.IntInput) InstanceEbsBlockDeviceArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceEbsBlockDeviceArgs {
		return vs[0].([]InstanceEbsBlockDeviceArgs)[vs[1].(int)]
	}).(InstanceEbsBlockDeviceArgsOutput)
}

type InstanceEbsBlockDeviceState struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The name of the device to mount.
	DeviceName string `pulumi:"deviceName"`
	// Enables [EBS
	// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
	Encrypted *bool `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops *int `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId *string `pulumi:"snapshotId"`
	VolumeId   *string `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`,
	// or `"io1"`. (Default: `"gp2"`).
	VolumeType *string `pulumi:"volumeType"`
}

type InstanceEbsBlockDeviceStateInput interface {
	pulumi.Input

	ToInstanceEbsBlockDeviceStateOutput() InstanceEbsBlockDeviceStateOutput
	ToInstanceEbsBlockDeviceStateOutputWithContext(context.Context) InstanceEbsBlockDeviceStateOutput
}

type InstanceEbsBlockDeviceStateArgs struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The name of the device to mount.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Enables [EBS
	// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	VolumeId   pulumi.StringPtrInput `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`,
	// or `"io1"`. (Default: `"gp2"`).
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (InstanceEbsBlockDeviceStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEbsBlockDeviceState)(nil)).Elem()
}

func (i InstanceEbsBlockDeviceStateArgs) ToInstanceEbsBlockDeviceStateOutput() InstanceEbsBlockDeviceStateOutput {
	return i.ToInstanceEbsBlockDeviceStateOutputWithContext(context.Background())
}

func (i InstanceEbsBlockDeviceStateArgs) ToInstanceEbsBlockDeviceStateOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEbsBlockDeviceStateOutput)
}

type InstanceEbsBlockDeviceStateArrayInput interface {
	pulumi.Input

	ToInstanceEbsBlockDeviceStateArrayOutput() InstanceEbsBlockDeviceStateArrayOutput
	ToInstanceEbsBlockDeviceStateArrayOutputWithContext(context.Context) InstanceEbsBlockDeviceStateArrayOutput
}

type InstanceEbsBlockDeviceStateArray []InstanceEbsBlockDeviceStateInput

func (InstanceEbsBlockDeviceStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEbsBlockDeviceState)(nil)).Elem()
}

func (i InstanceEbsBlockDeviceStateArray) ToInstanceEbsBlockDeviceStateArrayOutput() InstanceEbsBlockDeviceStateArrayOutput {
	return i.ToInstanceEbsBlockDeviceStateArrayOutputWithContext(context.Background())
}

func (i InstanceEbsBlockDeviceStateArray) ToInstanceEbsBlockDeviceStateArrayOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEbsBlockDeviceStateArrayOutput)
}

type InstanceEbsBlockDeviceStateOutput struct{ *pulumi.OutputState }

func (InstanceEbsBlockDeviceStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEbsBlockDeviceState)(nil)).Elem()
}

func (o InstanceEbsBlockDeviceStateOutput) ToInstanceEbsBlockDeviceStateOutput() InstanceEbsBlockDeviceStateOutput {
	return o
}

func (o InstanceEbsBlockDeviceStateOutput) ToInstanceEbsBlockDeviceStateOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceStateOutput {
	return o
}

// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o InstanceEbsBlockDeviceStateOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDeviceState) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The name of the device to mount.
func (o InstanceEbsBlockDeviceStateOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceEbsBlockDeviceState) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Enables [EBS
// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
func (o InstanceEbsBlockDeviceStateOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDeviceState) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This must be set with a `volumeType` of `"io1"`.
func (o InstanceEbsBlockDeviceStateOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDeviceState) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o InstanceEbsBlockDeviceStateOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDeviceState) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The Snapshot ID to mount.
func (o InstanceEbsBlockDeviceStateOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDeviceState) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

func (o InstanceEbsBlockDeviceStateOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDeviceState) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gibibytes (GiB).
func (o InstanceEbsBlockDeviceStateOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDeviceState) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`,
// or `"io1"`. (Default: `"gp2"`).
func (o InstanceEbsBlockDeviceStateOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDeviceState) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type InstanceEbsBlockDeviceStateArrayOutput struct{ *pulumi.OutputState }

func (InstanceEbsBlockDeviceStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEbsBlockDeviceState)(nil)).Elem()
}

func (o InstanceEbsBlockDeviceStateArrayOutput) ToInstanceEbsBlockDeviceStateArrayOutput() InstanceEbsBlockDeviceStateArrayOutput {
	return o
}

func (o InstanceEbsBlockDeviceStateArrayOutput) ToInstanceEbsBlockDeviceStateArrayOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceStateArrayOutput {
	return o
}

func (o InstanceEbsBlockDeviceStateArrayOutput) Index(i pulumi.IntInput) InstanceEbsBlockDeviceStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceEbsBlockDeviceState {
		return vs[0].([]InstanceEbsBlockDeviceState)[vs[1].(int)]
	}).(InstanceEbsBlockDeviceStateOutput)
}

type InstanceEphemeralBlockDevice struct {
	// The name of the block device to mount on the instance.
	DeviceName string `pulumi:"deviceName"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice *bool `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g. `"ephemeral0"`).
	VirtualName *string `pulumi:"virtualName"`
}

type InstanceEphemeralBlockDeviceInput interface {
	pulumi.Input

	ToInstanceEphemeralBlockDeviceOutput() InstanceEphemeralBlockDeviceOutput
	ToInstanceEphemeralBlockDeviceOutputWithContext(context.Context) InstanceEphemeralBlockDeviceOutput
}

type InstanceEphemeralBlockDeviceArgs struct {
	// The name of the block device to mount on the instance.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice pulumi.BoolPtrInput `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g. `"ephemeral0"`).
	VirtualName pulumi.StringPtrInput `pulumi:"virtualName"`
}

func (InstanceEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEphemeralBlockDevice)(nil)).Elem()
}

func (i InstanceEphemeralBlockDeviceArgs) ToInstanceEphemeralBlockDeviceOutput() InstanceEphemeralBlockDeviceOutput {
	return i.ToInstanceEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i InstanceEphemeralBlockDeviceArgs) ToInstanceEphemeralBlockDeviceOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEphemeralBlockDeviceOutput)
}

type InstanceEphemeralBlockDeviceArrayInput interface {
	pulumi.Input

	ToInstanceEphemeralBlockDeviceArrayOutput() InstanceEphemeralBlockDeviceArrayOutput
	ToInstanceEphemeralBlockDeviceArrayOutputWithContext(context.Context) InstanceEphemeralBlockDeviceArrayOutput
}

type InstanceEphemeralBlockDeviceArray []InstanceEphemeralBlockDeviceInput

func (InstanceEphemeralBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEphemeralBlockDevice)(nil)).Elem()
}

func (i InstanceEphemeralBlockDeviceArray) ToInstanceEphemeralBlockDeviceArrayOutput() InstanceEphemeralBlockDeviceArrayOutput {
	return i.ToInstanceEphemeralBlockDeviceArrayOutputWithContext(context.Background())
}

func (i InstanceEphemeralBlockDeviceArray) ToInstanceEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEphemeralBlockDeviceArrayOutput)
}

type InstanceEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (InstanceEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEphemeralBlockDevice)(nil)).Elem()
}

func (o InstanceEphemeralBlockDeviceOutput) ToInstanceEphemeralBlockDeviceOutput() InstanceEphemeralBlockDeviceOutput {
	return o
}

func (o InstanceEphemeralBlockDeviceOutput) ToInstanceEphemeralBlockDeviceOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceOutput {
	return o
}

// The name of the block device to mount on the instance.
func (o InstanceEphemeralBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceEphemeralBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Suppresses the specified device included in the AMI's block device mapping.
func (o InstanceEphemeralBlockDeviceOutput) NoDevice() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceEphemeralBlockDevice) *bool { return v.NoDevice }).(pulumi.BoolPtrOutput)
}

// The [Instance Store Device
// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
// (e.g. `"ephemeral0"`).
func (o InstanceEphemeralBlockDeviceOutput) VirtualName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceEphemeralBlockDevice) *string { return v.VirtualName }).(pulumi.StringPtrOutput)
}

type InstanceEphemeralBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (InstanceEphemeralBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEphemeralBlockDevice)(nil)).Elem()
}

func (o InstanceEphemeralBlockDeviceArrayOutput) ToInstanceEphemeralBlockDeviceArrayOutput() InstanceEphemeralBlockDeviceArrayOutput {
	return o
}

func (o InstanceEphemeralBlockDeviceArrayOutput) ToInstanceEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceArrayOutput {
	return o
}

func (o InstanceEphemeralBlockDeviceArrayOutput) Index(i pulumi.IntInput) InstanceEphemeralBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceEphemeralBlockDevice {
		return vs[0].([]InstanceEphemeralBlockDevice)[vs[1].(int)]
	}).(InstanceEphemeralBlockDeviceOutput)
}

type InstanceEphemeralBlockDeviceArgs struct {
	// The name of the block device to mount on the instance.
	DeviceName string `pulumi:"deviceName"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice *bool `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g. `"ephemeral0"`).
	VirtualName *string `pulumi:"virtualName"`
}

type InstanceEphemeralBlockDeviceArgsInput interface {
	pulumi.Input

	ToInstanceEphemeralBlockDeviceArgsOutput() InstanceEphemeralBlockDeviceArgsOutput
	ToInstanceEphemeralBlockDeviceArgsOutputWithContext(context.Context) InstanceEphemeralBlockDeviceArgsOutput
}

type InstanceEphemeralBlockDeviceArgsArgs struct {
	// The name of the block device to mount on the instance.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice pulumi.BoolPtrInput `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g. `"ephemeral0"`).
	VirtualName pulumi.StringPtrInput `pulumi:"virtualName"`
}

func (InstanceEphemeralBlockDeviceArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEphemeralBlockDeviceArgs)(nil)).Elem()
}

func (i InstanceEphemeralBlockDeviceArgsArgs) ToInstanceEphemeralBlockDeviceArgsOutput() InstanceEphemeralBlockDeviceArgsOutput {
	return i.ToInstanceEphemeralBlockDeviceArgsOutputWithContext(context.Background())
}

func (i InstanceEphemeralBlockDeviceArgsArgs) ToInstanceEphemeralBlockDeviceArgsOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEphemeralBlockDeviceArgsOutput)
}

type InstanceEphemeralBlockDeviceArgsArrayInput interface {
	pulumi.Input

	ToInstanceEphemeralBlockDeviceArgsArrayOutput() InstanceEphemeralBlockDeviceArgsArrayOutput
	ToInstanceEphemeralBlockDeviceArgsArrayOutputWithContext(context.Context) InstanceEphemeralBlockDeviceArgsArrayOutput
}

type InstanceEphemeralBlockDeviceArgsArray []InstanceEphemeralBlockDeviceArgsInput

func (InstanceEphemeralBlockDeviceArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEphemeralBlockDeviceArgs)(nil)).Elem()
}

func (i InstanceEphemeralBlockDeviceArgsArray) ToInstanceEphemeralBlockDeviceArgsArrayOutput() InstanceEphemeralBlockDeviceArgsArrayOutput {
	return i.ToInstanceEphemeralBlockDeviceArgsArrayOutputWithContext(context.Background())
}

func (i InstanceEphemeralBlockDeviceArgsArray) ToInstanceEphemeralBlockDeviceArgsArrayOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEphemeralBlockDeviceArgsArrayOutput)
}

type InstanceEphemeralBlockDeviceArgsOutput struct{ *pulumi.OutputState }

func (InstanceEphemeralBlockDeviceArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEphemeralBlockDeviceArgs)(nil)).Elem()
}

func (o InstanceEphemeralBlockDeviceArgsOutput) ToInstanceEphemeralBlockDeviceArgsOutput() InstanceEphemeralBlockDeviceArgsOutput {
	return o
}

func (o InstanceEphemeralBlockDeviceArgsOutput) ToInstanceEphemeralBlockDeviceArgsOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceArgsOutput {
	return o
}

// The name of the block device to mount on the instance.
func (o InstanceEphemeralBlockDeviceArgsOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceEphemeralBlockDeviceArgs) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Suppresses the specified device included in the AMI's block device mapping.
func (o InstanceEphemeralBlockDeviceArgsOutput) NoDevice() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceEphemeralBlockDeviceArgs) *bool { return v.NoDevice }).(pulumi.BoolPtrOutput)
}

// The [Instance Store Device
// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
// (e.g. `"ephemeral0"`).
func (o InstanceEphemeralBlockDeviceArgsOutput) VirtualName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceEphemeralBlockDeviceArgs) *string { return v.VirtualName }).(pulumi.StringPtrOutput)
}

type InstanceEphemeralBlockDeviceArgsArrayOutput struct{ *pulumi.OutputState }

func (InstanceEphemeralBlockDeviceArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEphemeralBlockDeviceArgs)(nil)).Elem()
}

func (o InstanceEphemeralBlockDeviceArgsArrayOutput) ToInstanceEphemeralBlockDeviceArgsArrayOutput() InstanceEphemeralBlockDeviceArgsArrayOutput {
	return o
}

func (o InstanceEphemeralBlockDeviceArgsArrayOutput) ToInstanceEphemeralBlockDeviceArgsArrayOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceArgsArrayOutput {
	return o
}

func (o InstanceEphemeralBlockDeviceArgsArrayOutput) Index(i pulumi.IntInput) InstanceEphemeralBlockDeviceArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceEphemeralBlockDeviceArgs {
		return vs[0].([]InstanceEphemeralBlockDeviceArgs)[vs[1].(int)]
	}).(InstanceEphemeralBlockDeviceArgsOutput)
}

type InstanceEphemeralBlockDeviceState struct {
	// The name of the block device to mount on the instance.
	DeviceName string `pulumi:"deviceName"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice *bool `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g. `"ephemeral0"`).
	VirtualName *string `pulumi:"virtualName"`
}

type InstanceEphemeralBlockDeviceStateInput interface {
	pulumi.Input

	ToInstanceEphemeralBlockDeviceStateOutput() InstanceEphemeralBlockDeviceStateOutput
	ToInstanceEphemeralBlockDeviceStateOutputWithContext(context.Context) InstanceEphemeralBlockDeviceStateOutput
}

type InstanceEphemeralBlockDeviceStateArgs struct {
	// The name of the block device to mount on the instance.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice pulumi.BoolPtrInput `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g. `"ephemeral0"`).
	VirtualName pulumi.StringPtrInput `pulumi:"virtualName"`
}

func (InstanceEphemeralBlockDeviceStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEphemeralBlockDeviceState)(nil)).Elem()
}

func (i InstanceEphemeralBlockDeviceStateArgs) ToInstanceEphemeralBlockDeviceStateOutput() InstanceEphemeralBlockDeviceStateOutput {
	return i.ToInstanceEphemeralBlockDeviceStateOutputWithContext(context.Background())
}

func (i InstanceEphemeralBlockDeviceStateArgs) ToInstanceEphemeralBlockDeviceStateOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEphemeralBlockDeviceStateOutput)
}

type InstanceEphemeralBlockDeviceStateArrayInput interface {
	pulumi.Input

	ToInstanceEphemeralBlockDeviceStateArrayOutput() InstanceEphemeralBlockDeviceStateArrayOutput
	ToInstanceEphemeralBlockDeviceStateArrayOutputWithContext(context.Context) InstanceEphemeralBlockDeviceStateArrayOutput
}

type InstanceEphemeralBlockDeviceStateArray []InstanceEphemeralBlockDeviceStateInput

func (InstanceEphemeralBlockDeviceStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEphemeralBlockDeviceState)(nil)).Elem()
}

func (i InstanceEphemeralBlockDeviceStateArray) ToInstanceEphemeralBlockDeviceStateArrayOutput() InstanceEphemeralBlockDeviceStateArrayOutput {
	return i.ToInstanceEphemeralBlockDeviceStateArrayOutputWithContext(context.Background())
}

func (i InstanceEphemeralBlockDeviceStateArray) ToInstanceEphemeralBlockDeviceStateArrayOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEphemeralBlockDeviceStateArrayOutput)
}

type InstanceEphemeralBlockDeviceStateOutput struct{ *pulumi.OutputState }

func (InstanceEphemeralBlockDeviceStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEphemeralBlockDeviceState)(nil)).Elem()
}

func (o InstanceEphemeralBlockDeviceStateOutput) ToInstanceEphemeralBlockDeviceStateOutput() InstanceEphemeralBlockDeviceStateOutput {
	return o
}

func (o InstanceEphemeralBlockDeviceStateOutput) ToInstanceEphemeralBlockDeviceStateOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceStateOutput {
	return o
}

// The name of the block device to mount on the instance.
func (o InstanceEphemeralBlockDeviceStateOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceEphemeralBlockDeviceState) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Suppresses the specified device included in the AMI's block device mapping.
func (o InstanceEphemeralBlockDeviceStateOutput) NoDevice() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceEphemeralBlockDeviceState) *bool { return v.NoDevice }).(pulumi.BoolPtrOutput)
}

// The [Instance Store Device
// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
// (e.g. `"ephemeral0"`).
func (o InstanceEphemeralBlockDeviceStateOutput) VirtualName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceEphemeralBlockDeviceState) *string { return v.VirtualName }).(pulumi.StringPtrOutput)
}

type InstanceEphemeralBlockDeviceStateArrayOutput struct{ *pulumi.OutputState }

func (InstanceEphemeralBlockDeviceStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEphemeralBlockDeviceState)(nil)).Elem()
}

func (o InstanceEphemeralBlockDeviceStateArrayOutput) ToInstanceEphemeralBlockDeviceStateArrayOutput() InstanceEphemeralBlockDeviceStateArrayOutput {
	return o
}

func (o InstanceEphemeralBlockDeviceStateArrayOutput) ToInstanceEphemeralBlockDeviceStateArrayOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceStateArrayOutput {
	return o
}

func (o InstanceEphemeralBlockDeviceStateArrayOutput) Index(i pulumi.IntInput) InstanceEphemeralBlockDeviceStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceEphemeralBlockDeviceState {
		return vs[0].([]InstanceEphemeralBlockDeviceState)[vs[1].(int)]
	}).(InstanceEphemeralBlockDeviceStateOutput)
}

type InstanceMetadataOptions struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint string `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit int `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens string `pulumi:"httpTokens"`
}

type InstanceMetadataOptionsInput interface {
	pulumi.Input

	ToInstanceMetadataOptionsOutput() InstanceMetadataOptionsOutput
	ToInstanceMetadataOptionsOutputWithContext(context.Context) InstanceMetadataOptionsOutput
}

type InstanceMetadataOptionsArgs struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint pulumi.StringInput `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit pulumi.IntInput `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens pulumi.StringInput `pulumi:"httpTokens"`
}

func (InstanceMetadataOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMetadataOptions)(nil)).Elem()
}

func (i InstanceMetadataOptionsArgs) ToInstanceMetadataOptionsOutput() InstanceMetadataOptionsOutput {
	return i.ToInstanceMetadataOptionsOutputWithContext(context.Background())
}

func (i InstanceMetadataOptionsArgs) ToInstanceMetadataOptionsOutputWithContext(ctx context.Context) InstanceMetadataOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMetadataOptionsOutput)
}

func (i InstanceMetadataOptionsArgs) ToInstanceMetadataOptionsPtrOutput() InstanceMetadataOptionsPtrOutput {
	return i.ToInstanceMetadataOptionsPtrOutputWithContext(context.Background())
}

func (i InstanceMetadataOptionsArgs) ToInstanceMetadataOptionsPtrOutputWithContext(ctx context.Context) InstanceMetadataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMetadataOptionsOutput).ToInstanceMetadataOptionsPtrOutputWithContext(ctx)
}

type InstanceMetadataOptionsPtrInput interface {
	pulumi.Input

	ToInstanceMetadataOptionsPtrOutput() InstanceMetadataOptionsPtrOutput
	ToInstanceMetadataOptionsPtrOutputWithContext(context.Context) InstanceMetadataOptionsPtrOutput
}

type instanceMetadataOptionsPtrType InstanceMetadataOptionsArgs

func InstanceMetadataOptionsPtr(v *InstanceMetadataOptionsArgs) InstanceMetadataOptionsPtrInput {
	return (*instanceMetadataOptionsPtrType)(v)
}

func (*instanceMetadataOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceMetadataOptions)(nil)).Elem()
}

func (i *instanceMetadataOptionsPtrType) ToInstanceMetadataOptionsPtrOutput() InstanceMetadataOptionsPtrOutput {
	return i.ToInstanceMetadataOptionsPtrOutputWithContext(context.Background())
}

func (i *instanceMetadataOptionsPtrType) ToInstanceMetadataOptionsPtrOutputWithContext(ctx context.Context) InstanceMetadataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMetadataOptionsPtrOutput)
}

type InstanceMetadataOptionsOutput struct{ *pulumi.OutputState }

func (InstanceMetadataOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMetadataOptions)(nil)).Elem()
}

func (o InstanceMetadataOptionsOutput) ToInstanceMetadataOptionsOutput() InstanceMetadataOptionsOutput {
	return o
}

func (o InstanceMetadataOptionsOutput) ToInstanceMetadataOptionsOutputWithContext(ctx context.Context) InstanceMetadataOptionsOutput {
	return o
}

func (o InstanceMetadataOptionsOutput) ToInstanceMetadataOptionsPtrOutput() InstanceMetadataOptionsPtrOutput {
	return o.ToInstanceMetadataOptionsPtrOutputWithContext(context.Background())
}

func (o InstanceMetadataOptionsOutput) ToInstanceMetadataOptionsPtrOutputWithContext(ctx context.Context) InstanceMetadataOptionsPtrOutput {
	return o.ApplyT(func(v InstanceMetadataOptions) *InstanceMetadataOptions {
		return &v
	}).(InstanceMetadataOptionsPtrOutput)
}

// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
func (o InstanceMetadataOptionsOutput) HttpEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceMetadataOptions) string { return v.HttpEndpoint }).(pulumi.StringOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
func (o InstanceMetadataOptionsOutput) HttpPutResponseHopLimit() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceMetadataOptions) int { return v.HttpPutResponseHopLimit }).(pulumi.IntOutput)
}

// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
func (o InstanceMetadataOptionsOutput) HttpTokens() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceMetadataOptions) string { return v.HttpTokens }).(pulumi.StringOutput)
}

type InstanceMetadataOptionsPtrOutput struct{ *pulumi.OutputState }

func (InstanceMetadataOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceMetadataOptions)(nil)).Elem()
}

func (o InstanceMetadataOptionsPtrOutput) ToInstanceMetadataOptionsPtrOutput() InstanceMetadataOptionsPtrOutput {
	return o
}

func (o InstanceMetadataOptionsPtrOutput) ToInstanceMetadataOptionsPtrOutputWithContext(ctx context.Context) InstanceMetadataOptionsPtrOutput {
	return o
}

func (o InstanceMetadataOptionsPtrOutput) Elem() InstanceMetadataOptionsOutput {
	return o.ApplyT(func(v *InstanceMetadataOptions) InstanceMetadataOptions { return *v }).(InstanceMetadataOptionsOutput)
}

// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
func (o InstanceMetadataOptionsPtrOutput) HttpEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceMetadataOptions) string { return v.HttpEndpoint }).(pulumi.StringOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
func (o InstanceMetadataOptionsPtrOutput) HttpPutResponseHopLimit() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceMetadataOptions) int { return v.HttpPutResponseHopLimit }).(pulumi.IntOutput)
}

// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
func (o InstanceMetadataOptionsPtrOutput) HttpTokens() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceMetadataOptions) string { return v.HttpTokens }).(pulumi.StringOutput)
}

type InstanceMetadataOptionsArgs struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint *string `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit *int `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens *string `pulumi:"httpTokens"`
}

type InstanceMetadataOptionsArgsInput interface {
	pulumi.Input

	ToInstanceMetadataOptionsArgsOutput() InstanceMetadataOptionsArgsOutput
	ToInstanceMetadataOptionsArgsOutputWithContext(context.Context) InstanceMetadataOptionsArgsOutput
}

type InstanceMetadataOptionsArgsArgs struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint pulumi.StringPtrInput `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit pulumi.IntPtrInput `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens pulumi.StringPtrInput `pulumi:"httpTokens"`
}

func (InstanceMetadataOptionsArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMetadataOptionsArgs)(nil)).Elem()
}

func (i InstanceMetadataOptionsArgsArgs) ToInstanceMetadataOptionsArgsOutput() InstanceMetadataOptionsArgsOutput {
	return i.ToInstanceMetadataOptionsArgsOutputWithContext(context.Background())
}

func (i InstanceMetadataOptionsArgsArgs) ToInstanceMetadataOptionsArgsOutputWithContext(ctx context.Context) InstanceMetadataOptionsArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMetadataOptionsArgsOutput)
}

func (i InstanceMetadataOptionsArgsArgs) ToInstanceMetadataOptionsArgsPtrOutput() InstanceMetadataOptionsArgsPtrOutput {
	return i.ToInstanceMetadataOptionsArgsPtrOutputWithContext(context.Background())
}

func (i InstanceMetadataOptionsArgsArgs) ToInstanceMetadataOptionsArgsPtrOutputWithContext(ctx context.Context) InstanceMetadataOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMetadataOptionsArgsOutput).ToInstanceMetadataOptionsArgsPtrOutputWithContext(ctx)
}

type InstanceMetadataOptionsArgsPtrInput interface {
	pulumi.Input

	ToInstanceMetadataOptionsArgsPtrOutput() InstanceMetadataOptionsArgsPtrOutput
	ToInstanceMetadataOptionsArgsPtrOutputWithContext(context.Context) InstanceMetadataOptionsArgsPtrOutput
}

type instanceMetadataOptionsArgsPtrType InstanceMetadataOptionsArgsArgs

func InstanceMetadataOptionsArgsPtr(v *InstanceMetadataOptionsArgsArgs) InstanceMetadataOptionsArgsPtrInput {
	return (*instanceMetadataOptionsArgsPtrType)(v)
}

func (*instanceMetadataOptionsArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceMetadataOptionsArgs)(nil)).Elem()
}

func (i *instanceMetadataOptionsArgsPtrType) ToInstanceMetadataOptionsArgsPtrOutput() InstanceMetadataOptionsArgsPtrOutput {
	return i.ToInstanceMetadataOptionsArgsPtrOutputWithContext(context.Background())
}

func (i *instanceMetadataOptionsArgsPtrType) ToInstanceMetadataOptionsArgsPtrOutputWithContext(ctx context.Context) InstanceMetadataOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMetadataOptionsArgsPtrOutput)
}

type InstanceMetadataOptionsArgsOutput struct{ *pulumi.OutputState }

func (InstanceMetadataOptionsArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMetadataOptionsArgs)(nil)).Elem()
}

func (o InstanceMetadataOptionsArgsOutput) ToInstanceMetadataOptionsArgsOutput() InstanceMetadataOptionsArgsOutput {
	return o
}

func (o InstanceMetadataOptionsArgsOutput) ToInstanceMetadataOptionsArgsOutputWithContext(ctx context.Context) InstanceMetadataOptionsArgsOutput {
	return o
}

func (o InstanceMetadataOptionsArgsOutput) ToInstanceMetadataOptionsArgsPtrOutput() InstanceMetadataOptionsArgsPtrOutput {
	return o.ToInstanceMetadataOptionsArgsPtrOutputWithContext(context.Background())
}

func (o InstanceMetadataOptionsArgsOutput) ToInstanceMetadataOptionsArgsPtrOutputWithContext(ctx context.Context) InstanceMetadataOptionsArgsPtrOutput {
	return o.ApplyT(func(v InstanceMetadataOptionsArgs) *InstanceMetadataOptionsArgs {
		return &v
	}).(InstanceMetadataOptionsArgsPtrOutput)
}

// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
func (o InstanceMetadataOptionsArgsOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMetadataOptionsArgs) *string { return v.HttpEndpoint }).(pulumi.StringPtrOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
func (o InstanceMetadataOptionsArgsOutput) HttpPutResponseHopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceMetadataOptionsArgs) *int { return v.HttpPutResponseHopLimit }).(pulumi.IntPtrOutput)
}

// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
func (o InstanceMetadataOptionsArgsOutput) HttpTokens() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMetadataOptionsArgs) *string { return v.HttpTokens }).(pulumi.StringPtrOutput)
}

type InstanceMetadataOptionsArgsPtrOutput struct{ *pulumi.OutputState }

func (InstanceMetadataOptionsArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceMetadataOptionsArgs)(nil)).Elem()
}

func (o InstanceMetadataOptionsArgsPtrOutput) ToInstanceMetadataOptionsArgsPtrOutput() InstanceMetadataOptionsArgsPtrOutput {
	return o
}

func (o InstanceMetadataOptionsArgsPtrOutput) ToInstanceMetadataOptionsArgsPtrOutputWithContext(ctx context.Context) InstanceMetadataOptionsArgsPtrOutput {
	return o
}

func (o InstanceMetadataOptionsArgsPtrOutput) Elem() InstanceMetadataOptionsArgsOutput {
	return o.ApplyT(func(v *InstanceMetadataOptionsArgs) InstanceMetadataOptionsArgs { return *v }).(InstanceMetadataOptionsArgsOutput)
}

// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
func (o InstanceMetadataOptionsArgsPtrOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMetadataOptionsArgs) *string { return v.HttpEndpoint }).(pulumi.StringPtrOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
func (o InstanceMetadataOptionsArgsPtrOutput) HttpPutResponseHopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceMetadataOptionsArgs) *int { return v.HttpPutResponseHopLimit }).(pulumi.IntPtrOutput)
}

// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
func (o InstanceMetadataOptionsArgsPtrOutput) HttpTokens() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMetadataOptionsArgs) *string { return v.HttpTokens }).(pulumi.StringPtrOutput)
}

type InstanceMetadataOptionsState struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint *string `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit *int `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens *string `pulumi:"httpTokens"`
}

type InstanceMetadataOptionsStateInput interface {
	pulumi.Input

	ToInstanceMetadataOptionsStateOutput() InstanceMetadataOptionsStateOutput
	ToInstanceMetadataOptionsStateOutputWithContext(context.Context) InstanceMetadataOptionsStateOutput
}

type InstanceMetadataOptionsStateArgs struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint pulumi.StringPtrInput `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit pulumi.IntPtrInput `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens pulumi.StringPtrInput `pulumi:"httpTokens"`
}

func (InstanceMetadataOptionsStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMetadataOptionsState)(nil)).Elem()
}

func (i InstanceMetadataOptionsStateArgs) ToInstanceMetadataOptionsStateOutput() InstanceMetadataOptionsStateOutput {
	return i.ToInstanceMetadataOptionsStateOutputWithContext(context.Background())
}

func (i InstanceMetadataOptionsStateArgs) ToInstanceMetadataOptionsStateOutputWithContext(ctx context.Context) InstanceMetadataOptionsStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMetadataOptionsStateOutput)
}

type InstanceMetadataOptionsStateOutput struct{ *pulumi.OutputState }

func (InstanceMetadataOptionsStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMetadataOptionsState)(nil)).Elem()
}

func (o InstanceMetadataOptionsStateOutput) ToInstanceMetadataOptionsStateOutput() InstanceMetadataOptionsStateOutput {
	return o
}

func (o InstanceMetadataOptionsStateOutput) ToInstanceMetadataOptionsStateOutputWithContext(ctx context.Context) InstanceMetadataOptionsStateOutput {
	return o
}

// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
func (o InstanceMetadataOptionsStateOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMetadataOptionsState) *string { return v.HttpEndpoint }).(pulumi.StringPtrOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
func (o InstanceMetadataOptionsStateOutput) HttpPutResponseHopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceMetadataOptionsState) *int { return v.HttpPutResponseHopLimit }).(pulumi.IntPtrOutput)
}

// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
func (o InstanceMetadataOptionsStateOutput) HttpTokens() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMetadataOptionsState) *string { return v.HttpTokens }).(pulumi.StringPtrOutput)
}

type InstanceNetworkInterface struct {
	// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The integer index of the network interface attachment. Limited by instance type.
	DeviceIndex int `pulumi:"deviceIndex"`
	// The ID of the network interface to attach.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
}

type InstanceNetworkInterfaceInput interface {
	pulumi.Input

	ToInstanceNetworkInterfaceOutput() InstanceNetworkInterfaceOutput
	ToInstanceNetworkInterfaceOutputWithContext(context.Context) InstanceNetworkInterfaceOutput
}

type InstanceNetworkInterfaceArgs struct {
	// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The integer index of the network interface attachment. Limited by instance type.
	DeviceIndex pulumi.IntInput `pulumi:"deviceIndex"`
	// The ID of the network interface to attach.
	NetworkInterfaceId pulumi.StringInput `pulumi:"networkInterfaceId"`
}

func (InstanceNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNetworkInterface)(nil)).Elem()
}

func (i InstanceNetworkInterfaceArgs) ToInstanceNetworkInterfaceOutput() InstanceNetworkInterfaceOutput {
	return i.ToInstanceNetworkInterfaceOutputWithContext(context.Background())
}

func (i InstanceNetworkInterfaceArgs) ToInstanceNetworkInterfaceOutputWithContext(ctx context.Context) InstanceNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNetworkInterfaceOutput)
}

type InstanceNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToInstanceNetworkInterfaceArrayOutput() InstanceNetworkInterfaceArrayOutput
	ToInstanceNetworkInterfaceArrayOutputWithContext(context.Context) InstanceNetworkInterfaceArrayOutput
}

type InstanceNetworkInterfaceArray []InstanceNetworkInterfaceInput

func (InstanceNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceNetworkInterface)(nil)).Elem()
}

func (i InstanceNetworkInterfaceArray) ToInstanceNetworkInterfaceArrayOutput() InstanceNetworkInterfaceArrayOutput {
	return i.ToInstanceNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i InstanceNetworkInterfaceArray) ToInstanceNetworkInterfaceArrayOutputWithContext(ctx context.Context) InstanceNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNetworkInterfaceArrayOutput)
}

type InstanceNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (InstanceNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNetworkInterface)(nil)).Elem()
}

func (o InstanceNetworkInterfaceOutput) ToInstanceNetworkInterfaceOutput() InstanceNetworkInterfaceOutput {
	return o
}

func (o InstanceNetworkInterfaceOutput) ToInstanceNetworkInterfaceOutputWithContext(ctx context.Context) InstanceNetworkInterfaceOutput {
	return o
}

// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
func (o InstanceNetworkInterfaceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceNetworkInterface) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The integer index of the network interface attachment. Limited by instance type.
func (o InstanceNetworkInterfaceOutput) DeviceIndex() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceNetworkInterface) int { return v.DeviceIndex }).(pulumi.IntOutput)
}

// The ID of the network interface to attach.
func (o InstanceNetworkInterfaceOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceNetworkInterface) string { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

type InstanceNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (InstanceNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceNetworkInterface)(nil)).Elem()
}

func (o InstanceNetworkInterfaceArrayOutput) ToInstanceNetworkInterfaceArrayOutput() InstanceNetworkInterfaceArrayOutput {
	return o
}

func (o InstanceNetworkInterfaceArrayOutput) ToInstanceNetworkInterfaceArrayOutputWithContext(ctx context.Context) InstanceNetworkInterfaceArrayOutput {
	return o
}

func (o InstanceNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) InstanceNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceNetworkInterface {
		return vs[0].([]InstanceNetworkInterface)[vs[1].(int)]
	}).(InstanceNetworkInterfaceOutput)
}

type InstanceNetworkInterfaceArgs struct {
	// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The integer index of the network interface attachment. Limited by instance type.
	DeviceIndex int `pulumi:"deviceIndex"`
	// The ID of the network interface to attach.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
}

type InstanceNetworkInterfaceArgsInput interface {
	pulumi.Input

	ToInstanceNetworkInterfaceArgsOutput() InstanceNetworkInterfaceArgsOutput
	ToInstanceNetworkInterfaceArgsOutputWithContext(context.Context) InstanceNetworkInterfaceArgsOutput
}

type InstanceNetworkInterfaceArgsArgs struct {
	// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The integer index of the network interface attachment. Limited by instance type.
	DeviceIndex pulumi.IntInput `pulumi:"deviceIndex"`
	// The ID of the network interface to attach.
	NetworkInterfaceId pulumi.StringInput `pulumi:"networkInterfaceId"`
}

func (InstanceNetworkInterfaceArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNetworkInterfaceArgs)(nil)).Elem()
}

func (i InstanceNetworkInterfaceArgsArgs) ToInstanceNetworkInterfaceArgsOutput() InstanceNetworkInterfaceArgsOutput {
	return i.ToInstanceNetworkInterfaceArgsOutputWithContext(context.Background())
}

func (i InstanceNetworkInterfaceArgsArgs) ToInstanceNetworkInterfaceArgsOutputWithContext(ctx context.Context) InstanceNetworkInterfaceArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNetworkInterfaceArgsOutput)
}

type InstanceNetworkInterfaceArgsArrayInput interface {
	pulumi.Input

	ToInstanceNetworkInterfaceArgsArrayOutput() InstanceNetworkInterfaceArgsArrayOutput
	ToInstanceNetworkInterfaceArgsArrayOutputWithContext(context.Context) InstanceNetworkInterfaceArgsArrayOutput
}

type InstanceNetworkInterfaceArgsArray []InstanceNetworkInterfaceArgsInput

func (InstanceNetworkInterfaceArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceNetworkInterfaceArgs)(nil)).Elem()
}

func (i InstanceNetworkInterfaceArgsArray) ToInstanceNetworkInterfaceArgsArrayOutput() InstanceNetworkInterfaceArgsArrayOutput {
	return i.ToInstanceNetworkInterfaceArgsArrayOutputWithContext(context.Background())
}

func (i InstanceNetworkInterfaceArgsArray) ToInstanceNetworkInterfaceArgsArrayOutputWithContext(ctx context.Context) InstanceNetworkInterfaceArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNetworkInterfaceArgsArrayOutput)
}

type InstanceNetworkInterfaceArgsOutput struct{ *pulumi.OutputState }

func (InstanceNetworkInterfaceArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNetworkInterfaceArgs)(nil)).Elem()
}

func (o InstanceNetworkInterfaceArgsOutput) ToInstanceNetworkInterfaceArgsOutput() InstanceNetworkInterfaceArgsOutput {
	return o
}

func (o InstanceNetworkInterfaceArgsOutput) ToInstanceNetworkInterfaceArgsOutputWithContext(ctx context.Context) InstanceNetworkInterfaceArgsOutput {
	return o
}

// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
func (o InstanceNetworkInterfaceArgsOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceNetworkInterfaceArgs) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The integer index of the network interface attachment. Limited by instance type.
func (o InstanceNetworkInterfaceArgsOutput) DeviceIndex() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceNetworkInterfaceArgs) int { return v.DeviceIndex }).(pulumi.IntOutput)
}

// The ID of the network interface to attach.
func (o InstanceNetworkInterfaceArgsOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceNetworkInterfaceArgs) string { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

type InstanceNetworkInterfaceArgsArrayOutput struct{ *pulumi.OutputState }

func (InstanceNetworkInterfaceArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceNetworkInterfaceArgs)(nil)).Elem()
}

func (o InstanceNetworkInterfaceArgsArrayOutput) ToInstanceNetworkInterfaceArgsArrayOutput() InstanceNetworkInterfaceArgsArrayOutput {
	return o
}

func (o InstanceNetworkInterfaceArgsArrayOutput) ToInstanceNetworkInterfaceArgsArrayOutputWithContext(ctx context.Context) InstanceNetworkInterfaceArgsArrayOutput {
	return o
}

func (o InstanceNetworkInterfaceArgsArrayOutput) Index(i pulumi.IntInput) InstanceNetworkInterfaceArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceNetworkInterfaceArgs {
		return vs[0].([]InstanceNetworkInterfaceArgs)[vs[1].(int)]
	}).(InstanceNetworkInterfaceArgsOutput)
}

type InstanceNetworkInterfaceState struct {
	// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The integer index of the network interface attachment. Limited by instance type.
	DeviceIndex int `pulumi:"deviceIndex"`
	// The ID of the network interface to attach.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
}

type InstanceNetworkInterfaceStateInput interface {
	pulumi.Input

	ToInstanceNetworkInterfaceStateOutput() InstanceNetworkInterfaceStateOutput
	ToInstanceNetworkInterfaceStateOutputWithContext(context.Context) InstanceNetworkInterfaceStateOutput
}

type InstanceNetworkInterfaceStateArgs struct {
	// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The integer index of the network interface attachment. Limited by instance type.
	DeviceIndex pulumi.IntInput `pulumi:"deviceIndex"`
	// The ID of the network interface to attach.
	NetworkInterfaceId pulumi.StringInput `pulumi:"networkInterfaceId"`
}

func (InstanceNetworkInterfaceStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNetworkInterfaceState)(nil)).Elem()
}

func (i InstanceNetworkInterfaceStateArgs) ToInstanceNetworkInterfaceStateOutput() InstanceNetworkInterfaceStateOutput {
	return i.ToInstanceNetworkInterfaceStateOutputWithContext(context.Background())
}

func (i InstanceNetworkInterfaceStateArgs) ToInstanceNetworkInterfaceStateOutputWithContext(ctx context.Context) InstanceNetworkInterfaceStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNetworkInterfaceStateOutput)
}

type InstanceNetworkInterfaceStateArrayInput interface {
	pulumi.Input

	ToInstanceNetworkInterfaceStateArrayOutput() InstanceNetworkInterfaceStateArrayOutput
	ToInstanceNetworkInterfaceStateArrayOutputWithContext(context.Context) InstanceNetworkInterfaceStateArrayOutput
}

type InstanceNetworkInterfaceStateArray []InstanceNetworkInterfaceStateInput

func (InstanceNetworkInterfaceStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceNetworkInterfaceState)(nil)).Elem()
}

func (i InstanceNetworkInterfaceStateArray) ToInstanceNetworkInterfaceStateArrayOutput() InstanceNetworkInterfaceStateArrayOutput {
	return i.ToInstanceNetworkInterfaceStateArrayOutputWithContext(context.Background())
}

func (i InstanceNetworkInterfaceStateArray) ToInstanceNetworkInterfaceStateArrayOutputWithContext(ctx context.Context) InstanceNetworkInterfaceStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNetworkInterfaceStateArrayOutput)
}

type InstanceNetworkInterfaceStateOutput struct{ *pulumi.OutputState }

func (InstanceNetworkInterfaceStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNetworkInterfaceState)(nil)).Elem()
}

func (o InstanceNetworkInterfaceStateOutput) ToInstanceNetworkInterfaceStateOutput() InstanceNetworkInterfaceStateOutput {
	return o
}

func (o InstanceNetworkInterfaceStateOutput) ToInstanceNetworkInterfaceStateOutputWithContext(ctx context.Context) InstanceNetworkInterfaceStateOutput {
	return o
}

// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
func (o InstanceNetworkInterfaceStateOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceNetworkInterfaceState) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The integer index of the network interface attachment. Limited by instance type.
func (o InstanceNetworkInterfaceStateOutput) DeviceIndex() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceNetworkInterfaceState) int { return v.DeviceIndex }).(pulumi.IntOutput)
}

// The ID of the network interface to attach.
func (o InstanceNetworkInterfaceStateOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceNetworkInterfaceState) string { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

type InstanceNetworkInterfaceStateArrayOutput struct{ *pulumi.OutputState }

func (InstanceNetworkInterfaceStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceNetworkInterfaceState)(nil)).Elem()
}

func (o InstanceNetworkInterfaceStateArrayOutput) ToInstanceNetworkInterfaceStateArrayOutput() InstanceNetworkInterfaceStateArrayOutput {
	return o
}

func (o InstanceNetworkInterfaceStateArrayOutput) ToInstanceNetworkInterfaceStateArrayOutputWithContext(ctx context.Context) InstanceNetworkInterfaceStateArrayOutput {
	return o
}

func (o InstanceNetworkInterfaceStateArrayOutput) Index(i pulumi.IntInput) InstanceNetworkInterfaceStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceNetworkInterfaceState {
		return vs[0].([]InstanceNetworkInterfaceState)[vs[1].(int)]
	}).(InstanceNetworkInterfaceStateOutput)
}

type InstanceRootBlockDevice struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
	Encrypted bool `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This is only valid for `volumeType` of `"io1"`, and must be specified if
	// using that type
	Iops int `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId string `pulumi:"kmsKeyId"`
	VolumeId string `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize int `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
	VolumeType string `pulumi:"volumeType"`
}

type InstanceRootBlockDeviceInput interface {
	pulumi.Input

	ToInstanceRootBlockDeviceOutput() InstanceRootBlockDeviceOutput
	ToInstanceRootBlockDeviceOutputWithContext(context.Context) InstanceRootBlockDeviceOutput
}

type InstanceRootBlockDeviceArgs struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
	Encrypted pulumi.BoolInput `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This is only valid for `volumeType` of `"io1"`, and must be specified if
	// using that type
	Iops pulumi.IntInput `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
	VolumeId pulumi.StringInput `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (InstanceRootBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceRootBlockDevice)(nil)).Elem()
}

func (i InstanceRootBlockDeviceArgs) ToInstanceRootBlockDeviceOutput() InstanceRootBlockDeviceOutput {
	return i.ToInstanceRootBlockDeviceOutputWithContext(context.Background())
}

func (i InstanceRootBlockDeviceArgs) ToInstanceRootBlockDeviceOutputWithContext(ctx context.Context) InstanceRootBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRootBlockDeviceOutput)
}

func (i InstanceRootBlockDeviceArgs) ToInstanceRootBlockDevicePtrOutput() InstanceRootBlockDevicePtrOutput {
	return i.ToInstanceRootBlockDevicePtrOutputWithContext(context.Background())
}

func (i InstanceRootBlockDeviceArgs) ToInstanceRootBlockDevicePtrOutputWithContext(ctx context.Context) InstanceRootBlockDevicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRootBlockDeviceOutput).ToInstanceRootBlockDevicePtrOutputWithContext(ctx)
}

type InstanceRootBlockDevicePtrInput interface {
	pulumi.Input

	ToInstanceRootBlockDevicePtrOutput() InstanceRootBlockDevicePtrOutput
	ToInstanceRootBlockDevicePtrOutputWithContext(context.Context) InstanceRootBlockDevicePtrOutput
}

type instanceRootBlockDevicePtrType InstanceRootBlockDeviceArgs

func InstanceRootBlockDevicePtr(v *InstanceRootBlockDeviceArgs) InstanceRootBlockDevicePtrInput {
	return (*instanceRootBlockDevicePtrType)(v)
}

func (*instanceRootBlockDevicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceRootBlockDevice)(nil)).Elem()
}

func (i *instanceRootBlockDevicePtrType) ToInstanceRootBlockDevicePtrOutput() InstanceRootBlockDevicePtrOutput {
	return i.ToInstanceRootBlockDevicePtrOutputWithContext(context.Background())
}

func (i *instanceRootBlockDevicePtrType) ToInstanceRootBlockDevicePtrOutputWithContext(ctx context.Context) InstanceRootBlockDevicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRootBlockDevicePtrOutput)
}

type InstanceRootBlockDeviceOutput struct{ *pulumi.OutputState }

func (InstanceRootBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceRootBlockDevice)(nil)).Elem()
}

func (o InstanceRootBlockDeviceOutput) ToInstanceRootBlockDeviceOutput() InstanceRootBlockDeviceOutput {
	return o
}

func (o InstanceRootBlockDeviceOutput) ToInstanceRootBlockDeviceOutputWithContext(ctx context.Context) InstanceRootBlockDeviceOutput {
	return o
}

func (o InstanceRootBlockDeviceOutput) ToInstanceRootBlockDevicePtrOutput() InstanceRootBlockDevicePtrOutput {
	return o.ToInstanceRootBlockDevicePtrOutputWithContext(context.Background())
}

func (o InstanceRootBlockDeviceOutput) ToInstanceRootBlockDevicePtrOutputWithContext(ctx context.Context) InstanceRootBlockDevicePtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *InstanceRootBlockDevice {
		return &v
	}).(InstanceRootBlockDevicePtrOutput)
}

// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o InstanceRootBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
func (o InstanceRootBlockDeviceOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This is only valid for `volumeType` of `"io1"`, and must be specified if
// using that type
func (o InstanceRootBlockDeviceOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) int { return v.Iops }).(pulumi.IntOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o InstanceRootBlockDeviceOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

func (o InstanceRootBlockDeviceOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) string { return v.VolumeId }).(pulumi.StringOutput)
}

// The size of the volume in gibibytes (GiB).
func (o InstanceRootBlockDeviceOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
func (o InstanceRootBlockDeviceOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) string { return v.VolumeType }).(pulumi.StringOutput)
}

type InstanceRootBlockDevicePtrOutput struct{ *pulumi.OutputState }

func (InstanceRootBlockDevicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceRootBlockDevice)(nil)).Elem()
}

func (o InstanceRootBlockDevicePtrOutput) ToInstanceRootBlockDevicePtrOutput() InstanceRootBlockDevicePtrOutput {
	return o
}

func (o InstanceRootBlockDevicePtrOutput) ToInstanceRootBlockDevicePtrOutputWithContext(ctx context.Context) InstanceRootBlockDevicePtrOutput {
	return o
}

func (o InstanceRootBlockDevicePtrOutput) Elem() InstanceRootBlockDeviceOutput {
	return o.ApplyT(func(v *InstanceRootBlockDevice) InstanceRootBlockDevice { return *v }).(InstanceRootBlockDeviceOutput)
}

// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o InstanceRootBlockDevicePtrOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
func (o InstanceRootBlockDevicePtrOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This is only valid for `volumeType` of `"io1"`, and must be specified if
// using that type
func (o InstanceRootBlockDevicePtrOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) int { return v.Iops }).(pulumi.IntOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o InstanceRootBlockDevicePtrOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

func (o InstanceRootBlockDevicePtrOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) string { return v.VolumeId }).(pulumi.StringOutput)
}

// The size of the volume in gibibytes (GiB).
func (o InstanceRootBlockDevicePtrOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
func (o InstanceRootBlockDevicePtrOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) string { return v.VolumeType }).(pulumi.StringOutput)
}

type InstanceRootBlockDeviceArgs struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
	Encrypted *bool `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This is only valid for `volumeType` of `"io1"`, and must be specified if
	// using that type
	Iops *int `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	VolumeId *string `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
	VolumeType *string `pulumi:"volumeType"`
}

type InstanceRootBlockDeviceArgsInput interface {
	pulumi.Input

	ToInstanceRootBlockDeviceArgsOutput() InstanceRootBlockDeviceArgsOutput
	ToInstanceRootBlockDeviceArgsOutputWithContext(context.Context) InstanceRootBlockDeviceArgsOutput
}

type InstanceRootBlockDeviceArgsArgs struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This is only valid for `volumeType` of `"io1"`, and must be specified if
	// using that type
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	VolumeId pulumi.StringPtrInput `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (InstanceRootBlockDeviceArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceRootBlockDeviceArgs)(nil)).Elem()
}

func (i InstanceRootBlockDeviceArgsArgs) ToInstanceRootBlockDeviceArgsOutput() InstanceRootBlockDeviceArgsOutput {
	return i.ToInstanceRootBlockDeviceArgsOutputWithContext(context.Background())
}

func (i InstanceRootBlockDeviceArgsArgs) ToInstanceRootBlockDeviceArgsOutputWithContext(ctx context.Context) InstanceRootBlockDeviceArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRootBlockDeviceArgsOutput)
}

func (i InstanceRootBlockDeviceArgsArgs) ToInstanceRootBlockDeviceArgsPtrOutput() InstanceRootBlockDeviceArgsPtrOutput {
	return i.ToInstanceRootBlockDeviceArgsPtrOutputWithContext(context.Background())
}

func (i InstanceRootBlockDeviceArgsArgs) ToInstanceRootBlockDeviceArgsPtrOutputWithContext(ctx context.Context) InstanceRootBlockDeviceArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRootBlockDeviceArgsOutput).ToInstanceRootBlockDeviceArgsPtrOutputWithContext(ctx)
}

type InstanceRootBlockDeviceArgsPtrInput interface {
	pulumi.Input

	ToInstanceRootBlockDeviceArgsPtrOutput() InstanceRootBlockDeviceArgsPtrOutput
	ToInstanceRootBlockDeviceArgsPtrOutputWithContext(context.Context) InstanceRootBlockDeviceArgsPtrOutput
}

type instanceRootBlockDeviceArgsPtrType InstanceRootBlockDeviceArgsArgs

func InstanceRootBlockDeviceArgsPtr(v *InstanceRootBlockDeviceArgsArgs) InstanceRootBlockDeviceArgsPtrInput {
	return (*instanceRootBlockDeviceArgsPtrType)(v)
}

func (*instanceRootBlockDeviceArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceRootBlockDeviceArgs)(nil)).Elem()
}

func (i *instanceRootBlockDeviceArgsPtrType) ToInstanceRootBlockDeviceArgsPtrOutput() InstanceRootBlockDeviceArgsPtrOutput {
	return i.ToInstanceRootBlockDeviceArgsPtrOutputWithContext(context.Background())
}

func (i *instanceRootBlockDeviceArgsPtrType) ToInstanceRootBlockDeviceArgsPtrOutputWithContext(ctx context.Context) InstanceRootBlockDeviceArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRootBlockDeviceArgsPtrOutput)
}

type InstanceRootBlockDeviceArgsOutput struct{ *pulumi.OutputState }

func (InstanceRootBlockDeviceArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceRootBlockDeviceArgs)(nil)).Elem()
}

func (o InstanceRootBlockDeviceArgsOutput) ToInstanceRootBlockDeviceArgsOutput() InstanceRootBlockDeviceArgsOutput {
	return o
}

func (o InstanceRootBlockDeviceArgsOutput) ToInstanceRootBlockDeviceArgsOutputWithContext(ctx context.Context) InstanceRootBlockDeviceArgsOutput {
	return o
}

func (o InstanceRootBlockDeviceArgsOutput) ToInstanceRootBlockDeviceArgsPtrOutput() InstanceRootBlockDeviceArgsPtrOutput {
	return o.ToInstanceRootBlockDeviceArgsPtrOutputWithContext(context.Background())
}

func (o InstanceRootBlockDeviceArgsOutput) ToInstanceRootBlockDeviceArgsPtrOutputWithContext(ctx context.Context) InstanceRootBlockDeviceArgsPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDeviceArgs) *InstanceRootBlockDeviceArgs {
		return &v
	}).(InstanceRootBlockDeviceArgsPtrOutput)
}

// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o InstanceRootBlockDeviceArgsOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDeviceArgs) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
func (o InstanceRootBlockDeviceArgsOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDeviceArgs) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This is only valid for `volumeType` of `"io1"`, and must be specified if
// using that type
func (o InstanceRootBlockDeviceArgsOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDeviceArgs) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o InstanceRootBlockDeviceArgsOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDeviceArgs) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o InstanceRootBlockDeviceArgsOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDeviceArgs) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gibibytes (GiB).
func (o InstanceRootBlockDeviceArgsOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDeviceArgs) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
func (o InstanceRootBlockDeviceArgsOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDeviceArgs) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type InstanceRootBlockDeviceArgsPtrOutput struct{ *pulumi.OutputState }

func (InstanceRootBlockDeviceArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceRootBlockDeviceArgs)(nil)).Elem()
}

func (o InstanceRootBlockDeviceArgsPtrOutput) ToInstanceRootBlockDeviceArgsPtrOutput() InstanceRootBlockDeviceArgsPtrOutput {
	return o
}

func (o InstanceRootBlockDeviceArgsPtrOutput) ToInstanceRootBlockDeviceArgsPtrOutputWithContext(ctx context.Context) InstanceRootBlockDeviceArgsPtrOutput {
	return o
}

func (o InstanceRootBlockDeviceArgsPtrOutput) Elem() InstanceRootBlockDeviceArgsOutput {
	return o.ApplyT(func(v *InstanceRootBlockDeviceArgs) InstanceRootBlockDeviceArgs { return *v }).(InstanceRootBlockDeviceArgsOutput)
}

// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o InstanceRootBlockDeviceArgsPtrOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDeviceArgs) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
func (o InstanceRootBlockDeviceArgsPtrOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDeviceArgs) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This is only valid for `volumeType` of `"io1"`, and must be specified if
// using that type
func (o InstanceRootBlockDeviceArgsPtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDeviceArgs) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o InstanceRootBlockDeviceArgsPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDeviceArgs) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o InstanceRootBlockDeviceArgsPtrOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDeviceArgs) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gibibytes (GiB).
func (o InstanceRootBlockDeviceArgsPtrOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDeviceArgs) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
func (o InstanceRootBlockDeviceArgsPtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDeviceArgs) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type InstanceRootBlockDeviceState struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
	Encrypted *bool `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This is only valid for `volumeType` of `"io1"`, and must be specified if
	// using that type
	Iops *int `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	VolumeId *string `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
	VolumeType *string `pulumi:"volumeType"`
}

type InstanceRootBlockDeviceStateInput interface {
	pulumi.Input

	ToInstanceRootBlockDeviceStateOutput() InstanceRootBlockDeviceStateOutput
	ToInstanceRootBlockDeviceStateOutputWithContext(context.Context) InstanceRootBlockDeviceStateOutput
}

type InstanceRootBlockDeviceStateArgs struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This is only valid for `volumeType` of `"io1"`, and must be specified if
	// using that type
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	VolumeId pulumi.StringPtrInput `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (InstanceRootBlockDeviceStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceRootBlockDeviceState)(nil)).Elem()
}

func (i InstanceRootBlockDeviceStateArgs) ToInstanceRootBlockDeviceStateOutput() InstanceRootBlockDeviceStateOutput {
	return i.ToInstanceRootBlockDeviceStateOutputWithContext(context.Background())
}

func (i InstanceRootBlockDeviceStateArgs) ToInstanceRootBlockDeviceStateOutputWithContext(ctx context.Context) InstanceRootBlockDeviceStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRootBlockDeviceStateOutput)
}

type InstanceRootBlockDeviceStateOutput struct{ *pulumi.OutputState }

func (InstanceRootBlockDeviceStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceRootBlockDeviceState)(nil)).Elem()
}

func (o InstanceRootBlockDeviceStateOutput) ToInstanceRootBlockDeviceStateOutput() InstanceRootBlockDeviceStateOutput {
	return o
}

func (o InstanceRootBlockDeviceStateOutput) ToInstanceRootBlockDeviceStateOutputWithContext(ctx context.Context) InstanceRootBlockDeviceStateOutput {
	return o
}

// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o InstanceRootBlockDeviceStateOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDeviceState) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
func (o InstanceRootBlockDeviceStateOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDeviceState) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This is only valid for `volumeType` of `"io1"`, and must be specified if
// using that type
func (o InstanceRootBlockDeviceStateOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDeviceState) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o InstanceRootBlockDeviceStateOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDeviceState) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o InstanceRootBlockDeviceStateOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDeviceState) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gibibytes (GiB).
func (o InstanceRootBlockDeviceStateOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDeviceState) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
func (o InstanceRootBlockDeviceStateOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDeviceState) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type LaunchConfigurationEbsBlockDevice struct {
	DeleteOnTermination *bool  `pulumi:"deleteOnTermination"`
	DeviceName          string `pulumi:"deviceName"`
	Encrypted           bool   `pulumi:"encrypted"`
	Iops                int    `pulumi:"iops"`
	NoDevice            *bool  `pulumi:"noDevice"`
	SnapshotId          string `pulumi:"snapshotId"`
	VolumeSize          int    `pulumi:"volumeSize"`
	VolumeType          string `pulumi:"volumeType"`
}

type LaunchConfigurationEbsBlockDeviceInput interface {
	pulumi.Input

	ToLaunchConfigurationEbsBlockDeviceOutput() LaunchConfigurationEbsBlockDeviceOutput
	ToLaunchConfigurationEbsBlockDeviceOutputWithContext(context.Context) LaunchConfigurationEbsBlockDeviceOutput
}

type LaunchConfigurationEbsBlockDeviceArgs struct {
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	DeviceName          pulumi.StringInput  `pulumi:"deviceName"`
	Encrypted           pulumi.BoolInput    `pulumi:"encrypted"`
	Iops                pulumi.IntInput     `pulumi:"iops"`
	NoDevice            pulumi.BoolPtrInput `pulumi:"noDevice"`
	SnapshotId          pulumi.StringInput  `pulumi:"snapshotId"`
	VolumeSize          pulumi.IntInput     `pulumi:"volumeSize"`
	VolumeType          pulumi.StringInput  `pulumi:"volumeType"`
}

func (LaunchConfigurationEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationEbsBlockDevice)(nil)).Elem()
}

func (i LaunchConfigurationEbsBlockDeviceArgs) ToLaunchConfigurationEbsBlockDeviceOutput() LaunchConfigurationEbsBlockDeviceOutput {
	return i.ToLaunchConfigurationEbsBlockDeviceOutputWithContext(context.Background())
}

func (i LaunchConfigurationEbsBlockDeviceArgs) ToLaunchConfigurationEbsBlockDeviceOutputWithContext(ctx context.Context) LaunchConfigurationEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationEbsBlockDeviceOutput)
}

type LaunchConfigurationEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToLaunchConfigurationEbsBlockDeviceArrayOutput() LaunchConfigurationEbsBlockDeviceArrayOutput
	ToLaunchConfigurationEbsBlockDeviceArrayOutputWithContext(context.Context) LaunchConfigurationEbsBlockDeviceArrayOutput
}

type LaunchConfigurationEbsBlockDeviceArray []LaunchConfigurationEbsBlockDeviceInput

func (LaunchConfigurationEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchConfigurationEbsBlockDevice)(nil)).Elem()
}

func (i LaunchConfigurationEbsBlockDeviceArray) ToLaunchConfigurationEbsBlockDeviceArrayOutput() LaunchConfigurationEbsBlockDeviceArrayOutput {
	return i.ToLaunchConfigurationEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i LaunchConfigurationEbsBlockDeviceArray) ToLaunchConfigurationEbsBlockDeviceArrayOutputWithContext(ctx context.Context) LaunchConfigurationEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationEbsBlockDeviceArrayOutput)
}

type LaunchConfigurationEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationEbsBlockDevice)(nil)).Elem()
}

func (o LaunchConfigurationEbsBlockDeviceOutput) ToLaunchConfigurationEbsBlockDeviceOutput() LaunchConfigurationEbsBlockDeviceOutput {
	return o
}

func (o LaunchConfigurationEbsBlockDeviceOutput) ToLaunchConfigurationEbsBlockDeviceOutputWithContext(ctx context.Context) LaunchConfigurationEbsBlockDeviceOutput {
	return o
}

func (o LaunchConfigurationEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o LaunchConfigurationEbsBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o LaunchConfigurationEbsBlockDeviceOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDevice) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

func (o LaunchConfigurationEbsBlockDeviceOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDevice) int { return v.Iops }).(pulumi.IntOutput)
}

func (o LaunchConfigurationEbsBlockDeviceOutput) NoDevice() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDevice) *bool { return v.NoDevice }).(pulumi.BoolPtrOutput)
}

func (o LaunchConfigurationEbsBlockDeviceOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDevice) string { return v.SnapshotId }).(pulumi.StringOutput)
}

func (o LaunchConfigurationEbsBlockDeviceOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDevice) int { return v.VolumeSize }).(pulumi.IntOutput)
}

func (o LaunchConfigurationEbsBlockDeviceOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDevice) string { return v.VolumeType }).(pulumi.StringOutput)
}

type LaunchConfigurationEbsBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchConfigurationEbsBlockDevice)(nil)).Elem()
}

func (o LaunchConfigurationEbsBlockDeviceArrayOutput) ToLaunchConfigurationEbsBlockDeviceArrayOutput() LaunchConfigurationEbsBlockDeviceArrayOutput {
	return o
}

func (o LaunchConfigurationEbsBlockDeviceArrayOutput) ToLaunchConfigurationEbsBlockDeviceArrayOutputWithContext(ctx context.Context) LaunchConfigurationEbsBlockDeviceArrayOutput {
	return o
}

func (o LaunchConfigurationEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) LaunchConfigurationEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchConfigurationEbsBlockDevice {
		return vs[0].([]LaunchConfigurationEbsBlockDevice)[vs[1].(int)]
	}).(LaunchConfigurationEbsBlockDeviceOutput)
}

type LaunchConfigurationEbsBlockDeviceArgs struct {
	DeleteOnTermination *bool   `pulumi:"deleteOnTermination"`
	DeviceName          string  `pulumi:"deviceName"`
	Encrypted           *bool   `pulumi:"encrypted"`
	Iops                *int    `pulumi:"iops"`
	NoDevice            *bool   `pulumi:"noDevice"`
	SnapshotId          *string `pulumi:"snapshotId"`
	VolumeSize          *int    `pulumi:"volumeSize"`
	VolumeType          *string `pulumi:"volumeType"`
}

type LaunchConfigurationEbsBlockDeviceArgsInput interface {
	pulumi.Input

	ToLaunchConfigurationEbsBlockDeviceArgsOutput() LaunchConfigurationEbsBlockDeviceArgsOutput
	ToLaunchConfigurationEbsBlockDeviceArgsOutputWithContext(context.Context) LaunchConfigurationEbsBlockDeviceArgsOutput
}

type LaunchConfigurationEbsBlockDeviceArgsArgs struct {
	DeleteOnTermination pulumi.BoolPtrInput   `pulumi:"deleteOnTermination"`
	DeviceName          pulumi.StringInput    `pulumi:"deviceName"`
	Encrypted           pulumi.BoolPtrInput   `pulumi:"encrypted"`
	Iops                pulumi.IntPtrInput    `pulumi:"iops"`
	NoDevice            pulumi.BoolPtrInput   `pulumi:"noDevice"`
	SnapshotId          pulumi.StringPtrInput `pulumi:"snapshotId"`
	VolumeSize          pulumi.IntPtrInput    `pulumi:"volumeSize"`
	VolumeType          pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (LaunchConfigurationEbsBlockDeviceArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationEbsBlockDeviceArgs)(nil)).Elem()
}

func (i LaunchConfigurationEbsBlockDeviceArgsArgs) ToLaunchConfigurationEbsBlockDeviceArgsOutput() LaunchConfigurationEbsBlockDeviceArgsOutput {
	return i.ToLaunchConfigurationEbsBlockDeviceArgsOutputWithContext(context.Background())
}

func (i LaunchConfigurationEbsBlockDeviceArgsArgs) ToLaunchConfigurationEbsBlockDeviceArgsOutputWithContext(ctx context.Context) LaunchConfigurationEbsBlockDeviceArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationEbsBlockDeviceArgsOutput)
}

type LaunchConfigurationEbsBlockDeviceArgsArrayInput interface {
	pulumi.Input

	ToLaunchConfigurationEbsBlockDeviceArgsArrayOutput() LaunchConfigurationEbsBlockDeviceArgsArrayOutput
	ToLaunchConfigurationEbsBlockDeviceArgsArrayOutputWithContext(context.Context) LaunchConfigurationEbsBlockDeviceArgsArrayOutput
}

type LaunchConfigurationEbsBlockDeviceArgsArray []LaunchConfigurationEbsBlockDeviceArgsInput

func (LaunchConfigurationEbsBlockDeviceArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchConfigurationEbsBlockDeviceArgs)(nil)).Elem()
}

func (i LaunchConfigurationEbsBlockDeviceArgsArray) ToLaunchConfigurationEbsBlockDeviceArgsArrayOutput() LaunchConfigurationEbsBlockDeviceArgsArrayOutput {
	return i.ToLaunchConfigurationEbsBlockDeviceArgsArrayOutputWithContext(context.Background())
}

func (i LaunchConfigurationEbsBlockDeviceArgsArray) ToLaunchConfigurationEbsBlockDeviceArgsArrayOutputWithContext(ctx context.Context) LaunchConfigurationEbsBlockDeviceArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationEbsBlockDeviceArgsArrayOutput)
}

type LaunchConfigurationEbsBlockDeviceArgsOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationEbsBlockDeviceArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationEbsBlockDeviceArgs)(nil)).Elem()
}

func (o LaunchConfigurationEbsBlockDeviceArgsOutput) ToLaunchConfigurationEbsBlockDeviceArgsOutput() LaunchConfigurationEbsBlockDeviceArgsOutput {
	return o
}

func (o LaunchConfigurationEbsBlockDeviceArgsOutput) ToLaunchConfigurationEbsBlockDeviceArgsOutputWithContext(ctx context.Context) LaunchConfigurationEbsBlockDeviceArgsOutput {
	return o
}

func (o LaunchConfigurationEbsBlockDeviceArgsOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDeviceArgs) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o LaunchConfigurationEbsBlockDeviceArgsOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDeviceArgs) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o LaunchConfigurationEbsBlockDeviceArgsOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDeviceArgs) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o LaunchConfigurationEbsBlockDeviceArgsOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDeviceArgs) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o LaunchConfigurationEbsBlockDeviceArgsOutput) NoDevice() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDeviceArgs) *bool { return v.NoDevice }).(pulumi.BoolPtrOutput)
}

func (o LaunchConfigurationEbsBlockDeviceArgsOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDeviceArgs) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

func (o LaunchConfigurationEbsBlockDeviceArgsOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDeviceArgs) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

func (o LaunchConfigurationEbsBlockDeviceArgsOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDeviceArgs) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type LaunchConfigurationEbsBlockDeviceArgsArrayOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationEbsBlockDeviceArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchConfigurationEbsBlockDeviceArgs)(nil)).Elem()
}

func (o LaunchConfigurationEbsBlockDeviceArgsArrayOutput) ToLaunchConfigurationEbsBlockDeviceArgsArrayOutput() LaunchConfigurationEbsBlockDeviceArgsArrayOutput {
	return o
}

func (o LaunchConfigurationEbsBlockDeviceArgsArrayOutput) ToLaunchConfigurationEbsBlockDeviceArgsArrayOutputWithContext(ctx context.Context) LaunchConfigurationEbsBlockDeviceArgsArrayOutput {
	return o
}

func (o LaunchConfigurationEbsBlockDeviceArgsArrayOutput) Index(i pulumi.IntInput) LaunchConfigurationEbsBlockDeviceArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchConfigurationEbsBlockDeviceArgs {
		return vs[0].([]LaunchConfigurationEbsBlockDeviceArgs)[vs[1].(int)]
	}).(LaunchConfigurationEbsBlockDeviceArgsOutput)
}

type LaunchConfigurationEbsBlockDeviceState struct {
	DeleteOnTermination *bool   `pulumi:"deleteOnTermination"`
	DeviceName          string  `pulumi:"deviceName"`
	Encrypted           *bool   `pulumi:"encrypted"`
	Iops                *int    `pulumi:"iops"`
	NoDevice            *bool   `pulumi:"noDevice"`
	SnapshotId          *string `pulumi:"snapshotId"`
	VolumeSize          *int    `pulumi:"volumeSize"`
	VolumeType          *string `pulumi:"volumeType"`
}

type LaunchConfigurationEbsBlockDeviceStateInput interface {
	pulumi.Input

	ToLaunchConfigurationEbsBlockDeviceStateOutput() LaunchConfigurationEbsBlockDeviceStateOutput
	ToLaunchConfigurationEbsBlockDeviceStateOutputWithContext(context.Context) LaunchConfigurationEbsBlockDeviceStateOutput
}

type LaunchConfigurationEbsBlockDeviceStateArgs struct {
	DeleteOnTermination pulumi.BoolPtrInput   `pulumi:"deleteOnTermination"`
	DeviceName          pulumi.StringInput    `pulumi:"deviceName"`
	Encrypted           pulumi.BoolPtrInput   `pulumi:"encrypted"`
	Iops                pulumi.IntPtrInput    `pulumi:"iops"`
	NoDevice            pulumi.BoolPtrInput   `pulumi:"noDevice"`
	SnapshotId          pulumi.StringPtrInput `pulumi:"snapshotId"`
	VolumeSize          pulumi.IntPtrInput    `pulumi:"volumeSize"`
	VolumeType          pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (LaunchConfigurationEbsBlockDeviceStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationEbsBlockDeviceState)(nil)).Elem()
}

func (i LaunchConfigurationEbsBlockDeviceStateArgs) ToLaunchConfigurationEbsBlockDeviceStateOutput() LaunchConfigurationEbsBlockDeviceStateOutput {
	return i.ToLaunchConfigurationEbsBlockDeviceStateOutputWithContext(context.Background())
}

func (i LaunchConfigurationEbsBlockDeviceStateArgs) ToLaunchConfigurationEbsBlockDeviceStateOutputWithContext(ctx context.Context) LaunchConfigurationEbsBlockDeviceStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationEbsBlockDeviceStateOutput)
}

type LaunchConfigurationEbsBlockDeviceStateArrayInput interface {
	pulumi.Input

	ToLaunchConfigurationEbsBlockDeviceStateArrayOutput() LaunchConfigurationEbsBlockDeviceStateArrayOutput
	ToLaunchConfigurationEbsBlockDeviceStateArrayOutputWithContext(context.Context) LaunchConfigurationEbsBlockDeviceStateArrayOutput
}

type LaunchConfigurationEbsBlockDeviceStateArray []LaunchConfigurationEbsBlockDeviceStateInput

func (LaunchConfigurationEbsBlockDeviceStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchConfigurationEbsBlockDeviceState)(nil)).Elem()
}

func (i LaunchConfigurationEbsBlockDeviceStateArray) ToLaunchConfigurationEbsBlockDeviceStateArrayOutput() LaunchConfigurationEbsBlockDeviceStateArrayOutput {
	return i.ToLaunchConfigurationEbsBlockDeviceStateArrayOutputWithContext(context.Background())
}

func (i LaunchConfigurationEbsBlockDeviceStateArray) ToLaunchConfigurationEbsBlockDeviceStateArrayOutputWithContext(ctx context.Context) LaunchConfigurationEbsBlockDeviceStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationEbsBlockDeviceStateArrayOutput)
}

type LaunchConfigurationEbsBlockDeviceStateOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationEbsBlockDeviceStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationEbsBlockDeviceState)(nil)).Elem()
}

func (o LaunchConfigurationEbsBlockDeviceStateOutput) ToLaunchConfigurationEbsBlockDeviceStateOutput() LaunchConfigurationEbsBlockDeviceStateOutput {
	return o
}

func (o LaunchConfigurationEbsBlockDeviceStateOutput) ToLaunchConfigurationEbsBlockDeviceStateOutputWithContext(ctx context.Context) LaunchConfigurationEbsBlockDeviceStateOutput {
	return o
}

func (o LaunchConfigurationEbsBlockDeviceStateOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDeviceState) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o LaunchConfigurationEbsBlockDeviceStateOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDeviceState) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o LaunchConfigurationEbsBlockDeviceStateOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDeviceState) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o LaunchConfigurationEbsBlockDeviceStateOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDeviceState) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o LaunchConfigurationEbsBlockDeviceStateOutput) NoDevice() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDeviceState) *bool { return v.NoDevice }).(pulumi.BoolPtrOutput)
}

func (o LaunchConfigurationEbsBlockDeviceStateOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDeviceState) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

func (o LaunchConfigurationEbsBlockDeviceStateOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDeviceState) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

func (o LaunchConfigurationEbsBlockDeviceStateOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDeviceState) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type LaunchConfigurationEbsBlockDeviceStateArrayOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationEbsBlockDeviceStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchConfigurationEbsBlockDeviceState)(nil)).Elem()
}

func (o LaunchConfigurationEbsBlockDeviceStateArrayOutput) ToLaunchConfigurationEbsBlockDeviceStateArrayOutput() LaunchConfigurationEbsBlockDeviceStateArrayOutput {
	return o
}

func (o LaunchConfigurationEbsBlockDeviceStateArrayOutput) ToLaunchConfigurationEbsBlockDeviceStateArrayOutputWithContext(ctx context.Context) LaunchConfigurationEbsBlockDeviceStateArrayOutput {
	return o
}

func (o LaunchConfigurationEbsBlockDeviceStateArrayOutput) Index(i pulumi.IntInput) LaunchConfigurationEbsBlockDeviceStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchConfigurationEbsBlockDeviceState {
		return vs[0].([]LaunchConfigurationEbsBlockDeviceState)[vs[1].(int)]
	}).(LaunchConfigurationEbsBlockDeviceStateOutput)
}

type LaunchConfigurationEphemeralBlockDevice struct {
	DeviceName  string `pulumi:"deviceName"`
	VirtualName string `pulumi:"virtualName"`
}

type LaunchConfigurationEphemeralBlockDeviceInput interface {
	pulumi.Input

	ToLaunchConfigurationEphemeralBlockDeviceOutput() LaunchConfigurationEphemeralBlockDeviceOutput
	ToLaunchConfigurationEphemeralBlockDeviceOutputWithContext(context.Context) LaunchConfigurationEphemeralBlockDeviceOutput
}

type LaunchConfigurationEphemeralBlockDeviceArgs struct {
	DeviceName  pulumi.StringInput `pulumi:"deviceName"`
	VirtualName pulumi.StringInput `pulumi:"virtualName"`
}

func (LaunchConfigurationEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationEphemeralBlockDevice)(nil)).Elem()
}

func (i LaunchConfigurationEphemeralBlockDeviceArgs) ToLaunchConfigurationEphemeralBlockDeviceOutput() LaunchConfigurationEphemeralBlockDeviceOutput {
	return i.ToLaunchConfigurationEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i LaunchConfigurationEphemeralBlockDeviceArgs) ToLaunchConfigurationEphemeralBlockDeviceOutputWithContext(ctx context.Context) LaunchConfigurationEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationEphemeralBlockDeviceOutput)
}

type LaunchConfigurationEphemeralBlockDeviceArrayInput interface {
	pulumi.Input

	ToLaunchConfigurationEphemeralBlockDeviceArrayOutput() LaunchConfigurationEphemeralBlockDeviceArrayOutput
	ToLaunchConfigurationEphemeralBlockDeviceArrayOutputWithContext(context.Context) LaunchConfigurationEphemeralBlockDeviceArrayOutput
}

type LaunchConfigurationEphemeralBlockDeviceArray []LaunchConfigurationEphemeralBlockDeviceInput

func (LaunchConfigurationEphemeralBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchConfigurationEphemeralBlockDevice)(nil)).Elem()
}

func (i LaunchConfigurationEphemeralBlockDeviceArray) ToLaunchConfigurationEphemeralBlockDeviceArrayOutput() LaunchConfigurationEphemeralBlockDeviceArrayOutput {
	return i.ToLaunchConfigurationEphemeralBlockDeviceArrayOutputWithContext(context.Background())
}

func (i LaunchConfigurationEphemeralBlockDeviceArray) ToLaunchConfigurationEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) LaunchConfigurationEphemeralBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationEphemeralBlockDeviceArrayOutput)
}

type LaunchConfigurationEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationEphemeralBlockDevice)(nil)).Elem()
}

func (o LaunchConfigurationEphemeralBlockDeviceOutput) ToLaunchConfigurationEphemeralBlockDeviceOutput() LaunchConfigurationEphemeralBlockDeviceOutput {
	return o
}

func (o LaunchConfigurationEphemeralBlockDeviceOutput) ToLaunchConfigurationEphemeralBlockDeviceOutputWithContext(ctx context.Context) LaunchConfigurationEphemeralBlockDeviceOutput {
	return o
}

func (o LaunchConfigurationEphemeralBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchConfigurationEphemeralBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o LaunchConfigurationEphemeralBlockDeviceOutput) VirtualName() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchConfigurationEphemeralBlockDevice) string { return v.VirtualName }).(pulumi.StringOutput)
}

type LaunchConfigurationEphemeralBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationEphemeralBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchConfigurationEphemeralBlockDevice)(nil)).Elem()
}

func (o LaunchConfigurationEphemeralBlockDeviceArrayOutput) ToLaunchConfigurationEphemeralBlockDeviceArrayOutput() LaunchConfigurationEphemeralBlockDeviceArrayOutput {
	return o
}

func (o LaunchConfigurationEphemeralBlockDeviceArrayOutput) ToLaunchConfigurationEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) LaunchConfigurationEphemeralBlockDeviceArrayOutput {
	return o
}

func (o LaunchConfigurationEphemeralBlockDeviceArrayOutput) Index(i pulumi.IntInput) LaunchConfigurationEphemeralBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchConfigurationEphemeralBlockDevice {
		return vs[0].([]LaunchConfigurationEphemeralBlockDevice)[vs[1].(int)]
	}).(LaunchConfigurationEphemeralBlockDeviceOutput)
}

type LaunchConfigurationEphemeralBlockDeviceArgs struct {
	DeviceName  string `pulumi:"deviceName"`
	VirtualName string `pulumi:"virtualName"`
}

type LaunchConfigurationEphemeralBlockDeviceArgsInput interface {
	pulumi.Input

	ToLaunchConfigurationEphemeralBlockDeviceArgsOutput() LaunchConfigurationEphemeralBlockDeviceArgsOutput
	ToLaunchConfigurationEphemeralBlockDeviceArgsOutputWithContext(context.Context) LaunchConfigurationEphemeralBlockDeviceArgsOutput
}

type LaunchConfigurationEphemeralBlockDeviceArgsArgs struct {
	DeviceName  pulumi.StringInput `pulumi:"deviceName"`
	VirtualName pulumi.StringInput `pulumi:"virtualName"`
}

func (LaunchConfigurationEphemeralBlockDeviceArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationEphemeralBlockDeviceArgs)(nil)).Elem()
}

func (i LaunchConfigurationEphemeralBlockDeviceArgsArgs) ToLaunchConfigurationEphemeralBlockDeviceArgsOutput() LaunchConfigurationEphemeralBlockDeviceArgsOutput {
	return i.ToLaunchConfigurationEphemeralBlockDeviceArgsOutputWithContext(context.Background())
}

func (i LaunchConfigurationEphemeralBlockDeviceArgsArgs) ToLaunchConfigurationEphemeralBlockDeviceArgsOutputWithContext(ctx context.Context) LaunchConfigurationEphemeralBlockDeviceArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationEphemeralBlockDeviceArgsOutput)
}

type LaunchConfigurationEphemeralBlockDeviceArgsArrayInput interface {
	pulumi.Input

	ToLaunchConfigurationEphemeralBlockDeviceArgsArrayOutput() LaunchConfigurationEphemeralBlockDeviceArgsArrayOutput
	ToLaunchConfigurationEphemeralBlockDeviceArgsArrayOutputWithContext(context.Context) LaunchConfigurationEphemeralBlockDeviceArgsArrayOutput
}

type LaunchConfigurationEphemeralBlockDeviceArgsArray []LaunchConfigurationEphemeralBlockDeviceArgsInput

func (LaunchConfigurationEphemeralBlockDeviceArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchConfigurationEphemeralBlockDeviceArgs)(nil)).Elem()
}

func (i LaunchConfigurationEphemeralBlockDeviceArgsArray) ToLaunchConfigurationEphemeralBlockDeviceArgsArrayOutput() LaunchConfigurationEphemeralBlockDeviceArgsArrayOutput {
	return i.ToLaunchConfigurationEphemeralBlockDeviceArgsArrayOutputWithContext(context.Background())
}

func (i LaunchConfigurationEphemeralBlockDeviceArgsArray) ToLaunchConfigurationEphemeralBlockDeviceArgsArrayOutputWithContext(ctx context.Context) LaunchConfigurationEphemeralBlockDeviceArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationEphemeralBlockDeviceArgsArrayOutput)
}

type LaunchConfigurationEphemeralBlockDeviceArgsOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationEphemeralBlockDeviceArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationEphemeralBlockDeviceArgs)(nil)).Elem()
}

func (o LaunchConfigurationEphemeralBlockDeviceArgsOutput) ToLaunchConfigurationEphemeralBlockDeviceArgsOutput() LaunchConfigurationEphemeralBlockDeviceArgsOutput {
	return o
}

func (o LaunchConfigurationEphemeralBlockDeviceArgsOutput) ToLaunchConfigurationEphemeralBlockDeviceArgsOutputWithContext(ctx context.Context) LaunchConfigurationEphemeralBlockDeviceArgsOutput {
	return o
}

func (o LaunchConfigurationEphemeralBlockDeviceArgsOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchConfigurationEphemeralBlockDeviceArgs) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o LaunchConfigurationEphemeralBlockDeviceArgsOutput) VirtualName() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchConfigurationEphemeralBlockDeviceArgs) string { return v.VirtualName }).(pulumi.StringOutput)
}

type LaunchConfigurationEphemeralBlockDeviceArgsArrayOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationEphemeralBlockDeviceArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchConfigurationEphemeralBlockDeviceArgs)(nil)).Elem()
}

func (o LaunchConfigurationEphemeralBlockDeviceArgsArrayOutput) ToLaunchConfigurationEphemeralBlockDeviceArgsArrayOutput() LaunchConfigurationEphemeralBlockDeviceArgsArrayOutput {
	return o
}

func (o LaunchConfigurationEphemeralBlockDeviceArgsArrayOutput) ToLaunchConfigurationEphemeralBlockDeviceArgsArrayOutputWithContext(ctx context.Context) LaunchConfigurationEphemeralBlockDeviceArgsArrayOutput {
	return o
}

func (o LaunchConfigurationEphemeralBlockDeviceArgsArrayOutput) Index(i pulumi.IntInput) LaunchConfigurationEphemeralBlockDeviceArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchConfigurationEphemeralBlockDeviceArgs {
		return vs[0].([]LaunchConfigurationEphemeralBlockDeviceArgs)[vs[1].(int)]
	}).(LaunchConfigurationEphemeralBlockDeviceArgsOutput)
}

type LaunchConfigurationEphemeralBlockDeviceState struct {
	DeviceName  string `pulumi:"deviceName"`
	VirtualName string `pulumi:"virtualName"`
}

type LaunchConfigurationEphemeralBlockDeviceStateInput interface {
	pulumi.Input

	ToLaunchConfigurationEphemeralBlockDeviceStateOutput() LaunchConfigurationEphemeralBlockDeviceStateOutput
	ToLaunchConfigurationEphemeralBlockDeviceStateOutputWithContext(context.Context) LaunchConfigurationEphemeralBlockDeviceStateOutput
}

type LaunchConfigurationEphemeralBlockDeviceStateArgs struct {
	DeviceName  pulumi.StringInput `pulumi:"deviceName"`
	VirtualName pulumi.StringInput `pulumi:"virtualName"`
}

func (LaunchConfigurationEphemeralBlockDeviceStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationEphemeralBlockDeviceState)(nil)).Elem()
}

func (i LaunchConfigurationEphemeralBlockDeviceStateArgs) ToLaunchConfigurationEphemeralBlockDeviceStateOutput() LaunchConfigurationEphemeralBlockDeviceStateOutput {
	return i.ToLaunchConfigurationEphemeralBlockDeviceStateOutputWithContext(context.Background())
}

func (i LaunchConfigurationEphemeralBlockDeviceStateArgs) ToLaunchConfigurationEphemeralBlockDeviceStateOutputWithContext(ctx context.Context) LaunchConfigurationEphemeralBlockDeviceStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationEphemeralBlockDeviceStateOutput)
}

type LaunchConfigurationEphemeralBlockDeviceStateArrayInput interface {
	pulumi.Input

	ToLaunchConfigurationEphemeralBlockDeviceStateArrayOutput() LaunchConfigurationEphemeralBlockDeviceStateArrayOutput
	ToLaunchConfigurationEphemeralBlockDeviceStateArrayOutputWithContext(context.Context) LaunchConfigurationEphemeralBlockDeviceStateArrayOutput
}

type LaunchConfigurationEphemeralBlockDeviceStateArray []LaunchConfigurationEphemeralBlockDeviceStateInput

func (LaunchConfigurationEphemeralBlockDeviceStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchConfigurationEphemeralBlockDeviceState)(nil)).Elem()
}

func (i LaunchConfigurationEphemeralBlockDeviceStateArray) ToLaunchConfigurationEphemeralBlockDeviceStateArrayOutput() LaunchConfigurationEphemeralBlockDeviceStateArrayOutput {
	return i.ToLaunchConfigurationEphemeralBlockDeviceStateArrayOutputWithContext(context.Background())
}

func (i LaunchConfigurationEphemeralBlockDeviceStateArray) ToLaunchConfigurationEphemeralBlockDeviceStateArrayOutputWithContext(ctx context.Context) LaunchConfigurationEphemeralBlockDeviceStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationEphemeralBlockDeviceStateArrayOutput)
}

type LaunchConfigurationEphemeralBlockDeviceStateOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationEphemeralBlockDeviceStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationEphemeralBlockDeviceState)(nil)).Elem()
}

func (o LaunchConfigurationEphemeralBlockDeviceStateOutput) ToLaunchConfigurationEphemeralBlockDeviceStateOutput() LaunchConfigurationEphemeralBlockDeviceStateOutput {
	return o
}

func (o LaunchConfigurationEphemeralBlockDeviceStateOutput) ToLaunchConfigurationEphemeralBlockDeviceStateOutputWithContext(ctx context.Context) LaunchConfigurationEphemeralBlockDeviceStateOutput {
	return o
}

func (o LaunchConfigurationEphemeralBlockDeviceStateOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchConfigurationEphemeralBlockDeviceState) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o LaunchConfigurationEphemeralBlockDeviceStateOutput) VirtualName() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchConfigurationEphemeralBlockDeviceState) string { return v.VirtualName }).(pulumi.StringOutput)
}

type LaunchConfigurationEphemeralBlockDeviceStateArrayOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationEphemeralBlockDeviceStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchConfigurationEphemeralBlockDeviceState)(nil)).Elem()
}

func (o LaunchConfigurationEphemeralBlockDeviceStateArrayOutput) ToLaunchConfigurationEphemeralBlockDeviceStateArrayOutput() LaunchConfigurationEphemeralBlockDeviceStateArrayOutput {
	return o
}

func (o LaunchConfigurationEphemeralBlockDeviceStateArrayOutput) ToLaunchConfigurationEphemeralBlockDeviceStateArrayOutputWithContext(ctx context.Context) LaunchConfigurationEphemeralBlockDeviceStateArrayOutput {
	return o
}

func (o LaunchConfigurationEphemeralBlockDeviceStateArrayOutput) Index(i pulumi.IntInput) LaunchConfigurationEphemeralBlockDeviceStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchConfigurationEphemeralBlockDeviceState {
		return vs[0].([]LaunchConfigurationEphemeralBlockDeviceState)[vs[1].(int)]
	}).(LaunchConfigurationEphemeralBlockDeviceStateOutput)
}

type LaunchConfigurationRootBlockDevice struct {
	DeleteOnTermination *bool  `pulumi:"deleteOnTermination"`
	Encrypted           bool   `pulumi:"encrypted"`
	Iops                int    `pulumi:"iops"`
	VolumeSize          int    `pulumi:"volumeSize"`
	VolumeType          string `pulumi:"volumeType"`
}

type LaunchConfigurationRootBlockDeviceInput interface {
	pulumi.Input

	ToLaunchConfigurationRootBlockDeviceOutput() LaunchConfigurationRootBlockDeviceOutput
	ToLaunchConfigurationRootBlockDeviceOutputWithContext(context.Context) LaunchConfigurationRootBlockDeviceOutput
}

type LaunchConfigurationRootBlockDeviceArgs struct {
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	Encrypted           pulumi.BoolInput    `pulumi:"encrypted"`
	Iops                pulumi.IntInput     `pulumi:"iops"`
	VolumeSize          pulumi.IntInput     `pulumi:"volumeSize"`
	VolumeType          pulumi.StringInput  `pulumi:"volumeType"`
}

func (LaunchConfigurationRootBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationRootBlockDevice)(nil)).Elem()
}

func (i LaunchConfigurationRootBlockDeviceArgs) ToLaunchConfigurationRootBlockDeviceOutput() LaunchConfigurationRootBlockDeviceOutput {
	return i.ToLaunchConfigurationRootBlockDeviceOutputWithContext(context.Background())
}

func (i LaunchConfigurationRootBlockDeviceArgs) ToLaunchConfigurationRootBlockDeviceOutputWithContext(ctx context.Context) LaunchConfigurationRootBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationRootBlockDeviceOutput)
}

func (i LaunchConfigurationRootBlockDeviceArgs) ToLaunchConfigurationRootBlockDevicePtrOutput() LaunchConfigurationRootBlockDevicePtrOutput {
	return i.ToLaunchConfigurationRootBlockDevicePtrOutputWithContext(context.Background())
}

func (i LaunchConfigurationRootBlockDeviceArgs) ToLaunchConfigurationRootBlockDevicePtrOutputWithContext(ctx context.Context) LaunchConfigurationRootBlockDevicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationRootBlockDeviceOutput).ToLaunchConfigurationRootBlockDevicePtrOutputWithContext(ctx)
}

type LaunchConfigurationRootBlockDevicePtrInput interface {
	pulumi.Input

	ToLaunchConfigurationRootBlockDevicePtrOutput() LaunchConfigurationRootBlockDevicePtrOutput
	ToLaunchConfigurationRootBlockDevicePtrOutputWithContext(context.Context) LaunchConfigurationRootBlockDevicePtrOutput
}

type launchConfigurationRootBlockDevicePtrType LaunchConfigurationRootBlockDeviceArgs

func LaunchConfigurationRootBlockDevicePtr(v *LaunchConfigurationRootBlockDeviceArgs) LaunchConfigurationRootBlockDevicePtrInput {
	return (*launchConfigurationRootBlockDevicePtrType)(v)
}

func (*launchConfigurationRootBlockDevicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchConfigurationRootBlockDevice)(nil)).Elem()
}

func (i *launchConfigurationRootBlockDevicePtrType) ToLaunchConfigurationRootBlockDevicePtrOutput() LaunchConfigurationRootBlockDevicePtrOutput {
	return i.ToLaunchConfigurationRootBlockDevicePtrOutputWithContext(context.Background())
}

func (i *launchConfigurationRootBlockDevicePtrType) ToLaunchConfigurationRootBlockDevicePtrOutputWithContext(ctx context.Context) LaunchConfigurationRootBlockDevicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationRootBlockDevicePtrOutput)
}

type LaunchConfigurationRootBlockDeviceOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationRootBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationRootBlockDevice)(nil)).Elem()
}

func (o LaunchConfigurationRootBlockDeviceOutput) ToLaunchConfigurationRootBlockDeviceOutput() LaunchConfigurationRootBlockDeviceOutput {
	return o
}

func (o LaunchConfigurationRootBlockDeviceOutput) ToLaunchConfigurationRootBlockDeviceOutputWithContext(ctx context.Context) LaunchConfigurationRootBlockDeviceOutput {
	return o
}

func (o LaunchConfigurationRootBlockDeviceOutput) ToLaunchConfigurationRootBlockDevicePtrOutput() LaunchConfigurationRootBlockDevicePtrOutput {
	return o.ToLaunchConfigurationRootBlockDevicePtrOutputWithContext(context.Background())
}

func (o LaunchConfigurationRootBlockDeviceOutput) ToLaunchConfigurationRootBlockDevicePtrOutputWithContext(ctx context.Context) LaunchConfigurationRootBlockDevicePtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDevice) *LaunchConfigurationRootBlockDevice {
		return &v
	}).(LaunchConfigurationRootBlockDevicePtrOutput)
}
func (o LaunchConfigurationRootBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o LaunchConfigurationRootBlockDeviceOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDevice) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

func (o LaunchConfigurationRootBlockDeviceOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDevice) int { return v.Iops }).(pulumi.IntOutput)
}

func (o LaunchConfigurationRootBlockDeviceOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDevice) int { return v.VolumeSize }).(pulumi.IntOutput)
}

func (o LaunchConfigurationRootBlockDeviceOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDevice) string { return v.VolumeType }).(pulumi.StringOutput)
}

type LaunchConfigurationRootBlockDevicePtrOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationRootBlockDevicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchConfigurationRootBlockDevice)(nil)).Elem()
}

func (o LaunchConfigurationRootBlockDevicePtrOutput) ToLaunchConfigurationRootBlockDevicePtrOutput() LaunchConfigurationRootBlockDevicePtrOutput {
	return o
}

func (o LaunchConfigurationRootBlockDevicePtrOutput) ToLaunchConfigurationRootBlockDevicePtrOutputWithContext(ctx context.Context) LaunchConfigurationRootBlockDevicePtrOutput {
	return o
}

func (o LaunchConfigurationRootBlockDevicePtrOutput) Elem() LaunchConfigurationRootBlockDeviceOutput {
	return o.ApplyT(func(v *LaunchConfigurationRootBlockDevice) LaunchConfigurationRootBlockDevice { return *v }).(LaunchConfigurationRootBlockDeviceOutput)
}

func (o LaunchConfigurationRootBlockDevicePtrOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o LaunchConfigurationRootBlockDevicePtrOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDevice) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

func (o LaunchConfigurationRootBlockDevicePtrOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDevice) int { return v.Iops }).(pulumi.IntOutput)
}

func (o LaunchConfigurationRootBlockDevicePtrOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDevice) int { return v.VolumeSize }).(pulumi.IntOutput)
}

func (o LaunchConfigurationRootBlockDevicePtrOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDevice) string { return v.VolumeType }).(pulumi.StringOutput)
}

type LaunchConfigurationRootBlockDeviceArgs struct {
	DeleteOnTermination *bool   `pulumi:"deleteOnTermination"`
	Encrypted           *bool   `pulumi:"encrypted"`
	Iops                *int    `pulumi:"iops"`
	VolumeSize          *int    `pulumi:"volumeSize"`
	VolumeType          *string `pulumi:"volumeType"`
}

type LaunchConfigurationRootBlockDeviceArgsInput interface {
	pulumi.Input

	ToLaunchConfigurationRootBlockDeviceArgsOutput() LaunchConfigurationRootBlockDeviceArgsOutput
	ToLaunchConfigurationRootBlockDeviceArgsOutputWithContext(context.Context) LaunchConfigurationRootBlockDeviceArgsOutput
}

type LaunchConfigurationRootBlockDeviceArgsArgs struct {
	DeleteOnTermination pulumi.BoolPtrInput   `pulumi:"deleteOnTermination"`
	Encrypted           pulumi.BoolPtrInput   `pulumi:"encrypted"`
	Iops                pulumi.IntPtrInput    `pulumi:"iops"`
	VolumeSize          pulumi.IntPtrInput    `pulumi:"volumeSize"`
	VolumeType          pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (LaunchConfigurationRootBlockDeviceArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationRootBlockDeviceArgs)(nil)).Elem()
}

func (i LaunchConfigurationRootBlockDeviceArgsArgs) ToLaunchConfigurationRootBlockDeviceArgsOutput() LaunchConfigurationRootBlockDeviceArgsOutput {
	return i.ToLaunchConfigurationRootBlockDeviceArgsOutputWithContext(context.Background())
}

func (i LaunchConfigurationRootBlockDeviceArgsArgs) ToLaunchConfigurationRootBlockDeviceArgsOutputWithContext(ctx context.Context) LaunchConfigurationRootBlockDeviceArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationRootBlockDeviceArgsOutput)
}

func (i LaunchConfigurationRootBlockDeviceArgsArgs) ToLaunchConfigurationRootBlockDeviceArgsPtrOutput() LaunchConfigurationRootBlockDeviceArgsPtrOutput {
	return i.ToLaunchConfigurationRootBlockDeviceArgsPtrOutputWithContext(context.Background())
}

func (i LaunchConfigurationRootBlockDeviceArgsArgs) ToLaunchConfigurationRootBlockDeviceArgsPtrOutputWithContext(ctx context.Context) LaunchConfigurationRootBlockDeviceArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationRootBlockDeviceArgsOutput).ToLaunchConfigurationRootBlockDeviceArgsPtrOutputWithContext(ctx)
}

type LaunchConfigurationRootBlockDeviceArgsPtrInput interface {
	pulumi.Input

	ToLaunchConfigurationRootBlockDeviceArgsPtrOutput() LaunchConfigurationRootBlockDeviceArgsPtrOutput
	ToLaunchConfigurationRootBlockDeviceArgsPtrOutputWithContext(context.Context) LaunchConfigurationRootBlockDeviceArgsPtrOutput
}

type launchConfigurationRootBlockDeviceArgsPtrType LaunchConfigurationRootBlockDeviceArgsArgs

func LaunchConfigurationRootBlockDeviceArgsPtr(v *LaunchConfigurationRootBlockDeviceArgsArgs) LaunchConfigurationRootBlockDeviceArgsPtrInput {
	return (*launchConfigurationRootBlockDeviceArgsPtrType)(v)
}

func (*launchConfigurationRootBlockDeviceArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchConfigurationRootBlockDeviceArgs)(nil)).Elem()
}

func (i *launchConfigurationRootBlockDeviceArgsPtrType) ToLaunchConfigurationRootBlockDeviceArgsPtrOutput() LaunchConfigurationRootBlockDeviceArgsPtrOutput {
	return i.ToLaunchConfigurationRootBlockDeviceArgsPtrOutputWithContext(context.Background())
}

func (i *launchConfigurationRootBlockDeviceArgsPtrType) ToLaunchConfigurationRootBlockDeviceArgsPtrOutputWithContext(ctx context.Context) LaunchConfigurationRootBlockDeviceArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationRootBlockDeviceArgsPtrOutput)
}

type LaunchConfigurationRootBlockDeviceArgsOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationRootBlockDeviceArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationRootBlockDeviceArgs)(nil)).Elem()
}

func (o LaunchConfigurationRootBlockDeviceArgsOutput) ToLaunchConfigurationRootBlockDeviceArgsOutput() LaunchConfigurationRootBlockDeviceArgsOutput {
	return o
}

func (o LaunchConfigurationRootBlockDeviceArgsOutput) ToLaunchConfigurationRootBlockDeviceArgsOutputWithContext(ctx context.Context) LaunchConfigurationRootBlockDeviceArgsOutput {
	return o
}

func (o LaunchConfigurationRootBlockDeviceArgsOutput) ToLaunchConfigurationRootBlockDeviceArgsPtrOutput() LaunchConfigurationRootBlockDeviceArgsPtrOutput {
	return o.ToLaunchConfigurationRootBlockDeviceArgsPtrOutputWithContext(context.Background())
}

func (o LaunchConfigurationRootBlockDeviceArgsOutput) ToLaunchConfigurationRootBlockDeviceArgsPtrOutputWithContext(ctx context.Context) LaunchConfigurationRootBlockDeviceArgsPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDeviceArgs) *LaunchConfigurationRootBlockDeviceArgs {
		return &v
	}).(LaunchConfigurationRootBlockDeviceArgsPtrOutput)
}
func (o LaunchConfigurationRootBlockDeviceArgsOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDeviceArgs) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o LaunchConfigurationRootBlockDeviceArgsOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDeviceArgs) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o LaunchConfigurationRootBlockDeviceArgsOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDeviceArgs) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o LaunchConfigurationRootBlockDeviceArgsOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDeviceArgs) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

func (o LaunchConfigurationRootBlockDeviceArgsOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDeviceArgs) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type LaunchConfigurationRootBlockDeviceArgsPtrOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationRootBlockDeviceArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchConfigurationRootBlockDeviceArgs)(nil)).Elem()
}

func (o LaunchConfigurationRootBlockDeviceArgsPtrOutput) ToLaunchConfigurationRootBlockDeviceArgsPtrOutput() LaunchConfigurationRootBlockDeviceArgsPtrOutput {
	return o
}

func (o LaunchConfigurationRootBlockDeviceArgsPtrOutput) ToLaunchConfigurationRootBlockDeviceArgsPtrOutputWithContext(ctx context.Context) LaunchConfigurationRootBlockDeviceArgsPtrOutput {
	return o
}

func (o LaunchConfigurationRootBlockDeviceArgsPtrOutput) Elem() LaunchConfigurationRootBlockDeviceArgsOutput {
	return o.ApplyT(func(v *LaunchConfigurationRootBlockDeviceArgs) LaunchConfigurationRootBlockDeviceArgs { return *v }).(LaunchConfigurationRootBlockDeviceArgsOutput)
}

func (o LaunchConfigurationRootBlockDeviceArgsPtrOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDeviceArgs) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o LaunchConfigurationRootBlockDeviceArgsPtrOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDeviceArgs) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o LaunchConfigurationRootBlockDeviceArgsPtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDeviceArgs) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o LaunchConfigurationRootBlockDeviceArgsPtrOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDeviceArgs) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

func (o LaunchConfigurationRootBlockDeviceArgsPtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDeviceArgs) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type LaunchConfigurationRootBlockDeviceState struct {
	DeleteOnTermination *bool   `pulumi:"deleteOnTermination"`
	Encrypted           *bool   `pulumi:"encrypted"`
	Iops                *int    `pulumi:"iops"`
	VolumeSize          *int    `pulumi:"volumeSize"`
	VolumeType          *string `pulumi:"volumeType"`
}

type LaunchConfigurationRootBlockDeviceStateInput interface {
	pulumi.Input

	ToLaunchConfigurationRootBlockDeviceStateOutput() LaunchConfigurationRootBlockDeviceStateOutput
	ToLaunchConfigurationRootBlockDeviceStateOutputWithContext(context.Context) LaunchConfigurationRootBlockDeviceStateOutput
}

type LaunchConfigurationRootBlockDeviceStateArgs struct {
	DeleteOnTermination pulumi.BoolPtrInput   `pulumi:"deleteOnTermination"`
	Encrypted           pulumi.BoolPtrInput   `pulumi:"encrypted"`
	Iops                pulumi.IntPtrInput    `pulumi:"iops"`
	VolumeSize          pulumi.IntPtrInput    `pulumi:"volumeSize"`
	VolumeType          pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (LaunchConfigurationRootBlockDeviceStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationRootBlockDeviceState)(nil)).Elem()
}

func (i LaunchConfigurationRootBlockDeviceStateArgs) ToLaunchConfigurationRootBlockDeviceStateOutput() LaunchConfigurationRootBlockDeviceStateOutput {
	return i.ToLaunchConfigurationRootBlockDeviceStateOutputWithContext(context.Background())
}

func (i LaunchConfigurationRootBlockDeviceStateArgs) ToLaunchConfigurationRootBlockDeviceStateOutputWithContext(ctx context.Context) LaunchConfigurationRootBlockDeviceStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationRootBlockDeviceStateOutput)
}

type LaunchConfigurationRootBlockDeviceStateOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationRootBlockDeviceStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationRootBlockDeviceState)(nil)).Elem()
}

func (o LaunchConfigurationRootBlockDeviceStateOutput) ToLaunchConfigurationRootBlockDeviceStateOutput() LaunchConfigurationRootBlockDeviceStateOutput {
	return o
}

func (o LaunchConfigurationRootBlockDeviceStateOutput) ToLaunchConfigurationRootBlockDeviceStateOutputWithContext(ctx context.Context) LaunchConfigurationRootBlockDeviceStateOutput {
	return o
}

func (o LaunchConfigurationRootBlockDeviceStateOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDeviceState) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o LaunchConfigurationRootBlockDeviceStateOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDeviceState) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o LaunchConfigurationRootBlockDeviceStateOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDeviceState) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o LaunchConfigurationRootBlockDeviceStateOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDeviceState) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

func (o LaunchConfigurationRootBlockDeviceStateOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDeviceState) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type LaunchTemplateBlockDeviceMapping struct {
	// The name of the device to mount.
	DeviceName *string `pulumi:"deviceName"`
	// Configure EBS volume properties.
	Ebs *LaunchTemplateBlockDeviceMappingEbs `pulumi:"ebs"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice *string `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g. `"ephemeral0"`).
	VirtualName *string `pulumi:"virtualName"`
}

type LaunchTemplateBlockDeviceMappingInput interface {
	pulumi.Input

	ToLaunchTemplateBlockDeviceMappingOutput() LaunchTemplateBlockDeviceMappingOutput
	ToLaunchTemplateBlockDeviceMappingOutputWithContext(context.Context) LaunchTemplateBlockDeviceMappingOutput
}

type LaunchTemplateBlockDeviceMappingArgs struct {
	// The name of the device to mount.
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	// Configure EBS volume properties.
	Ebs LaunchTemplateBlockDeviceMappingEbsPtrInput `pulumi:"ebs"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice pulumi.StringPtrInput `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g. `"ephemeral0"`).
	VirtualName pulumi.StringPtrInput `pulumi:"virtualName"`
}

func (LaunchTemplateBlockDeviceMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateBlockDeviceMapping)(nil)).Elem()
}

func (i LaunchTemplateBlockDeviceMappingArgs) ToLaunchTemplateBlockDeviceMappingOutput() LaunchTemplateBlockDeviceMappingOutput {
	return i.ToLaunchTemplateBlockDeviceMappingOutputWithContext(context.Background())
}

func (i LaunchTemplateBlockDeviceMappingArgs) ToLaunchTemplateBlockDeviceMappingOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateBlockDeviceMappingOutput)
}

type LaunchTemplateBlockDeviceMappingArrayInput interface {
	pulumi.Input

	ToLaunchTemplateBlockDeviceMappingArrayOutput() LaunchTemplateBlockDeviceMappingArrayOutput
	ToLaunchTemplateBlockDeviceMappingArrayOutputWithContext(context.Context) LaunchTemplateBlockDeviceMappingArrayOutput
}

type LaunchTemplateBlockDeviceMappingArray []LaunchTemplateBlockDeviceMappingInput

func (LaunchTemplateBlockDeviceMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateBlockDeviceMapping)(nil)).Elem()
}

func (i LaunchTemplateBlockDeviceMappingArray) ToLaunchTemplateBlockDeviceMappingArrayOutput() LaunchTemplateBlockDeviceMappingArrayOutput {
	return i.ToLaunchTemplateBlockDeviceMappingArrayOutputWithContext(context.Background())
}

func (i LaunchTemplateBlockDeviceMappingArray) ToLaunchTemplateBlockDeviceMappingArrayOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateBlockDeviceMappingArrayOutput)
}

type LaunchTemplateBlockDeviceMappingOutput struct{ *pulumi.OutputState }

func (LaunchTemplateBlockDeviceMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateBlockDeviceMapping)(nil)).Elem()
}

func (o LaunchTemplateBlockDeviceMappingOutput) ToLaunchTemplateBlockDeviceMappingOutput() LaunchTemplateBlockDeviceMappingOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingOutput) ToLaunchTemplateBlockDeviceMappingOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingOutput {
	return o
}

// The name of the device to mount.
func (o LaunchTemplateBlockDeviceMappingOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMapping) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

// Configure EBS volume properties.
func (o LaunchTemplateBlockDeviceMappingOutput) Ebs() LaunchTemplateBlockDeviceMappingEbsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMapping) *LaunchTemplateBlockDeviceMappingEbs { return v.Ebs }).(LaunchTemplateBlockDeviceMappingEbsPtrOutput)
}

// Suppresses the specified device included in the AMI's block device mapping.
func (o LaunchTemplateBlockDeviceMappingOutput) NoDevice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMapping) *string { return v.NoDevice }).(pulumi.StringPtrOutput)
}

// The [Instance Store Device
// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
// (e.g. `"ephemeral0"`).
func (o LaunchTemplateBlockDeviceMappingOutput) VirtualName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMapping) *string { return v.VirtualName }).(pulumi.StringPtrOutput)
}

type LaunchTemplateBlockDeviceMappingArrayOutput struct{ *pulumi.OutputState }

func (LaunchTemplateBlockDeviceMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateBlockDeviceMapping)(nil)).Elem()
}

func (o LaunchTemplateBlockDeviceMappingArrayOutput) ToLaunchTemplateBlockDeviceMappingArrayOutput() LaunchTemplateBlockDeviceMappingArrayOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingArrayOutput) ToLaunchTemplateBlockDeviceMappingArrayOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingArrayOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingArrayOutput) Index(i pulumi.IntInput) LaunchTemplateBlockDeviceMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchTemplateBlockDeviceMapping {
		return vs[0].([]LaunchTemplateBlockDeviceMapping)[vs[1].(int)]
	}).(LaunchTemplateBlockDeviceMappingOutput)
}

type LaunchTemplateBlockDeviceMappingArgs struct {
	// The name of the device to mount.
	DeviceName *string `pulumi:"deviceName"`
	// Configure EBS volume properties.
	Ebs *LaunchTemplateBlockDeviceMappingEbsArgs `pulumi:"ebs"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice *string `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g. `"ephemeral0"`).
	VirtualName *string `pulumi:"virtualName"`
}

type LaunchTemplateBlockDeviceMappingArgsInput interface {
	pulumi.Input

	ToLaunchTemplateBlockDeviceMappingArgsOutput() LaunchTemplateBlockDeviceMappingArgsOutput
	ToLaunchTemplateBlockDeviceMappingArgsOutputWithContext(context.Context) LaunchTemplateBlockDeviceMappingArgsOutput
}

type LaunchTemplateBlockDeviceMappingArgsArgs struct {
	// The name of the device to mount.
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	// Configure EBS volume properties.
	Ebs LaunchTemplateBlockDeviceMappingEbsArgsPtrInput `pulumi:"ebs"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice pulumi.StringPtrInput `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g. `"ephemeral0"`).
	VirtualName pulumi.StringPtrInput `pulumi:"virtualName"`
}

func (LaunchTemplateBlockDeviceMappingArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateBlockDeviceMappingArgs)(nil)).Elem()
}

func (i LaunchTemplateBlockDeviceMappingArgsArgs) ToLaunchTemplateBlockDeviceMappingArgsOutput() LaunchTemplateBlockDeviceMappingArgsOutput {
	return i.ToLaunchTemplateBlockDeviceMappingArgsOutputWithContext(context.Background())
}

func (i LaunchTemplateBlockDeviceMappingArgsArgs) ToLaunchTemplateBlockDeviceMappingArgsOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateBlockDeviceMappingArgsOutput)
}

type LaunchTemplateBlockDeviceMappingArgsArrayInput interface {
	pulumi.Input

	ToLaunchTemplateBlockDeviceMappingArgsArrayOutput() LaunchTemplateBlockDeviceMappingArgsArrayOutput
	ToLaunchTemplateBlockDeviceMappingArgsArrayOutputWithContext(context.Context) LaunchTemplateBlockDeviceMappingArgsArrayOutput
}

type LaunchTemplateBlockDeviceMappingArgsArray []LaunchTemplateBlockDeviceMappingArgsInput

func (LaunchTemplateBlockDeviceMappingArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateBlockDeviceMappingArgs)(nil)).Elem()
}

func (i LaunchTemplateBlockDeviceMappingArgsArray) ToLaunchTemplateBlockDeviceMappingArgsArrayOutput() LaunchTemplateBlockDeviceMappingArgsArrayOutput {
	return i.ToLaunchTemplateBlockDeviceMappingArgsArrayOutputWithContext(context.Background())
}

func (i LaunchTemplateBlockDeviceMappingArgsArray) ToLaunchTemplateBlockDeviceMappingArgsArrayOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateBlockDeviceMappingArgsArrayOutput)
}

type LaunchTemplateBlockDeviceMappingArgsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateBlockDeviceMappingArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateBlockDeviceMappingArgs)(nil)).Elem()
}

func (o LaunchTemplateBlockDeviceMappingArgsOutput) ToLaunchTemplateBlockDeviceMappingArgsOutput() LaunchTemplateBlockDeviceMappingArgsOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingArgsOutput) ToLaunchTemplateBlockDeviceMappingArgsOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingArgsOutput {
	return o
}

// The name of the device to mount.
func (o LaunchTemplateBlockDeviceMappingArgsOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingArgs) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

// Configure EBS volume properties.
func (o LaunchTemplateBlockDeviceMappingArgsOutput) Ebs() LaunchTemplateBlockDeviceMappingEbsArgsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingArgs) *LaunchTemplateBlockDeviceMappingEbsArgs { return v.Ebs }).(LaunchTemplateBlockDeviceMappingEbsArgsPtrOutput)
}

// Suppresses the specified device included in the AMI's block device mapping.
func (o LaunchTemplateBlockDeviceMappingArgsOutput) NoDevice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingArgs) *string { return v.NoDevice }).(pulumi.StringPtrOutput)
}

// The [Instance Store Device
// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
// (e.g. `"ephemeral0"`).
func (o LaunchTemplateBlockDeviceMappingArgsOutput) VirtualName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingArgs) *string { return v.VirtualName }).(pulumi.StringPtrOutput)
}

type LaunchTemplateBlockDeviceMappingArgsArrayOutput struct{ *pulumi.OutputState }

func (LaunchTemplateBlockDeviceMappingArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateBlockDeviceMappingArgs)(nil)).Elem()
}

func (o LaunchTemplateBlockDeviceMappingArgsArrayOutput) ToLaunchTemplateBlockDeviceMappingArgsArrayOutput() LaunchTemplateBlockDeviceMappingArgsArrayOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingArgsArrayOutput) ToLaunchTemplateBlockDeviceMappingArgsArrayOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingArgsArrayOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingArgsArrayOutput) Index(i pulumi.IntInput) LaunchTemplateBlockDeviceMappingArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchTemplateBlockDeviceMappingArgs {
		return vs[0].([]LaunchTemplateBlockDeviceMappingArgs)[vs[1].(int)]
	}).(LaunchTemplateBlockDeviceMappingArgsOutput)
}

type LaunchTemplateBlockDeviceMappingEbs struct {
	// Whether the volume should be destroyed on instance termination (Default: `false`). See [Preserving Amazon EBS Volumes on Instance Termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) for more information.
	DeleteOnTermination *string `pulumi:"deleteOnTermination"`
	// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`.
	Encrypted *string `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops int `pulumi:"iops"`
	// AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
	// `encrypted` must be set to `true` when this is set.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId *string `pulumi:"snapshotId"`
	// The size of the volume in gigabytes.
	VolumeSize int `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`, or `"io1"`. (Default: `"standard"`).
	VolumeType string `pulumi:"volumeType"`
}

type LaunchTemplateBlockDeviceMappingEbsInput interface {
	pulumi.Input

	ToLaunchTemplateBlockDeviceMappingEbsOutput() LaunchTemplateBlockDeviceMappingEbsOutput
	ToLaunchTemplateBlockDeviceMappingEbsOutputWithContext(context.Context) LaunchTemplateBlockDeviceMappingEbsOutput
}

type LaunchTemplateBlockDeviceMappingEbsArgs struct {
	// Whether the volume should be destroyed on instance termination (Default: `false`). See [Preserving Amazon EBS Volumes on Instance Termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) for more information.
	DeleteOnTermination pulumi.StringPtrInput `pulumi:"deleteOnTermination"`
	// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`.
	Encrypted pulumi.StringPtrInput `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops pulumi.IntInput `pulumi:"iops"`
	// AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
	// `encrypted` must be set to `true` when this is set.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// The size of the volume in gigabytes.
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`, or `"io1"`. (Default: `"standard"`).
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (LaunchTemplateBlockDeviceMappingEbsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateBlockDeviceMappingEbs)(nil)).Elem()
}

func (i LaunchTemplateBlockDeviceMappingEbsArgs) ToLaunchTemplateBlockDeviceMappingEbsOutput() LaunchTemplateBlockDeviceMappingEbsOutput {
	return i.ToLaunchTemplateBlockDeviceMappingEbsOutputWithContext(context.Background())
}

func (i LaunchTemplateBlockDeviceMappingEbsArgs) ToLaunchTemplateBlockDeviceMappingEbsOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingEbsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateBlockDeviceMappingEbsOutput)
}

func (i LaunchTemplateBlockDeviceMappingEbsArgs) ToLaunchTemplateBlockDeviceMappingEbsPtrOutput() LaunchTemplateBlockDeviceMappingEbsPtrOutput {
	return i.ToLaunchTemplateBlockDeviceMappingEbsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateBlockDeviceMappingEbsArgs) ToLaunchTemplateBlockDeviceMappingEbsPtrOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingEbsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateBlockDeviceMappingEbsOutput).ToLaunchTemplateBlockDeviceMappingEbsPtrOutputWithContext(ctx)
}

type LaunchTemplateBlockDeviceMappingEbsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateBlockDeviceMappingEbsPtrOutput() LaunchTemplateBlockDeviceMappingEbsPtrOutput
	ToLaunchTemplateBlockDeviceMappingEbsPtrOutputWithContext(context.Context) LaunchTemplateBlockDeviceMappingEbsPtrOutput
}

type launchTemplateBlockDeviceMappingEbsPtrType LaunchTemplateBlockDeviceMappingEbsArgs

func LaunchTemplateBlockDeviceMappingEbsPtr(v *LaunchTemplateBlockDeviceMappingEbsArgs) LaunchTemplateBlockDeviceMappingEbsPtrInput {
	return (*launchTemplateBlockDeviceMappingEbsPtrType)(v)
}

func (*launchTemplateBlockDeviceMappingEbsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateBlockDeviceMappingEbs)(nil)).Elem()
}

func (i *launchTemplateBlockDeviceMappingEbsPtrType) ToLaunchTemplateBlockDeviceMappingEbsPtrOutput() LaunchTemplateBlockDeviceMappingEbsPtrOutput {
	return i.ToLaunchTemplateBlockDeviceMappingEbsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateBlockDeviceMappingEbsPtrType) ToLaunchTemplateBlockDeviceMappingEbsPtrOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingEbsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateBlockDeviceMappingEbsPtrOutput)
}

type LaunchTemplateBlockDeviceMappingEbsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateBlockDeviceMappingEbsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateBlockDeviceMappingEbs)(nil)).Elem()
}

func (o LaunchTemplateBlockDeviceMappingEbsOutput) ToLaunchTemplateBlockDeviceMappingEbsOutput() LaunchTemplateBlockDeviceMappingEbsOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingEbsOutput) ToLaunchTemplateBlockDeviceMappingEbsOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingEbsOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingEbsOutput) ToLaunchTemplateBlockDeviceMappingEbsPtrOutput() LaunchTemplateBlockDeviceMappingEbsPtrOutput {
	return o.ToLaunchTemplateBlockDeviceMappingEbsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateBlockDeviceMappingEbsOutput) ToLaunchTemplateBlockDeviceMappingEbsPtrOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingEbsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *LaunchTemplateBlockDeviceMappingEbs {
		return &v
	}).(LaunchTemplateBlockDeviceMappingEbsPtrOutput)
}

// Whether the volume should be destroyed on instance termination (Default: `false`). See [Preserving Amazon EBS Volumes on Instance Termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) for more information.
func (o LaunchTemplateBlockDeviceMappingEbsOutput) DeleteOnTermination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *string { return v.DeleteOnTermination }).(pulumi.StringPtrOutput)
}

// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
// on the volume (Default: `false`). Cannot be used with `snapshotId`.
func (o LaunchTemplateBlockDeviceMappingEbsOutput) Encrypted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *string { return v.Encrypted }).(pulumi.StringPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This must be set with a `volumeType` of `"io1"`.
func (o LaunchTemplateBlockDeviceMappingEbsOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) int { return v.Iops }).(pulumi.IntOutput)
}

// AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
// `encrypted` must be set to `true` when this is set.
func (o LaunchTemplateBlockDeviceMappingEbsOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The Snapshot ID to mount.
func (o LaunchTemplateBlockDeviceMappingEbsOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gigabytes.
func (o LaunchTemplateBlockDeviceMappingEbsOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`, or `"io1"`. (Default: `"standard"`).
func (o LaunchTemplateBlockDeviceMappingEbsOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) string { return v.VolumeType }).(pulumi.StringOutput)
}

type LaunchTemplateBlockDeviceMappingEbsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateBlockDeviceMappingEbsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateBlockDeviceMappingEbs)(nil)).Elem()
}

func (o LaunchTemplateBlockDeviceMappingEbsPtrOutput) ToLaunchTemplateBlockDeviceMappingEbsPtrOutput() LaunchTemplateBlockDeviceMappingEbsPtrOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingEbsPtrOutput) ToLaunchTemplateBlockDeviceMappingEbsPtrOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingEbsPtrOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingEbsPtrOutput) Elem() LaunchTemplateBlockDeviceMappingEbsOutput {
	return o.ApplyT(func(v *LaunchTemplateBlockDeviceMappingEbs) LaunchTemplateBlockDeviceMappingEbs { return *v }).(LaunchTemplateBlockDeviceMappingEbsOutput)
}

// Whether the volume should be destroyed on instance termination (Default: `false`). See [Preserving Amazon EBS Volumes on Instance Termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) for more information.
func (o LaunchTemplateBlockDeviceMappingEbsPtrOutput) DeleteOnTermination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *string { return v.DeleteOnTermination }).(pulumi.StringPtrOutput)
}

// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
// on the volume (Default: `false`). Cannot be used with `snapshotId`.
func (o LaunchTemplateBlockDeviceMappingEbsPtrOutput) Encrypted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *string { return v.Encrypted }).(pulumi.StringPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This must be set with a `volumeType` of `"io1"`.
func (o LaunchTemplateBlockDeviceMappingEbsPtrOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) int { return v.Iops }).(pulumi.IntOutput)
}

// AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
// `encrypted` must be set to `true` when this is set.
func (o LaunchTemplateBlockDeviceMappingEbsPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The Snapshot ID to mount.
func (o LaunchTemplateBlockDeviceMappingEbsPtrOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gigabytes.
func (o LaunchTemplateBlockDeviceMappingEbsPtrOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`, or `"io1"`. (Default: `"standard"`).
func (o LaunchTemplateBlockDeviceMappingEbsPtrOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) string { return v.VolumeType }).(pulumi.StringOutput)
}

type LaunchTemplateBlockDeviceMappingEbsArgs struct {
	// Whether the volume should be destroyed on instance termination (Default: `false`). See [Preserving Amazon EBS Volumes on Instance Termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) for more information.
	DeleteOnTermination *string `pulumi:"deleteOnTermination"`
	// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`.
	Encrypted *string `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops *int `pulumi:"iops"`
	// AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
	// `encrypted` must be set to `true` when this is set.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId *string `pulumi:"snapshotId"`
	// The size of the volume in gigabytes.
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`, or `"io1"`. (Default: `"standard"`).
	VolumeType *string `pulumi:"volumeType"`
}

type LaunchTemplateBlockDeviceMappingEbsArgsInput interface {
	pulumi.Input

	ToLaunchTemplateBlockDeviceMappingEbsArgsOutput() LaunchTemplateBlockDeviceMappingEbsArgsOutput
	ToLaunchTemplateBlockDeviceMappingEbsArgsOutputWithContext(context.Context) LaunchTemplateBlockDeviceMappingEbsArgsOutput
}

type LaunchTemplateBlockDeviceMappingEbsArgsArgs struct {
	// Whether the volume should be destroyed on instance termination (Default: `false`). See [Preserving Amazon EBS Volumes on Instance Termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) for more information.
	DeleteOnTermination pulumi.StringPtrInput `pulumi:"deleteOnTermination"`
	// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`.
	Encrypted pulumi.StringPtrInput `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
	// `encrypted` must be set to `true` when this is set.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// The size of the volume in gigabytes.
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`, or `"io1"`. (Default: `"standard"`).
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (LaunchTemplateBlockDeviceMappingEbsArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateBlockDeviceMappingEbsArgs)(nil)).Elem()
}

func (i LaunchTemplateBlockDeviceMappingEbsArgsArgs) ToLaunchTemplateBlockDeviceMappingEbsArgsOutput() LaunchTemplateBlockDeviceMappingEbsArgsOutput {
	return i.ToLaunchTemplateBlockDeviceMappingEbsArgsOutputWithContext(context.Background())
}

func (i LaunchTemplateBlockDeviceMappingEbsArgsArgs) ToLaunchTemplateBlockDeviceMappingEbsArgsOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingEbsArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateBlockDeviceMappingEbsArgsOutput)
}

func (i LaunchTemplateBlockDeviceMappingEbsArgsArgs) ToLaunchTemplateBlockDeviceMappingEbsArgsPtrOutput() LaunchTemplateBlockDeviceMappingEbsArgsPtrOutput {
	return i.ToLaunchTemplateBlockDeviceMappingEbsArgsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateBlockDeviceMappingEbsArgsArgs) ToLaunchTemplateBlockDeviceMappingEbsArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingEbsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateBlockDeviceMappingEbsArgsOutput).ToLaunchTemplateBlockDeviceMappingEbsArgsPtrOutputWithContext(ctx)
}

type LaunchTemplateBlockDeviceMappingEbsArgsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateBlockDeviceMappingEbsArgsPtrOutput() LaunchTemplateBlockDeviceMappingEbsArgsPtrOutput
	ToLaunchTemplateBlockDeviceMappingEbsArgsPtrOutputWithContext(context.Context) LaunchTemplateBlockDeviceMappingEbsArgsPtrOutput
}

type launchTemplateBlockDeviceMappingEbsArgsPtrType LaunchTemplateBlockDeviceMappingEbsArgsArgs

func LaunchTemplateBlockDeviceMappingEbsArgsPtr(v *LaunchTemplateBlockDeviceMappingEbsArgsArgs) LaunchTemplateBlockDeviceMappingEbsArgsPtrInput {
	return (*launchTemplateBlockDeviceMappingEbsArgsPtrType)(v)
}

func (*launchTemplateBlockDeviceMappingEbsArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateBlockDeviceMappingEbsArgs)(nil)).Elem()
}

func (i *launchTemplateBlockDeviceMappingEbsArgsPtrType) ToLaunchTemplateBlockDeviceMappingEbsArgsPtrOutput() LaunchTemplateBlockDeviceMappingEbsArgsPtrOutput {
	return i.ToLaunchTemplateBlockDeviceMappingEbsArgsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateBlockDeviceMappingEbsArgsPtrType) ToLaunchTemplateBlockDeviceMappingEbsArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingEbsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateBlockDeviceMappingEbsArgsPtrOutput)
}

type LaunchTemplateBlockDeviceMappingEbsArgsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateBlockDeviceMappingEbsArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateBlockDeviceMappingEbsArgs)(nil)).Elem()
}

func (o LaunchTemplateBlockDeviceMappingEbsArgsOutput) ToLaunchTemplateBlockDeviceMappingEbsArgsOutput() LaunchTemplateBlockDeviceMappingEbsArgsOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingEbsArgsOutput) ToLaunchTemplateBlockDeviceMappingEbsArgsOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingEbsArgsOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingEbsArgsOutput) ToLaunchTemplateBlockDeviceMappingEbsArgsPtrOutput() LaunchTemplateBlockDeviceMappingEbsArgsPtrOutput {
	return o.ToLaunchTemplateBlockDeviceMappingEbsArgsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateBlockDeviceMappingEbsArgsOutput) ToLaunchTemplateBlockDeviceMappingEbsArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingEbsArgsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbsArgs) *LaunchTemplateBlockDeviceMappingEbsArgs {
		return &v
	}).(LaunchTemplateBlockDeviceMappingEbsArgsPtrOutput)
}

// Whether the volume should be destroyed on instance termination (Default: `false`). See [Preserving Amazon EBS Volumes on Instance Termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) for more information.
func (o LaunchTemplateBlockDeviceMappingEbsArgsOutput) DeleteOnTermination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbsArgs) *string { return v.DeleteOnTermination }).(pulumi.StringPtrOutput)
}

// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
// on the volume (Default: `false`). Cannot be used with `snapshotId`.
func (o LaunchTemplateBlockDeviceMappingEbsArgsOutput) Encrypted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbsArgs) *string { return v.Encrypted }).(pulumi.StringPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This must be set with a `volumeType` of `"io1"`.
func (o LaunchTemplateBlockDeviceMappingEbsArgsOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbsArgs) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
// `encrypted` must be set to `true` when this is set.
func (o LaunchTemplateBlockDeviceMappingEbsArgsOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbsArgs) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The Snapshot ID to mount.
func (o LaunchTemplateBlockDeviceMappingEbsArgsOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbsArgs) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gigabytes.
func (o LaunchTemplateBlockDeviceMappingEbsArgsOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbsArgs) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`, or `"io1"`. (Default: `"standard"`).
func (o LaunchTemplateBlockDeviceMappingEbsArgsOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbsArgs) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type LaunchTemplateBlockDeviceMappingEbsArgsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateBlockDeviceMappingEbsArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateBlockDeviceMappingEbsArgs)(nil)).Elem()
}

func (o LaunchTemplateBlockDeviceMappingEbsArgsPtrOutput) ToLaunchTemplateBlockDeviceMappingEbsArgsPtrOutput() LaunchTemplateBlockDeviceMappingEbsArgsPtrOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingEbsArgsPtrOutput) ToLaunchTemplateBlockDeviceMappingEbsArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingEbsArgsPtrOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingEbsArgsPtrOutput) Elem() LaunchTemplateBlockDeviceMappingEbsArgsOutput {
	return o.ApplyT(func(v *LaunchTemplateBlockDeviceMappingEbsArgs) LaunchTemplateBlockDeviceMappingEbsArgs { return *v }).(LaunchTemplateBlockDeviceMappingEbsArgsOutput)
}

// Whether the volume should be destroyed on instance termination (Default: `false`). See [Preserving Amazon EBS Volumes on Instance Termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) for more information.
func (o LaunchTemplateBlockDeviceMappingEbsArgsPtrOutput) DeleteOnTermination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbsArgs) *string { return v.DeleteOnTermination }).(pulumi.StringPtrOutput)
}

// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
// on the volume (Default: `false`). Cannot be used with `snapshotId`.
func (o LaunchTemplateBlockDeviceMappingEbsArgsPtrOutput) Encrypted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbsArgs) *string { return v.Encrypted }).(pulumi.StringPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This must be set with a `volumeType` of `"io1"`.
func (o LaunchTemplateBlockDeviceMappingEbsArgsPtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbsArgs) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
// `encrypted` must be set to `true` when this is set.
func (o LaunchTemplateBlockDeviceMappingEbsArgsPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbsArgs) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The Snapshot ID to mount.
func (o LaunchTemplateBlockDeviceMappingEbsArgsPtrOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbsArgs) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gigabytes.
func (o LaunchTemplateBlockDeviceMappingEbsArgsPtrOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbsArgs) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`, or `"io1"`. (Default: `"standard"`).
func (o LaunchTemplateBlockDeviceMappingEbsArgsPtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbsArgs) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type LaunchTemplateBlockDeviceMappingState struct {
	// The name of the device to mount.
	DeviceName *string `pulumi:"deviceName"`
	// Configure EBS volume properties.
	Ebs *LaunchTemplateBlockDeviceMappingStateEbs `pulumi:"ebs"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice *string `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g. `"ephemeral0"`).
	VirtualName *string `pulumi:"virtualName"`
}

type LaunchTemplateBlockDeviceMappingStateInput interface {
	pulumi.Input

	ToLaunchTemplateBlockDeviceMappingStateOutput() LaunchTemplateBlockDeviceMappingStateOutput
	ToLaunchTemplateBlockDeviceMappingStateOutputWithContext(context.Context) LaunchTemplateBlockDeviceMappingStateOutput
}

type LaunchTemplateBlockDeviceMappingStateArgs struct {
	// The name of the device to mount.
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	// Configure EBS volume properties.
	Ebs LaunchTemplateBlockDeviceMappingStateEbsPtrInput `pulumi:"ebs"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice pulumi.StringPtrInput `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g. `"ephemeral0"`).
	VirtualName pulumi.StringPtrInput `pulumi:"virtualName"`
}

func (LaunchTemplateBlockDeviceMappingStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateBlockDeviceMappingState)(nil)).Elem()
}

func (i LaunchTemplateBlockDeviceMappingStateArgs) ToLaunchTemplateBlockDeviceMappingStateOutput() LaunchTemplateBlockDeviceMappingStateOutput {
	return i.ToLaunchTemplateBlockDeviceMappingStateOutputWithContext(context.Background())
}

func (i LaunchTemplateBlockDeviceMappingStateArgs) ToLaunchTemplateBlockDeviceMappingStateOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateBlockDeviceMappingStateOutput)
}

type LaunchTemplateBlockDeviceMappingStateArrayInput interface {
	pulumi.Input

	ToLaunchTemplateBlockDeviceMappingStateArrayOutput() LaunchTemplateBlockDeviceMappingStateArrayOutput
	ToLaunchTemplateBlockDeviceMappingStateArrayOutputWithContext(context.Context) LaunchTemplateBlockDeviceMappingStateArrayOutput
}

type LaunchTemplateBlockDeviceMappingStateArray []LaunchTemplateBlockDeviceMappingStateInput

func (LaunchTemplateBlockDeviceMappingStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateBlockDeviceMappingState)(nil)).Elem()
}

func (i LaunchTemplateBlockDeviceMappingStateArray) ToLaunchTemplateBlockDeviceMappingStateArrayOutput() LaunchTemplateBlockDeviceMappingStateArrayOutput {
	return i.ToLaunchTemplateBlockDeviceMappingStateArrayOutputWithContext(context.Background())
}

func (i LaunchTemplateBlockDeviceMappingStateArray) ToLaunchTemplateBlockDeviceMappingStateArrayOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateBlockDeviceMappingStateArrayOutput)
}

type LaunchTemplateBlockDeviceMappingStateOutput struct{ *pulumi.OutputState }

func (LaunchTemplateBlockDeviceMappingStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateBlockDeviceMappingState)(nil)).Elem()
}

func (o LaunchTemplateBlockDeviceMappingStateOutput) ToLaunchTemplateBlockDeviceMappingStateOutput() LaunchTemplateBlockDeviceMappingStateOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingStateOutput) ToLaunchTemplateBlockDeviceMappingStateOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingStateOutput {
	return o
}

// The name of the device to mount.
func (o LaunchTemplateBlockDeviceMappingStateOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingState) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

// Configure EBS volume properties.
func (o LaunchTemplateBlockDeviceMappingStateOutput) Ebs() LaunchTemplateBlockDeviceMappingStateEbsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingState) *LaunchTemplateBlockDeviceMappingStateEbs { return v.Ebs }).(LaunchTemplateBlockDeviceMappingStateEbsPtrOutput)
}

// Suppresses the specified device included in the AMI's block device mapping.
func (o LaunchTemplateBlockDeviceMappingStateOutput) NoDevice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingState) *string { return v.NoDevice }).(pulumi.StringPtrOutput)
}

// The [Instance Store Device
// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
// (e.g. `"ephemeral0"`).
func (o LaunchTemplateBlockDeviceMappingStateOutput) VirtualName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingState) *string { return v.VirtualName }).(pulumi.StringPtrOutput)
}

type LaunchTemplateBlockDeviceMappingStateArrayOutput struct{ *pulumi.OutputState }

func (LaunchTemplateBlockDeviceMappingStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateBlockDeviceMappingState)(nil)).Elem()
}

func (o LaunchTemplateBlockDeviceMappingStateArrayOutput) ToLaunchTemplateBlockDeviceMappingStateArrayOutput() LaunchTemplateBlockDeviceMappingStateArrayOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingStateArrayOutput) ToLaunchTemplateBlockDeviceMappingStateArrayOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingStateArrayOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingStateArrayOutput) Index(i pulumi.IntInput) LaunchTemplateBlockDeviceMappingStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchTemplateBlockDeviceMappingState {
		return vs[0].([]LaunchTemplateBlockDeviceMappingState)[vs[1].(int)]
	}).(LaunchTemplateBlockDeviceMappingStateOutput)
}

type LaunchTemplateBlockDeviceMappingStateEbs struct {
	// Whether the volume should be destroyed on instance termination (Default: `false`). See [Preserving Amazon EBS Volumes on Instance Termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) for more information.
	DeleteOnTermination *string `pulumi:"deleteOnTermination"`
	// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`.
	Encrypted *string `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops *int `pulumi:"iops"`
	// AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
	// `encrypted` must be set to `true` when this is set.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId *string `pulumi:"snapshotId"`
	// The size of the volume in gigabytes.
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`, or `"io1"`. (Default: `"standard"`).
	VolumeType *string `pulumi:"volumeType"`
}

type LaunchTemplateBlockDeviceMappingStateEbsInput interface {
	pulumi.Input

	ToLaunchTemplateBlockDeviceMappingStateEbsOutput() LaunchTemplateBlockDeviceMappingStateEbsOutput
	ToLaunchTemplateBlockDeviceMappingStateEbsOutputWithContext(context.Context) LaunchTemplateBlockDeviceMappingStateEbsOutput
}

type LaunchTemplateBlockDeviceMappingStateEbsArgs struct {
	// Whether the volume should be destroyed on instance termination (Default: `false`). See [Preserving Amazon EBS Volumes on Instance Termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) for more information.
	DeleteOnTermination pulumi.StringPtrInput `pulumi:"deleteOnTermination"`
	// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`.
	Encrypted pulumi.StringPtrInput `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
	// `encrypted` must be set to `true` when this is set.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// The size of the volume in gigabytes.
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`, or `"io1"`. (Default: `"standard"`).
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (LaunchTemplateBlockDeviceMappingStateEbsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateBlockDeviceMappingStateEbs)(nil)).Elem()
}

func (i LaunchTemplateBlockDeviceMappingStateEbsArgs) ToLaunchTemplateBlockDeviceMappingStateEbsOutput() LaunchTemplateBlockDeviceMappingStateEbsOutput {
	return i.ToLaunchTemplateBlockDeviceMappingStateEbsOutputWithContext(context.Background())
}

func (i LaunchTemplateBlockDeviceMappingStateEbsArgs) ToLaunchTemplateBlockDeviceMappingStateEbsOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingStateEbsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateBlockDeviceMappingStateEbsOutput)
}

func (i LaunchTemplateBlockDeviceMappingStateEbsArgs) ToLaunchTemplateBlockDeviceMappingStateEbsPtrOutput() LaunchTemplateBlockDeviceMappingStateEbsPtrOutput {
	return i.ToLaunchTemplateBlockDeviceMappingStateEbsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateBlockDeviceMappingStateEbsArgs) ToLaunchTemplateBlockDeviceMappingStateEbsPtrOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingStateEbsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateBlockDeviceMappingStateEbsOutput).ToLaunchTemplateBlockDeviceMappingStateEbsPtrOutputWithContext(ctx)
}

type LaunchTemplateBlockDeviceMappingStateEbsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateBlockDeviceMappingStateEbsPtrOutput() LaunchTemplateBlockDeviceMappingStateEbsPtrOutput
	ToLaunchTemplateBlockDeviceMappingStateEbsPtrOutputWithContext(context.Context) LaunchTemplateBlockDeviceMappingStateEbsPtrOutput
}

type launchTemplateBlockDeviceMappingStateEbsPtrType LaunchTemplateBlockDeviceMappingStateEbsArgs

func LaunchTemplateBlockDeviceMappingStateEbsPtr(v *LaunchTemplateBlockDeviceMappingStateEbsArgs) LaunchTemplateBlockDeviceMappingStateEbsPtrInput {
	return (*launchTemplateBlockDeviceMappingStateEbsPtrType)(v)
}

func (*launchTemplateBlockDeviceMappingStateEbsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateBlockDeviceMappingStateEbs)(nil)).Elem()
}

func (i *launchTemplateBlockDeviceMappingStateEbsPtrType) ToLaunchTemplateBlockDeviceMappingStateEbsPtrOutput() LaunchTemplateBlockDeviceMappingStateEbsPtrOutput {
	return i.ToLaunchTemplateBlockDeviceMappingStateEbsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateBlockDeviceMappingStateEbsPtrType) ToLaunchTemplateBlockDeviceMappingStateEbsPtrOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingStateEbsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateBlockDeviceMappingStateEbsPtrOutput)
}

type LaunchTemplateBlockDeviceMappingStateEbsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateBlockDeviceMappingStateEbsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateBlockDeviceMappingStateEbs)(nil)).Elem()
}

func (o LaunchTemplateBlockDeviceMappingStateEbsOutput) ToLaunchTemplateBlockDeviceMappingStateEbsOutput() LaunchTemplateBlockDeviceMappingStateEbsOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingStateEbsOutput) ToLaunchTemplateBlockDeviceMappingStateEbsOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingStateEbsOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingStateEbsOutput) ToLaunchTemplateBlockDeviceMappingStateEbsPtrOutput() LaunchTemplateBlockDeviceMappingStateEbsPtrOutput {
	return o.ToLaunchTemplateBlockDeviceMappingStateEbsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateBlockDeviceMappingStateEbsOutput) ToLaunchTemplateBlockDeviceMappingStateEbsPtrOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingStateEbsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingStateEbs) *LaunchTemplateBlockDeviceMappingStateEbs {
		return &v
	}).(LaunchTemplateBlockDeviceMappingStateEbsPtrOutput)
}

// Whether the volume should be destroyed on instance termination (Default: `false`). See [Preserving Amazon EBS Volumes on Instance Termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) for more information.
func (o LaunchTemplateBlockDeviceMappingStateEbsOutput) DeleteOnTermination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingStateEbs) *string { return v.DeleteOnTermination }).(pulumi.StringPtrOutput)
}

// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
// on the volume (Default: `false`). Cannot be used with `snapshotId`.
func (o LaunchTemplateBlockDeviceMappingStateEbsOutput) Encrypted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingStateEbs) *string { return v.Encrypted }).(pulumi.StringPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This must be set with a `volumeType` of `"io1"`.
func (o LaunchTemplateBlockDeviceMappingStateEbsOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingStateEbs) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
// `encrypted` must be set to `true` when this is set.
func (o LaunchTemplateBlockDeviceMappingStateEbsOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingStateEbs) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The Snapshot ID to mount.
func (o LaunchTemplateBlockDeviceMappingStateEbsOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingStateEbs) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gigabytes.
func (o LaunchTemplateBlockDeviceMappingStateEbsOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingStateEbs) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`, or `"io1"`. (Default: `"standard"`).
func (o LaunchTemplateBlockDeviceMappingStateEbsOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingStateEbs) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type LaunchTemplateBlockDeviceMappingStateEbsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateBlockDeviceMappingStateEbsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateBlockDeviceMappingStateEbs)(nil)).Elem()
}

func (o LaunchTemplateBlockDeviceMappingStateEbsPtrOutput) ToLaunchTemplateBlockDeviceMappingStateEbsPtrOutput() LaunchTemplateBlockDeviceMappingStateEbsPtrOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingStateEbsPtrOutput) ToLaunchTemplateBlockDeviceMappingStateEbsPtrOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingStateEbsPtrOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingStateEbsPtrOutput) Elem() LaunchTemplateBlockDeviceMappingStateEbsOutput {
	return o.ApplyT(func(v *LaunchTemplateBlockDeviceMappingStateEbs) LaunchTemplateBlockDeviceMappingStateEbs { return *v }).(LaunchTemplateBlockDeviceMappingStateEbsOutput)
}

// Whether the volume should be destroyed on instance termination (Default: `false`). See [Preserving Amazon EBS Volumes on Instance Termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) for more information.
func (o LaunchTemplateBlockDeviceMappingStateEbsPtrOutput) DeleteOnTermination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingStateEbs) *string { return v.DeleteOnTermination }).(pulumi.StringPtrOutput)
}

// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
// on the volume (Default: `false`). Cannot be used with `snapshotId`.
func (o LaunchTemplateBlockDeviceMappingStateEbsPtrOutput) Encrypted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingStateEbs) *string { return v.Encrypted }).(pulumi.StringPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This must be set with a `volumeType` of `"io1"`.
func (o LaunchTemplateBlockDeviceMappingStateEbsPtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingStateEbs) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
// `encrypted` must be set to `true` when this is set.
func (o LaunchTemplateBlockDeviceMappingStateEbsPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingStateEbs) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The Snapshot ID to mount.
func (o LaunchTemplateBlockDeviceMappingStateEbsPtrOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingStateEbs) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gigabytes.
func (o LaunchTemplateBlockDeviceMappingStateEbsPtrOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingStateEbs) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`, or `"io1"`. (Default: `"standard"`).
func (o LaunchTemplateBlockDeviceMappingStateEbsPtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingStateEbs) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type LaunchTemplateCapacityReservationSpecification struct {
	// Indicates the instance's Capacity Reservation preferences. Can be `open` or `none`. (Default `none`).
	CapacityReservationPreference *string `pulumi:"capacityReservationPreference"`
	// Used to target a specific Capacity Reservation:
	CapacityReservationTarget *LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget `pulumi:"capacityReservationTarget"`
}

type LaunchTemplateCapacityReservationSpecificationInput interface {
	pulumi.Input

	ToLaunchTemplateCapacityReservationSpecificationOutput() LaunchTemplateCapacityReservationSpecificationOutput
	ToLaunchTemplateCapacityReservationSpecificationOutputWithContext(context.Context) LaunchTemplateCapacityReservationSpecificationOutput
}

type LaunchTemplateCapacityReservationSpecificationArgs struct {
	// Indicates the instance's Capacity Reservation preferences. Can be `open` or `none`. (Default `none`).
	CapacityReservationPreference pulumi.StringPtrInput `pulumi:"capacityReservationPreference"`
	// Used to target a specific Capacity Reservation:
	CapacityReservationTarget LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrInput `pulumi:"capacityReservationTarget"`
}

func (LaunchTemplateCapacityReservationSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCapacityReservationSpecification)(nil)).Elem()
}

func (i LaunchTemplateCapacityReservationSpecificationArgs) ToLaunchTemplateCapacityReservationSpecificationOutput() LaunchTemplateCapacityReservationSpecificationOutput {
	return i.ToLaunchTemplateCapacityReservationSpecificationOutputWithContext(context.Background())
}

func (i LaunchTemplateCapacityReservationSpecificationArgs) ToLaunchTemplateCapacityReservationSpecificationOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCapacityReservationSpecificationOutput)
}

func (i LaunchTemplateCapacityReservationSpecificationArgs) ToLaunchTemplateCapacityReservationSpecificationPtrOutput() LaunchTemplateCapacityReservationSpecificationPtrOutput {
	return i.ToLaunchTemplateCapacityReservationSpecificationPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateCapacityReservationSpecificationArgs) ToLaunchTemplateCapacityReservationSpecificationPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCapacityReservationSpecificationOutput).ToLaunchTemplateCapacityReservationSpecificationPtrOutputWithContext(ctx)
}

type LaunchTemplateCapacityReservationSpecificationPtrInput interface {
	pulumi.Input

	ToLaunchTemplateCapacityReservationSpecificationPtrOutput() LaunchTemplateCapacityReservationSpecificationPtrOutput
	ToLaunchTemplateCapacityReservationSpecificationPtrOutputWithContext(context.Context) LaunchTemplateCapacityReservationSpecificationPtrOutput
}

type launchTemplateCapacityReservationSpecificationPtrType LaunchTemplateCapacityReservationSpecificationArgs

func LaunchTemplateCapacityReservationSpecificationPtr(v *LaunchTemplateCapacityReservationSpecificationArgs) LaunchTemplateCapacityReservationSpecificationPtrInput {
	return (*launchTemplateCapacityReservationSpecificationPtrType)(v)
}

func (*launchTemplateCapacityReservationSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCapacityReservationSpecification)(nil)).Elem()
}

func (i *launchTemplateCapacityReservationSpecificationPtrType) ToLaunchTemplateCapacityReservationSpecificationPtrOutput() LaunchTemplateCapacityReservationSpecificationPtrOutput {
	return i.ToLaunchTemplateCapacityReservationSpecificationPtrOutputWithContext(context.Background())
}

func (i *launchTemplateCapacityReservationSpecificationPtrType) ToLaunchTemplateCapacityReservationSpecificationPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCapacityReservationSpecificationPtrOutput)
}

type LaunchTemplateCapacityReservationSpecificationOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCapacityReservationSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCapacityReservationSpecification)(nil)).Elem()
}

func (o LaunchTemplateCapacityReservationSpecificationOutput) ToLaunchTemplateCapacityReservationSpecificationOutput() LaunchTemplateCapacityReservationSpecificationOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationOutput) ToLaunchTemplateCapacityReservationSpecificationOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationOutput) ToLaunchTemplateCapacityReservationSpecificationPtrOutput() LaunchTemplateCapacityReservationSpecificationPtrOutput {
	return o.ToLaunchTemplateCapacityReservationSpecificationPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateCapacityReservationSpecificationOutput) ToLaunchTemplateCapacityReservationSpecificationPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecification) *LaunchTemplateCapacityReservationSpecification {
		return &v
	}).(LaunchTemplateCapacityReservationSpecificationPtrOutput)
}

// Indicates the instance's Capacity Reservation preferences. Can be `open` or `none`. (Default `none`).
func (o LaunchTemplateCapacityReservationSpecificationOutput) CapacityReservationPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecification) *string {
		return v.CapacityReservationPreference
	}).(pulumi.StringPtrOutput)
}

// Used to target a specific Capacity Reservation:
func (o LaunchTemplateCapacityReservationSpecificationOutput) CapacityReservationTarget() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecification) *LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget {
		return v.CapacityReservationTarget
	}).(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput)
}

type LaunchTemplateCapacityReservationSpecificationPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCapacityReservationSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCapacityReservationSpecification)(nil)).Elem()
}

func (o LaunchTemplateCapacityReservationSpecificationPtrOutput) ToLaunchTemplateCapacityReservationSpecificationPtrOutput() LaunchTemplateCapacityReservationSpecificationPtrOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationPtrOutput) ToLaunchTemplateCapacityReservationSpecificationPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationPtrOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationPtrOutput) Elem() LaunchTemplateCapacityReservationSpecificationOutput {
	return o.ApplyT(func(v *LaunchTemplateCapacityReservationSpecification) LaunchTemplateCapacityReservationSpecification {
		return *v
	}).(LaunchTemplateCapacityReservationSpecificationOutput)
}

// Indicates the instance's Capacity Reservation preferences. Can be `open` or `none`. (Default `none`).
func (o LaunchTemplateCapacityReservationSpecificationPtrOutput) CapacityReservationPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecification) *string {
		return v.CapacityReservationPreference
	}).(pulumi.StringPtrOutput)
}

// Used to target a specific Capacity Reservation:
func (o LaunchTemplateCapacityReservationSpecificationPtrOutput) CapacityReservationTarget() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecification) *LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget {
		return v.CapacityReservationTarget
	}).(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput)
}

type LaunchTemplateCapacityReservationSpecificationArgs struct {
	// Indicates the instance's Capacity Reservation preferences. Can be `open` or `none`. (Default `none`).
	CapacityReservationPreference *string `pulumi:"capacityReservationPreference"`
	// Used to target a specific Capacity Reservation:
	CapacityReservationTarget *LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs `pulumi:"capacityReservationTarget"`
}

type LaunchTemplateCapacityReservationSpecificationArgsInput interface {
	pulumi.Input

	ToLaunchTemplateCapacityReservationSpecificationArgsOutput() LaunchTemplateCapacityReservationSpecificationArgsOutput
	ToLaunchTemplateCapacityReservationSpecificationArgsOutputWithContext(context.Context) LaunchTemplateCapacityReservationSpecificationArgsOutput
}

type LaunchTemplateCapacityReservationSpecificationArgsArgs struct {
	// Indicates the instance's Capacity Reservation preferences. Can be `open` or `none`. (Default `none`).
	CapacityReservationPreference pulumi.StringPtrInput `pulumi:"capacityReservationPreference"`
	// Used to target a specific Capacity Reservation:
	CapacityReservationTarget LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrInput `pulumi:"capacityReservationTarget"`
}

func (LaunchTemplateCapacityReservationSpecificationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCapacityReservationSpecificationArgs)(nil)).Elem()
}

func (i LaunchTemplateCapacityReservationSpecificationArgsArgs) ToLaunchTemplateCapacityReservationSpecificationArgsOutput() LaunchTemplateCapacityReservationSpecificationArgsOutput {
	return i.ToLaunchTemplateCapacityReservationSpecificationArgsOutputWithContext(context.Background())
}

func (i LaunchTemplateCapacityReservationSpecificationArgsArgs) ToLaunchTemplateCapacityReservationSpecificationArgsOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCapacityReservationSpecificationArgsOutput)
}

func (i LaunchTemplateCapacityReservationSpecificationArgsArgs) ToLaunchTemplateCapacityReservationSpecificationArgsPtrOutput() LaunchTemplateCapacityReservationSpecificationArgsPtrOutput {
	return i.ToLaunchTemplateCapacityReservationSpecificationArgsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateCapacityReservationSpecificationArgsArgs) ToLaunchTemplateCapacityReservationSpecificationArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCapacityReservationSpecificationArgsOutput).ToLaunchTemplateCapacityReservationSpecificationArgsPtrOutputWithContext(ctx)
}

type LaunchTemplateCapacityReservationSpecificationArgsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateCapacityReservationSpecificationArgsPtrOutput() LaunchTemplateCapacityReservationSpecificationArgsPtrOutput
	ToLaunchTemplateCapacityReservationSpecificationArgsPtrOutputWithContext(context.Context) LaunchTemplateCapacityReservationSpecificationArgsPtrOutput
}

type launchTemplateCapacityReservationSpecificationArgsPtrType LaunchTemplateCapacityReservationSpecificationArgsArgs

func LaunchTemplateCapacityReservationSpecificationArgsPtr(v *LaunchTemplateCapacityReservationSpecificationArgsArgs) LaunchTemplateCapacityReservationSpecificationArgsPtrInput {
	return (*launchTemplateCapacityReservationSpecificationArgsPtrType)(v)
}

func (*launchTemplateCapacityReservationSpecificationArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCapacityReservationSpecificationArgs)(nil)).Elem()
}

func (i *launchTemplateCapacityReservationSpecificationArgsPtrType) ToLaunchTemplateCapacityReservationSpecificationArgsPtrOutput() LaunchTemplateCapacityReservationSpecificationArgsPtrOutput {
	return i.ToLaunchTemplateCapacityReservationSpecificationArgsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateCapacityReservationSpecificationArgsPtrType) ToLaunchTemplateCapacityReservationSpecificationArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCapacityReservationSpecificationArgsPtrOutput)
}

type LaunchTemplateCapacityReservationSpecificationArgsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCapacityReservationSpecificationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCapacityReservationSpecificationArgs)(nil)).Elem()
}

func (o LaunchTemplateCapacityReservationSpecificationArgsOutput) ToLaunchTemplateCapacityReservationSpecificationArgsOutput() LaunchTemplateCapacityReservationSpecificationArgsOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationArgsOutput) ToLaunchTemplateCapacityReservationSpecificationArgsOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationArgsOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationArgsOutput) ToLaunchTemplateCapacityReservationSpecificationArgsPtrOutput() LaunchTemplateCapacityReservationSpecificationArgsPtrOutput {
	return o.ToLaunchTemplateCapacityReservationSpecificationArgsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateCapacityReservationSpecificationArgsOutput) ToLaunchTemplateCapacityReservationSpecificationArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationArgsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecificationArgs) *LaunchTemplateCapacityReservationSpecificationArgs {
		return &v
	}).(LaunchTemplateCapacityReservationSpecificationArgsPtrOutput)
}

// Indicates the instance's Capacity Reservation preferences. Can be `open` or `none`. (Default `none`).
func (o LaunchTemplateCapacityReservationSpecificationArgsOutput) CapacityReservationPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecificationArgs) *string {
		return v.CapacityReservationPreference
	}).(pulumi.StringPtrOutput)
}

// Used to target a specific Capacity Reservation:
func (o LaunchTemplateCapacityReservationSpecificationArgsOutput) CapacityReservationTarget() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecificationArgs) *LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs {
		return v.CapacityReservationTarget
	}).(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutput)
}

type LaunchTemplateCapacityReservationSpecificationArgsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCapacityReservationSpecificationArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCapacityReservationSpecificationArgs)(nil)).Elem()
}

func (o LaunchTemplateCapacityReservationSpecificationArgsPtrOutput) ToLaunchTemplateCapacityReservationSpecificationArgsPtrOutput() LaunchTemplateCapacityReservationSpecificationArgsPtrOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationArgsPtrOutput) ToLaunchTemplateCapacityReservationSpecificationArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationArgsPtrOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationArgsPtrOutput) Elem() LaunchTemplateCapacityReservationSpecificationArgsOutput {
	return o.ApplyT(func(v *LaunchTemplateCapacityReservationSpecificationArgs) LaunchTemplateCapacityReservationSpecificationArgs {
		return *v
	}).(LaunchTemplateCapacityReservationSpecificationArgsOutput)
}

// Indicates the instance's Capacity Reservation preferences. Can be `open` or `none`. (Default `none`).
func (o LaunchTemplateCapacityReservationSpecificationArgsPtrOutput) CapacityReservationPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecificationArgs) *string {
		return v.CapacityReservationPreference
	}).(pulumi.StringPtrOutput)
}

// Used to target a specific Capacity Reservation:
func (o LaunchTemplateCapacityReservationSpecificationArgsPtrOutput) CapacityReservationTarget() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecificationArgs) *LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs {
		return v.CapacityReservationTarget
	}).(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutput)
}

type LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget struct {
	// The ID of the Capacity Reservation to target.
	CapacityReservationId *string `pulumi:"capacityReservationId"`
}

type LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetInput interface {
	pulumi.Input

	ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput
	ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutputWithContext(context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput
}

type LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs struct {
	// The ID of the Capacity Reservation to target.
	CapacityReservationId pulumi.StringPtrInput `pulumi:"capacityReservationId"`
}

func (LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget)(nil)).Elem()
}

func (i LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput {
	return i.ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutputWithContext(context.Background())
}

func (i LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput)
}

func (i LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput {
	return i.ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput).ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutputWithContext(ctx)
}

type LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrInput interface {
	pulumi.Input

	ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput
	ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutputWithContext(context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput
}

type launchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrType LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs

func LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtr(v *LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrInput {
	return (*launchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrType)(v)
}

func (*launchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget)(nil)).Elem()
}

func (i *launchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrType) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput {
	return i.ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutputWithContext(context.Background())
}

func (i *launchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrType) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput)
}

type LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget)(nil)).Elem()
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput {
	return o.ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget) *LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget {
		return &v
	}).(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput)
}

// The ID of the Capacity Reservation to target.
func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput) CapacityReservationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget) *string {
		return v.CapacityReservationId
	}).(pulumi.StringPtrOutput)
}

type LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget)(nil)).Elem()
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput) Elem() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput {
	return o.ApplyT(func(v *LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget) LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget {
		return *v
	}).(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput)
}

// The ID of the Capacity Reservation to target.
func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput) CapacityReservationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget) *string {
		return v.CapacityReservationId
	}).(pulumi.StringPtrOutput)
}

type LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs struct {
	// The ID of the Capacity Reservation to target.
	CapacityReservationId *string `pulumi:"capacityReservationId"`
}

type LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsInput interface {
	pulumi.Input

	ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsOutput
	ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsOutputWithContext(context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsOutput
}

type LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsArgs struct {
	// The ID of the Capacity Reservation to target.
	CapacityReservationId pulumi.StringPtrInput `pulumi:"capacityReservationId"`
}

func (LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs)(nil)).Elem()
}

func (i LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsArgs) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsOutput {
	return i.ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsOutputWithContext(context.Background())
}

func (i LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsArgs) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsOutput)
}

func (i LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsArgs) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutput {
	return i.ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsArgs) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsOutput).ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutputWithContext(ctx)
}

type LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutput
	ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutputWithContext(context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutput
}

type launchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrType LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsArgs

func LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtr(v *LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsArgs) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrInput {
	return (*launchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrType)(v)
}

func (*launchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs)(nil)).Elem()
}

func (i *launchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrType) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutput {
	return i.ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrType) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutput)
}

type LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs)(nil)).Elem()
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsOutput) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsOutput) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsOutput) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutput {
	return o.ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsOutput) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs) *LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs {
		return &v
	}).(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutput)
}

// The ID of the Capacity Reservation to target.
func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsOutput) CapacityReservationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs) *string {
		return v.CapacityReservationId
	}).(pulumi.StringPtrOutput)
}

type LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs)(nil)).Elem()
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutput) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutput) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutput) Elem() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsOutput {
	return o.ApplyT(func(v *LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs {
		return *v
	}).(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsOutput)
}

// The ID of the Capacity Reservation to target.
func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutput) CapacityReservationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs) *string {
		return v.CapacityReservationId
	}).(pulumi.StringPtrOutput)
}

type LaunchTemplateCapacityReservationSpecificationState struct {
	// Indicates the instance's Capacity Reservation preferences. Can be `open` or `none`. (Default `none`).
	CapacityReservationPreference *string `pulumi:"capacityReservationPreference"`
	// Used to target a specific Capacity Reservation:
	CapacityReservationTarget *LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTarget `pulumi:"capacityReservationTarget"`
}

type LaunchTemplateCapacityReservationSpecificationStateInput interface {
	pulumi.Input

	ToLaunchTemplateCapacityReservationSpecificationStateOutput() LaunchTemplateCapacityReservationSpecificationStateOutput
	ToLaunchTemplateCapacityReservationSpecificationStateOutputWithContext(context.Context) LaunchTemplateCapacityReservationSpecificationStateOutput
}

type LaunchTemplateCapacityReservationSpecificationStateArgs struct {
	// Indicates the instance's Capacity Reservation preferences. Can be `open` or `none`. (Default `none`).
	CapacityReservationPreference pulumi.StringPtrInput `pulumi:"capacityReservationPreference"`
	// Used to target a specific Capacity Reservation:
	CapacityReservationTarget LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrInput `pulumi:"capacityReservationTarget"`
}

func (LaunchTemplateCapacityReservationSpecificationStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCapacityReservationSpecificationState)(nil)).Elem()
}

func (i LaunchTemplateCapacityReservationSpecificationStateArgs) ToLaunchTemplateCapacityReservationSpecificationStateOutput() LaunchTemplateCapacityReservationSpecificationStateOutput {
	return i.ToLaunchTemplateCapacityReservationSpecificationStateOutputWithContext(context.Background())
}

func (i LaunchTemplateCapacityReservationSpecificationStateArgs) ToLaunchTemplateCapacityReservationSpecificationStateOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCapacityReservationSpecificationStateOutput)
}

type LaunchTemplateCapacityReservationSpecificationStateOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCapacityReservationSpecificationStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCapacityReservationSpecificationState)(nil)).Elem()
}

func (o LaunchTemplateCapacityReservationSpecificationStateOutput) ToLaunchTemplateCapacityReservationSpecificationStateOutput() LaunchTemplateCapacityReservationSpecificationStateOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationStateOutput) ToLaunchTemplateCapacityReservationSpecificationStateOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationStateOutput {
	return o
}

// Indicates the instance's Capacity Reservation preferences. Can be `open` or `none`. (Default `none`).
func (o LaunchTemplateCapacityReservationSpecificationStateOutput) CapacityReservationPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecificationState) *string {
		return v.CapacityReservationPreference
	}).(pulumi.StringPtrOutput)
}

// Used to target a specific Capacity Reservation:
func (o LaunchTemplateCapacityReservationSpecificationStateOutput) CapacityReservationTarget() LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecificationState) *LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTarget {
		return v.CapacityReservationTarget
	}).(LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutput)
}

type LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTarget struct {
	// The ID of the Capacity Reservation to target.
	CapacityReservationId *string `pulumi:"capacityReservationId"`
}

type LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetInput interface {
	pulumi.Input

	ToLaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetOutput() LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetOutput
	ToLaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetOutputWithContext(context.Context) LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetOutput
}

type LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetArgs struct {
	// The ID of the Capacity Reservation to target.
	CapacityReservationId pulumi.StringPtrInput `pulumi:"capacityReservationId"`
}

func (LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTarget)(nil)).Elem()
}

func (i LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetArgs) ToLaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetOutput() LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetOutput {
	return i.ToLaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetOutputWithContext(context.Background())
}

func (i LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetArgs) ToLaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetOutput)
}

func (i LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetArgs) ToLaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutput() LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutput {
	return i.ToLaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetArgs) ToLaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetOutput).ToLaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutputWithContext(ctx)
}

type LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrInput interface {
	pulumi.Input

	ToLaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutput() LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutput
	ToLaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutputWithContext(context.Context) LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutput
}

type launchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrType LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetArgs

func LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtr(v *LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetArgs) LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrInput {
	return (*launchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrType)(v)
}

func (*launchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTarget)(nil)).Elem()
}

func (i *launchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrType) ToLaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutput() LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutput {
	return i.ToLaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutputWithContext(context.Background())
}

func (i *launchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrType) ToLaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutput)
}

type LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTarget)(nil)).Elem()
}

func (o LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetOutput) ToLaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetOutput() LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetOutput) ToLaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetOutput) ToLaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutput() LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutput {
	return o.ToLaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetOutput) ToLaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTarget) *LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTarget {
		return &v
	}).(LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutput)
}

// The ID of the Capacity Reservation to target.
func (o LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetOutput) CapacityReservationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTarget) *string {
		return v.CapacityReservationId
	}).(pulumi.StringPtrOutput)
}

type LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTarget)(nil)).Elem()
}

func (o LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutput) ToLaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutput() LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutput) ToLaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutput) Elem() LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetOutput {
	return o.ApplyT(func(v *LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTarget) LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTarget {
		return *v
	}).(LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetOutput)
}

// The ID of the Capacity Reservation to target.
func (o LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutput) CapacityReservationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTarget) *string {
		return v.CapacityReservationId
	}).(pulumi.StringPtrOutput)
}

type LaunchTemplateCpuOptions struct {
	// The number of CPU cores for the instance.
	CoreCount *int `pulumi:"coreCount"`
	// The number of threads per CPU core. To disable Intel Hyper-Threading Technology for the instance, specify a value of 1.
	// Otherwise, specify the default value of 2.
	ThreadsPerCore *int `pulumi:"threadsPerCore"`
}

type LaunchTemplateCpuOptionsInput interface {
	pulumi.Input

	ToLaunchTemplateCpuOptionsOutput() LaunchTemplateCpuOptionsOutput
	ToLaunchTemplateCpuOptionsOutputWithContext(context.Context) LaunchTemplateCpuOptionsOutput
}

type LaunchTemplateCpuOptionsArgs struct {
	// The number of CPU cores for the instance.
	CoreCount pulumi.IntPtrInput `pulumi:"coreCount"`
	// The number of threads per CPU core. To disable Intel Hyper-Threading Technology for the instance, specify a value of 1.
	// Otherwise, specify the default value of 2.
	ThreadsPerCore pulumi.IntPtrInput `pulumi:"threadsPerCore"`
}

func (LaunchTemplateCpuOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCpuOptions)(nil)).Elem()
}

func (i LaunchTemplateCpuOptionsArgs) ToLaunchTemplateCpuOptionsOutput() LaunchTemplateCpuOptionsOutput {
	return i.ToLaunchTemplateCpuOptionsOutputWithContext(context.Background())
}

func (i LaunchTemplateCpuOptionsArgs) ToLaunchTemplateCpuOptionsOutputWithContext(ctx context.Context) LaunchTemplateCpuOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCpuOptionsOutput)
}

func (i LaunchTemplateCpuOptionsArgs) ToLaunchTemplateCpuOptionsPtrOutput() LaunchTemplateCpuOptionsPtrOutput {
	return i.ToLaunchTemplateCpuOptionsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateCpuOptionsArgs) ToLaunchTemplateCpuOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateCpuOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCpuOptionsOutput).ToLaunchTemplateCpuOptionsPtrOutputWithContext(ctx)
}

type LaunchTemplateCpuOptionsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateCpuOptionsPtrOutput() LaunchTemplateCpuOptionsPtrOutput
	ToLaunchTemplateCpuOptionsPtrOutputWithContext(context.Context) LaunchTemplateCpuOptionsPtrOutput
}

type launchTemplateCpuOptionsPtrType LaunchTemplateCpuOptionsArgs

func LaunchTemplateCpuOptionsPtr(v *LaunchTemplateCpuOptionsArgs) LaunchTemplateCpuOptionsPtrInput {
	return (*launchTemplateCpuOptionsPtrType)(v)
}

func (*launchTemplateCpuOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCpuOptions)(nil)).Elem()
}

func (i *launchTemplateCpuOptionsPtrType) ToLaunchTemplateCpuOptionsPtrOutput() LaunchTemplateCpuOptionsPtrOutput {
	return i.ToLaunchTemplateCpuOptionsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateCpuOptionsPtrType) ToLaunchTemplateCpuOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateCpuOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCpuOptionsPtrOutput)
}

type LaunchTemplateCpuOptionsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCpuOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCpuOptions)(nil)).Elem()
}

func (o LaunchTemplateCpuOptionsOutput) ToLaunchTemplateCpuOptionsOutput() LaunchTemplateCpuOptionsOutput {
	return o
}

func (o LaunchTemplateCpuOptionsOutput) ToLaunchTemplateCpuOptionsOutputWithContext(ctx context.Context) LaunchTemplateCpuOptionsOutput {
	return o
}

func (o LaunchTemplateCpuOptionsOutput) ToLaunchTemplateCpuOptionsPtrOutput() LaunchTemplateCpuOptionsPtrOutput {
	return o.ToLaunchTemplateCpuOptionsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateCpuOptionsOutput) ToLaunchTemplateCpuOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateCpuOptionsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCpuOptions) *LaunchTemplateCpuOptions {
		return &v
	}).(LaunchTemplateCpuOptionsPtrOutput)
}

// The number of CPU cores for the instance.
func (o LaunchTemplateCpuOptionsOutput) CoreCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCpuOptions) *int { return v.CoreCount }).(pulumi.IntPtrOutput)
}

// The number of threads per CPU core. To disable Intel Hyper-Threading Technology for the instance, specify a value of 1.
// Otherwise, specify the default value of 2.
func (o LaunchTemplateCpuOptionsOutput) ThreadsPerCore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCpuOptions) *int { return v.ThreadsPerCore }).(pulumi.IntPtrOutput)
}

type LaunchTemplateCpuOptionsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCpuOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCpuOptions)(nil)).Elem()
}

func (o LaunchTemplateCpuOptionsPtrOutput) ToLaunchTemplateCpuOptionsPtrOutput() LaunchTemplateCpuOptionsPtrOutput {
	return o
}

func (o LaunchTemplateCpuOptionsPtrOutput) ToLaunchTemplateCpuOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateCpuOptionsPtrOutput {
	return o
}

func (o LaunchTemplateCpuOptionsPtrOutput) Elem() LaunchTemplateCpuOptionsOutput {
	return o.ApplyT(func(v *LaunchTemplateCpuOptions) LaunchTemplateCpuOptions { return *v }).(LaunchTemplateCpuOptionsOutput)
}

// The number of CPU cores for the instance.
func (o LaunchTemplateCpuOptionsPtrOutput) CoreCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCpuOptions) *int { return v.CoreCount }).(pulumi.IntPtrOutput)
}

// The number of threads per CPU core. To disable Intel Hyper-Threading Technology for the instance, specify a value of 1.
// Otherwise, specify the default value of 2.
func (o LaunchTemplateCpuOptionsPtrOutput) ThreadsPerCore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCpuOptions) *int { return v.ThreadsPerCore }).(pulumi.IntPtrOutput)
}

type LaunchTemplateCpuOptionsArgs struct {
	// The number of CPU cores for the instance.
	CoreCount *int `pulumi:"coreCount"`
	// The number of threads per CPU core. To disable Intel Hyper-Threading Technology for the instance, specify a value of 1.
	// Otherwise, specify the default value of 2.
	ThreadsPerCore *int `pulumi:"threadsPerCore"`
}

type LaunchTemplateCpuOptionsArgsInput interface {
	pulumi.Input

	ToLaunchTemplateCpuOptionsArgsOutput() LaunchTemplateCpuOptionsArgsOutput
	ToLaunchTemplateCpuOptionsArgsOutputWithContext(context.Context) LaunchTemplateCpuOptionsArgsOutput
}

type LaunchTemplateCpuOptionsArgsArgs struct {
	// The number of CPU cores for the instance.
	CoreCount pulumi.IntPtrInput `pulumi:"coreCount"`
	// The number of threads per CPU core. To disable Intel Hyper-Threading Technology for the instance, specify a value of 1.
	// Otherwise, specify the default value of 2.
	ThreadsPerCore pulumi.IntPtrInput `pulumi:"threadsPerCore"`
}

func (LaunchTemplateCpuOptionsArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCpuOptionsArgs)(nil)).Elem()
}

func (i LaunchTemplateCpuOptionsArgsArgs) ToLaunchTemplateCpuOptionsArgsOutput() LaunchTemplateCpuOptionsArgsOutput {
	return i.ToLaunchTemplateCpuOptionsArgsOutputWithContext(context.Background())
}

func (i LaunchTemplateCpuOptionsArgsArgs) ToLaunchTemplateCpuOptionsArgsOutputWithContext(ctx context.Context) LaunchTemplateCpuOptionsArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCpuOptionsArgsOutput)
}

func (i LaunchTemplateCpuOptionsArgsArgs) ToLaunchTemplateCpuOptionsArgsPtrOutput() LaunchTemplateCpuOptionsArgsPtrOutput {
	return i.ToLaunchTemplateCpuOptionsArgsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateCpuOptionsArgsArgs) ToLaunchTemplateCpuOptionsArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateCpuOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCpuOptionsArgsOutput).ToLaunchTemplateCpuOptionsArgsPtrOutputWithContext(ctx)
}

type LaunchTemplateCpuOptionsArgsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateCpuOptionsArgsPtrOutput() LaunchTemplateCpuOptionsArgsPtrOutput
	ToLaunchTemplateCpuOptionsArgsPtrOutputWithContext(context.Context) LaunchTemplateCpuOptionsArgsPtrOutput
}

type launchTemplateCpuOptionsArgsPtrType LaunchTemplateCpuOptionsArgsArgs

func LaunchTemplateCpuOptionsArgsPtr(v *LaunchTemplateCpuOptionsArgsArgs) LaunchTemplateCpuOptionsArgsPtrInput {
	return (*launchTemplateCpuOptionsArgsPtrType)(v)
}

func (*launchTemplateCpuOptionsArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCpuOptionsArgs)(nil)).Elem()
}

func (i *launchTemplateCpuOptionsArgsPtrType) ToLaunchTemplateCpuOptionsArgsPtrOutput() LaunchTemplateCpuOptionsArgsPtrOutput {
	return i.ToLaunchTemplateCpuOptionsArgsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateCpuOptionsArgsPtrType) ToLaunchTemplateCpuOptionsArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateCpuOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCpuOptionsArgsPtrOutput)
}

type LaunchTemplateCpuOptionsArgsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCpuOptionsArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCpuOptionsArgs)(nil)).Elem()
}

func (o LaunchTemplateCpuOptionsArgsOutput) ToLaunchTemplateCpuOptionsArgsOutput() LaunchTemplateCpuOptionsArgsOutput {
	return o
}

func (o LaunchTemplateCpuOptionsArgsOutput) ToLaunchTemplateCpuOptionsArgsOutputWithContext(ctx context.Context) LaunchTemplateCpuOptionsArgsOutput {
	return o
}

func (o LaunchTemplateCpuOptionsArgsOutput) ToLaunchTemplateCpuOptionsArgsPtrOutput() LaunchTemplateCpuOptionsArgsPtrOutput {
	return o.ToLaunchTemplateCpuOptionsArgsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateCpuOptionsArgsOutput) ToLaunchTemplateCpuOptionsArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateCpuOptionsArgsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCpuOptionsArgs) *LaunchTemplateCpuOptionsArgs {
		return &v
	}).(LaunchTemplateCpuOptionsArgsPtrOutput)
}

// The number of CPU cores for the instance.
func (o LaunchTemplateCpuOptionsArgsOutput) CoreCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCpuOptionsArgs) *int { return v.CoreCount }).(pulumi.IntPtrOutput)
}

// The number of threads per CPU core. To disable Intel Hyper-Threading Technology for the instance, specify a value of 1.
// Otherwise, specify the default value of 2.
func (o LaunchTemplateCpuOptionsArgsOutput) ThreadsPerCore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCpuOptionsArgs) *int { return v.ThreadsPerCore }).(pulumi.IntPtrOutput)
}

type LaunchTemplateCpuOptionsArgsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCpuOptionsArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCpuOptionsArgs)(nil)).Elem()
}

func (o LaunchTemplateCpuOptionsArgsPtrOutput) ToLaunchTemplateCpuOptionsArgsPtrOutput() LaunchTemplateCpuOptionsArgsPtrOutput {
	return o
}

func (o LaunchTemplateCpuOptionsArgsPtrOutput) ToLaunchTemplateCpuOptionsArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateCpuOptionsArgsPtrOutput {
	return o
}

func (o LaunchTemplateCpuOptionsArgsPtrOutput) Elem() LaunchTemplateCpuOptionsArgsOutput {
	return o.ApplyT(func(v *LaunchTemplateCpuOptionsArgs) LaunchTemplateCpuOptionsArgs { return *v }).(LaunchTemplateCpuOptionsArgsOutput)
}

// The number of CPU cores for the instance.
func (o LaunchTemplateCpuOptionsArgsPtrOutput) CoreCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCpuOptionsArgs) *int { return v.CoreCount }).(pulumi.IntPtrOutput)
}

// The number of threads per CPU core. To disable Intel Hyper-Threading Technology for the instance, specify a value of 1.
// Otherwise, specify the default value of 2.
func (o LaunchTemplateCpuOptionsArgsPtrOutput) ThreadsPerCore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCpuOptionsArgs) *int { return v.ThreadsPerCore }).(pulumi.IntPtrOutput)
}

type LaunchTemplateCpuOptionsState struct {
	// The number of CPU cores for the instance.
	CoreCount *int `pulumi:"coreCount"`
	// The number of threads per CPU core. To disable Intel Hyper-Threading Technology for the instance, specify a value of 1.
	// Otherwise, specify the default value of 2.
	ThreadsPerCore *int `pulumi:"threadsPerCore"`
}

type LaunchTemplateCpuOptionsStateInput interface {
	pulumi.Input

	ToLaunchTemplateCpuOptionsStateOutput() LaunchTemplateCpuOptionsStateOutput
	ToLaunchTemplateCpuOptionsStateOutputWithContext(context.Context) LaunchTemplateCpuOptionsStateOutput
}

type LaunchTemplateCpuOptionsStateArgs struct {
	// The number of CPU cores for the instance.
	CoreCount pulumi.IntPtrInput `pulumi:"coreCount"`
	// The number of threads per CPU core. To disable Intel Hyper-Threading Technology for the instance, specify a value of 1.
	// Otherwise, specify the default value of 2.
	ThreadsPerCore pulumi.IntPtrInput `pulumi:"threadsPerCore"`
}

func (LaunchTemplateCpuOptionsStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCpuOptionsState)(nil)).Elem()
}

func (i LaunchTemplateCpuOptionsStateArgs) ToLaunchTemplateCpuOptionsStateOutput() LaunchTemplateCpuOptionsStateOutput {
	return i.ToLaunchTemplateCpuOptionsStateOutputWithContext(context.Background())
}

func (i LaunchTemplateCpuOptionsStateArgs) ToLaunchTemplateCpuOptionsStateOutputWithContext(ctx context.Context) LaunchTemplateCpuOptionsStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCpuOptionsStateOutput)
}

type LaunchTemplateCpuOptionsStateOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCpuOptionsStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCpuOptionsState)(nil)).Elem()
}

func (o LaunchTemplateCpuOptionsStateOutput) ToLaunchTemplateCpuOptionsStateOutput() LaunchTemplateCpuOptionsStateOutput {
	return o
}

func (o LaunchTemplateCpuOptionsStateOutput) ToLaunchTemplateCpuOptionsStateOutputWithContext(ctx context.Context) LaunchTemplateCpuOptionsStateOutput {
	return o
}

// The number of CPU cores for the instance.
func (o LaunchTemplateCpuOptionsStateOutput) CoreCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCpuOptionsState) *int { return v.CoreCount }).(pulumi.IntPtrOutput)
}

// The number of threads per CPU core. To disable Intel Hyper-Threading Technology for the instance, specify a value of 1.
// Otherwise, specify the default value of 2.
func (o LaunchTemplateCpuOptionsStateOutput) ThreadsPerCore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCpuOptionsState) *int { return v.ThreadsPerCore }).(pulumi.IntPtrOutput)
}

type LaunchTemplateCreditSpecification struct {
	// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits *string `pulumi:"cpuCredits"`
}

type LaunchTemplateCreditSpecificationInput interface {
	pulumi.Input

	ToLaunchTemplateCreditSpecificationOutput() LaunchTemplateCreditSpecificationOutput
	ToLaunchTemplateCreditSpecificationOutputWithContext(context.Context) LaunchTemplateCreditSpecificationOutput
}

type LaunchTemplateCreditSpecificationArgs struct {
	// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits pulumi.StringPtrInput `pulumi:"cpuCredits"`
}

func (LaunchTemplateCreditSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCreditSpecification)(nil)).Elem()
}

func (i LaunchTemplateCreditSpecificationArgs) ToLaunchTemplateCreditSpecificationOutput() LaunchTemplateCreditSpecificationOutput {
	return i.ToLaunchTemplateCreditSpecificationOutputWithContext(context.Background())
}

func (i LaunchTemplateCreditSpecificationArgs) ToLaunchTemplateCreditSpecificationOutputWithContext(ctx context.Context) LaunchTemplateCreditSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCreditSpecificationOutput)
}

func (i LaunchTemplateCreditSpecificationArgs) ToLaunchTemplateCreditSpecificationPtrOutput() LaunchTemplateCreditSpecificationPtrOutput {
	return i.ToLaunchTemplateCreditSpecificationPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateCreditSpecificationArgs) ToLaunchTemplateCreditSpecificationPtrOutputWithContext(ctx context.Context) LaunchTemplateCreditSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCreditSpecificationOutput).ToLaunchTemplateCreditSpecificationPtrOutputWithContext(ctx)
}

type LaunchTemplateCreditSpecificationPtrInput interface {
	pulumi.Input

	ToLaunchTemplateCreditSpecificationPtrOutput() LaunchTemplateCreditSpecificationPtrOutput
	ToLaunchTemplateCreditSpecificationPtrOutputWithContext(context.Context) LaunchTemplateCreditSpecificationPtrOutput
}

type launchTemplateCreditSpecificationPtrType LaunchTemplateCreditSpecificationArgs

func LaunchTemplateCreditSpecificationPtr(v *LaunchTemplateCreditSpecificationArgs) LaunchTemplateCreditSpecificationPtrInput {
	return (*launchTemplateCreditSpecificationPtrType)(v)
}

func (*launchTemplateCreditSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCreditSpecification)(nil)).Elem()
}

func (i *launchTemplateCreditSpecificationPtrType) ToLaunchTemplateCreditSpecificationPtrOutput() LaunchTemplateCreditSpecificationPtrOutput {
	return i.ToLaunchTemplateCreditSpecificationPtrOutputWithContext(context.Background())
}

func (i *launchTemplateCreditSpecificationPtrType) ToLaunchTemplateCreditSpecificationPtrOutputWithContext(ctx context.Context) LaunchTemplateCreditSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCreditSpecificationPtrOutput)
}

type LaunchTemplateCreditSpecificationOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCreditSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCreditSpecification)(nil)).Elem()
}

func (o LaunchTemplateCreditSpecificationOutput) ToLaunchTemplateCreditSpecificationOutput() LaunchTemplateCreditSpecificationOutput {
	return o
}

func (o LaunchTemplateCreditSpecificationOutput) ToLaunchTemplateCreditSpecificationOutputWithContext(ctx context.Context) LaunchTemplateCreditSpecificationOutput {
	return o
}

func (o LaunchTemplateCreditSpecificationOutput) ToLaunchTemplateCreditSpecificationPtrOutput() LaunchTemplateCreditSpecificationPtrOutput {
	return o.ToLaunchTemplateCreditSpecificationPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateCreditSpecificationOutput) ToLaunchTemplateCreditSpecificationPtrOutputWithContext(ctx context.Context) LaunchTemplateCreditSpecificationPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCreditSpecification) *LaunchTemplateCreditSpecification {
		return &v
	}).(LaunchTemplateCreditSpecificationPtrOutput)
}

// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
func (o LaunchTemplateCreditSpecificationOutput) CpuCredits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCreditSpecification) *string { return v.CpuCredits }).(pulumi.StringPtrOutput)
}

type LaunchTemplateCreditSpecificationPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCreditSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCreditSpecification)(nil)).Elem()
}

func (o LaunchTemplateCreditSpecificationPtrOutput) ToLaunchTemplateCreditSpecificationPtrOutput() LaunchTemplateCreditSpecificationPtrOutput {
	return o
}

func (o LaunchTemplateCreditSpecificationPtrOutput) ToLaunchTemplateCreditSpecificationPtrOutputWithContext(ctx context.Context) LaunchTemplateCreditSpecificationPtrOutput {
	return o
}

func (o LaunchTemplateCreditSpecificationPtrOutput) Elem() LaunchTemplateCreditSpecificationOutput {
	return o.ApplyT(func(v *LaunchTemplateCreditSpecification) LaunchTemplateCreditSpecification { return *v }).(LaunchTemplateCreditSpecificationOutput)
}

// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
func (o LaunchTemplateCreditSpecificationPtrOutput) CpuCredits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCreditSpecification) *string { return v.CpuCredits }).(pulumi.StringPtrOutput)
}

type LaunchTemplateCreditSpecificationArgs struct {
	// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits *string `pulumi:"cpuCredits"`
}

type LaunchTemplateCreditSpecificationArgsInput interface {
	pulumi.Input

	ToLaunchTemplateCreditSpecificationArgsOutput() LaunchTemplateCreditSpecificationArgsOutput
	ToLaunchTemplateCreditSpecificationArgsOutputWithContext(context.Context) LaunchTemplateCreditSpecificationArgsOutput
}

type LaunchTemplateCreditSpecificationArgsArgs struct {
	// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits pulumi.StringPtrInput `pulumi:"cpuCredits"`
}

func (LaunchTemplateCreditSpecificationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCreditSpecificationArgs)(nil)).Elem()
}

func (i LaunchTemplateCreditSpecificationArgsArgs) ToLaunchTemplateCreditSpecificationArgsOutput() LaunchTemplateCreditSpecificationArgsOutput {
	return i.ToLaunchTemplateCreditSpecificationArgsOutputWithContext(context.Background())
}

func (i LaunchTemplateCreditSpecificationArgsArgs) ToLaunchTemplateCreditSpecificationArgsOutputWithContext(ctx context.Context) LaunchTemplateCreditSpecificationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCreditSpecificationArgsOutput)
}

func (i LaunchTemplateCreditSpecificationArgsArgs) ToLaunchTemplateCreditSpecificationArgsPtrOutput() LaunchTemplateCreditSpecificationArgsPtrOutput {
	return i.ToLaunchTemplateCreditSpecificationArgsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateCreditSpecificationArgsArgs) ToLaunchTemplateCreditSpecificationArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateCreditSpecificationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCreditSpecificationArgsOutput).ToLaunchTemplateCreditSpecificationArgsPtrOutputWithContext(ctx)
}

type LaunchTemplateCreditSpecificationArgsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateCreditSpecificationArgsPtrOutput() LaunchTemplateCreditSpecificationArgsPtrOutput
	ToLaunchTemplateCreditSpecificationArgsPtrOutputWithContext(context.Context) LaunchTemplateCreditSpecificationArgsPtrOutput
}

type launchTemplateCreditSpecificationArgsPtrType LaunchTemplateCreditSpecificationArgsArgs

func LaunchTemplateCreditSpecificationArgsPtr(v *LaunchTemplateCreditSpecificationArgsArgs) LaunchTemplateCreditSpecificationArgsPtrInput {
	return (*launchTemplateCreditSpecificationArgsPtrType)(v)
}

func (*launchTemplateCreditSpecificationArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCreditSpecificationArgs)(nil)).Elem()
}

func (i *launchTemplateCreditSpecificationArgsPtrType) ToLaunchTemplateCreditSpecificationArgsPtrOutput() LaunchTemplateCreditSpecificationArgsPtrOutput {
	return i.ToLaunchTemplateCreditSpecificationArgsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateCreditSpecificationArgsPtrType) ToLaunchTemplateCreditSpecificationArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateCreditSpecificationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCreditSpecificationArgsPtrOutput)
}

type LaunchTemplateCreditSpecificationArgsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCreditSpecificationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCreditSpecificationArgs)(nil)).Elem()
}

func (o LaunchTemplateCreditSpecificationArgsOutput) ToLaunchTemplateCreditSpecificationArgsOutput() LaunchTemplateCreditSpecificationArgsOutput {
	return o
}

func (o LaunchTemplateCreditSpecificationArgsOutput) ToLaunchTemplateCreditSpecificationArgsOutputWithContext(ctx context.Context) LaunchTemplateCreditSpecificationArgsOutput {
	return o
}

func (o LaunchTemplateCreditSpecificationArgsOutput) ToLaunchTemplateCreditSpecificationArgsPtrOutput() LaunchTemplateCreditSpecificationArgsPtrOutput {
	return o.ToLaunchTemplateCreditSpecificationArgsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateCreditSpecificationArgsOutput) ToLaunchTemplateCreditSpecificationArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateCreditSpecificationArgsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCreditSpecificationArgs) *LaunchTemplateCreditSpecificationArgs {
		return &v
	}).(LaunchTemplateCreditSpecificationArgsPtrOutput)
}

// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
func (o LaunchTemplateCreditSpecificationArgsOutput) CpuCredits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCreditSpecificationArgs) *string { return v.CpuCredits }).(pulumi.StringPtrOutput)
}

type LaunchTemplateCreditSpecificationArgsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCreditSpecificationArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCreditSpecificationArgs)(nil)).Elem()
}

func (o LaunchTemplateCreditSpecificationArgsPtrOutput) ToLaunchTemplateCreditSpecificationArgsPtrOutput() LaunchTemplateCreditSpecificationArgsPtrOutput {
	return o
}

func (o LaunchTemplateCreditSpecificationArgsPtrOutput) ToLaunchTemplateCreditSpecificationArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateCreditSpecificationArgsPtrOutput {
	return o
}

func (o LaunchTemplateCreditSpecificationArgsPtrOutput) Elem() LaunchTemplateCreditSpecificationArgsOutput {
	return o.ApplyT(func(v *LaunchTemplateCreditSpecificationArgs) LaunchTemplateCreditSpecificationArgs { return *v }).(LaunchTemplateCreditSpecificationArgsOutput)
}

// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
func (o LaunchTemplateCreditSpecificationArgsPtrOutput) CpuCredits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCreditSpecificationArgs) *string { return v.CpuCredits }).(pulumi.StringPtrOutput)
}

type LaunchTemplateCreditSpecificationState struct {
	// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits *string `pulumi:"cpuCredits"`
}

type LaunchTemplateCreditSpecificationStateInput interface {
	pulumi.Input

	ToLaunchTemplateCreditSpecificationStateOutput() LaunchTemplateCreditSpecificationStateOutput
	ToLaunchTemplateCreditSpecificationStateOutputWithContext(context.Context) LaunchTemplateCreditSpecificationStateOutput
}

type LaunchTemplateCreditSpecificationStateArgs struct {
	// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits pulumi.StringPtrInput `pulumi:"cpuCredits"`
}

func (LaunchTemplateCreditSpecificationStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCreditSpecificationState)(nil)).Elem()
}

func (i LaunchTemplateCreditSpecificationStateArgs) ToLaunchTemplateCreditSpecificationStateOutput() LaunchTemplateCreditSpecificationStateOutput {
	return i.ToLaunchTemplateCreditSpecificationStateOutputWithContext(context.Background())
}

func (i LaunchTemplateCreditSpecificationStateArgs) ToLaunchTemplateCreditSpecificationStateOutputWithContext(ctx context.Context) LaunchTemplateCreditSpecificationStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCreditSpecificationStateOutput)
}

type LaunchTemplateCreditSpecificationStateOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCreditSpecificationStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCreditSpecificationState)(nil)).Elem()
}

func (o LaunchTemplateCreditSpecificationStateOutput) ToLaunchTemplateCreditSpecificationStateOutput() LaunchTemplateCreditSpecificationStateOutput {
	return o
}

func (o LaunchTemplateCreditSpecificationStateOutput) ToLaunchTemplateCreditSpecificationStateOutputWithContext(ctx context.Context) LaunchTemplateCreditSpecificationStateOutput {
	return o
}

// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
func (o LaunchTemplateCreditSpecificationStateOutput) CpuCredits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCreditSpecificationState) *string { return v.CpuCredits }).(pulumi.StringPtrOutput)
}

type LaunchTemplateElasticGpuSpecification struct {
	// The [Elastic GPU Type](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-gpus.html#elastic-gpus-basics)
	Type string `pulumi:"type"`
}

type LaunchTemplateElasticGpuSpecificationInput interface {
	pulumi.Input

	ToLaunchTemplateElasticGpuSpecificationOutput() LaunchTemplateElasticGpuSpecificationOutput
	ToLaunchTemplateElasticGpuSpecificationOutputWithContext(context.Context) LaunchTemplateElasticGpuSpecificationOutput
}

type LaunchTemplateElasticGpuSpecificationArgs struct {
	// The [Elastic GPU Type](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-gpus.html#elastic-gpus-basics)
	Type pulumi.StringInput `pulumi:"type"`
}

func (LaunchTemplateElasticGpuSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateElasticGpuSpecification)(nil)).Elem()
}

func (i LaunchTemplateElasticGpuSpecificationArgs) ToLaunchTemplateElasticGpuSpecificationOutput() LaunchTemplateElasticGpuSpecificationOutput {
	return i.ToLaunchTemplateElasticGpuSpecificationOutputWithContext(context.Background())
}

func (i LaunchTemplateElasticGpuSpecificationArgs) ToLaunchTemplateElasticGpuSpecificationOutputWithContext(ctx context.Context) LaunchTemplateElasticGpuSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateElasticGpuSpecificationOutput)
}

type LaunchTemplateElasticGpuSpecificationArrayInput interface {
	pulumi.Input

	ToLaunchTemplateElasticGpuSpecificationArrayOutput() LaunchTemplateElasticGpuSpecificationArrayOutput
	ToLaunchTemplateElasticGpuSpecificationArrayOutputWithContext(context.Context) LaunchTemplateElasticGpuSpecificationArrayOutput
}

type LaunchTemplateElasticGpuSpecificationArray []LaunchTemplateElasticGpuSpecificationInput

func (LaunchTemplateElasticGpuSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateElasticGpuSpecification)(nil)).Elem()
}

func (i LaunchTemplateElasticGpuSpecificationArray) ToLaunchTemplateElasticGpuSpecificationArrayOutput() LaunchTemplateElasticGpuSpecificationArrayOutput {
	return i.ToLaunchTemplateElasticGpuSpecificationArrayOutputWithContext(context.Background())
}

func (i LaunchTemplateElasticGpuSpecificationArray) ToLaunchTemplateElasticGpuSpecificationArrayOutputWithContext(ctx context.Context) LaunchTemplateElasticGpuSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateElasticGpuSpecificationArrayOutput)
}

type LaunchTemplateElasticGpuSpecificationOutput struct{ *pulumi.OutputState }

func (LaunchTemplateElasticGpuSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateElasticGpuSpecification)(nil)).Elem()
}

func (o LaunchTemplateElasticGpuSpecificationOutput) ToLaunchTemplateElasticGpuSpecificationOutput() LaunchTemplateElasticGpuSpecificationOutput {
	return o
}

func (o LaunchTemplateElasticGpuSpecificationOutput) ToLaunchTemplateElasticGpuSpecificationOutputWithContext(ctx context.Context) LaunchTemplateElasticGpuSpecificationOutput {
	return o
}

// The [Elastic GPU Type](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-gpus.html#elastic-gpus-basics)
func (o LaunchTemplateElasticGpuSpecificationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchTemplateElasticGpuSpecification) string { return v.Type }).(pulumi.StringOutput)
}

type LaunchTemplateElasticGpuSpecificationArrayOutput struct{ *pulumi.OutputState }

func (LaunchTemplateElasticGpuSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateElasticGpuSpecification)(nil)).Elem()
}

func (o LaunchTemplateElasticGpuSpecificationArrayOutput) ToLaunchTemplateElasticGpuSpecificationArrayOutput() LaunchTemplateElasticGpuSpecificationArrayOutput {
	return o
}

func (o LaunchTemplateElasticGpuSpecificationArrayOutput) ToLaunchTemplateElasticGpuSpecificationArrayOutputWithContext(ctx context.Context) LaunchTemplateElasticGpuSpecificationArrayOutput {
	return o
}

func (o LaunchTemplateElasticGpuSpecificationArrayOutput) Index(i pulumi.IntInput) LaunchTemplateElasticGpuSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchTemplateElasticGpuSpecification {
		return vs[0].([]LaunchTemplateElasticGpuSpecification)[vs[1].(int)]
	}).(LaunchTemplateElasticGpuSpecificationOutput)
}

type LaunchTemplateElasticGpuSpecificationArgs struct {
	// The [Elastic GPU Type](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-gpus.html#elastic-gpus-basics)
	Type string `pulumi:"type"`
}

type LaunchTemplateElasticGpuSpecificationArgsInput interface {
	pulumi.Input

	ToLaunchTemplateElasticGpuSpecificationArgsOutput() LaunchTemplateElasticGpuSpecificationArgsOutput
	ToLaunchTemplateElasticGpuSpecificationArgsOutputWithContext(context.Context) LaunchTemplateElasticGpuSpecificationArgsOutput
}

type LaunchTemplateElasticGpuSpecificationArgsArgs struct {
	// The [Elastic GPU Type](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-gpus.html#elastic-gpus-basics)
	Type pulumi.StringInput `pulumi:"type"`
}

func (LaunchTemplateElasticGpuSpecificationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateElasticGpuSpecificationArgs)(nil)).Elem()
}

func (i LaunchTemplateElasticGpuSpecificationArgsArgs) ToLaunchTemplateElasticGpuSpecificationArgsOutput() LaunchTemplateElasticGpuSpecificationArgsOutput {
	return i.ToLaunchTemplateElasticGpuSpecificationArgsOutputWithContext(context.Background())
}

func (i LaunchTemplateElasticGpuSpecificationArgsArgs) ToLaunchTemplateElasticGpuSpecificationArgsOutputWithContext(ctx context.Context) LaunchTemplateElasticGpuSpecificationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateElasticGpuSpecificationArgsOutput)
}

type LaunchTemplateElasticGpuSpecificationArgsArrayInput interface {
	pulumi.Input

	ToLaunchTemplateElasticGpuSpecificationArgsArrayOutput() LaunchTemplateElasticGpuSpecificationArgsArrayOutput
	ToLaunchTemplateElasticGpuSpecificationArgsArrayOutputWithContext(context.Context) LaunchTemplateElasticGpuSpecificationArgsArrayOutput
}

type LaunchTemplateElasticGpuSpecificationArgsArray []LaunchTemplateElasticGpuSpecificationArgsInput

func (LaunchTemplateElasticGpuSpecificationArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateElasticGpuSpecificationArgs)(nil)).Elem()
}

func (i LaunchTemplateElasticGpuSpecificationArgsArray) ToLaunchTemplateElasticGpuSpecificationArgsArrayOutput() LaunchTemplateElasticGpuSpecificationArgsArrayOutput {
	return i.ToLaunchTemplateElasticGpuSpecificationArgsArrayOutputWithContext(context.Background())
}

func (i LaunchTemplateElasticGpuSpecificationArgsArray) ToLaunchTemplateElasticGpuSpecificationArgsArrayOutputWithContext(ctx context.Context) LaunchTemplateElasticGpuSpecificationArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateElasticGpuSpecificationArgsArrayOutput)
}

type LaunchTemplateElasticGpuSpecificationArgsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateElasticGpuSpecificationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateElasticGpuSpecificationArgs)(nil)).Elem()
}

func (o LaunchTemplateElasticGpuSpecificationArgsOutput) ToLaunchTemplateElasticGpuSpecificationArgsOutput() LaunchTemplateElasticGpuSpecificationArgsOutput {
	return o
}

func (o LaunchTemplateElasticGpuSpecificationArgsOutput) ToLaunchTemplateElasticGpuSpecificationArgsOutputWithContext(ctx context.Context) LaunchTemplateElasticGpuSpecificationArgsOutput {
	return o
}

// The [Elastic GPU Type](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-gpus.html#elastic-gpus-basics)
func (o LaunchTemplateElasticGpuSpecificationArgsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchTemplateElasticGpuSpecificationArgs) string { return v.Type }).(pulumi.StringOutput)
}

type LaunchTemplateElasticGpuSpecificationArgsArrayOutput struct{ *pulumi.OutputState }

func (LaunchTemplateElasticGpuSpecificationArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateElasticGpuSpecificationArgs)(nil)).Elem()
}

func (o LaunchTemplateElasticGpuSpecificationArgsArrayOutput) ToLaunchTemplateElasticGpuSpecificationArgsArrayOutput() LaunchTemplateElasticGpuSpecificationArgsArrayOutput {
	return o
}

func (o LaunchTemplateElasticGpuSpecificationArgsArrayOutput) ToLaunchTemplateElasticGpuSpecificationArgsArrayOutputWithContext(ctx context.Context) LaunchTemplateElasticGpuSpecificationArgsArrayOutput {
	return o
}

func (o LaunchTemplateElasticGpuSpecificationArgsArrayOutput) Index(i pulumi.IntInput) LaunchTemplateElasticGpuSpecificationArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchTemplateElasticGpuSpecificationArgs {
		return vs[0].([]LaunchTemplateElasticGpuSpecificationArgs)[vs[1].(int)]
	}).(LaunchTemplateElasticGpuSpecificationArgsOutput)
}

type LaunchTemplateElasticGpuSpecificationState struct {
	// The [Elastic GPU Type](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-gpus.html#elastic-gpus-basics)
	Type string `pulumi:"type"`
}

type LaunchTemplateElasticGpuSpecificationStateInput interface {
	pulumi.Input

	ToLaunchTemplateElasticGpuSpecificationStateOutput() LaunchTemplateElasticGpuSpecificationStateOutput
	ToLaunchTemplateElasticGpuSpecificationStateOutputWithContext(context.Context) LaunchTemplateElasticGpuSpecificationStateOutput
}

type LaunchTemplateElasticGpuSpecificationStateArgs struct {
	// The [Elastic GPU Type](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-gpus.html#elastic-gpus-basics)
	Type pulumi.StringInput `pulumi:"type"`
}

func (LaunchTemplateElasticGpuSpecificationStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateElasticGpuSpecificationState)(nil)).Elem()
}

func (i LaunchTemplateElasticGpuSpecificationStateArgs) ToLaunchTemplateElasticGpuSpecificationStateOutput() LaunchTemplateElasticGpuSpecificationStateOutput {
	return i.ToLaunchTemplateElasticGpuSpecificationStateOutputWithContext(context.Background())
}

func (i LaunchTemplateElasticGpuSpecificationStateArgs) ToLaunchTemplateElasticGpuSpecificationStateOutputWithContext(ctx context.Context) LaunchTemplateElasticGpuSpecificationStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateElasticGpuSpecificationStateOutput)
}

type LaunchTemplateElasticGpuSpecificationStateArrayInput interface {
	pulumi.Input

	ToLaunchTemplateElasticGpuSpecificationStateArrayOutput() LaunchTemplateElasticGpuSpecificationStateArrayOutput
	ToLaunchTemplateElasticGpuSpecificationStateArrayOutputWithContext(context.Context) LaunchTemplateElasticGpuSpecificationStateArrayOutput
}

type LaunchTemplateElasticGpuSpecificationStateArray []LaunchTemplateElasticGpuSpecificationStateInput

func (LaunchTemplateElasticGpuSpecificationStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateElasticGpuSpecificationState)(nil)).Elem()
}

func (i LaunchTemplateElasticGpuSpecificationStateArray) ToLaunchTemplateElasticGpuSpecificationStateArrayOutput() LaunchTemplateElasticGpuSpecificationStateArrayOutput {
	return i.ToLaunchTemplateElasticGpuSpecificationStateArrayOutputWithContext(context.Background())
}

func (i LaunchTemplateElasticGpuSpecificationStateArray) ToLaunchTemplateElasticGpuSpecificationStateArrayOutputWithContext(ctx context.Context) LaunchTemplateElasticGpuSpecificationStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateElasticGpuSpecificationStateArrayOutput)
}

type LaunchTemplateElasticGpuSpecificationStateOutput struct{ *pulumi.OutputState }

func (LaunchTemplateElasticGpuSpecificationStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateElasticGpuSpecificationState)(nil)).Elem()
}

func (o LaunchTemplateElasticGpuSpecificationStateOutput) ToLaunchTemplateElasticGpuSpecificationStateOutput() LaunchTemplateElasticGpuSpecificationStateOutput {
	return o
}

func (o LaunchTemplateElasticGpuSpecificationStateOutput) ToLaunchTemplateElasticGpuSpecificationStateOutputWithContext(ctx context.Context) LaunchTemplateElasticGpuSpecificationStateOutput {
	return o
}

// The [Elastic GPU Type](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-gpus.html#elastic-gpus-basics)
func (o LaunchTemplateElasticGpuSpecificationStateOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchTemplateElasticGpuSpecificationState) string { return v.Type }).(pulumi.StringOutput)
}

type LaunchTemplateElasticGpuSpecificationStateArrayOutput struct{ *pulumi.OutputState }

func (LaunchTemplateElasticGpuSpecificationStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateElasticGpuSpecificationState)(nil)).Elem()
}

func (o LaunchTemplateElasticGpuSpecificationStateArrayOutput) ToLaunchTemplateElasticGpuSpecificationStateArrayOutput() LaunchTemplateElasticGpuSpecificationStateArrayOutput {
	return o
}

func (o LaunchTemplateElasticGpuSpecificationStateArrayOutput) ToLaunchTemplateElasticGpuSpecificationStateArrayOutputWithContext(ctx context.Context) LaunchTemplateElasticGpuSpecificationStateArrayOutput {
	return o
}

func (o LaunchTemplateElasticGpuSpecificationStateArrayOutput) Index(i pulumi.IntInput) LaunchTemplateElasticGpuSpecificationStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchTemplateElasticGpuSpecificationState {
		return vs[0].([]LaunchTemplateElasticGpuSpecificationState)[vs[1].(int)]
	}).(LaunchTemplateElasticGpuSpecificationStateOutput)
}

type LaunchTemplateElasticInferenceAccelerator struct {
	// Accelerator type.
	Type string `pulumi:"type"`
}

type LaunchTemplateElasticInferenceAcceleratorInput interface {
	pulumi.Input

	ToLaunchTemplateElasticInferenceAcceleratorOutput() LaunchTemplateElasticInferenceAcceleratorOutput
	ToLaunchTemplateElasticInferenceAcceleratorOutputWithContext(context.Context) LaunchTemplateElasticInferenceAcceleratorOutput
}

type LaunchTemplateElasticInferenceAcceleratorArgs struct {
	// Accelerator type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (LaunchTemplateElasticInferenceAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateElasticInferenceAccelerator)(nil)).Elem()
}

func (i LaunchTemplateElasticInferenceAcceleratorArgs) ToLaunchTemplateElasticInferenceAcceleratorOutput() LaunchTemplateElasticInferenceAcceleratorOutput {
	return i.ToLaunchTemplateElasticInferenceAcceleratorOutputWithContext(context.Background())
}

func (i LaunchTemplateElasticInferenceAcceleratorArgs) ToLaunchTemplateElasticInferenceAcceleratorOutputWithContext(ctx context.Context) LaunchTemplateElasticInferenceAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateElasticInferenceAcceleratorOutput)
}

func (i LaunchTemplateElasticInferenceAcceleratorArgs) ToLaunchTemplateElasticInferenceAcceleratorPtrOutput() LaunchTemplateElasticInferenceAcceleratorPtrOutput {
	return i.ToLaunchTemplateElasticInferenceAcceleratorPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateElasticInferenceAcceleratorArgs) ToLaunchTemplateElasticInferenceAcceleratorPtrOutputWithContext(ctx context.Context) LaunchTemplateElasticInferenceAcceleratorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateElasticInferenceAcceleratorOutput).ToLaunchTemplateElasticInferenceAcceleratorPtrOutputWithContext(ctx)
}

type LaunchTemplateElasticInferenceAcceleratorPtrInput interface {
	pulumi.Input

	ToLaunchTemplateElasticInferenceAcceleratorPtrOutput() LaunchTemplateElasticInferenceAcceleratorPtrOutput
	ToLaunchTemplateElasticInferenceAcceleratorPtrOutputWithContext(context.Context) LaunchTemplateElasticInferenceAcceleratorPtrOutput
}

type launchTemplateElasticInferenceAcceleratorPtrType LaunchTemplateElasticInferenceAcceleratorArgs

func LaunchTemplateElasticInferenceAcceleratorPtr(v *LaunchTemplateElasticInferenceAcceleratorArgs) LaunchTemplateElasticInferenceAcceleratorPtrInput {
	return (*launchTemplateElasticInferenceAcceleratorPtrType)(v)
}

func (*launchTemplateElasticInferenceAcceleratorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateElasticInferenceAccelerator)(nil)).Elem()
}

func (i *launchTemplateElasticInferenceAcceleratorPtrType) ToLaunchTemplateElasticInferenceAcceleratorPtrOutput() LaunchTemplateElasticInferenceAcceleratorPtrOutput {
	return i.ToLaunchTemplateElasticInferenceAcceleratorPtrOutputWithContext(context.Background())
}

func (i *launchTemplateElasticInferenceAcceleratorPtrType) ToLaunchTemplateElasticInferenceAcceleratorPtrOutputWithContext(ctx context.Context) LaunchTemplateElasticInferenceAcceleratorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateElasticInferenceAcceleratorPtrOutput)
}

type LaunchTemplateElasticInferenceAcceleratorOutput struct{ *pulumi.OutputState }

func (LaunchTemplateElasticInferenceAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateElasticInferenceAccelerator)(nil)).Elem()
}

func (o LaunchTemplateElasticInferenceAcceleratorOutput) ToLaunchTemplateElasticInferenceAcceleratorOutput() LaunchTemplateElasticInferenceAcceleratorOutput {
	return o
}

func (o LaunchTemplateElasticInferenceAcceleratorOutput) ToLaunchTemplateElasticInferenceAcceleratorOutputWithContext(ctx context.Context) LaunchTemplateElasticInferenceAcceleratorOutput {
	return o
}

func (o LaunchTemplateElasticInferenceAcceleratorOutput) ToLaunchTemplateElasticInferenceAcceleratorPtrOutput() LaunchTemplateElasticInferenceAcceleratorPtrOutput {
	return o.ToLaunchTemplateElasticInferenceAcceleratorPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateElasticInferenceAcceleratorOutput) ToLaunchTemplateElasticInferenceAcceleratorPtrOutputWithContext(ctx context.Context) LaunchTemplateElasticInferenceAcceleratorPtrOutput {
	return o.ApplyT(func(v LaunchTemplateElasticInferenceAccelerator) *LaunchTemplateElasticInferenceAccelerator {
		return &v
	}).(LaunchTemplateElasticInferenceAcceleratorPtrOutput)
}

// Accelerator type.
func (o LaunchTemplateElasticInferenceAcceleratorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchTemplateElasticInferenceAccelerator) string { return v.Type }).(pulumi.StringOutput)
}

type LaunchTemplateElasticInferenceAcceleratorPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateElasticInferenceAcceleratorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateElasticInferenceAccelerator)(nil)).Elem()
}

func (o LaunchTemplateElasticInferenceAcceleratorPtrOutput) ToLaunchTemplateElasticInferenceAcceleratorPtrOutput() LaunchTemplateElasticInferenceAcceleratorPtrOutput {
	return o
}

func (o LaunchTemplateElasticInferenceAcceleratorPtrOutput) ToLaunchTemplateElasticInferenceAcceleratorPtrOutputWithContext(ctx context.Context) LaunchTemplateElasticInferenceAcceleratorPtrOutput {
	return o
}

func (o LaunchTemplateElasticInferenceAcceleratorPtrOutput) Elem() LaunchTemplateElasticInferenceAcceleratorOutput {
	return o.ApplyT(func(v *LaunchTemplateElasticInferenceAccelerator) LaunchTemplateElasticInferenceAccelerator {
		return *v
	}).(LaunchTemplateElasticInferenceAcceleratorOutput)
}

// Accelerator type.
func (o LaunchTemplateElasticInferenceAcceleratorPtrOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchTemplateElasticInferenceAccelerator) string { return v.Type }).(pulumi.StringOutput)
}

type LaunchTemplateElasticInferenceAcceleratorArgs struct {
	// Accelerator type.
	Type string `pulumi:"type"`
}

type LaunchTemplateElasticInferenceAcceleratorArgsInput interface {
	pulumi.Input

	ToLaunchTemplateElasticInferenceAcceleratorArgsOutput() LaunchTemplateElasticInferenceAcceleratorArgsOutput
	ToLaunchTemplateElasticInferenceAcceleratorArgsOutputWithContext(context.Context) LaunchTemplateElasticInferenceAcceleratorArgsOutput
}

type LaunchTemplateElasticInferenceAcceleratorArgsArgs struct {
	// Accelerator type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (LaunchTemplateElasticInferenceAcceleratorArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateElasticInferenceAcceleratorArgs)(nil)).Elem()
}

func (i LaunchTemplateElasticInferenceAcceleratorArgsArgs) ToLaunchTemplateElasticInferenceAcceleratorArgsOutput() LaunchTemplateElasticInferenceAcceleratorArgsOutput {
	return i.ToLaunchTemplateElasticInferenceAcceleratorArgsOutputWithContext(context.Background())
}

func (i LaunchTemplateElasticInferenceAcceleratorArgsArgs) ToLaunchTemplateElasticInferenceAcceleratorArgsOutputWithContext(ctx context.Context) LaunchTemplateElasticInferenceAcceleratorArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateElasticInferenceAcceleratorArgsOutput)
}

func (i LaunchTemplateElasticInferenceAcceleratorArgsArgs) ToLaunchTemplateElasticInferenceAcceleratorArgsPtrOutput() LaunchTemplateElasticInferenceAcceleratorArgsPtrOutput {
	return i.ToLaunchTemplateElasticInferenceAcceleratorArgsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateElasticInferenceAcceleratorArgsArgs) ToLaunchTemplateElasticInferenceAcceleratorArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateElasticInferenceAcceleratorArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateElasticInferenceAcceleratorArgsOutput).ToLaunchTemplateElasticInferenceAcceleratorArgsPtrOutputWithContext(ctx)
}

type LaunchTemplateElasticInferenceAcceleratorArgsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateElasticInferenceAcceleratorArgsPtrOutput() LaunchTemplateElasticInferenceAcceleratorArgsPtrOutput
	ToLaunchTemplateElasticInferenceAcceleratorArgsPtrOutputWithContext(context.Context) LaunchTemplateElasticInferenceAcceleratorArgsPtrOutput
}

type launchTemplateElasticInferenceAcceleratorArgsPtrType LaunchTemplateElasticInferenceAcceleratorArgsArgs

func LaunchTemplateElasticInferenceAcceleratorArgsPtr(v *LaunchTemplateElasticInferenceAcceleratorArgsArgs) LaunchTemplateElasticInferenceAcceleratorArgsPtrInput {
	return (*launchTemplateElasticInferenceAcceleratorArgsPtrType)(v)
}

func (*launchTemplateElasticInferenceAcceleratorArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateElasticInferenceAcceleratorArgs)(nil)).Elem()
}

func (i *launchTemplateElasticInferenceAcceleratorArgsPtrType) ToLaunchTemplateElasticInferenceAcceleratorArgsPtrOutput() LaunchTemplateElasticInferenceAcceleratorArgsPtrOutput {
	return i.ToLaunchTemplateElasticInferenceAcceleratorArgsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateElasticInferenceAcceleratorArgsPtrType) ToLaunchTemplateElasticInferenceAcceleratorArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateElasticInferenceAcceleratorArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateElasticInferenceAcceleratorArgsPtrOutput)
}

type LaunchTemplateElasticInferenceAcceleratorArgsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateElasticInferenceAcceleratorArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateElasticInferenceAcceleratorArgs)(nil)).Elem()
}

func (o LaunchTemplateElasticInferenceAcceleratorArgsOutput) ToLaunchTemplateElasticInferenceAcceleratorArgsOutput() LaunchTemplateElasticInferenceAcceleratorArgsOutput {
	return o
}

func (o LaunchTemplateElasticInferenceAcceleratorArgsOutput) ToLaunchTemplateElasticInferenceAcceleratorArgsOutputWithContext(ctx context.Context) LaunchTemplateElasticInferenceAcceleratorArgsOutput {
	return o
}

func (o LaunchTemplateElasticInferenceAcceleratorArgsOutput) ToLaunchTemplateElasticInferenceAcceleratorArgsPtrOutput() LaunchTemplateElasticInferenceAcceleratorArgsPtrOutput {
	return o.ToLaunchTemplateElasticInferenceAcceleratorArgsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateElasticInferenceAcceleratorArgsOutput) ToLaunchTemplateElasticInferenceAcceleratorArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateElasticInferenceAcceleratorArgsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateElasticInferenceAcceleratorArgs) *LaunchTemplateElasticInferenceAcceleratorArgs {
		return &v
	}).(LaunchTemplateElasticInferenceAcceleratorArgsPtrOutput)
}

// Accelerator type.
func (o LaunchTemplateElasticInferenceAcceleratorArgsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchTemplateElasticInferenceAcceleratorArgs) string { return v.Type }).(pulumi.StringOutput)
}

type LaunchTemplateElasticInferenceAcceleratorArgsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateElasticInferenceAcceleratorArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateElasticInferenceAcceleratorArgs)(nil)).Elem()
}

func (o LaunchTemplateElasticInferenceAcceleratorArgsPtrOutput) ToLaunchTemplateElasticInferenceAcceleratorArgsPtrOutput() LaunchTemplateElasticInferenceAcceleratorArgsPtrOutput {
	return o
}

func (o LaunchTemplateElasticInferenceAcceleratorArgsPtrOutput) ToLaunchTemplateElasticInferenceAcceleratorArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateElasticInferenceAcceleratorArgsPtrOutput {
	return o
}

func (o LaunchTemplateElasticInferenceAcceleratorArgsPtrOutput) Elem() LaunchTemplateElasticInferenceAcceleratorArgsOutput {
	return o.ApplyT(func(v *LaunchTemplateElasticInferenceAcceleratorArgs) LaunchTemplateElasticInferenceAcceleratorArgs {
		return *v
	}).(LaunchTemplateElasticInferenceAcceleratorArgsOutput)
}

// Accelerator type.
func (o LaunchTemplateElasticInferenceAcceleratorArgsPtrOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchTemplateElasticInferenceAcceleratorArgs) string { return v.Type }).(pulumi.StringOutput)
}

type LaunchTemplateElasticInferenceAcceleratorState struct {
	// Accelerator type.
	Type string `pulumi:"type"`
}

type LaunchTemplateElasticInferenceAcceleratorStateInput interface {
	pulumi.Input

	ToLaunchTemplateElasticInferenceAcceleratorStateOutput() LaunchTemplateElasticInferenceAcceleratorStateOutput
	ToLaunchTemplateElasticInferenceAcceleratorStateOutputWithContext(context.Context) LaunchTemplateElasticInferenceAcceleratorStateOutput
}

type LaunchTemplateElasticInferenceAcceleratorStateArgs struct {
	// Accelerator type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (LaunchTemplateElasticInferenceAcceleratorStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateElasticInferenceAcceleratorState)(nil)).Elem()
}

func (i LaunchTemplateElasticInferenceAcceleratorStateArgs) ToLaunchTemplateElasticInferenceAcceleratorStateOutput() LaunchTemplateElasticInferenceAcceleratorStateOutput {
	return i.ToLaunchTemplateElasticInferenceAcceleratorStateOutputWithContext(context.Background())
}

func (i LaunchTemplateElasticInferenceAcceleratorStateArgs) ToLaunchTemplateElasticInferenceAcceleratorStateOutputWithContext(ctx context.Context) LaunchTemplateElasticInferenceAcceleratorStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateElasticInferenceAcceleratorStateOutput)
}

type LaunchTemplateElasticInferenceAcceleratorStateOutput struct{ *pulumi.OutputState }

func (LaunchTemplateElasticInferenceAcceleratorStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateElasticInferenceAcceleratorState)(nil)).Elem()
}

func (o LaunchTemplateElasticInferenceAcceleratorStateOutput) ToLaunchTemplateElasticInferenceAcceleratorStateOutput() LaunchTemplateElasticInferenceAcceleratorStateOutput {
	return o
}

func (o LaunchTemplateElasticInferenceAcceleratorStateOutput) ToLaunchTemplateElasticInferenceAcceleratorStateOutputWithContext(ctx context.Context) LaunchTemplateElasticInferenceAcceleratorStateOutput {
	return o
}

// Accelerator type.
func (o LaunchTemplateElasticInferenceAcceleratorStateOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchTemplateElasticInferenceAcceleratorState) string { return v.Type }).(pulumi.StringOutput)
}

type LaunchTemplateHibernationOptions struct {
	// If set to `true`, the launched EC2 instance will hibernation enabled.
	Configured bool `pulumi:"configured"`
}

type LaunchTemplateHibernationOptionsInput interface {
	pulumi.Input

	ToLaunchTemplateHibernationOptionsOutput() LaunchTemplateHibernationOptionsOutput
	ToLaunchTemplateHibernationOptionsOutputWithContext(context.Context) LaunchTemplateHibernationOptionsOutput
}

type LaunchTemplateHibernationOptionsArgs struct {
	// If set to `true`, the launched EC2 instance will hibernation enabled.
	Configured pulumi.BoolInput `pulumi:"configured"`
}

func (LaunchTemplateHibernationOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateHibernationOptions)(nil)).Elem()
}

func (i LaunchTemplateHibernationOptionsArgs) ToLaunchTemplateHibernationOptionsOutput() LaunchTemplateHibernationOptionsOutput {
	return i.ToLaunchTemplateHibernationOptionsOutputWithContext(context.Background())
}

func (i LaunchTemplateHibernationOptionsArgs) ToLaunchTemplateHibernationOptionsOutputWithContext(ctx context.Context) LaunchTemplateHibernationOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateHibernationOptionsOutput)
}

func (i LaunchTemplateHibernationOptionsArgs) ToLaunchTemplateHibernationOptionsPtrOutput() LaunchTemplateHibernationOptionsPtrOutput {
	return i.ToLaunchTemplateHibernationOptionsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateHibernationOptionsArgs) ToLaunchTemplateHibernationOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateHibernationOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateHibernationOptionsOutput).ToLaunchTemplateHibernationOptionsPtrOutputWithContext(ctx)
}

type LaunchTemplateHibernationOptionsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateHibernationOptionsPtrOutput() LaunchTemplateHibernationOptionsPtrOutput
	ToLaunchTemplateHibernationOptionsPtrOutputWithContext(context.Context) LaunchTemplateHibernationOptionsPtrOutput
}

type launchTemplateHibernationOptionsPtrType LaunchTemplateHibernationOptionsArgs

func LaunchTemplateHibernationOptionsPtr(v *LaunchTemplateHibernationOptionsArgs) LaunchTemplateHibernationOptionsPtrInput {
	return (*launchTemplateHibernationOptionsPtrType)(v)
}

func (*launchTemplateHibernationOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateHibernationOptions)(nil)).Elem()
}

func (i *launchTemplateHibernationOptionsPtrType) ToLaunchTemplateHibernationOptionsPtrOutput() LaunchTemplateHibernationOptionsPtrOutput {
	return i.ToLaunchTemplateHibernationOptionsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateHibernationOptionsPtrType) ToLaunchTemplateHibernationOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateHibernationOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateHibernationOptionsPtrOutput)
}

type LaunchTemplateHibernationOptionsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateHibernationOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateHibernationOptions)(nil)).Elem()
}

func (o LaunchTemplateHibernationOptionsOutput) ToLaunchTemplateHibernationOptionsOutput() LaunchTemplateHibernationOptionsOutput {
	return o
}

func (o LaunchTemplateHibernationOptionsOutput) ToLaunchTemplateHibernationOptionsOutputWithContext(ctx context.Context) LaunchTemplateHibernationOptionsOutput {
	return o
}

func (o LaunchTemplateHibernationOptionsOutput) ToLaunchTemplateHibernationOptionsPtrOutput() LaunchTemplateHibernationOptionsPtrOutput {
	return o.ToLaunchTemplateHibernationOptionsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateHibernationOptionsOutput) ToLaunchTemplateHibernationOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateHibernationOptionsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateHibernationOptions) *LaunchTemplateHibernationOptions {
		return &v
	}).(LaunchTemplateHibernationOptionsPtrOutput)
}

// If set to `true`, the launched EC2 instance will hibernation enabled.
func (o LaunchTemplateHibernationOptionsOutput) Configured() pulumi.BoolOutput {
	return o.ApplyT(func(v LaunchTemplateHibernationOptions) bool { return v.Configured }).(pulumi.BoolOutput)
}

type LaunchTemplateHibernationOptionsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateHibernationOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateHibernationOptions)(nil)).Elem()
}

func (o LaunchTemplateHibernationOptionsPtrOutput) ToLaunchTemplateHibernationOptionsPtrOutput() LaunchTemplateHibernationOptionsPtrOutput {
	return o
}

func (o LaunchTemplateHibernationOptionsPtrOutput) ToLaunchTemplateHibernationOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateHibernationOptionsPtrOutput {
	return o
}

func (o LaunchTemplateHibernationOptionsPtrOutput) Elem() LaunchTemplateHibernationOptionsOutput {
	return o.ApplyT(func(v *LaunchTemplateHibernationOptions) LaunchTemplateHibernationOptions { return *v }).(LaunchTemplateHibernationOptionsOutput)
}

// If set to `true`, the launched EC2 instance will hibernation enabled.
func (o LaunchTemplateHibernationOptionsPtrOutput) Configured() pulumi.BoolOutput {
	return o.ApplyT(func(v LaunchTemplateHibernationOptions) bool { return v.Configured }).(pulumi.BoolOutput)
}

type LaunchTemplateHibernationOptionsArgs struct {
	// If set to `true`, the launched EC2 instance will hibernation enabled.
	Configured bool `pulumi:"configured"`
}

type LaunchTemplateHibernationOptionsArgsInput interface {
	pulumi.Input

	ToLaunchTemplateHibernationOptionsArgsOutput() LaunchTemplateHibernationOptionsArgsOutput
	ToLaunchTemplateHibernationOptionsArgsOutputWithContext(context.Context) LaunchTemplateHibernationOptionsArgsOutput
}

type LaunchTemplateHibernationOptionsArgsArgs struct {
	// If set to `true`, the launched EC2 instance will hibernation enabled.
	Configured pulumi.BoolInput `pulumi:"configured"`
}

func (LaunchTemplateHibernationOptionsArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateHibernationOptionsArgs)(nil)).Elem()
}

func (i LaunchTemplateHibernationOptionsArgsArgs) ToLaunchTemplateHibernationOptionsArgsOutput() LaunchTemplateHibernationOptionsArgsOutput {
	return i.ToLaunchTemplateHibernationOptionsArgsOutputWithContext(context.Background())
}

func (i LaunchTemplateHibernationOptionsArgsArgs) ToLaunchTemplateHibernationOptionsArgsOutputWithContext(ctx context.Context) LaunchTemplateHibernationOptionsArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateHibernationOptionsArgsOutput)
}

func (i LaunchTemplateHibernationOptionsArgsArgs) ToLaunchTemplateHibernationOptionsArgsPtrOutput() LaunchTemplateHibernationOptionsArgsPtrOutput {
	return i.ToLaunchTemplateHibernationOptionsArgsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateHibernationOptionsArgsArgs) ToLaunchTemplateHibernationOptionsArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateHibernationOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateHibernationOptionsArgsOutput).ToLaunchTemplateHibernationOptionsArgsPtrOutputWithContext(ctx)
}

type LaunchTemplateHibernationOptionsArgsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateHibernationOptionsArgsPtrOutput() LaunchTemplateHibernationOptionsArgsPtrOutput
	ToLaunchTemplateHibernationOptionsArgsPtrOutputWithContext(context.Context) LaunchTemplateHibernationOptionsArgsPtrOutput
}

type launchTemplateHibernationOptionsArgsPtrType LaunchTemplateHibernationOptionsArgsArgs

func LaunchTemplateHibernationOptionsArgsPtr(v *LaunchTemplateHibernationOptionsArgsArgs) LaunchTemplateHibernationOptionsArgsPtrInput {
	return (*launchTemplateHibernationOptionsArgsPtrType)(v)
}

func (*launchTemplateHibernationOptionsArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateHibernationOptionsArgs)(nil)).Elem()
}

func (i *launchTemplateHibernationOptionsArgsPtrType) ToLaunchTemplateHibernationOptionsArgsPtrOutput() LaunchTemplateHibernationOptionsArgsPtrOutput {
	return i.ToLaunchTemplateHibernationOptionsArgsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateHibernationOptionsArgsPtrType) ToLaunchTemplateHibernationOptionsArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateHibernationOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateHibernationOptionsArgsPtrOutput)
}

type LaunchTemplateHibernationOptionsArgsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateHibernationOptionsArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateHibernationOptionsArgs)(nil)).Elem()
}

func (o LaunchTemplateHibernationOptionsArgsOutput) ToLaunchTemplateHibernationOptionsArgsOutput() LaunchTemplateHibernationOptionsArgsOutput {
	return o
}

func (o LaunchTemplateHibernationOptionsArgsOutput) ToLaunchTemplateHibernationOptionsArgsOutputWithContext(ctx context.Context) LaunchTemplateHibernationOptionsArgsOutput {
	return o
}

func (o LaunchTemplateHibernationOptionsArgsOutput) ToLaunchTemplateHibernationOptionsArgsPtrOutput() LaunchTemplateHibernationOptionsArgsPtrOutput {
	return o.ToLaunchTemplateHibernationOptionsArgsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateHibernationOptionsArgsOutput) ToLaunchTemplateHibernationOptionsArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateHibernationOptionsArgsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateHibernationOptionsArgs) *LaunchTemplateHibernationOptionsArgs {
		return &v
	}).(LaunchTemplateHibernationOptionsArgsPtrOutput)
}

// If set to `true`, the launched EC2 instance will hibernation enabled.
func (o LaunchTemplateHibernationOptionsArgsOutput) Configured() pulumi.BoolOutput {
	return o.ApplyT(func(v LaunchTemplateHibernationOptionsArgs) bool { return v.Configured }).(pulumi.BoolOutput)
}

type LaunchTemplateHibernationOptionsArgsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateHibernationOptionsArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateHibernationOptionsArgs)(nil)).Elem()
}

func (o LaunchTemplateHibernationOptionsArgsPtrOutput) ToLaunchTemplateHibernationOptionsArgsPtrOutput() LaunchTemplateHibernationOptionsArgsPtrOutput {
	return o
}

func (o LaunchTemplateHibernationOptionsArgsPtrOutput) ToLaunchTemplateHibernationOptionsArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateHibernationOptionsArgsPtrOutput {
	return o
}

func (o LaunchTemplateHibernationOptionsArgsPtrOutput) Elem() LaunchTemplateHibernationOptionsArgsOutput {
	return o.ApplyT(func(v *LaunchTemplateHibernationOptionsArgs) LaunchTemplateHibernationOptionsArgs { return *v }).(LaunchTemplateHibernationOptionsArgsOutput)
}

// If set to `true`, the launched EC2 instance will hibernation enabled.
func (o LaunchTemplateHibernationOptionsArgsPtrOutput) Configured() pulumi.BoolOutput {
	return o.ApplyT(func(v LaunchTemplateHibernationOptionsArgs) bool { return v.Configured }).(pulumi.BoolOutput)
}

type LaunchTemplateHibernationOptionsState struct {
	// If set to `true`, the launched EC2 instance will hibernation enabled.
	Configured bool `pulumi:"configured"`
}

type LaunchTemplateHibernationOptionsStateInput interface {
	pulumi.Input

	ToLaunchTemplateHibernationOptionsStateOutput() LaunchTemplateHibernationOptionsStateOutput
	ToLaunchTemplateHibernationOptionsStateOutputWithContext(context.Context) LaunchTemplateHibernationOptionsStateOutput
}

type LaunchTemplateHibernationOptionsStateArgs struct {
	// If set to `true`, the launched EC2 instance will hibernation enabled.
	Configured pulumi.BoolInput `pulumi:"configured"`
}

func (LaunchTemplateHibernationOptionsStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateHibernationOptionsState)(nil)).Elem()
}

func (i LaunchTemplateHibernationOptionsStateArgs) ToLaunchTemplateHibernationOptionsStateOutput() LaunchTemplateHibernationOptionsStateOutput {
	return i.ToLaunchTemplateHibernationOptionsStateOutputWithContext(context.Background())
}

func (i LaunchTemplateHibernationOptionsStateArgs) ToLaunchTemplateHibernationOptionsStateOutputWithContext(ctx context.Context) LaunchTemplateHibernationOptionsStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateHibernationOptionsStateOutput)
}

type LaunchTemplateHibernationOptionsStateOutput struct{ *pulumi.OutputState }

func (LaunchTemplateHibernationOptionsStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateHibernationOptionsState)(nil)).Elem()
}

func (o LaunchTemplateHibernationOptionsStateOutput) ToLaunchTemplateHibernationOptionsStateOutput() LaunchTemplateHibernationOptionsStateOutput {
	return o
}

func (o LaunchTemplateHibernationOptionsStateOutput) ToLaunchTemplateHibernationOptionsStateOutputWithContext(ctx context.Context) LaunchTemplateHibernationOptionsStateOutput {
	return o
}

// If set to `true`, the launched EC2 instance will hibernation enabled.
func (o LaunchTemplateHibernationOptionsStateOutput) Configured() pulumi.BoolOutput {
	return o.ApplyT(func(v LaunchTemplateHibernationOptionsState) bool { return v.Configured }).(pulumi.BoolOutput)
}

type LaunchTemplateIamInstanceProfile struct {
	// The Amazon Resource Name (ARN) of the instance profile.
	Arn *string `pulumi:"arn"`
	// The name of the instance profile.
	Name *string `pulumi:"name"`
}

type LaunchTemplateIamInstanceProfileInput interface {
	pulumi.Input

	ToLaunchTemplateIamInstanceProfileOutput() LaunchTemplateIamInstanceProfileOutput
	ToLaunchTemplateIamInstanceProfileOutputWithContext(context.Context) LaunchTemplateIamInstanceProfileOutput
}

type LaunchTemplateIamInstanceProfileArgs struct {
	// The Amazon Resource Name (ARN) of the instance profile.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// The name of the instance profile.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LaunchTemplateIamInstanceProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateIamInstanceProfile)(nil)).Elem()
}

func (i LaunchTemplateIamInstanceProfileArgs) ToLaunchTemplateIamInstanceProfileOutput() LaunchTemplateIamInstanceProfileOutput {
	return i.ToLaunchTemplateIamInstanceProfileOutputWithContext(context.Background())
}

func (i LaunchTemplateIamInstanceProfileArgs) ToLaunchTemplateIamInstanceProfileOutputWithContext(ctx context.Context) LaunchTemplateIamInstanceProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateIamInstanceProfileOutput)
}

func (i LaunchTemplateIamInstanceProfileArgs) ToLaunchTemplateIamInstanceProfilePtrOutput() LaunchTemplateIamInstanceProfilePtrOutput {
	return i.ToLaunchTemplateIamInstanceProfilePtrOutputWithContext(context.Background())
}

func (i LaunchTemplateIamInstanceProfileArgs) ToLaunchTemplateIamInstanceProfilePtrOutputWithContext(ctx context.Context) LaunchTemplateIamInstanceProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateIamInstanceProfileOutput).ToLaunchTemplateIamInstanceProfilePtrOutputWithContext(ctx)
}

type LaunchTemplateIamInstanceProfilePtrInput interface {
	pulumi.Input

	ToLaunchTemplateIamInstanceProfilePtrOutput() LaunchTemplateIamInstanceProfilePtrOutput
	ToLaunchTemplateIamInstanceProfilePtrOutputWithContext(context.Context) LaunchTemplateIamInstanceProfilePtrOutput
}

type launchTemplateIamInstanceProfilePtrType LaunchTemplateIamInstanceProfileArgs

func LaunchTemplateIamInstanceProfilePtr(v *LaunchTemplateIamInstanceProfileArgs) LaunchTemplateIamInstanceProfilePtrInput {
	return (*launchTemplateIamInstanceProfilePtrType)(v)
}

func (*launchTemplateIamInstanceProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateIamInstanceProfile)(nil)).Elem()
}

func (i *launchTemplateIamInstanceProfilePtrType) ToLaunchTemplateIamInstanceProfilePtrOutput() LaunchTemplateIamInstanceProfilePtrOutput {
	return i.ToLaunchTemplateIamInstanceProfilePtrOutputWithContext(context.Background())
}

func (i *launchTemplateIamInstanceProfilePtrType) ToLaunchTemplateIamInstanceProfilePtrOutputWithContext(ctx context.Context) LaunchTemplateIamInstanceProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateIamInstanceProfilePtrOutput)
}

type LaunchTemplateIamInstanceProfileOutput struct{ *pulumi.OutputState }

func (LaunchTemplateIamInstanceProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateIamInstanceProfile)(nil)).Elem()
}

func (o LaunchTemplateIamInstanceProfileOutput) ToLaunchTemplateIamInstanceProfileOutput() LaunchTemplateIamInstanceProfileOutput {
	return o
}

func (o LaunchTemplateIamInstanceProfileOutput) ToLaunchTemplateIamInstanceProfileOutputWithContext(ctx context.Context) LaunchTemplateIamInstanceProfileOutput {
	return o
}

func (o LaunchTemplateIamInstanceProfileOutput) ToLaunchTemplateIamInstanceProfilePtrOutput() LaunchTemplateIamInstanceProfilePtrOutput {
	return o.ToLaunchTemplateIamInstanceProfilePtrOutputWithContext(context.Background())
}

func (o LaunchTemplateIamInstanceProfileOutput) ToLaunchTemplateIamInstanceProfilePtrOutputWithContext(ctx context.Context) LaunchTemplateIamInstanceProfilePtrOutput {
	return o.ApplyT(func(v LaunchTemplateIamInstanceProfile) *LaunchTemplateIamInstanceProfile {
		return &v
	}).(LaunchTemplateIamInstanceProfilePtrOutput)
}

// The Amazon Resource Name (ARN) of the instance profile.
func (o LaunchTemplateIamInstanceProfileOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateIamInstanceProfile) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The name of the instance profile.
func (o LaunchTemplateIamInstanceProfileOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateIamInstanceProfile) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LaunchTemplateIamInstanceProfilePtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateIamInstanceProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateIamInstanceProfile)(nil)).Elem()
}

func (o LaunchTemplateIamInstanceProfilePtrOutput) ToLaunchTemplateIamInstanceProfilePtrOutput() LaunchTemplateIamInstanceProfilePtrOutput {
	return o
}

func (o LaunchTemplateIamInstanceProfilePtrOutput) ToLaunchTemplateIamInstanceProfilePtrOutputWithContext(ctx context.Context) LaunchTemplateIamInstanceProfilePtrOutput {
	return o
}

func (o LaunchTemplateIamInstanceProfilePtrOutput) Elem() LaunchTemplateIamInstanceProfileOutput {
	return o.ApplyT(func(v *LaunchTemplateIamInstanceProfile) LaunchTemplateIamInstanceProfile { return *v }).(LaunchTemplateIamInstanceProfileOutput)
}

// The Amazon Resource Name (ARN) of the instance profile.
func (o LaunchTemplateIamInstanceProfilePtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateIamInstanceProfile) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The name of the instance profile.
func (o LaunchTemplateIamInstanceProfilePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateIamInstanceProfile) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LaunchTemplateIamInstanceProfileArgs struct {
	// The Amazon Resource Name (ARN) of the instance profile.
	Arn *string `pulumi:"arn"`
	// The name of the instance profile.
	Name *string `pulumi:"name"`
}

type LaunchTemplateIamInstanceProfileArgsInput interface {
	pulumi.Input

	ToLaunchTemplateIamInstanceProfileArgsOutput() LaunchTemplateIamInstanceProfileArgsOutput
	ToLaunchTemplateIamInstanceProfileArgsOutputWithContext(context.Context) LaunchTemplateIamInstanceProfileArgsOutput
}

type LaunchTemplateIamInstanceProfileArgsArgs struct {
	// The Amazon Resource Name (ARN) of the instance profile.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// The name of the instance profile.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LaunchTemplateIamInstanceProfileArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateIamInstanceProfileArgs)(nil)).Elem()
}

func (i LaunchTemplateIamInstanceProfileArgsArgs) ToLaunchTemplateIamInstanceProfileArgsOutput() LaunchTemplateIamInstanceProfileArgsOutput {
	return i.ToLaunchTemplateIamInstanceProfileArgsOutputWithContext(context.Background())
}

func (i LaunchTemplateIamInstanceProfileArgsArgs) ToLaunchTemplateIamInstanceProfileArgsOutputWithContext(ctx context.Context) LaunchTemplateIamInstanceProfileArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateIamInstanceProfileArgsOutput)
}

func (i LaunchTemplateIamInstanceProfileArgsArgs) ToLaunchTemplateIamInstanceProfileArgsPtrOutput() LaunchTemplateIamInstanceProfileArgsPtrOutput {
	return i.ToLaunchTemplateIamInstanceProfileArgsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateIamInstanceProfileArgsArgs) ToLaunchTemplateIamInstanceProfileArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateIamInstanceProfileArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateIamInstanceProfileArgsOutput).ToLaunchTemplateIamInstanceProfileArgsPtrOutputWithContext(ctx)
}

type LaunchTemplateIamInstanceProfileArgsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateIamInstanceProfileArgsPtrOutput() LaunchTemplateIamInstanceProfileArgsPtrOutput
	ToLaunchTemplateIamInstanceProfileArgsPtrOutputWithContext(context.Context) LaunchTemplateIamInstanceProfileArgsPtrOutput
}

type launchTemplateIamInstanceProfileArgsPtrType LaunchTemplateIamInstanceProfileArgsArgs

func LaunchTemplateIamInstanceProfileArgsPtr(v *LaunchTemplateIamInstanceProfileArgsArgs) LaunchTemplateIamInstanceProfileArgsPtrInput {
	return (*launchTemplateIamInstanceProfileArgsPtrType)(v)
}

func (*launchTemplateIamInstanceProfileArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateIamInstanceProfileArgs)(nil)).Elem()
}

func (i *launchTemplateIamInstanceProfileArgsPtrType) ToLaunchTemplateIamInstanceProfileArgsPtrOutput() LaunchTemplateIamInstanceProfileArgsPtrOutput {
	return i.ToLaunchTemplateIamInstanceProfileArgsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateIamInstanceProfileArgsPtrType) ToLaunchTemplateIamInstanceProfileArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateIamInstanceProfileArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateIamInstanceProfileArgsPtrOutput)
}

type LaunchTemplateIamInstanceProfileArgsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateIamInstanceProfileArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateIamInstanceProfileArgs)(nil)).Elem()
}

func (o LaunchTemplateIamInstanceProfileArgsOutput) ToLaunchTemplateIamInstanceProfileArgsOutput() LaunchTemplateIamInstanceProfileArgsOutput {
	return o
}

func (o LaunchTemplateIamInstanceProfileArgsOutput) ToLaunchTemplateIamInstanceProfileArgsOutputWithContext(ctx context.Context) LaunchTemplateIamInstanceProfileArgsOutput {
	return o
}

func (o LaunchTemplateIamInstanceProfileArgsOutput) ToLaunchTemplateIamInstanceProfileArgsPtrOutput() LaunchTemplateIamInstanceProfileArgsPtrOutput {
	return o.ToLaunchTemplateIamInstanceProfileArgsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateIamInstanceProfileArgsOutput) ToLaunchTemplateIamInstanceProfileArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateIamInstanceProfileArgsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateIamInstanceProfileArgs) *LaunchTemplateIamInstanceProfileArgs {
		return &v
	}).(LaunchTemplateIamInstanceProfileArgsPtrOutput)
}

// The Amazon Resource Name (ARN) of the instance profile.
func (o LaunchTemplateIamInstanceProfileArgsOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateIamInstanceProfileArgs) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The name of the instance profile.
func (o LaunchTemplateIamInstanceProfileArgsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateIamInstanceProfileArgs) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LaunchTemplateIamInstanceProfileArgsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateIamInstanceProfileArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateIamInstanceProfileArgs)(nil)).Elem()
}

func (o LaunchTemplateIamInstanceProfileArgsPtrOutput) ToLaunchTemplateIamInstanceProfileArgsPtrOutput() LaunchTemplateIamInstanceProfileArgsPtrOutput {
	return o
}

func (o LaunchTemplateIamInstanceProfileArgsPtrOutput) ToLaunchTemplateIamInstanceProfileArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateIamInstanceProfileArgsPtrOutput {
	return o
}

func (o LaunchTemplateIamInstanceProfileArgsPtrOutput) Elem() LaunchTemplateIamInstanceProfileArgsOutput {
	return o.ApplyT(func(v *LaunchTemplateIamInstanceProfileArgs) LaunchTemplateIamInstanceProfileArgs { return *v }).(LaunchTemplateIamInstanceProfileArgsOutput)
}

// The Amazon Resource Name (ARN) of the instance profile.
func (o LaunchTemplateIamInstanceProfileArgsPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateIamInstanceProfileArgs) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The name of the instance profile.
func (o LaunchTemplateIamInstanceProfileArgsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateIamInstanceProfileArgs) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LaunchTemplateIamInstanceProfileState struct {
	// The Amazon Resource Name (ARN) of the instance profile.
	Arn *string `pulumi:"arn"`
	// The name of the instance profile.
	Name *string `pulumi:"name"`
}

type LaunchTemplateIamInstanceProfileStateInput interface {
	pulumi.Input

	ToLaunchTemplateIamInstanceProfileStateOutput() LaunchTemplateIamInstanceProfileStateOutput
	ToLaunchTemplateIamInstanceProfileStateOutputWithContext(context.Context) LaunchTemplateIamInstanceProfileStateOutput
}

type LaunchTemplateIamInstanceProfileStateArgs struct {
	// The Amazon Resource Name (ARN) of the instance profile.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// The name of the instance profile.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LaunchTemplateIamInstanceProfileStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateIamInstanceProfileState)(nil)).Elem()
}

func (i LaunchTemplateIamInstanceProfileStateArgs) ToLaunchTemplateIamInstanceProfileStateOutput() LaunchTemplateIamInstanceProfileStateOutput {
	return i.ToLaunchTemplateIamInstanceProfileStateOutputWithContext(context.Background())
}

func (i LaunchTemplateIamInstanceProfileStateArgs) ToLaunchTemplateIamInstanceProfileStateOutputWithContext(ctx context.Context) LaunchTemplateIamInstanceProfileStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateIamInstanceProfileStateOutput)
}

type LaunchTemplateIamInstanceProfileStateOutput struct{ *pulumi.OutputState }

func (LaunchTemplateIamInstanceProfileStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateIamInstanceProfileState)(nil)).Elem()
}

func (o LaunchTemplateIamInstanceProfileStateOutput) ToLaunchTemplateIamInstanceProfileStateOutput() LaunchTemplateIamInstanceProfileStateOutput {
	return o
}

func (o LaunchTemplateIamInstanceProfileStateOutput) ToLaunchTemplateIamInstanceProfileStateOutputWithContext(ctx context.Context) LaunchTemplateIamInstanceProfileStateOutput {
	return o
}

// The Amazon Resource Name (ARN) of the instance profile.
func (o LaunchTemplateIamInstanceProfileStateOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateIamInstanceProfileState) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The name of the instance profile.
func (o LaunchTemplateIamInstanceProfileStateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateIamInstanceProfileState) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LaunchTemplateInstanceMarketOptions struct {
	// The market type. Can be `spot`.
	MarketType *string `pulumi:"marketType"`
	// The options for [Spot Instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html)
	SpotOptions *LaunchTemplateInstanceMarketOptionsSpotOptions `pulumi:"spotOptions"`
}

type LaunchTemplateInstanceMarketOptionsInput interface {
	pulumi.Input

	ToLaunchTemplateInstanceMarketOptionsOutput() LaunchTemplateInstanceMarketOptionsOutput
	ToLaunchTemplateInstanceMarketOptionsOutputWithContext(context.Context) LaunchTemplateInstanceMarketOptionsOutput
}

type LaunchTemplateInstanceMarketOptionsArgs struct {
	// The market type. Can be `spot`.
	MarketType pulumi.StringPtrInput `pulumi:"marketType"`
	// The options for [Spot Instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html)
	SpotOptions LaunchTemplateInstanceMarketOptionsSpotOptionsPtrInput `pulumi:"spotOptions"`
}

func (LaunchTemplateInstanceMarketOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceMarketOptions)(nil)).Elem()
}

func (i LaunchTemplateInstanceMarketOptionsArgs) ToLaunchTemplateInstanceMarketOptionsOutput() LaunchTemplateInstanceMarketOptionsOutput {
	return i.ToLaunchTemplateInstanceMarketOptionsOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceMarketOptionsArgs) ToLaunchTemplateInstanceMarketOptionsOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceMarketOptionsOutput)
}

func (i LaunchTemplateInstanceMarketOptionsArgs) ToLaunchTemplateInstanceMarketOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsPtrOutput {
	return i.ToLaunchTemplateInstanceMarketOptionsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceMarketOptionsArgs) ToLaunchTemplateInstanceMarketOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceMarketOptionsOutput).ToLaunchTemplateInstanceMarketOptionsPtrOutputWithContext(ctx)
}

type LaunchTemplateInstanceMarketOptionsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateInstanceMarketOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsPtrOutput
	ToLaunchTemplateInstanceMarketOptionsPtrOutputWithContext(context.Context) LaunchTemplateInstanceMarketOptionsPtrOutput
}

type launchTemplateInstanceMarketOptionsPtrType LaunchTemplateInstanceMarketOptionsArgs

func LaunchTemplateInstanceMarketOptionsPtr(v *LaunchTemplateInstanceMarketOptionsArgs) LaunchTemplateInstanceMarketOptionsPtrInput {
	return (*launchTemplateInstanceMarketOptionsPtrType)(v)
}

func (*launchTemplateInstanceMarketOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateInstanceMarketOptions)(nil)).Elem()
}

func (i *launchTemplateInstanceMarketOptionsPtrType) ToLaunchTemplateInstanceMarketOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsPtrOutput {
	return i.ToLaunchTemplateInstanceMarketOptionsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateInstanceMarketOptionsPtrType) ToLaunchTemplateInstanceMarketOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceMarketOptionsPtrOutput)
}

type LaunchTemplateInstanceMarketOptionsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceMarketOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceMarketOptions)(nil)).Elem()
}

func (o LaunchTemplateInstanceMarketOptionsOutput) ToLaunchTemplateInstanceMarketOptionsOutput() LaunchTemplateInstanceMarketOptionsOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsOutput) ToLaunchTemplateInstanceMarketOptionsOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsOutput) ToLaunchTemplateInstanceMarketOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsPtrOutput {
	return o.ToLaunchTemplateInstanceMarketOptionsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateInstanceMarketOptionsOutput) ToLaunchTemplateInstanceMarketOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptions) *LaunchTemplateInstanceMarketOptions {
		return &v
	}).(LaunchTemplateInstanceMarketOptionsPtrOutput)
}

// The market type. Can be `spot`.
func (o LaunchTemplateInstanceMarketOptionsOutput) MarketType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptions) *string { return v.MarketType }).(pulumi.StringPtrOutput)
}

// The options for [Spot Instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html)
func (o LaunchTemplateInstanceMarketOptionsOutput) SpotOptions() LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptions) *LaunchTemplateInstanceMarketOptionsSpotOptions {
		return v.SpotOptions
	}).(LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput)
}

type LaunchTemplateInstanceMarketOptionsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceMarketOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateInstanceMarketOptions)(nil)).Elem()
}

func (o LaunchTemplateInstanceMarketOptionsPtrOutput) ToLaunchTemplateInstanceMarketOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsPtrOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsPtrOutput) ToLaunchTemplateInstanceMarketOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsPtrOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsPtrOutput) Elem() LaunchTemplateInstanceMarketOptionsOutput {
	return o.ApplyT(func(v *LaunchTemplateInstanceMarketOptions) LaunchTemplateInstanceMarketOptions { return *v }).(LaunchTemplateInstanceMarketOptionsOutput)
}

// The market type. Can be `spot`.
func (o LaunchTemplateInstanceMarketOptionsPtrOutput) MarketType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptions) *string { return v.MarketType }).(pulumi.StringPtrOutput)
}

// The options for [Spot Instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html)
func (o LaunchTemplateInstanceMarketOptionsPtrOutput) SpotOptions() LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptions) *LaunchTemplateInstanceMarketOptionsSpotOptions {
		return v.SpotOptions
	}).(LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput)
}

type LaunchTemplateInstanceMarketOptionsArgs struct {
	// The market type. Can be `spot`.
	MarketType *string `pulumi:"marketType"`
	// The options for [Spot Instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html)
	SpotOptions *LaunchTemplateInstanceMarketOptionsSpotOptionsArgs `pulumi:"spotOptions"`
}

type LaunchTemplateInstanceMarketOptionsArgsInput interface {
	pulumi.Input

	ToLaunchTemplateInstanceMarketOptionsArgsOutput() LaunchTemplateInstanceMarketOptionsArgsOutput
	ToLaunchTemplateInstanceMarketOptionsArgsOutputWithContext(context.Context) LaunchTemplateInstanceMarketOptionsArgsOutput
}

type LaunchTemplateInstanceMarketOptionsArgsArgs struct {
	// The market type. Can be `spot`.
	MarketType pulumi.StringPtrInput `pulumi:"marketType"`
	// The options for [Spot Instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html)
	SpotOptions LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrInput `pulumi:"spotOptions"`
}

func (LaunchTemplateInstanceMarketOptionsArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceMarketOptionsArgs)(nil)).Elem()
}

func (i LaunchTemplateInstanceMarketOptionsArgsArgs) ToLaunchTemplateInstanceMarketOptionsArgsOutput() LaunchTemplateInstanceMarketOptionsArgsOutput {
	return i.ToLaunchTemplateInstanceMarketOptionsArgsOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceMarketOptionsArgsArgs) ToLaunchTemplateInstanceMarketOptionsArgsOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceMarketOptionsArgsOutput)
}

func (i LaunchTemplateInstanceMarketOptionsArgsArgs) ToLaunchTemplateInstanceMarketOptionsArgsPtrOutput() LaunchTemplateInstanceMarketOptionsArgsPtrOutput {
	return i.ToLaunchTemplateInstanceMarketOptionsArgsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceMarketOptionsArgsArgs) ToLaunchTemplateInstanceMarketOptionsArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceMarketOptionsArgsOutput).ToLaunchTemplateInstanceMarketOptionsArgsPtrOutputWithContext(ctx)
}

type LaunchTemplateInstanceMarketOptionsArgsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateInstanceMarketOptionsArgsPtrOutput() LaunchTemplateInstanceMarketOptionsArgsPtrOutput
	ToLaunchTemplateInstanceMarketOptionsArgsPtrOutputWithContext(context.Context) LaunchTemplateInstanceMarketOptionsArgsPtrOutput
}

type launchTemplateInstanceMarketOptionsArgsPtrType LaunchTemplateInstanceMarketOptionsArgsArgs

func LaunchTemplateInstanceMarketOptionsArgsPtr(v *LaunchTemplateInstanceMarketOptionsArgsArgs) LaunchTemplateInstanceMarketOptionsArgsPtrInput {
	return (*launchTemplateInstanceMarketOptionsArgsPtrType)(v)
}

func (*launchTemplateInstanceMarketOptionsArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateInstanceMarketOptionsArgs)(nil)).Elem()
}

func (i *launchTemplateInstanceMarketOptionsArgsPtrType) ToLaunchTemplateInstanceMarketOptionsArgsPtrOutput() LaunchTemplateInstanceMarketOptionsArgsPtrOutput {
	return i.ToLaunchTemplateInstanceMarketOptionsArgsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateInstanceMarketOptionsArgsPtrType) ToLaunchTemplateInstanceMarketOptionsArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceMarketOptionsArgsPtrOutput)
}

type LaunchTemplateInstanceMarketOptionsArgsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceMarketOptionsArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceMarketOptionsArgs)(nil)).Elem()
}

func (o LaunchTemplateInstanceMarketOptionsArgsOutput) ToLaunchTemplateInstanceMarketOptionsArgsOutput() LaunchTemplateInstanceMarketOptionsArgsOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsArgsOutput) ToLaunchTemplateInstanceMarketOptionsArgsOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsArgsOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsArgsOutput) ToLaunchTemplateInstanceMarketOptionsArgsPtrOutput() LaunchTemplateInstanceMarketOptionsArgsPtrOutput {
	return o.ToLaunchTemplateInstanceMarketOptionsArgsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateInstanceMarketOptionsArgsOutput) ToLaunchTemplateInstanceMarketOptionsArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsArgsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsArgs) *LaunchTemplateInstanceMarketOptionsArgs {
		return &v
	}).(LaunchTemplateInstanceMarketOptionsArgsPtrOutput)
}

// The market type. Can be `spot`.
func (o LaunchTemplateInstanceMarketOptionsArgsOutput) MarketType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsArgs) *string { return v.MarketType }).(pulumi.StringPtrOutput)
}

// The options for [Spot Instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html)
func (o LaunchTemplateInstanceMarketOptionsArgsOutput) SpotOptions() LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsArgs) *LaunchTemplateInstanceMarketOptionsSpotOptionsArgs {
		return v.SpotOptions
	}).(LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput)
}

type LaunchTemplateInstanceMarketOptionsArgsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceMarketOptionsArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateInstanceMarketOptionsArgs)(nil)).Elem()
}

func (o LaunchTemplateInstanceMarketOptionsArgsPtrOutput) ToLaunchTemplateInstanceMarketOptionsArgsPtrOutput() LaunchTemplateInstanceMarketOptionsArgsPtrOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsArgsPtrOutput) ToLaunchTemplateInstanceMarketOptionsArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsArgsPtrOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsArgsPtrOutput) Elem() LaunchTemplateInstanceMarketOptionsArgsOutput {
	return o.ApplyT(func(v *LaunchTemplateInstanceMarketOptionsArgs) LaunchTemplateInstanceMarketOptionsArgs { return *v }).(LaunchTemplateInstanceMarketOptionsArgsOutput)
}

// The market type. Can be `spot`.
func (o LaunchTemplateInstanceMarketOptionsArgsPtrOutput) MarketType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsArgs) *string { return v.MarketType }).(pulumi.StringPtrOutput)
}

// The options for [Spot Instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html)
func (o LaunchTemplateInstanceMarketOptionsArgsPtrOutput) SpotOptions() LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsArgs) *LaunchTemplateInstanceMarketOptionsSpotOptionsArgs {
		return v.SpotOptions
	}).(LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput)
}

type LaunchTemplateInstanceMarketOptionsSpotOptions struct {
	// The required duration in minutes. This value must be a multiple of 60.
	BlockDurationMinutes *int `pulumi:"blockDurationMinutes"`
	// The behavior when a Spot Instance is interrupted. Can be `hibernate`,
	// `stop`, or `terminate`. (Default: `terminate`).
	InstanceInterruptionBehavior *string `pulumi:"instanceInterruptionBehavior"`
	// The maximum hourly price you're willing to pay for the Spot Instances.
	MaxPrice *string `pulumi:"maxPrice"`
	// The Spot Instance request type. Can be `one-time`, or `persistent`.
	SpotInstanceType *string `pulumi:"spotInstanceType"`
	// The end date of the request.
	ValidUntil string `pulumi:"validUntil"`
}

type LaunchTemplateInstanceMarketOptionsSpotOptionsInput interface {
	pulumi.Input

	ToLaunchTemplateInstanceMarketOptionsSpotOptionsOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsOutput
	ToLaunchTemplateInstanceMarketOptionsSpotOptionsOutputWithContext(context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsOutput
}

type LaunchTemplateInstanceMarketOptionsSpotOptionsArgs struct {
	// The required duration in minutes. This value must be a multiple of 60.
	BlockDurationMinutes pulumi.IntPtrInput `pulumi:"blockDurationMinutes"`
	// The behavior when a Spot Instance is interrupted. Can be `hibernate`,
	// `stop`, or `terminate`. (Default: `terminate`).
	InstanceInterruptionBehavior pulumi.StringPtrInput `pulumi:"instanceInterruptionBehavior"`
	// The maximum hourly price you're willing to pay for the Spot Instances.
	MaxPrice pulumi.StringPtrInput `pulumi:"maxPrice"`
	// The Spot Instance request type. Can be `one-time`, or `persistent`.
	SpotInstanceType pulumi.StringPtrInput `pulumi:"spotInstanceType"`
	// The end date of the request.
	ValidUntil pulumi.StringInput `pulumi:"validUntil"`
}

func (LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceMarketOptionsSpotOptions)(nil)).Elem()
}

func (i LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) ToLaunchTemplateInstanceMarketOptionsSpotOptionsOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsOutput {
	return i.ToLaunchTemplateInstanceMarketOptionsSpotOptionsOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) ToLaunchTemplateInstanceMarketOptionsSpotOptionsOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceMarketOptionsSpotOptionsOutput)
}

func (i LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput {
	return i.ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceMarketOptionsSpotOptionsOutput).ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutputWithContext(ctx)
}

type LaunchTemplateInstanceMarketOptionsSpotOptionsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput
	ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutputWithContext(context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput
}

type launchTemplateInstanceMarketOptionsSpotOptionsPtrType LaunchTemplateInstanceMarketOptionsSpotOptionsArgs

func LaunchTemplateInstanceMarketOptionsSpotOptionsPtr(v *LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) LaunchTemplateInstanceMarketOptionsSpotOptionsPtrInput {
	return (*launchTemplateInstanceMarketOptionsSpotOptionsPtrType)(v)
}

func (*launchTemplateInstanceMarketOptionsSpotOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateInstanceMarketOptionsSpotOptions)(nil)).Elem()
}

func (i *launchTemplateInstanceMarketOptionsSpotOptionsPtrType) ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput {
	return i.ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateInstanceMarketOptionsSpotOptionsPtrType) ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput)
}

type LaunchTemplateInstanceMarketOptionsSpotOptionsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceMarketOptionsSpotOptions)(nil)).Elem()
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) ToLaunchTemplateInstanceMarketOptionsSpotOptionsOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) ToLaunchTemplateInstanceMarketOptionsSpotOptionsOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput {
	return o.ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *LaunchTemplateInstanceMarketOptionsSpotOptions {
		return &v
	}).(LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput)
}

// The required duration in minutes. This value must be a multiple of 60.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) BlockDurationMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *int { return v.BlockDurationMinutes }).(pulumi.IntPtrOutput)
}

// The behavior when a Spot Instance is interrupted. Can be `hibernate`,
// `stop`, or `terminate`. (Default: `terminate`).
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) InstanceInterruptionBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *string { return v.InstanceInterruptionBehavior }).(pulumi.StringPtrOutput)
}

// The maximum hourly price you're willing to pay for the Spot Instances.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) MaxPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *string { return v.MaxPrice }).(pulumi.StringPtrOutput)
}

// The Spot Instance request type. Can be `one-time`, or `persistent`.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) SpotInstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *string { return v.SpotInstanceType }).(pulumi.StringPtrOutput)
}

// The end date of the request.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) ValidUntil() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptions) string { return v.ValidUntil }).(pulumi.StringOutput)
}

type LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateInstanceMarketOptionsSpotOptions)(nil)).Elem()
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput) ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput) ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput) Elem() LaunchTemplateInstanceMarketOptionsSpotOptionsOutput {
	return o.ApplyT(func(v *LaunchTemplateInstanceMarketOptionsSpotOptions) LaunchTemplateInstanceMarketOptionsSpotOptions {
		return *v
	}).(LaunchTemplateInstanceMarketOptionsSpotOptionsOutput)
}

// The required duration in minutes. This value must be a multiple of 60.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput) BlockDurationMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *int { return v.BlockDurationMinutes }).(pulumi.IntPtrOutput)
}

// The behavior when a Spot Instance is interrupted. Can be `hibernate`,
// `stop`, or `terminate`. (Default: `terminate`).
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput) InstanceInterruptionBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *string { return v.InstanceInterruptionBehavior }).(pulumi.StringPtrOutput)
}

// The maximum hourly price you're willing to pay for the Spot Instances.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput) MaxPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *string { return v.MaxPrice }).(pulumi.StringPtrOutput)
}

// The Spot Instance request type. Can be `one-time`, or `persistent`.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput) SpotInstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *string { return v.SpotInstanceType }).(pulumi.StringPtrOutput)
}

// The end date of the request.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput) ValidUntil() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptions) string { return v.ValidUntil }).(pulumi.StringOutput)
}

type LaunchTemplateInstanceMarketOptionsSpotOptionsArgs struct {
	// The required duration in minutes. This value must be a multiple of 60.
	BlockDurationMinutes *int `pulumi:"blockDurationMinutes"`
	// The behavior when a Spot Instance is interrupted. Can be `hibernate`,
	// `stop`, or `terminate`. (Default: `terminate`).
	InstanceInterruptionBehavior *string `pulumi:"instanceInterruptionBehavior"`
	// The maximum hourly price you're willing to pay for the Spot Instances.
	MaxPrice *string `pulumi:"maxPrice"`
	// The Spot Instance request type. Can be `one-time`, or `persistent`.
	SpotInstanceType *string `pulumi:"spotInstanceType"`
	// The end date of the request.
	ValidUntil *string `pulumi:"validUntil"`
}

type LaunchTemplateInstanceMarketOptionsSpotOptionsArgsInput interface {
	pulumi.Input

	ToLaunchTemplateInstanceMarketOptionsSpotOptionsArgsOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsArgsOutput
	ToLaunchTemplateInstanceMarketOptionsSpotOptionsArgsOutputWithContext(context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsArgsOutput
}

type LaunchTemplateInstanceMarketOptionsSpotOptionsArgsArgs struct {
	// The required duration in minutes. This value must be a multiple of 60.
	BlockDurationMinutes pulumi.IntPtrInput `pulumi:"blockDurationMinutes"`
	// The behavior when a Spot Instance is interrupted. Can be `hibernate`,
	// `stop`, or `terminate`. (Default: `terminate`).
	InstanceInterruptionBehavior pulumi.StringPtrInput `pulumi:"instanceInterruptionBehavior"`
	// The maximum hourly price you're willing to pay for the Spot Instances.
	MaxPrice pulumi.StringPtrInput `pulumi:"maxPrice"`
	// The Spot Instance request type. Can be `one-time`, or `persistent`.
	SpotInstanceType pulumi.StringPtrInput `pulumi:"spotInstanceType"`
	// The end date of the request.
	ValidUntil pulumi.StringPtrInput `pulumi:"validUntil"`
}

func (LaunchTemplateInstanceMarketOptionsSpotOptionsArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceMarketOptionsSpotOptionsArgs)(nil)).Elem()
}

func (i LaunchTemplateInstanceMarketOptionsSpotOptionsArgsArgs) ToLaunchTemplateInstanceMarketOptionsSpotOptionsArgsOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsArgsOutput {
	return i.ToLaunchTemplateInstanceMarketOptionsSpotOptionsArgsOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceMarketOptionsSpotOptionsArgsArgs) ToLaunchTemplateInstanceMarketOptionsSpotOptionsArgsOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceMarketOptionsSpotOptionsArgsOutput)
}

func (i LaunchTemplateInstanceMarketOptionsSpotOptionsArgsArgs) ToLaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput {
	return i.ToLaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceMarketOptionsSpotOptionsArgsArgs) ToLaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceMarketOptionsSpotOptionsArgsOutput).ToLaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutputWithContext(ctx)
}

type LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput
	ToLaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutputWithContext(context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput
}

type launchTemplateInstanceMarketOptionsSpotOptionsArgsPtrType LaunchTemplateInstanceMarketOptionsSpotOptionsArgsArgs

func LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtr(v *LaunchTemplateInstanceMarketOptionsSpotOptionsArgsArgs) LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrInput {
	return (*launchTemplateInstanceMarketOptionsSpotOptionsArgsPtrType)(v)
}

func (*launchTemplateInstanceMarketOptionsSpotOptionsArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateInstanceMarketOptionsSpotOptionsArgs)(nil)).Elem()
}

func (i *launchTemplateInstanceMarketOptionsSpotOptionsArgsPtrType) ToLaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput {
	return i.ToLaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateInstanceMarketOptionsSpotOptionsArgsPtrType) ToLaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput)
}

type LaunchTemplateInstanceMarketOptionsSpotOptionsArgsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceMarketOptionsSpotOptionsArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceMarketOptionsSpotOptionsArgs)(nil)).Elem()
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsArgsOutput) ToLaunchTemplateInstanceMarketOptionsSpotOptionsArgsOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsArgsOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsArgsOutput) ToLaunchTemplateInstanceMarketOptionsSpotOptionsArgsOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsArgsOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsArgsOutput) ToLaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput {
	return o.ToLaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsArgsOutput) ToLaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) *LaunchTemplateInstanceMarketOptionsSpotOptionsArgs {
		return &v
	}).(LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput)
}

// The required duration in minutes. This value must be a multiple of 60.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsArgsOutput) BlockDurationMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) *int { return v.BlockDurationMinutes }).(pulumi.IntPtrOutput)
}

// The behavior when a Spot Instance is interrupted. Can be `hibernate`,
// `stop`, or `terminate`. (Default: `terminate`).
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsArgsOutput) InstanceInterruptionBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) *string {
		return v.InstanceInterruptionBehavior
	}).(pulumi.StringPtrOutput)
}

// The maximum hourly price you're willing to pay for the Spot Instances.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsArgsOutput) MaxPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) *string { return v.MaxPrice }).(pulumi.StringPtrOutput)
}

// The Spot Instance request type. Can be `one-time`, or `persistent`.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsArgsOutput) SpotInstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) *string { return v.SpotInstanceType }).(pulumi.StringPtrOutput)
}

// The end date of the request.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsArgsOutput) ValidUntil() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) *string { return v.ValidUntil }).(pulumi.StringPtrOutput)
}

type LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateInstanceMarketOptionsSpotOptionsArgs)(nil)).Elem()
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput) ToLaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput) ToLaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput) Elem() LaunchTemplateInstanceMarketOptionsSpotOptionsArgsOutput {
	return o.ApplyT(func(v *LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) LaunchTemplateInstanceMarketOptionsSpotOptionsArgs {
		return *v
	}).(LaunchTemplateInstanceMarketOptionsSpotOptionsArgsOutput)
}

// The required duration in minutes. This value must be a multiple of 60.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput) BlockDurationMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) *int { return v.BlockDurationMinutes }).(pulumi.IntPtrOutput)
}

// The behavior when a Spot Instance is interrupted. Can be `hibernate`,
// `stop`, or `terminate`. (Default: `terminate`).
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput) InstanceInterruptionBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) *string {
		return v.InstanceInterruptionBehavior
	}).(pulumi.StringPtrOutput)
}

// The maximum hourly price you're willing to pay for the Spot Instances.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput) MaxPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) *string { return v.MaxPrice }).(pulumi.StringPtrOutput)
}

// The Spot Instance request type. Can be `one-time`, or `persistent`.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput) SpotInstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) *string { return v.SpotInstanceType }).(pulumi.StringPtrOutput)
}

// The end date of the request.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput) ValidUntil() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) *string { return v.ValidUntil }).(pulumi.StringPtrOutput)
}

type LaunchTemplateInstanceMarketOptionsState struct {
	// The market type. Can be `spot`.
	MarketType *string `pulumi:"marketType"`
	// The options for [Spot Instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html)
	SpotOptions *LaunchTemplateInstanceMarketOptionsStateSpotOptions `pulumi:"spotOptions"`
}

type LaunchTemplateInstanceMarketOptionsStateInput interface {
	pulumi.Input

	ToLaunchTemplateInstanceMarketOptionsStateOutput() LaunchTemplateInstanceMarketOptionsStateOutput
	ToLaunchTemplateInstanceMarketOptionsStateOutputWithContext(context.Context) LaunchTemplateInstanceMarketOptionsStateOutput
}

type LaunchTemplateInstanceMarketOptionsStateArgs struct {
	// The market type. Can be `spot`.
	MarketType pulumi.StringPtrInput `pulumi:"marketType"`
	// The options for [Spot Instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html)
	SpotOptions LaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrInput `pulumi:"spotOptions"`
}

func (LaunchTemplateInstanceMarketOptionsStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceMarketOptionsState)(nil)).Elem()
}

func (i LaunchTemplateInstanceMarketOptionsStateArgs) ToLaunchTemplateInstanceMarketOptionsStateOutput() LaunchTemplateInstanceMarketOptionsStateOutput {
	return i.ToLaunchTemplateInstanceMarketOptionsStateOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceMarketOptionsStateArgs) ToLaunchTemplateInstanceMarketOptionsStateOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceMarketOptionsStateOutput)
}

type LaunchTemplateInstanceMarketOptionsStateOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceMarketOptionsStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceMarketOptionsState)(nil)).Elem()
}

func (o LaunchTemplateInstanceMarketOptionsStateOutput) ToLaunchTemplateInstanceMarketOptionsStateOutput() LaunchTemplateInstanceMarketOptionsStateOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsStateOutput) ToLaunchTemplateInstanceMarketOptionsStateOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsStateOutput {
	return o
}

// The market type. Can be `spot`.
func (o LaunchTemplateInstanceMarketOptionsStateOutput) MarketType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsState) *string { return v.MarketType }).(pulumi.StringPtrOutput)
}

// The options for [Spot Instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html)
func (o LaunchTemplateInstanceMarketOptionsStateOutput) SpotOptions() LaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsState) *LaunchTemplateInstanceMarketOptionsStateSpotOptions {
		return v.SpotOptions
	}).(LaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutput)
}

type LaunchTemplateInstanceMarketOptionsStateSpotOptions struct {
	// The required duration in minutes. This value must be a multiple of 60.
	BlockDurationMinutes *int `pulumi:"blockDurationMinutes"`
	// The behavior when a Spot Instance is interrupted. Can be `hibernate`,
	// `stop`, or `terminate`. (Default: `terminate`).
	InstanceInterruptionBehavior *string `pulumi:"instanceInterruptionBehavior"`
	// The maximum hourly price you're willing to pay for the Spot Instances.
	MaxPrice *string `pulumi:"maxPrice"`
	// The Spot Instance request type. Can be `one-time`, or `persistent`.
	SpotInstanceType *string `pulumi:"spotInstanceType"`
	// The end date of the request.
	ValidUntil *string `pulumi:"validUntil"`
}

type LaunchTemplateInstanceMarketOptionsStateSpotOptionsInput interface {
	pulumi.Input

	ToLaunchTemplateInstanceMarketOptionsStateSpotOptionsOutput() LaunchTemplateInstanceMarketOptionsStateSpotOptionsOutput
	ToLaunchTemplateInstanceMarketOptionsStateSpotOptionsOutputWithContext(context.Context) LaunchTemplateInstanceMarketOptionsStateSpotOptionsOutput
}

type LaunchTemplateInstanceMarketOptionsStateSpotOptionsArgs struct {
	// The required duration in minutes. This value must be a multiple of 60.
	BlockDurationMinutes pulumi.IntPtrInput `pulumi:"blockDurationMinutes"`
	// The behavior when a Spot Instance is interrupted. Can be `hibernate`,
	// `stop`, or `terminate`. (Default: `terminate`).
	InstanceInterruptionBehavior pulumi.StringPtrInput `pulumi:"instanceInterruptionBehavior"`
	// The maximum hourly price you're willing to pay for the Spot Instances.
	MaxPrice pulumi.StringPtrInput `pulumi:"maxPrice"`
	// The Spot Instance request type. Can be `one-time`, or `persistent`.
	SpotInstanceType pulumi.StringPtrInput `pulumi:"spotInstanceType"`
	// The end date of the request.
	ValidUntil pulumi.StringPtrInput `pulumi:"validUntil"`
}

func (LaunchTemplateInstanceMarketOptionsStateSpotOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceMarketOptionsStateSpotOptions)(nil)).Elem()
}

func (i LaunchTemplateInstanceMarketOptionsStateSpotOptionsArgs) ToLaunchTemplateInstanceMarketOptionsStateSpotOptionsOutput() LaunchTemplateInstanceMarketOptionsStateSpotOptionsOutput {
	return i.ToLaunchTemplateInstanceMarketOptionsStateSpotOptionsOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceMarketOptionsStateSpotOptionsArgs) ToLaunchTemplateInstanceMarketOptionsStateSpotOptionsOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsStateSpotOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceMarketOptionsStateSpotOptionsOutput)
}

func (i LaunchTemplateInstanceMarketOptionsStateSpotOptionsArgs) ToLaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutput {
	return i.ToLaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceMarketOptionsStateSpotOptionsArgs) ToLaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceMarketOptionsStateSpotOptionsOutput).ToLaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutputWithContext(ctx)
}

type LaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutput
	ToLaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutputWithContext(context.Context) LaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutput
}

type launchTemplateInstanceMarketOptionsStateSpotOptionsPtrType LaunchTemplateInstanceMarketOptionsStateSpotOptionsArgs

func LaunchTemplateInstanceMarketOptionsStateSpotOptionsPtr(v *LaunchTemplateInstanceMarketOptionsStateSpotOptionsArgs) LaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrInput {
	return (*launchTemplateInstanceMarketOptionsStateSpotOptionsPtrType)(v)
}

func (*launchTemplateInstanceMarketOptionsStateSpotOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateInstanceMarketOptionsStateSpotOptions)(nil)).Elem()
}

func (i *launchTemplateInstanceMarketOptionsStateSpotOptionsPtrType) ToLaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutput {
	return i.ToLaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateInstanceMarketOptionsStateSpotOptionsPtrType) ToLaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutput)
}

type LaunchTemplateInstanceMarketOptionsStateSpotOptionsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceMarketOptionsStateSpotOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceMarketOptionsStateSpotOptions)(nil)).Elem()
}

func (o LaunchTemplateInstanceMarketOptionsStateSpotOptionsOutput) ToLaunchTemplateInstanceMarketOptionsStateSpotOptionsOutput() LaunchTemplateInstanceMarketOptionsStateSpotOptionsOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsStateSpotOptionsOutput) ToLaunchTemplateInstanceMarketOptionsStateSpotOptionsOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsStateSpotOptionsOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsStateSpotOptionsOutput) ToLaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutput {
	return o.ToLaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateInstanceMarketOptionsStateSpotOptionsOutput) ToLaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsStateSpotOptions) *LaunchTemplateInstanceMarketOptionsStateSpotOptions {
		return &v
	}).(LaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutput)
}

// The required duration in minutes. This value must be a multiple of 60.
func (o LaunchTemplateInstanceMarketOptionsStateSpotOptionsOutput) BlockDurationMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsStateSpotOptions) *int { return v.BlockDurationMinutes }).(pulumi.IntPtrOutput)
}

// The behavior when a Spot Instance is interrupted. Can be `hibernate`,
// `stop`, or `terminate`. (Default: `terminate`).
func (o LaunchTemplateInstanceMarketOptionsStateSpotOptionsOutput) InstanceInterruptionBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsStateSpotOptions) *string {
		return v.InstanceInterruptionBehavior
	}).(pulumi.StringPtrOutput)
}

// The maximum hourly price you're willing to pay for the Spot Instances.
func (o LaunchTemplateInstanceMarketOptionsStateSpotOptionsOutput) MaxPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsStateSpotOptions) *string { return v.MaxPrice }).(pulumi.StringPtrOutput)
}

// The Spot Instance request type. Can be `one-time`, or `persistent`.
func (o LaunchTemplateInstanceMarketOptionsStateSpotOptionsOutput) SpotInstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsStateSpotOptions) *string { return v.SpotInstanceType }).(pulumi.StringPtrOutput)
}

// The end date of the request.
func (o LaunchTemplateInstanceMarketOptionsStateSpotOptionsOutput) ValidUntil() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsStateSpotOptions) *string { return v.ValidUntil }).(pulumi.StringPtrOutput)
}

type LaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateInstanceMarketOptionsStateSpotOptions)(nil)).Elem()
}

func (o LaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutput) ToLaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutput) ToLaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutput) Elem() LaunchTemplateInstanceMarketOptionsStateSpotOptionsOutput {
	return o.ApplyT(func(v *LaunchTemplateInstanceMarketOptionsStateSpotOptions) LaunchTemplateInstanceMarketOptionsStateSpotOptions {
		return *v
	}).(LaunchTemplateInstanceMarketOptionsStateSpotOptionsOutput)
}

// The required duration in minutes. This value must be a multiple of 60.
func (o LaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutput) BlockDurationMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsStateSpotOptions) *int { return v.BlockDurationMinutes }).(pulumi.IntPtrOutput)
}

// The behavior when a Spot Instance is interrupted. Can be `hibernate`,
// `stop`, or `terminate`. (Default: `terminate`).
func (o LaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutput) InstanceInterruptionBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsStateSpotOptions) *string {
		return v.InstanceInterruptionBehavior
	}).(pulumi.StringPtrOutput)
}

// The maximum hourly price you're willing to pay for the Spot Instances.
func (o LaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutput) MaxPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsStateSpotOptions) *string { return v.MaxPrice }).(pulumi.StringPtrOutput)
}

// The Spot Instance request type. Can be `one-time`, or `persistent`.
func (o LaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutput) SpotInstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsStateSpotOptions) *string { return v.SpotInstanceType }).(pulumi.StringPtrOutput)
}

// The end date of the request.
func (o LaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutput) ValidUntil() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsStateSpotOptions) *string { return v.ValidUntil }).(pulumi.StringPtrOutput)
}

type LaunchTemplateLicenseSpecification struct {
	// ARN of the license configuration.
	LicenseConfigurationArn string `pulumi:"licenseConfigurationArn"`
}

type LaunchTemplateLicenseSpecificationInput interface {
	pulumi.Input

	ToLaunchTemplateLicenseSpecificationOutput() LaunchTemplateLicenseSpecificationOutput
	ToLaunchTemplateLicenseSpecificationOutputWithContext(context.Context) LaunchTemplateLicenseSpecificationOutput
}

type LaunchTemplateLicenseSpecificationArgs struct {
	// ARN of the license configuration.
	LicenseConfigurationArn pulumi.StringInput `pulumi:"licenseConfigurationArn"`
}

func (LaunchTemplateLicenseSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateLicenseSpecification)(nil)).Elem()
}

func (i LaunchTemplateLicenseSpecificationArgs) ToLaunchTemplateLicenseSpecificationOutput() LaunchTemplateLicenseSpecificationOutput {
	return i.ToLaunchTemplateLicenseSpecificationOutputWithContext(context.Background())
}

func (i LaunchTemplateLicenseSpecificationArgs) ToLaunchTemplateLicenseSpecificationOutputWithContext(ctx context.Context) LaunchTemplateLicenseSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateLicenseSpecificationOutput)
}

type LaunchTemplateLicenseSpecificationArrayInput interface {
	pulumi.Input

	ToLaunchTemplateLicenseSpecificationArrayOutput() LaunchTemplateLicenseSpecificationArrayOutput
	ToLaunchTemplateLicenseSpecificationArrayOutputWithContext(context.Context) LaunchTemplateLicenseSpecificationArrayOutput
}

type LaunchTemplateLicenseSpecificationArray []LaunchTemplateLicenseSpecificationInput

func (LaunchTemplateLicenseSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateLicenseSpecification)(nil)).Elem()
}

func (i LaunchTemplateLicenseSpecificationArray) ToLaunchTemplateLicenseSpecificationArrayOutput() LaunchTemplateLicenseSpecificationArrayOutput {
	return i.ToLaunchTemplateLicenseSpecificationArrayOutputWithContext(context.Background())
}

func (i LaunchTemplateLicenseSpecificationArray) ToLaunchTemplateLicenseSpecificationArrayOutputWithContext(ctx context.Context) LaunchTemplateLicenseSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateLicenseSpecificationArrayOutput)
}

type LaunchTemplateLicenseSpecificationOutput struct{ *pulumi.OutputState }

func (LaunchTemplateLicenseSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateLicenseSpecification)(nil)).Elem()
}

func (o LaunchTemplateLicenseSpecificationOutput) ToLaunchTemplateLicenseSpecificationOutput() LaunchTemplateLicenseSpecificationOutput {
	return o
}

func (o LaunchTemplateLicenseSpecificationOutput) ToLaunchTemplateLicenseSpecificationOutputWithContext(ctx context.Context) LaunchTemplateLicenseSpecificationOutput {
	return o
}

// ARN of the license configuration.
func (o LaunchTemplateLicenseSpecificationOutput) LicenseConfigurationArn() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchTemplateLicenseSpecification) string { return v.LicenseConfigurationArn }).(pulumi.StringOutput)
}

type LaunchTemplateLicenseSpecificationArrayOutput struct{ *pulumi.OutputState }

func (LaunchTemplateLicenseSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateLicenseSpecification)(nil)).Elem()
}

func (o LaunchTemplateLicenseSpecificationArrayOutput) ToLaunchTemplateLicenseSpecificationArrayOutput() LaunchTemplateLicenseSpecificationArrayOutput {
	return o
}

func (o LaunchTemplateLicenseSpecificationArrayOutput) ToLaunchTemplateLicenseSpecificationArrayOutputWithContext(ctx context.Context) LaunchTemplateLicenseSpecificationArrayOutput {
	return o
}

func (o LaunchTemplateLicenseSpecificationArrayOutput) Index(i pulumi.IntInput) LaunchTemplateLicenseSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchTemplateLicenseSpecification {
		return vs[0].([]LaunchTemplateLicenseSpecification)[vs[1].(int)]
	}).(LaunchTemplateLicenseSpecificationOutput)
}

type LaunchTemplateLicenseSpecificationArgs struct {
	// ARN of the license configuration.
	LicenseConfigurationArn string `pulumi:"licenseConfigurationArn"`
}

type LaunchTemplateLicenseSpecificationArgsInput interface {
	pulumi.Input

	ToLaunchTemplateLicenseSpecificationArgsOutput() LaunchTemplateLicenseSpecificationArgsOutput
	ToLaunchTemplateLicenseSpecificationArgsOutputWithContext(context.Context) LaunchTemplateLicenseSpecificationArgsOutput
}

type LaunchTemplateLicenseSpecificationArgsArgs struct {
	// ARN of the license configuration.
	LicenseConfigurationArn pulumi.StringInput `pulumi:"licenseConfigurationArn"`
}

func (LaunchTemplateLicenseSpecificationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateLicenseSpecificationArgs)(nil)).Elem()
}

func (i LaunchTemplateLicenseSpecificationArgsArgs) ToLaunchTemplateLicenseSpecificationArgsOutput() LaunchTemplateLicenseSpecificationArgsOutput {
	return i.ToLaunchTemplateLicenseSpecificationArgsOutputWithContext(context.Background())
}

func (i LaunchTemplateLicenseSpecificationArgsArgs) ToLaunchTemplateLicenseSpecificationArgsOutputWithContext(ctx context.Context) LaunchTemplateLicenseSpecificationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateLicenseSpecificationArgsOutput)
}

type LaunchTemplateLicenseSpecificationArgsArrayInput interface {
	pulumi.Input

	ToLaunchTemplateLicenseSpecificationArgsArrayOutput() LaunchTemplateLicenseSpecificationArgsArrayOutput
	ToLaunchTemplateLicenseSpecificationArgsArrayOutputWithContext(context.Context) LaunchTemplateLicenseSpecificationArgsArrayOutput
}

type LaunchTemplateLicenseSpecificationArgsArray []LaunchTemplateLicenseSpecificationArgsInput

func (LaunchTemplateLicenseSpecificationArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateLicenseSpecificationArgs)(nil)).Elem()
}

func (i LaunchTemplateLicenseSpecificationArgsArray) ToLaunchTemplateLicenseSpecificationArgsArrayOutput() LaunchTemplateLicenseSpecificationArgsArrayOutput {
	return i.ToLaunchTemplateLicenseSpecificationArgsArrayOutputWithContext(context.Background())
}

func (i LaunchTemplateLicenseSpecificationArgsArray) ToLaunchTemplateLicenseSpecificationArgsArrayOutputWithContext(ctx context.Context) LaunchTemplateLicenseSpecificationArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateLicenseSpecificationArgsArrayOutput)
}

type LaunchTemplateLicenseSpecificationArgsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateLicenseSpecificationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateLicenseSpecificationArgs)(nil)).Elem()
}

func (o LaunchTemplateLicenseSpecificationArgsOutput) ToLaunchTemplateLicenseSpecificationArgsOutput() LaunchTemplateLicenseSpecificationArgsOutput {
	return o
}

func (o LaunchTemplateLicenseSpecificationArgsOutput) ToLaunchTemplateLicenseSpecificationArgsOutputWithContext(ctx context.Context) LaunchTemplateLicenseSpecificationArgsOutput {
	return o
}

// ARN of the license configuration.
func (o LaunchTemplateLicenseSpecificationArgsOutput) LicenseConfigurationArn() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchTemplateLicenseSpecificationArgs) string { return v.LicenseConfigurationArn }).(pulumi.StringOutput)
}

type LaunchTemplateLicenseSpecificationArgsArrayOutput struct{ *pulumi.OutputState }

func (LaunchTemplateLicenseSpecificationArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateLicenseSpecificationArgs)(nil)).Elem()
}

func (o LaunchTemplateLicenseSpecificationArgsArrayOutput) ToLaunchTemplateLicenseSpecificationArgsArrayOutput() LaunchTemplateLicenseSpecificationArgsArrayOutput {
	return o
}

func (o LaunchTemplateLicenseSpecificationArgsArrayOutput) ToLaunchTemplateLicenseSpecificationArgsArrayOutputWithContext(ctx context.Context) LaunchTemplateLicenseSpecificationArgsArrayOutput {
	return o
}

func (o LaunchTemplateLicenseSpecificationArgsArrayOutput) Index(i pulumi.IntInput) LaunchTemplateLicenseSpecificationArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchTemplateLicenseSpecificationArgs {
		return vs[0].([]LaunchTemplateLicenseSpecificationArgs)[vs[1].(int)]
	}).(LaunchTemplateLicenseSpecificationArgsOutput)
}

type LaunchTemplateLicenseSpecificationState struct {
	// ARN of the license configuration.
	LicenseConfigurationArn string `pulumi:"licenseConfigurationArn"`
}

type LaunchTemplateLicenseSpecificationStateInput interface {
	pulumi.Input

	ToLaunchTemplateLicenseSpecificationStateOutput() LaunchTemplateLicenseSpecificationStateOutput
	ToLaunchTemplateLicenseSpecificationStateOutputWithContext(context.Context) LaunchTemplateLicenseSpecificationStateOutput
}

type LaunchTemplateLicenseSpecificationStateArgs struct {
	// ARN of the license configuration.
	LicenseConfigurationArn pulumi.StringInput `pulumi:"licenseConfigurationArn"`
}

func (LaunchTemplateLicenseSpecificationStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateLicenseSpecificationState)(nil)).Elem()
}

func (i LaunchTemplateLicenseSpecificationStateArgs) ToLaunchTemplateLicenseSpecificationStateOutput() LaunchTemplateLicenseSpecificationStateOutput {
	return i.ToLaunchTemplateLicenseSpecificationStateOutputWithContext(context.Background())
}

func (i LaunchTemplateLicenseSpecificationStateArgs) ToLaunchTemplateLicenseSpecificationStateOutputWithContext(ctx context.Context) LaunchTemplateLicenseSpecificationStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateLicenseSpecificationStateOutput)
}

type LaunchTemplateLicenseSpecificationStateArrayInput interface {
	pulumi.Input

	ToLaunchTemplateLicenseSpecificationStateArrayOutput() LaunchTemplateLicenseSpecificationStateArrayOutput
	ToLaunchTemplateLicenseSpecificationStateArrayOutputWithContext(context.Context) LaunchTemplateLicenseSpecificationStateArrayOutput
}

type LaunchTemplateLicenseSpecificationStateArray []LaunchTemplateLicenseSpecificationStateInput

func (LaunchTemplateLicenseSpecificationStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateLicenseSpecificationState)(nil)).Elem()
}

func (i LaunchTemplateLicenseSpecificationStateArray) ToLaunchTemplateLicenseSpecificationStateArrayOutput() LaunchTemplateLicenseSpecificationStateArrayOutput {
	return i.ToLaunchTemplateLicenseSpecificationStateArrayOutputWithContext(context.Background())
}

func (i LaunchTemplateLicenseSpecificationStateArray) ToLaunchTemplateLicenseSpecificationStateArrayOutputWithContext(ctx context.Context) LaunchTemplateLicenseSpecificationStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateLicenseSpecificationStateArrayOutput)
}

type LaunchTemplateLicenseSpecificationStateOutput struct{ *pulumi.OutputState }

func (LaunchTemplateLicenseSpecificationStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateLicenseSpecificationState)(nil)).Elem()
}

func (o LaunchTemplateLicenseSpecificationStateOutput) ToLaunchTemplateLicenseSpecificationStateOutput() LaunchTemplateLicenseSpecificationStateOutput {
	return o
}

func (o LaunchTemplateLicenseSpecificationStateOutput) ToLaunchTemplateLicenseSpecificationStateOutputWithContext(ctx context.Context) LaunchTemplateLicenseSpecificationStateOutput {
	return o
}

// ARN of the license configuration.
func (o LaunchTemplateLicenseSpecificationStateOutput) LicenseConfigurationArn() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchTemplateLicenseSpecificationState) string { return v.LicenseConfigurationArn }).(pulumi.StringOutput)
}

type LaunchTemplateLicenseSpecificationStateArrayOutput struct{ *pulumi.OutputState }

func (LaunchTemplateLicenseSpecificationStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateLicenseSpecificationState)(nil)).Elem()
}

func (o LaunchTemplateLicenseSpecificationStateArrayOutput) ToLaunchTemplateLicenseSpecificationStateArrayOutput() LaunchTemplateLicenseSpecificationStateArrayOutput {
	return o
}

func (o LaunchTemplateLicenseSpecificationStateArrayOutput) ToLaunchTemplateLicenseSpecificationStateArrayOutputWithContext(ctx context.Context) LaunchTemplateLicenseSpecificationStateArrayOutput {
	return o
}

func (o LaunchTemplateLicenseSpecificationStateArrayOutput) Index(i pulumi.IntInput) LaunchTemplateLicenseSpecificationStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchTemplateLicenseSpecificationState {
		return vs[0].([]LaunchTemplateLicenseSpecificationState)[vs[1].(int)]
	}).(LaunchTemplateLicenseSpecificationStateOutput)
}

type LaunchTemplateMetadataOptions struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint string `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit int `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens string `pulumi:"httpTokens"`
}

type LaunchTemplateMetadataOptionsInput interface {
	pulumi.Input

	ToLaunchTemplateMetadataOptionsOutput() LaunchTemplateMetadataOptionsOutput
	ToLaunchTemplateMetadataOptionsOutputWithContext(context.Context) LaunchTemplateMetadataOptionsOutput
}

type LaunchTemplateMetadataOptionsArgs struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint pulumi.StringInput `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit pulumi.IntInput `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens pulumi.StringInput `pulumi:"httpTokens"`
}

func (LaunchTemplateMetadataOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateMetadataOptions)(nil)).Elem()
}

func (i LaunchTemplateMetadataOptionsArgs) ToLaunchTemplateMetadataOptionsOutput() LaunchTemplateMetadataOptionsOutput {
	return i.ToLaunchTemplateMetadataOptionsOutputWithContext(context.Background())
}

func (i LaunchTemplateMetadataOptionsArgs) ToLaunchTemplateMetadataOptionsOutputWithContext(ctx context.Context) LaunchTemplateMetadataOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateMetadataOptionsOutput)
}

func (i LaunchTemplateMetadataOptionsArgs) ToLaunchTemplateMetadataOptionsPtrOutput() LaunchTemplateMetadataOptionsPtrOutput {
	return i.ToLaunchTemplateMetadataOptionsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateMetadataOptionsArgs) ToLaunchTemplateMetadataOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateMetadataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateMetadataOptionsOutput).ToLaunchTemplateMetadataOptionsPtrOutputWithContext(ctx)
}

type LaunchTemplateMetadataOptionsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateMetadataOptionsPtrOutput() LaunchTemplateMetadataOptionsPtrOutput
	ToLaunchTemplateMetadataOptionsPtrOutputWithContext(context.Context) LaunchTemplateMetadataOptionsPtrOutput
}

type launchTemplateMetadataOptionsPtrType LaunchTemplateMetadataOptionsArgs

func LaunchTemplateMetadataOptionsPtr(v *LaunchTemplateMetadataOptionsArgs) LaunchTemplateMetadataOptionsPtrInput {
	return (*launchTemplateMetadataOptionsPtrType)(v)
}

func (*launchTemplateMetadataOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateMetadataOptions)(nil)).Elem()
}

func (i *launchTemplateMetadataOptionsPtrType) ToLaunchTemplateMetadataOptionsPtrOutput() LaunchTemplateMetadataOptionsPtrOutput {
	return i.ToLaunchTemplateMetadataOptionsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateMetadataOptionsPtrType) ToLaunchTemplateMetadataOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateMetadataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateMetadataOptionsPtrOutput)
}

type LaunchTemplateMetadataOptionsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateMetadataOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateMetadataOptions)(nil)).Elem()
}

func (o LaunchTemplateMetadataOptionsOutput) ToLaunchTemplateMetadataOptionsOutput() LaunchTemplateMetadataOptionsOutput {
	return o
}

func (o LaunchTemplateMetadataOptionsOutput) ToLaunchTemplateMetadataOptionsOutputWithContext(ctx context.Context) LaunchTemplateMetadataOptionsOutput {
	return o
}

func (o LaunchTemplateMetadataOptionsOutput) ToLaunchTemplateMetadataOptionsPtrOutput() LaunchTemplateMetadataOptionsPtrOutput {
	return o.ToLaunchTemplateMetadataOptionsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateMetadataOptionsOutput) ToLaunchTemplateMetadataOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateMetadataOptionsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMetadataOptions) *LaunchTemplateMetadataOptions {
		return &v
	}).(LaunchTemplateMetadataOptionsPtrOutput)
}

// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
func (o LaunchTemplateMetadataOptionsOutput) HttpEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchTemplateMetadataOptions) string { return v.HttpEndpoint }).(pulumi.StringOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
func (o LaunchTemplateMetadataOptionsOutput) HttpPutResponseHopLimit() pulumi.IntOutput {
	return o.ApplyT(func(v LaunchTemplateMetadataOptions) int { return v.HttpPutResponseHopLimit }).(pulumi.IntOutput)
}

// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
func (o LaunchTemplateMetadataOptionsOutput) HttpTokens() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchTemplateMetadataOptions) string { return v.HttpTokens }).(pulumi.StringOutput)
}

type LaunchTemplateMetadataOptionsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateMetadataOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateMetadataOptions)(nil)).Elem()
}

func (o LaunchTemplateMetadataOptionsPtrOutput) ToLaunchTemplateMetadataOptionsPtrOutput() LaunchTemplateMetadataOptionsPtrOutput {
	return o
}

func (o LaunchTemplateMetadataOptionsPtrOutput) ToLaunchTemplateMetadataOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateMetadataOptionsPtrOutput {
	return o
}

func (o LaunchTemplateMetadataOptionsPtrOutput) Elem() LaunchTemplateMetadataOptionsOutput {
	return o.ApplyT(func(v *LaunchTemplateMetadataOptions) LaunchTemplateMetadataOptions { return *v }).(LaunchTemplateMetadataOptionsOutput)
}

// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
func (o LaunchTemplateMetadataOptionsPtrOutput) HttpEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchTemplateMetadataOptions) string { return v.HttpEndpoint }).(pulumi.StringOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
func (o LaunchTemplateMetadataOptionsPtrOutput) HttpPutResponseHopLimit() pulumi.IntOutput {
	return o.ApplyT(func(v LaunchTemplateMetadataOptions) int { return v.HttpPutResponseHopLimit }).(pulumi.IntOutput)
}

// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
func (o LaunchTemplateMetadataOptionsPtrOutput) HttpTokens() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchTemplateMetadataOptions) string { return v.HttpTokens }).(pulumi.StringOutput)
}

type LaunchTemplateMetadataOptionsArgs struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint *string `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit *int `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens *string `pulumi:"httpTokens"`
}

type LaunchTemplateMetadataOptionsArgsInput interface {
	pulumi.Input

	ToLaunchTemplateMetadataOptionsArgsOutput() LaunchTemplateMetadataOptionsArgsOutput
	ToLaunchTemplateMetadataOptionsArgsOutputWithContext(context.Context) LaunchTemplateMetadataOptionsArgsOutput
}

type LaunchTemplateMetadataOptionsArgsArgs struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint pulumi.StringPtrInput `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit pulumi.IntPtrInput `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens pulumi.StringPtrInput `pulumi:"httpTokens"`
}

func (LaunchTemplateMetadataOptionsArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateMetadataOptionsArgs)(nil)).Elem()
}

func (i LaunchTemplateMetadataOptionsArgsArgs) ToLaunchTemplateMetadataOptionsArgsOutput() LaunchTemplateMetadataOptionsArgsOutput {
	return i.ToLaunchTemplateMetadataOptionsArgsOutputWithContext(context.Background())
}

func (i LaunchTemplateMetadataOptionsArgsArgs) ToLaunchTemplateMetadataOptionsArgsOutputWithContext(ctx context.Context) LaunchTemplateMetadataOptionsArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateMetadataOptionsArgsOutput)
}

func (i LaunchTemplateMetadataOptionsArgsArgs) ToLaunchTemplateMetadataOptionsArgsPtrOutput() LaunchTemplateMetadataOptionsArgsPtrOutput {
	return i.ToLaunchTemplateMetadataOptionsArgsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateMetadataOptionsArgsArgs) ToLaunchTemplateMetadataOptionsArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateMetadataOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateMetadataOptionsArgsOutput).ToLaunchTemplateMetadataOptionsArgsPtrOutputWithContext(ctx)
}

type LaunchTemplateMetadataOptionsArgsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateMetadataOptionsArgsPtrOutput() LaunchTemplateMetadataOptionsArgsPtrOutput
	ToLaunchTemplateMetadataOptionsArgsPtrOutputWithContext(context.Context) LaunchTemplateMetadataOptionsArgsPtrOutput
}

type launchTemplateMetadataOptionsArgsPtrType LaunchTemplateMetadataOptionsArgsArgs

func LaunchTemplateMetadataOptionsArgsPtr(v *LaunchTemplateMetadataOptionsArgsArgs) LaunchTemplateMetadataOptionsArgsPtrInput {
	return (*launchTemplateMetadataOptionsArgsPtrType)(v)
}

func (*launchTemplateMetadataOptionsArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateMetadataOptionsArgs)(nil)).Elem()
}

func (i *launchTemplateMetadataOptionsArgsPtrType) ToLaunchTemplateMetadataOptionsArgsPtrOutput() LaunchTemplateMetadataOptionsArgsPtrOutput {
	return i.ToLaunchTemplateMetadataOptionsArgsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateMetadataOptionsArgsPtrType) ToLaunchTemplateMetadataOptionsArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateMetadataOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateMetadataOptionsArgsPtrOutput)
}

type LaunchTemplateMetadataOptionsArgsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateMetadataOptionsArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateMetadataOptionsArgs)(nil)).Elem()
}

func (o LaunchTemplateMetadataOptionsArgsOutput) ToLaunchTemplateMetadataOptionsArgsOutput() LaunchTemplateMetadataOptionsArgsOutput {
	return o
}

func (o LaunchTemplateMetadataOptionsArgsOutput) ToLaunchTemplateMetadataOptionsArgsOutputWithContext(ctx context.Context) LaunchTemplateMetadataOptionsArgsOutput {
	return o
}

func (o LaunchTemplateMetadataOptionsArgsOutput) ToLaunchTemplateMetadataOptionsArgsPtrOutput() LaunchTemplateMetadataOptionsArgsPtrOutput {
	return o.ToLaunchTemplateMetadataOptionsArgsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateMetadataOptionsArgsOutput) ToLaunchTemplateMetadataOptionsArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateMetadataOptionsArgsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMetadataOptionsArgs) *LaunchTemplateMetadataOptionsArgs {
		return &v
	}).(LaunchTemplateMetadataOptionsArgsPtrOutput)
}

// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
func (o LaunchTemplateMetadataOptionsArgsOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMetadataOptionsArgs) *string { return v.HttpEndpoint }).(pulumi.StringPtrOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
func (o LaunchTemplateMetadataOptionsArgsOutput) HttpPutResponseHopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMetadataOptionsArgs) *int { return v.HttpPutResponseHopLimit }).(pulumi.IntPtrOutput)
}

// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
func (o LaunchTemplateMetadataOptionsArgsOutput) HttpTokens() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMetadataOptionsArgs) *string { return v.HttpTokens }).(pulumi.StringPtrOutput)
}

type LaunchTemplateMetadataOptionsArgsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateMetadataOptionsArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateMetadataOptionsArgs)(nil)).Elem()
}

func (o LaunchTemplateMetadataOptionsArgsPtrOutput) ToLaunchTemplateMetadataOptionsArgsPtrOutput() LaunchTemplateMetadataOptionsArgsPtrOutput {
	return o
}

func (o LaunchTemplateMetadataOptionsArgsPtrOutput) ToLaunchTemplateMetadataOptionsArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateMetadataOptionsArgsPtrOutput {
	return o
}

func (o LaunchTemplateMetadataOptionsArgsPtrOutput) Elem() LaunchTemplateMetadataOptionsArgsOutput {
	return o.ApplyT(func(v *LaunchTemplateMetadataOptionsArgs) LaunchTemplateMetadataOptionsArgs { return *v }).(LaunchTemplateMetadataOptionsArgsOutput)
}

// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
func (o LaunchTemplateMetadataOptionsArgsPtrOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMetadataOptionsArgs) *string { return v.HttpEndpoint }).(pulumi.StringPtrOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
func (o LaunchTemplateMetadataOptionsArgsPtrOutput) HttpPutResponseHopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMetadataOptionsArgs) *int { return v.HttpPutResponseHopLimit }).(pulumi.IntPtrOutput)
}

// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
func (o LaunchTemplateMetadataOptionsArgsPtrOutput) HttpTokens() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMetadataOptionsArgs) *string { return v.HttpTokens }).(pulumi.StringPtrOutput)
}

type LaunchTemplateMetadataOptionsState struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint *string `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit *int `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens *string `pulumi:"httpTokens"`
}

type LaunchTemplateMetadataOptionsStateInput interface {
	pulumi.Input

	ToLaunchTemplateMetadataOptionsStateOutput() LaunchTemplateMetadataOptionsStateOutput
	ToLaunchTemplateMetadataOptionsStateOutputWithContext(context.Context) LaunchTemplateMetadataOptionsStateOutput
}

type LaunchTemplateMetadataOptionsStateArgs struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint pulumi.StringPtrInput `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit pulumi.IntPtrInput `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens pulumi.StringPtrInput `pulumi:"httpTokens"`
}

func (LaunchTemplateMetadataOptionsStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateMetadataOptionsState)(nil)).Elem()
}

func (i LaunchTemplateMetadataOptionsStateArgs) ToLaunchTemplateMetadataOptionsStateOutput() LaunchTemplateMetadataOptionsStateOutput {
	return i.ToLaunchTemplateMetadataOptionsStateOutputWithContext(context.Background())
}

func (i LaunchTemplateMetadataOptionsStateArgs) ToLaunchTemplateMetadataOptionsStateOutputWithContext(ctx context.Context) LaunchTemplateMetadataOptionsStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateMetadataOptionsStateOutput)
}

type LaunchTemplateMetadataOptionsStateOutput struct{ *pulumi.OutputState }

func (LaunchTemplateMetadataOptionsStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateMetadataOptionsState)(nil)).Elem()
}

func (o LaunchTemplateMetadataOptionsStateOutput) ToLaunchTemplateMetadataOptionsStateOutput() LaunchTemplateMetadataOptionsStateOutput {
	return o
}

func (o LaunchTemplateMetadataOptionsStateOutput) ToLaunchTemplateMetadataOptionsStateOutputWithContext(ctx context.Context) LaunchTemplateMetadataOptionsStateOutput {
	return o
}

// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
func (o LaunchTemplateMetadataOptionsStateOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMetadataOptionsState) *string { return v.HttpEndpoint }).(pulumi.StringPtrOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
func (o LaunchTemplateMetadataOptionsStateOutput) HttpPutResponseHopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMetadataOptionsState) *int { return v.HttpPutResponseHopLimit }).(pulumi.IntPtrOutput)
}

// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
func (o LaunchTemplateMetadataOptionsStateOutput) HttpTokens() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMetadataOptionsState) *string { return v.HttpTokens }).(pulumi.StringPtrOutput)
}

type LaunchTemplateMonitoring struct {
	// If `true`, the launched EC2 instance will have detailed monitoring enabled.
	Enabled *bool `pulumi:"enabled"`
}

type LaunchTemplateMonitoringInput interface {
	pulumi.Input

	ToLaunchTemplateMonitoringOutput() LaunchTemplateMonitoringOutput
	ToLaunchTemplateMonitoringOutputWithContext(context.Context) LaunchTemplateMonitoringOutput
}

type LaunchTemplateMonitoringArgs struct {
	// If `true`, the launched EC2 instance will have detailed monitoring enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (LaunchTemplateMonitoringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateMonitoring)(nil)).Elem()
}

func (i LaunchTemplateMonitoringArgs) ToLaunchTemplateMonitoringOutput() LaunchTemplateMonitoringOutput {
	return i.ToLaunchTemplateMonitoringOutputWithContext(context.Background())
}

func (i LaunchTemplateMonitoringArgs) ToLaunchTemplateMonitoringOutputWithContext(ctx context.Context) LaunchTemplateMonitoringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateMonitoringOutput)
}

func (i LaunchTemplateMonitoringArgs) ToLaunchTemplateMonitoringPtrOutput() LaunchTemplateMonitoringPtrOutput {
	return i.ToLaunchTemplateMonitoringPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateMonitoringArgs) ToLaunchTemplateMonitoringPtrOutputWithContext(ctx context.Context) LaunchTemplateMonitoringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateMonitoringOutput).ToLaunchTemplateMonitoringPtrOutputWithContext(ctx)
}

type LaunchTemplateMonitoringPtrInput interface {
	pulumi.Input

	ToLaunchTemplateMonitoringPtrOutput() LaunchTemplateMonitoringPtrOutput
	ToLaunchTemplateMonitoringPtrOutputWithContext(context.Context) LaunchTemplateMonitoringPtrOutput
}

type launchTemplateMonitoringPtrType LaunchTemplateMonitoringArgs

func LaunchTemplateMonitoringPtr(v *LaunchTemplateMonitoringArgs) LaunchTemplateMonitoringPtrInput {
	return (*launchTemplateMonitoringPtrType)(v)
}

func (*launchTemplateMonitoringPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateMonitoring)(nil)).Elem()
}

func (i *launchTemplateMonitoringPtrType) ToLaunchTemplateMonitoringPtrOutput() LaunchTemplateMonitoringPtrOutput {
	return i.ToLaunchTemplateMonitoringPtrOutputWithContext(context.Background())
}

func (i *launchTemplateMonitoringPtrType) ToLaunchTemplateMonitoringPtrOutputWithContext(ctx context.Context) LaunchTemplateMonitoringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateMonitoringPtrOutput)
}

type LaunchTemplateMonitoringOutput struct{ *pulumi.OutputState }

func (LaunchTemplateMonitoringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateMonitoring)(nil)).Elem()
}

func (o LaunchTemplateMonitoringOutput) ToLaunchTemplateMonitoringOutput() LaunchTemplateMonitoringOutput {
	return o
}

func (o LaunchTemplateMonitoringOutput) ToLaunchTemplateMonitoringOutputWithContext(ctx context.Context) LaunchTemplateMonitoringOutput {
	return o
}

func (o LaunchTemplateMonitoringOutput) ToLaunchTemplateMonitoringPtrOutput() LaunchTemplateMonitoringPtrOutput {
	return o.ToLaunchTemplateMonitoringPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateMonitoringOutput) ToLaunchTemplateMonitoringPtrOutputWithContext(ctx context.Context) LaunchTemplateMonitoringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMonitoring) *LaunchTemplateMonitoring {
		return &v
	}).(LaunchTemplateMonitoringPtrOutput)
}

// If `true`, the launched EC2 instance will have detailed monitoring enabled.
func (o LaunchTemplateMonitoringOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMonitoring) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type LaunchTemplateMonitoringPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateMonitoringPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateMonitoring)(nil)).Elem()
}

func (o LaunchTemplateMonitoringPtrOutput) ToLaunchTemplateMonitoringPtrOutput() LaunchTemplateMonitoringPtrOutput {
	return o
}

func (o LaunchTemplateMonitoringPtrOutput) ToLaunchTemplateMonitoringPtrOutputWithContext(ctx context.Context) LaunchTemplateMonitoringPtrOutput {
	return o
}

func (o LaunchTemplateMonitoringPtrOutput) Elem() LaunchTemplateMonitoringOutput {
	return o.ApplyT(func(v *LaunchTemplateMonitoring) LaunchTemplateMonitoring { return *v }).(LaunchTemplateMonitoringOutput)
}

// If `true`, the launched EC2 instance will have detailed monitoring enabled.
func (o LaunchTemplateMonitoringPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMonitoring) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type LaunchTemplateMonitoringArgs struct {
	// If `true`, the launched EC2 instance will have detailed monitoring enabled.
	Enabled *bool `pulumi:"enabled"`
}

type LaunchTemplateMonitoringArgsInput interface {
	pulumi.Input

	ToLaunchTemplateMonitoringArgsOutput() LaunchTemplateMonitoringArgsOutput
	ToLaunchTemplateMonitoringArgsOutputWithContext(context.Context) LaunchTemplateMonitoringArgsOutput
}

type LaunchTemplateMonitoringArgsArgs struct {
	// If `true`, the launched EC2 instance will have detailed monitoring enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (LaunchTemplateMonitoringArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateMonitoringArgs)(nil)).Elem()
}

func (i LaunchTemplateMonitoringArgsArgs) ToLaunchTemplateMonitoringArgsOutput() LaunchTemplateMonitoringArgsOutput {
	return i.ToLaunchTemplateMonitoringArgsOutputWithContext(context.Background())
}

func (i LaunchTemplateMonitoringArgsArgs) ToLaunchTemplateMonitoringArgsOutputWithContext(ctx context.Context) LaunchTemplateMonitoringArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateMonitoringArgsOutput)
}

func (i LaunchTemplateMonitoringArgsArgs) ToLaunchTemplateMonitoringArgsPtrOutput() LaunchTemplateMonitoringArgsPtrOutput {
	return i.ToLaunchTemplateMonitoringArgsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateMonitoringArgsArgs) ToLaunchTemplateMonitoringArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateMonitoringArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateMonitoringArgsOutput).ToLaunchTemplateMonitoringArgsPtrOutputWithContext(ctx)
}

type LaunchTemplateMonitoringArgsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateMonitoringArgsPtrOutput() LaunchTemplateMonitoringArgsPtrOutput
	ToLaunchTemplateMonitoringArgsPtrOutputWithContext(context.Context) LaunchTemplateMonitoringArgsPtrOutput
}

type launchTemplateMonitoringArgsPtrType LaunchTemplateMonitoringArgsArgs

func LaunchTemplateMonitoringArgsPtr(v *LaunchTemplateMonitoringArgsArgs) LaunchTemplateMonitoringArgsPtrInput {
	return (*launchTemplateMonitoringArgsPtrType)(v)
}

func (*launchTemplateMonitoringArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateMonitoringArgs)(nil)).Elem()
}

func (i *launchTemplateMonitoringArgsPtrType) ToLaunchTemplateMonitoringArgsPtrOutput() LaunchTemplateMonitoringArgsPtrOutput {
	return i.ToLaunchTemplateMonitoringArgsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateMonitoringArgsPtrType) ToLaunchTemplateMonitoringArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateMonitoringArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateMonitoringArgsPtrOutput)
}

type LaunchTemplateMonitoringArgsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateMonitoringArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateMonitoringArgs)(nil)).Elem()
}

func (o LaunchTemplateMonitoringArgsOutput) ToLaunchTemplateMonitoringArgsOutput() LaunchTemplateMonitoringArgsOutput {
	return o
}

func (o LaunchTemplateMonitoringArgsOutput) ToLaunchTemplateMonitoringArgsOutputWithContext(ctx context.Context) LaunchTemplateMonitoringArgsOutput {
	return o
}

func (o LaunchTemplateMonitoringArgsOutput) ToLaunchTemplateMonitoringArgsPtrOutput() LaunchTemplateMonitoringArgsPtrOutput {
	return o.ToLaunchTemplateMonitoringArgsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateMonitoringArgsOutput) ToLaunchTemplateMonitoringArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateMonitoringArgsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMonitoringArgs) *LaunchTemplateMonitoringArgs {
		return &v
	}).(LaunchTemplateMonitoringArgsPtrOutput)
}

// If `true`, the launched EC2 instance will have detailed monitoring enabled.
func (o LaunchTemplateMonitoringArgsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMonitoringArgs) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type LaunchTemplateMonitoringArgsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateMonitoringArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateMonitoringArgs)(nil)).Elem()
}

func (o LaunchTemplateMonitoringArgsPtrOutput) ToLaunchTemplateMonitoringArgsPtrOutput() LaunchTemplateMonitoringArgsPtrOutput {
	return o
}

func (o LaunchTemplateMonitoringArgsPtrOutput) ToLaunchTemplateMonitoringArgsPtrOutputWithContext(ctx context.Context) LaunchTemplateMonitoringArgsPtrOutput {
	return o
}

func (o LaunchTemplateMonitoringArgsPtrOutput) Elem() LaunchTemplateMonitoringArgsOutput {
	return o.ApplyT(func(v *LaunchTemplateMonitoringArgs) LaunchTemplateMonitoringArgs { return *v }).(LaunchTemplateMonitoringArgsOutput)
}

// If `true`, the launched EC2 instance will have detailed monitoring enabled.
func (o LaunchTemplateMonitoringArgsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMonitoringArgs) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type LaunchTemplateMonitoringState struct {
	// If `true`, the launched EC2 instance will have detailed monitoring enabled.
	Enabled *bool `pulumi:"enabled"`
}

type LaunchTemplateMonitoringStateInput interface {
	pulumi.Input

	ToLaunchTemplateMonitoringStateOutput() LaunchTemplateMonitoringStateOutput
	ToLaunchTemplateMonitoringStateOutputWithContext(context.Context) LaunchTemplateMonitoringStateOutput
}

type LaunchTemplateMonitoringStateArgs struct {
	// If `true`, the launched EC2 instance will have detailed monitoring enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (LaunchTemplateMonitoringStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateMonitoringState)(nil)).Elem()
}

func (i LaunchTemplateMonitoringStateArgs) ToLaunchTemplateMonitoringStateOutput() LaunchTemplateMonitoringStateOutput {
	return i.ToLaunchTemplateMonitoringStateOutputWithContext(context.Background())
}

func (i LaunchTemplateMonitoringStateArgs) ToLaunchTemplateMonitoringStateOutputWithContext(ctx context.Context) LaunchTemplateMonitoringStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateMonitoringStateOutput)
}

type LaunchTemplateMonitoringStateOutput struct{ *pulumi.OutputState }

func (LaunchTemplateMonitoringStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateMonitoringState)(nil)).Elem()
}

func (o LaunchTemplateMonitoringStateOutput) ToLaunchTemplateMonitoringStateOutput() LaunchTemplateMonitoringStateOutput {
	return o
}

func (o LaunchTemplateMonitoringStateOutput) ToLaunchTemplateMonitoringStateOutputWithContext(ctx context.Context) LaunchTemplateMonitoringStateOutput {
	return o
}

// If `true`, the launched EC2 instance will have detailed monitoring enabled.
func (o LaunchTemplateMonitoringStateOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMonitoringState) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type LaunchTemplateNetworkInterface struct {
	// Associate a public ip address with the network interface.  Boolean value.
	AssociatePublicIpAddress *string `pulumi:"associatePublicIpAddress"`
	// Whether the network interface should be destroyed on instance termination.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// Description of the network interface.
	Description *string `pulumi:"description"`
	// The integer index of the network interface attachment.
	DeviceIndex *int `pulumi:"deviceIndex"`
	// The number of secondary private IPv4 addresses to assign to a network interface. Conflicts with `ipv4Addresses`
	Ipv4AddressCount *int `pulumi:"ipv4AddressCount"`
	// One or more private IPv4 addresses to associate. Conflicts with `ipv4AddressCount`
	Ipv4Addresses []string `pulumi:"ipv4Addresses"`
	// The number of IPv6 addresses to assign to a network interface. Conflicts with `ipv6Addresses`
	Ipv6AddressCount *int `pulumi:"ipv6AddressCount"`
	// One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Conflicts with `ipv6AddressCount`
	Ipv6Addresses []string `pulumi:"ipv6Addresses"`
	// The ID of the network interface to attach.
	NetworkInterfaceId *string `pulumi:"networkInterfaceId"`
	// The primary private IPv4 address.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// A list of security group IDs to associate.
	SecurityGroups []string `pulumi:"securityGroups"`
	// The VPC Subnet ID to associate.
	SubnetId *string `pulumi:"subnetId"`
}

type LaunchTemplateNetworkInterfaceInput interface {
	pulumi.Input

	ToLaunchTemplateNetworkInterfaceOutput() LaunchTemplateNetworkInterfaceOutput
	ToLaunchTemplateNetworkInterfaceOutputWithContext(context.Context) LaunchTemplateNetworkInterfaceOutput
}

type LaunchTemplateNetworkInterfaceArgs struct {
	// Associate a public ip address with the network interface.  Boolean value.
	AssociatePublicIpAddress pulumi.StringPtrInput `pulumi:"associatePublicIpAddress"`
	// Whether the network interface should be destroyed on instance termination.
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// Description of the network interface.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The integer index of the network interface attachment.
	DeviceIndex pulumi.IntPtrInput `pulumi:"deviceIndex"`
	// The number of secondary private IPv4 addresses to assign to a network interface. Conflicts with `ipv4Addresses`
	Ipv4AddressCount pulumi.IntPtrInput `pulumi:"ipv4AddressCount"`
	// One or more private IPv4 addresses to associate. Conflicts with `ipv4AddressCount`
	Ipv4Addresses pulumi.StringArrayInput `pulumi:"ipv4Addresses"`
	// The number of IPv6 addresses to assign to a network interface. Conflicts with `ipv6Addresses`
	Ipv6AddressCount pulumi.IntPtrInput `pulumi:"ipv6AddressCount"`
	// One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Conflicts with `ipv6AddressCount`
	Ipv6Addresses pulumi.StringArrayInput `pulumi:"ipv6Addresses"`
	// The ID of the network interface to attach.
	NetworkInterfaceId pulumi.StringPtrInput `pulumi:"networkInterfaceId"`
	// The primary private IPv4 address.
	PrivateIpAddress pulumi.StringPtrInput `pulumi:"privateIpAddress"`
	// A list of security group IDs to associate.
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// The VPC Subnet ID to associate.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (LaunchTemplateNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateNetworkInterface)(nil)).Elem()
}

func (i LaunchTemplateNetworkInterfaceArgs) ToLaunchTemplateNetworkInterfaceOutput() LaunchTemplateNetworkInterfaceOutput {
	return i.ToLaunchTemplateNetworkInterfaceOutputWithContext(context.Background())
}

func (i LaunchTemplateNetworkInterfaceArgs) ToLaunchTemplateNetworkInterfaceOutputWithContext(ctx context.Context) LaunchTemplateNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateNetworkInterfaceOutput)
}

type LaunchTemplateNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToLaunchTemplateNetworkInterfaceArrayOutput() LaunchTemplateNetworkInterfaceArrayOutput
	ToLaunchTemplateNetworkInterfaceArrayOutputWithContext(context.Context) LaunchTemplateNetworkInterfaceArrayOutput
}

type LaunchTemplateNetworkInterfaceArray []LaunchTemplateNetworkInterfaceInput

func (LaunchTemplateNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateNetworkInterface)(nil)).Elem()
}

func (i LaunchTemplateNetworkInterfaceArray) ToLaunchTemplateNetworkInterfaceArrayOutput() LaunchTemplateNetworkInterfaceArrayOutput {
	return i.ToLaunchTemplateNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i LaunchTemplateNetworkInterfaceArray) ToLaunchTemplateNetworkInterfaceArrayOutputWithContext(ctx context.Context) LaunchTemplateNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateNetworkInterfaceArrayOutput)
}

type LaunchTemplateNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (LaunchTemplateNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateNetworkInterface)(nil)).Elem()
}

func (o LaunchTemplateNetworkInterfaceOutput) ToLaunchTemplateNetworkInterfaceOutput() LaunchTemplateNetworkInterfaceOutput {
	return o
}

func (o LaunchTemplateNetworkInterfaceOutput) ToLaunchTemplateNetworkInterfaceOutputWithContext(ctx context.Context) LaunchTemplateNetworkInterfaceOutput {
	return o
}

// Associate a public ip address with the network interface.  Boolean value.
func (o LaunchTemplateNetworkInterfaceOutput) AssociatePublicIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) *string { return v.AssociatePublicIpAddress }).(pulumi.StringPtrOutput)
}

// Whether the network interface should be destroyed on instance termination.
func (o LaunchTemplateNetworkInterfaceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// Description of the network interface.
func (o LaunchTemplateNetworkInterfaceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The integer index of the network interface attachment.
func (o LaunchTemplateNetworkInterfaceOutput) DeviceIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) *int { return v.DeviceIndex }).(pulumi.IntPtrOutput)
}

// The number of secondary private IPv4 addresses to assign to a network interface. Conflicts with `ipv4Addresses`
func (o LaunchTemplateNetworkInterfaceOutput) Ipv4AddressCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) *int { return v.Ipv4AddressCount }).(pulumi.IntPtrOutput)
}

// One or more private IPv4 addresses to associate. Conflicts with `ipv4AddressCount`
func (o LaunchTemplateNetworkInterfaceOutput) Ipv4Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) []string { return v.Ipv4Addresses }).(pulumi.StringArrayOutput)
}

// The number of IPv6 addresses to assign to a network interface. Conflicts with `ipv6Addresses`
func (o LaunchTemplateNetworkInterfaceOutput) Ipv6AddressCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) *int { return v.Ipv6AddressCount }).(pulumi.IntPtrOutput)
}

// One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Conflicts with `ipv6AddressCount`
func (o LaunchTemplateNetworkInterfaceOutput) Ipv6Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) []string { return v.Ipv6Addresses }).(pulumi.StringArrayOutput)
}

// The ID of the network interface to attach.
func (o LaunchTemplateNetworkInterfaceOutput) NetworkInterfaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) *string { return v.NetworkInterfaceId }).(pulumi.StringPtrOutput)
}

// The primary private IPv4 address.
func (o LaunchTemplateNetworkInterfaceOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

// A list of security group IDs to associate.
func (o LaunchTemplateNetworkInterfaceOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// The VPC Subnet ID to associate.
func (o LaunchTemplateNetworkInterfaceOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type LaunchTemplateNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (LaunchTemplateNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateNetworkInterface)(nil)).Elem()
}

func (o LaunchTemplateNetworkInterfaceArrayOutput) ToLaunchTemplateNetworkInterfaceArrayOutput() LaunchTemplateNetworkInterfaceArrayOutput {
	return o
}

func (o LaunchTemplateNetworkInterfaceArrayOutput) ToLaunchTemplateNetworkInterfaceArrayOutputWithContext(ctx context.Context) LaunchTemplateNetworkInterfaceArrayOutput {
	return o
}

func (o LaunchTemplateNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) LaunchTemplateNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchTemplateNetworkInterface {
		return vs[0].([]LaunchTemplateNetworkInterface)[vs[1].(int)]
	}).(LaunchTemplateNetworkInterfaceOutput)
}

type LaunchTemplateNetworkInterfaceArgs struct {
	// Associate a public ip address with the network interface.  Boolean value.
	AssociatePublicIpAddress *string `pulumi:"associatePublicIpAddress"`
	// Whether the network interface should be destroyed on instance termination.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// Description of the network interface.
	Description *string `pulumi:"description"`
	// The integer index of the network interface attachment.
	DeviceIndex *int `pulumi:"deviceIndex"`
	// The number of secondary private IPv4 addresses to assign to a network interface. Conflicts with `ipv4Addresses`
	Ipv4AddressCount *int `pulumi:"ipv4AddressCount"`
	// One or more private IPv4 addresses to associate. Conflicts with `ipv4AddressCount`
	Ipv4Addresses []string `pulumi:"ipv4Addresses"`
	// The number of IPv6 addresses to assign to a network interface. Conflicts with `ipv6Addresses`
	Ipv6AddressCount *int `pulumi:"ipv6AddressCount"`
	// One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Conflicts with `ipv6AddressCount`
	Ipv6Addresses []string `pulumi:"ipv6Addresses"`
	// The ID of the network interface to attach.
	NetworkInterfaceId *string `pulumi:"networkInterfaceId"`
	// The primary private IPv4 address.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// A list of security group IDs to associate.
	SecurityGroups []string `pulumi:"securityGroups"`
	// The VPC Subnet ID to associate.
	SubnetId *string `pulumi:"subnetId"`
}

type LaunchTemplateNetworkInterfaceArgsInput interface {
	pulumi.Input

	ToLaunchTemplateNetworkInterfaceArgsOutput() LaunchTemplateNetworkInterfaceArgsOutput
	ToLaunchTemplateNetworkInterfaceArgsOutputWithContext(context.Context) LaunchTemplateNetworkInterfaceArgsOutput
}

type LaunchTemplateNetworkInterfaceArgsArgs struct {
	// Associate a public ip address with the network interface.  Boolean value.
	AssociatePublicIpAddress pulumi.StringPtrInput `pulumi:"associatePublicIpAddress"`
	// Whether the network interface should be destroyed on instance termination.
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// Description of the network interface.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The integer index of the network interface attachment.
	DeviceIndex pulumi.IntPtrInput `pulumi:"deviceIndex"`
	// The number of secondary private IPv4 addresses to assign to a network interface. Conflicts with `ipv4Addresses`
	Ipv4AddressCount pulumi.IntPtrInput `pulumi:"ipv4AddressCount"`
	// One or more private IPv4 addresses to associate. Conflicts with `ipv4AddressCount`
	Ipv4Addresses pulumi.StringArrayInput `pulumi:"ipv4Addresses"`
	// The number of IPv6 addresses to assign to a network interface. Conflicts with `ipv6Addresses`
	Ipv6AddressCount pulumi.IntPtrInput `pulumi:"ipv6AddressCount"`
	// One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Conflicts with `ipv6AddressCount`
	Ipv6Addresses pulumi.StringArrayInput `pulumi:"ipv6Addresses"`
	// The ID of the network interface to attach.
	NetworkInterfaceId pulumi.StringPtrInput `pulumi:"networkInterfaceId"`
	// The primary private IPv4 address.
	PrivateIpAddress pulumi.StringPtrInput `pulumi:"privateIpAddress"`
	// A list of security group IDs to associate.
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// The VPC Subnet ID to associate.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (LaunchTemplateNetworkInterfaceArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateNetworkInterfaceArgs)(nil)).Elem()
}

func (i LaunchTemplateNetworkInterfaceArgsArgs) ToLaunchTemplateNetworkInterfaceArgsOutput() LaunchTemplateNetworkInterfaceArgsOutput {
	return i.ToLaunchTemplateNetworkInterfaceArgsOutputWithContext(context.Background())
}

func (i LaunchTemplateNetworkInterfaceArgsArgs) ToLaunchTemplateNetworkInterfaceArgsOutputWithContext(ctx context.Context) LaunchTemplateNetworkInterfaceArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateNetworkInterfaceArgsOutput)
}

type LaunchTemplateNetworkInterfaceArgsArrayInput interface {
	pulumi.Input

	ToLaunchTemplateNetworkInterfaceArgsArrayOutput() LaunchTemplateNetworkInterfaceArgsArrayOutput
	ToLaunchTemplateNetworkInterfaceArgsArrayOutputWithContext(context.Context) LaunchTemplateNetworkInterfaceArgsArrayOutput
}

type LaunchTemplateNetworkInterfaceArgsArray []LaunchTemplateNetworkInterfaceArgsInput

func (LaunchTemplateNetworkInterfaceArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateNetworkInterfaceArgs)(nil)).Elem()
}

func (i LaunchTemplateNetworkInterfaceArgsArray) ToLaunchTemplateNetworkInterfaceArgsArrayOutput() LaunchTemplateNetworkInterfaceArgsArrayOutput {
	return i.ToLaunchTemplateNetworkInterfaceArgsArrayOutputWithContext(context.Background())
}

func (i LaunchTemplateNetworkInterfaceArgsArray) ToLaunchTemplateNetworkInterfaceArgsArrayOutputWithContext(ctx context.Context) LaunchTemplateNetworkInterfaceArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateNetworkInterfaceArgsArrayOutput)
}

type LaunchTemplateNetworkInterfaceArgsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateNetworkInterfaceArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateNetworkInterfaceArgs)(nil)).Elem()
}

func (o LaunchTemplateNetworkInterfaceArgsOutput) ToLaunchTemplateNetworkInterfaceArgsOutput() LaunchTemplateNetworkInterfaceArgsOutput {
	return o
}

func (o LaunchTemplateNetworkInterfaceArgsOutput) ToLaunchTemplateNetworkInterfaceArgsOutputWithContext(ctx context.Context) LaunchTemplateNetworkInterfaceArgsOutput {
	return o
}

// Associate a public ip address with the network interface.  Boolean value.
func (o LaunchTemplateNetworkInterfaceArgsOutput) AssociatePublicIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterfaceArgs) *string { return v.AssociatePublicIpAddress }).(pulumi.StringPtrOutput)
}

// Whether the network interface should be destroyed on instance termination.
func (o LaunchTemplateNetworkInterfaceArgsOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterfaceArgs) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// Description of the network interface.
func (o LaunchTemplateNetworkInterfaceArgsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterfaceArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The integer index of the network interface attachment.
func (o LaunchTemplateNetworkInterfaceArgsOutput) DeviceIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterfaceArgs) *int { return v.DeviceIndex }).(pulumi.IntPtrOutput)
}

// The number of secondary private IPv4 addresses to assign to a network interface. Conflicts with `ipv4Addresses`
func (o LaunchTemplateNetworkInterfaceArgsOutput) Ipv4AddressCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterfaceArgs) *int { return v.Ipv4AddressCount }).(pulumi.IntPtrOutput)
}

// One or more private IPv4 addresses to associate. Conflicts with `ipv4AddressCount`
func (o LaunchTemplateNetworkInterfaceArgsOutput) Ipv4Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterfaceArgs) []string { return v.Ipv4Addresses }).(pulumi.StringArrayOutput)
}

// The number of IPv6 addresses to assign to a network interface. Conflicts with `ipv6Addresses`
func (o LaunchTemplateNetworkInterfaceArgsOutput) Ipv6AddressCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterfaceArgs) *int { return v.Ipv6AddressCount }).(pulumi.IntPtrOutput)
}

// One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Conflicts with `ipv6AddressCount`
func (o LaunchTemplateNetworkInterfaceArgsOutput) Ipv6Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterfaceArgs) []string { return v.Ipv6Addresses }).(pulumi.StringArrayOutput)
}

// The ID of the network interface to attach.
func (o LaunchTemplateNetworkInterfaceArgsOutput) NetworkInterfaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterfaceArgs) *string { return v.NetworkInterfaceId }).(pulumi.StringPtrOutput)
}

// The primary private IPv4 address.
func (o LaunchTemplateNetworkInterfaceArgsOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterfaceArgs) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

// A list of security group IDs to associate.
func (o LaunchTemplateNetworkInterfaceArgsOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterfaceArgs) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// The VPC Subnet ID to associate.
func (o LaunchTemplateNetworkInterfaceArgsOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterfaceArgs) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type LaunchTemplateNetworkInterfaceArgsArrayOutput struct{ *pulumi.OutputState }

func (LaunchTemplateNetworkInterfaceArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateNetworkInterfaceArgs)(nil)).Elem()
}

func (o LaunchTemplateNetworkInterfaceArgsArrayOutput) ToLaunchTemplateNetworkInterfaceArgsArrayOutput() LaunchTemplateNetworkInterfaceArgsArrayOutput {
	return o
}

func (o LaunchTemplateNetworkInterfaceArgsArrayOutput) ToLaunchTemplateNetworkInterfaceArgsArrayOutputWithContext(ctx context.Context) LaunchTemplateNetworkInterfaceArgsArrayOutput {
	return o
}

func (o LaunchTemplateNetworkInterfaceArgsArrayOutput) Index(i pulumi.IntInput) LaunchTemplateNetworkInterfaceArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchTemplateNetworkInterfaceArgs {
		return vs[0].([]LaunchTemplateNetworkInterfaceArgs)[vs[1].(int)]
	}).(LaunchTemplateNetworkInterfaceArgsOutput)
}

type LaunchTemplateNetworkInterfaceState struct {
	// Associate a public ip address with the network interface.  Boolean value.
	AssociatePublicIpAddress *string `pulumi:"associatePublicIpAddress"`
	// Whether the network interface should be destroyed on instance termination.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// Description of the network interface.
	Description *string `pulumi:"description"`
	// The integer index of the network interface attachment.
	DeviceIndex *int `pulumi:"deviceIndex"`
	// The number of secondary private IPv4 addresses to assign to a network interface. Conflicts with `ipv4Addresses`
	Ipv4AddressCount *int `pulumi:"ipv4AddressCount"`
	// One or more private IPv4 addresses to associate. Conflicts with `ipv4AddressCount`
	Ipv4Addresses []string `pulumi:"ipv4Addresses"`
	// The number of IPv6 addresses to assign to a network interface. Conflicts with `ipv6Addresses`
	Ipv6AddressCount *int `pulumi:"ipv6AddressCount"`
	// One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Conflicts with `ipv6AddressCount`
	Ipv6Addresses []string `pulumi:"ipv6Addresses"`
	// The ID of the network interface to attach.
	NetworkInterfaceId *string `pulumi:"networkInterfaceId"`
	// The primary private IPv4 address.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// A list of security group IDs to associate.
	SecurityGroups []string `pulumi:"securityGroups"`
	// The VPC Subnet ID to associate.
	SubnetId *string `pulumi:"subnetId"`
}

type LaunchTemplateNetworkInterfaceStateInput interface {
	pulumi.Input

	ToLaunchTemplateNetworkInterfaceStateOutput() LaunchTemplateNetworkInterfaceStateOutput
	ToLaunchTemplateNetworkInterfaceStateOutputWithContext(context.Context) LaunchTemplateNetworkInterfaceStateOutput
}

type LaunchTemplateNetworkInterfaceStateArgs struct {
	// Associate a public ip address with the network interface.  Boolean value.
	AssociatePublicIpAddress pulumi.StringPtrInput `pulumi:"associatePublicIpAddress"`
	// Whether the network interface should be destroyed on instance termination.
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// Description of the network interface.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The integer index of the network interface attachment.
	DeviceIndex pulumi.IntPtrInput `pulumi:"deviceIndex"`
	// The number of secondary private IPv4 addresses to assign to a network interface. Conflicts with `ipv4Addresses`
	Ipv4AddressCount pulumi.IntPtrInput `pulumi:"ipv4AddressCount"`
	// One or more private IPv4 addresses to associate. Conflicts with `ipv4AddressCount`
	Ipv4Addresses pulumi.StringArrayInput `pulumi:"ipv4Addresses"`
	// The number of IPv6 addresses to assign to a network interface. Conflicts with `ipv6Addresses`
	Ipv6AddressCount pulumi.IntPtrInput `pulumi:"ipv6AddressCount"`
	// One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Conflicts with `ipv6AddressCount`
	Ipv6Addresses pulumi.StringArrayInput `pulumi:"ipv6Addresses"`
	// The ID of the network interface to attach.
	NetworkInterfaceId pulumi.StringPtrInput `pulumi:"networkInterfaceId"`
	// The primary private IPv4 address.
	PrivateIpAddress pulumi.StringPtrInput `pulumi:"privateIpAddress"`
	// A list of security group IDs to associate.
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// The VPC Subnet ID to associate.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (LaunchTemplateNetworkInterfaceStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateNetworkInterfaceState)(nil)).Elem()
}

func (i LaunchTemplateNetworkInterfaceStateArgs) ToLaunchTemplateNetworkInterfaceStateOutput() LaunchTemplateNetworkInterfaceStateOutput {
	return i.ToLaunchTemplateNetworkInterfaceStateOutputWithContext(context.Background())
}

func (i LaunchTemplateNetworkInterfaceStateArgs) ToLaunchTemplateNetworkInterfaceStateOutputWithContext(ctx context.Context) LaunchTemplateNetworkInterfaceStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateNetworkInterfaceStateOutput)
}

type LaunchTemplateNetworkInterfaceStateArrayInput interface {
	pulumi.Input

	ToLaunchTemplateNetworkInterfaceStateArrayOutput() LaunchTemplateNetworkInterfaceStateArrayOutput
	ToLaunchTemplateNetworkInterfaceStateArrayOutputWithContext(context.Context) LaunchTemplateNetworkInterfaceStateArrayOutput
}

type LaunchTemplateNetworkInterfaceStateArray []LaunchTemplateNetworkInterfaceStateInput

func (LaunchTemplateNetworkInterfaceStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateNetworkInterfaceState)(nil)).Elem()
}

func (i LaunchTemplateNetworkInterfaceStateArray) ToLaunchTemplateNetworkInterfaceStateArrayOutput() LaunchTemplateNetworkInterfaceStateArrayOutput {
	return i.ToLaunchTemplateNetworkInterfaceStateArrayOutputWithContext(context.Background())
}

func (i LaunchTemplateNetworkInterfaceStateArray) ToLaunchTemplateNetworkInterfaceStateArrayOutputWithContext(ctx context.Context) LaunchTemplateNetworkInterfaceStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateNetworkInterfaceStateArrayOutput)
}

type LaunchTemplateNetworkInterfaceStateOutput struct{ *pulumi.OutputState }

func (LaunchTemplateNetworkInterfaceStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateNetworkInterfaceState)(nil)).Elem()
}

func (o LaunchTemplateNetworkInterfaceStateOutput) ToLaunchTemplateNetworkInterfaceStateOutput() LaunchTemplateNetworkInterfaceStateOutput {
	return o
}

func (o LaunchTemplateNetworkInterfaceStateOutput) ToLaunchTemplateNetworkInterfaceStateOutputWithContext(ctx context.Context) LaunchTemplateNetworkInterfaceStateOutput {
	return o
}

// Associate a public ip address with the network interface.  Boolean value.
func (o LaunchTemplateNetworkInterfaceStateOutput) AssociatePublicIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterfaceState) *string { return v.AssociatePublicIpAddress }).(pulumi.StringPtrOutput)
}

// Whether the network interface should be destroyed on instance termination.
func (o LaunchTemplateNetworkInterfaceStateOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterfaceState) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// Description of the network interface.
func (o LaunchTemplateNetworkInterfaceStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterfaceState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The integer index of the network interface attachment.
func (o LaunchTemplateNetworkInterfaceStateOutput) DeviceIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterfaceState) *int { return v.DeviceIndex }).(pulumi.IntPtrOutput)
}

// The number of secondary private IPv4 addresses to assign to a network interface. Conflicts with `ipv4Addresses`
func (o LaunchTemplateNetworkInterfaceStateOutput) Ipv4AddressCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterfaceState) *int { return v.Ipv4AddressCount }).(pulumi.IntPtrOutput)
}

// One or more private IPv4 addresses to associate. Conflicts with `ipv4AddressCount`
func (o LaunchTemplateNetworkInterfaceStateOutput) Ipv4Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterfaceState) []string { return v.Ipv4Addresses }).(pulumi.StringArrayOutput)
}

// The number of IPv6 addresses to assign to a network interface. Conflicts with `ipv6Addresses`
func (o LaunchTemplateNetworkInterfaceStateOutput) Ipv6AddressCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterfaceState) *int { return v.Ipv6AddressCount }).(pulumi.IntPtrOutput)
}

// One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Conflicts with `ipv6AddressCount`
func (o LaunchTemplateNetworkInterfaceStateOutput) Ipv6Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterfaceState) []string { return v.Ipv6Addresses }).(pulumi.StringArrayOutput)
}

// The ID of the network interface to attach.
func (o LaunchTemplateNetworkInterfaceStateOutput) NetworkInterfaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterfaceState) *string { return v.NetworkInterfaceId }).(pulumi.StringPtrOutput)
}

// The primary private IPv4 address.
func (o LaunchTemplateNetworkInterfaceStateOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterfaceState) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

// A list of security group IDs to associate.
func (o LaunchTemplateNetworkInterfaceStateOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterfaceState) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// The VPC Subnet ID to associate.
func (o LaunchTemplateNetworkInterfaceStateOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterfaceState) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type LaunchTemplateNetworkInterfaceStateArrayOutput struct{ *pulumi.OutputState }

func (LaunchTemplateNetworkInterfaceStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateNetworkInterfaceState)(nil)).Elem()
}

func (o LaunchTemplateNetworkInterfaceStateArrayOutput) ToLaunchTemplateNetworkInterfaceStateArrayOutput() LaunchTemplateNetworkInterfaceStateArrayOutput {
	return o
}

func (o LaunchTemplateNetworkInterfaceStateArrayOutput) ToLaunchTemplateNetworkInterfaceStateArrayOutputWithContext(ctx context.Context) LaunchTemplateNetworkInterfaceStateArrayOutput {
	return o
}

func (o LaunchTemplateNetworkInterfaceStateArrayOutput) Index(i pulumi.IntInput) LaunchTemplateNetworkInterfaceStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchTemplateNetworkInterfaceState {
		return vs[0].([]LaunchTemplateNetworkInterfaceState)[vs[1].(int)]
	}).(LaunchTemplateNetworkInterfaceStateOutput)
}

type LaunchTemplatePlacement struct {
	// The affinity setting for an instance on a Dedicated Host.
	Affinity *string `pulumi:"affinity"`
	// The Availability Zone for the instance.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The name of the placement group for the instance.
	GroupName *string `pulumi:"groupName"`
	// The ID of the Dedicated Host for the instance.
	HostId *string `pulumi:"hostId"`
	// Reserved for future use.
	SpreadDomain *string `pulumi:"spreadDomain"`
	// The tenancy of the instance (if the instance is running in a VPC). Can be `default`, `dedicated`, or `host`.
	Tenancy *string `pulumi:"tenancy"`
}

type LaunchTemplatePlacementInput interface {
	pulumi.Input

	ToLaunchTemplatePlacementOutput() LaunchTemplatePlacementOutput
	ToLaunchTemplatePlacementOutputWithContext(context.Context) LaunchTemplatePlacementOutput
}

type LaunchTemplatePlacementArgs struct {
	// The affinity setting for an instance on a Dedicated Host.
	Affinity pulumi.StringPtrInput `pulumi:"affinity"`
	// The Availability Zone for the instance.
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// The name of the placement group for the instance.
	GroupName pulumi.StringPtrInput `pulumi:"groupName"`
	// The ID of the Dedicated Host for the instance.
	HostId pulumi.StringPtrInput `pulumi:"hostId"`
	// Reserved for future use.
	SpreadDomain pulumi.StringPtrInput `pulumi:"spreadDomain"`
	// The tenancy of the instance (if the instance is running in a VPC). Can be `default`, `dedicated`, or `host`.
	Tenancy pulumi.StringPtrInput `pulumi:"tenancy"`
}

func (LaunchTemplatePlacementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplatePlacement)(nil)).Elem()
}

func (i LaunchTemplatePlacementArgs) ToLaunchTemplatePlacementOutput() LaunchTemplatePlacementOutput {
	return i.ToLaunchTemplatePlacementOutputWithContext(context.Background())
}

func (i LaunchTemplatePlacementArgs) ToLaunchTemplatePlacementOutputWithContext(ctx context.Context) LaunchTemplatePlacementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplatePlacementOutput)
}

func (i LaunchTemplatePlacementArgs) ToLaunchTemplatePlacementPtrOutput() LaunchTemplatePlacementPtrOutput {
	return i.ToLaunchTemplatePlacementPtrOutputWithContext(context.Background())
}

func (i LaunchTemplatePlacementArgs) ToLaunchTemplatePlacementPtrOutputWithContext(ctx context.Context) LaunchTemplatePlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplatePlacementOutput).ToLaunchTemplatePlacementPtrOutputWithContext(ctx)
}

type LaunchTemplatePlacementPtrInput interface {
	pulumi.Input

	ToLaunchTemplatePlacementPtrOutput() LaunchTemplatePlacementPtrOutput
	ToLaunchTemplatePlacementPtrOutputWithContext(context.Context) LaunchTemplatePlacementPtrOutput
}

type launchTemplatePlacementPtrType LaunchTemplatePlacementArgs

func LaunchTemplatePlacementPtr(v *LaunchTemplatePlacementArgs) LaunchTemplatePlacementPtrInput {
	return (*launchTemplatePlacementPtrType)(v)
}

func (*launchTemplatePlacementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplatePlacement)(nil)).Elem()
}

func (i *launchTemplatePlacementPtrType) ToLaunchTemplatePlacementPtrOutput() LaunchTemplatePlacementPtrOutput {
	return i.ToLaunchTemplatePlacementPtrOutputWithContext(context.Background())
}

func (i *launchTemplatePlacementPtrType) ToLaunchTemplatePlacementPtrOutputWithContext(ctx context.Context) LaunchTemplatePlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplatePlacementPtrOutput)
}

type LaunchTemplatePlacementOutput struct{ *pulumi.OutputState }

func (LaunchTemplatePlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplatePlacement)(nil)).Elem()
}

func (o LaunchTemplatePlacementOutput) ToLaunchTemplatePlacementOutput() LaunchTemplatePlacementOutput {
	return o
}

func (o LaunchTemplatePlacementOutput) ToLaunchTemplatePlacementOutputWithContext(ctx context.Context) LaunchTemplatePlacementOutput {
	return o
}

func (o LaunchTemplatePlacementOutput) ToLaunchTemplatePlacementPtrOutput() LaunchTemplatePlacementPtrOutput {
	return o.ToLaunchTemplatePlacementPtrOutputWithContext(context.Background())
}

func (o LaunchTemplatePlacementOutput) ToLaunchTemplatePlacementPtrOutputWithContext(ctx context.Context) LaunchTemplatePlacementPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *LaunchTemplatePlacement {
		return &v
	}).(LaunchTemplatePlacementPtrOutput)
}

// The affinity setting for an instance on a Dedicated Host.
func (o LaunchTemplatePlacementOutput) Affinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *string { return v.Affinity }).(pulumi.StringPtrOutput)
}

// The Availability Zone for the instance.
func (o LaunchTemplatePlacementOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// The name of the placement group for the instance.
func (o LaunchTemplatePlacementOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *string { return v.GroupName }).(pulumi.StringPtrOutput)
}

// The ID of the Dedicated Host for the instance.
func (o LaunchTemplatePlacementOutput) HostId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *string { return v.HostId }).(pulumi.StringPtrOutput)
}

// Reserved for future use.
func (o LaunchTemplatePlacementOutput) SpreadDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *string { return v.SpreadDomain }).(pulumi.StringPtrOutput)
}

// The tenancy of the instance (if the instance is running in a VPC). Can be `default`, `dedicated`, or `host`.
func (o LaunchTemplatePlacementOutput) Tenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *string { return v.Tenancy }).(pulumi.StringPtrOutput)
}

type LaunchTemplatePlacementPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplatePlacementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplatePlacement)(nil)).Elem()
}

func (o LaunchTemplatePlacementPtrOutput) ToLaunchTemplatePlacementPtrOutput() LaunchTemplatePlacementPtrOutput {
	return o
}

func (o LaunchTemplatePlacementPtrOutput) ToLaunchTemplatePlacementPtrOutputWithContext(ctx context.Context) LaunchTemplatePlacementPtrOutput {
	return o
}

func (o LaunchTemplatePlacementPtrOutput) Elem() LaunchTemplatePlacementOutput {
	return o.ApplyT(func(v *LaunchTemplatePlacement) LaunchTemplatePlacement { return *v }).(LaunchTemplatePlacementOutput)
}

// The affinity setting for an instance on a Dedicated Host.
func (o LaunchTemplatePlacementPtrOutput) Affinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *string { return v.Affinity }).(pulumi.StringPtrOutput)
}

// The Availability Zone for the instance.
func (o LaunchTemplatePlacementPtrOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// The name of the placement group for the instance.
func (o LaunchTemplatePlacementPtrOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *string { return v.GroupName }).(pulumi.StringPtrOutput)
}

// The ID of the Dedicated Host for the instance.
func (o LaunchTemplatePlacementPtrOutput) HostId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *string { return v.HostId }).(pulumi.StringPtrOutput)
}

// Reserved for future use.
func (o LaunchTemplatePlacementPtrOutput) SpreadDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *string { return v.SpreadDomain }).(pulumi.StringPtrOutput)
}

// The tenancy of the instance (if the instance is running in a VPC). Can be `default`, `dedicated`, or `host`.
func (o LaunchTemplatePlacementPtrOutput) Tenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *string { return v.Tenancy }).(pulumi.StringPtrOutput)
}

type LaunchTemplatePlacementArgs struct {
	// The affinity setting for an instance on a Dedicated Host.
	Affinity *string `pulumi:"affinity"`
	// The Availability Zone for the instance.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The name of the placement group for the instance.
	GroupName *string `pulumi:"groupName"`
	// The ID of the Dedicated Host for the instance.
	HostId *string `pulumi:"hostId"`
	// Reserved for future use.
	SpreadDomain *string `pulumi:"spreadDomain"`
	// The tenancy of the instance (if the instance is running in a VPC). Can be `default`, `dedicated`, or `host`.
	Tenancy *string `pulumi:"tenancy"`
}

type LaunchTemplatePlacementArgsInput interface {
	pulumi.Input

	ToLaunchTemplatePlacementArgsOutput() LaunchTemplatePlacementArgsOutput
	ToLaunchTemplatePlacementArgsOutputWithContext(context.Context) LaunchTemplatePlacementArgsOutput
}

type LaunchTemplatePlacementArgsArgs struct {
	// The affinity setting for an instance on a Dedicated Host.
	Affinity pulumi.StringPtrInput `pulumi:"affinity"`
	// The Availability Zone for the instance.
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// The name of the placement group for the instance.
	GroupName pulumi.StringPtrInput `pulumi:"groupName"`
	// The ID of the Dedicated Host for the instance.
	HostId pulumi.StringPtrInput `pulumi:"hostId"`
	// Reserved for future use.
	SpreadDomain pulumi.StringPtrInput `pulumi:"spreadDomain"`
	// The tenancy of the instance (if the instance is running in a VPC). Can be `default`, `dedicated`, or `host`.
	Tenancy pulumi.StringPtrInput `pulumi:"tenancy"`
}

func (LaunchTemplatePlacementArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplatePlacementArgs)(nil)).Elem()
}

func (i LaunchTemplatePlacementArgsArgs) ToLaunchTemplatePlacementArgsOutput() LaunchTemplatePlacementArgsOutput {
	return i.ToLaunchTemplatePlacementArgsOutputWithContext(context.Background())
}

func (i LaunchTemplatePlacementArgsArgs) ToLaunchTemplatePlacementArgsOutputWithContext(ctx context.Context) LaunchTemplatePlacementArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplatePlacementArgsOutput)
}

func (i LaunchTemplatePlacementArgsArgs) ToLaunchTemplatePlacementArgsPtrOutput() LaunchTemplatePlacementArgsPtrOutput {
	return i.ToLaunchTemplatePlacementArgsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplatePlacementArgsArgs) ToLaunchTemplatePlacementArgsPtrOutputWithContext(ctx context.Context) LaunchTemplatePlacementArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplatePlacementArgsOutput).ToLaunchTemplatePlacementArgsPtrOutputWithContext(ctx)
}

type LaunchTemplatePlacementArgsPtrInput interface {
	pulumi.Input

	ToLaunchTemplatePlacementArgsPtrOutput() LaunchTemplatePlacementArgsPtrOutput
	ToLaunchTemplatePlacementArgsPtrOutputWithContext(context.Context) LaunchTemplatePlacementArgsPtrOutput
}

type launchTemplatePlacementArgsPtrType LaunchTemplatePlacementArgsArgs

func LaunchTemplatePlacementArgsPtr(v *LaunchTemplatePlacementArgsArgs) LaunchTemplatePlacementArgsPtrInput {
	return (*launchTemplatePlacementArgsPtrType)(v)
}

func (*launchTemplatePlacementArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplatePlacementArgs)(nil)).Elem()
}

func (i *launchTemplatePlacementArgsPtrType) ToLaunchTemplatePlacementArgsPtrOutput() LaunchTemplatePlacementArgsPtrOutput {
	return i.ToLaunchTemplatePlacementArgsPtrOutputWithContext(context.Background())
}

func (i *launchTemplatePlacementArgsPtrType) ToLaunchTemplatePlacementArgsPtrOutputWithContext(ctx context.Context) LaunchTemplatePlacementArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplatePlacementArgsPtrOutput)
}

type LaunchTemplatePlacementArgsOutput struct{ *pulumi.OutputState }

func (LaunchTemplatePlacementArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplatePlacementArgs)(nil)).Elem()
}

func (o LaunchTemplatePlacementArgsOutput) ToLaunchTemplatePlacementArgsOutput() LaunchTemplatePlacementArgsOutput {
	return o
}

func (o LaunchTemplatePlacementArgsOutput) ToLaunchTemplatePlacementArgsOutputWithContext(ctx context.Context) LaunchTemplatePlacementArgsOutput {
	return o
}

func (o LaunchTemplatePlacementArgsOutput) ToLaunchTemplatePlacementArgsPtrOutput() LaunchTemplatePlacementArgsPtrOutput {
	return o.ToLaunchTemplatePlacementArgsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplatePlacementArgsOutput) ToLaunchTemplatePlacementArgsPtrOutputWithContext(ctx context.Context) LaunchTemplatePlacementArgsPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacementArgs) *LaunchTemplatePlacementArgs {
		return &v
	}).(LaunchTemplatePlacementArgsPtrOutput)
}

// The affinity setting for an instance on a Dedicated Host.
func (o LaunchTemplatePlacementArgsOutput) Affinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacementArgs) *string { return v.Affinity }).(pulumi.StringPtrOutput)
}

// The Availability Zone for the instance.
func (o LaunchTemplatePlacementArgsOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacementArgs) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// The name of the placement group for the instance.
func (o LaunchTemplatePlacementArgsOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacementArgs) *string { return v.GroupName }).(pulumi.StringPtrOutput)
}

// The ID of the Dedicated Host for the instance.
func (o LaunchTemplatePlacementArgsOutput) HostId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacementArgs) *string { return v.HostId }).(pulumi.StringPtrOutput)
}

// Reserved for future use.
func (o LaunchTemplatePlacementArgsOutput) SpreadDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacementArgs) *string { return v.SpreadDomain }).(pulumi.StringPtrOutput)
}

// The tenancy of the instance (if the instance is running in a VPC). Can be `default`, `dedicated`, or `host`.
func (o LaunchTemplatePlacementArgsOutput) Tenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacementArgs) *string { return v.Tenancy }).(pulumi.StringPtrOutput)
}

type LaunchTemplatePlacementArgsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplatePlacementArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplatePlacementArgs)(nil)).Elem()
}

func (o LaunchTemplatePlacementArgsPtrOutput) ToLaunchTemplatePlacementArgsPtrOutput() LaunchTemplatePlacementArgsPtrOutput {
	return o
}

func (o LaunchTemplatePlacementArgsPtrOutput) ToLaunchTemplatePlacementArgsPtrOutputWithContext(ctx context.Context) LaunchTemplatePlacementArgsPtrOutput {
	return o
}

func (o LaunchTemplatePlacementArgsPtrOutput) Elem() LaunchTemplatePlacementArgsOutput {
	return o.ApplyT(func(v *LaunchTemplatePlacementArgs) LaunchTemplatePlacementArgs { return *v }).(LaunchTemplatePlacementArgsOutput)
}

// The affinity setting for an instance on a Dedicated Host.
func (o LaunchTemplatePlacementArgsPtrOutput) Affinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacementArgs) *string { return v.Affinity }).(pulumi.StringPtrOutput)
}

// The Availability Zone for the instance.
func (o LaunchTemplatePlacementArgsPtrOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacementArgs) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// The name of the placement group for the instance.
func (o LaunchTemplatePlacementArgsPtrOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacementArgs) *string { return v.GroupName }).(pulumi.StringPtrOutput)
}

// The ID of the Dedicated Host for the instance.
func (o LaunchTemplatePlacementArgsPtrOutput) HostId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacementArgs) *string { return v.HostId }).(pulumi.StringPtrOutput)
}

// Reserved for future use.
func (o LaunchTemplatePlacementArgsPtrOutput) SpreadDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacementArgs) *string { return v.SpreadDomain }).(pulumi.StringPtrOutput)
}

// The tenancy of the instance (if the instance is running in a VPC). Can be `default`, `dedicated`, or `host`.
func (o LaunchTemplatePlacementArgsPtrOutput) Tenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacementArgs) *string { return v.Tenancy }).(pulumi.StringPtrOutput)
}

type LaunchTemplatePlacementState struct {
	// The affinity setting for an instance on a Dedicated Host.
	Affinity *string `pulumi:"affinity"`
	// The Availability Zone for the instance.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The name of the placement group for the instance.
	GroupName *string `pulumi:"groupName"`
	// The ID of the Dedicated Host for the instance.
	HostId *string `pulumi:"hostId"`
	// Reserved for future use.
	SpreadDomain *string `pulumi:"spreadDomain"`
	// The tenancy of the instance (if the instance is running in a VPC). Can be `default`, `dedicated`, or `host`.
	Tenancy *string `pulumi:"tenancy"`
}

type LaunchTemplatePlacementStateInput interface {
	pulumi.Input

	ToLaunchTemplatePlacementStateOutput() LaunchTemplatePlacementStateOutput
	ToLaunchTemplatePlacementStateOutputWithContext(context.Context) LaunchTemplatePlacementStateOutput
}

type LaunchTemplatePlacementStateArgs struct {
	// The affinity setting for an instance on a Dedicated Host.
	Affinity pulumi.StringPtrInput `pulumi:"affinity"`
	// The Availability Zone for the instance.
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// The name of the placement group for the instance.
	GroupName pulumi.StringPtrInput `pulumi:"groupName"`
	// The ID of the Dedicated Host for the instance.
	HostId pulumi.StringPtrInput `pulumi:"hostId"`
	// Reserved for future use.
	SpreadDomain pulumi.StringPtrInput `pulumi:"spreadDomain"`
	// The tenancy of the instance (if the instance is running in a VPC). Can be `default`, `dedicated`, or `host`.
	Tenancy pulumi.StringPtrInput `pulumi:"tenancy"`
}

func (LaunchTemplatePlacementStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplatePlacementState)(nil)).Elem()
}

func (i LaunchTemplatePlacementStateArgs) ToLaunchTemplatePlacementStateOutput() LaunchTemplatePlacementStateOutput {
	return i.ToLaunchTemplatePlacementStateOutputWithContext(context.Background())
}

func (i LaunchTemplatePlacementStateArgs) ToLaunchTemplatePlacementStateOutputWithContext(ctx context.Context) LaunchTemplatePlacementStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplatePlacementStateOutput)
}

type LaunchTemplatePlacementStateOutput struct{ *pulumi.OutputState }

func (LaunchTemplatePlacementStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplatePlacementState)(nil)).Elem()
}

func (o LaunchTemplatePlacementStateOutput) ToLaunchTemplatePlacementStateOutput() LaunchTemplatePlacementStateOutput {
	return o
}

func (o LaunchTemplatePlacementStateOutput) ToLaunchTemplatePlacementStateOutputWithContext(ctx context.Context) LaunchTemplatePlacementStateOutput {
	return o
}

// The affinity setting for an instance on a Dedicated Host.
func (o LaunchTemplatePlacementStateOutput) Affinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacementState) *string { return v.Affinity }).(pulumi.StringPtrOutput)
}

// The Availability Zone for the instance.
func (o LaunchTemplatePlacementStateOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacementState) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// The name of the placement group for the instance.
func (o LaunchTemplatePlacementStateOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacementState) *string { return v.GroupName }).(pulumi.StringPtrOutput)
}

// The ID of the Dedicated Host for the instance.
func (o LaunchTemplatePlacementStateOutput) HostId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacementState) *string { return v.HostId }).(pulumi.StringPtrOutput)
}

// Reserved for future use.
func (o LaunchTemplatePlacementStateOutput) SpreadDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacementState) *string { return v.SpreadDomain }).(pulumi.StringPtrOutput)
}

// The tenancy of the instance (if the instance is running in a VPC). Can be `default`, `dedicated`, or `host`.
func (o LaunchTemplatePlacementStateOutput) Tenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacementState) *string { return v.Tenancy }).(pulumi.StringPtrOutput)
}

type LaunchTemplateTagSpecification struct {
	// The type of resource to tag. Valid values are `instance` and `volume`.
	ResourceType *string `pulumi:"resourceType"`
	// A mapping of tags to assign to the resource.
	Tags map[string]interface{} `pulumi:"tags"`
}

type LaunchTemplateTagSpecificationInput interface {
	pulumi.Input

	ToLaunchTemplateTagSpecificationOutput() LaunchTemplateTagSpecificationOutput
	ToLaunchTemplateTagSpecificationOutputWithContext(context.Context) LaunchTemplateTagSpecificationOutput
}

type LaunchTemplateTagSpecificationArgs struct {
	// The type of resource to tag. Valid values are `instance` and `volume`.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
}

func (LaunchTemplateTagSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateTagSpecification)(nil)).Elem()
}

func (i LaunchTemplateTagSpecificationArgs) ToLaunchTemplateTagSpecificationOutput() LaunchTemplateTagSpecificationOutput {
	return i.ToLaunchTemplateTagSpecificationOutputWithContext(context.Background())
}

func (i LaunchTemplateTagSpecificationArgs) ToLaunchTemplateTagSpecificationOutputWithContext(ctx context.Context) LaunchTemplateTagSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateTagSpecificationOutput)
}

type LaunchTemplateTagSpecificationArrayInput interface {
	pulumi.Input

	ToLaunchTemplateTagSpecificationArrayOutput() LaunchTemplateTagSpecificationArrayOutput
	ToLaunchTemplateTagSpecificationArrayOutputWithContext(context.Context) LaunchTemplateTagSpecificationArrayOutput
}

type LaunchTemplateTagSpecificationArray []LaunchTemplateTagSpecificationInput

func (LaunchTemplateTagSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateTagSpecification)(nil)).Elem()
}

func (i LaunchTemplateTagSpecificationArray) ToLaunchTemplateTagSpecificationArrayOutput() LaunchTemplateTagSpecificationArrayOutput {
	return i.ToLaunchTemplateTagSpecificationArrayOutputWithContext(context.Background())
}

func (i LaunchTemplateTagSpecificationArray) ToLaunchTemplateTagSpecificationArrayOutputWithContext(ctx context.Context) LaunchTemplateTagSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateTagSpecificationArrayOutput)
}

type LaunchTemplateTagSpecificationOutput struct{ *pulumi.OutputState }

func (LaunchTemplateTagSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateTagSpecification)(nil)).Elem()
}

func (o LaunchTemplateTagSpecificationOutput) ToLaunchTemplateTagSpecificationOutput() LaunchTemplateTagSpecificationOutput {
	return o
}

func (o LaunchTemplateTagSpecificationOutput) ToLaunchTemplateTagSpecificationOutputWithContext(ctx context.Context) LaunchTemplateTagSpecificationOutput {
	return o
}

// The type of resource to tag. Valid values are `instance` and `volume`.
func (o LaunchTemplateTagSpecificationOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateTagSpecification) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// A mapping of tags to assign to the resource.
func (o LaunchTemplateTagSpecificationOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v LaunchTemplateTagSpecification) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

type LaunchTemplateTagSpecificationArrayOutput struct{ *pulumi.OutputState }

func (LaunchTemplateTagSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateTagSpecification)(nil)).Elem()
}

func (o LaunchTemplateTagSpecificationArrayOutput) ToLaunchTemplateTagSpecificationArrayOutput() LaunchTemplateTagSpecificationArrayOutput {
	return o
}

func (o LaunchTemplateTagSpecificationArrayOutput) ToLaunchTemplateTagSpecificationArrayOutputWithContext(ctx context.Context) LaunchTemplateTagSpecificationArrayOutput {
	return o
}

func (o LaunchTemplateTagSpecificationArrayOutput) Index(i pulumi.IntInput) LaunchTemplateTagSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchTemplateTagSpecification {
		return vs[0].([]LaunchTemplateTagSpecification)[vs[1].(int)]
	}).(LaunchTemplateTagSpecificationOutput)
}

type LaunchTemplateTagSpecificationArgs struct {
	// The type of resource to tag. Valid values are `instance` and `volume`.
	ResourceType *string `pulumi:"resourceType"`
	// A mapping of tags to assign to the resource.
	Tags map[string]interface{} `pulumi:"tags"`
}

type LaunchTemplateTagSpecificationArgsInput interface {
	pulumi.Input

	ToLaunchTemplateTagSpecificationArgsOutput() LaunchTemplateTagSpecificationArgsOutput
	ToLaunchTemplateTagSpecificationArgsOutputWithContext(context.Context) LaunchTemplateTagSpecificationArgsOutput
}

type LaunchTemplateTagSpecificationArgsArgs struct {
	// The type of resource to tag. Valid values are `instance` and `volume`.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
}

func (LaunchTemplateTagSpecificationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateTagSpecificationArgs)(nil)).Elem()
}

func (i LaunchTemplateTagSpecificationArgsArgs) ToLaunchTemplateTagSpecificationArgsOutput() LaunchTemplateTagSpecificationArgsOutput {
	return i.ToLaunchTemplateTagSpecificationArgsOutputWithContext(context.Background())
}

func (i LaunchTemplateTagSpecificationArgsArgs) ToLaunchTemplateTagSpecificationArgsOutputWithContext(ctx context.Context) LaunchTemplateTagSpecificationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateTagSpecificationArgsOutput)
}

type LaunchTemplateTagSpecificationArgsArrayInput interface {
	pulumi.Input

	ToLaunchTemplateTagSpecificationArgsArrayOutput() LaunchTemplateTagSpecificationArgsArrayOutput
	ToLaunchTemplateTagSpecificationArgsArrayOutputWithContext(context.Context) LaunchTemplateTagSpecificationArgsArrayOutput
}

type LaunchTemplateTagSpecificationArgsArray []LaunchTemplateTagSpecificationArgsInput

func (LaunchTemplateTagSpecificationArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateTagSpecificationArgs)(nil)).Elem()
}

func (i LaunchTemplateTagSpecificationArgsArray) ToLaunchTemplateTagSpecificationArgsArrayOutput() LaunchTemplateTagSpecificationArgsArrayOutput {
	return i.ToLaunchTemplateTagSpecificationArgsArrayOutputWithContext(context.Background())
}

func (i LaunchTemplateTagSpecificationArgsArray) ToLaunchTemplateTagSpecificationArgsArrayOutputWithContext(ctx context.Context) LaunchTemplateTagSpecificationArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateTagSpecificationArgsArrayOutput)
}

type LaunchTemplateTagSpecificationArgsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateTagSpecificationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateTagSpecificationArgs)(nil)).Elem()
}

func (o LaunchTemplateTagSpecificationArgsOutput) ToLaunchTemplateTagSpecificationArgsOutput() LaunchTemplateTagSpecificationArgsOutput {
	return o
}

func (o LaunchTemplateTagSpecificationArgsOutput) ToLaunchTemplateTagSpecificationArgsOutputWithContext(ctx context.Context) LaunchTemplateTagSpecificationArgsOutput {
	return o
}

// The type of resource to tag. Valid values are `instance` and `volume`.
func (o LaunchTemplateTagSpecificationArgsOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateTagSpecificationArgs) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// A mapping of tags to assign to the resource.
func (o LaunchTemplateTagSpecificationArgsOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v LaunchTemplateTagSpecificationArgs) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

type LaunchTemplateTagSpecificationArgsArrayOutput struct{ *pulumi.OutputState }

func (LaunchTemplateTagSpecificationArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateTagSpecificationArgs)(nil)).Elem()
}

func (o LaunchTemplateTagSpecificationArgsArrayOutput) ToLaunchTemplateTagSpecificationArgsArrayOutput() LaunchTemplateTagSpecificationArgsArrayOutput {
	return o
}

func (o LaunchTemplateTagSpecificationArgsArrayOutput) ToLaunchTemplateTagSpecificationArgsArrayOutputWithContext(ctx context.Context) LaunchTemplateTagSpecificationArgsArrayOutput {
	return o
}

func (o LaunchTemplateTagSpecificationArgsArrayOutput) Index(i pulumi.IntInput) LaunchTemplateTagSpecificationArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchTemplateTagSpecificationArgs {
		return vs[0].([]LaunchTemplateTagSpecificationArgs)[vs[1].(int)]
	}).(LaunchTemplateTagSpecificationArgsOutput)
}

type LaunchTemplateTagSpecificationState struct {
	// The type of resource to tag. Valid values are `instance` and `volume`.
	ResourceType *string `pulumi:"resourceType"`
	// A mapping of tags to assign to the resource.
	Tags map[string]interface{} `pulumi:"tags"`
}

type LaunchTemplateTagSpecificationStateInput interface {
	pulumi.Input

	ToLaunchTemplateTagSpecificationStateOutput() LaunchTemplateTagSpecificationStateOutput
	ToLaunchTemplateTagSpecificationStateOutputWithContext(context.Context) LaunchTemplateTagSpecificationStateOutput
}

type LaunchTemplateTagSpecificationStateArgs struct {
	// The type of resource to tag. Valid values are `instance` and `volume`.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
}

func (LaunchTemplateTagSpecificationStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateTagSpecificationState)(nil)).Elem()
}

func (i LaunchTemplateTagSpecificationStateArgs) ToLaunchTemplateTagSpecificationStateOutput() LaunchTemplateTagSpecificationStateOutput {
	return i.ToLaunchTemplateTagSpecificationStateOutputWithContext(context.Background())
}

func (i LaunchTemplateTagSpecificationStateArgs) ToLaunchTemplateTagSpecificationStateOutputWithContext(ctx context.Context) LaunchTemplateTagSpecificationStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateTagSpecificationStateOutput)
}

type LaunchTemplateTagSpecificationStateArrayInput interface {
	pulumi.Input

	ToLaunchTemplateTagSpecificationStateArrayOutput() LaunchTemplateTagSpecificationStateArrayOutput
	ToLaunchTemplateTagSpecificationStateArrayOutputWithContext(context.Context) LaunchTemplateTagSpecificationStateArrayOutput
}

type LaunchTemplateTagSpecificationStateArray []LaunchTemplateTagSpecificationStateInput

func (LaunchTemplateTagSpecificationStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateTagSpecificationState)(nil)).Elem()
}

func (i LaunchTemplateTagSpecificationStateArray) ToLaunchTemplateTagSpecificationStateArrayOutput() LaunchTemplateTagSpecificationStateArrayOutput {
	return i.ToLaunchTemplateTagSpecificationStateArrayOutputWithContext(context.Background())
}

func (i LaunchTemplateTagSpecificationStateArray) ToLaunchTemplateTagSpecificationStateArrayOutputWithContext(ctx context.Context) LaunchTemplateTagSpecificationStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateTagSpecificationStateArrayOutput)
}

type LaunchTemplateTagSpecificationStateOutput struct{ *pulumi.OutputState }

func (LaunchTemplateTagSpecificationStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateTagSpecificationState)(nil)).Elem()
}

func (o LaunchTemplateTagSpecificationStateOutput) ToLaunchTemplateTagSpecificationStateOutput() LaunchTemplateTagSpecificationStateOutput {
	return o
}

func (o LaunchTemplateTagSpecificationStateOutput) ToLaunchTemplateTagSpecificationStateOutputWithContext(ctx context.Context) LaunchTemplateTagSpecificationStateOutput {
	return o
}

// The type of resource to tag. Valid values are `instance` and `volume`.
func (o LaunchTemplateTagSpecificationStateOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateTagSpecificationState) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// A mapping of tags to assign to the resource.
func (o LaunchTemplateTagSpecificationStateOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v LaunchTemplateTagSpecificationState) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

type LaunchTemplateTagSpecificationStateArrayOutput struct{ *pulumi.OutputState }

func (LaunchTemplateTagSpecificationStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateTagSpecificationState)(nil)).Elem()
}

func (o LaunchTemplateTagSpecificationStateArrayOutput) ToLaunchTemplateTagSpecificationStateArrayOutput() LaunchTemplateTagSpecificationStateArrayOutput {
	return o
}

func (o LaunchTemplateTagSpecificationStateArrayOutput) ToLaunchTemplateTagSpecificationStateArrayOutputWithContext(ctx context.Context) LaunchTemplateTagSpecificationStateArrayOutput {
	return o
}

func (o LaunchTemplateTagSpecificationStateArrayOutput) Index(i pulumi.IntInput) LaunchTemplateTagSpecificationStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchTemplateTagSpecificationState {
		return vs[0].([]LaunchTemplateTagSpecificationState)[vs[1].(int)]
	}).(LaunchTemplateTagSpecificationStateOutput)
}

type NetworkAclEgress struct {
	// The action to take.
	Action string `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort int `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode *int `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType *int `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol string `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo int `pulumi:"ruleNo"`
	// The to port to match.
	ToPort int `pulumi:"toPort"`
}

type NetworkAclEgressInput interface {
	pulumi.Input

	ToNetworkAclEgressOutput() NetworkAclEgressOutput
	ToNetworkAclEgressOutputWithContext(context.Context) NetworkAclEgressOutput
}

type NetworkAclEgressArgs struct {
	// The action to take.
	Action pulumi.StringInput `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode pulumi.IntPtrInput `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType pulumi.IntPtrInput `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo pulumi.IntInput `pulumi:"ruleNo"`
	// The to port to match.
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (NetworkAclEgressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclEgress)(nil)).Elem()
}

func (i NetworkAclEgressArgs) ToNetworkAclEgressOutput() NetworkAclEgressOutput {
	return i.ToNetworkAclEgressOutputWithContext(context.Background())
}

func (i NetworkAclEgressArgs) ToNetworkAclEgressOutputWithContext(ctx context.Context) NetworkAclEgressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclEgressOutput)
}

type NetworkAclEgressArrayInput interface {
	pulumi.Input

	ToNetworkAclEgressArrayOutput() NetworkAclEgressArrayOutput
	ToNetworkAclEgressArrayOutputWithContext(context.Context) NetworkAclEgressArrayOutput
}

type NetworkAclEgressArray []NetworkAclEgressInput

func (NetworkAclEgressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclEgress)(nil)).Elem()
}

func (i NetworkAclEgressArray) ToNetworkAclEgressArrayOutput() NetworkAclEgressArrayOutput {
	return i.ToNetworkAclEgressArrayOutputWithContext(context.Background())
}

func (i NetworkAclEgressArray) ToNetworkAclEgressArrayOutputWithContext(ctx context.Context) NetworkAclEgressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclEgressArrayOutput)
}

type NetworkAclEgressOutput struct{ *pulumi.OutputState }

func (NetworkAclEgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclEgress)(nil)).Elem()
}

func (o NetworkAclEgressOutput) ToNetworkAclEgressOutput() NetworkAclEgressOutput {
	return o
}

func (o NetworkAclEgressOutput) ToNetworkAclEgressOutputWithContext(ctx context.Context) NetworkAclEgressOutput {
	return o
}

// The action to take.
func (o NetworkAclEgressOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclEgress) string { return v.Action }).(pulumi.StringOutput)
}

// The CIDR block to match. This must be a
// valid network mask.
func (o NetworkAclEgressOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEgress) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// The from port to match.
func (o NetworkAclEgressOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclEgress) int { return v.FromPort }).(pulumi.IntOutput)
}

// The ICMP type code to be used. Default 0.
func (o NetworkAclEgressOutput) IcmpCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAclEgress) *int { return v.IcmpCode }).(pulumi.IntPtrOutput)
}

// The ICMP type to be used. Default 0.
func (o NetworkAclEgressOutput) IcmpType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAclEgress) *int { return v.IcmpType }).(pulumi.IntPtrOutput)
}

// The IPv6 CIDR block.
func (o NetworkAclEgressOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEgress) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// The protocol to match. If using the -1 'all'
// protocol, you must specify a from and to port of 0.
func (o NetworkAclEgressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclEgress) string { return v.Protocol }).(pulumi.StringOutput)
}

// The rule number. Used for ordering.
func (o NetworkAclEgressOutput) RuleNo() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclEgress) int { return v.RuleNo }).(pulumi.IntOutput)
}

// The to port to match.
func (o NetworkAclEgressOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclEgress) int { return v.ToPort }).(pulumi.IntOutput)
}

type NetworkAclEgressArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclEgressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclEgress)(nil)).Elem()
}

func (o NetworkAclEgressArrayOutput) ToNetworkAclEgressArrayOutput() NetworkAclEgressArrayOutput {
	return o
}

func (o NetworkAclEgressArrayOutput) ToNetworkAclEgressArrayOutputWithContext(ctx context.Context) NetworkAclEgressArrayOutput {
	return o
}

func (o NetworkAclEgressArrayOutput) Index(i pulumi.IntInput) NetworkAclEgressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclEgress {
		return vs[0].([]NetworkAclEgress)[vs[1].(int)]
	}).(NetworkAclEgressOutput)
}

type NetworkAclEgressArgs struct {
	// The action to take.
	Action string `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort int `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode *int `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType *int `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol string `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo int `pulumi:"ruleNo"`
	// The to port to match.
	ToPort int `pulumi:"toPort"`
}

type NetworkAclEgressArgsInput interface {
	pulumi.Input

	ToNetworkAclEgressArgsOutput() NetworkAclEgressArgsOutput
	ToNetworkAclEgressArgsOutputWithContext(context.Context) NetworkAclEgressArgsOutput
}

type NetworkAclEgressArgsArgs struct {
	// The action to take.
	Action pulumi.StringInput `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode pulumi.IntPtrInput `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType pulumi.IntPtrInput `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo pulumi.IntInput `pulumi:"ruleNo"`
	// The to port to match.
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (NetworkAclEgressArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclEgressArgs)(nil)).Elem()
}

func (i NetworkAclEgressArgsArgs) ToNetworkAclEgressArgsOutput() NetworkAclEgressArgsOutput {
	return i.ToNetworkAclEgressArgsOutputWithContext(context.Background())
}

func (i NetworkAclEgressArgsArgs) ToNetworkAclEgressArgsOutputWithContext(ctx context.Context) NetworkAclEgressArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclEgressArgsOutput)
}

type NetworkAclEgressArgsArrayInput interface {
	pulumi.Input

	ToNetworkAclEgressArgsArrayOutput() NetworkAclEgressArgsArrayOutput
	ToNetworkAclEgressArgsArrayOutputWithContext(context.Context) NetworkAclEgressArgsArrayOutput
}

type NetworkAclEgressArgsArray []NetworkAclEgressArgsInput

func (NetworkAclEgressArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclEgressArgs)(nil)).Elem()
}

func (i NetworkAclEgressArgsArray) ToNetworkAclEgressArgsArrayOutput() NetworkAclEgressArgsArrayOutput {
	return i.ToNetworkAclEgressArgsArrayOutputWithContext(context.Background())
}

func (i NetworkAclEgressArgsArray) ToNetworkAclEgressArgsArrayOutputWithContext(ctx context.Context) NetworkAclEgressArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclEgressArgsArrayOutput)
}

type NetworkAclEgressArgsOutput struct{ *pulumi.OutputState }

func (NetworkAclEgressArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclEgressArgs)(nil)).Elem()
}

func (o NetworkAclEgressArgsOutput) ToNetworkAclEgressArgsOutput() NetworkAclEgressArgsOutput {
	return o
}

func (o NetworkAclEgressArgsOutput) ToNetworkAclEgressArgsOutputWithContext(ctx context.Context) NetworkAclEgressArgsOutput {
	return o
}

// The action to take.
func (o NetworkAclEgressArgsOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclEgressArgs) string { return v.Action }).(pulumi.StringOutput)
}

// The CIDR block to match. This must be a
// valid network mask.
func (o NetworkAclEgressArgsOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEgressArgs) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// The from port to match.
func (o NetworkAclEgressArgsOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclEgressArgs) int { return v.FromPort }).(pulumi.IntOutput)
}

// The ICMP type code to be used. Default 0.
func (o NetworkAclEgressArgsOutput) IcmpCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAclEgressArgs) *int { return v.IcmpCode }).(pulumi.IntPtrOutput)
}

// The ICMP type to be used. Default 0.
func (o NetworkAclEgressArgsOutput) IcmpType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAclEgressArgs) *int { return v.IcmpType }).(pulumi.IntPtrOutput)
}

// The IPv6 CIDR block.
func (o NetworkAclEgressArgsOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEgressArgs) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// The protocol to match. If using the -1 'all'
// protocol, you must specify a from and to port of 0.
func (o NetworkAclEgressArgsOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclEgressArgs) string { return v.Protocol }).(pulumi.StringOutput)
}

// The rule number. Used for ordering.
func (o NetworkAclEgressArgsOutput) RuleNo() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclEgressArgs) int { return v.RuleNo }).(pulumi.IntOutput)
}

// The to port to match.
func (o NetworkAclEgressArgsOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclEgressArgs) int { return v.ToPort }).(pulumi.IntOutput)
}

type NetworkAclEgressArgsArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclEgressArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclEgressArgs)(nil)).Elem()
}

func (o NetworkAclEgressArgsArrayOutput) ToNetworkAclEgressArgsArrayOutput() NetworkAclEgressArgsArrayOutput {
	return o
}

func (o NetworkAclEgressArgsArrayOutput) ToNetworkAclEgressArgsArrayOutputWithContext(ctx context.Context) NetworkAclEgressArgsArrayOutput {
	return o
}

func (o NetworkAclEgressArgsArrayOutput) Index(i pulumi.IntInput) NetworkAclEgressArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclEgressArgs {
		return vs[0].([]NetworkAclEgressArgs)[vs[1].(int)]
	}).(NetworkAclEgressArgsOutput)
}

type NetworkAclEgressState struct {
	// The action to take.
	Action string `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort int `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode *int `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType *int `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol string `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo int `pulumi:"ruleNo"`
	// The to port to match.
	ToPort int `pulumi:"toPort"`
}

type NetworkAclEgressStateInput interface {
	pulumi.Input

	ToNetworkAclEgressStateOutput() NetworkAclEgressStateOutput
	ToNetworkAclEgressStateOutputWithContext(context.Context) NetworkAclEgressStateOutput
}

type NetworkAclEgressStateArgs struct {
	// The action to take.
	Action pulumi.StringInput `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode pulumi.IntPtrInput `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType pulumi.IntPtrInput `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo pulumi.IntInput `pulumi:"ruleNo"`
	// The to port to match.
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (NetworkAclEgressStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclEgressState)(nil)).Elem()
}

func (i NetworkAclEgressStateArgs) ToNetworkAclEgressStateOutput() NetworkAclEgressStateOutput {
	return i.ToNetworkAclEgressStateOutputWithContext(context.Background())
}

func (i NetworkAclEgressStateArgs) ToNetworkAclEgressStateOutputWithContext(ctx context.Context) NetworkAclEgressStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclEgressStateOutput)
}

type NetworkAclEgressStateArrayInput interface {
	pulumi.Input

	ToNetworkAclEgressStateArrayOutput() NetworkAclEgressStateArrayOutput
	ToNetworkAclEgressStateArrayOutputWithContext(context.Context) NetworkAclEgressStateArrayOutput
}

type NetworkAclEgressStateArray []NetworkAclEgressStateInput

func (NetworkAclEgressStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclEgressState)(nil)).Elem()
}

func (i NetworkAclEgressStateArray) ToNetworkAclEgressStateArrayOutput() NetworkAclEgressStateArrayOutput {
	return i.ToNetworkAclEgressStateArrayOutputWithContext(context.Background())
}

func (i NetworkAclEgressStateArray) ToNetworkAclEgressStateArrayOutputWithContext(ctx context.Context) NetworkAclEgressStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclEgressStateArrayOutput)
}

type NetworkAclEgressStateOutput struct{ *pulumi.OutputState }

func (NetworkAclEgressStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclEgressState)(nil)).Elem()
}

func (o NetworkAclEgressStateOutput) ToNetworkAclEgressStateOutput() NetworkAclEgressStateOutput {
	return o
}

func (o NetworkAclEgressStateOutput) ToNetworkAclEgressStateOutputWithContext(ctx context.Context) NetworkAclEgressStateOutput {
	return o
}

// The action to take.
func (o NetworkAclEgressStateOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclEgressState) string { return v.Action }).(pulumi.StringOutput)
}

// The CIDR block to match. This must be a
// valid network mask.
func (o NetworkAclEgressStateOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEgressState) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// The from port to match.
func (o NetworkAclEgressStateOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclEgressState) int { return v.FromPort }).(pulumi.IntOutput)
}

// The ICMP type code to be used. Default 0.
func (o NetworkAclEgressStateOutput) IcmpCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAclEgressState) *int { return v.IcmpCode }).(pulumi.IntPtrOutput)
}

// The ICMP type to be used. Default 0.
func (o NetworkAclEgressStateOutput) IcmpType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAclEgressState) *int { return v.IcmpType }).(pulumi.IntPtrOutput)
}

// The IPv6 CIDR block.
func (o NetworkAclEgressStateOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEgressState) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// The protocol to match. If using the -1 'all'
// protocol, you must specify a from and to port of 0.
func (o NetworkAclEgressStateOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclEgressState) string { return v.Protocol }).(pulumi.StringOutput)
}

// The rule number. Used for ordering.
func (o NetworkAclEgressStateOutput) RuleNo() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclEgressState) int { return v.RuleNo }).(pulumi.IntOutput)
}

// The to port to match.
func (o NetworkAclEgressStateOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclEgressState) int { return v.ToPort }).(pulumi.IntOutput)
}

type NetworkAclEgressStateArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclEgressStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclEgressState)(nil)).Elem()
}

func (o NetworkAclEgressStateArrayOutput) ToNetworkAclEgressStateArrayOutput() NetworkAclEgressStateArrayOutput {
	return o
}

func (o NetworkAclEgressStateArrayOutput) ToNetworkAclEgressStateArrayOutputWithContext(ctx context.Context) NetworkAclEgressStateArrayOutput {
	return o
}

func (o NetworkAclEgressStateArrayOutput) Index(i pulumi.IntInput) NetworkAclEgressStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclEgressState {
		return vs[0].([]NetworkAclEgressState)[vs[1].(int)]
	}).(NetworkAclEgressStateOutput)
}

type NetworkAclIngress struct {
	// The action to take.
	Action string `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort int `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode *int `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType *int `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol string `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo int `pulumi:"ruleNo"`
	// The to port to match.
	ToPort int `pulumi:"toPort"`
}

type NetworkAclIngressInput interface {
	pulumi.Input

	ToNetworkAclIngressOutput() NetworkAclIngressOutput
	ToNetworkAclIngressOutputWithContext(context.Context) NetworkAclIngressOutput
}

type NetworkAclIngressArgs struct {
	// The action to take.
	Action pulumi.StringInput `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode pulumi.IntPtrInput `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType pulumi.IntPtrInput `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo pulumi.IntInput `pulumi:"ruleNo"`
	// The to port to match.
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (NetworkAclIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclIngress)(nil)).Elem()
}

func (i NetworkAclIngressArgs) ToNetworkAclIngressOutput() NetworkAclIngressOutput {
	return i.ToNetworkAclIngressOutputWithContext(context.Background())
}

func (i NetworkAclIngressArgs) ToNetworkAclIngressOutputWithContext(ctx context.Context) NetworkAclIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclIngressOutput)
}

type NetworkAclIngressArrayInput interface {
	pulumi.Input

	ToNetworkAclIngressArrayOutput() NetworkAclIngressArrayOutput
	ToNetworkAclIngressArrayOutputWithContext(context.Context) NetworkAclIngressArrayOutput
}

type NetworkAclIngressArray []NetworkAclIngressInput

func (NetworkAclIngressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclIngress)(nil)).Elem()
}

func (i NetworkAclIngressArray) ToNetworkAclIngressArrayOutput() NetworkAclIngressArrayOutput {
	return i.ToNetworkAclIngressArrayOutputWithContext(context.Background())
}

func (i NetworkAclIngressArray) ToNetworkAclIngressArrayOutputWithContext(ctx context.Context) NetworkAclIngressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclIngressArrayOutput)
}

type NetworkAclIngressOutput struct{ *pulumi.OutputState }

func (NetworkAclIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclIngress)(nil)).Elem()
}

func (o NetworkAclIngressOutput) ToNetworkAclIngressOutput() NetworkAclIngressOutput {
	return o
}

func (o NetworkAclIngressOutput) ToNetworkAclIngressOutputWithContext(ctx context.Context) NetworkAclIngressOutput {
	return o
}

// The action to take.
func (o NetworkAclIngressOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclIngress) string { return v.Action }).(pulumi.StringOutput)
}

// The CIDR block to match. This must be a
// valid network mask.
func (o NetworkAclIngressOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclIngress) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// The from port to match.
func (o NetworkAclIngressOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclIngress) int { return v.FromPort }).(pulumi.IntOutput)
}

// The ICMP type code to be used. Default 0.
func (o NetworkAclIngressOutput) IcmpCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAclIngress) *int { return v.IcmpCode }).(pulumi.IntPtrOutput)
}

// The ICMP type to be used. Default 0.
func (o NetworkAclIngressOutput) IcmpType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAclIngress) *int { return v.IcmpType }).(pulumi.IntPtrOutput)
}

// The IPv6 CIDR block.
func (o NetworkAclIngressOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclIngress) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// The protocol to match. If using the -1 'all'
// protocol, you must specify a from and to port of 0.
func (o NetworkAclIngressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclIngress) string { return v.Protocol }).(pulumi.StringOutput)
}

// The rule number. Used for ordering.
func (o NetworkAclIngressOutput) RuleNo() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclIngress) int { return v.RuleNo }).(pulumi.IntOutput)
}

// The to port to match.
func (o NetworkAclIngressOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclIngress) int { return v.ToPort }).(pulumi.IntOutput)
}

type NetworkAclIngressArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclIngressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclIngress)(nil)).Elem()
}

func (o NetworkAclIngressArrayOutput) ToNetworkAclIngressArrayOutput() NetworkAclIngressArrayOutput {
	return o
}

func (o NetworkAclIngressArrayOutput) ToNetworkAclIngressArrayOutputWithContext(ctx context.Context) NetworkAclIngressArrayOutput {
	return o
}

func (o NetworkAclIngressArrayOutput) Index(i pulumi.IntInput) NetworkAclIngressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclIngress {
		return vs[0].([]NetworkAclIngress)[vs[1].(int)]
	}).(NetworkAclIngressOutput)
}

type NetworkAclIngressArgs struct {
	// The action to take.
	Action string `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort int `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode *int `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType *int `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol string `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo int `pulumi:"ruleNo"`
	// The to port to match.
	ToPort int `pulumi:"toPort"`
}

type NetworkAclIngressArgsInput interface {
	pulumi.Input

	ToNetworkAclIngressArgsOutput() NetworkAclIngressArgsOutput
	ToNetworkAclIngressArgsOutputWithContext(context.Context) NetworkAclIngressArgsOutput
}

type NetworkAclIngressArgsArgs struct {
	// The action to take.
	Action pulumi.StringInput `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode pulumi.IntPtrInput `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType pulumi.IntPtrInput `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo pulumi.IntInput `pulumi:"ruleNo"`
	// The to port to match.
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (NetworkAclIngressArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclIngressArgs)(nil)).Elem()
}

func (i NetworkAclIngressArgsArgs) ToNetworkAclIngressArgsOutput() NetworkAclIngressArgsOutput {
	return i.ToNetworkAclIngressArgsOutputWithContext(context.Background())
}

func (i NetworkAclIngressArgsArgs) ToNetworkAclIngressArgsOutputWithContext(ctx context.Context) NetworkAclIngressArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclIngressArgsOutput)
}

type NetworkAclIngressArgsArrayInput interface {
	pulumi.Input

	ToNetworkAclIngressArgsArrayOutput() NetworkAclIngressArgsArrayOutput
	ToNetworkAclIngressArgsArrayOutputWithContext(context.Context) NetworkAclIngressArgsArrayOutput
}

type NetworkAclIngressArgsArray []NetworkAclIngressArgsInput

func (NetworkAclIngressArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclIngressArgs)(nil)).Elem()
}

func (i NetworkAclIngressArgsArray) ToNetworkAclIngressArgsArrayOutput() NetworkAclIngressArgsArrayOutput {
	return i.ToNetworkAclIngressArgsArrayOutputWithContext(context.Background())
}

func (i NetworkAclIngressArgsArray) ToNetworkAclIngressArgsArrayOutputWithContext(ctx context.Context) NetworkAclIngressArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclIngressArgsArrayOutput)
}

type NetworkAclIngressArgsOutput struct{ *pulumi.OutputState }

func (NetworkAclIngressArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclIngressArgs)(nil)).Elem()
}

func (o NetworkAclIngressArgsOutput) ToNetworkAclIngressArgsOutput() NetworkAclIngressArgsOutput {
	return o
}

func (o NetworkAclIngressArgsOutput) ToNetworkAclIngressArgsOutputWithContext(ctx context.Context) NetworkAclIngressArgsOutput {
	return o
}

// The action to take.
func (o NetworkAclIngressArgsOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclIngressArgs) string { return v.Action }).(pulumi.StringOutput)
}

// The CIDR block to match. This must be a
// valid network mask.
func (o NetworkAclIngressArgsOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclIngressArgs) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// The from port to match.
func (o NetworkAclIngressArgsOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclIngressArgs) int { return v.FromPort }).(pulumi.IntOutput)
}

// The ICMP type code to be used. Default 0.
func (o NetworkAclIngressArgsOutput) IcmpCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAclIngressArgs) *int { return v.IcmpCode }).(pulumi.IntPtrOutput)
}

// The ICMP type to be used. Default 0.
func (o NetworkAclIngressArgsOutput) IcmpType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAclIngressArgs) *int { return v.IcmpType }).(pulumi.IntPtrOutput)
}

// The IPv6 CIDR block.
func (o NetworkAclIngressArgsOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclIngressArgs) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// The protocol to match. If using the -1 'all'
// protocol, you must specify a from and to port of 0.
func (o NetworkAclIngressArgsOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclIngressArgs) string { return v.Protocol }).(pulumi.StringOutput)
}

// The rule number. Used for ordering.
func (o NetworkAclIngressArgsOutput) RuleNo() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclIngressArgs) int { return v.RuleNo }).(pulumi.IntOutput)
}

// The to port to match.
func (o NetworkAclIngressArgsOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclIngressArgs) int { return v.ToPort }).(pulumi.IntOutput)
}

type NetworkAclIngressArgsArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclIngressArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclIngressArgs)(nil)).Elem()
}

func (o NetworkAclIngressArgsArrayOutput) ToNetworkAclIngressArgsArrayOutput() NetworkAclIngressArgsArrayOutput {
	return o
}

func (o NetworkAclIngressArgsArrayOutput) ToNetworkAclIngressArgsArrayOutputWithContext(ctx context.Context) NetworkAclIngressArgsArrayOutput {
	return o
}

func (o NetworkAclIngressArgsArrayOutput) Index(i pulumi.IntInput) NetworkAclIngressArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclIngressArgs {
		return vs[0].([]NetworkAclIngressArgs)[vs[1].(int)]
	}).(NetworkAclIngressArgsOutput)
}

type NetworkAclIngressState struct {
	// The action to take.
	Action string `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort int `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode *int `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType *int `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol string `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo int `pulumi:"ruleNo"`
	// The to port to match.
	ToPort int `pulumi:"toPort"`
}

type NetworkAclIngressStateInput interface {
	pulumi.Input

	ToNetworkAclIngressStateOutput() NetworkAclIngressStateOutput
	ToNetworkAclIngressStateOutputWithContext(context.Context) NetworkAclIngressStateOutput
}

type NetworkAclIngressStateArgs struct {
	// The action to take.
	Action pulumi.StringInput `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode pulumi.IntPtrInput `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType pulumi.IntPtrInput `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo pulumi.IntInput `pulumi:"ruleNo"`
	// The to port to match.
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (NetworkAclIngressStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclIngressState)(nil)).Elem()
}

func (i NetworkAclIngressStateArgs) ToNetworkAclIngressStateOutput() NetworkAclIngressStateOutput {
	return i.ToNetworkAclIngressStateOutputWithContext(context.Background())
}

func (i NetworkAclIngressStateArgs) ToNetworkAclIngressStateOutputWithContext(ctx context.Context) NetworkAclIngressStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclIngressStateOutput)
}

type NetworkAclIngressStateArrayInput interface {
	pulumi.Input

	ToNetworkAclIngressStateArrayOutput() NetworkAclIngressStateArrayOutput
	ToNetworkAclIngressStateArrayOutputWithContext(context.Context) NetworkAclIngressStateArrayOutput
}

type NetworkAclIngressStateArray []NetworkAclIngressStateInput

func (NetworkAclIngressStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclIngressState)(nil)).Elem()
}

func (i NetworkAclIngressStateArray) ToNetworkAclIngressStateArrayOutput() NetworkAclIngressStateArrayOutput {
	return i.ToNetworkAclIngressStateArrayOutputWithContext(context.Background())
}

func (i NetworkAclIngressStateArray) ToNetworkAclIngressStateArrayOutputWithContext(ctx context.Context) NetworkAclIngressStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclIngressStateArrayOutput)
}

type NetworkAclIngressStateOutput struct{ *pulumi.OutputState }

func (NetworkAclIngressStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclIngressState)(nil)).Elem()
}

func (o NetworkAclIngressStateOutput) ToNetworkAclIngressStateOutput() NetworkAclIngressStateOutput {
	return o
}

func (o NetworkAclIngressStateOutput) ToNetworkAclIngressStateOutputWithContext(ctx context.Context) NetworkAclIngressStateOutput {
	return o
}

// The action to take.
func (o NetworkAclIngressStateOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclIngressState) string { return v.Action }).(pulumi.StringOutput)
}

// The CIDR block to match. This must be a
// valid network mask.
func (o NetworkAclIngressStateOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclIngressState) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// The from port to match.
func (o NetworkAclIngressStateOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclIngressState) int { return v.FromPort }).(pulumi.IntOutput)
}

// The ICMP type code to be used. Default 0.
func (o NetworkAclIngressStateOutput) IcmpCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAclIngressState) *int { return v.IcmpCode }).(pulumi.IntPtrOutput)
}

// The ICMP type to be used. Default 0.
func (o NetworkAclIngressStateOutput) IcmpType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAclIngressState) *int { return v.IcmpType }).(pulumi.IntPtrOutput)
}

// The IPv6 CIDR block.
func (o NetworkAclIngressStateOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclIngressState) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// The protocol to match. If using the -1 'all'
// protocol, you must specify a from and to port of 0.
func (o NetworkAclIngressStateOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclIngressState) string { return v.Protocol }).(pulumi.StringOutput)
}

// The rule number. Used for ordering.
func (o NetworkAclIngressStateOutput) RuleNo() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclIngressState) int { return v.RuleNo }).(pulumi.IntOutput)
}

// The to port to match.
func (o NetworkAclIngressStateOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclIngressState) int { return v.ToPort }).(pulumi.IntOutput)
}

type NetworkAclIngressStateArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclIngressStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclIngressState)(nil)).Elem()
}

func (o NetworkAclIngressStateArrayOutput) ToNetworkAclIngressStateArrayOutput() NetworkAclIngressStateArrayOutput {
	return o
}

func (o NetworkAclIngressStateArrayOutput) ToNetworkAclIngressStateArrayOutputWithContext(ctx context.Context) NetworkAclIngressStateArrayOutput {
	return o
}

func (o NetworkAclIngressStateArrayOutput) Index(i pulumi.IntInput) NetworkAclIngressStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclIngressState {
		return vs[0].([]NetworkAclIngressState)[vs[1].(int)]
	}).(NetworkAclIngressStateOutput)
}

type NetworkInterfaceAttachmentType struct {
	AttachmentId string `pulumi:"attachmentId"`
	// Integer to define the devices index.
	DeviceIndex int `pulumi:"deviceIndex"`
	// ID of the instance to attach to.
	Instance string `pulumi:"instance"`
}

type NetworkInterfaceAttachmentTypeInput interface {
	pulumi.Input

	ToNetworkInterfaceAttachmentTypeOutput() NetworkInterfaceAttachmentTypeOutput
	ToNetworkInterfaceAttachmentTypeOutputWithContext(context.Context) NetworkInterfaceAttachmentTypeOutput
}

type NetworkInterfaceAttachmentTypeArgs struct {
	AttachmentId pulumi.StringInput `pulumi:"attachmentId"`
	// Integer to define the devices index.
	DeviceIndex pulumi.IntInput `pulumi:"deviceIndex"`
	// ID of the instance to attach to.
	Instance pulumi.StringInput `pulumi:"instance"`
}

func (NetworkInterfaceAttachmentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceAttachmentType)(nil)).Elem()
}

func (i NetworkInterfaceAttachmentTypeArgs) ToNetworkInterfaceAttachmentTypeOutput() NetworkInterfaceAttachmentTypeOutput {
	return i.ToNetworkInterfaceAttachmentTypeOutputWithContext(context.Background())
}

func (i NetworkInterfaceAttachmentTypeArgs) ToNetworkInterfaceAttachmentTypeOutputWithContext(ctx context.Context) NetworkInterfaceAttachmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceAttachmentTypeOutput)
}

type NetworkInterfaceAttachmentTypeArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceAttachmentTypeArrayOutput() NetworkInterfaceAttachmentTypeArrayOutput
	ToNetworkInterfaceAttachmentTypeArrayOutputWithContext(context.Context) NetworkInterfaceAttachmentTypeArrayOutput
}

type NetworkInterfaceAttachmentTypeArray []NetworkInterfaceAttachmentTypeInput

func (NetworkInterfaceAttachmentTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceAttachmentType)(nil)).Elem()
}

func (i NetworkInterfaceAttachmentTypeArray) ToNetworkInterfaceAttachmentTypeArrayOutput() NetworkInterfaceAttachmentTypeArrayOutput {
	return i.ToNetworkInterfaceAttachmentTypeArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceAttachmentTypeArray) ToNetworkInterfaceAttachmentTypeArrayOutputWithContext(ctx context.Context) NetworkInterfaceAttachmentTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceAttachmentTypeArrayOutput)
}

type NetworkInterfaceAttachmentTypeOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceAttachmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceAttachmentType)(nil)).Elem()
}

func (o NetworkInterfaceAttachmentTypeOutput) ToNetworkInterfaceAttachmentTypeOutput() NetworkInterfaceAttachmentTypeOutput {
	return o
}

func (o NetworkInterfaceAttachmentTypeOutput) ToNetworkInterfaceAttachmentTypeOutputWithContext(ctx context.Context) NetworkInterfaceAttachmentTypeOutput {
	return o
}

func (o NetworkInterfaceAttachmentTypeOutput) AttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceAttachmentType) string { return v.AttachmentId }).(pulumi.StringOutput)
}

// Integer to define the devices index.
func (o NetworkInterfaceAttachmentTypeOutput) DeviceIndex() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkInterfaceAttachmentType) int { return v.DeviceIndex }).(pulumi.IntOutput)
}

// ID of the instance to attach to.
func (o NetworkInterfaceAttachmentTypeOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceAttachmentType) string { return v.Instance }).(pulumi.StringOutput)
}

type NetworkInterfaceAttachmentTypeArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceAttachmentTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceAttachmentType)(nil)).Elem()
}

func (o NetworkInterfaceAttachmentTypeArrayOutput) ToNetworkInterfaceAttachmentTypeArrayOutput() NetworkInterfaceAttachmentTypeArrayOutput {
	return o
}

func (o NetworkInterfaceAttachmentTypeArrayOutput) ToNetworkInterfaceAttachmentTypeArrayOutputWithContext(ctx context.Context) NetworkInterfaceAttachmentTypeArrayOutput {
	return o
}

func (o NetworkInterfaceAttachmentTypeArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceAttachmentTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceAttachmentType {
		return vs[0].([]NetworkInterfaceAttachmentType)[vs[1].(int)]
	}).(NetworkInterfaceAttachmentTypeOutput)
}

type NetworkInterfaceAttachmentArgsType struct {
	AttachmentId *string `pulumi:"attachmentId"`
	// Integer to define the devices index.
	DeviceIndex int `pulumi:"deviceIndex"`
	// ID of the instance to attach to.
	Instance string `pulumi:"instance"`
}

type NetworkInterfaceAttachmentArgsTypeInput interface {
	pulumi.Input

	ToNetworkInterfaceAttachmentArgsTypeOutput() NetworkInterfaceAttachmentArgsTypeOutput
	ToNetworkInterfaceAttachmentArgsTypeOutputWithContext(context.Context) NetworkInterfaceAttachmentArgsTypeOutput
}

type NetworkInterfaceAttachmentArgsTypeArgs struct {
	AttachmentId pulumi.StringPtrInput `pulumi:"attachmentId"`
	// Integer to define the devices index.
	DeviceIndex pulumi.IntInput `pulumi:"deviceIndex"`
	// ID of the instance to attach to.
	Instance pulumi.StringInput `pulumi:"instance"`
}

func (NetworkInterfaceAttachmentArgsTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceAttachmentArgsType)(nil)).Elem()
}

func (i NetworkInterfaceAttachmentArgsTypeArgs) ToNetworkInterfaceAttachmentArgsTypeOutput() NetworkInterfaceAttachmentArgsTypeOutput {
	return i.ToNetworkInterfaceAttachmentArgsTypeOutputWithContext(context.Background())
}

func (i NetworkInterfaceAttachmentArgsTypeArgs) ToNetworkInterfaceAttachmentArgsTypeOutputWithContext(ctx context.Context) NetworkInterfaceAttachmentArgsTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceAttachmentArgsTypeOutput)
}

type NetworkInterfaceAttachmentArgsTypeArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceAttachmentArgsTypeArrayOutput() NetworkInterfaceAttachmentArgsTypeArrayOutput
	ToNetworkInterfaceAttachmentArgsTypeArrayOutputWithContext(context.Context) NetworkInterfaceAttachmentArgsTypeArrayOutput
}

type NetworkInterfaceAttachmentArgsTypeArray []NetworkInterfaceAttachmentArgsTypeInput

func (NetworkInterfaceAttachmentArgsTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceAttachmentArgsType)(nil)).Elem()
}

func (i NetworkInterfaceAttachmentArgsTypeArray) ToNetworkInterfaceAttachmentArgsTypeArrayOutput() NetworkInterfaceAttachmentArgsTypeArrayOutput {
	return i.ToNetworkInterfaceAttachmentArgsTypeArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceAttachmentArgsTypeArray) ToNetworkInterfaceAttachmentArgsTypeArrayOutputWithContext(ctx context.Context) NetworkInterfaceAttachmentArgsTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceAttachmentArgsTypeArrayOutput)
}

type NetworkInterfaceAttachmentArgsTypeOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceAttachmentArgsTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceAttachmentArgsType)(nil)).Elem()
}

func (o NetworkInterfaceAttachmentArgsTypeOutput) ToNetworkInterfaceAttachmentArgsTypeOutput() NetworkInterfaceAttachmentArgsTypeOutput {
	return o
}

func (o NetworkInterfaceAttachmentArgsTypeOutput) ToNetworkInterfaceAttachmentArgsTypeOutputWithContext(ctx context.Context) NetworkInterfaceAttachmentArgsTypeOutput {
	return o
}

func (o NetworkInterfaceAttachmentArgsTypeOutput) AttachmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceAttachmentArgsType) *string { return v.AttachmentId }).(pulumi.StringPtrOutput)
}

// Integer to define the devices index.
func (o NetworkInterfaceAttachmentArgsTypeOutput) DeviceIndex() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkInterfaceAttachmentArgsType) int { return v.DeviceIndex }).(pulumi.IntOutput)
}

// ID of the instance to attach to.
func (o NetworkInterfaceAttachmentArgsTypeOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceAttachmentArgsType) string { return v.Instance }).(pulumi.StringOutput)
}

type NetworkInterfaceAttachmentArgsTypeArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceAttachmentArgsTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceAttachmentArgsType)(nil)).Elem()
}

func (o NetworkInterfaceAttachmentArgsTypeArrayOutput) ToNetworkInterfaceAttachmentArgsTypeArrayOutput() NetworkInterfaceAttachmentArgsTypeArrayOutput {
	return o
}

func (o NetworkInterfaceAttachmentArgsTypeArrayOutput) ToNetworkInterfaceAttachmentArgsTypeArrayOutputWithContext(ctx context.Context) NetworkInterfaceAttachmentArgsTypeArrayOutput {
	return o
}

func (o NetworkInterfaceAttachmentArgsTypeArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceAttachmentArgsTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceAttachmentArgsType {
		return vs[0].([]NetworkInterfaceAttachmentArgsType)[vs[1].(int)]
	}).(NetworkInterfaceAttachmentArgsTypeOutput)
}

type NetworkInterfaceAttachmentStateType struct {
	AttachmentId *string `pulumi:"attachmentId"`
	// Integer to define the devices index.
	DeviceIndex int `pulumi:"deviceIndex"`
	// ID of the instance to attach to.
	Instance string `pulumi:"instance"`
}

type NetworkInterfaceAttachmentStateTypeInput interface {
	pulumi.Input

	ToNetworkInterfaceAttachmentStateTypeOutput() NetworkInterfaceAttachmentStateTypeOutput
	ToNetworkInterfaceAttachmentStateTypeOutputWithContext(context.Context) NetworkInterfaceAttachmentStateTypeOutput
}

type NetworkInterfaceAttachmentStateTypeArgs struct {
	AttachmentId pulumi.StringPtrInput `pulumi:"attachmentId"`
	// Integer to define the devices index.
	DeviceIndex pulumi.IntInput `pulumi:"deviceIndex"`
	// ID of the instance to attach to.
	Instance pulumi.StringInput `pulumi:"instance"`
}

func (NetworkInterfaceAttachmentStateTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceAttachmentStateType)(nil)).Elem()
}

func (i NetworkInterfaceAttachmentStateTypeArgs) ToNetworkInterfaceAttachmentStateTypeOutput() NetworkInterfaceAttachmentStateTypeOutput {
	return i.ToNetworkInterfaceAttachmentStateTypeOutputWithContext(context.Background())
}

func (i NetworkInterfaceAttachmentStateTypeArgs) ToNetworkInterfaceAttachmentStateTypeOutputWithContext(ctx context.Context) NetworkInterfaceAttachmentStateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceAttachmentStateTypeOutput)
}

type NetworkInterfaceAttachmentStateTypeArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceAttachmentStateTypeArrayOutput() NetworkInterfaceAttachmentStateTypeArrayOutput
	ToNetworkInterfaceAttachmentStateTypeArrayOutputWithContext(context.Context) NetworkInterfaceAttachmentStateTypeArrayOutput
}

type NetworkInterfaceAttachmentStateTypeArray []NetworkInterfaceAttachmentStateTypeInput

func (NetworkInterfaceAttachmentStateTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceAttachmentStateType)(nil)).Elem()
}

func (i NetworkInterfaceAttachmentStateTypeArray) ToNetworkInterfaceAttachmentStateTypeArrayOutput() NetworkInterfaceAttachmentStateTypeArrayOutput {
	return i.ToNetworkInterfaceAttachmentStateTypeArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceAttachmentStateTypeArray) ToNetworkInterfaceAttachmentStateTypeArrayOutputWithContext(ctx context.Context) NetworkInterfaceAttachmentStateTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceAttachmentStateTypeArrayOutput)
}

type NetworkInterfaceAttachmentStateTypeOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceAttachmentStateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceAttachmentStateType)(nil)).Elem()
}

func (o NetworkInterfaceAttachmentStateTypeOutput) ToNetworkInterfaceAttachmentStateTypeOutput() NetworkInterfaceAttachmentStateTypeOutput {
	return o
}

func (o NetworkInterfaceAttachmentStateTypeOutput) ToNetworkInterfaceAttachmentStateTypeOutputWithContext(ctx context.Context) NetworkInterfaceAttachmentStateTypeOutput {
	return o
}

func (o NetworkInterfaceAttachmentStateTypeOutput) AttachmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceAttachmentStateType) *string { return v.AttachmentId }).(pulumi.StringPtrOutput)
}

// Integer to define the devices index.
func (o NetworkInterfaceAttachmentStateTypeOutput) DeviceIndex() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkInterfaceAttachmentStateType) int { return v.DeviceIndex }).(pulumi.IntOutput)
}

// ID of the instance to attach to.
func (o NetworkInterfaceAttachmentStateTypeOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceAttachmentStateType) string { return v.Instance }).(pulumi.StringOutput)
}

type NetworkInterfaceAttachmentStateTypeArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceAttachmentStateTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceAttachmentStateType)(nil)).Elem()
}

func (o NetworkInterfaceAttachmentStateTypeArrayOutput) ToNetworkInterfaceAttachmentStateTypeArrayOutput() NetworkInterfaceAttachmentStateTypeArrayOutput {
	return o
}

func (o NetworkInterfaceAttachmentStateTypeArrayOutput) ToNetworkInterfaceAttachmentStateTypeArrayOutputWithContext(ctx context.Context) NetworkInterfaceAttachmentStateTypeArrayOutput {
	return o
}

func (o NetworkInterfaceAttachmentStateTypeArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceAttachmentStateTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceAttachmentStateType {
		return vs[0].([]NetworkInterfaceAttachmentStateType)[vs[1].(int)]
	}).(NetworkInterfaceAttachmentStateTypeOutput)
}

type PeeringConnectionOptionsAccepter struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC. This option is not supported for inter-region VPC peering.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection. This option is not supported for inter-region VPC peering.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

type PeeringConnectionOptionsAccepterInput interface {
	pulumi.Input

	ToPeeringConnectionOptionsAccepterOutput() PeeringConnectionOptionsAccepterOutput
	ToPeeringConnectionOptionsAccepterOutputWithContext(context.Context) PeeringConnectionOptionsAccepterOutput
}

type PeeringConnectionOptionsAccepterArgs struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC. This option is not supported for inter-region VPC peering.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection. This option is not supported for inter-region VPC peering.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (PeeringConnectionOptionsAccepterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringConnectionOptionsAccepter)(nil)).Elem()
}

func (i PeeringConnectionOptionsAccepterArgs) ToPeeringConnectionOptionsAccepterOutput() PeeringConnectionOptionsAccepterOutput {
	return i.ToPeeringConnectionOptionsAccepterOutputWithContext(context.Background())
}

func (i PeeringConnectionOptionsAccepterArgs) ToPeeringConnectionOptionsAccepterOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsAccepterOutput)
}

func (i PeeringConnectionOptionsAccepterArgs) ToPeeringConnectionOptionsAccepterPtrOutput() PeeringConnectionOptionsAccepterPtrOutput {
	return i.ToPeeringConnectionOptionsAccepterPtrOutputWithContext(context.Background())
}

func (i PeeringConnectionOptionsAccepterArgs) ToPeeringConnectionOptionsAccepterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsAccepterOutput).ToPeeringConnectionOptionsAccepterPtrOutputWithContext(ctx)
}

type PeeringConnectionOptionsAccepterPtrInput interface {
	pulumi.Input

	ToPeeringConnectionOptionsAccepterPtrOutput() PeeringConnectionOptionsAccepterPtrOutput
	ToPeeringConnectionOptionsAccepterPtrOutputWithContext(context.Context) PeeringConnectionOptionsAccepterPtrOutput
}

type peeringConnectionOptionsAccepterPtrType PeeringConnectionOptionsAccepterArgs

func PeeringConnectionOptionsAccepterPtr(v *PeeringConnectionOptionsAccepterArgs) PeeringConnectionOptionsAccepterPtrInput {
	return (*peeringConnectionOptionsAccepterPtrType)(v)
}

func (*peeringConnectionOptionsAccepterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringConnectionOptionsAccepter)(nil)).Elem()
}

func (i *peeringConnectionOptionsAccepterPtrType) ToPeeringConnectionOptionsAccepterPtrOutput() PeeringConnectionOptionsAccepterPtrOutput {
	return i.ToPeeringConnectionOptionsAccepterPtrOutputWithContext(context.Background())
}

func (i *peeringConnectionOptionsAccepterPtrType) ToPeeringConnectionOptionsAccepterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsAccepterPtrOutput)
}

type PeeringConnectionOptionsAccepterOutput struct{ *pulumi.OutputState }

func (PeeringConnectionOptionsAccepterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringConnectionOptionsAccepter)(nil)).Elem()
}

func (o PeeringConnectionOptionsAccepterOutput) ToPeeringConnectionOptionsAccepterOutput() PeeringConnectionOptionsAccepterOutput {
	return o
}

func (o PeeringConnectionOptionsAccepterOutput) ToPeeringConnectionOptionsAccepterOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterOutput {
	return o
}

func (o PeeringConnectionOptionsAccepterOutput) ToPeeringConnectionOptionsAccepterPtrOutput() PeeringConnectionOptionsAccepterPtrOutput {
	return o.ToPeeringConnectionOptionsAccepterPtrOutputWithContext(context.Background())
}

func (o PeeringConnectionOptionsAccepterOutput) ToPeeringConnectionOptionsAccepterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsAccepter) *PeeringConnectionOptionsAccepter {
		return &v
	}).(PeeringConnectionOptionsAccepterPtrOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsAccepterOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsAccepter) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC.
func (o PeeringConnectionOptionsAccepterOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsAccepter) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsAccepterOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsAccepter) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type PeeringConnectionOptionsAccepterPtrOutput struct{ *pulumi.OutputState }

func (PeeringConnectionOptionsAccepterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringConnectionOptionsAccepter)(nil)).Elem()
}

func (o PeeringConnectionOptionsAccepterPtrOutput) ToPeeringConnectionOptionsAccepterPtrOutput() PeeringConnectionOptionsAccepterPtrOutput {
	return o
}

func (o PeeringConnectionOptionsAccepterPtrOutput) ToPeeringConnectionOptionsAccepterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterPtrOutput {
	return o
}

func (o PeeringConnectionOptionsAccepterPtrOutput) Elem() PeeringConnectionOptionsAccepterOutput {
	return o.ApplyT(func(v *PeeringConnectionOptionsAccepter) PeeringConnectionOptionsAccepter { return *v }).(PeeringConnectionOptionsAccepterOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsAccepterPtrOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsAccepter) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC.
func (o PeeringConnectionOptionsAccepterPtrOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsAccepter) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsAccepterPtrOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsAccepter) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type PeeringConnectionOptionsAccepterArgs struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC. This option is not supported for inter-region VPC peering.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection. This option is not supported for inter-region VPC peering.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

type PeeringConnectionOptionsAccepterArgsInput interface {
	pulumi.Input

	ToPeeringConnectionOptionsAccepterArgsOutput() PeeringConnectionOptionsAccepterArgsOutput
	ToPeeringConnectionOptionsAccepterArgsOutputWithContext(context.Context) PeeringConnectionOptionsAccepterArgsOutput
}

type PeeringConnectionOptionsAccepterArgsArgs struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC. This option is not supported for inter-region VPC peering.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection. This option is not supported for inter-region VPC peering.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (PeeringConnectionOptionsAccepterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringConnectionOptionsAccepterArgs)(nil)).Elem()
}

func (i PeeringConnectionOptionsAccepterArgsArgs) ToPeeringConnectionOptionsAccepterArgsOutput() PeeringConnectionOptionsAccepterArgsOutput {
	return i.ToPeeringConnectionOptionsAccepterArgsOutputWithContext(context.Background())
}

func (i PeeringConnectionOptionsAccepterArgsArgs) ToPeeringConnectionOptionsAccepterArgsOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsAccepterArgsOutput)
}

func (i PeeringConnectionOptionsAccepterArgsArgs) ToPeeringConnectionOptionsAccepterArgsPtrOutput() PeeringConnectionOptionsAccepterArgsPtrOutput {
	return i.ToPeeringConnectionOptionsAccepterArgsPtrOutputWithContext(context.Background())
}

func (i PeeringConnectionOptionsAccepterArgsArgs) ToPeeringConnectionOptionsAccepterArgsPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsAccepterArgsOutput).ToPeeringConnectionOptionsAccepterArgsPtrOutputWithContext(ctx)
}

type PeeringConnectionOptionsAccepterArgsPtrInput interface {
	pulumi.Input

	ToPeeringConnectionOptionsAccepterArgsPtrOutput() PeeringConnectionOptionsAccepterArgsPtrOutput
	ToPeeringConnectionOptionsAccepterArgsPtrOutputWithContext(context.Context) PeeringConnectionOptionsAccepterArgsPtrOutput
}

type peeringConnectionOptionsAccepterArgsPtrType PeeringConnectionOptionsAccepterArgsArgs

func PeeringConnectionOptionsAccepterArgsPtr(v *PeeringConnectionOptionsAccepterArgsArgs) PeeringConnectionOptionsAccepterArgsPtrInput {
	return (*peeringConnectionOptionsAccepterArgsPtrType)(v)
}

func (*peeringConnectionOptionsAccepterArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringConnectionOptionsAccepterArgs)(nil)).Elem()
}

func (i *peeringConnectionOptionsAccepterArgsPtrType) ToPeeringConnectionOptionsAccepterArgsPtrOutput() PeeringConnectionOptionsAccepterArgsPtrOutput {
	return i.ToPeeringConnectionOptionsAccepterArgsPtrOutputWithContext(context.Background())
}

func (i *peeringConnectionOptionsAccepterArgsPtrType) ToPeeringConnectionOptionsAccepterArgsPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsAccepterArgsPtrOutput)
}

type PeeringConnectionOptionsAccepterArgsOutput struct{ *pulumi.OutputState }

func (PeeringConnectionOptionsAccepterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringConnectionOptionsAccepterArgs)(nil)).Elem()
}

func (o PeeringConnectionOptionsAccepterArgsOutput) ToPeeringConnectionOptionsAccepterArgsOutput() PeeringConnectionOptionsAccepterArgsOutput {
	return o
}

func (o PeeringConnectionOptionsAccepterArgsOutput) ToPeeringConnectionOptionsAccepterArgsOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterArgsOutput {
	return o
}

func (o PeeringConnectionOptionsAccepterArgsOutput) ToPeeringConnectionOptionsAccepterArgsPtrOutput() PeeringConnectionOptionsAccepterArgsPtrOutput {
	return o.ToPeeringConnectionOptionsAccepterArgsPtrOutputWithContext(context.Background())
}

func (o PeeringConnectionOptionsAccepterArgsOutput) ToPeeringConnectionOptionsAccepterArgsPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterArgsPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsAccepterArgs) *PeeringConnectionOptionsAccepterArgs {
		return &v
	}).(PeeringConnectionOptionsAccepterArgsPtrOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsAccepterArgsOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsAccepterArgs) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC.
func (o PeeringConnectionOptionsAccepterArgsOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsAccepterArgs) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsAccepterArgsOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsAccepterArgs) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type PeeringConnectionOptionsAccepterArgsPtrOutput struct{ *pulumi.OutputState }

func (PeeringConnectionOptionsAccepterArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringConnectionOptionsAccepterArgs)(nil)).Elem()
}

func (o PeeringConnectionOptionsAccepterArgsPtrOutput) ToPeeringConnectionOptionsAccepterArgsPtrOutput() PeeringConnectionOptionsAccepterArgsPtrOutput {
	return o
}

func (o PeeringConnectionOptionsAccepterArgsPtrOutput) ToPeeringConnectionOptionsAccepterArgsPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterArgsPtrOutput {
	return o
}

func (o PeeringConnectionOptionsAccepterArgsPtrOutput) Elem() PeeringConnectionOptionsAccepterArgsOutput {
	return o.ApplyT(func(v *PeeringConnectionOptionsAccepterArgs) PeeringConnectionOptionsAccepterArgs { return *v }).(PeeringConnectionOptionsAccepterArgsOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsAccepterArgsPtrOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsAccepterArgs) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC.
func (o PeeringConnectionOptionsAccepterArgsPtrOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsAccepterArgs) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsAccepterArgsPtrOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsAccepterArgs) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type PeeringConnectionOptionsAccepterState struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC. This option is not supported for inter-region VPC peering.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection. This option is not supported for inter-region VPC peering.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

type PeeringConnectionOptionsAccepterStateInput interface {
	pulumi.Input

	ToPeeringConnectionOptionsAccepterStateOutput() PeeringConnectionOptionsAccepterStateOutput
	ToPeeringConnectionOptionsAccepterStateOutputWithContext(context.Context) PeeringConnectionOptionsAccepterStateOutput
}

type PeeringConnectionOptionsAccepterStateArgs struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC. This option is not supported for inter-region VPC peering.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection. This option is not supported for inter-region VPC peering.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (PeeringConnectionOptionsAccepterStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringConnectionOptionsAccepterState)(nil)).Elem()
}

func (i PeeringConnectionOptionsAccepterStateArgs) ToPeeringConnectionOptionsAccepterStateOutput() PeeringConnectionOptionsAccepterStateOutput {
	return i.ToPeeringConnectionOptionsAccepterStateOutputWithContext(context.Background())
}

func (i PeeringConnectionOptionsAccepterStateArgs) ToPeeringConnectionOptionsAccepterStateOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsAccepterStateOutput)
}

type PeeringConnectionOptionsAccepterStateOutput struct{ *pulumi.OutputState }

func (PeeringConnectionOptionsAccepterStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringConnectionOptionsAccepterState)(nil)).Elem()
}

func (o PeeringConnectionOptionsAccepterStateOutput) ToPeeringConnectionOptionsAccepterStateOutput() PeeringConnectionOptionsAccepterStateOutput {
	return o
}

func (o PeeringConnectionOptionsAccepterStateOutput) ToPeeringConnectionOptionsAccepterStateOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterStateOutput {
	return o
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsAccepterStateOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsAccepterState) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC.
func (o PeeringConnectionOptionsAccepterStateOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsAccepterState) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsAccepterStateOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsAccepterState) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type PeeringConnectionOptionsRequester struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC. This option is not supported for inter-region VPC peering.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection. This option is not supported for inter-region VPC peering.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

type PeeringConnectionOptionsRequesterInput interface {
	pulumi.Input

	ToPeeringConnectionOptionsRequesterOutput() PeeringConnectionOptionsRequesterOutput
	ToPeeringConnectionOptionsRequesterOutputWithContext(context.Context) PeeringConnectionOptionsRequesterOutput
}

type PeeringConnectionOptionsRequesterArgs struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC. This option is not supported for inter-region VPC peering.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection. This option is not supported for inter-region VPC peering.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (PeeringConnectionOptionsRequesterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringConnectionOptionsRequester)(nil)).Elem()
}

func (i PeeringConnectionOptionsRequesterArgs) ToPeeringConnectionOptionsRequesterOutput() PeeringConnectionOptionsRequesterOutput {
	return i.ToPeeringConnectionOptionsRequesterOutputWithContext(context.Background())
}

func (i PeeringConnectionOptionsRequesterArgs) ToPeeringConnectionOptionsRequesterOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsRequesterOutput)
}

func (i PeeringConnectionOptionsRequesterArgs) ToPeeringConnectionOptionsRequesterPtrOutput() PeeringConnectionOptionsRequesterPtrOutput {
	return i.ToPeeringConnectionOptionsRequesterPtrOutputWithContext(context.Background())
}

func (i PeeringConnectionOptionsRequesterArgs) ToPeeringConnectionOptionsRequesterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsRequesterOutput).ToPeeringConnectionOptionsRequesterPtrOutputWithContext(ctx)
}

type PeeringConnectionOptionsRequesterPtrInput interface {
	pulumi.Input

	ToPeeringConnectionOptionsRequesterPtrOutput() PeeringConnectionOptionsRequesterPtrOutput
	ToPeeringConnectionOptionsRequesterPtrOutputWithContext(context.Context) PeeringConnectionOptionsRequesterPtrOutput
}

type peeringConnectionOptionsRequesterPtrType PeeringConnectionOptionsRequesterArgs

func PeeringConnectionOptionsRequesterPtr(v *PeeringConnectionOptionsRequesterArgs) PeeringConnectionOptionsRequesterPtrInput {
	return (*peeringConnectionOptionsRequesterPtrType)(v)
}

func (*peeringConnectionOptionsRequesterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringConnectionOptionsRequester)(nil)).Elem()
}

func (i *peeringConnectionOptionsRequesterPtrType) ToPeeringConnectionOptionsRequesterPtrOutput() PeeringConnectionOptionsRequesterPtrOutput {
	return i.ToPeeringConnectionOptionsRequesterPtrOutputWithContext(context.Background())
}

func (i *peeringConnectionOptionsRequesterPtrType) ToPeeringConnectionOptionsRequesterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsRequesterPtrOutput)
}

type PeeringConnectionOptionsRequesterOutput struct{ *pulumi.OutputState }

func (PeeringConnectionOptionsRequesterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringConnectionOptionsRequester)(nil)).Elem()
}

func (o PeeringConnectionOptionsRequesterOutput) ToPeeringConnectionOptionsRequesterOutput() PeeringConnectionOptionsRequesterOutput {
	return o
}

func (o PeeringConnectionOptionsRequesterOutput) ToPeeringConnectionOptionsRequesterOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterOutput {
	return o
}

func (o PeeringConnectionOptionsRequesterOutput) ToPeeringConnectionOptionsRequesterPtrOutput() PeeringConnectionOptionsRequesterPtrOutput {
	return o.ToPeeringConnectionOptionsRequesterPtrOutputWithContext(context.Background())
}

func (o PeeringConnectionOptionsRequesterOutput) ToPeeringConnectionOptionsRequesterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsRequester) *PeeringConnectionOptionsRequester {
		return &v
	}).(PeeringConnectionOptionsRequesterPtrOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsRequesterOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsRequester) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC.
func (o PeeringConnectionOptionsRequesterOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsRequester) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsRequesterOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsRequester) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type PeeringConnectionOptionsRequesterPtrOutput struct{ *pulumi.OutputState }

func (PeeringConnectionOptionsRequesterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringConnectionOptionsRequester)(nil)).Elem()
}

func (o PeeringConnectionOptionsRequesterPtrOutput) ToPeeringConnectionOptionsRequesterPtrOutput() PeeringConnectionOptionsRequesterPtrOutput {
	return o
}

func (o PeeringConnectionOptionsRequesterPtrOutput) ToPeeringConnectionOptionsRequesterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterPtrOutput {
	return o
}

func (o PeeringConnectionOptionsRequesterPtrOutput) Elem() PeeringConnectionOptionsRequesterOutput {
	return o.ApplyT(func(v *PeeringConnectionOptionsRequester) PeeringConnectionOptionsRequester { return *v }).(PeeringConnectionOptionsRequesterOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsRequesterPtrOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsRequester) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC.
func (o PeeringConnectionOptionsRequesterPtrOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsRequester) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsRequesterPtrOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsRequester) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type PeeringConnectionOptionsRequesterArgs struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC. This option is not supported for inter-region VPC peering.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection. This option is not supported for inter-region VPC peering.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

type PeeringConnectionOptionsRequesterArgsInput interface {
	pulumi.Input

	ToPeeringConnectionOptionsRequesterArgsOutput() PeeringConnectionOptionsRequesterArgsOutput
	ToPeeringConnectionOptionsRequesterArgsOutputWithContext(context.Context) PeeringConnectionOptionsRequesterArgsOutput
}

type PeeringConnectionOptionsRequesterArgsArgs struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC. This option is not supported for inter-region VPC peering.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection. This option is not supported for inter-region VPC peering.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (PeeringConnectionOptionsRequesterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringConnectionOptionsRequesterArgs)(nil)).Elem()
}

func (i PeeringConnectionOptionsRequesterArgsArgs) ToPeeringConnectionOptionsRequesterArgsOutput() PeeringConnectionOptionsRequesterArgsOutput {
	return i.ToPeeringConnectionOptionsRequesterArgsOutputWithContext(context.Background())
}

func (i PeeringConnectionOptionsRequesterArgsArgs) ToPeeringConnectionOptionsRequesterArgsOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsRequesterArgsOutput)
}

func (i PeeringConnectionOptionsRequesterArgsArgs) ToPeeringConnectionOptionsRequesterArgsPtrOutput() PeeringConnectionOptionsRequesterArgsPtrOutput {
	return i.ToPeeringConnectionOptionsRequesterArgsPtrOutputWithContext(context.Background())
}

func (i PeeringConnectionOptionsRequesterArgsArgs) ToPeeringConnectionOptionsRequesterArgsPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsRequesterArgsOutput).ToPeeringConnectionOptionsRequesterArgsPtrOutputWithContext(ctx)
}

type PeeringConnectionOptionsRequesterArgsPtrInput interface {
	pulumi.Input

	ToPeeringConnectionOptionsRequesterArgsPtrOutput() PeeringConnectionOptionsRequesterArgsPtrOutput
	ToPeeringConnectionOptionsRequesterArgsPtrOutputWithContext(context.Context) PeeringConnectionOptionsRequesterArgsPtrOutput
}

type peeringConnectionOptionsRequesterArgsPtrType PeeringConnectionOptionsRequesterArgsArgs

func PeeringConnectionOptionsRequesterArgsPtr(v *PeeringConnectionOptionsRequesterArgsArgs) PeeringConnectionOptionsRequesterArgsPtrInput {
	return (*peeringConnectionOptionsRequesterArgsPtrType)(v)
}

func (*peeringConnectionOptionsRequesterArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringConnectionOptionsRequesterArgs)(nil)).Elem()
}

func (i *peeringConnectionOptionsRequesterArgsPtrType) ToPeeringConnectionOptionsRequesterArgsPtrOutput() PeeringConnectionOptionsRequesterArgsPtrOutput {
	return i.ToPeeringConnectionOptionsRequesterArgsPtrOutputWithContext(context.Background())
}

func (i *peeringConnectionOptionsRequesterArgsPtrType) ToPeeringConnectionOptionsRequesterArgsPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsRequesterArgsPtrOutput)
}

type PeeringConnectionOptionsRequesterArgsOutput struct{ *pulumi.OutputState }

func (PeeringConnectionOptionsRequesterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringConnectionOptionsRequesterArgs)(nil)).Elem()
}

func (o PeeringConnectionOptionsRequesterArgsOutput) ToPeeringConnectionOptionsRequesterArgsOutput() PeeringConnectionOptionsRequesterArgsOutput {
	return o
}

func (o PeeringConnectionOptionsRequesterArgsOutput) ToPeeringConnectionOptionsRequesterArgsOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterArgsOutput {
	return o
}

func (o PeeringConnectionOptionsRequesterArgsOutput) ToPeeringConnectionOptionsRequesterArgsPtrOutput() PeeringConnectionOptionsRequesterArgsPtrOutput {
	return o.ToPeeringConnectionOptionsRequesterArgsPtrOutputWithContext(context.Background())
}

func (o PeeringConnectionOptionsRequesterArgsOutput) ToPeeringConnectionOptionsRequesterArgsPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterArgsPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsRequesterArgs) *PeeringConnectionOptionsRequesterArgs {
		return &v
	}).(PeeringConnectionOptionsRequesterArgsPtrOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsRequesterArgsOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsRequesterArgs) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC.
func (o PeeringConnectionOptionsRequesterArgsOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsRequesterArgs) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsRequesterArgsOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsRequesterArgs) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type PeeringConnectionOptionsRequesterArgsPtrOutput struct{ *pulumi.OutputState }

func (PeeringConnectionOptionsRequesterArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringConnectionOptionsRequesterArgs)(nil)).Elem()
}

func (o PeeringConnectionOptionsRequesterArgsPtrOutput) ToPeeringConnectionOptionsRequesterArgsPtrOutput() PeeringConnectionOptionsRequesterArgsPtrOutput {
	return o
}

func (o PeeringConnectionOptionsRequesterArgsPtrOutput) ToPeeringConnectionOptionsRequesterArgsPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterArgsPtrOutput {
	return o
}

func (o PeeringConnectionOptionsRequesterArgsPtrOutput) Elem() PeeringConnectionOptionsRequesterArgsOutput {
	return o.ApplyT(func(v *PeeringConnectionOptionsRequesterArgs) PeeringConnectionOptionsRequesterArgs { return *v }).(PeeringConnectionOptionsRequesterArgsOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsRequesterArgsPtrOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsRequesterArgs) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC.
func (o PeeringConnectionOptionsRequesterArgsPtrOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsRequesterArgs) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsRequesterArgsPtrOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsRequesterArgs) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type PeeringConnectionOptionsRequesterState struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC. This option is not supported for inter-region VPC peering.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection. This option is not supported for inter-region VPC peering.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

type PeeringConnectionOptionsRequesterStateInput interface {
	pulumi.Input

	ToPeeringConnectionOptionsRequesterStateOutput() PeeringConnectionOptionsRequesterStateOutput
	ToPeeringConnectionOptionsRequesterStateOutputWithContext(context.Context) PeeringConnectionOptionsRequesterStateOutput
}

type PeeringConnectionOptionsRequesterStateArgs struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC. This option is not supported for inter-region VPC peering.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection. This option is not supported for inter-region VPC peering.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (PeeringConnectionOptionsRequesterStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringConnectionOptionsRequesterState)(nil)).Elem()
}

func (i PeeringConnectionOptionsRequesterStateArgs) ToPeeringConnectionOptionsRequesterStateOutput() PeeringConnectionOptionsRequesterStateOutput {
	return i.ToPeeringConnectionOptionsRequesterStateOutputWithContext(context.Background())
}

func (i PeeringConnectionOptionsRequesterStateArgs) ToPeeringConnectionOptionsRequesterStateOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsRequesterStateOutput)
}

type PeeringConnectionOptionsRequesterStateOutput struct{ *pulumi.OutputState }

func (PeeringConnectionOptionsRequesterStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringConnectionOptionsRequesterState)(nil)).Elem()
}

func (o PeeringConnectionOptionsRequesterStateOutput) ToPeeringConnectionOptionsRequesterStateOutput() PeeringConnectionOptionsRequesterStateOutput {
	return o
}

func (o PeeringConnectionOptionsRequesterStateOutput) ToPeeringConnectionOptionsRequesterStateOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterStateOutput {
	return o
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsRequesterStateOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsRequesterState) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC.
func (o PeeringConnectionOptionsRequesterStateOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsRequesterState) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsRequesterStateOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsRequesterState) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type RouteTableRoute struct {
	// The CIDR block of the route.
	CidrBlock *string `pulumi:"cidrBlock"`
	// Identifier of a VPC Egress Only Internet Gateway.
	EgressOnlyGatewayId *string `pulumi:"egressOnlyGatewayId"`
	// Identifier of a VPC internet gateway or a virtual private gateway.
	GatewayId *string `pulumi:"gatewayId"`
	// Identifier of an EC2 instance.
	InstanceId *string `pulumi:"instanceId"`
	// The Ipv6 CIDR block of the route.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// Identifier of a VPC NAT gateway.
	NatGatewayId *string `pulumi:"natGatewayId"`
	// Identifier of an EC2 network interface.
	NetworkInterfaceId *string `pulumi:"networkInterfaceId"`
	// Identifier of an EC2 Transit Gateway.
	TransitGatewayId *string `pulumi:"transitGatewayId"`
	// Identifier of a VPC peering connection.
	VpcPeeringConnectionId *string `pulumi:"vpcPeeringConnectionId"`
}

type RouteTableRouteInput interface {
	pulumi.Input

	ToRouteTableRouteOutput() RouteTableRouteOutput
	ToRouteTableRouteOutputWithContext(context.Context) RouteTableRouteOutput
}

type RouteTableRouteArgs struct {
	// The CIDR block of the route.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// Identifier of a VPC Egress Only Internet Gateway.
	EgressOnlyGatewayId pulumi.StringPtrInput `pulumi:"egressOnlyGatewayId"`
	// Identifier of a VPC internet gateway or a virtual private gateway.
	GatewayId pulumi.StringPtrInput `pulumi:"gatewayId"`
	// Identifier of an EC2 instance.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// The Ipv6 CIDR block of the route.
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// Identifier of a VPC NAT gateway.
	NatGatewayId pulumi.StringPtrInput `pulumi:"natGatewayId"`
	// Identifier of an EC2 network interface.
	NetworkInterfaceId pulumi.StringPtrInput `pulumi:"networkInterfaceId"`
	// Identifier of an EC2 Transit Gateway.
	TransitGatewayId pulumi.StringPtrInput `pulumi:"transitGatewayId"`
	// Identifier of a VPC peering connection.
	VpcPeeringConnectionId pulumi.StringPtrInput `pulumi:"vpcPeeringConnectionId"`
}

func (RouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableRoute)(nil)).Elem()
}

func (i RouteTableRouteArgs) ToRouteTableRouteOutput() RouteTableRouteOutput {
	return i.ToRouteTableRouteOutputWithContext(context.Background())
}

func (i RouteTableRouteArgs) ToRouteTableRouteOutputWithContext(ctx context.Context) RouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableRouteOutput)
}

type RouteTableRouteArrayInput interface {
	pulumi.Input

	ToRouteTableRouteArrayOutput() RouteTableRouteArrayOutput
	ToRouteTableRouteArrayOutputWithContext(context.Context) RouteTableRouteArrayOutput
}

type RouteTableRouteArray []RouteTableRouteInput

func (RouteTableRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableRoute)(nil)).Elem()
}

func (i RouteTableRouteArray) ToRouteTableRouteArrayOutput() RouteTableRouteArrayOutput {
	return i.ToRouteTableRouteArrayOutputWithContext(context.Background())
}

func (i RouteTableRouteArray) ToRouteTableRouteArrayOutputWithContext(ctx context.Context) RouteTableRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableRouteArrayOutput)
}

type RouteTableRouteOutput struct{ *pulumi.OutputState }

func (RouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableRoute)(nil)).Elem()
}

func (o RouteTableRouteOutput) ToRouteTableRouteOutput() RouteTableRouteOutput {
	return o
}

func (o RouteTableRouteOutput) ToRouteTableRouteOutputWithContext(ctx context.Context) RouteTableRouteOutput {
	return o
}

// The CIDR block of the route.
func (o RouteTableRouteOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRoute) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC Egress Only Internet Gateway.
func (o RouteTableRouteOutput) EgressOnlyGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRoute) *string { return v.EgressOnlyGatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC internet gateway or a virtual private gateway.
func (o RouteTableRouteOutput) GatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRoute) *string { return v.GatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of an EC2 instance.
func (o RouteTableRouteOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRoute) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// The Ipv6 CIDR block of the route.
func (o RouteTableRouteOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRoute) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC NAT gateway.
func (o RouteTableRouteOutput) NatGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRoute) *string { return v.NatGatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of an EC2 network interface.
func (o RouteTableRouteOutput) NetworkInterfaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRoute) *string { return v.NetworkInterfaceId }).(pulumi.StringPtrOutput)
}

// Identifier of an EC2 Transit Gateway.
func (o RouteTableRouteOutput) TransitGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRoute) *string { return v.TransitGatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC peering connection.
func (o RouteTableRouteOutput) VpcPeeringConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRoute) *string { return v.VpcPeeringConnectionId }).(pulumi.StringPtrOutput)
}

type RouteTableRouteArrayOutput struct{ *pulumi.OutputState }

func (RouteTableRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableRoute)(nil)).Elem()
}

func (o RouteTableRouteArrayOutput) ToRouteTableRouteArrayOutput() RouteTableRouteArrayOutput {
	return o
}

func (o RouteTableRouteArrayOutput) ToRouteTableRouteArrayOutputWithContext(ctx context.Context) RouteTableRouteArrayOutput {
	return o
}

func (o RouteTableRouteArrayOutput) Index(i pulumi.IntInput) RouteTableRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTableRoute {
		return vs[0].([]RouteTableRoute)[vs[1].(int)]
	}).(RouteTableRouteOutput)
}

type RouteTableRouteArgs struct {
	// The CIDR block of the route.
	CidrBlock *string `pulumi:"cidrBlock"`
	// Identifier of a VPC Egress Only Internet Gateway.
	EgressOnlyGatewayId *string `pulumi:"egressOnlyGatewayId"`
	// Identifier of a VPC internet gateway or a virtual private gateway.
	GatewayId *string `pulumi:"gatewayId"`
	// Identifier of an EC2 instance.
	InstanceId *string `pulumi:"instanceId"`
	// The Ipv6 CIDR block of the route.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// Identifier of a VPC NAT gateway.
	NatGatewayId *string `pulumi:"natGatewayId"`
	// Identifier of an EC2 network interface.
	NetworkInterfaceId *string `pulumi:"networkInterfaceId"`
	// Identifier of an EC2 Transit Gateway.
	TransitGatewayId *string `pulumi:"transitGatewayId"`
	// Identifier of a VPC peering connection.
	VpcPeeringConnectionId *string `pulumi:"vpcPeeringConnectionId"`
}

type RouteTableRouteArgsInput interface {
	pulumi.Input

	ToRouteTableRouteArgsOutput() RouteTableRouteArgsOutput
	ToRouteTableRouteArgsOutputWithContext(context.Context) RouteTableRouteArgsOutput
}

type RouteTableRouteArgsArgs struct {
	// The CIDR block of the route.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// Identifier of a VPC Egress Only Internet Gateway.
	EgressOnlyGatewayId pulumi.StringPtrInput `pulumi:"egressOnlyGatewayId"`
	// Identifier of a VPC internet gateway or a virtual private gateway.
	GatewayId pulumi.StringPtrInput `pulumi:"gatewayId"`
	// Identifier of an EC2 instance.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// The Ipv6 CIDR block of the route.
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// Identifier of a VPC NAT gateway.
	NatGatewayId pulumi.StringPtrInput `pulumi:"natGatewayId"`
	// Identifier of an EC2 network interface.
	NetworkInterfaceId pulumi.StringPtrInput `pulumi:"networkInterfaceId"`
	// Identifier of an EC2 Transit Gateway.
	TransitGatewayId pulumi.StringPtrInput `pulumi:"transitGatewayId"`
	// Identifier of a VPC peering connection.
	VpcPeeringConnectionId pulumi.StringPtrInput `pulumi:"vpcPeeringConnectionId"`
}

func (RouteTableRouteArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableRouteArgs)(nil)).Elem()
}

func (i RouteTableRouteArgsArgs) ToRouteTableRouteArgsOutput() RouteTableRouteArgsOutput {
	return i.ToRouteTableRouteArgsOutputWithContext(context.Background())
}

func (i RouteTableRouteArgsArgs) ToRouteTableRouteArgsOutputWithContext(ctx context.Context) RouteTableRouteArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableRouteArgsOutput)
}

type RouteTableRouteArgsArrayInput interface {
	pulumi.Input

	ToRouteTableRouteArgsArrayOutput() RouteTableRouteArgsArrayOutput
	ToRouteTableRouteArgsArrayOutputWithContext(context.Context) RouteTableRouteArgsArrayOutput
}

type RouteTableRouteArgsArray []RouteTableRouteArgsInput

func (RouteTableRouteArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableRouteArgs)(nil)).Elem()
}

func (i RouteTableRouteArgsArray) ToRouteTableRouteArgsArrayOutput() RouteTableRouteArgsArrayOutput {
	return i.ToRouteTableRouteArgsArrayOutputWithContext(context.Background())
}

func (i RouteTableRouteArgsArray) ToRouteTableRouteArgsArrayOutputWithContext(ctx context.Context) RouteTableRouteArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableRouteArgsArrayOutput)
}

type RouteTableRouteArgsOutput struct{ *pulumi.OutputState }

func (RouteTableRouteArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableRouteArgs)(nil)).Elem()
}

func (o RouteTableRouteArgsOutput) ToRouteTableRouteArgsOutput() RouteTableRouteArgsOutput {
	return o
}

func (o RouteTableRouteArgsOutput) ToRouteTableRouteArgsOutputWithContext(ctx context.Context) RouteTableRouteArgsOutput {
	return o
}

// The CIDR block of the route.
func (o RouteTableRouteArgsOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRouteArgs) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC Egress Only Internet Gateway.
func (o RouteTableRouteArgsOutput) EgressOnlyGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRouteArgs) *string { return v.EgressOnlyGatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC internet gateway or a virtual private gateway.
func (o RouteTableRouteArgsOutput) GatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRouteArgs) *string { return v.GatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of an EC2 instance.
func (o RouteTableRouteArgsOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRouteArgs) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// The Ipv6 CIDR block of the route.
func (o RouteTableRouteArgsOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRouteArgs) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC NAT gateway.
func (o RouteTableRouteArgsOutput) NatGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRouteArgs) *string { return v.NatGatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of an EC2 network interface.
func (o RouteTableRouteArgsOutput) NetworkInterfaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRouteArgs) *string { return v.NetworkInterfaceId }).(pulumi.StringPtrOutput)
}

// Identifier of an EC2 Transit Gateway.
func (o RouteTableRouteArgsOutput) TransitGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRouteArgs) *string { return v.TransitGatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC peering connection.
func (o RouteTableRouteArgsOutput) VpcPeeringConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRouteArgs) *string { return v.VpcPeeringConnectionId }).(pulumi.StringPtrOutput)
}

type RouteTableRouteArgsArrayOutput struct{ *pulumi.OutputState }

func (RouteTableRouteArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableRouteArgs)(nil)).Elem()
}

func (o RouteTableRouteArgsArrayOutput) ToRouteTableRouteArgsArrayOutput() RouteTableRouteArgsArrayOutput {
	return o
}

func (o RouteTableRouteArgsArrayOutput) ToRouteTableRouteArgsArrayOutputWithContext(ctx context.Context) RouteTableRouteArgsArrayOutput {
	return o
}

func (o RouteTableRouteArgsArrayOutput) Index(i pulumi.IntInput) RouteTableRouteArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTableRouteArgs {
		return vs[0].([]RouteTableRouteArgs)[vs[1].(int)]
	}).(RouteTableRouteArgsOutput)
}

type RouteTableRouteState struct {
	// The CIDR block of the route.
	CidrBlock *string `pulumi:"cidrBlock"`
	// Identifier of a VPC Egress Only Internet Gateway.
	EgressOnlyGatewayId *string `pulumi:"egressOnlyGatewayId"`
	// Identifier of a VPC internet gateway or a virtual private gateway.
	GatewayId *string `pulumi:"gatewayId"`
	// Identifier of an EC2 instance.
	InstanceId *string `pulumi:"instanceId"`
	// The Ipv6 CIDR block of the route.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// Identifier of a VPC NAT gateway.
	NatGatewayId *string `pulumi:"natGatewayId"`
	// Identifier of an EC2 network interface.
	NetworkInterfaceId *string `pulumi:"networkInterfaceId"`
	// Identifier of an EC2 Transit Gateway.
	TransitGatewayId *string `pulumi:"transitGatewayId"`
	// Identifier of a VPC peering connection.
	VpcPeeringConnectionId *string `pulumi:"vpcPeeringConnectionId"`
}

type RouteTableRouteStateInput interface {
	pulumi.Input

	ToRouteTableRouteStateOutput() RouteTableRouteStateOutput
	ToRouteTableRouteStateOutputWithContext(context.Context) RouteTableRouteStateOutput
}

type RouteTableRouteStateArgs struct {
	// The CIDR block of the route.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// Identifier of a VPC Egress Only Internet Gateway.
	EgressOnlyGatewayId pulumi.StringPtrInput `pulumi:"egressOnlyGatewayId"`
	// Identifier of a VPC internet gateway or a virtual private gateway.
	GatewayId pulumi.StringPtrInput `pulumi:"gatewayId"`
	// Identifier of an EC2 instance.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// The Ipv6 CIDR block of the route.
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// Identifier of a VPC NAT gateway.
	NatGatewayId pulumi.StringPtrInput `pulumi:"natGatewayId"`
	// Identifier of an EC2 network interface.
	NetworkInterfaceId pulumi.StringPtrInput `pulumi:"networkInterfaceId"`
	// Identifier of an EC2 Transit Gateway.
	TransitGatewayId pulumi.StringPtrInput `pulumi:"transitGatewayId"`
	// Identifier of a VPC peering connection.
	VpcPeeringConnectionId pulumi.StringPtrInput `pulumi:"vpcPeeringConnectionId"`
}

func (RouteTableRouteStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableRouteState)(nil)).Elem()
}

func (i RouteTableRouteStateArgs) ToRouteTableRouteStateOutput() RouteTableRouteStateOutput {
	return i.ToRouteTableRouteStateOutputWithContext(context.Background())
}

func (i RouteTableRouteStateArgs) ToRouteTableRouteStateOutputWithContext(ctx context.Context) RouteTableRouteStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableRouteStateOutput)
}

type RouteTableRouteStateArrayInput interface {
	pulumi.Input

	ToRouteTableRouteStateArrayOutput() RouteTableRouteStateArrayOutput
	ToRouteTableRouteStateArrayOutputWithContext(context.Context) RouteTableRouteStateArrayOutput
}

type RouteTableRouteStateArray []RouteTableRouteStateInput

func (RouteTableRouteStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableRouteState)(nil)).Elem()
}

func (i RouteTableRouteStateArray) ToRouteTableRouteStateArrayOutput() RouteTableRouteStateArrayOutput {
	return i.ToRouteTableRouteStateArrayOutputWithContext(context.Background())
}

func (i RouteTableRouteStateArray) ToRouteTableRouteStateArrayOutputWithContext(ctx context.Context) RouteTableRouteStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableRouteStateArrayOutput)
}

type RouteTableRouteStateOutput struct{ *pulumi.OutputState }

func (RouteTableRouteStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableRouteState)(nil)).Elem()
}

func (o RouteTableRouteStateOutput) ToRouteTableRouteStateOutput() RouteTableRouteStateOutput {
	return o
}

func (o RouteTableRouteStateOutput) ToRouteTableRouteStateOutputWithContext(ctx context.Context) RouteTableRouteStateOutput {
	return o
}

// The CIDR block of the route.
func (o RouteTableRouteStateOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRouteState) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC Egress Only Internet Gateway.
func (o RouteTableRouteStateOutput) EgressOnlyGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRouteState) *string { return v.EgressOnlyGatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC internet gateway or a virtual private gateway.
func (o RouteTableRouteStateOutput) GatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRouteState) *string { return v.GatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of an EC2 instance.
func (o RouteTableRouteStateOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRouteState) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// The Ipv6 CIDR block of the route.
func (o RouteTableRouteStateOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRouteState) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC NAT gateway.
func (o RouteTableRouteStateOutput) NatGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRouteState) *string { return v.NatGatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of an EC2 network interface.
func (o RouteTableRouteStateOutput) NetworkInterfaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRouteState) *string { return v.NetworkInterfaceId }).(pulumi.StringPtrOutput)
}

// Identifier of an EC2 Transit Gateway.
func (o RouteTableRouteStateOutput) TransitGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRouteState) *string { return v.TransitGatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC peering connection.
func (o RouteTableRouteStateOutput) VpcPeeringConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRouteState) *string { return v.VpcPeeringConnectionId }).(pulumi.StringPtrOutput)
}

type RouteTableRouteStateArrayOutput struct{ *pulumi.OutputState }

func (RouteTableRouteStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableRouteState)(nil)).Elem()
}

func (o RouteTableRouteStateArrayOutput) ToRouteTableRouteStateArrayOutput() RouteTableRouteStateArrayOutput {
	return o
}

func (o RouteTableRouteStateArrayOutput) ToRouteTableRouteStateArrayOutputWithContext(ctx context.Context) RouteTableRouteStateArrayOutput {
	return o
}

func (o RouteTableRouteStateArrayOutput) Index(i pulumi.IntInput) RouteTableRouteStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTableRouteState {
		return vs[0].([]RouteTableRouteState)[vs[1].(int)]
	}).(RouteTableRouteStateOutput)
}

type SecurityGroupEgress struct {
	// List of CIDR blocks.
	CidrBlocks []string `pulumi:"cidrBlocks"`
	// Description of this egress rule.
	Description *string `pulumi:"description"`
	// The start port (or ICMP type number if protocol is "icmp")
	FromPort int `pulumi:"fromPort"`
	// List of IPv6 CIDR blocks.
	Ipv6CidrBlocks []string `pulumi:"ipv6CidrBlocks"`
	// List of prefix list IDs (for allowing access to VPC endpoints)
	PrefixListIds []string `pulumi:"prefixListIds"`
	// The protocol. If you select a protocol of
	// "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "fromPort" and "toPort" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
	Protocol string `pulumi:"protocol"`
	// List of security group Group Names if using
	// EC2-Classic, or Group IDs if using a VPC.
	SecurityGroups []string `pulumi:"securityGroups"`
	// If true, the security group itself will be added as
	// a source to this egress rule.
	Self *bool `pulumi:"self"`
	// The end range port (or ICMP code if protocol is "icmp").
	ToPort int `pulumi:"toPort"`
}

type SecurityGroupEgressInput interface {
	pulumi.Input

	ToSecurityGroupEgressOutput() SecurityGroupEgressOutput
	ToSecurityGroupEgressOutputWithContext(context.Context) SecurityGroupEgressOutput
}

type SecurityGroupEgressArgs struct {
	// List of CIDR blocks.
	CidrBlocks pulumi.StringArrayInput `pulumi:"cidrBlocks"`
	// Description of this egress rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The start port (or ICMP type number if protocol is "icmp")
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// List of IPv6 CIDR blocks.
	Ipv6CidrBlocks pulumi.StringArrayInput `pulumi:"ipv6CidrBlocks"`
	// List of prefix list IDs (for allowing access to VPC endpoints)
	PrefixListIds pulumi.StringArrayInput `pulumi:"prefixListIds"`
	// The protocol. If you select a protocol of
	// "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "fromPort" and "toPort" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// List of security group Group Names if using
	// EC2-Classic, or Group IDs if using a VPC.
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// If true, the security group itself will be added as
	// a source to this egress rule.
	Self pulumi.BoolPtrInput `pulumi:"self"`
	// The end range port (or ICMP code if protocol is "icmp").
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (SecurityGroupEgressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupEgress)(nil)).Elem()
}

func (i SecurityGroupEgressArgs) ToSecurityGroupEgressOutput() SecurityGroupEgressOutput {
	return i.ToSecurityGroupEgressOutputWithContext(context.Background())
}

func (i SecurityGroupEgressArgs) ToSecurityGroupEgressOutputWithContext(ctx context.Context) SecurityGroupEgressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupEgressOutput)
}

type SecurityGroupEgressArrayInput interface {
	pulumi.Input

	ToSecurityGroupEgressArrayOutput() SecurityGroupEgressArrayOutput
	ToSecurityGroupEgressArrayOutputWithContext(context.Context) SecurityGroupEgressArrayOutput
}

type SecurityGroupEgressArray []SecurityGroupEgressInput

func (SecurityGroupEgressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupEgress)(nil)).Elem()
}

func (i SecurityGroupEgressArray) ToSecurityGroupEgressArrayOutput() SecurityGroupEgressArrayOutput {
	return i.ToSecurityGroupEgressArrayOutputWithContext(context.Background())
}

func (i SecurityGroupEgressArray) ToSecurityGroupEgressArrayOutputWithContext(ctx context.Context) SecurityGroupEgressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupEgressArrayOutput)
}

type SecurityGroupEgressOutput struct{ *pulumi.OutputState }

func (SecurityGroupEgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupEgress)(nil)).Elem()
}

func (o SecurityGroupEgressOutput) ToSecurityGroupEgressOutput() SecurityGroupEgressOutput {
	return o
}

func (o SecurityGroupEgressOutput) ToSecurityGroupEgressOutputWithContext(ctx context.Context) SecurityGroupEgressOutput {
	return o
}

// List of CIDR blocks.
func (o SecurityGroupEgressOutput) CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupEgress) []string { return v.CidrBlocks }).(pulumi.StringArrayOutput)
}

// Description of this egress rule.
func (o SecurityGroupEgressOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityGroupEgress) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The start port (or ICMP type number if protocol is "icmp")
func (o SecurityGroupEgressOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityGroupEgress) int { return v.FromPort }).(pulumi.IntOutput)
}

// List of IPv6 CIDR blocks.
func (o SecurityGroupEgressOutput) Ipv6CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupEgress) []string { return v.Ipv6CidrBlocks }).(pulumi.StringArrayOutput)
}

// List of prefix list IDs (for allowing access to VPC endpoints)
func (o SecurityGroupEgressOutput) PrefixListIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupEgress) []string { return v.PrefixListIds }).(pulumi.StringArrayOutput)
}

// The protocol. If you select a protocol of
// "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "fromPort" and "toPort" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
func (o SecurityGroupEgressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupEgress) string { return v.Protocol }).(pulumi.StringOutput)
}

// List of security group Group Names if using
// EC2-Classic, or Group IDs if using a VPC.
func (o SecurityGroupEgressOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupEgress) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// If true, the security group itself will be added as
// a source to this egress rule.
func (o SecurityGroupEgressOutput) Self() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecurityGroupEgress) *bool { return v.Self }).(pulumi.BoolPtrOutput)
}

// The end range port (or ICMP code if protocol is "icmp").
func (o SecurityGroupEgressOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityGroupEgress) int { return v.ToPort }).(pulumi.IntOutput)
}

type SecurityGroupEgressArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupEgressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupEgress)(nil)).Elem()
}

func (o SecurityGroupEgressArrayOutput) ToSecurityGroupEgressArrayOutput() SecurityGroupEgressArrayOutput {
	return o
}

func (o SecurityGroupEgressArrayOutput) ToSecurityGroupEgressArrayOutputWithContext(ctx context.Context) SecurityGroupEgressArrayOutput {
	return o
}

func (o SecurityGroupEgressArrayOutput) Index(i pulumi.IntInput) SecurityGroupEgressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGroupEgress {
		return vs[0].([]SecurityGroupEgress)[vs[1].(int)]
	}).(SecurityGroupEgressOutput)
}

type SecurityGroupEgressArgs struct {
	// List of CIDR blocks.
	CidrBlocks []string `pulumi:"cidrBlocks"`
	// Description of this egress rule.
	Description *string `pulumi:"description"`
	// The start port (or ICMP type number if protocol is "icmp")
	FromPort int `pulumi:"fromPort"`
	// List of IPv6 CIDR blocks.
	Ipv6CidrBlocks []string `pulumi:"ipv6CidrBlocks"`
	// List of prefix list IDs (for allowing access to VPC endpoints)
	PrefixListIds []string `pulumi:"prefixListIds"`
	// The protocol. If you select a protocol of
	// "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "fromPort" and "toPort" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
	Protocol string `pulumi:"protocol"`
	// List of security group Group Names if using
	// EC2-Classic, or Group IDs if using a VPC.
	SecurityGroups []string `pulumi:"securityGroups"`
	// If true, the security group itself will be added as
	// a source to this egress rule.
	Self *bool `pulumi:"self"`
	// The end range port (or ICMP code if protocol is "icmp").
	ToPort int `pulumi:"toPort"`
}

type SecurityGroupEgressArgsInput interface {
	pulumi.Input

	ToSecurityGroupEgressArgsOutput() SecurityGroupEgressArgsOutput
	ToSecurityGroupEgressArgsOutputWithContext(context.Context) SecurityGroupEgressArgsOutput
}

type SecurityGroupEgressArgsArgs struct {
	// List of CIDR blocks.
	CidrBlocks pulumi.StringArrayInput `pulumi:"cidrBlocks"`
	// Description of this egress rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The start port (or ICMP type number if protocol is "icmp")
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// List of IPv6 CIDR blocks.
	Ipv6CidrBlocks pulumi.StringArrayInput `pulumi:"ipv6CidrBlocks"`
	// List of prefix list IDs (for allowing access to VPC endpoints)
	PrefixListIds pulumi.StringArrayInput `pulumi:"prefixListIds"`
	// The protocol. If you select a protocol of
	// "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "fromPort" and "toPort" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// List of security group Group Names if using
	// EC2-Classic, or Group IDs if using a VPC.
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// If true, the security group itself will be added as
	// a source to this egress rule.
	Self pulumi.BoolPtrInput `pulumi:"self"`
	// The end range port (or ICMP code if protocol is "icmp").
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (SecurityGroupEgressArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupEgressArgs)(nil)).Elem()
}

func (i SecurityGroupEgressArgsArgs) ToSecurityGroupEgressArgsOutput() SecurityGroupEgressArgsOutput {
	return i.ToSecurityGroupEgressArgsOutputWithContext(context.Background())
}

func (i SecurityGroupEgressArgsArgs) ToSecurityGroupEgressArgsOutputWithContext(ctx context.Context) SecurityGroupEgressArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupEgressArgsOutput)
}

type SecurityGroupEgressArgsArrayInput interface {
	pulumi.Input

	ToSecurityGroupEgressArgsArrayOutput() SecurityGroupEgressArgsArrayOutput
	ToSecurityGroupEgressArgsArrayOutputWithContext(context.Context) SecurityGroupEgressArgsArrayOutput
}

type SecurityGroupEgressArgsArray []SecurityGroupEgressArgsInput

func (SecurityGroupEgressArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupEgressArgs)(nil)).Elem()
}

func (i SecurityGroupEgressArgsArray) ToSecurityGroupEgressArgsArrayOutput() SecurityGroupEgressArgsArrayOutput {
	return i.ToSecurityGroupEgressArgsArrayOutputWithContext(context.Background())
}

func (i SecurityGroupEgressArgsArray) ToSecurityGroupEgressArgsArrayOutputWithContext(ctx context.Context) SecurityGroupEgressArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupEgressArgsArrayOutput)
}

type SecurityGroupEgressArgsOutput struct{ *pulumi.OutputState }

func (SecurityGroupEgressArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupEgressArgs)(nil)).Elem()
}

func (o SecurityGroupEgressArgsOutput) ToSecurityGroupEgressArgsOutput() SecurityGroupEgressArgsOutput {
	return o
}

func (o SecurityGroupEgressArgsOutput) ToSecurityGroupEgressArgsOutputWithContext(ctx context.Context) SecurityGroupEgressArgsOutput {
	return o
}

// List of CIDR blocks.
func (o SecurityGroupEgressArgsOutput) CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupEgressArgs) []string { return v.CidrBlocks }).(pulumi.StringArrayOutput)
}

// Description of this egress rule.
func (o SecurityGroupEgressArgsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityGroupEgressArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The start port (or ICMP type number if protocol is "icmp")
func (o SecurityGroupEgressArgsOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityGroupEgressArgs) int { return v.FromPort }).(pulumi.IntOutput)
}

// List of IPv6 CIDR blocks.
func (o SecurityGroupEgressArgsOutput) Ipv6CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupEgressArgs) []string { return v.Ipv6CidrBlocks }).(pulumi.StringArrayOutput)
}

// List of prefix list IDs (for allowing access to VPC endpoints)
func (o SecurityGroupEgressArgsOutput) PrefixListIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupEgressArgs) []string { return v.PrefixListIds }).(pulumi.StringArrayOutput)
}

// The protocol. If you select a protocol of
// "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "fromPort" and "toPort" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
func (o SecurityGroupEgressArgsOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupEgressArgs) string { return v.Protocol }).(pulumi.StringOutput)
}

// List of security group Group Names if using
// EC2-Classic, or Group IDs if using a VPC.
func (o SecurityGroupEgressArgsOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupEgressArgs) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// If true, the security group itself will be added as
// a source to this egress rule.
func (o SecurityGroupEgressArgsOutput) Self() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecurityGroupEgressArgs) *bool { return v.Self }).(pulumi.BoolPtrOutput)
}

// The end range port (or ICMP code if protocol is "icmp").
func (o SecurityGroupEgressArgsOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityGroupEgressArgs) int { return v.ToPort }).(pulumi.IntOutput)
}

type SecurityGroupEgressArgsArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupEgressArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupEgressArgs)(nil)).Elem()
}

func (o SecurityGroupEgressArgsArrayOutput) ToSecurityGroupEgressArgsArrayOutput() SecurityGroupEgressArgsArrayOutput {
	return o
}

func (o SecurityGroupEgressArgsArrayOutput) ToSecurityGroupEgressArgsArrayOutputWithContext(ctx context.Context) SecurityGroupEgressArgsArrayOutput {
	return o
}

func (o SecurityGroupEgressArgsArrayOutput) Index(i pulumi.IntInput) SecurityGroupEgressArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGroupEgressArgs {
		return vs[0].([]SecurityGroupEgressArgs)[vs[1].(int)]
	}).(SecurityGroupEgressArgsOutput)
}

type SecurityGroupEgressState struct {
	// List of CIDR blocks.
	CidrBlocks []string `pulumi:"cidrBlocks"`
	// Description of this egress rule.
	Description *string `pulumi:"description"`
	// The start port (or ICMP type number if protocol is "icmp")
	FromPort int `pulumi:"fromPort"`
	// List of IPv6 CIDR blocks.
	Ipv6CidrBlocks []string `pulumi:"ipv6CidrBlocks"`
	// List of prefix list IDs (for allowing access to VPC endpoints)
	PrefixListIds []string `pulumi:"prefixListIds"`
	// The protocol. If you select a protocol of
	// "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "fromPort" and "toPort" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
	Protocol string `pulumi:"protocol"`
	// List of security group Group Names if using
	// EC2-Classic, or Group IDs if using a VPC.
	SecurityGroups []string `pulumi:"securityGroups"`
	// If true, the security group itself will be added as
	// a source to this egress rule.
	Self *bool `pulumi:"self"`
	// The end range port (or ICMP code if protocol is "icmp").
	ToPort int `pulumi:"toPort"`
}

type SecurityGroupEgressStateInput interface {
	pulumi.Input

	ToSecurityGroupEgressStateOutput() SecurityGroupEgressStateOutput
	ToSecurityGroupEgressStateOutputWithContext(context.Context) SecurityGroupEgressStateOutput
}

type SecurityGroupEgressStateArgs struct {
	// List of CIDR blocks.
	CidrBlocks pulumi.StringArrayInput `pulumi:"cidrBlocks"`
	// Description of this egress rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The start port (or ICMP type number if protocol is "icmp")
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// List of IPv6 CIDR blocks.
	Ipv6CidrBlocks pulumi.StringArrayInput `pulumi:"ipv6CidrBlocks"`
	// List of prefix list IDs (for allowing access to VPC endpoints)
	PrefixListIds pulumi.StringArrayInput `pulumi:"prefixListIds"`
	// The protocol. If you select a protocol of
	// "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "fromPort" and "toPort" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// List of security group Group Names if using
	// EC2-Classic, or Group IDs if using a VPC.
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// If true, the security group itself will be added as
	// a source to this egress rule.
	Self pulumi.BoolPtrInput `pulumi:"self"`
	// The end range port (or ICMP code if protocol is "icmp").
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (SecurityGroupEgressStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupEgressState)(nil)).Elem()
}

func (i SecurityGroupEgressStateArgs) ToSecurityGroupEgressStateOutput() SecurityGroupEgressStateOutput {
	return i.ToSecurityGroupEgressStateOutputWithContext(context.Background())
}

func (i SecurityGroupEgressStateArgs) ToSecurityGroupEgressStateOutputWithContext(ctx context.Context) SecurityGroupEgressStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupEgressStateOutput)
}

type SecurityGroupEgressStateArrayInput interface {
	pulumi.Input

	ToSecurityGroupEgressStateArrayOutput() SecurityGroupEgressStateArrayOutput
	ToSecurityGroupEgressStateArrayOutputWithContext(context.Context) SecurityGroupEgressStateArrayOutput
}

type SecurityGroupEgressStateArray []SecurityGroupEgressStateInput

func (SecurityGroupEgressStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupEgressState)(nil)).Elem()
}

func (i SecurityGroupEgressStateArray) ToSecurityGroupEgressStateArrayOutput() SecurityGroupEgressStateArrayOutput {
	return i.ToSecurityGroupEgressStateArrayOutputWithContext(context.Background())
}

func (i SecurityGroupEgressStateArray) ToSecurityGroupEgressStateArrayOutputWithContext(ctx context.Context) SecurityGroupEgressStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupEgressStateArrayOutput)
}

type SecurityGroupEgressStateOutput struct{ *pulumi.OutputState }

func (SecurityGroupEgressStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupEgressState)(nil)).Elem()
}

func (o SecurityGroupEgressStateOutput) ToSecurityGroupEgressStateOutput() SecurityGroupEgressStateOutput {
	return o
}

func (o SecurityGroupEgressStateOutput) ToSecurityGroupEgressStateOutputWithContext(ctx context.Context) SecurityGroupEgressStateOutput {
	return o
}

// List of CIDR blocks.
func (o SecurityGroupEgressStateOutput) CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupEgressState) []string { return v.CidrBlocks }).(pulumi.StringArrayOutput)
}

// Description of this egress rule.
func (o SecurityGroupEgressStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityGroupEgressState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The start port (or ICMP type number if protocol is "icmp")
func (o SecurityGroupEgressStateOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityGroupEgressState) int { return v.FromPort }).(pulumi.IntOutput)
}

// List of IPv6 CIDR blocks.
func (o SecurityGroupEgressStateOutput) Ipv6CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupEgressState) []string { return v.Ipv6CidrBlocks }).(pulumi.StringArrayOutput)
}

// List of prefix list IDs (for allowing access to VPC endpoints)
func (o SecurityGroupEgressStateOutput) PrefixListIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupEgressState) []string { return v.PrefixListIds }).(pulumi.StringArrayOutput)
}

// The protocol. If you select a protocol of
// "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "fromPort" and "toPort" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
func (o SecurityGroupEgressStateOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupEgressState) string { return v.Protocol }).(pulumi.StringOutput)
}

// List of security group Group Names if using
// EC2-Classic, or Group IDs if using a VPC.
func (o SecurityGroupEgressStateOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupEgressState) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// If true, the security group itself will be added as
// a source to this egress rule.
func (o SecurityGroupEgressStateOutput) Self() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecurityGroupEgressState) *bool { return v.Self }).(pulumi.BoolPtrOutput)
}

// The end range port (or ICMP code if protocol is "icmp").
func (o SecurityGroupEgressStateOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityGroupEgressState) int { return v.ToPort }).(pulumi.IntOutput)
}

type SecurityGroupEgressStateArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupEgressStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupEgressState)(nil)).Elem()
}

func (o SecurityGroupEgressStateArrayOutput) ToSecurityGroupEgressStateArrayOutput() SecurityGroupEgressStateArrayOutput {
	return o
}

func (o SecurityGroupEgressStateArrayOutput) ToSecurityGroupEgressStateArrayOutputWithContext(ctx context.Context) SecurityGroupEgressStateArrayOutput {
	return o
}

func (o SecurityGroupEgressStateArrayOutput) Index(i pulumi.IntInput) SecurityGroupEgressStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGroupEgressState {
		return vs[0].([]SecurityGroupEgressState)[vs[1].(int)]
	}).(SecurityGroupEgressStateOutput)
}

type SecurityGroupIngress struct {
	// List of CIDR blocks.
	CidrBlocks []string `pulumi:"cidrBlocks"`
	// Description of this egress rule.
	Description *string `pulumi:"description"`
	// The start port (or ICMP type number if protocol is "icmp")
	FromPort int `pulumi:"fromPort"`
	// List of IPv6 CIDR blocks.
	Ipv6CidrBlocks []string `pulumi:"ipv6CidrBlocks"`
	// List of prefix list IDs (for allowing access to VPC endpoints)
	PrefixListIds []string `pulumi:"prefixListIds"`
	// The protocol. If you select a protocol of
	// "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "fromPort" and "toPort" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
	Protocol string `pulumi:"protocol"`
	// List of security group Group Names if using
	// EC2-Classic, or Group IDs if using a VPC.
	SecurityGroups []string `pulumi:"securityGroups"`
	// If true, the security group itself will be added as
	// a source to this egress rule.
	Self *bool `pulumi:"self"`
	// The end range port (or ICMP code if protocol is "icmp").
	ToPort int `pulumi:"toPort"`
}

type SecurityGroupIngressInput interface {
	pulumi.Input

	ToSecurityGroupIngressOutput() SecurityGroupIngressOutput
	ToSecurityGroupIngressOutputWithContext(context.Context) SecurityGroupIngressOutput
}

type SecurityGroupIngressArgs struct {
	// List of CIDR blocks.
	CidrBlocks pulumi.StringArrayInput `pulumi:"cidrBlocks"`
	// Description of this egress rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The start port (or ICMP type number if protocol is "icmp")
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// List of IPv6 CIDR blocks.
	Ipv6CidrBlocks pulumi.StringArrayInput `pulumi:"ipv6CidrBlocks"`
	// List of prefix list IDs (for allowing access to VPC endpoints)
	PrefixListIds pulumi.StringArrayInput `pulumi:"prefixListIds"`
	// The protocol. If you select a protocol of
	// "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "fromPort" and "toPort" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// List of security group Group Names if using
	// EC2-Classic, or Group IDs if using a VPC.
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// If true, the security group itself will be added as
	// a source to this egress rule.
	Self pulumi.BoolPtrInput `pulumi:"self"`
	// The end range port (or ICMP code if protocol is "icmp").
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (SecurityGroupIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupIngress)(nil)).Elem()
}

func (i SecurityGroupIngressArgs) ToSecurityGroupIngressOutput() SecurityGroupIngressOutput {
	return i.ToSecurityGroupIngressOutputWithContext(context.Background())
}

func (i SecurityGroupIngressArgs) ToSecurityGroupIngressOutputWithContext(ctx context.Context) SecurityGroupIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupIngressOutput)
}

type SecurityGroupIngressArrayInput interface {
	pulumi.Input

	ToSecurityGroupIngressArrayOutput() SecurityGroupIngressArrayOutput
	ToSecurityGroupIngressArrayOutputWithContext(context.Context) SecurityGroupIngressArrayOutput
}

type SecurityGroupIngressArray []SecurityGroupIngressInput

func (SecurityGroupIngressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupIngress)(nil)).Elem()
}

func (i SecurityGroupIngressArray) ToSecurityGroupIngressArrayOutput() SecurityGroupIngressArrayOutput {
	return i.ToSecurityGroupIngressArrayOutputWithContext(context.Background())
}

func (i SecurityGroupIngressArray) ToSecurityGroupIngressArrayOutputWithContext(ctx context.Context) SecurityGroupIngressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupIngressArrayOutput)
}

type SecurityGroupIngressOutput struct{ *pulumi.OutputState }

func (SecurityGroupIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupIngress)(nil)).Elem()
}

func (o SecurityGroupIngressOutput) ToSecurityGroupIngressOutput() SecurityGroupIngressOutput {
	return o
}

func (o SecurityGroupIngressOutput) ToSecurityGroupIngressOutputWithContext(ctx context.Context) SecurityGroupIngressOutput {
	return o
}

// List of CIDR blocks.
func (o SecurityGroupIngressOutput) CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupIngress) []string { return v.CidrBlocks }).(pulumi.StringArrayOutput)
}

// Description of this egress rule.
func (o SecurityGroupIngressOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityGroupIngress) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The start port (or ICMP type number if protocol is "icmp")
func (o SecurityGroupIngressOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityGroupIngress) int { return v.FromPort }).(pulumi.IntOutput)
}

// List of IPv6 CIDR blocks.
func (o SecurityGroupIngressOutput) Ipv6CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupIngress) []string { return v.Ipv6CidrBlocks }).(pulumi.StringArrayOutput)
}

// List of prefix list IDs (for allowing access to VPC endpoints)
func (o SecurityGroupIngressOutput) PrefixListIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupIngress) []string { return v.PrefixListIds }).(pulumi.StringArrayOutput)
}

// The protocol. If you select a protocol of
// "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "fromPort" and "toPort" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
func (o SecurityGroupIngressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupIngress) string { return v.Protocol }).(pulumi.StringOutput)
}

// List of security group Group Names if using
// EC2-Classic, or Group IDs if using a VPC.
func (o SecurityGroupIngressOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupIngress) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// If true, the security group itself will be added as
// a source to this egress rule.
func (o SecurityGroupIngressOutput) Self() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecurityGroupIngress) *bool { return v.Self }).(pulumi.BoolPtrOutput)
}

// The end range port (or ICMP code if protocol is "icmp").
func (o SecurityGroupIngressOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityGroupIngress) int { return v.ToPort }).(pulumi.IntOutput)
}

type SecurityGroupIngressArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupIngressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupIngress)(nil)).Elem()
}

func (o SecurityGroupIngressArrayOutput) ToSecurityGroupIngressArrayOutput() SecurityGroupIngressArrayOutput {
	return o
}

func (o SecurityGroupIngressArrayOutput) ToSecurityGroupIngressArrayOutputWithContext(ctx context.Context) SecurityGroupIngressArrayOutput {
	return o
}

func (o SecurityGroupIngressArrayOutput) Index(i pulumi.IntInput) SecurityGroupIngressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGroupIngress {
		return vs[0].([]SecurityGroupIngress)[vs[1].(int)]
	}).(SecurityGroupIngressOutput)
}

type SecurityGroupIngressArgs struct {
	// List of CIDR blocks.
	CidrBlocks []string `pulumi:"cidrBlocks"`
	// Description of this egress rule.
	Description *string `pulumi:"description"`
	// The start port (or ICMP type number if protocol is "icmp")
	FromPort int `pulumi:"fromPort"`
	// List of IPv6 CIDR blocks.
	Ipv6CidrBlocks []string `pulumi:"ipv6CidrBlocks"`
	// List of prefix list IDs (for allowing access to VPC endpoints)
	PrefixListIds []string `pulumi:"prefixListIds"`
	// The protocol. If you select a protocol of
	// "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "fromPort" and "toPort" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
	Protocol string `pulumi:"protocol"`
	// List of security group Group Names if using
	// EC2-Classic, or Group IDs if using a VPC.
	SecurityGroups []string `pulumi:"securityGroups"`
	// If true, the security group itself will be added as
	// a source to this egress rule.
	Self *bool `pulumi:"self"`
	// The end range port (or ICMP code if protocol is "icmp").
	ToPort int `pulumi:"toPort"`
}

type SecurityGroupIngressArgsInput interface {
	pulumi.Input

	ToSecurityGroupIngressArgsOutput() SecurityGroupIngressArgsOutput
	ToSecurityGroupIngressArgsOutputWithContext(context.Context) SecurityGroupIngressArgsOutput
}

type SecurityGroupIngressArgsArgs struct {
	// List of CIDR blocks.
	CidrBlocks pulumi.StringArrayInput `pulumi:"cidrBlocks"`
	// Description of this egress rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The start port (or ICMP type number if protocol is "icmp")
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// List of IPv6 CIDR blocks.
	Ipv6CidrBlocks pulumi.StringArrayInput `pulumi:"ipv6CidrBlocks"`
	// List of prefix list IDs (for allowing access to VPC endpoints)
	PrefixListIds pulumi.StringArrayInput `pulumi:"prefixListIds"`
	// The protocol. If you select a protocol of
	// "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "fromPort" and "toPort" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// List of security group Group Names if using
	// EC2-Classic, or Group IDs if using a VPC.
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// If true, the security group itself will be added as
	// a source to this egress rule.
	Self pulumi.BoolPtrInput `pulumi:"self"`
	// The end range port (or ICMP code if protocol is "icmp").
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (SecurityGroupIngressArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupIngressArgs)(nil)).Elem()
}

func (i SecurityGroupIngressArgsArgs) ToSecurityGroupIngressArgsOutput() SecurityGroupIngressArgsOutput {
	return i.ToSecurityGroupIngressArgsOutputWithContext(context.Background())
}

func (i SecurityGroupIngressArgsArgs) ToSecurityGroupIngressArgsOutputWithContext(ctx context.Context) SecurityGroupIngressArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupIngressArgsOutput)
}

type SecurityGroupIngressArgsArrayInput interface {
	pulumi.Input

	ToSecurityGroupIngressArgsArrayOutput() SecurityGroupIngressArgsArrayOutput
	ToSecurityGroupIngressArgsArrayOutputWithContext(context.Context) SecurityGroupIngressArgsArrayOutput
}

type SecurityGroupIngressArgsArray []SecurityGroupIngressArgsInput

func (SecurityGroupIngressArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupIngressArgs)(nil)).Elem()
}

func (i SecurityGroupIngressArgsArray) ToSecurityGroupIngressArgsArrayOutput() SecurityGroupIngressArgsArrayOutput {
	return i.ToSecurityGroupIngressArgsArrayOutputWithContext(context.Background())
}

func (i SecurityGroupIngressArgsArray) ToSecurityGroupIngressArgsArrayOutputWithContext(ctx context.Context) SecurityGroupIngressArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupIngressArgsArrayOutput)
}

type SecurityGroupIngressArgsOutput struct{ *pulumi.OutputState }

func (SecurityGroupIngressArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupIngressArgs)(nil)).Elem()
}

func (o SecurityGroupIngressArgsOutput) ToSecurityGroupIngressArgsOutput() SecurityGroupIngressArgsOutput {
	return o
}

func (o SecurityGroupIngressArgsOutput) ToSecurityGroupIngressArgsOutputWithContext(ctx context.Context) SecurityGroupIngressArgsOutput {
	return o
}

// List of CIDR blocks.
func (o SecurityGroupIngressArgsOutput) CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupIngressArgs) []string { return v.CidrBlocks }).(pulumi.StringArrayOutput)
}

// Description of this egress rule.
func (o SecurityGroupIngressArgsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityGroupIngressArgs) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The start port (or ICMP type number if protocol is "icmp")
func (o SecurityGroupIngressArgsOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityGroupIngressArgs) int { return v.FromPort }).(pulumi.IntOutput)
}

// List of IPv6 CIDR blocks.
func (o SecurityGroupIngressArgsOutput) Ipv6CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupIngressArgs) []string { return v.Ipv6CidrBlocks }).(pulumi.StringArrayOutput)
}

// List of prefix list IDs (for allowing access to VPC endpoints)
func (o SecurityGroupIngressArgsOutput) PrefixListIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupIngressArgs) []string { return v.PrefixListIds }).(pulumi.StringArrayOutput)
}

// The protocol. If you select a protocol of
// "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "fromPort" and "toPort" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
func (o SecurityGroupIngressArgsOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupIngressArgs) string { return v.Protocol }).(pulumi.StringOutput)
}

// List of security group Group Names if using
// EC2-Classic, or Group IDs if using a VPC.
func (o SecurityGroupIngressArgsOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupIngressArgs) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// If true, the security group itself will be added as
// a source to this egress rule.
func (o SecurityGroupIngressArgsOutput) Self() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecurityGroupIngressArgs) *bool { return v.Self }).(pulumi.BoolPtrOutput)
}

// The end range port (or ICMP code if protocol is "icmp").
func (o SecurityGroupIngressArgsOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityGroupIngressArgs) int { return v.ToPort }).(pulumi.IntOutput)
}

type SecurityGroupIngressArgsArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupIngressArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupIngressArgs)(nil)).Elem()
}

func (o SecurityGroupIngressArgsArrayOutput) ToSecurityGroupIngressArgsArrayOutput() SecurityGroupIngressArgsArrayOutput {
	return o
}

func (o SecurityGroupIngressArgsArrayOutput) ToSecurityGroupIngressArgsArrayOutputWithContext(ctx context.Context) SecurityGroupIngressArgsArrayOutput {
	return o
}

func (o SecurityGroupIngressArgsArrayOutput) Index(i pulumi.IntInput) SecurityGroupIngressArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGroupIngressArgs {
		return vs[0].([]SecurityGroupIngressArgs)[vs[1].(int)]
	}).(SecurityGroupIngressArgsOutput)
}

type SecurityGroupIngressState struct {
	// List of CIDR blocks.
	CidrBlocks []string `pulumi:"cidrBlocks"`
	// Description of this egress rule.
	Description *string `pulumi:"description"`
	// The start port (or ICMP type number if protocol is "icmp")
	FromPort int `pulumi:"fromPort"`
	// List of IPv6 CIDR blocks.
	Ipv6CidrBlocks []string `pulumi:"ipv6CidrBlocks"`
	// List of prefix list IDs (for allowing access to VPC endpoints)
	PrefixListIds []string `pulumi:"prefixListIds"`
	// The protocol. If you select a protocol of
	// "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "fromPort" and "toPort" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
	Protocol string `pulumi:"protocol"`
	// List of security group Group Names if using
	// EC2-Classic, or Group IDs if using a VPC.
	SecurityGroups []string `pulumi:"securityGroups"`
	// If true, the security group itself will be added as
	// a source to this egress rule.
	Self *bool `pulumi:"self"`
	// The end range port (or ICMP code if protocol is "icmp").
	ToPort int `pulumi:"toPort"`
}

type SecurityGroupIngressStateInput interface {
	pulumi.Input

	ToSecurityGroupIngressStateOutput() SecurityGroupIngressStateOutput
	ToSecurityGroupIngressStateOutputWithContext(context.Context) SecurityGroupIngressStateOutput
}

type SecurityGroupIngressStateArgs struct {
	// List of CIDR blocks.
	CidrBlocks pulumi.StringArrayInput `pulumi:"cidrBlocks"`
	// Description of this egress rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The start port (or ICMP type number if protocol is "icmp")
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// List of IPv6 CIDR blocks.
	Ipv6CidrBlocks pulumi.StringArrayInput `pulumi:"ipv6CidrBlocks"`
	// List of prefix list IDs (for allowing access to VPC endpoints)
	PrefixListIds pulumi.StringArrayInput `pulumi:"prefixListIds"`
	// The protocol. If you select a protocol of
	// "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "fromPort" and "toPort" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// List of security group Group Names if using
	// EC2-Classic, or Group IDs if using a VPC.
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// If true, the security group itself will be added as
	// a source to this egress rule.
	Self pulumi.BoolPtrInput `pulumi:"self"`
	// The end range port (or ICMP code if protocol is "icmp").
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (SecurityGroupIngressStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupIngressState)(nil)).Elem()
}

func (i SecurityGroupIngressStateArgs) ToSecurityGroupIngressStateOutput() SecurityGroupIngressStateOutput {
	return i.ToSecurityGroupIngressStateOutputWithContext(context.Background())
}

func (i SecurityGroupIngressStateArgs) ToSecurityGroupIngressStateOutputWithContext(ctx context.Context) SecurityGroupIngressStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupIngressStateOutput)
}

type SecurityGroupIngressStateArrayInput interface {
	pulumi.Input

	ToSecurityGroupIngressStateArrayOutput() SecurityGroupIngressStateArrayOutput
	ToSecurityGroupIngressStateArrayOutputWithContext(context.Context) SecurityGroupIngressStateArrayOutput
}

type SecurityGroupIngressStateArray []SecurityGroupIngressStateInput

func (SecurityGroupIngressStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupIngressState)(nil)).Elem()
}

func (i SecurityGroupIngressStateArray) ToSecurityGroupIngressStateArrayOutput() SecurityGroupIngressStateArrayOutput {
	return i.ToSecurityGroupIngressStateArrayOutputWithContext(context.Background())
}

func (i SecurityGroupIngressStateArray) ToSecurityGroupIngressStateArrayOutputWithContext(ctx context.Context) SecurityGroupIngressStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupIngressStateArrayOutput)
}

type SecurityGroupIngressStateOutput struct{ *pulumi.OutputState }

func (SecurityGroupIngressStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupIngressState)(nil)).Elem()
}

func (o SecurityGroupIngressStateOutput) ToSecurityGroupIngressStateOutput() SecurityGroupIngressStateOutput {
	return o
}

func (o SecurityGroupIngressStateOutput) ToSecurityGroupIngressStateOutputWithContext(ctx context.Context) SecurityGroupIngressStateOutput {
	return o
}

// List of CIDR blocks.
func (o SecurityGroupIngressStateOutput) CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupIngressState) []string { return v.CidrBlocks }).(pulumi.StringArrayOutput)
}

// Description of this egress rule.
func (o SecurityGroupIngressStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityGroupIngressState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The start port (or ICMP type number if protocol is "icmp")
func (o SecurityGroupIngressStateOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityGroupIngressState) int { return v.FromPort }).(pulumi.IntOutput)
}

// List of IPv6 CIDR blocks.
func (o SecurityGroupIngressStateOutput) Ipv6CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupIngressState) []string { return v.Ipv6CidrBlocks }).(pulumi.StringArrayOutput)
}

// List of prefix list IDs (for allowing access to VPC endpoints)
func (o SecurityGroupIngressStateOutput) PrefixListIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupIngressState) []string { return v.PrefixListIds }).(pulumi.StringArrayOutput)
}

// The protocol. If you select a protocol of
// "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "fromPort" and "toPort" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
func (o SecurityGroupIngressStateOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupIngressState) string { return v.Protocol }).(pulumi.StringOutput)
}

// List of security group Group Names if using
// EC2-Classic, or Group IDs if using a VPC.
func (o SecurityGroupIngressStateOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupIngressState) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// If true, the security group itself will be added as
// a source to this egress rule.
func (o SecurityGroupIngressStateOutput) Self() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecurityGroupIngressState) *bool { return v.Self }).(pulumi.BoolPtrOutput)
}

// The end range port (or ICMP code if protocol is "icmp").
func (o SecurityGroupIngressStateOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityGroupIngressState) int { return v.ToPort }).(pulumi.IntOutput)
}

type SecurityGroupIngressStateArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupIngressStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupIngressState)(nil)).Elem()
}

func (o SecurityGroupIngressStateArrayOutput) ToSecurityGroupIngressStateArrayOutput() SecurityGroupIngressStateArrayOutput {
	return o
}

func (o SecurityGroupIngressStateArrayOutput) ToSecurityGroupIngressStateArrayOutputWithContext(ctx context.Context) SecurityGroupIngressStateArrayOutput {
	return o
}

func (o SecurityGroupIngressStateArrayOutput) Index(i pulumi.IntInput) SecurityGroupIngressStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGroupIngressState {
		return vs[0].([]SecurityGroupIngressState)[vs[1].(int)]
	}).(SecurityGroupIngressStateOutput)
}

type SpotFleetRequestLaunchSpecification struct {
	Ami                      string                                                    `pulumi:"ami"`
	AssociatePublicIpAddress *bool                                                     `pulumi:"associatePublicIpAddress"`
	AvailabilityZone         string                                                    `pulumi:"availabilityZone"`
	EbsBlockDevices          []SpotFleetRequestLaunchSpecificationEbsBlockDevice       `pulumi:"ebsBlockDevices"`
	EbsOptimized             *bool                                                     `pulumi:"ebsOptimized"`
	EphemeralBlockDevices    []SpotFleetRequestLaunchSpecificationEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	IamInstanceProfile       *string                                                   `pulumi:"iamInstanceProfile"`
	IamInstanceProfileArn    *string                                                   `pulumi:"iamInstanceProfileArn"`
	InstanceType             string                                                    `pulumi:"instanceType"`
	KeyName                  string                                                    `pulumi:"keyName"`
	Monitoring               *bool                                                     `pulumi:"monitoring"`
	PlacementGroup           string                                                    `pulumi:"placementGroup"`
	PlacementTenancy         *string                                                   `pulumi:"placementTenancy"`
	RootBlockDevices         []SpotFleetRequestLaunchSpecificationRootBlockDevice      `pulumi:"rootBlockDevices"`
	// The maximum bid price per unit hour.
	SpotPrice *string `pulumi:"spotPrice"`
	SubnetId  string  `pulumi:"subnetId"`
	// A mapping of tags to assign to the resource.
	Tags                map[string]interface{} `pulumi:"tags"`
	UserData            *string                `pulumi:"userData"`
	VpcSecurityGroupIds []string               `pulumi:"vpcSecurityGroupIds"`
	WeightedCapacity    *string                `pulumi:"weightedCapacity"`
}

type SpotFleetRequestLaunchSpecificationInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationOutput() SpotFleetRequestLaunchSpecificationOutput
	ToSpotFleetRequestLaunchSpecificationOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationOutput
}

type SpotFleetRequestLaunchSpecificationArgs struct {
	Ami                      pulumi.StringInput                                                `pulumi:"ami"`
	AssociatePublicIpAddress pulumi.BoolPtrInput                                               `pulumi:"associatePublicIpAddress"`
	AvailabilityZone         pulumi.StringInput                                                `pulumi:"availabilityZone"`
	EbsBlockDevices          SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayInput       `pulumi:"ebsBlockDevices"`
	EbsOptimized             pulumi.BoolPtrInput                                               `pulumi:"ebsOptimized"`
	EphemeralBlockDevices    SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayInput `pulumi:"ephemeralBlockDevices"`
	IamInstanceProfile       pulumi.StringPtrInput                                             `pulumi:"iamInstanceProfile"`
	IamInstanceProfileArn    pulumi.StringPtrInput                                             `pulumi:"iamInstanceProfileArn"`
	InstanceType             pulumi.StringInput                                                `pulumi:"instanceType"`
	KeyName                  pulumi.StringInput                                                `pulumi:"keyName"`
	Monitoring               pulumi.BoolPtrInput                                               `pulumi:"monitoring"`
	PlacementGroup           pulumi.StringInput                                                `pulumi:"placementGroup"`
	PlacementTenancy         pulumi.StringPtrInput                                             `pulumi:"placementTenancy"`
	RootBlockDevices         SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayInput      `pulumi:"rootBlockDevices"`
	// The maximum bid price per unit hour.
	SpotPrice pulumi.StringPtrInput `pulumi:"spotPrice"`
	SubnetId  pulumi.StringInput    `pulumi:"subnetId"`
	// A mapping of tags to assign to the resource.
	Tags                pulumi.MapInput         `pulumi:"tags"`
	UserData            pulumi.StringPtrInput   `pulumi:"userData"`
	VpcSecurityGroupIds pulumi.StringArrayInput `pulumi:"vpcSecurityGroupIds"`
	WeightedCapacity    pulumi.StringPtrInput   `pulumi:"weightedCapacity"`
}

func (SpotFleetRequestLaunchSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecification)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationArgs) ToSpotFleetRequestLaunchSpecificationOutput() SpotFleetRequestLaunchSpecificationOutput {
	return i.ToSpotFleetRequestLaunchSpecificationOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationArgs) ToSpotFleetRequestLaunchSpecificationOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationOutput)
}

type SpotFleetRequestLaunchSpecificationArrayInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationArrayOutput() SpotFleetRequestLaunchSpecificationArrayOutput
	ToSpotFleetRequestLaunchSpecificationArrayOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationArrayOutput
}

type SpotFleetRequestLaunchSpecificationArray []SpotFleetRequestLaunchSpecificationInput

func (SpotFleetRequestLaunchSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecification)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationArray) ToSpotFleetRequestLaunchSpecificationArrayOutput() SpotFleetRequestLaunchSpecificationArrayOutput {
	return i.ToSpotFleetRequestLaunchSpecificationArrayOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationArray) ToSpotFleetRequestLaunchSpecificationArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationArrayOutput)
}

type SpotFleetRequestLaunchSpecificationOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecification)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationOutput) ToSpotFleetRequestLaunchSpecificationOutput() SpotFleetRequestLaunchSpecificationOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationOutput) ToSpotFleetRequestLaunchSpecificationOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationOutput) Ami() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) string { return v.Ami }).(pulumi.StringOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) AssociatePublicIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *bool { return v.AssociatePublicIpAddress }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) EbsBlockDevices() SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) []SpotFleetRequestLaunchSpecificationEbsBlockDevice {
		return v.EbsBlockDevices
	}).(SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) EbsOptimized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *bool { return v.EbsOptimized }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) EphemeralBlockDevices() SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) []SpotFleetRequestLaunchSpecificationEphemeralBlockDevice {
		return v.EphemeralBlockDevices
	}).(SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) IamInstanceProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *string { return v.IamInstanceProfile }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) IamInstanceProfileArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *string { return v.IamInstanceProfileArn }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) string { return v.InstanceType }).(pulumi.StringOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) string { return v.KeyName }).(pulumi.StringOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) Monitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *bool { return v.Monitoring }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) PlacementGroup() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) string { return v.PlacementGroup }).(pulumi.StringOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) PlacementTenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *string { return v.PlacementTenancy }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) RootBlockDevices() SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) []SpotFleetRequestLaunchSpecificationRootBlockDevice {
		return v.RootBlockDevices
	}).(SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput)
}

// The maximum bid price per unit hour.
func (o SpotFleetRequestLaunchSpecificationOutput) SpotPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *string { return v.SpotPrice }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) string { return v.SubnetId }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the resource.
func (o SpotFleetRequestLaunchSpecificationOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *string { return v.UserData }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) VpcSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) []string { return v.VpcSecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) WeightedCapacity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *string { return v.WeightedCapacity }).(pulumi.StringPtrOutput)
}

type SpotFleetRequestLaunchSpecificationArrayOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecification)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationArrayOutput) ToSpotFleetRequestLaunchSpecificationArrayOutput() SpotFleetRequestLaunchSpecificationArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationArrayOutput) ToSpotFleetRequestLaunchSpecificationArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationArrayOutput) Index(i pulumi.IntInput) SpotFleetRequestLaunchSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotFleetRequestLaunchSpecification {
		return vs[0].([]SpotFleetRequestLaunchSpecification)[vs[1].(int)]
	}).(SpotFleetRequestLaunchSpecificationOutput)
}

type SpotFleetRequestLaunchSpecificationArgs struct {
	Ami                      string                                                        `pulumi:"ami"`
	AssociatePublicIpAddress *bool                                                         `pulumi:"associatePublicIpAddress"`
	AvailabilityZone         *string                                                       `pulumi:"availabilityZone"`
	EbsBlockDevices          []SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs       `pulumi:"ebsBlockDevices"`
	EbsOptimized             *bool                                                         `pulumi:"ebsOptimized"`
	EphemeralBlockDevices    []SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs `pulumi:"ephemeralBlockDevices"`
	IamInstanceProfile       *string                                                       `pulumi:"iamInstanceProfile"`
	IamInstanceProfileArn    *string                                                       `pulumi:"iamInstanceProfileArn"`
	InstanceType             string                                                        `pulumi:"instanceType"`
	KeyName                  *string                                                       `pulumi:"keyName"`
	Monitoring               *bool                                                         `pulumi:"monitoring"`
	PlacementGroup           *string                                                       `pulumi:"placementGroup"`
	PlacementTenancy         *string                                                       `pulumi:"placementTenancy"`
	RootBlockDevices         []SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs      `pulumi:"rootBlockDevices"`
	// The maximum bid price per unit hour.
	SpotPrice *string `pulumi:"spotPrice"`
	SubnetId  *string `pulumi:"subnetId"`
	// A mapping of tags to assign to the resource.
	Tags                map[string]interface{} `pulumi:"tags"`
	UserData            *string                `pulumi:"userData"`
	VpcSecurityGroupIds []string               `pulumi:"vpcSecurityGroupIds"`
	WeightedCapacity    *string                `pulumi:"weightedCapacity"`
}

type SpotFleetRequestLaunchSpecificationArgsInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationArgsOutput() SpotFleetRequestLaunchSpecificationArgsOutput
	ToSpotFleetRequestLaunchSpecificationArgsOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationArgsOutput
}

type SpotFleetRequestLaunchSpecificationArgsArgs struct {
	Ami                      pulumi.StringInput                                                    `pulumi:"ami"`
	AssociatePublicIpAddress pulumi.BoolPtrInput                                                   `pulumi:"associatePublicIpAddress"`
	AvailabilityZone         pulumi.StringPtrInput                                                 `pulumi:"availabilityZone"`
	EbsBlockDevices          SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArrayInput       `pulumi:"ebsBlockDevices"`
	EbsOptimized             pulumi.BoolPtrInput                                                   `pulumi:"ebsOptimized"`
	EphemeralBlockDevices    SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArrayInput `pulumi:"ephemeralBlockDevices"`
	IamInstanceProfile       pulumi.StringPtrInput                                                 `pulumi:"iamInstanceProfile"`
	IamInstanceProfileArn    pulumi.StringPtrInput                                                 `pulumi:"iamInstanceProfileArn"`
	InstanceType             pulumi.StringInput                                                    `pulumi:"instanceType"`
	KeyName                  pulumi.StringPtrInput                                                 `pulumi:"keyName"`
	Monitoring               pulumi.BoolPtrInput                                                   `pulumi:"monitoring"`
	PlacementGroup           pulumi.StringPtrInput                                                 `pulumi:"placementGroup"`
	PlacementTenancy         pulumi.StringPtrInput                                                 `pulumi:"placementTenancy"`
	RootBlockDevices         SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArrayInput      `pulumi:"rootBlockDevices"`
	// The maximum bid price per unit hour.
	SpotPrice pulumi.StringPtrInput `pulumi:"spotPrice"`
	SubnetId  pulumi.StringPtrInput `pulumi:"subnetId"`
	// A mapping of tags to assign to the resource.
	Tags                pulumi.MapInput         `pulumi:"tags"`
	UserData            pulumi.StringPtrInput   `pulumi:"userData"`
	VpcSecurityGroupIds pulumi.StringArrayInput `pulumi:"vpcSecurityGroupIds"`
	WeightedCapacity    pulumi.StringPtrInput   `pulumi:"weightedCapacity"`
}

func (SpotFleetRequestLaunchSpecificationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationArgs)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationArgsArgs) ToSpotFleetRequestLaunchSpecificationArgsOutput() SpotFleetRequestLaunchSpecificationArgsOutput {
	return i.ToSpotFleetRequestLaunchSpecificationArgsOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationArgsArgs) ToSpotFleetRequestLaunchSpecificationArgsOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationArgsOutput)
}

type SpotFleetRequestLaunchSpecificationArgsArrayInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationArgsArrayOutput() SpotFleetRequestLaunchSpecificationArgsArrayOutput
	ToSpotFleetRequestLaunchSpecificationArgsArrayOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationArgsArrayOutput
}

type SpotFleetRequestLaunchSpecificationArgsArray []SpotFleetRequestLaunchSpecificationArgsInput

func (SpotFleetRequestLaunchSpecificationArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationArgs)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationArgsArray) ToSpotFleetRequestLaunchSpecificationArgsArrayOutput() SpotFleetRequestLaunchSpecificationArgsArrayOutput {
	return i.ToSpotFleetRequestLaunchSpecificationArgsArrayOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationArgsArray) ToSpotFleetRequestLaunchSpecificationArgsArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationArgsArrayOutput)
}

type SpotFleetRequestLaunchSpecificationArgsOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationArgs)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationArgsOutput) ToSpotFleetRequestLaunchSpecificationArgsOutput() SpotFleetRequestLaunchSpecificationArgsOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationArgsOutput) ToSpotFleetRequestLaunchSpecificationArgsOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationArgsOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationArgsOutput) Ami() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationArgs) string { return v.Ami }).(pulumi.StringOutput)
}

func (o SpotFleetRequestLaunchSpecificationArgsOutput) AssociatePublicIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationArgs) *bool { return v.AssociatePublicIpAddress }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationArgsOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationArgs) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationArgsOutput) EbsBlockDevices() SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArrayOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationArgs) []SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs {
		return v.EbsBlockDevices
	}).(SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArrayOutput)
}

func (o SpotFleetRequestLaunchSpecificationArgsOutput) EbsOptimized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationArgs) *bool { return v.EbsOptimized }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationArgsOutput) EphemeralBlockDevices() SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArrayOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationArgs) []SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs {
		return v.EphemeralBlockDevices
	}).(SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArrayOutput)
}

func (o SpotFleetRequestLaunchSpecificationArgsOutput) IamInstanceProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationArgs) *string { return v.IamInstanceProfile }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationArgsOutput) IamInstanceProfileArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationArgs) *string { return v.IamInstanceProfileArn }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationArgsOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationArgs) string { return v.InstanceType }).(pulumi.StringOutput)
}

func (o SpotFleetRequestLaunchSpecificationArgsOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationArgs) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationArgsOutput) Monitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationArgs) *bool { return v.Monitoring }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationArgsOutput) PlacementGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationArgs) *string { return v.PlacementGroup }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationArgsOutput) PlacementTenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationArgs) *string { return v.PlacementTenancy }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationArgsOutput) RootBlockDevices() SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArrayOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationArgs) []SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs {
		return v.RootBlockDevices
	}).(SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArrayOutput)
}

// The maximum bid price per unit hour.
func (o SpotFleetRequestLaunchSpecificationArgsOutput) SpotPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationArgs) *string { return v.SpotPrice }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationArgsOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationArgs) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// A mapping of tags to assign to the resource.
func (o SpotFleetRequestLaunchSpecificationArgsOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationArgs) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func (o SpotFleetRequestLaunchSpecificationArgsOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationArgs) *string { return v.UserData }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationArgsOutput) VpcSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationArgs) []string { return v.VpcSecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o SpotFleetRequestLaunchSpecificationArgsOutput) WeightedCapacity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationArgs) *string { return v.WeightedCapacity }).(pulumi.StringPtrOutput)
}

type SpotFleetRequestLaunchSpecificationArgsArrayOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationArgs)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationArgsArrayOutput) ToSpotFleetRequestLaunchSpecificationArgsArrayOutput() SpotFleetRequestLaunchSpecificationArgsArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationArgsArrayOutput) ToSpotFleetRequestLaunchSpecificationArgsArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationArgsArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationArgsArrayOutput) Index(i pulumi.IntInput) SpotFleetRequestLaunchSpecificationArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotFleetRequestLaunchSpecificationArgs {
		return vs[0].([]SpotFleetRequestLaunchSpecificationArgs)[vs[1].(int)]
	}).(SpotFleetRequestLaunchSpecificationArgsOutput)
}

type SpotFleetRequestLaunchSpecificationEbsBlockDevice struct {
	DeleteOnTermination *bool  `pulumi:"deleteOnTermination"`
	DeviceName          string `pulumi:"deviceName"`
	Encrypted           bool   `pulumi:"encrypted"`
	Iops                int    `pulumi:"iops"`
	KmsKeyId            string `pulumi:"kmsKeyId"`
	SnapshotId          string `pulumi:"snapshotId"`
	VolumeSize          int    `pulumi:"volumeSize"`
	VolumeType          string `pulumi:"volumeType"`
}

type SpotFleetRequestLaunchSpecificationEbsBlockDeviceInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput() SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput
	ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput
}

type SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs struct {
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	DeviceName          pulumi.StringInput  `pulumi:"deviceName"`
	Encrypted           pulumi.BoolInput    `pulumi:"encrypted"`
	Iops                pulumi.IntInput     `pulumi:"iops"`
	KmsKeyId            pulumi.StringInput  `pulumi:"kmsKeyId"`
	SnapshotId          pulumi.StringInput  `pulumi:"snapshotId"`
	VolumeSize          pulumi.IntInput     `pulumi:"volumeSize"`
	VolumeType          pulumi.StringInput  `pulumi:"volumeType"`
}

func (SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationEbsBlockDevice)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput() SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput {
	return i.ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput)
}

type SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput
	ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput
}

type SpotFleetRequestLaunchSpecificationEbsBlockDeviceArray []SpotFleetRequestLaunchSpecificationEbsBlockDeviceInput

func (SpotFleetRequestLaunchSpecificationEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationEbsBlockDevice)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationEbsBlockDeviceArray) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput {
	return i.ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationEbsBlockDeviceArray) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput)
}

type SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationEbsBlockDevice)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput() SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) int { return v.Iops }).(pulumi.IntOutput)
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) string { return v.SnapshotId }).(pulumi.StringOutput)
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) int { return v.VolumeSize }).(pulumi.IntOutput)
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) string { return v.VolumeType }).(pulumi.StringOutput)
}

type SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationEbsBlockDevice)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotFleetRequestLaunchSpecificationEbsBlockDevice {
		return vs[0].([]SpotFleetRequestLaunchSpecificationEbsBlockDevice)[vs[1].(int)]
	}).(SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput)
}

type SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs struct {
	DeleteOnTermination *bool   `pulumi:"deleteOnTermination"`
	DeviceName          string  `pulumi:"deviceName"`
	Encrypted           *bool   `pulumi:"encrypted"`
	Iops                *int    `pulumi:"iops"`
	KmsKeyId            *string `pulumi:"kmsKeyId"`
	SnapshotId          *string `pulumi:"snapshotId"`
	VolumeSize          *int    `pulumi:"volumeSize"`
	VolumeType          *string `pulumi:"volumeType"`
}

type SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsOutput() SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsOutput
	ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsOutput
}

type SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArgs struct {
	DeleteOnTermination pulumi.BoolPtrInput   `pulumi:"deleteOnTermination"`
	DeviceName          pulumi.StringInput    `pulumi:"deviceName"`
	Encrypted           pulumi.BoolPtrInput   `pulumi:"encrypted"`
	Iops                pulumi.IntPtrInput    `pulumi:"iops"`
	KmsKeyId            pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	SnapshotId          pulumi.StringPtrInput `pulumi:"snapshotId"`
	VolumeSize          pulumi.IntPtrInput    `pulumi:"volumeSize"`
	VolumeType          pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArgs) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsOutput() SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsOutput {
	return i.ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArgs) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsOutput)
}

type SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArrayInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArrayOutput() SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArrayOutput
	ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArrayOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArrayOutput
}

type SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArray []SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsInput

func (SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArray) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArrayOutput() SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArrayOutput {
	return i.ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArrayOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArray) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArrayOutput)
}

type SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsOutput) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsOutput() SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsOutput) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArrayOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArrayOutput) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArrayOutput() SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArrayOutput) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArrayOutput) Index(i pulumi.IntInput) SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs {
		return vs[0].([]SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs)[vs[1].(int)]
	}).(SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsOutput)
}

type SpotFleetRequestLaunchSpecificationEphemeralBlockDevice struct {
	DeviceName  string `pulumi:"deviceName"`
	VirtualName string `pulumi:"virtualName"`
}

type SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput() SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput
	ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput
}

type SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs struct {
	DeviceName  pulumi.StringInput `pulumi:"deviceName"`
	VirtualName pulumi.StringInput `pulumi:"virtualName"`
}

func (SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationEphemeralBlockDevice)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput() SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput {
	return i.ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput)
}

type SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput
	ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput
}

type SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArray []SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceInput

func (SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationEphemeralBlockDevice)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArray) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput {
	return i.ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArray) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput)
}

type SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationEphemeralBlockDevice)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput() SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEphemeralBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput) VirtualName() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEphemeralBlockDevice) string { return v.VirtualName }).(pulumi.StringOutput)
}

type SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationEphemeralBlockDevice)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput) Index(i pulumi.IntInput) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotFleetRequestLaunchSpecificationEphemeralBlockDevice {
		return vs[0].([]SpotFleetRequestLaunchSpecificationEphemeralBlockDevice)[vs[1].(int)]
	}).(SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput)
}

type SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs struct {
	DeviceName  string `pulumi:"deviceName"`
	VirtualName string `pulumi:"virtualName"`
}

type SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsOutput() SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsOutput
	ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsOutput
}

type SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArgs struct {
	DeviceName  pulumi.StringInput `pulumi:"deviceName"`
	VirtualName pulumi.StringInput `pulumi:"virtualName"`
}

func (SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArgs) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsOutput() SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsOutput {
	return i.ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArgs) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsOutput)
}

type SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArrayInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArrayOutput() SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArrayOutput
	ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArrayOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArrayOutput
}

type SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArray []SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsInput

func (SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArray) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArrayOutput() SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArrayOutput {
	return i.ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArrayOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArray) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArrayOutput)
}

type SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsOutput) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsOutput() SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsOutput) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsOutput) VirtualName() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs) string { return v.VirtualName }).(pulumi.StringOutput)
}

type SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArrayOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArrayOutput) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArrayOutput() SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArrayOutput) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArrayOutput) Index(i pulumi.IntInput) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs {
		return vs[0].([]SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs)[vs[1].(int)]
	}).(SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsOutput)
}

type SpotFleetRequestLaunchSpecificationRootBlockDevice struct {
	DeleteOnTermination *bool  `pulumi:"deleteOnTermination"`
	Encrypted           bool   `pulumi:"encrypted"`
	Iops                int    `pulumi:"iops"`
	KmsKeyId            string `pulumi:"kmsKeyId"`
	VolumeSize          int    `pulumi:"volumeSize"`
	VolumeType          string `pulumi:"volumeType"`
}

type SpotFleetRequestLaunchSpecificationRootBlockDeviceInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationRootBlockDeviceOutput() SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput
	ToSpotFleetRequestLaunchSpecificationRootBlockDeviceOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput
}

type SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs struct {
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	Encrypted           pulumi.BoolInput    `pulumi:"encrypted"`
	Iops                pulumi.IntInput     `pulumi:"iops"`
	KmsKeyId            pulumi.StringInput  `pulumi:"kmsKeyId"`
	VolumeSize          pulumi.IntInput     `pulumi:"volumeSize"`
	VolumeType          pulumi.StringInput  `pulumi:"volumeType"`
}

func (SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationRootBlockDevice)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceOutput() SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput {
	return i.ToSpotFleetRequestLaunchSpecificationRootBlockDeviceOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput)
}

type SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput
	ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput
}

type SpotFleetRequestLaunchSpecificationRootBlockDeviceArray []SpotFleetRequestLaunchSpecificationRootBlockDeviceInput

func (SpotFleetRequestLaunchSpecificationRootBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationRootBlockDevice)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationRootBlockDeviceArray) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput {
	return i.ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationRootBlockDeviceArray) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput)
}

type SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationRootBlockDevice)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceOutput() SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationRootBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationRootBlockDevice) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationRootBlockDevice) int { return v.Iops }).(pulumi.IntOutput)
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationRootBlockDevice) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationRootBlockDevice) int { return v.VolumeSize }).(pulumi.IntOutput)
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationRootBlockDevice) string { return v.VolumeType }).(pulumi.StringOutput)
}

type SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationRootBlockDevice)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput) Index(i pulumi.IntInput) SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotFleetRequestLaunchSpecificationRootBlockDevice {
		return vs[0].([]SpotFleetRequestLaunchSpecificationRootBlockDevice)[vs[1].(int)]
	}).(SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput)
}

type SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs struct {
	DeleteOnTermination *bool   `pulumi:"deleteOnTermination"`
	Encrypted           *bool   `pulumi:"encrypted"`
	Iops                *int    `pulumi:"iops"`
	KmsKeyId            *string `pulumi:"kmsKeyId"`
	VolumeSize          *int    `pulumi:"volumeSize"`
	VolumeType          *string `pulumi:"volumeType"`
}

type SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArgsOutput() SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsOutput
	ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArgsOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsOutput
}

type SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArgs struct {
	DeleteOnTermination pulumi.BoolPtrInput   `pulumi:"deleteOnTermination"`
	Encrypted           pulumi.BoolPtrInput   `pulumi:"encrypted"`
	Iops                pulumi.IntPtrInput    `pulumi:"iops"`
	KmsKeyId            pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	VolumeSize          pulumi.IntPtrInput    `pulumi:"volumeSize"`
	VolumeType          pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArgs) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArgsOutput() SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsOutput {
	return i.ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArgsOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArgs) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArgsOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsOutput)
}

type SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArrayInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArrayOutput() SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArrayOutput
	ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArrayOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArrayOutput
}

type SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArray []SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsInput

func (SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArray) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArrayOutput() SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArrayOutput {
	return i.ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArrayOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArray) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArrayOutput)
}

type SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsOutput) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArgsOutput() SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsOutput) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArgsOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArrayOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArrayOutput) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArrayOutput() SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArrayOutput) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArrayOutput) Index(i pulumi.IntInput) SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs {
		return vs[0].([]SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs)[vs[1].(int)]
	}).(SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsOutput)
}

type SpotFleetRequestLaunchSpecificationState struct {
	Ami                      string                                                         `pulumi:"ami"`
	AssociatePublicIpAddress *bool                                                          `pulumi:"associatePublicIpAddress"`
	AvailabilityZone         *string                                                        `pulumi:"availabilityZone"`
	EbsBlockDevices          []SpotFleetRequestLaunchSpecificationStateEbsBlockDevice       `pulumi:"ebsBlockDevices"`
	EbsOptimized             *bool                                                          `pulumi:"ebsOptimized"`
	EphemeralBlockDevices    []SpotFleetRequestLaunchSpecificationStateEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	IamInstanceProfile       *string                                                        `pulumi:"iamInstanceProfile"`
	IamInstanceProfileArn    *string                                                        `pulumi:"iamInstanceProfileArn"`
	InstanceType             string                                                         `pulumi:"instanceType"`
	KeyName                  *string                                                        `pulumi:"keyName"`
	Monitoring               *bool                                                          `pulumi:"monitoring"`
	PlacementGroup           *string                                                        `pulumi:"placementGroup"`
	PlacementTenancy         *string                                                        `pulumi:"placementTenancy"`
	RootBlockDevices         []SpotFleetRequestLaunchSpecificationStateRootBlockDevice      `pulumi:"rootBlockDevices"`
	// The maximum bid price per unit hour.
	SpotPrice *string `pulumi:"spotPrice"`
	SubnetId  *string `pulumi:"subnetId"`
	// A mapping of tags to assign to the resource.
	Tags                map[string]interface{} `pulumi:"tags"`
	UserData            *string                `pulumi:"userData"`
	VpcSecurityGroupIds []string               `pulumi:"vpcSecurityGroupIds"`
	WeightedCapacity    *string                `pulumi:"weightedCapacity"`
}

type SpotFleetRequestLaunchSpecificationStateInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationStateOutput() SpotFleetRequestLaunchSpecificationStateOutput
	ToSpotFleetRequestLaunchSpecificationStateOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationStateOutput
}

type SpotFleetRequestLaunchSpecificationStateArgs struct {
	Ami                      pulumi.StringInput                                                     `pulumi:"ami"`
	AssociatePublicIpAddress pulumi.BoolPtrInput                                                    `pulumi:"associatePublicIpAddress"`
	AvailabilityZone         pulumi.StringPtrInput                                                  `pulumi:"availabilityZone"`
	EbsBlockDevices          SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArrayInput       `pulumi:"ebsBlockDevices"`
	EbsOptimized             pulumi.BoolPtrInput                                                    `pulumi:"ebsOptimized"`
	EphemeralBlockDevices    SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArrayInput `pulumi:"ephemeralBlockDevices"`
	IamInstanceProfile       pulumi.StringPtrInput                                                  `pulumi:"iamInstanceProfile"`
	IamInstanceProfileArn    pulumi.StringPtrInput                                                  `pulumi:"iamInstanceProfileArn"`
	InstanceType             pulumi.StringInput                                                     `pulumi:"instanceType"`
	KeyName                  pulumi.StringPtrInput                                                  `pulumi:"keyName"`
	Monitoring               pulumi.BoolPtrInput                                                    `pulumi:"monitoring"`
	PlacementGroup           pulumi.StringPtrInput                                                  `pulumi:"placementGroup"`
	PlacementTenancy         pulumi.StringPtrInput                                                  `pulumi:"placementTenancy"`
	RootBlockDevices         SpotFleetRequestLaunchSpecificationStateRootBlockDeviceArrayInput      `pulumi:"rootBlockDevices"`
	// The maximum bid price per unit hour.
	SpotPrice pulumi.StringPtrInput `pulumi:"spotPrice"`
	SubnetId  pulumi.StringPtrInput `pulumi:"subnetId"`
	// A mapping of tags to assign to the resource.
	Tags                pulumi.MapInput         `pulumi:"tags"`
	UserData            pulumi.StringPtrInput   `pulumi:"userData"`
	VpcSecurityGroupIds pulumi.StringArrayInput `pulumi:"vpcSecurityGroupIds"`
	WeightedCapacity    pulumi.StringPtrInput   `pulumi:"weightedCapacity"`
}

func (SpotFleetRequestLaunchSpecificationStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationState)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationStateArgs) ToSpotFleetRequestLaunchSpecificationStateOutput() SpotFleetRequestLaunchSpecificationStateOutput {
	return i.ToSpotFleetRequestLaunchSpecificationStateOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationStateArgs) ToSpotFleetRequestLaunchSpecificationStateOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationStateOutput)
}

type SpotFleetRequestLaunchSpecificationStateArrayInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationStateArrayOutput() SpotFleetRequestLaunchSpecificationStateArrayOutput
	ToSpotFleetRequestLaunchSpecificationStateArrayOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationStateArrayOutput
}

type SpotFleetRequestLaunchSpecificationStateArray []SpotFleetRequestLaunchSpecificationStateInput

func (SpotFleetRequestLaunchSpecificationStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationState)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationStateArray) ToSpotFleetRequestLaunchSpecificationStateArrayOutput() SpotFleetRequestLaunchSpecificationStateArrayOutput {
	return i.ToSpotFleetRequestLaunchSpecificationStateArrayOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationStateArray) ToSpotFleetRequestLaunchSpecificationStateArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationStateArrayOutput)
}

type SpotFleetRequestLaunchSpecificationStateOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationState)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationStateOutput) ToSpotFleetRequestLaunchSpecificationStateOutput() SpotFleetRequestLaunchSpecificationStateOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationStateOutput) ToSpotFleetRequestLaunchSpecificationStateOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationStateOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationStateOutput) Ami() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationState) string { return v.Ami }).(pulumi.StringOutput)
}

func (o SpotFleetRequestLaunchSpecificationStateOutput) AssociatePublicIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationState) *bool { return v.AssociatePublicIpAddress }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationStateOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationState) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationStateOutput) EbsBlockDevices() SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArrayOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationState) []SpotFleetRequestLaunchSpecificationStateEbsBlockDevice {
		return v.EbsBlockDevices
	}).(SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArrayOutput)
}

func (o SpotFleetRequestLaunchSpecificationStateOutput) EbsOptimized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationState) *bool { return v.EbsOptimized }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationStateOutput) EphemeralBlockDevices() SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArrayOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationState) []SpotFleetRequestLaunchSpecificationStateEphemeralBlockDevice {
		return v.EphemeralBlockDevices
	}).(SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArrayOutput)
}

func (o SpotFleetRequestLaunchSpecificationStateOutput) IamInstanceProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationState) *string { return v.IamInstanceProfile }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationStateOutput) IamInstanceProfileArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationState) *string { return v.IamInstanceProfileArn }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationStateOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationState) string { return v.InstanceType }).(pulumi.StringOutput)
}

func (o SpotFleetRequestLaunchSpecificationStateOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationState) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationStateOutput) Monitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationState) *bool { return v.Monitoring }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationStateOutput) PlacementGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationState) *string { return v.PlacementGroup }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationStateOutput) PlacementTenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationState) *string { return v.PlacementTenancy }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationStateOutput) RootBlockDevices() SpotFleetRequestLaunchSpecificationStateRootBlockDeviceArrayOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationState) []SpotFleetRequestLaunchSpecificationStateRootBlockDevice {
		return v.RootBlockDevices
	}).(SpotFleetRequestLaunchSpecificationStateRootBlockDeviceArrayOutput)
}

// The maximum bid price per unit hour.
func (o SpotFleetRequestLaunchSpecificationStateOutput) SpotPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationState) *string { return v.SpotPrice }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationStateOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationState) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// A mapping of tags to assign to the resource.
func (o SpotFleetRequestLaunchSpecificationStateOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationState) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func (o SpotFleetRequestLaunchSpecificationStateOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationState) *string { return v.UserData }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationStateOutput) VpcSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationState) []string { return v.VpcSecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o SpotFleetRequestLaunchSpecificationStateOutput) WeightedCapacity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationState) *string { return v.WeightedCapacity }).(pulumi.StringPtrOutput)
}

type SpotFleetRequestLaunchSpecificationStateArrayOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationState)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationStateArrayOutput) ToSpotFleetRequestLaunchSpecificationStateArrayOutput() SpotFleetRequestLaunchSpecificationStateArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationStateArrayOutput) ToSpotFleetRequestLaunchSpecificationStateArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationStateArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationStateArrayOutput) Index(i pulumi.IntInput) SpotFleetRequestLaunchSpecificationStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotFleetRequestLaunchSpecificationState {
		return vs[0].([]SpotFleetRequestLaunchSpecificationState)[vs[1].(int)]
	}).(SpotFleetRequestLaunchSpecificationStateOutput)
}

type SpotFleetRequestLaunchSpecificationStateEbsBlockDevice struct {
	DeleteOnTermination *bool   `pulumi:"deleteOnTermination"`
	DeviceName          string  `pulumi:"deviceName"`
	Encrypted           *bool   `pulumi:"encrypted"`
	Iops                *int    `pulumi:"iops"`
	KmsKeyId            *string `pulumi:"kmsKeyId"`
	SnapshotId          *string `pulumi:"snapshotId"`
	VolumeSize          *int    `pulumi:"volumeSize"`
	VolumeType          *string `pulumi:"volumeType"`
}

type SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationStateEbsBlockDeviceOutput() SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceOutput
	ToSpotFleetRequestLaunchSpecificationStateEbsBlockDeviceOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceOutput
}

type SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArgs struct {
	DeleteOnTermination pulumi.BoolPtrInput   `pulumi:"deleteOnTermination"`
	DeviceName          pulumi.StringInput    `pulumi:"deviceName"`
	Encrypted           pulumi.BoolPtrInput   `pulumi:"encrypted"`
	Iops                pulumi.IntPtrInput    `pulumi:"iops"`
	KmsKeyId            pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	SnapshotId          pulumi.StringPtrInput `pulumi:"snapshotId"`
	VolumeSize          pulumi.IntPtrInput    `pulumi:"volumeSize"`
	VolumeType          pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationStateEbsBlockDevice)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArgs) ToSpotFleetRequestLaunchSpecificationStateEbsBlockDeviceOutput() SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceOutput {
	return i.ToSpotFleetRequestLaunchSpecificationStateEbsBlockDeviceOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArgs) ToSpotFleetRequestLaunchSpecificationStateEbsBlockDeviceOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceOutput)
}

type SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArrayOutput
	ToSpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArrayOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArrayOutput
}

type SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArray []SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceInput

func (SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationStateEbsBlockDevice)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArray) ToSpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArrayOutput {
	return i.ToSpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArray) ToSpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArrayOutput)
}

type SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationStateEbsBlockDevice)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceOutput) ToSpotFleetRequestLaunchSpecificationStateEbsBlockDeviceOutput() SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceOutput) ToSpotFleetRequestLaunchSpecificationStateEbsBlockDeviceOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationStateEbsBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationStateEbsBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationStateEbsBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationStateEbsBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationStateEbsBlockDevice) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationStateEbsBlockDevice) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationStateEbsBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationStateEbsBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationStateEbsBlockDevice)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArrayOutput) ToSpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArrayOutput) ToSpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotFleetRequestLaunchSpecificationStateEbsBlockDevice {
		return vs[0].([]SpotFleetRequestLaunchSpecificationStateEbsBlockDevice)[vs[1].(int)]
	}).(SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceOutput)
}

type SpotFleetRequestLaunchSpecificationStateEphemeralBlockDevice struct {
	DeviceName  string `pulumi:"deviceName"`
	VirtualName string `pulumi:"virtualName"`
}

type SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceOutput() SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceOutput
	ToSpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceOutput
}

type SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArgs struct {
	DeviceName  pulumi.StringInput `pulumi:"deviceName"`
	VirtualName pulumi.StringInput `pulumi:"virtualName"`
}

func (SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationStateEphemeralBlockDevice)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArgs) ToSpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceOutput() SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceOutput {
	return i.ToSpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArgs) ToSpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceOutput)
}

type SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArrayInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArrayOutput
	ToSpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArrayOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArrayOutput
}

type SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArray []SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceInput

func (SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationStateEphemeralBlockDevice)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArray) ToSpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArrayOutput {
	return i.ToSpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArrayOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArray) ToSpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArrayOutput)
}

type SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationStateEphemeralBlockDevice)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceOutput) ToSpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceOutput() SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceOutput) ToSpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationStateEphemeralBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceOutput) VirtualName() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationStateEphemeralBlockDevice) string { return v.VirtualName }).(pulumi.StringOutput)
}

type SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationStateEphemeralBlockDevice)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArrayOutput) ToSpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArrayOutput) ToSpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArrayOutput) Index(i pulumi.IntInput) SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotFleetRequestLaunchSpecificationStateEphemeralBlockDevice {
		return vs[0].([]SpotFleetRequestLaunchSpecificationStateEphemeralBlockDevice)[vs[1].(int)]
	}).(SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceOutput)
}

type SpotFleetRequestLaunchSpecificationStateRootBlockDevice struct {
	DeleteOnTermination *bool   `pulumi:"deleteOnTermination"`
	Encrypted           *bool   `pulumi:"encrypted"`
	Iops                *int    `pulumi:"iops"`
	KmsKeyId            *string `pulumi:"kmsKeyId"`
	VolumeSize          *int    `pulumi:"volumeSize"`
	VolumeType          *string `pulumi:"volumeType"`
}

type SpotFleetRequestLaunchSpecificationStateRootBlockDeviceInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationStateRootBlockDeviceOutput() SpotFleetRequestLaunchSpecificationStateRootBlockDeviceOutput
	ToSpotFleetRequestLaunchSpecificationStateRootBlockDeviceOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationStateRootBlockDeviceOutput
}

type SpotFleetRequestLaunchSpecificationStateRootBlockDeviceArgs struct {
	DeleteOnTermination pulumi.BoolPtrInput   `pulumi:"deleteOnTermination"`
	Encrypted           pulumi.BoolPtrInput   `pulumi:"encrypted"`
	Iops                pulumi.IntPtrInput    `pulumi:"iops"`
	KmsKeyId            pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	VolumeSize          pulumi.IntPtrInput    `pulumi:"volumeSize"`
	VolumeType          pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (SpotFleetRequestLaunchSpecificationStateRootBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationStateRootBlockDevice)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationStateRootBlockDeviceArgs) ToSpotFleetRequestLaunchSpecificationStateRootBlockDeviceOutput() SpotFleetRequestLaunchSpecificationStateRootBlockDeviceOutput {
	return i.ToSpotFleetRequestLaunchSpecificationStateRootBlockDeviceOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationStateRootBlockDeviceArgs) ToSpotFleetRequestLaunchSpecificationStateRootBlockDeviceOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationStateRootBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationStateRootBlockDeviceOutput)
}

type SpotFleetRequestLaunchSpecificationStateRootBlockDeviceArrayInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationStateRootBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationStateRootBlockDeviceArrayOutput
	ToSpotFleetRequestLaunchSpecificationStateRootBlockDeviceArrayOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationStateRootBlockDeviceArrayOutput
}

type SpotFleetRequestLaunchSpecificationStateRootBlockDeviceArray []SpotFleetRequestLaunchSpecificationStateRootBlockDeviceInput

func (SpotFleetRequestLaunchSpecificationStateRootBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationStateRootBlockDevice)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationStateRootBlockDeviceArray) ToSpotFleetRequestLaunchSpecificationStateRootBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationStateRootBlockDeviceArrayOutput {
	return i.ToSpotFleetRequestLaunchSpecificationStateRootBlockDeviceArrayOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationStateRootBlockDeviceArray) ToSpotFleetRequestLaunchSpecificationStateRootBlockDeviceArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationStateRootBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationStateRootBlockDeviceArrayOutput)
}

type SpotFleetRequestLaunchSpecificationStateRootBlockDeviceOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationStateRootBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationStateRootBlockDevice)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationStateRootBlockDeviceOutput) ToSpotFleetRequestLaunchSpecificationStateRootBlockDeviceOutput() SpotFleetRequestLaunchSpecificationStateRootBlockDeviceOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationStateRootBlockDeviceOutput) ToSpotFleetRequestLaunchSpecificationStateRootBlockDeviceOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationStateRootBlockDeviceOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationStateRootBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationStateRootBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationStateRootBlockDeviceOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationStateRootBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationStateRootBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationStateRootBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationStateRootBlockDeviceOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationStateRootBlockDevice) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationStateRootBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationStateRootBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationStateRootBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationStateRootBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type SpotFleetRequestLaunchSpecificationStateRootBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationStateRootBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationStateRootBlockDevice)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationStateRootBlockDeviceArrayOutput) ToSpotFleetRequestLaunchSpecificationStateRootBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationStateRootBlockDeviceArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationStateRootBlockDeviceArrayOutput) ToSpotFleetRequestLaunchSpecificationStateRootBlockDeviceArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationStateRootBlockDeviceArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationStateRootBlockDeviceArrayOutput) Index(i pulumi.IntInput) SpotFleetRequestLaunchSpecificationStateRootBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotFleetRequestLaunchSpecificationStateRootBlockDevice {
		return vs[0].([]SpotFleetRequestLaunchSpecificationStateRootBlockDevice)[vs[1].(int)]
	}).(SpotFleetRequestLaunchSpecificationStateRootBlockDeviceOutput)
}

type SpotInstanceRequestCreditSpecification struct {
	// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits *string `pulumi:"cpuCredits"`
}

type SpotInstanceRequestCreditSpecificationInput interface {
	pulumi.Input

	ToSpotInstanceRequestCreditSpecificationOutput() SpotInstanceRequestCreditSpecificationOutput
	ToSpotInstanceRequestCreditSpecificationOutputWithContext(context.Context) SpotInstanceRequestCreditSpecificationOutput
}

type SpotInstanceRequestCreditSpecificationArgs struct {
	// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits pulumi.StringPtrInput `pulumi:"cpuCredits"`
}

func (SpotInstanceRequestCreditSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestCreditSpecification)(nil)).Elem()
}

func (i SpotInstanceRequestCreditSpecificationArgs) ToSpotInstanceRequestCreditSpecificationOutput() SpotInstanceRequestCreditSpecificationOutput {
	return i.ToSpotInstanceRequestCreditSpecificationOutputWithContext(context.Background())
}

func (i SpotInstanceRequestCreditSpecificationArgs) ToSpotInstanceRequestCreditSpecificationOutputWithContext(ctx context.Context) SpotInstanceRequestCreditSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestCreditSpecificationOutput)
}

func (i SpotInstanceRequestCreditSpecificationArgs) ToSpotInstanceRequestCreditSpecificationPtrOutput() SpotInstanceRequestCreditSpecificationPtrOutput {
	return i.ToSpotInstanceRequestCreditSpecificationPtrOutputWithContext(context.Background())
}

func (i SpotInstanceRequestCreditSpecificationArgs) ToSpotInstanceRequestCreditSpecificationPtrOutputWithContext(ctx context.Context) SpotInstanceRequestCreditSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestCreditSpecificationOutput).ToSpotInstanceRequestCreditSpecificationPtrOutputWithContext(ctx)
}

type SpotInstanceRequestCreditSpecificationPtrInput interface {
	pulumi.Input

	ToSpotInstanceRequestCreditSpecificationPtrOutput() SpotInstanceRequestCreditSpecificationPtrOutput
	ToSpotInstanceRequestCreditSpecificationPtrOutputWithContext(context.Context) SpotInstanceRequestCreditSpecificationPtrOutput
}

type spotInstanceRequestCreditSpecificationPtrType SpotInstanceRequestCreditSpecificationArgs

func SpotInstanceRequestCreditSpecificationPtr(v *SpotInstanceRequestCreditSpecificationArgs) SpotInstanceRequestCreditSpecificationPtrInput {
	return (*spotInstanceRequestCreditSpecificationPtrType)(v)
}

func (*spotInstanceRequestCreditSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotInstanceRequestCreditSpecification)(nil)).Elem()
}

func (i *spotInstanceRequestCreditSpecificationPtrType) ToSpotInstanceRequestCreditSpecificationPtrOutput() SpotInstanceRequestCreditSpecificationPtrOutput {
	return i.ToSpotInstanceRequestCreditSpecificationPtrOutputWithContext(context.Background())
}

func (i *spotInstanceRequestCreditSpecificationPtrType) ToSpotInstanceRequestCreditSpecificationPtrOutputWithContext(ctx context.Context) SpotInstanceRequestCreditSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestCreditSpecificationPtrOutput)
}

type SpotInstanceRequestCreditSpecificationOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestCreditSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestCreditSpecification)(nil)).Elem()
}

func (o SpotInstanceRequestCreditSpecificationOutput) ToSpotInstanceRequestCreditSpecificationOutput() SpotInstanceRequestCreditSpecificationOutput {
	return o
}

func (o SpotInstanceRequestCreditSpecificationOutput) ToSpotInstanceRequestCreditSpecificationOutputWithContext(ctx context.Context) SpotInstanceRequestCreditSpecificationOutput {
	return o
}

func (o SpotInstanceRequestCreditSpecificationOutput) ToSpotInstanceRequestCreditSpecificationPtrOutput() SpotInstanceRequestCreditSpecificationPtrOutput {
	return o.ToSpotInstanceRequestCreditSpecificationPtrOutputWithContext(context.Background())
}

func (o SpotInstanceRequestCreditSpecificationOutput) ToSpotInstanceRequestCreditSpecificationPtrOutputWithContext(ctx context.Context) SpotInstanceRequestCreditSpecificationPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestCreditSpecification) *SpotInstanceRequestCreditSpecification {
		return &v
	}).(SpotInstanceRequestCreditSpecificationPtrOutput)
}

// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
func (o SpotInstanceRequestCreditSpecificationOutput) CpuCredits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestCreditSpecification) *string { return v.CpuCredits }).(pulumi.StringPtrOutput)
}

type SpotInstanceRequestCreditSpecificationPtrOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestCreditSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotInstanceRequestCreditSpecification)(nil)).Elem()
}

func (o SpotInstanceRequestCreditSpecificationPtrOutput) ToSpotInstanceRequestCreditSpecificationPtrOutput() SpotInstanceRequestCreditSpecificationPtrOutput {
	return o
}

func (o SpotInstanceRequestCreditSpecificationPtrOutput) ToSpotInstanceRequestCreditSpecificationPtrOutputWithContext(ctx context.Context) SpotInstanceRequestCreditSpecificationPtrOutput {
	return o
}

func (o SpotInstanceRequestCreditSpecificationPtrOutput) Elem() SpotInstanceRequestCreditSpecificationOutput {
	return o.ApplyT(func(v *SpotInstanceRequestCreditSpecification) SpotInstanceRequestCreditSpecification { return *v }).(SpotInstanceRequestCreditSpecificationOutput)
}

// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
func (o SpotInstanceRequestCreditSpecificationPtrOutput) CpuCredits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestCreditSpecification) *string { return v.CpuCredits }).(pulumi.StringPtrOutput)
}

type SpotInstanceRequestCreditSpecificationArgs struct {
	// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits *string `pulumi:"cpuCredits"`
}

type SpotInstanceRequestCreditSpecificationArgsInput interface {
	pulumi.Input

	ToSpotInstanceRequestCreditSpecificationArgsOutput() SpotInstanceRequestCreditSpecificationArgsOutput
	ToSpotInstanceRequestCreditSpecificationArgsOutputWithContext(context.Context) SpotInstanceRequestCreditSpecificationArgsOutput
}

type SpotInstanceRequestCreditSpecificationArgsArgs struct {
	// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits pulumi.StringPtrInput `pulumi:"cpuCredits"`
}

func (SpotInstanceRequestCreditSpecificationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestCreditSpecificationArgs)(nil)).Elem()
}

func (i SpotInstanceRequestCreditSpecificationArgsArgs) ToSpotInstanceRequestCreditSpecificationArgsOutput() SpotInstanceRequestCreditSpecificationArgsOutput {
	return i.ToSpotInstanceRequestCreditSpecificationArgsOutputWithContext(context.Background())
}

func (i SpotInstanceRequestCreditSpecificationArgsArgs) ToSpotInstanceRequestCreditSpecificationArgsOutputWithContext(ctx context.Context) SpotInstanceRequestCreditSpecificationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestCreditSpecificationArgsOutput)
}

func (i SpotInstanceRequestCreditSpecificationArgsArgs) ToSpotInstanceRequestCreditSpecificationArgsPtrOutput() SpotInstanceRequestCreditSpecificationArgsPtrOutput {
	return i.ToSpotInstanceRequestCreditSpecificationArgsPtrOutputWithContext(context.Background())
}

func (i SpotInstanceRequestCreditSpecificationArgsArgs) ToSpotInstanceRequestCreditSpecificationArgsPtrOutputWithContext(ctx context.Context) SpotInstanceRequestCreditSpecificationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestCreditSpecificationArgsOutput).ToSpotInstanceRequestCreditSpecificationArgsPtrOutputWithContext(ctx)
}

type SpotInstanceRequestCreditSpecificationArgsPtrInput interface {
	pulumi.Input

	ToSpotInstanceRequestCreditSpecificationArgsPtrOutput() SpotInstanceRequestCreditSpecificationArgsPtrOutput
	ToSpotInstanceRequestCreditSpecificationArgsPtrOutputWithContext(context.Context) SpotInstanceRequestCreditSpecificationArgsPtrOutput
}

type spotInstanceRequestCreditSpecificationArgsPtrType SpotInstanceRequestCreditSpecificationArgsArgs

func SpotInstanceRequestCreditSpecificationArgsPtr(v *SpotInstanceRequestCreditSpecificationArgsArgs) SpotInstanceRequestCreditSpecificationArgsPtrInput {
	return (*spotInstanceRequestCreditSpecificationArgsPtrType)(v)
}

func (*spotInstanceRequestCreditSpecificationArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotInstanceRequestCreditSpecificationArgs)(nil)).Elem()
}

func (i *spotInstanceRequestCreditSpecificationArgsPtrType) ToSpotInstanceRequestCreditSpecificationArgsPtrOutput() SpotInstanceRequestCreditSpecificationArgsPtrOutput {
	return i.ToSpotInstanceRequestCreditSpecificationArgsPtrOutputWithContext(context.Background())
}

func (i *spotInstanceRequestCreditSpecificationArgsPtrType) ToSpotInstanceRequestCreditSpecificationArgsPtrOutputWithContext(ctx context.Context) SpotInstanceRequestCreditSpecificationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestCreditSpecificationArgsPtrOutput)
}

type SpotInstanceRequestCreditSpecificationArgsOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestCreditSpecificationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestCreditSpecificationArgs)(nil)).Elem()
}

func (o SpotInstanceRequestCreditSpecificationArgsOutput) ToSpotInstanceRequestCreditSpecificationArgsOutput() SpotInstanceRequestCreditSpecificationArgsOutput {
	return o
}

func (o SpotInstanceRequestCreditSpecificationArgsOutput) ToSpotInstanceRequestCreditSpecificationArgsOutputWithContext(ctx context.Context) SpotInstanceRequestCreditSpecificationArgsOutput {
	return o
}

func (o SpotInstanceRequestCreditSpecificationArgsOutput) ToSpotInstanceRequestCreditSpecificationArgsPtrOutput() SpotInstanceRequestCreditSpecificationArgsPtrOutput {
	return o.ToSpotInstanceRequestCreditSpecificationArgsPtrOutputWithContext(context.Background())
}

func (o SpotInstanceRequestCreditSpecificationArgsOutput) ToSpotInstanceRequestCreditSpecificationArgsPtrOutputWithContext(ctx context.Context) SpotInstanceRequestCreditSpecificationArgsPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestCreditSpecificationArgs) *SpotInstanceRequestCreditSpecificationArgs {
		return &v
	}).(SpotInstanceRequestCreditSpecificationArgsPtrOutput)
}

// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
func (o SpotInstanceRequestCreditSpecificationArgsOutput) CpuCredits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestCreditSpecificationArgs) *string { return v.CpuCredits }).(pulumi.StringPtrOutput)
}

type SpotInstanceRequestCreditSpecificationArgsPtrOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestCreditSpecificationArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotInstanceRequestCreditSpecificationArgs)(nil)).Elem()
}

func (o SpotInstanceRequestCreditSpecificationArgsPtrOutput) ToSpotInstanceRequestCreditSpecificationArgsPtrOutput() SpotInstanceRequestCreditSpecificationArgsPtrOutput {
	return o
}

func (o SpotInstanceRequestCreditSpecificationArgsPtrOutput) ToSpotInstanceRequestCreditSpecificationArgsPtrOutputWithContext(ctx context.Context) SpotInstanceRequestCreditSpecificationArgsPtrOutput {
	return o
}

func (o SpotInstanceRequestCreditSpecificationArgsPtrOutput) Elem() SpotInstanceRequestCreditSpecificationArgsOutput {
	return o.ApplyT(func(v *SpotInstanceRequestCreditSpecificationArgs) SpotInstanceRequestCreditSpecificationArgs {
		return *v
	}).(SpotInstanceRequestCreditSpecificationArgsOutput)
}

// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
func (o SpotInstanceRequestCreditSpecificationArgsPtrOutput) CpuCredits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestCreditSpecificationArgs) *string { return v.CpuCredits }).(pulumi.StringPtrOutput)
}

type SpotInstanceRequestCreditSpecificationState struct {
	// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits *string `pulumi:"cpuCredits"`
}

type SpotInstanceRequestCreditSpecificationStateInput interface {
	pulumi.Input

	ToSpotInstanceRequestCreditSpecificationStateOutput() SpotInstanceRequestCreditSpecificationStateOutput
	ToSpotInstanceRequestCreditSpecificationStateOutputWithContext(context.Context) SpotInstanceRequestCreditSpecificationStateOutput
}

type SpotInstanceRequestCreditSpecificationStateArgs struct {
	// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits pulumi.StringPtrInput `pulumi:"cpuCredits"`
}

func (SpotInstanceRequestCreditSpecificationStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestCreditSpecificationState)(nil)).Elem()
}

func (i SpotInstanceRequestCreditSpecificationStateArgs) ToSpotInstanceRequestCreditSpecificationStateOutput() SpotInstanceRequestCreditSpecificationStateOutput {
	return i.ToSpotInstanceRequestCreditSpecificationStateOutputWithContext(context.Background())
}

func (i SpotInstanceRequestCreditSpecificationStateArgs) ToSpotInstanceRequestCreditSpecificationStateOutputWithContext(ctx context.Context) SpotInstanceRequestCreditSpecificationStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestCreditSpecificationStateOutput)
}

type SpotInstanceRequestCreditSpecificationStateOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestCreditSpecificationStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestCreditSpecificationState)(nil)).Elem()
}

func (o SpotInstanceRequestCreditSpecificationStateOutput) ToSpotInstanceRequestCreditSpecificationStateOutput() SpotInstanceRequestCreditSpecificationStateOutput {
	return o
}

func (o SpotInstanceRequestCreditSpecificationStateOutput) ToSpotInstanceRequestCreditSpecificationStateOutputWithContext(ctx context.Context) SpotInstanceRequestCreditSpecificationStateOutput {
	return o
}

// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
func (o SpotInstanceRequestCreditSpecificationStateOutput) CpuCredits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestCreditSpecificationState) *string { return v.CpuCredits }).(pulumi.StringPtrOutput)
}

type SpotInstanceRequestEbsBlockDevice struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The name of the device to mount.
	DeviceName string `pulumi:"deviceName"`
	// Enables [EBS
	// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
	Encrypted bool `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops int `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId string `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId string `pulumi:"snapshotId"`
	VolumeId   string `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize int `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`,
	// or `"io1"`. (Default: `"gp2"`).
	VolumeType string `pulumi:"volumeType"`
}

type SpotInstanceRequestEbsBlockDeviceInput interface {
	pulumi.Input

	ToSpotInstanceRequestEbsBlockDeviceOutput() SpotInstanceRequestEbsBlockDeviceOutput
	ToSpotInstanceRequestEbsBlockDeviceOutputWithContext(context.Context) SpotInstanceRequestEbsBlockDeviceOutput
}

type SpotInstanceRequestEbsBlockDeviceArgs struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The name of the device to mount.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Enables [EBS
	// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
	Encrypted pulumi.BoolInput `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops pulumi.IntInput `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	VolumeId   pulumi.StringInput `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`,
	// or `"io1"`. (Default: `"gp2"`).
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (SpotInstanceRequestEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestEbsBlockDevice)(nil)).Elem()
}

func (i SpotInstanceRequestEbsBlockDeviceArgs) ToSpotInstanceRequestEbsBlockDeviceOutput() SpotInstanceRequestEbsBlockDeviceOutput {
	return i.ToSpotInstanceRequestEbsBlockDeviceOutputWithContext(context.Background())
}

func (i SpotInstanceRequestEbsBlockDeviceArgs) ToSpotInstanceRequestEbsBlockDeviceOutputWithContext(ctx context.Context) SpotInstanceRequestEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestEbsBlockDeviceOutput)
}

type SpotInstanceRequestEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToSpotInstanceRequestEbsBlockDeviceArrayOutput() SpotInstanceRequestEbsBlockDeviceArrayOutput
	ToSpotInstanceRequestEbsBlockDeviceArrayOutputWithContext(context.Context) SpotInstanceRequestEbsBlockDeviceArrayOutput
}

type SpotInstanceRequestEbsBlockDeviceArray []SpotInstanceRequestEbsBlockDeviceInput

func (SpotInstanceRequestEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestEbsBlockDevice)(nil)).Elem()
}

func (i SpotInstanceRequestEbsBlockDeviceArray) ToSpotInstanceRequestEbsBlockDeviceArrayOutput() SpotInstanceRequestEbsBlockDeviceArrayOutput {
	return i.ToSpotInstanceRequestEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i SpotInstanceRequestEbsBlockDeviceArray) ToSpotInstanceRequestEbsBlockDeviceArrayOutputWithContext(ctx context.Context) SpotInstanceRequestEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestEbsBlockDeviceArrayOutput)
}

type SpotInstanceRequestEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestEbsBlockDevice)(nil)).Elem()
}

func (o SpotInstanceRequestEbsBlockDeviceOutput) ToSpotInstanceRequestEbsBlockDeviceOutput() SpotInstanceRequestEbsBlockDeviceOutput {
	return o
}

func (o SpotInstanceRequestEbsBlockDeviceOutput) ToSpotInstanceRequestEbsBlockDeviceOutputWithContext(ctx context.Context) SpotInstanceRequestEbsBlockDeviceOutput {
	return o
}

// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o SpotInstanceRequestEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The name of the device to mount.
func (o SpotInstanceRequestEbsBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Enables [EBS
// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
func (o SpotInstanceRequestEbsBlockDeviceOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDevice) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This must be set with a `volumeType` of `"io1"`.
func (o SpotInstanceRequestEbsBlockDeviceOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDevice) int { return v.Iops }).(pulumi.IntOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o SpotInstanceRequestEbsBlockDeviceOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDevice) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

// The Snapshot ID to mount.
func (o SpotInstanceRequestEbsBlockDeviceOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDevice) string { return v.SnapshotId }).(pulumi.StringOutput)
}

func (o SpotInstanceRequestEbsBlockDeviceOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDevice) string { return v.VolumeId }).(pulumi.StringOutput)
}

// The size of the volume in gibibytes (GiB).
func (o SpotInstanceRequestEbsBlockDeviceOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDevice) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`,
// or `"io1"`. (Default: `"gp2"`).
func (o SpotInstanceRequestEbsBlockDeviceOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDevice) string { return v.VolumeType }).(pulumi.StringOutput)
}

type SpotInstanceRequestEbsBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestEbsBlockDevice)(nil)).Elem()
}

func (o SpotInstanceRequestEbsBlockDeviceArrayOutput) ToSpotInstanceRequestEbsBlockDeviceArrayOutput() SpotInstanceRequestEbsBlockDeviceArrayOutput {
	return o
}

func (o SpotInstanceRequestEbsBlockDeviceArrayOutput) ToSpotInstanceRequestEbsBlockDeviceArrayOutputWithContext(ctx context.Context) SpotInstanceRequestEbsBlockDeviceArrayOutput {
	return o
}

func (o SpotInstanceRequestEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) SpotInstanceRequestEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotInstanceRequestEbsBlockDevice {
		return vs[0].([]SpotInstanceRequestEbsBlockDevice)[vs[1].(int)]
	}).(SpotInstanceRequestEbsBlockDeviceOutput)
}

type SpotInstanceRequestEbsBlockDeviceArgs struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The name of the device to mount.
	DeviceName string `pulumi:"deviceName"`
	// Enables [EBS
	// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
	Encrypted *bool `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops *int `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId *string `pulumi:"snapshotId"`
	VolumeId   *string `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`,
	// or `"io1"`. (Default: `"gp2"`).
	VolumeType *string `pulumi:"volumeType"`
}

type SpotInstanceRequestEbsBlockDeviceArgsInput interface {
	pulumi.Input

	ToSpotInstanceRequestEbsBlockDeviceArgsOutput() SpotInstanceRequestEbsBlockDeviceArgsOutput
	ToSpotInstanceRequestEbsBlockDeviceArgsOutputWithContext(context.Context) SpotInstanceRequestEbsBlockDeviceArgsOutput
}

type SpotInstanceRequestEbsBlockDeviceArgsArgs struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The name of the device to mount.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Enables [EBS
	// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	VolumeId   pulumi.StringPtrInput `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`,
	// or `"io1"`. (Default: `"gp2"`).
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (SpotInstanceRequestEbsBlockDeviceArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestEbsBlockDeviceArgs)(nil)).Elem()
}

func (i SpotInstanceRequestEbsBlockDeviceArgsArgs) ToSpotInstanceRequestEbsBlockDeviceArgsOutput() SpotInstanceRequestEbsBlockDeviceArgsOutput {
	return i.ToSpotInstanceRequestEbsBlockDeviceArgsOutputWithContext(context.Background())
}

func (i SpotInstanceRequestEbsBlockDeviceArgsArgs) ToSpotInstanceRequestEbsBlockDeviceArgsOutputWithContext(ctx context.Context) SpotInstanceRequestEbsBlockDeviceArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestEbsBlockDeviceArgsOutput)
}

type SpotInstanceRequestEbsBlockDeviceArgsArrayInput interface {
	pulumi.Input

	ToSpotInstanceRequestEbsBlockDeviceArgsArrayOutput() SpotInstanceRequestEbsBlockDeviceArgsArrayOutput
	ToSpotInstanceRequestEbsBlockDeviceArgsArrayOutputWithContext(context.Context) SpotInstanceRequestEbsBlockDeviceArgsArrayOutput
}

type SpotInstanceRequestEbsBlockDeviceArgsArray []SpotInstanceRequestEbsBlockDeviceArgsInput

func (SpotInstanceRequestEbsBlockDeviceArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestEbsBlockDeviceArgs)(nil)).Elem()
}

func (i SpotInstanceRequestEbsBlockDeviceArgsArray) ToSpotInstanceRequestEbsBlockDeviceArgsArrayOutput() SpotInstanceRequestEbsBlockDeviceArgsArrayOutput {
	return i.ToSpotInstanceRequestEbsBlockDeviceArgsArrayOutputWithContext(context.Background())
}

func (i SpotInstanceRequestEbsBlockDeviceArgsArray) ToSpotInstanceRequestEbsBlockDeviceArgsArrayOutputWithContext(ctx context.Context) SpotInstanceRequestEbsBlockDeviceArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestEbsBlockDeviceArgsArrayOutput)
}

type SpotInstanceRequestEbsBlockDeviceArgsOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestEbsBlockDeviceArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestEbsBlockDeviceArgs)(nil)).Elem()
}

func (o SpotInstanceRequestEbsBlockDeviceArgsOutput) ToSpotInstanceRequestEbsBlockDeviceArgsOutput() SpotInstanceRequestEbsBlockDeviceArgsOutput {
	return o
}

func (o SpotInstanceRequestEbsBlockDeviceArgsOutput) ToSpotInstanceRequestEbsBlockDeviceArgsOutputWithContext(ctx context.Context) SpotInstanceRequestEbsBlockDeviceArgsOutput {
	return o
}

// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o SpotInstanceRequestEbsBlockDeviceArgsOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDeviceArgs) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The name of the device to mount.
func (o SpotInstanceRequestEbsBlockDeviceArgsOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDeviceArgs) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Enables [EBS
// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
func (o SpotInstanceRequestEbsBlockDeviceArgsOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDeviceArgs) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This must be set with a `volumeType` of `"io1"`.
func (o SpotInstanceRequestEbsBlockDeviceArgsOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDeviceArgs) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o SpotInstanceRequestEbsBlockDeviceArgsOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDeviceArgs) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The Snapshot ID to mount.
func (o SpotInstanceRequestEbsBlockDeviceArgsOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDeviceArgs) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

func (o SpotInstanceRequestEbsBlockDeviceArgsOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDeviceArgs) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gibibytes (GiB).
func (o SpotInstanceRequestEbsBlockDeviceArgsOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDeviceArgs) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`,
// or `"io1"`. (Default: `"gp2"`).
func (o SpotInstanceRequestEbsBlockDeviceArgsOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDeviceArgs) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type SpotInstanceRequestEbsBlockDeviceArgsArrayOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestEbsBlockDeviceArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestEbsBlockDeviceArgs)(nil)).Elem()
}

func (o SpotInstanceRequestEbsBlockDeviceArgsArrayOutput) ToSpotInstanceRequestEbsBlockDeviceArgsArrayOutput() SpotInstanceRequestEbsBlockDeviceArgsArrayOutput {
	return o
}

func (o SpotInstanceRequestEbsBlockDeviceArgsArrayOutput) ToSpotInstanceRequestEbsBlockDeviceArgsArrayOutputWithContext(ctx context.Context) SpotInstanceRequestEbsBlockDeviceArgsArrayOutput {
	return o
}

func (o SpotInstanceRequestEbsBlockDeviceArgsArrayOutput) Index(i pulumi.IntInput) SpotInstanceRequestEbsBlockDeviceArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotInstanceRequestEbsBlockDeviceArgs {
		return vs[0].([]SpotInstanceRequestEbsBlockDeviceArgs)[vs[1].(int)]
	}).(SpotInstanceRequestEbsBlockDeviceArgsOutput)
}

type SpotInstanceRequestEbsBlockDeviceState struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The name of the device to mount.
	DeviceName string `pulumi:"deviceName"`
	// Enables [EBS
	// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
	Encrypted *bool `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops *int `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId *string `pulumi:"snapshotId"`
	VolumeId   *string `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`,
	// or `"io1"`. (Default: `"gp2"`).
	VolumeType *string `pulumi:"volumeType"`
}

type SpotInstanceRequestEbsBlockDeviceStateInput interface {
	pulumi.Input

	ToSpotInstanceRequestEbsBlockDeviceStateOutput() SpotInstanceRequestEbsBlockDeviceStateOutput
	ToSpotInstanceRequestEbsBlockDeviceStateOutputWithContext(context.Context) SpotInstanceRequestEbsBlockDeviceStateOutput
}

type SpotInstanceRequestEbsBlockDeviceStateArgs struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The name of the device to mount.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Enables [EBS
	// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	VolumeId   pulumi.StringPtrInput `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`,
	// or `"io1"`. (Default: `"gp2"`).
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (SpotInstanceRequestEbsBlockDeviceStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestEbsBlockDeviceState)(nil)).Elem()
}

func (i SpotInstanceRequestEbsBlockDeviceStateArgs) ToSpotInstanceRequestEbsBlockDeviceStateOutput() SpotInstanceRequestEbsBlockDeviceStateOutput {
	return i.ToSpotInstanceRequestEbsBlockDeviceStateOutputWithContext(context.Background())
}

func (i SpotInstanceRequestEbsBlockDeviceStateArgs) ToSpotInstanceRequestEbsBlockDeviceStateOutputWithContext(ctx context.Context) SpotInstanceRequestEbsBlockDeviceStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestEbsBlockDeviceStateOutput)
}

type SpotInstanceRequestEbsBlockDeviceStateArrayInput interface {
	pulumi.Input

	ToSpotInstanceRequestEbsBlockDeviceStateArrayOutput() SpotInstanceRequestEbsBlockDeviceStateArrayOutput
	ToSpotInstanceRequestEbsBlockDeviceStateArrayOutputWithContext(context.Context) SpotInstanceRequestEbsBlockDeviceStateArrayOutput
}

type SpotInstanceRequestEbsBlockDeviceStateArray []SpotInstanceRequestEbsBlockDeviceStateInput

func (SpotInstanceRequestEbsBlockDeviceStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestEbsBlockDeviceState)(nil)).Elem()
}

func (i SpotInstanceRequestEbsBlockDeviceStateArray) ToSpotInstanceRequestEbsBlockDeviceStateArrayOutput() SpotInstanceRequestEbsBlockDeviceStateArrayOutput {
	return i.ToSpotInstanceRequestEbsBlockDeviceStateArrayOutputWithContext(context.Background())
}

func (i SpotInstanceRequestEbsBlockDeviceStateArray) ToSpotInstanceRequestEbsBlockDeviceStateArrayOutputWithContext(ctx context.Context) SpotInstanceRequestEbsBlockDeviceStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestEbsBlockDeviceStateArrayOutput)
}

type SpotInstanceRequestEbsBlockDeviceStateOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestEbsBlockDeviceStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestEbsBlockDeviceState)(nil)).Elem()
}

func (o SpotInstanceRequestEbsBlockDeviceStateOutput) ToSpotInstanceRequestEbsBlockDeviceStateOutput() SpotInstanceRequestEbsBlockDeviceStateOutput {
	return o
}

func (o SpotInstanceRequestEbsBlockDeviceStateOutput) ToSpotInstanceRequestEbsBlockDeviceStateOutputWithContext(ctx context.Context) SpotInstanceRequestEbsBlockDeviceStateOutput {
	return o
}

// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o SpotInstanceRequestEbsBlockDeviceStateOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDeviceState) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The name of the device to mount.
func (o SpotInstanceRequestEbsBlockDeviceStateOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDeviceState) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Enables [EBS
// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
func (o SpotInstanceRequestEbsBlockDeviceStateOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDeviceState) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This must be set with a `volumeType` of `"io1"`.
func (o SpotInstanceRequestEbsBlockDeviceStateOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDeviceState) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o SpotInstanceRequestEbsBlockDeviceStateOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDeviceState) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The Snapshot ID to mount.
func (o SpotInstanceRequestEbsBlockDeviceStateOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDeviceState) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

func (o SpotInstanceRequestEbsBlockDeviceStateOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDeviceState) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gibibytes (GiB).
func (o SpotInstanceRequestEbsBlockDeviceStateOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDeviceState) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`,
// or `"io1"`. (Default: `"gp2"`).
func (o SpotInstanceRequestEbsBlockDeviceStateOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDeviceState) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type SpotInstanceRequestEbsBlockDeviceStateArrayOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestEbsBlockDeviceStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestEbsBlockDeviceState)(nil)).Elem()
}

func (o SpotInstanceRequestEbsBlockDeviceStateArrayOutput) ToSpotInstanceRequestEbsBlockDeviceStateArrayOutput() SpotInstanceRequestEbsBlockDeviceStateArrayOutput {
	return o
}

func (o SpotInstanceRequestEbsBlockDeviceStateArrayOutput) ToSpotInstanceRequestEbsBlockDeviceStateArrayOutputWithContext(ctx context.Context) SpotInstanceRequestEbsBlockDeviceStateArrayOutput {
	return o
}

func (o SpotInstanceRequestEbsBlockDeviceStateArrayOutput) Index(i pulumi.IntInput) SpotInstanceRequestEbsBlockDeviceStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotInstanceRequestEbsBlockDeviceState {
		return vs[0].([]SpotInstanceRequestEbsBlockDeviceState)[vs[1].(int)]
	}).(SpotInstanceRequestEbsBlockDeviceStateOutput)
}

type SpotInstanceRequestEphemeralBlockDevice struct {
	// The name of the block device to mount on the instance.
	DeviceName string `pulumi:"deviceName"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice *bool `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g. `"ephemeral0"`).
	VirtualName *string `pulumi:"virtualName"`
}

type SpotInstanceRequestEphemeralBlockDeviceInput interface {
	pulumi.Input

	ToSpotInstanceRequestEphemeralBlockDeviceOutput() SpotInstanceRequestEphemeralBlockDeviceOutput
	ToSpotInstanceRequestEphemeralBlockDeviceOutputWithContext(context.Context) SpotInstanceRequestEphemeralBlockDeviceOutput
}

type SpotInstanceRequestEphemeralBlockDeviceArgs struct {
	// The name of the block device to mount on the instance.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice pulumi.BoolPtrInput `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g. `"ephemeral0"`).
	VirtualName pulumi.StringPtrInput `pulumi:"virtualName"`
}

func (SpotInstanceRequestEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestEphemeralBlockDevice)(nil)).Elem()
}

func (i SpotInstanceRequestEphemeralBlockDeviceArgs) ToSpotInstanceRequestEphemeralBlockDeviceOutput() SpotInstanceRequestEphemeralBlockDeviceOutput {
	return i.ToSpotInstanceRequestEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i SpotInstanceRequestEphemeralBlockDeviceArgs) ToSpotInstanceRequestEphemeralBlockDeviceOutputWithContext(ctx context.Context) SpotInstanceRequestEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestEphemeralBlockDeviceOutput)
}

type SpotInstanceRequestEphemeralBlockDeviceArrayInput interface {
	pulumi.Input

	ToSpotInstanceRequestEphemeralBlockDeviceArrayOutput() SpotInstanceRequestEphemeralBlockDeviceArrayOutput
	ToSpotInstanceRequestEphemeralBlockDeviceArrayOutputWithContext(context.Context) SpotInstanceRequestEphemeralBlockDeviceArrayOutput
}

type SpotInstanceRequestEphemeralBlockDeviceArray []SpotInstanceRequestEphemeralBlockDeviceInput

func (SpotInstanceRequestEphemeralBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestEphemeralBlockDevice)(nil)).Elem()
}

func (i SpotInstanceRequestEphemeralBlockDeviceArray) ToSpotInstanceRequestEphemeralBlockDeviceArrayOutput() SpotInstanceRequestEphemeralBlockDeviceArrayOutput {
	return i.ToSpotInstanceRequestEphemeralBlockDeviceArrayOutputWithContext(context.Background())
}

func (i SpotInstanceRequestEphemeralBlockDeviceArray) ToSpotInstanceRequestEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) SpotInstanceRequestEphemeralBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestEphemeralBlockDeviceArrayOutput)
}

type SpotInstanceRequestEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestEphemeralBlockDevice)(nil)).Elem()
}

func (o SpotInstanceRequestEphemeralBlockDeviceOutput) ToSpotInstanceRequestEphemeralBlockDeviceOutput() SpotInstanceRequestEphemeralBlockDeviceOutput {
	return o
}

func (o SpotInstanceRequestEphemeralBlockDeviceOutput) ToSpotInstanceRequestEphemeralBlockDeviceOutputWithContext(ctx context.Context) SpotInstanceRequestEphemeralBlockDeviceOutput {
	return o
}

// The name of the block device to mount on the instance.
func (o SpotInstanceRequestEphemeralBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v SpotInstanceRequestEphemeralBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Suppresses the specified device included in the AMI's block device mapping.
func (o SpotInstanceRequestEphemeralBlockDeviceOutput) NoDevice() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEphemeralBlockDevice) *bool { return v.NoDevice }).(pulumi.BoolPtrOutput)
}

// The [Instance Store Device
// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
// (e.g. `"ephemeral0"`).
func (o SpotInstanceRequestEphemeralBlockDeviceOutput) VirtualName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEphemeralBlockDevice) *string { return v.VirtualName }).(pulumi.StringPtrOutput)
}

type SpotInstanceRequestEphemeralBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestEphemeralBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestEphemeralBlockDevice)(nil)).Elem()
}

func (o SpotInstanceRequestEphemeralBlockDeviceArrayOutput) ToSpotInstanceRequestEphemeralBlockDeviceArrayOutput() SpotInstanceRequestEphemeralBlockDeviceArrayOutput {
	return o
}

func (o SpotInstanceRequestEphemeralBlockDeviceArrayOutput) ToSpotInstanceRequestEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) SpotInstanceRequestEphemeralBlockDeviceArrayOutput {
	return o
}

func (o SpotInstanceRequestEphemeralBlockDeviceArrayOutput) Index(i pulumi.IntInput) SpotInstanceRequestEphemeralBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotInstanceRequestEphemeralBlockDevice {
		return vs[0].([]SpotInstanceRequestEphemeralBlockDevice)[vs[1].(int)]
	}).(SpotInstanceRequestEphemeralBlockDeviceOutput)
}

type SpotInstanceRequestEphemeralBlockDeviceArgs struct {
	// The name of the block device to mount on the instance.
	DeviceName string `pulumi:"deviceName"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice *bool `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g. `"ephemeral0"`).
	VirtualName *string `pulumi:"virtualName"`
}

type SpotInstanceRequestEphemeralBlockDeviceArgsInput interface {
	pulumi.Input

	ToSpotInstanceRequestEphemeralBlockDeviceArgsOutput() SpotInstanceRequestEphemeralBlockDeviceArgsOutput
	ToSpotInstanceRequestEphemeralBlockDeviceArgsOutputWithContext(context.Context) SpotInstanceRequestEphemeralBlockDeviceArgsOutput
}

type SpotInstanceRequestEphemeralBlockDeviceArgsArgs struct {
	// The name of the block device to mount on the instance.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice pulumi.BoolPtrInput `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g. `"ephemeral0"`).
	VirtualName pulumi.StringPtrInput `pulumi:"virtualName"`
}

func (SpotInstanceRequestEphemeralBlockDeviceArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestEphemeralBlockDeviceArgs)(nil)).Elem()
}

func (i SpotInstanceRequestEphemeralBlockDeviceArgsArgs) ToSpotInstanceRequestEphemeralBlockDeviceArgsOutput() SpotInstanceRequestEphemeralBlockDeviceArgsOutput {
	return i.ToSpotInstanceRequestEphemeralBlockDeviceArgsOutputWithContext(context.Background())
}

func (i SpotInstanceRequestEphemeralBlockDeviceArgsArgs) ToSpotInstanceRequestEphemeralBlockDeviceArgsOutputWithContext(ctx context.Context) SpotInstanceRequestEphemeralBlockDeviceArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestEphemeralBlockDeviceArgsOutput)
}

type SpotInstanceRequestEphemeralBlockDeviceArgsArrayInput interface {
	pulumi.Input

	ToSpotInstanceRequestEphemeralBlockDeviceArgsArrayOutput() SpotInstanceRequestEphemeralBlockDeviceArgsArrayOutput
	ToSpotInstanceRequestEphemeralBlockDeviceArgsArrayOutputWithContext(context.Context) SpotInstanceRequestEphemeralBlockDeviceArgsArrayOutput
}

type SpotInstanceRequestEphemeralBlockDeviceArgsArray []SpotInstanceRequestEphemeralBlockDeviceArgsInput

func (SpotInstanceRequestEphemeralBlockDeviceArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestEphemeralBlockDeviceArgs)(nil)).Elem()
}

func (i SpotInstanceRequestEphemeralBlockDeviceArgsArray) ToSpotInstanceRequestEphemeralBlockDeviceArgsArrayOutput() SpotInstanceRequestEphemeralBlockDeviceArgsArrayOutput {
	return i.ToSpotInstanceRequestEphemeralBlockDeviceArgsArrayOutputWithContext(context.Background())
}

func (i SpotInstanceRequestEphemeralBlockDeviceArgsArray) ToSpotInstanceRequestEphemeralBlockDeviceArgsArrayOutputWithContext(ctx context.Context) SpotInstanceRequestEphemeralBlockDeviceArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestEphemeralBlockDeviceArgsArrayOutput)
}

type SpotInstanceRequestEphemeralBlockDeviceArgsOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestEphemeralBlockDeviceArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestEphemeralBlockDeviceArgs)(nil)).Elem()
}

func (o SpotInstanceRequestEphemeralBlockDeviceArgsOutput) ToSpotInstanceRequestEphemeralBlockDeviceArgsOutput() SpotInstanceRequestEphemeralBlockDeviceArgsOutput {
	return o
}

func (o SpotInstanceRequestEphemeralBlockDeviceArgsOutput) ToSpotInstanceRequestEphemeralBlockDeviceArgsOutputWithContext(ctx context.Context) SpotInstanceRequestEphemeralBlockDeviceArgsOutput {
	return o
}

// The name of the block device to mount on the instance.
func (o SpotInstanceRequestEphemeralBlockDeviceArgsOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v SpotInstanceRequestEphemeralBlockDeviceArgs) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Suppresses the specified device included in the AMI's block device mapping.
func (o SpotInstanceRequestEphemeralBlockDeviceArgsOutput) NoDevice() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEphemeralBlockDeviceArgs) *bool { return v.NoDevice }).(pulumi.BoolPtrOutput)
}

// The [Instance Store Device
// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
// (e.g. `"ephemeral0"`).
func (o SpotInstanceRequestEphemeralBlockDeviceArgsOutput) VirtualName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEphemeralBlockDeviceArgs) *string { return v.VirtualName }).(pulumi.StringPtrOutput)
}

type SpotInstanceRequestEphemeralBlockDeviceArgsArrayOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestEphemeralBlockDeviceArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestEphemeralBlockDeviceArgs)(nil)).Elem()
}

func (o SpotInstanceRequestEphemeralBlockDeviceArgsArrayOutput) ToSpotInstanceRequestEphemeralBlockDeviceArgsArrayOutput() SpotInstanceRequestEphemeralBlockDeviceArgsArrayOutput {
	return o
}

func (o SpotInstanceRequestEphemeralBlockDeviceArgsArrayOutput) ToSpotInstanceRequestEphemeralBlockDeviceArgsArrayOutputWithContext(ctx context.Context) SpotInstanceRequestEphemeralBlockDeviceArgsArrayOutput {
	return o
}

func (o SpotInstanceRequestEphemeralBlockDeviceArgsArrayOutput) Index(i pulumi.IntInput) SpotInstanceRequestEphemeralBlockDeviceArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotInstanceRequestEphemeralBlockDeviceArgs {
		return vs[0].([]SpotInstanceRequestEphemeralBlockDeviceArgs)[vs[1].(int)]
	}).(SpotInstanceRequestEphemeralBlockDeviceArgsOutput)
}

type SpotInstanceRequestEphemeralBlockDeviceState struct {
	// The name of the block device to mount on the instance.
	DeviceName string `pulumi:"deviceName"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice *bool `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g. `"ephemeral0"`).
	VirtualName *string `pulumi:"virtualName"`
}

type SpotInstanceRequestEphemeralBlockDeviceStateInput interface {
	pulumi.Input

	ToSpotInstanceRequestEphemeralBlockDeviceStateOutput() SpotInstanceRequestEphemeralBlockDeviceStateOutput
	ToSpotInstanceRequestEphemeralBlockDeviceStateOutputWithContext(context.Context) SpotInstanceRequestEphemeralBlockDeviceStateOutput
}

type SpotInstanceRequestEphemeralBlockDeviceStateArgs struct {
	// The name of the block device to mount on the instance.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice pulumi.BoolPtrInput `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g. `"ephemeral0"`).
	VirtualName pulumi.StringPtrInput `pulumi:"virtualName"`
}

func (SpotInstanceRequestEphemeralBlockDeviceStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestEphemeralBlockDeviceState)(nil)).Elem()
}

func (i SpotInstanceRequestEphemeralBlockDeviceStateArgs) ToSpotInstanceRequestEphemeralBlockDeviceStateOutput() SpotInstanceRequestEphemeralBlockDeviceStateOutput {
	return i.ToSpotInstanceRequestEphemeralBlockDeviceStateOutputWithContext(context.Background())
}

func (i SpotInstanceRequestEphemeralBlockDeviceStateArgs) ToSpotInstanceRequestEphemeralBlockDeviceStateOutputWithContext(ctx context.Context) SpotInstanceRequestEphemeralBlockDeviceStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestEphemeralBlockDeviceStateOutput)
}

type SpotInstanceRequestEphemeralBlockDeviceStateArrayInput interface {
	pulumi.Input

	ToSpotInstanceRequestEphemeralBlockDeviceStateArrayOutput() SpotInstanceRequestEphemeralBlockDeviceStateArrayOutput
	ToSpotInstanceRequestEphemeralBlockDeviceStateArrayOutputWithContext(context.Context) SpotInstanceRequestEphemeralBlockDeviceStateArrayOutput
}

type SpotInstanceRequestEphemeralBlockDeviceStateArray []SpotInstanceRequestEphemeralBlockDeviceStateInput

func (SpotInstanceRequestEphemeralBlockDeviceStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestEphemeralBlockDeviceState)(nil)).Elem()
}

func (i SpotInstanceRequestEphemeralBlockDeviceStateArray) ToSpotInstanceRequestEphemeralBlockDeviceStateArrayOutput() SpotInstanceRequestEphemeralBlockDeviceStateArrayOutput {
	return i.ToSpotInstanceRequestEphemeralBlockDeviceStateArrayOutputWithContext(context.Background())
}

func (i SpotInstanceRequestEphemeralBlockDeviceStateArray) ToSpotInstanceRequestEphemeralBlockDeviceStateArrayOutputWithContext(ctx context.Context) SpotInstanceRequestEphemeralBlockDeviceStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestEphemeralBlockDeviceStateArrayOutput)
}

type SpotInstanceRequestEphemeralBlockDeviceStateOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestEphemeralBlockDeviceStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestEphemeralBlockDeviceState)(nil)).Elem()
}

func (o SpotInstanceRequestEphemeralBlockDeviceStateOutput) ToSpotInstanceRequestEphemeralBlockDeviceStateOutput() SpotInstanceRequestEphemeralBlockDeviceStateOutput {
	return o
}

func (o SpotInstanceRequestEphemeralBlockDeviceStateOutput) ToSpotInstanceRequestEphemeralBlockDeviceStateOutputWithContext(ctx context.Context) SpotInstanceRequestEphemeralBlockDeviceStateOutput {
	return o
}

// The name of the block device to mount on the instance.
func (o SpotInstanceRequestEphemeralBlockDeviceStateOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v SpotInstanceRequestEphemeralBlockDeviceState) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Suppresses the specified device included in the AMI's block device mapping.
func (o SpotInstanceRequestEphemeralBlockDeviceStateOutput) NoDevice() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEphemeralBlockDeviceState) *bool { return v.NoDevice }).(pulumi.BoolPtrOutput)
}

// The [Instance Store Device
// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
// (e.g. `"ephemeral0"`).
func (o SpotInstanceRequestEphemeralBlockDeviceStateOutput) VirtualName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEphemeralBlockDeviceState) *string { return v.VirtualName }).(pulumi.StringPtrOutput)
}

type SpotInstanceRequestEphemeralBlockDeviceStateArrayOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestEphemeralBlockDeviceStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestEphemeralBlockDeviceState)(nil)).Elem()
}

func (o SpotInstanceRequestEphemeralBlockDeviceStateArrayOutput) ToSpotInstanceRequestEphemeralBlockDeviceStateArrayOutput() SpotInstanceRequestEphemeralBlockDeviceStateArrayOutput {
	return o
}

func (o SpotInstanceRequestEphemeralBlockDeviceStateArrayOutput) ToSpotInstanceRequestEphemeralBlockDeviceStateArrayOutputWithContext(ctx context.Context) SpotInstanceRequestEphemeralBlockDeviceStateArrayOutput {
	return o
}

func (o SpotInstanceRequestEphemeralBlockDeviceStateArrayOutput) Index(i pulumi.IntInput) SpotInstanceRequestEphemeralBlockDeviceStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotInstanceRequestEphemeralBlockDeviceState {
		return vs[0].([]SpotInstanceRequestEphemeralBlockDeviceState)[vs[1].(int)]
	}).(SpotInstanceRequestEphemeralBlockDeviceStateOutput)
}

type SpotInstanceRequestMetadataOptions struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint string `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit int `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens string `pulumi:"httpTokens"`
}

type SpotInstanceRequestMetadataOptionsInput interface {
	pulumi.Input

	ToSpotInstanceRequestMetadataOptionsOutput() SpotInstanceRequestMetadataOptionsOutput
	ToSpotInstanceRequestMetadataOptionsOutputWithContext(context.Context) SpotInstanceRequestMetadataOptionsOutput
}

type SpotInstanceRequestMetadataOptionsArgs struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint pulumi.StringInput `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit pulumi.IntInput `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens pulumi.StringInput `pulumi:"httpTokens"`
}

func (SpotInstanceRequestMetadataOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestMetadataOptions)(nil)).Elem()
}

func (i SpotInstanceRequestMetadataOptionsArgs) ToSpotInstanceRequestMetadataOptionsOutput() SpotInstanceRequestMetadataOptionsOutput {
	return i.ToSpotInstanceRequestMetadataOptionsOutputWithContext(context.Background())
}

func (i SpotInstanceRequestMetadataOptionsArgs) ToSpotInstanceRequestMetadataOptionsOutputWithContext(ctx context.Context) SpotInstanceRequestMetadataOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestMetadataOptionsOutput)
}

func (i SpotInstanceRequestMetadataOptionsArgs) ToSpotInstanceRequestMetadataOptionsPtrOutput() SpotInstanceRequestMetadataOptionsPtrOutput {
	return i.ToSpotInstanceRequestMetadataOptionsPtrOutputWithContext(context.Background())
}

func (i SpotInstanceRequestMetadataOptionsArgs) ToSpotInstanceRequestMetadataOptionsPtrOutputWithContext(ctx context.Context) SpotInstanceRequestMetadataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestMetadataOptionsOutput).ToSpotInstanceRequestMetadataOptionsPtrOutputWithContext(ctx)
}

type SpotInstanceRequestMetadataOptionsPtrInput interface {
	pulumi.Input

	ToSpotInstanceRequestMetadataOptionsPtrOutput() SpotInstanceRequestMetadataOptionsPtrOutput
	ToSpotInstanceRequestMetadataOptionsPtrOutputWithContext(context.Context) SpotInstanceRequestMetadataOptionsPtrOutput
}

type spotInstanceRequestMetadataOptionsPtrType SpotInstanceRequestMetadataOptionsArgs

func SpotInstanceRequestMetadataOptionsPtr(v *SpotInstanceRequestMetadataOptionsArgs) SpotInstanceRequestMetadataOptionsPtrInput {
	return (*spotInstanceRequestMetadataOptionsPtrType)(v)
}

func (*spotInstanceRequestMetadataOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotInstanceRequestMetadataOptions)(nil)).Elem()
}

func (i *spotInstanceRequestMetadataOptionsPtrType) ToSpotInstanceRequestMetadataOptionsPtrOutput() SpotInstanceRequestMetadataOptionsPtrOutput {
	return i.ToSpotInstanceRequestMetadataOptionsPtrOutputWithContext(context.Background())
}

func (i *spotInstanceRequestMetadataOptionsPtrType) ToSpotInstanceRequestMetadataOptionsPtrOutputWithContext(ctx context.Context) SpotInstanceRequestMetadataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestMetadataOptionsPtrOutput)
}

type SpotInstanceRequestMetadataOptionsOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestMetadataOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestMetadataOptions)(nil)).Elem()
}

func (o SpotInstanceRequestMetadataOptionsOutput) ToSpotInstanceRequestMetadataOptionsOutput() SpotInstanceRequestMetadataOptionsOutput {
	return o
}

func (o SpotInstanceRequestMetadataOptionsOutput) ToSpotInstanceRequestMetadataOptionsOutputWithContext(ctx context.Context) SpotInstanceRequestMetadataOptionsOutput {
	return o
}

func (o SpotInstanceRequestMetadataOptionsOutput) ToSpotInstanceRequestMetadataOptionsPtrOutput() SpotInstanceRequestMetadataOptionsPtrOutput {
	return o.ToSpotInstanceRequestMetadataOptionsPtrOutputWithContext(context.Background())
}

func (o SpotInstanceRequestMetadataOptionsOutput) ToSpotInstanceRequestMetadataOptionsPtrOutputWithContext(ctx context.Context) SpotInstanceRequestMetadataOptionsPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestMetadataOptions) *SpotInstanceRequestMetadataOptions {
		return &v
	}).(SpotInstanceRequestMetadataOptionsPtrOutput)
}

// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
func (o SpotInstanceRequestMetadataOptionsOutput) HttpEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v SpotInstanceRequestMetadataOptions) string { return v.HttpEndpoint }).(pulumi.StringOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
func (o SpotInstanceRequestMetadataOptionsOutput) HttpPutResponseHopLimit() pulumi.IntOutput {
	return o.ApplyT(func(v SpotInstanceRequestMetadataOptions) int { return v.HttpPutResponseHopLimit }).(pulumi.IntOutput)
}

// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
func (o SpotInstanceRequestMetadataOptionsOutput) HttpTokens() pulumi.StringOutput {
	return o.ApplyT(func(v SpotInstanceRequestMetadataOptions) string { return v.HttpTokens }).(pulumi.StringOutput)
}

type SpotInstanceRequestMetadataOptionsPtrOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestMetadataOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotInstanceRequestMetadataOptions)(nil)).Elem()
}

func (o SpotInstanceRequestMetadataOptionsPtrOutput) ToSpotInstanceRequestMetadataOptionsPtrOutput() SpotInstanceRequestMetadataOptionsPtrOutput {
	return o
}

func (o SpotInstanceRequestMetadataOptionsPtrOutput) ToSpotInstanceRequestMetadataOptionsPtrOutputWithContext(ctx context.Context) SpotInstanceRequestMetadataOptionsPtrOutput {
	return o
}

func (o SpotInstanceRequestMetadataOptionsPtrOutput) Elem() SpotInstanceRequestMetadataOptionsOutput {
	return o.ApplyT(func(v *SpotInstanceRequestMetadataOptions) SpotInstanceRequestMetadataOptions { return *v }).(SpotInstanceRequestMetadataOptionsOutput)
}

// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
func (o SpotInstanceRequestMetadataOptionsPtrOutput) HttpEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v SpotInstanceRequestMetadataOptions) string { return v.HttpEndpoint }).(pulumi.StringOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
func (o SpotInstanceRequestMetadataOptionsPtrOutput) HttpPutResponseHopLimit() pulumi.IntOutput {
	return o.ApplyT(func(v SpotInstanceRequestMetadataOptions) int { return v.HttpPutResponseHopLimit }).(pulumi.IntOutput)
}

// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
func (o SpotInstanceRequestMetadataOptionsPtrOutput) HttpTokens() pulumi.StringOutput {
	return o.ApplyT(func(v SpotInstanceRequestMetadataOptions) string { return v.HttpTokens }).(pulumi.StringOutput)
}

type SpotInstanceRequestMetadataOptionsArgs struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint *string `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit *int `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens *string `pulumi:"httpTokens"`
}

type SpotInstanceRequestMetadataOptionsArgsInput interface {
	pulumi.Input

	ToSpotInstanceRequestMetadataOptionsArgsOutput() SpotInstanceRequestMetadataOptionsArgsOutput
	ToSpotInstanceRequestMetadataOptionsArgsOutputWithContext(context.Context) SpotInstanceRequestMetadataOptionsArgsOutput
}

type SpotInstanceRequestMetadataOptionsArgsArgs struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint pulumi.StringPtrInput `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit pulumi.IntPtrInput `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens pulumi.StringPtrInput `pulumi:"httpTokens"`
}

func (SpotInstanceRequestMetadataOptionsArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestMetadataOptionsArgs)(nil)).Elem()
}

func (i SpotInstanceRequestMetadataOptionsArgsArgs) ToSpotInstanceRequestMetadataOptionsArgsOutput() SpotInstanceRequestMetadataOptionsArgsOutput {
	return i.ToSpotInstanceRequestMetadataOptionsArgsOutputWithContext(context.Background())
}

func (i SpotInstanceRequestMetadataOptionsArgsArgs) ToSpotInstanceRequestMetadataOptionsArgsOutputWithContext(ctx context.Context) SpotInstanceRequestMetadataOptionsArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestMetadataOptionsArgsOutput)
}

func (i SpotInstanceRequestMetadataOptionsArgsArgs) ToSpotInstanceRequestMetadataOptionsArgsPtrOutput() SpotInstanceRequestMetadataOptionsArgsPtrOutput {
	return i.ToSpotInstanceRequestMetadataOptionsArgsPtrOutputWithContext(context.Background())
}

func (i SpotInstanceRequestMetadataOptionsArgsArgs) ToSpotInstanceRequestMetadataOptionsArgsPtrOutputWithContext(ctx context.Context) SpotInstanceRequestMetadataOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestMetadataOptionsArgsOutput).ToSpotInstanceRequestMetadataOptionsArgsPtrOutputWithContext(ctx)
}

type SpotInstanceRequestMetadataOptionsArgsPtrInput interface {
	pulumi.Input

	ToSpotInstanceRequestMetadataOptionsArgsPtrOutput() SpotInstanceRequestMetadataOptionsArgsPtrOutput
	ToSpotInstanceRequestMetadataOptionsArgsPtrOutputWithContext(context.Context) SpotInstanceRequestMetadataOptionsArgsPtrOutput
}

type spotInstanceRequestMetadataOptionsArgsPtrType SpotInstanceRequestMetadataOptionsArgsArgs

func SpotInstanceRequestMetadataOptionsArgsPtr(v *SpotInstanceRequestMetadataOptionsArgsArgs) SpotInstanceRequestMetadataOptionsArgsPtrInput {
	return (*spotInstanceRequestMetadataOptionsArgsPtrType)(v)
}

func (*spotInstanceRequestMetadataOptionsArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotInstanceRequestMetadataOptionsArgs)(nil)).Elem()
}

func (i *spotInstanceRequestMetadataOptionsArgsPtrType) ToSpotInstanceRequestMetadataOptionsArgsPtrOutput() SpotInstanceRequestMetadataOptionsArgsPtrOutput {
	return i.ToSpotInstanceRequestMetadataOptionsArgsPtrOutputWithContext(context.Background())
}

func (i *spotInstanceRequestMetadataOptionsArgsPtrType) ToSpotInstanceRequestMetadataOptionsArgsPtrOutputWithContext(ctx context.Context) SpotInstanceRequestMetadataOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestMetadataOptionsArgsPtrOutput)
}

type SpotInstanceRequestMetadataOptionsArgsOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestMetadataOptionsArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestMetadataOptionsArgs)(nil)).Elem()
}

func (o SpotInstanceRequestMetadataOptionsArgsOutput) ToSpotInstanceRequestMetadataOptionsArgsOutput() SpotInstanceRequestMetadataOptionsArgsOutput {
	return o
}

func (o SpotInstanceRequestMetadataOptionsArgsOutput) ToSpotInstanceRequestMetadataOptionsArgsOutputWithContext(ctx context.Context) SpotInstanceRequestMetadataOptionsArgsOutput {
	return o
}

func (o SpotInstanceRequestMetadataOptionsArgsOutput) ToSpotInstanceRequestMetadataOptionsArgsPtrOutput() SpotInstanceRequestMetadataOptionsArgsPtrOutput {
	return o.ToSpotInstanceRequestMetadataOptionsArgsPtrOutputWithContext(context.Background())
}

func (o SpotInstanceRequestMetadataOptionsArgsOutput) ToSpotInstanceRequestMetadataOptionsArgsPtrOutputWithContext(ctx context.Context) SpotInstanceRequestMetadataOptionsArgsPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestMetadataOptionsArgs) *SpotInstanceRequestMetadataOptionsArgs {
		return &v
	}).(SpotInstanceRequestMetadataOptionsArgsPtrOutput)
}

// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
func (o SpotInstanceRequestMetadataOptionsArgsOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestMetadataOptionsArgs) *string { return v.HttpEndpoint }).(pulumi.StringPtrOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
func (o SpotInstanceRequestMetadataOptionsArgsOutput) HttpPutResponseHopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestMetadataOptionsArgs) *int { return v.HttpPutResponseHopLimit }).(pulumi.IntPtrOutput)
}

// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
func (o SpotInstanceRequestMetadataOptionsArgsOutput) HttpTokens() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestMetadataOptionsArgs) *string { return v.HttpTokens }).(pulumi.StringPtrOutput)
}

type SpotInstanceRequestMetadataOptionsArgsPtrOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestMetadataOptionsArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotInstanceRequestMetadataOptionsArgs)(nil)).Elem()
}

func (o SpotInstanceRequestMetadataOptionsArgsPtrOutput) ToSpotInstanceRequestMetadataOptionsArgsPtrOutput() SpotInstanceRequestMetadataOptionsArgsPtrOutput {
	return o
}

func (o SpotInstanceRequestMetadataOptionsArgsPtrOutput) ToSpotInstanceRequestMetadataOptionsArgsPtrOutputWithContext(ctx context.Context) SpotInstanceRequestMetadataOptionsArgsPtrOutput {
	return o
}

func (o SpotInstanceRequestMetadataOptionsArgsPtrOutput) Elem() SpotInstanceRequestMetadataOptionsArgsOutput {
	return o.ApplyT(func(v *SpotInstanceRequestMetadataOptionsArgs) SpotInstanceRequestMetadataOptionsArgs { return *v }).(SpotInstanceRequestMetadataOptionsArgsOutput)
}

// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
func (o SpotInstanceRequestMetadataOptionsArgsPtrOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestMetadataOptionsArgs) *string { return v.HttpEndpoint }).(pulumi.StringPtrOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
func (o SpotInstanceRequestMetadataOptionsArgsPtrOutput) HttpPutResponseHopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestMetadataOptionsArgs) *int { return v.HttpPutResponseHopLimit }).(pulumi.IntPtrOutput)
}

// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
func (o SpotInstanceRequestMetadataOptionsArgsPtrOutput) HttpTokens() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestMetadataOptionsArgs) *string { return v.HttpTokens }).(pulumi.StringPtrOutput)
}

type SpotInstanceRequestMetadataOptionsState struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint *string `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit *int `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens *string `pulumi:"httpTokens"`
}

type SpotInstanceRequestMetadataOptionsStateInput interface {
	pulumi.Input

	ToSpotInstanceRequestMetadataOptionsStateOutput() SpotInstanceRequestMetadataOptionsStateOutput
	ToSpotInstanceRequestMetadataOptionsStateOutputWithContext(context.Context) SpotInstanceRequestMetadataOptionsStateOutput
}

type SpotInstanceRequestMetadataOptionsStateArgs struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint pulumi.StringPtrInput `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit pulumi.IntPtrInput `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens pulumi.StringPtrInput `pulumi:"httpTokens"`
}

func (SpotInstanceRequestMetadataOptionsStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestMetadataOptionsState)(nil)).Elem()
}

func (i SpotInstanceRequestMetadataOptionsStateArgs) ToSpotInstanceRequestMetadataOptionsStateOutput() SpotInstanceRequestMetadataOptionsStateOutput {
	return i.ToSpotInstanceRequestMetadataOptionsStateOutputWithContext(context.Background())
}

func (i SpotInstanceRequestMetadataOptionsStateArgs) ToSpotInstanceRequestMetadataOptionsStateOutputWithContext(ctx context.Context) SpotInstanceRequestMetadataOptionsStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestMetadataOptionsStateOutput)
}

type SpotInstanceRequestMetadataOptionsStateOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestMetadataOptionsStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestMetadataOptionsState)(nil)).Elem()
}

func (o SpotInstanceRequestMetadataOptionsStateOutput) ToSpotInstanceRequestMetadataOptionsStateOutput() SpotInstanceRequestMetadataOptionsStateOutput {
	return o
}

func (o SpotInstanceRequestMetadataOptionsStateOutput) ToSpotInstanceRequestMetadataOptionsStateOutputWithContext(ctx context.Context) SpotInstanceRequestMetadataOptionsStateOutput {
	return o
}

// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
func (o SpotInstanceRequestMetadataOptionsStateOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestMetadataOptionsState) *string { return v.HttpEndpoint }).(pulumi.StringPtrOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
func (o SpotInstanceRequestMetadataOptionsStateOutput) HttpPutResponseHopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestMetadataOptionsState) *int { return v.HttpPutResponseHopLimit }).(pulumi.IntPtrOutput)
}

// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
func (o SpotInstanceRequestMetadataOptionsStateOutput) HttpTokens() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestMetadataOptionsState) *string { return v.HttpTokens }).(pulumi.StringPtrOutput)
}

type SpotInstanceRequestNetworkInterface struct {
	// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The integer index of the network interface attachment. Limited by instance type.
	DeviceIndex int `pulumi:"deviceIndex"`
	// The ID of the network interface to attach.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
}

type SpotInstanceRequestNetworkInterfaceInput interface {
	pulumi.Input

	ToSpotInstanceRequestNetworkInterfaceOutput() SpotInstanceRequestNetworkInterfaceOutput
	ToSpotInstanceRequestNetworkInterfaceOutputWithContext(context.Context) SpotInstanceRequestNetworkInterfaceOutput
}

type SpotInstanceRequestNetworkInterfaceArgs struct {
	// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The integer index of the network interface attachment. Limited by instance type.
	DeviceIndex pulumi.IntInput `pulumi:"deviceIndex"`
	// The ID of the network interface to attach.
	NetworkInterfaceId pulumi.StringInput `pulumi:"networkInterfaceId"`
}

func (SpotInstanceRequestNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestNetworkInterface)(nil)).Elem()
}

func (i SpotInstanceRequestNetworkInterfaceArgs) ToSpotInstanceRequestNetworkInterfaceOutput() SpotInstanceRequestNetworkInterfaceOutput {
	return i.ToSpotInstanceRequestNetworkInterfaceOutputWithContext(context.Background())
}

func (i SpotInstanceRequestNetworkInterfaceArgs) ToSpotInstanceRequestNetworkInterfaceOutputWithContext(ctx context.Context) SpotInstanceRequestNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestNetworkInterfaceOutput)
}

type SpotInstanceRequestNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToSpotInstanceRequestNetworkInterfaceArrayOutput() SpotInstanceRequestNetworkInterfaceArrayOutput
	ToSpotInstanceRequestNetworkInterfaceArrayOutputWithContext(context.Context) SpotInstanceRequestNetworkInterfaceArrayOutput
}

type SpotInstanceRequestNetworkInterfaceArray []SpotInstanceRequestNetworkInterfaceInput

func (SpotInstanceRequestNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestNetworkInterface)(nil)).Elem()
}

func (i SpotInstanceRequestNetworkInterfaceArray) ToSpotInstanceRequestNetworkInterfaceArrayOutput() SpotInstanceRequestNetworkInterfaceArrayOutput {
	return i.ToSpotInstanceRequestNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i SpotInstanceRequestNetworkInterfaceArray) ToSpotInstanceRequestNetworkInterfaceArrayOutputWithContext(ctx context.Context) SpotInstanceRequestNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestNetworkInterfaceArrayOutput)
}

type SpotInstanceRequestNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestNetworkInterface)(nil)).Elem()
}

func (o SpotInstanceRequestNetworkInterfaceOutput) ToSpotInstanceRequestNetworkInterfaceOutput() SpotInstanceRequestNetworkInterfaceOutput {
	return o
}

func (o SpotInstanceRequestNetworkInterfaceOutput) ToSpotInstanceRequestNetworkInterfaceOutputWithContext(ctx context.Context) SpotInstanceRequestNetworkInterfaceOutput {
	return o
}

// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
func (o SpotInstanceRequestNetworkInterfaceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestNetworkInterface) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The integer index of the network interface attachment. Limited by instance type.
func (o SpotInstanceRequestNetworkInterfaceOutput) DeviceIndex() pulumi.IntOutput {
	return o.ApplyT(func(v SpotInstanceRequestNetworkInterface) int { return v.DeviceIndex }).(pulumi.IntOutput)
}

// The ID of the network interface to attach.
func (o SpotInstanceRequestNetworkInterfaceOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v SpotInstanceRequestNetworkInterface) string { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

type SpotInstanceRequestNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestNetworkInterface)(nil)).Elem()
}

func (o SpotInstanceRequestNetworkInterfaceArrayOutput) ToSpotInstanceRequestNetworkInterfaceArrayOutput() SpotInstanceRequestNetworkInterfaceArrayOutput {
	return o
}

func (o SpotInstanceRequestNetworkInterfaceArrayOutput) ToSpotInstanceRequestNetworkInterfaceArrayOutputWithContext(ctx context.Context) SpotInstanceRequestNetworkInterfaceArrayOutput {
	return o
}

func (o SpotInstanceRequestNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) SpotInstanceRequestNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotInstanceRequestNetworkInterface {
		return vs[0].([]SpotInstanceRequestNetworkInterface)[vs[1].(int)]
	}).(SpotInstanceRequestNetworkInterfaceOutput)
}

type SpotInstanceRequestNetworkInterfaceArgs struct {
	// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The integer index of the network interface attachment. Limited by instance type.
	DeviceIndex int `pulumi:"deviceIndex"`
	// The ID of the network interface to attach.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
}

type SpotInstanceRequestNetworkInterfaceArgsInput interface {
	pulumi.Input

	ToSpotInstanceRequestNetworkInterfaceArgsOutput() SpotInstanceRequestNetworkInterfaceArgsOutput
	ToSpotInstanceRequestNetworkInterfaceArgsOutputWithContext(context.Context) SpotInstanceRequestNetworkInterfaceArgsOutput
}

type SpotInstanceRequestNetworkInterfaceArgsArgs struct {
	// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The integer index of the network interface attachment. Limited by instance type.
	DeviceIndex pulumi.IntInput `pulumi:"deviceIndex"`
	// The ID of the network interface to attach.
	NetworkInterfaceId pulumi.StringInput `pulumi:"networkInterfaceId"`
}

func (SpotInstanceRequestNetworkInterfaceArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestNetworkInterfaceArgs)(nil)).Elem()
}

func (i SpotInstanceRequestNetworkInterfaceArgsArgs) ToSpotInstanceRequestNetworkInterfaceArgsOutput() SpotInstanceRequestNetworkInterfaceArgsOutput {
	return i.ToSpotInstanceRequestNetworkInterfaceArgsOutputWithContext(context.Background())
}

func (i SpotInstanceRequestNetworkInterfaceArgsArgs) ToSpotInstanceRequestNetworkInterfaceArgsOutputWithContext(ctx context.Context) SpotInstanceRequestNetworkInterfaceArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestNetworkInterfaceArgsOutput)
}

type SpotInstanceRequestNetworkInterfaceArgsArrayInput interface {
	pulumi.Input

	ToSpotInstanceRequestNetworkInterfaceArgsArrayOutput() SpotInstanceRequestNetworkInterfaceArgsArrayOutput
	ToSpotInstanceRequestNetworkInterfaceArgsArrayOutputWithContext(context.Context) SpotInstanceRequestNetworkInterfaceArgsArrayOutput
}

type SpotInstanceRequestNetworkInterfaceArgsArray []SpotInstanceRequestNetworkInterfaceArgsInput

func (SpotInstanceRequestNetworkInterfaceArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestNetworkInterfaceArgs)(nil)).Elem()
}

func (i SpotInstanceRequestNetworkInterfaceArgsArray) ToSpotInstanceRequestNetworkInterfaceArgsArrayOutput() SpotInstanceRequestNetworkInterfaceArgsArrayOutput {
	return i.ToSpotInstanceRequestNetworkInterfaceArgsArrayOutputWithContext(context.Background())
}

func (i SpotInstanceRequestNetworkInterfaceArgsArray) ToSpotInstanceRequestNetworkInterfaceArgsArrayOutputWithContext(ctx context.Context) SpotInstanceRequestNetworkInterfaceArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestNetworkInterfaceArgsArrayOutput)
}

type SpotInstanceRequestNetworkInterfaceArgsOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestNetworkInterfaceArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestNetworkInterfaceArgs)(nil)).Elem()
}

func (o SpotInstanceRequestNetworkInterfaceArgsOutput) ToSpotInstanceRequestNetworkInterfaceArgsOutput() SpotInstanceRequestNetworkInterfaceArgsOutput {
	return o
}

func (o SpotInstanceRequestNetworkInterfaceArgsOutput) ToSpotInstanceRequestNetworkInterfaceArgsOutputWithContext(ctx context.Context) SpotInstanceRequestNetworkInterfaceArgsOutput {
	return o
}

// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
func (o SpotInstanceRequestNetworkInterfaceArgsOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestNetworkInterfaceArgs) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The integer index of the network interface attachment. Limited by instance type.
func (o SpotInstanceRequestNetworkInterfaceArgsOutput) DeviceIndex() pulumi.IntOutput {
	return o.ApplyT(func(v SpotInstanceRequestNetworkInterfaceArgs) int { return v.DeviceIndex }).(pulumi.IntOutput)
}

// The ID of the network interface to attach.
func (o SpotInstanceRequestNetworkInterfaceArgsOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v SpotInstanceRequestNetworkInterfaceArgs) string { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

type SpotInstanceRequestNetworkInterfaceArgsArrayOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestNetworkInterfaceArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestNetworkInterfaceArgs)(nil)).Elem()
}

func (o SpotInstanceRequestNetworkInterfaceArgsArrayOutput) ToSpotInstanceRequestNetworkInterfaceArgsArrayOutput() SpotInstanceRequestNetworkInterfaceArgsArrayOutput {
	return o
}

func (o SpotInstanceRequestNetworkInterfaceArgsArrayOutput) ToSpotInstanceRequestNetworkInterfaceArgsArrayOutputWithContext(ctx context.Context) SpotInstanceRequestNetworkInterfaceArgsArrayOutput {
	return o
}

func (o SpotInstanceRequestNetworkInterfaceArgsArrayOutput) Index(i pulumi.IntInput) SpotInstanceRequestNetworkInterfaceArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotInstanceRequestNetworkInterfaceArgs {
		return vs[0].([]SpotInstanceRequestNetworkInterfaceArgs)[vs[1].(int)]
	}).(SpotInstanceRequestNetworkInterfaceArgsOutput)
}

type SpotInstanceRequestNetworkInterfaceState struct {
	// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The integer index of the network interface attachment. Limited by instance type.
	DeviceIndex int `pulumi:"deviceIndex"`
	// The ID of the network interface to attach.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
}

type SpotInstanceRequestNetworkInterfaceStateInput interface {
	pulumi.Input

	ToSpotInstanceRequestNetworkInterfaceStateOutput() SpotInstanceRequestNetworkInterfaceStateOutput
	ToSpotInstanceRequestNetworkInterfaceStateOutputWithContext(context.Context) SpotInstanceRequestNetworkInterfaceStateOutput
}

type SpotInstanceRequestNetworkInterfaceStateArgs struct {
	// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The integer index of the network interface attachment. Limited by instance type.
	DeviceIndex pulumi.IntInput `pulumi:"deviceIndex"`
	// The ID of the network interface to attach.
	NetworkInterfaceId pulumi.StringInput `pulumi:"networkInterfaceId"`
}

func (SpotInstanceRequestNetworkInterfaceStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestNetworkInterfaceState)(nil)).Elem()
}

func (i SpotInstanceRequestNetworkInterfaceStateArgs) ToSpotInstanceRequestNetworkInterfaceStateOutput() SpotInstanceRequestNetworkInterfaceStateOutput {
	return i.ToSpotInstanceRequestNetworkInterfaceStateOutputWithContext(context.Background())
}

func (i SpotInstanceRequestNetworkInterfaceStateArgs) ToSpotInstanceRequestNetworkInterfaceStateOutputWithContext(ctx context.Context) SpotInstanceRequestNetworkInterfaceStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestNetworkInterfaceStateOutput)
}

type SpotInstanceRequestNetworkInterfaceStateArrayInput interface {
	pulumi.Input

	ToSpotInstanceRequestNetworkInterfaceStateArrayOutput() SpotInstanceRequestNetworkInterfaceStateArrayOutput
	ToSpotInstanceRequestNetworkInterfaceStateArrayOutputWithContext(context.Context) SpotInstanceRequestNetworkInterfaceStateArrayOutput
}

type SpotInstanceRequestNetworkInterfaceStateArray []SpotInstanceRequestNetworkInterfaceStateInput

func (SpotInstanceRequestNetworkInterfaceStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestNetworkInterfaceState)(nil)).Elem()
}

func (i SpotInstanceRequestNetworkInterfaceStateArray) ToSpotInstanceRequestNetworkInterfaceStateArrayOutput() SpotInstanceRequestNetworkInterfaceStateArrayOutput {
	return i.ToSpotInstanceRequestNetworkInterfaceStateArrayOutputWithContext(context.Background())
}

func (i SpotInstanceRequestNetworkInterfaceStateArray) ToSpotInstanceRequestNetworkInterfaceStateArrayOutputWithContext(ctx context.Context) SpotInstanceRequestNetworkInterfaceStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestNetworkInterfaceStateArrayOutput)
}

type SpotInstanceRequestNetworkInterfaceStateOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestNetworkInterfaceStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestNetworkInterfaceState)(nil)).Elem()
}

func (o SpotInstanceRequestNetworkInterfaceStateOutput) ToSpotInstanceRequestNetworkInterfaceStateOutput() SpotInstanceRequestNetworkInterfaceStateOutput {
	return o
}

func (o SpotInstanceRequestNetworkInterfaceStateOutput) ToSpotInstanceRequestNetworkInterfaceStateOutputWithContext(ctx context.Context) SpotInstanceRequestNetworkInterfaceStateOutput {
	return o
}

// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
func (o SpotInstanceRequestNetworkInterfaceStateOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestNetworkInterfaceState) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The integer index of the network interface attachment. Limited by instance type.
func (o SpotInstanceRequestNetworkInterfaceStateOutput) DeviceIndex() pulumi.IntOutput {
	return o.ApplyT(func(v SpotInstanceRequestNetworkInterfaceState) int { return v.DeviceIndex }).(pulumi.IntOutput)
}

// The ID of the network interface to attach.
func (o SpotInstanceRequestNetworkInterfaceStateOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v SpotInstanceRequestNetworkInterfaceState) string { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

type SpotInstanceRequestNetworkInterfaceStateArrayOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestNetworkInterfaceStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestNetworkInterfaceState)(nil)).Elem()
}

func (o SpotInstanceRequestNetworkInterfaceStateArrayOutput) ToSpotInstanceRequestNetworkInterfaceStateArrayOutput() SpotInstanceRequestNetworkInterfaceStateArrayOutput {
	return o
}

func (o SpotInstanceRequestNetworkInterfaceStateArrayOutput) ToSpotInstanceRequestNetworkInterfaceStateArrayOutputWithContext(ctx context.Context) SpotInstanceRequestNetworkInterfaceStateArrayOutput {
	return o
}

func (o SpotInstanceRequestNetworkInterfaceStateArrayOutput) Index(i pulumi.IntInput) SpotInstanceRequestNetworkInterfaceStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotInstanceRequestNetworkInterfaceState {
		return vs[0].([]SpotInstanceRequestNetworkInterfaceState)[vs[1].(int)]
	}).(SpotInstanceRequestNetworkInterfaceStateOutput)
}

type SpotInstanceRequestRootBlockDevice struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
	Encrypted bool `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This is only valid for `volumeType` of `"io1"`, and must be specified if
	// using that type
	Iops int `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId string `pulumi:"kmsKeyId"`
	VolumeId string `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize int `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
	VolumeType string `pulumi:"volumeType"`
}

type SpotInstanceRequestRootBlockDeviceInput interface {
	pulumi.Input

	ToSpotInstanceRequestRootBlockDeviceOutput() SpotInstanceRequestRootBlockDeviceOutput
	ToSpotInstanceRequestRootBlockDeviceOutputWithContext(context.Context) SpotInstanceRequestRootBlockDeviceOutput
}

type SpotInstanceRequestRootBlockDeviceArgs struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
	Encrypted pulumi.BoolInput `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This is only valid for `volumeType` of `"io1"`, and must be specified if
	// using that type
	Iops pulumi.IntInput `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
	VolumeId pulumi.StringInput `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (SpotInstanceRequestRootBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestRootBlockDevice)(nil)).Elem()
}

func (i SpotInstanceRequestRootBlockDeviceArgs) ToSpotInstanceRequestRootBlockDeviceOutput() SpotInstanceRequestRootBlockDeviceOutput {
	return i.ToSpotInstanceRequestRootBlockDeviceOutputWithContext(context.Background())
}

func (i SpotInstanceRequestRootBlockDeviceArgs) ToSpotInstanceRequestRootBlockDeviceOutputWithContext(ctx context.Context) SpotInstanceRequestRootBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestRootBlockDeviceOutput)
}

func (i SpotInstanceRequestRootBlockDeviceArgs) ToSpotInstanceRequestRootBlockDevicePtrOutput() SpotInstanceRequestRootBlockDevicePtrOutput {
	return i.ToSpotInstanceRequestRootBlockDevicePtrOutputWithContext(context.Background())
}

func (i SpotInstanceRequestRootBlockDeviceArgs) ToSpotInstanceRequestRootBlockDevicePtrOutputWithContext(ctx context.Context) SpotInstanceRequestRootBlockDevicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestRootBlockDeviceOutput).ToSpotInstanceRequestRootBlockDevicePtrOutputWithContext(ctx)
}

type SpotInstanceRequestRootBlockDevicePtrInput interface {
	pulumi.Input

	ToSpotInstanceRequestRootBlockDevicePtrOutput() SpotInstanceRequestRootBlockDevicePtrOutput
	ToSpotInstanceRequestRootBlockDevicePtrOutputWithContext(context.Context) SpotInstanceRequestRootBlockDevicePtrOutput
}

type spotInstanceRequestRootBlockDevicePtrType SpotInstanceRequestRootBlockDeviceArgs

func SpotInstanceRequestRootBlockDevicePtr(v *SpotInstanceRequestRootBlockDeviceArgs) SpotInstanceRequestRootBlockDevicePtrInput {
	return (*spotInstanceRequestRootBlockDevicePtrType)(v)
}

func (*spotInstanceRequestRootBlockDevicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotInstanceRequestRootBlockDevice)(nil)).Elem()
}

func (i *spotInstanceRequestRootBlockDevicePtrType) ToSpotInstanceRequestRootBlockDevicePtrOutput() SpotInstanceRequestRootBlockDevicePtrOutput {
	return i.ToSpotInstanceRequestRootBlockDevicePtrOutputWithContext(context.Background())
}

func (i *spotInstanceRequestRootBlockDevicePtrType) ToSpotInstanceRequestRootBlockDevicePtrOutputWithContext(ctx context.Context) SpotInstanceRequestRootBlockDevicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestRootBlockDevicePtrOutput)
}

type SpotInstanceRequestRootBlockDeviceOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestRootBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestRootBlockDevice)(nil)).Elem()
}

func (o SpotInstanceRequestRootBlockDeviceOutput) ToSpotInstanceRequestRootBlockDeviceOutput() SpotInstanceRequestRootBlockDeviceOutput {
	return o
}

func (o SpotInstanceRequestRootBlockDeviceOutput) ToSpotInstanceRequestRootBlockDeviceOutputWithContext(ctx context.Context) SpotInstanceRequestRootBlockDeviceOutput {
	return o
}

func (o SpotInstanceRequestRootBlockDeviceOutput) ToSpotInstanceRequestRootBlockDevicePtrOutput() SpotInstanceRequestRootBlockDevicePtrOutput {
	return o.ToSpotInstanceRequestRootBlockDevicePtrOutputWithContext(context.Background())
}

func (o SpotInstanceRequestRootBlockDeviceOutput) ToSpotInstanceRequestRootBlockDevicePtrOutputWithContext(ctx context.Context) SpotInstanceRequestRootBlockDevicePtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) *SpotInstanceRequestRootBlockDevice {
		return &v
	}).(SpotInstanceRequestRootBlockDevicePtrOutput)
}

// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o SpotInstanceRequestRootBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
func (o SpotInstanceRequestRootBlockDeviceOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This is only valid for `volumeType` of `"io1"`, and must be specified if
// using that type
func (o SpotInstanceRequestRootBlockDeviceOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) int { return v.Iops }).(pulumi.IntOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o SpotInstanceRequestRootBlockDeviceOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

func (o SpotInstanceRequestRootBlockDeviceOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) string { return v.VolumeId }).(pulumi.StringOutput)
}

// The size of the volume in gibibytes (GiB).
func (o SpotInstanceRequestRootBlockDeviceOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
func (o SpotInstanceRequestRootBlockDeviceOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) string { return v.VolumeType }).(pulumi.StringOutput)
}

type SpotInstanceRequestRootBlockDevicePtrOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestRootBlockDevicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotInstanceRequestRootBlockDevice)(nil)).Elem()
}

func (o SpotInstanceRequestRootBlockDevicePtrOutput) ToSpotInstanceRequestRootBlockDevicePtrOutput() SpotInstanceRequestRootBlockDevicePtrOutput {
	return o
}

func (o SpotInstanceRequestRootBlockDevicePtrOutput) ToSpotInstanceRequestRootBlockDevicePtrOutputWithContext(ctx context.Context) SpotInstanceRequestRootBlockDevicePtrOutput {
	return o
}

func (o SpotInstanceRequestRootBlockDevicePtrOutput) Elem() SpotInstanceRequestRootBlockDeviceOutput {
	return o.ApplyT(func(v *SpotInstanceRequestRootBlockDevice) SpotInstanceRequestRootBlockDevice { return *v }).(SpotInstanceRequestRootBlockDeviceOutput)
}

// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o SpotInstanceRequestRootBlockDevicePtrOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
func (o SpotInstanceRequestRootBlockDevicePtrOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This is only valid for `volumeType` of `"io1"`, and must be specified if
// using that type
func (o SpotInstanceRequestRootBlockDevicePtrOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) int { return v.Iops }).(pulumi.IntOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o SpotInstanceRequestRootBlockDevicePtrOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

func (o SpotInstanceRequestRootBlockDevicePtrOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) string { return v.VolumeId }).(pulumi.StringOutput)
}

// The size of the volume in gibibytes (GiB).
func (o SpotInstanceRequestRootBlockDevicePtrOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
func (o SpotInstanceRequestRootBlockDevicePtrOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) string { return v.VolumeType }).(pulumi.StringOutput)
}

type SpotInstanceRequestRootBlockDeviceArgs struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
	Encrypted *bool `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This is only valid for `volumeType` of `"io1"`, and must be specified if
	// using that type
	Iops *int `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	VolumeId *string `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
	VolumeType *string `pulumi:"volumeType"`
}

type SpotInstanceRequestRootBlockDeviceArgsInput interface {
	pulumi.Input

	ToSpotInstanceRequestRootBlockDeviceArgsOutput() SpotInstanceRequestRootBlockDeviceArgsOutput
	ToSpotInstanceRequestRootBlockDeviceArgsOutputWithContext(context.Context) SpotInstanceRequestRootBlockDeviceArgsOutput
}

type SpotInstanceRequestRootBlockDeviceArgsArgs struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This is only valid for `volumeType` of `"io1"`, and must be specified if
	// using that type
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	VolumeId pulumi.StringPtrInput `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (SpotInstanceRequestRootBlockDeviceArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestRootBlockDeviceArgs)(nil)).Elem()
}

func (i SpotInstanceRequestRootBlockDeviceArgsArgs) ToSpotInstanceRequestRootBlockDeviceArgsOutput() SpotInstanceRequestRootBlockDeviceArgsOutput {
	return i.ToSpotInstanceRequestRootBlockDeviceArgsOutputWithContext(context.Background())
}

func (i SpotInstanceRequestRootBlockDeviceArgsArgs) ToSpotInstanceRequestRootBlockDeviceArgsOutputWithContext(ctx context.Context) SpotInstanceRequestRootBlockDeviceArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestRootBlockDeviceArgsOutput)
}

func (i SpotInstanceRequestRootBlockDeviceArgsArgs) ToSpotInstanceRequestRootBlockDeviceArgsPtrOutput() SpotInstanceRequestRootBlockDeviceArgsPtrOutput {
	return i.ToSpotInstanceRequestRootBlockDeviceArgsPtrOutputWithContext(context.Background())
}

func (i SpotInstanceRequestRootBlockDeviceArgsArgs) ToSpotInstanceRequestRootBlockDeviceArgsPtrOutputWithContext(ctx context.Context) SpotInstanceRequestRootBlockDeviceArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestRootBlockDeviceArgsOutput).ToSpotInstanceRequestRootBlockDeviceArgsPtrOutputWithContext(ctx)
}

type SpotInstanceRequestRootBlockDeviceArgsPtrInput interface {
	pulumi.Input

	ToSpotInstanceRequestRootBlockDeviceArgsPtrOutput() SpotInstanceRequestRootBlockDeviceArgsPtrOutput
	ToSpotInstanceRequestRootBlockDeviceArgsPtrOutputWithContext(context.Context) SpotInstanceRequestRootBlockDeviceArgsPtrOutput
}

type spotInstanceRequestRootBlockDeviceArgsPtrType SpotInstanceRequestRootBlockDeviceArgsArgs

func SpotInstanceRequestRootBlockDeviceArgsPtr(v *SpotInstanceRequestRootBlockDeviceArgsArgs) SpotInstanceRequestRootBlockDeviceArgsPtrInput {
	return (*spotInstanceRequestRootBlockDeviceArgsPtrType)(v)
}

func (*spotInstanceRequestRootBlockDeviceArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotInstanceRequestRootBlockDeviceArgs)(nil)).Elem()
}

func (i *spotInstanceRequestRootBlockDeviceArgsPtrType) ToSpotInstanceRequestRootBlockDeviceArgsPtrOutput() SpotInstanceRequestRootBlockDeviceArgsPtrOutput {
	return i.ToSpotInstanceRequestRootBlockDeviceArgsPtrOutputWithContext(context.Background())
}

func (i *spotInstanceRequestRootBlockDeviceArgsPtrType) ToSpotInstanceRequestRootBlockDeviceArgsPtrOutputWithContext(ctx context.Context) SpotInstanceRequestRootBlockDeviceArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestRootBlockDeviceArgsPtrOutput)
}

type SpotInstanceRequestRootBlockDeviceArgsOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestRootBlockDeviceArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestRootBlockDeviceArgs)(nil)).Elem()
}

func (o SpotInstanceRequestRootBlockDeviceArgsOutput) ToSpotInstanceRequestRootBlockDeviceArgsOutput() SpotInstanceRequestRootBlockDeviceArgsOutput {
	return o
}

func (o SpotInstanceRequestRootBlockDeviceArgsOutput) ToSpotInstanceRequestRootBlockDeviceArgsOutputWithContext(ctx context.Context) SpotInstanceRequestRootBlockDeviceArgsOutput {
	return o
}

func (o SpotInstanceRequestRootBlockDeviceArgsOutput) ToSpotInstanceRequestRootBlockDeviceArgsPtrOutput() SpotInstanceRequestRootBlockDeviceArgsPtrOutput {
	return o.ToSpotInstanceRequestRootBlockDeviceArgsPtrOutputWithContext(context.Background())
}

func (o SpotInstanceRequestRootBlockDeviceArgsOutput) ToSpotInstanceRequestRootBlockDeviceArgsPtrOutputWithContext(ctx context.Context) SpotInstanceRequestRootBlockDeviceArgsPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDeviceArgs) *SpotInstanceRequestRootBlockDeviceArgs {
		return &v
	}).(SpotInstanceRequestRootBlockDeviceArgsPtrOutput)
}

// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o SpotInstanceRequestRootBlockDeviceArgsOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDeviceArgs) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
func (o SpotInstanceRequestRootBlockDeviceArgsOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDeviceArgs) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This is only valid for `volumeType` of `"io1"`, and must be specified if
// using that type
func (o SpotInstanceRequestRootBlockDeviceArgsOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDeviceArgs) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o SpotInstanceRequestRootBlockDeviceArgsOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDeviceArgs) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o SpotInstanceRequestRootBlockDeviceArgsOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDeviceArgs) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gibibytes (GiB).
func (o SpotInstanceRequestRootBlockDeviceArgsOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDeviceArgs) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
func (o SpotInstanceRequestRootBlockDeviceArgsOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDeviceArgs) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type SpotInstanceRequestRootBlockDeviceArgsPtrOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestRootBlockDeviceArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotInstanceRequestRootBlockDeviceArgs)(nil)).Elem()
}

func (o SpotInstanceRequestRootBlockDeviceArgsPtrOutput) ToSpotInstanceRequestRootBlockDeviceArgsPtrOutput() SpotInstanceRequestRootBlockDeviceArgsPtrOutput {
	return o
}

func (o SpotInstanceRequestRootBlockDeviceArgsPtrOutput) ToSpotInstanceRequestRootBlockDeviceArgsPtrOutputWithContext(ctx context.Context) SpotInstanceRequestRootBlockDeviceArgsPtrOutput {
	return o
}

func (o SpotInstanceRequestRootBlockDeviceArgsPtrOutput) Elem() SpotInstanceRequestRootBlockDeviceArgsOutput {
	return o.ApplyT(func(v *SpotInstanceRequestRootBlockDeviceArgs) SpotInstanceRequestRootBlockDeviceArgs { return *v }).(SpotInstanceRequestRootBlockDeviceArgsOutput)
}

// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o SpotInstanceRequestRootBlockDeviceArgsPtrOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDeviceArgs) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
func (o SpotInstanceRequestRootBlockDeviceArgsPtrOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDeviceArgs) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This is only valid for `volumeType` of `"io1"`, and must be specified if
// using that type
func (o SpotInstanceRequestRootBlockDeviceArgsPtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDeviceArgs) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o SpotInstanceRequestRootBlockDeviceArgsPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDeviceArgs) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o SpotInstanceRequestRootBlockDeviceArgsPtrOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDeviceArgs) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gibibytes (GiB).
func (o SpotInstanceRequestRootBlockDeviceArgsPtrOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDeviceArgs) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
func (o SpotInstanceRequestRootBlockDeviceArgsPtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDeviceArgs) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type SpotInstanceRequestRootBlockDeviceState struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
	Encrypted *bool `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This is only valid for `volumeType` of `"io1"`, and must be specified if
	// using that type
	Iops *int `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	VolumeId *string `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
	VolumeType *string `pulumi:"volumeType"`
}

type SpotInstanceRequestRootBlockDeviceStateInput interface {
	pulumi.Input

	ToSpotInstanceRequestRootBlockDeviceStateOutput() SpotInstanceRequestRootBlockDeviceStateOutput
	ToSpotInstanceRequestRootBlockDeviceStateOutputWithContext(context.Context) SpotInstanceRequestRootBlockDeviceStateOutput
}

type SpotInstanceRequestRootBlockDeviceStateArgs struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This is only valid for `volumeType` of `"io1"`, and must be specified if
	// using that type
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	VolumeId pulumi.StringPtrInput `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (SpotInstanceRequestRootBlockDeviceStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestRootBlockDeviceState)(nil)).Elem()
}

func (i SpotInstanceRequestRootBlockDeviceStateArgs) ToSpotInstanceRequestRootBlockDeviceStateOutput() SpotInstanceRequestRootBlockDeviceStateOutput {
	return i.ToSpotInstanceRequestRootBlockDeviceStateOutputWithContext(context.Background())
}

func (i SpotInstanceRequestRootBlockDeviceStateArgs) ToSpotInstanceRequestRootBlockDeviceStateOutputWithContext(ctx context.Context) SpotInstanceRequestRootBlockDeviceStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestRootBlockDeviceStateOutput)
}

type SpotInstanceRequestRootBlockDeviceStateOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestRootBlockDeviceStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestRootBlockDeviceState)(nil)).Elem()
}

func (o SpotInstanceRequestRootBlockDeviceStateOutput) ToSpotInstanceRequestRootBlockDeviceStateOutput() SpotInstanceRequestRootBlockDeviceStateOutput {
	return o
}

func (o SpotInstanceRequestRootBlockDeviceStateOutput) ToSpotInstanceRequestRootBlockDeviceStateOutputWithContext(ctx context.Context) SpotInstanceRequestRootBlockDeviceStateOutput {
	return o
}

// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o SpotInstanceRequestRootBlockDeviceStateOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDeviceState) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
func (o SpotInstanceRequestRootBlockDeviceStateOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDeviceState) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This is only valid for `volumeType` of `"io1"`, and must be specified if
// using that type
func (o SpotInstanceRequestRootBlockDeviceStateOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDeviceState) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o SpotInstanceRequestRootBlockDeviceStateOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDeviceState) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o SpotInstanceRequestRootBlockDeviceStateOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDeviceState) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gibibytes (GiB).
func (o SpotInstanceRequestRootBlockDeviceStateOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDeviceState) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
func (o SpotInstanceRequestRootBlockDeviceStateOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDeviceState) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type TrafficMirrorFilterRuleDestinationPortRange struct {
	// Starting port of the range
	FromPort *int `pulumi:"fromPort"`
	// Ending port of the range
	ToPort *int `pulumi:"toPort"`
}

type TrafficMirrorFilterRuleDestinationPortRangeInput interface {
	pulumi.Input

	ToTrafficMirrorFilterRuleDestinationPortRangeOutput() TrafficMirrorFilterRuleDestinationPortRangeOutput
	ToTrafficMirrorFilterRuleDestinationPortRangeOutputWithContext(context.Context) TrafficMirrorFilterRuleDestinationPortRangeOutput
}

type TrafficMirrorFilterRuleDestinationPortRangeArgs struct {
	// Starting port of the range
	FromPort pulumi.IntPtrInput `pulumi:"fromPort"`
	// Ending port of the range
	ToPort pulumi.IntPtrInput `pulumi:"toPort"`
}

func (TrafficMirrorFilterRuleDestinationPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilterRuleDestinationPortRange)(nil)).Elem()
}

func (i TrafficMirrorFilterRuleDestinationPortRangeArgs) ToTrafficMirrorFilterRuleDestinationPortRangeOutput() TrafficMirrorFilterRuleDestinationPortRangeOutput {
	return i.ToTrafficMirrorFilterRuleDestinationPortRangeOutputWithContext(context.Background())
}

func (i TrafficMirrorFilterRuleDestinationPortRangeArgs) ToTrafficMirrorFilterRuleDestinationPortRangeOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleDestinationPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleDestinationPortRangeOutput)
}

func (i TrafficMirrorFilterRuleDestinationPortRangeArgs) ToTrafficMirrorFilterRuleDestinationPortRangePtrOutput() TrafficMirrorFilterRuleDestinationPortRangePtrOutput {
	return i.ToTrafficMirrorFilterRuleDestinationPortRangePtrOutputWithContext(context.Background())
}

func (i TrafficMirrorFilterRuleDestinationPortRangeArgs) ToTrafficMirrorFilterRuleDestinationPortRangePtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleDestinationPortRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleDestinationPortRangeOutput).ToTrafficMirrorFilterRuleDestinationPortRangePtrOutputWithContext(ctx)
}

type TrafficMirrorFilterRuleDestinationPortRangePtrInput interface {
	pulumi.Input

	ToTrafficMirrorFilterRuleDestinationPortRangePtrOutput() TrafficMirrorFilterRuleDestinationPortRangePtrOutput
	ToTrafficMirrorFilterRuleDestinationPortRangePtrOutputWithContext(context.Context) TrafficMirrorFilterRuleDestinationPortRangePtrOutput
}

type trafficMirrorFilterRuleDestinationPortRangePtrType TrafficMirrorFilterRuleDestinationPortRangeArgs

func TrafficMirrorFilterRuleDestinationPortRangePtr(v *TrafficMirrorFilterRuleDestinationPortRangeArgs) TrafficMirrorFilterRuleDestinationPortRangePtrInput {
	return (*trafficMirrorFilterRuleDestinationPortRangePtrType)(v)
}

func (*trafficMirrorFilterRuleDestinationPortRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficMirrorFilterRuleDestinationPortRange)(nil)).Elem()
}

func (i *trafficMirrorFilterRuleDestinationPortRangePtrType) ToTrafficMirrorFilterRuleDestinationPortRangePtrOutput() TrafficMirrorFilterRuleDestinationPortRangePtrOutput {
	return i.ToTrafficMirrorFilterRuleDestinationPortRangePtrOutputWithContext(context.Background())
}

func (i *trafficMirrorFilterRuleDestinationPortRangePtrType) ToTrafficMirrorFilterRuleDestinationPortRangePtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleDestinationPortRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleDestinationPortRangePtrOutput)
}

type TrafficMirrorFilterRuleDestinationPortRangeOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFilterRuleDestinationPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilterRuleDestinationPortRange)(nil)).Elem()
}

func (o TrafficMirrorFilterRuleDestinationPortRangeOutput) ToTrafficMirrorFilterRuleDestinationPortRangeOutput() TrafficMirrorFilterRuleDestinationPortRangeOutput {
	return o
}

func (o TrafficMirrorFilterRuleDestinationPortRangeOutput) ToTrafficMirrorFilterRuleDestinationPortRangeOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleDestinationPortRangeOutput {
	return o
}

func (o TrafficMirrorFilterRuleDestinationPortRangeOutput) ToTrafficMirrorFilterRuleDestinationPortRangePtrOutput() TrafficMirrorFilterRuleDestinationPortRangePtrOutput {
	return o.ToTrafficMirrorFilterRuleDestinationPortRangePtrOutputWithContext(context.Background())
}

func (o TrafficMirrorFilterRuleDestinationPortRangeOutput) ToTrafficMirrorFilterRuleDestinationPortRangePtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleDestinationPortRangePtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleDestinationPortRange) *TrafficMirrorFilterRuleDestinationPortRange {
		return &v
	}).(TrafficMirrorFilterRuleDestinationPortRangePtrOutput)
}

// Starting port of the range
func (o TrafficMirrorFilterRuleDestinationPortRangeOutput) FromPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleDestinationPortRange) *int { return v.FromPort }).(pulumi.IntPtrOutput)
}

// Ending port of the range
func (o TrafficMirrorFilterRuleDestinationPortRangeOutput) ToPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleDestinationPortRange) *int { return v.ToPort }).(pulumi.IntPtrOutput)
}

type TrafficMirrorFilterRuleDestinationPortRangePtrOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFilterRuleDestinationPortRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficMirrorFilterRuleDestinationPortRange)(nil)).Elem()
}

func (o TrafficMirrorFilterRuleDestinationPortRangePtrOutput) ToTrafficMirrorFilterRuleDestinationPortRangePtrOutput() TrafficMirrorFilterRuleDestinationPortRangePtrOutput {
	return o
}

func (o TrafficMirrorFilterRuleDestinationPortRangePtrOutput) ToTrafficMirrorFilterRuleDestinationPortRangePtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleDestinationPortRangePtrOutput {
	return o
}

func (o TrafficMirrorFilterRuleDestinationPortRangePtrOutput) Elem() TrafficMirrorFilterRuleDestinationPortRangeOutput {
	return o.ApplyT(func(v *TrafficMirrorFilterRuleDestinationPortRange) TrafficMirrorFilterRuleDestinationPortRange {
		return *v
	}).(TrafficMirrorFilterRuleDestinationPortRangeOutput)
}

// Starting port of the range
func (o TrafficMirrorFilterRuleDestinationPortRangePtrOutput) FromPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleDestinationPortRange) *int { return v.FromPort }).(pulumi.IntPtrOutput)
}

// Ending port of the range
func (o TrafficMirrorFilterRuleDestinationPortRangePtrOutput) ToPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleDestinationPortRange) *int { return v.ToPort }).(pulumi.IntPtrOutput)
}

type TrafficMirrorFilterRuleDestinationPortRangeArgs struct {
	// Starting port of the range
	FromPort *int `pulumi:"fromPort"`
	// Ending port of the range
	ToPort *int `pulumi:"toPort"`
}

type TrafficMirrorFilterRuleDestinationPortRangeArgsInput interface {
	pulumi.Input

	ToTrafficMirrorFilterRuleDestinationPortRangeArgsOutput() TrafficMirrorFilterRuleDestinationPortRangeArgsOutput
	ToTrafficMirrorFilterRuleDestinationPortRangeArgsOutputWithContext(context.Context) TrafficMirrorFilterRuleDestinationPortRangeArgsOutput
}

type TrafficMirrorFilterRuleDestinationPortRangeArgsArgs struct {
	// Starting port of the range
	FromPort pulumi.IntPtrInput `pulumi:"fromPort"`
	// Ending port of the range
	ToPort pulumi.IntPtrInput `pulumi:"toPort"`
}

func (TrafficMirrorFilterRuleDestinationPortRangeArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilterRuleDestinationPortRangeArgs)(nil)).Elem()
}

func (i TrafficMirrorFilterRuleDestinationPortRangeArgsArgs) ToTrafficMirrorFilterRuleDestinationPortRangeArgsOutput() TrafficMirrorFilterRuleDestinationPortRangeArgsOutput {
	return i.ToTrafficMirrorFilterRuleDestinationPortRangeArgsOutputWithContext(context.Background())
}

func (i TrafficMirrorFilterRuleDestinationPortRangeArgsArgs) ToTrafficMirrorFilterRuleDestinationPortRangeArgsOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleDestinationPortRangeArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleDestinationPortRangeArgsOutput)
}

func (i TrafficMirrorFilterRuleDestinationPortRangeArgsArgs) ToTrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutput() TrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutput {
	return i.ToTrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutputWithContext(context.Background())
}

func (i TrafficMirrorFilterRuleDestinationPortRangeArgsArgs) ToTrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleDestinationPortRangeArgsOutput).ToTrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutputWithContext(ctx)
}

type TrafficMirrorFilterRuleDestinationPortRangeArgsPtrInput interface {
	pulumi.Input

	ToTrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutput() TrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutput
	ToTrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutputWithContext(context.Context) TrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutput
}

type trafficMirrorFilterRuleDestinationPortRangeArgsPtrType TrafficMirrorFilterRuleDestinationPortRangeArgsArgs

func TrafficMirrorFilterRuleDestinationPortRangeArgsPtr(v *TrafficMirrorFilterRuleDestinationPortRangeArgsArgs) TrafficMirrorFilterRuleDestinationPortRangeArgsPtrInput {
	return (*trafficMirrorFilterRuleDestinationPortRangeArgsPtrType)(v)
}

func (*trafficMirrorFilterRuleDestinationPortRangeArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficMirrorFilterRuleDestinationPortRangeArgs)(nil)).Elem()
}

func (i *trafficMirrorFilterRuleDestinationPortRangeArgsPtrType) ToTrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutput() TrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutput {
	return i.ToTrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutputWithContext(context.Background())
}

func (i *trafficMirrorFilterRuleDestinationPortRangeArgsPtrType) ToTrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutput)
}

type TrafficMirrorFilterRuleDestinationPortRangeArgsOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFilterRuleDestinationPortRangeArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilterRuleDestinationPortRangeArgs)(nil)).Elem()
}

func (o TrafficMirrorFilterRuleDestinationPortRangeArgsOutput) ToTrafficMirrorFilterRuleDestinationPortRangeArgsOutput() TrafficMirrorFilterRuleDestinationPortRangeArgsOutput {
	return o
}

func (o TrafficMirrorFilterRuleDestinationPortRangeArgsOutput) ToTrafficMirrorFilterRuleDestinationPortRangeArgsOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleDestinationPortRangeArgsOutput {
	return o
}

func (o TrafficMirrorFilterRuleDestinationPortRangeArgsOutput) ToTrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutput() TrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutput {
	return o.ToTrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutputWithContext(context.Background())
}

func (o TrafficMirrorFilterRuleDestinationPortRangeArgsOutput) ToTrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleDestinationPortRangeArgs) *TrafficMirrorFilterRuleDestinationPortRangeArgs {
		return &v
	}).(TrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutput)
}

// Starting port of the range
func (o TrafficMirrorFilterRuleDestinationPortRangeArgsOutput) FromPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleDestinationPortRangeArgs) *int { return v.FromPort }).(pulumi.IntPtrOutput)
}

// Ending port of the range
func (o TrafficMirrorFilterRuleDestinationPortRangeArgsOutput) ToPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleDestinationPortRangeArgs) *int { return v.ToPort }).(pulumi.IntPtrOutput)
}

type TrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficMirrorFilterRuleDestinationPortRangeArgs)(nil)).Elem()
}

func (o TrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutput) ToTrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutput() TrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutput {
	return o
}

func (o TrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutput) ToTrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutput {
	return o
}

func (o TrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutput) Elem() TrafficMirrorFilterRuleDestinationPortRangeArgsOutput {
	return o.ApplyT(func(v *TrafficMirrorFilterRuleDestinationPortRangeArgs) TrafficMirrorFilterRuleDestinationPortRangeArgs {
		return *v
	}).(TrafficMirrorFilterRuleDestinationPortRangeArgsOutput)
}

// Starting port of the range
func (o TrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutput) FromPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleDestinationPortRangeArgs) *int { return v.FromPort }).(pulumi.IntPtrOutput)
}

// Ending port of the range
func (o TrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutput) ToPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleDestinationPortRangeArgs) *int { return v.ToPort }).(pulumi.IntPtrOutput)
}

type TrafficMirrorFilterRuleDestinationPortRangeState struct {
	// Starting port of the range
	FromPort *int `pulumi:"fromPort"`
	// Ending port of the range
	ToPort *int `pulumi:"toPort"`
}

type TrafficMirrorFilterRuleDestinationPortRangeStateInput interface {
	pulumi.Input

	ToTrafficMirrorFilterRuleDestinationPortRangeStateOutput() TrafficMirrorFilterRuleDestinationPortRangeStateOutput
	ToTrafficMirrorFilterRuleDestinationPortRangeStateOutputWithContext(context.Context) TrafficMirrorFilterRuleDestinationPortRangeStateOutput
}

type TrafficMirrorFilterRuleDestinationPortRangeStateArgs struct {
	// Starting port of the range
	FromPort pulumi.IntPtrInput `pulumi:"fromPort"`
	// Ending port of the range
	ToPort pulumi.IntPtrInput `pulumi:"toPort"`
}

func (TrafficMirrorFilterRuleDestinationPortRangeStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilterRuleDestinationPortRangeState)(nil)).Elem()
}

func (i TrafficMirrorFilterRuleDestinationPortRangeStateArgs) ToTrafficMirrorFilterRuleDestinationPortRangeStateOutput() TrafficMirrorFilterRuleDestinationPortRangeStateOutput {
	return i.ToTrafficMirrorFilterRuleDestinationPortRangeStateOutputWithContext(context.Background())
}

func (i TrafficMirrorFilterRuleDestinationPortRangeStateArgs) ToTrafficMirrorFilterRuleDestinationPortRangeStateOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleDestinationPortRangeStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleDestinationPortRangeStateOutput)
}

type TrafficMirrorFilterRuleDestinationPortRangeStateOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFilterRuleDestinationPortRangeStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilterRuleDestinationPortRangeState)(nil)).Elem()
}

func (o TrafficMirrorFilterRuleDestinationPortRangeStateOutput) ToTrafficMirrorFilterRuleDestinationPortRangeStateOutput() TrafficMirrorFilterRuleDestinationPortRangeStateOutput {
	return o
}

func (o TrafficMirrorFilterRuleDestinationPortRangeStateOutput) ToTrafficMirrorFilterRuleDestinationPortRangeStateOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleDestinationPortRangeStateOutput {
	return o
}

// Starting port of the range
func (o TrafficMirrorFilterRuleDestinationPortRangeStateOutput) FromPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleDestinationPortRangeState) *int { return v.FromPort }).(pulumi.IntPtrOutput)
}

// Ending port of the range
func (o TrafficMirrorFilterRuleDestinationPortRangeStateOutput) ToPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleDestinationPortRangeState) *int { return v.ToPort }).(pulumi.IntPtrOutput)
}

type TrafficMirrorFilterRuleSourcePortRange struct {
	// Starting port of the range
	FromPort *int `pulumi:"fromPort"`
	// Ending port of the range
	ToPort *int `pulumi:"toPort"`
}

type TrafficMirrorFilterRuleSourcePortRangeInput interface {
	pulumi.Input

	ToTrafficMirrorFilterRuleSourcePortRangeOutput() TrafficMirrorFilterRuleSourcePortRangeOutput
	ToTrafficMirrorFilterRuleSourcePortRangeOutputWithContext(context.Context) TrafficMirrorFilterRuleSourcePortRangeOutput
}

type TrafficMirrorFilterRuleSourcePortRangeArgs struct {
	// Starting port of the range
	FromPort pulumi.IntPtrInput `pulumi:"fromPort"`
	// Ending port of the range
	ToPort pulumi.IntPtrInput `pulumi:"toPort"`
}

func (TrafficMirrorFilterRuleSourcePortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilterRuleSourcePortRange)(nil)).Elem()
}

func (i TrafficMirrorFilterRuleSourcePortRangeArgs) ToTrafficMirrorFilterRuleSourcePortRangeOutput() TrafficMirrorFilterRuleSourcePortRangeOutput {
	return i.ToTrafficMirrorFilterRuleSourcePortRangeOutputWithContext(context.Background())
}

func (i TrafficMirrorFilterRuleSourcePortRangeArgs) ToTrafficMirrorFilterRuleSourcePortRangeOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleSourcePortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleSourcePortRangeOutput)
}

func (i TrafficMirrorFilterRuleSourcePortRangeArgs) ToTrafficMirrorFilterRuleSourcePortRangePtrOutput() TrafficMirrorFilterRuleSourcePortRangePtrOutput {
	return i.ToTrafficMirrorFilterRuleSourcePortRangePtrOutputWithContext(context.Background())
}

func (i TrafficMirrorFilterRuleSourcePortRangeArgs) ToTrafficMirrorFilterRuleSourcePortRangePtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleSourcePortRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleSourcePortRangeOutput).ToTrafficMirrorFilterRuleSourcePortRangePtrOutputWithContext(ctx)
}

type TrafficMirrorFilterRuleSourcePortRangePtrInput interface {
	pulumi.Input

	ToTrafficMirrorFilterRuleSourcePortRangePtrOutput() TrafficMirrorFilterRuleSourcePortRangePtrOutput
	ToTrafficMirrorFilterRuleSourcePortRangePtrOutputWithContext(context.Context) TrafficMirrorFilterRuleSourcePortRangePtrOutput
}

type trafficMirrorFilterRuleSourcePortRangePtrType TrafficMirrorFilterRuleSourcePortRangeArgs

func TrafficMirrorFilterRuleSourcePortRangePtr(v *TrafficMirrorFilterRuleSourcePortRangeArgs) TrafficMirrorFilterRuleSourcePortRangePtrInput {
	return (*trafficMirrorFilterRuleSourcePortRangePtrType)(v)
}

func (*trafficMirrorFilterRuleSourcePortRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficMirrorFilterRuleSourcePortRange)(nil)).Elem()
}

func (i *trafficMirrorFilterRuleSourcePortRangePtrType) ToTrafficMirrorFilterRuleSourcePortRangePtrOutput() TrafficMirrorFilterRuleSourcePortRangePtrOutput {
	return i.ToTrafficMirrorFilterRuleSourcePortRangePtrOutputWithContext(context.Background())
}

func (i *trafficMirrorFilterRuleSourcePortRangePtrType) ToTrafficMirrorFilterRuleSourcePortRangePtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleSourcePortRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleSourcePortRangePtrOutput)
}

type TrafficMirrorFilterRuleSourcePortRangeOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFilterRuleSourcePortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilterRuleSourcePortRange)(nil)).Elem()
}

func (o TrafficMirrorFilterRuleSourcePortRangeOutput) ToTrafficMirrorFilterRuleSourcePortRangeOutput() TrafficMirrorFilterRuleSourcePortRangeOutput {
	return o
}

func (o TrafficMirrorFilterRuleSourcePortRangeOutput) ToTrafficMirrorFilterRuleSourcePortRangeOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleSourcePortRangeOutput {
	return o
}

func (o TrafficMirrorFilterRuleSourcePortRangeOutput) ToTrafficMirrorFilterRuleSourcePortRangePtrOutput() TrafficMirrorFilterRuleSourcePortRangePtrOutput {
	return o.ToTrafficMirrorFilterRuleSourcePortRangePtrOutputWithContext(context.Background())
}

func (o TrafficMirrorFilterRuleSourcePortRangeOutput) ToTrafficMirrorFilterRuleSourcePortRangePtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleSourcePortRangePtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleSourcePortRange) *TrafficMirrorFilterRuleSourcePortRange {
		return &v
	}).(TrafficMirrorFilterRuleSourcePortRangePtrOutput)
}

// Starting port of the range
func (o TrafficMirrorFilterRuleSourcePortRangeOutput) FromPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleSourcePortRange) *int { return v.FromPort }).(pulumi.IntPtrOutput)
}

// Ending port of the range
func (o TrafficMirrorFilterRuleSourcePortRangeOutput) ToPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleSourcePortRange) *int { return v.ToPort }).(pulumi.IntPtrOutput)
}

type TrafficMirrorFilterRuleSourcePortRangePtrOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFilterRuleSourcePortRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficMirrorFilterRuleSourcePortRange)(nil)).Elem()
}

func (o TrafficMirrorFilterRuleSourcePortRangePtrOutput) ToTrafficMirrorFilterRuleSourcePortRangePtrOutput() TrafficMirrorFilterRuleSourcePortRangePtrOutput {
	return o
}

func (o TrafficMirrorFilterRuleSourcePortRangePtrOutput) ToTrafficMirrorFilterRuleSourcePortRangePtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleSourcePortRangePtrOutput {
	return o
}

func (o TrafficMirrorFilterRuleSourcePortRangePtrOutput) Elem() TrafficMirrorFilterRuleSourcePortRangeOutput {
	return o.ApplyT(func(v *TrafficMirrorFilterRuleSourcePortRange) TrafficMirrorFilterRuleSourcePortRange { return *v }).(TrafficMirrorFilterRuleSourcePortRangeOutput)
}

// Starting port of the range
func (o TrafficMirrorFilterRuleSourcePortRangePtrOutput) FromPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleSourcePortRange) *int { return v.FromPort }).(pulumi.IntPtrOutput)
}

// Ending port of the range
func (o TrafficMirrorFilterRuleSourcePortRangePtrOutput) ToPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleSourcePortRange) *int { return v.ToPort }).(pulumi.IntPtrOutput)
}

type TrafficMirrorFilterRuleSourcePortRangeArgs struct {
	// Starting port of the range
	FromPort *int `pulumi:"fromPort"`
	// Ending port of the range
	ToPort *int `pulumi:"toPort"`
}

type TrafficMirrorFilterRuleSourcePortRangeArgsInput interface {
	pulumi.Input

	ToTrafficMirrorFilterRuleSourcePortRangeArgsOutput() TrafficMirrorFilterRuleSourcePortRangeArgsOutput
	ToTrafficMirrorFilterRuleSourcePortRangeArgsOutputWithContext(context.Context) TrafficMirrorFilterRuleSourcePortRangeArgsOutput
}

type TrafficMirrorFilterRuleSourcePortRangeArgsArgs struct {
	// Starting port of the range
	FromPort pulumi.IntPtrInput `pulumi:"fromPort"`
	// Ending port of the range
	ToPort pulumi.IntPtrInput `pulumi:"toPort"`
}

func (TrafficMirrorFilterRuleSourcePortRangeArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilterRuleSourcePortRangeArgs)(nil)).Elem()
}

func (i TrafficMirrorFilterRuleSourcePortRangeArgsArgs) ToTrafficMirrorFilterRuleSourcePortRangeArgsOutput() TrafficMirrorFilterRuleSourcePortRangeArgsOutput {
	return i.ToTrafficMirrorFilterRuleSourcePortRangeArgsOutputWithContext(context.Background())
}

func (i TrafficMirrorFilterRuleSourcePortRangeArgsArgs) ToTrafficMirrorFilterRuleSourcePortRangeArgsOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleSourcePortRangeArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleSourcePortRangeArgsOutput)
}

func (i TrafficMirrorFilterRuleSourcePortRangeArgsArgs) ToTrafficMirrorFilterRuleSourcePortRangeArgsPtrOutput() TrafficMirrorFilterRuleSourcePortRangeArgsPtrOutput {
	return i.ToTrafficMirrorFilterRuleSourcePortRangeArgsPtrOutputWithContext(context.Background())
}

func (i TrafficMirrorFilterRuleSourcePortRangeArgsArgs) ToTrafficMirrorFilterRuleSourcePortRangeArgsPtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleSourcePortRangeArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleSourcePortRangeArgsOutput).ToTrafficMirrorFilterRuleSourcePortRangeArgsPtrOutputWithContext(ctx)
}

type TrafficMirrorFilterRuleSourcePortRangeArgsPtrInput interface {
	pulumi.Input

	ToTrafficMirrorFilterRuleSourcePortRangeArgsPtrOutput() TrafficMirrorFilterRuleSourcePortRangeArgsPtrOutput
	ToTrafficMirrorFilterRuleSourcePortRangeArgsPtrOutputWithContext(context.Context) TrafficMirrorFilterRuleSourcePortRangeArgsPtrOutput
}

type trafficMirrorFilterRuleSourcePortRangeArgsPtrType TrafficMirrorFilterRuleSourcePortRangeArgsArgs

func TrafficMirrorFilterRuleSourcePortRangeArgsPtr(v *TrafficMirrorFilterRuleSourcePortRangeArgsArgs) TrafficMirrorFilterRuleSourcePortRangeArgsPtrInput {
	return (*trafficMirrorFilterRuleSourcePortRangeArgsPtrType)(v)
}

func (*trafficMirrorFilterRuleSourcePortRangeArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficMirrorFilterRuleSourcePortRangeArgs)(nil)).Elem()
}

func (i *trafficMirrorFilterRuleSourcePortRangeArgsPtrType) ToTrafficMirrorFilterRuleSourcePortRangeArgsPtrOutput() TrafficMirrorFilterRuleSourcePortRangeArgsPtrOutput {
	return i.ToTrafficMirrorFilterRuleSourcePortRangeArgsPtrOutputWithContext(context.Background())
}

func (i *trafficMirrorFilterRuleSourcePortRangeArgsPtrType) ToTrafficMirrorFilterRuleSourcePortRangeArgsPtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleSourcePortRangeArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleSourcePortRangeArgsPtrOutput)
}

type TrafficMirrorFilterRuleSourcePortRangeArgsOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFilterRuleSourcePortRangeArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilterRuleSourcePortRangeArgs)(nil)).Elem()
}

func (o TrafficMirrorFilterRuleSourcePortRangeArgsOutput) ToTrafficMirrorFilterRuleSourcePortRangeArgsOutput() TrafficMirrorFilterRuleSourcePortRangeArgsOutput {
	return o
}

func (o TrafficMirrorFilterRuleSourcePortRangeArgsOutput) ToTrafficMirrorFilterRuleSourcePortRangeArgsOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleSourcePortRangeArgsOutput {
	return o
}

func (o TrafficMirrorFilterRuleSourcePortRangeArgsOutput) ToTrafficMirrorFilterRuleSourcePortRangeArgsPtrOutput() TrafficMirrorFilterRuleSourcePortRangeArgsPtrOutput {
	return o.ToTrafficMirrorFilterRuleSourcePortRangeArgsPtrOutputWithContext(context.Background())
}

func (o TrafficMirrorFilterRuleSourcePortRangeArgsOutput) ToTrafficMirrorFilterRuleSourcePortRangeArgsPtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleSourcePortRangeArgsPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleSourcePortRangeArgs) *TrafficMirrorFilterRuleSourcePortRangeArgs {
		return &v
	}).(TrafficMirrorFilterRuleSourcePortRangeArgsPtrOutput)
}

// Starting port of the range
func (o TrafficMirrorFilterRuleSourcePortRangeArgsOutput) FromPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleSourcePortRangeArgs) *int { return v.FromPort }).(pulumi.IntPtrOutput)
}

// Ending port of the range
func (o TrafficMirrorFilterRuleSourcePortRangeArgsOutput) ToPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleSourcePortRangeArgs) *int { return v.ToPort }).(pulumi.IntPtrOutput)
}

type TrafficMirrorFilterRuleSourcePortRangeArgsPtrOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFilterRuleSourcePortRangeArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficMirrorFilterRuleSourcePortRangeArgs)(nil)).Elem()
}

func (o TrafficMirrorFilterRuleSourcePortRangeArgsPtrOutput) ToTrafficMirrorFilterRuleSourcePortRangeArgsPtrOutput() TrafficMirrorFilterRuleSourcePortRangeArgsPtrOutput {
	return o
}

func (o TrafficMirrorFilterRuleSourcePortRangeArgsPtrOutput) ToTrafficMirrorFilterRuleSourcePortRangeArgsPtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleSourcePortRangeArgsPtrOutput {
	return o
}

func (o TrafficMirrorFilterRuleSourcePortRangeArgsPtrOutput) Elem() TrafficMirrorFilterRuleSourcePortRangeArgsOutput {
	return o.ApplyT(func(v *TrafficMirrorFilterRuleSourcePortRangeArgs) TrafficMirrorFilterRuleSourcePortRangeArgs {
		return *v
	}).(TrafficMirrorFilterRuleSourcePortRangeArgsOutput)
}

// Starting port of the range
func (o TrafficMirrorFilterRuleSourcePortRangeArgsPtrOutput) FromPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleSourcePortRangeArgs) *int { return v.FromPort }).(pulumi.IntPtrOutput)
}

// Ending port of the range
func (o TrafficMirrorFilterRuleSourcePortRangeArgsPtrOutput) ToPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleSourcePortRangeArgs) *int { return v.ToPort }).(pulumi.IntPtrOutput)
}

type TrafficMirrorFilterRuleSourcePortRangeState struct {
	// Starting port of the range
	FromPort *int `pulumi:"fromPort"`
	// Ending port of the range
	ToPort *int `pulumi:"toPort"`
}

type TrafficMirrorFilterRuleSourcePortRangeStateInput interface {
	pulumi.Input

	ToTrafficMirrorFilterRuleSourcePortRangeStateOutput() TrafficMirrorFilterRuleSourcePortRangeStateOutput
	ToTrafficMirrorFilterRuleSourcePortRangeStateOutputWithContext(context.Context) TrafficMirrorFilterRuleSourcePortRangeStateOutput
}

type TrafficMirrorFilterRuleSourcePortRangeStateArgs struct {
	// Starting port of the range
	FromPort pulumi.IntPtrInput `pulumi:"fromPort"`
	// Ending port of the range
	ToPort pulumi.IntPtrInput `pulumi:"toPort"`
}

func (TrafficMirrorFilterRuleSourcePortRangeStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilterRuleSourcePortRangeState)(nil)).Elem()
}

func (i TrafficMirrorFilterRuleSourcePortRangeStateArgs) ToTrafficMirrorFilterRuleSourcePortRangeStateOutput() TrafficMirrorFilterRuleSourcePortRangeStateOutput {
	return i.ToTrafficMirrorFilterRuleSourcePortRangeStateOutputWithContext(context.Background())
}

func (i TrafficMirrorFilterRuleSourcePortRangeStateArgs) ToTrafficMirrorFilterRuleSourcePortRangeStateOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleSourcePortRangeStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleSourcePortRangeStateOutput)
}

type TrafficMirrorFilterRuleSourcePortRangeStateOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFilterRuleSourcePortRangeStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilterRuleSourcePortRangeState)(nil)).Elem()
}

func (o TrafficMirrorFilterRuleSourcePortRangeStateOutput) ToTrafficMirrorFilterRuleSourcePortRangeStateOutput() TrafficMirrorFilterRuleSourcePortRangeStateOutput {
	return o
}

func (o TrafficMirrorFilterRuleSourcePortRangeStateOutput) ToTrafficMirrorFilterRuleSourcePortRangeStateOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleSourcePortRangeStateOutput {
	return o
}

// Starting port of the range
func (o TrafficMirrorFilterRuleSourcePortRangeStateOutput) FromPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleSourcePortRangeState) *int { return v.FromPort }).(pulumi.IntPtrOutput)
}

// Ending port of the range
func (o TrafficMirrorFilterRuleSourcePortRangeStateOutput) ToPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleSourcePortRangeState) *int { return v.ToPort }).(pulumi.IntPtrOutput)
}

type VpcEndpointDnsEntry struct {
	// The DNS name.
	DnsName string `pulumi:"dnsName"`
	// The ID of the private hosted zone.
	HostedZoneId string `pulumi:"hostedZoneId"`
}

type VpcEndpointDnsEntryInput interface {
	pulumi.Input

	ToVpcEndpointDnsEntryOutput() VpcEndpointDnsEntryOutput
	ToVpcEndpointDnsEntryOutputWithContext(context.Context) VpcEndpointDnsEntryOutput
}

type VpcEndpointDnsEntryArgs struct {
	// The DNS name.
	DnsName pulumi.StringInput `pulumi:"dnsName"`
	// The ID of the private hosted zone.
	HostedZoneId pulumi.StringInput `pulumi:"hostedZoneId"`
}

func (VpcEndpointDnsEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcEndpointDnsEntry)(nil)).Elem()
}

func (i VpcEndpointDnsEntryArgs) ToVpcEndpointDnsEntryOutput() VpcEndpointDnsEntryOutput {
	return i.ToVpcEndpointDnsEntryOutputWithContext(context.Background())
}

func (i VpcEndpointDnsEntryArgs) ToVpcEndpointDnsEntryOutputWithContext(ctx context.Context) VpcEndpointDnsEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointDnsEntryOutput)
}

type VpcEndpointDnsEntryArrayInput interface {
	pulumi.Input

	ToVpcEndpointDnsEntryArrayOutput() VpcEndpointDnsEntryArrayOutput
	ToVpcEndpointDnsEntryArrayOutputWithContext(context.Context) VpcEndpointDnsEntryArrayOutput
}

type VpcEndpointDnsEntryArray []VpcEndpointDnsEntryInput

func (VpcEndpointDnsEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcEndpointDnsEntry)(nil)).Elem()
}

func (i VpcEndpointDnsEntryArray) ToVpcEndpointDnsEntryArrayOutput() VpcEndpointDnsEntryArrayOutput {
	return i.ToVpcEndpointDnsEntryArrayOutputWithContext(context.Background())
}

func (i VpcEndpointDnsEntryArray) ToVpcEndpointDnsEntryArrayOutputWithContext(ctx context.Context) VpcEndpointDnsEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointDnsEntryArrayOutput)
}

type VpcEndpointDnsEntryOutput struct{ *pulumi.OutputState }

func (VpcEndpointDnsEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcEndpointDnsEntry)(nil)).Elem()
}

func (o VpcEndpointDnsEntryOutput) ToVpcEndpointDnsEntryOutput() VpcEndpointDnsEntryOutput {
	return o
}

func (o VpcEndpointDnsEntryOutput) ToVpcEndpointDnsEntryOutputWithContext(ctx context.Context) VpcEndpointDnsEntryOutput {
	return o
}

// The DNS name.
func (o VpcEndpointDnsEntryOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v VpcEndpointDnsEntry) string { return v.DnsName }).(pulumi.StringOutput)
}

// The ID of the private hosted zone.
func (o VpcEndpointDnsEntryOutput) HostedZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v VpcEndpointDnsEntry) string { return v.HostedZoneId }).(pulumi.StringOutput)
}

type VpcEndpointDnsEntryArrayOutput struct{ *pulumi.OutputState }

func (VpcEndpointDnsEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcEndpointDnsEntry)(nil)).Elem()
}

func (o VpcEndpointDnsEntryArrayOutput) ToVpcEndpointDnsEntryArrayOutput() VpcEndpointDnsEntryArrayOutput {
	return o
}

func (o VpcEndpointDnsEntryArrayOutput) ToVpcEndpointDnsEntryArrayOutputWithContext(ctx context.Context) VpcEndpointDnsEntryArrayOutput {
	return o
}

func (o VpcEndpointDnsEntryArrayOutput) Index(i pulumi.IntInput) VpcEndpointDnsEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcEndpointDnsEntry {
		return vs[0].([]VpcEndpointDnsEntry)[vs[1].(int)]
	}).(VpcEndpointDnsEntryOutput)
}

type VpcEndpointDnsEntryState struct {
	// The DNS name.
	DnsName *string `pulumi:"dnsName"`
	// The ID of the private hosted zone.
	HostedZoneId *string `pulumi:"hostedZoneId"`
}

type VpcEndpointDnsEntryStateInput interface {
	pulumi.Input

	ToVpcEndpointDnsEntryStateOutput() VpcEndpointDnsEntryStateOutput
	ToVpcEndpointDnsEntryStateOutputWithContext(context.Context) VpcEndpointDnsEntryStateOutput
}

type VpcEndpointDnsEntryStateArgs struct {
	// The DNS name.
	DnsName pulumi.StringPtrInput `pulumi:"dnsName"`
	// The ID of the private hosted zone.
	HostedZoneId pulumi.StringPtrInput `pulumi:"hostedZoneId"`
}

func (VpcEndpointDnsEntryStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcEndpointDnsEntryState)(nil)).Elem()
}

func (i VpcEndpointDnsEntryStateArgs) ToVpcEndpointDnsEntryStateOutput() VpcEndpointDnsEntryStateOutput {
	return i.ToVpcEndpointDnsEntryStateOutputWithContext(context.Background())
}

func (i VpcEndpointDnsEntryStateArgs) ToVpcEndpointDnsEntryStateOutputWithContext(ctx context.Context) VpcEndpointDnsEntryStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointDnsEntryStateOutput)
}

type VpcEndpointDnsEntryStateArrayInput interface {
	pulumi.Input

	ToVpcEndpointDnsEntryStateArrayOutput() VpcEndpointDnsEntryStateArrayOutput
	ToVpcEndpointDnsEntryStateArrayOutputWithContext(context.Context) VpcEndpointDnsEntryStateArrayOutput
}

type VpcEndpointDnsEntryStateArray []VpcEndpointDnsEntryStateInput

func (VpcEndpointDnsEntryStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcEndpointDnsEntryState)(nil)).Elem()
}

func (i VpcEndpointDnsEntryStateArray) ToVpcEndpointDnsEntryStateArrayOutput() VpcEndpointDnsEntryStateArrayOutput {
	return i.ToVpcEndpointDnsEntryStateArrayOutputWithContext(context.Background())
}

func (i VpcEndpointDnsEntryStateArray) ToVpcEndpointDnsEntryStateArrayOutputWithContext(ctx context.Context) VpcEndpointDnsEntryStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointDnsEntryStateArrayOutput)
}

type VpcEndpointDnsEntryStateOutput struct{ *pulumi.OutputState }

func (VpcEndpointDnsEntryStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcEndpointDnsEntryState)(nil)).Elem()
}

func (o VpcEndpointDnsEntryStateOutput) ToVpcEndpointDnsEntryStateOutput() VpcEndpointDnsEntryStateOutput {
	return o
}

func (o VpcEndpointDnsEntryStateOutput) ToVpcEndpointDnsEntryStateOutputWithContext(ctx context.Context) VpcEndpointDnsEntryStateOutput {
	return o
}

// The DNS name.
func (o VpcEndpointDnsEntryStateOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcEndpointDnsEntryState) *string { return v.DnsName }).(pulumi.StringPtrOutput)
}

// The ID of the private hosted zone.
func (o VpcEndpointDnsEntryStateOutput) HostedZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcEndpointDnsEntryState) *string { return v.HostedZoneId }).(pulumi.StringPtrOutput)
}

type VpcEndpointDnsEntryStateArrayOutput struct{ *pulumi.OutputState }

func (VpcEndpointDnsEntryStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcEndpointDnsEntryState)(nil)).Elem()
}

func (o VpcEndpointDnsEntryStateArrayOutput) ToVpcEndpointDnsEntryStateArrayOutput() VpcEndpointDnsEntryStateArrayOutput {
	return o
}

func (o VpcEndpointDnsEntryStateArrayOutput) ToVpcEndpointDnsEntryStateArrayOutputWithContext(ctx context.Context) VpcEndpointDnsEntryStateArrayOutput {
	return o
}

func (o VpcEndpointDnsEntryStateArrayOutput) Index(i pulumi.IntInput) VpcEndpointDnsEntryStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcEndpointDnsEntryState {
		return vs[0].([]VpcEndpointDnsEntryState)[vs[1].(int)]
	}).(VpcEndpointDnsEntryStateOutput)
}

type VpcPeeringConnectionAccepterType struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC. This is
	// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
	// inter-region VPC peering.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

type VpcPeeringConnectionAccepterTypeInput interface {
	pulumi.Input

	ToVpcPeeringConnectionAccepterTypeOutput() VpcPeeringConnectionAccepterTypeOutput
	ToVpcPeeringConnectionAccepterTypeOutputWithContext(context.Context) VpcPeeringConnectionAccepterTypeOutput
}

type VpcPeeringConnectionAccepterTypeArgs struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC. This is
	// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
	// inter-region VPC peering.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (VpcPeeringConnectionAccepterTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterType)(nil)).Elem()
}

func (i VpcPeeringConnectionAccepterTypeArgs) ToVpcPeeringConnectionAccepterTypeOutput() VpcPeeringConnectionAccepterTypeOutput {
	return i.ToVpcPeeringConnectionAccepterTypeOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterTypeArgs) ToVpcPeeringConnectionAccepterTypeOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterTypeOutput)
}

func (i VpcPeeringConnectionAccepterTypeArgs) ToVpcPeeringConnectionAccepterTypePtrOutput() VpcPeeringConnectionAccepterTypePtrOutput {
	return i.ToVpcPeeringConnectionAccepterTypePtrOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterTypeArgs) ToVpcPeeringConnectionAccepterTypePtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterTypeOutput).ToVpcPeeringConnectionAccepterTypePtrOutputWithContext(ctx)
}

type VpcPeeringConnectionAccepterTypePtrInput interface {
	pulumi.Input

	ToVpcPeeringConnectionAccepterTypePtrOutput() VpcPeeringConnectionAccepterTypePtrOutput
	ToVpcPeeringConnectionAccepterTypePtrOutputWithContext(context.Context) VpcPeeringConnectionAccepterTypePtrOutput
}

type vpcPeeringConnectionAccepterTypePtrType VpcPeeringConnectionAccepterTypeArgs

func VpcPeeringConnectionAccepterTypePtr(v *VpcPeeringConnectionAccepterTypeArgs) VpcPeeringConnectionAccepterTypePtrInput {
	return (*vpcPeeringConnectionAccepterTypePtrType)(v)
}

func (*vpcPeeringConnectionAccepterTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionAccepterType)(nil)).Elem()
}

func (i *vpcPeeringConnectionAccepterTypePtrType) ToVpcPeeringConnectionAccepterTypePtrOutput() VpcPeeringConnectionAccepterTypePtrOutput {
	return i.ToVpcPeeringConnectionAccepterTypePtrOutputWithContext(context.Background())
}

func (i *vpcPeeringConnectionAccepterTypePtrType) ToVpcPeeringConnectionAccepterTypePtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterTypePtrOutput)
}

type VpcPeeringConnectionAccepterTypeOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionAccepterTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterType)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterTypeOutput) ToVpcPeeringConnectionAccepterTypeOutput() VpcPeeringConnectionAccepterTypeOutput {
	return o
}

func (o VpcPeeringConnectionAccepterTypeOutput) ToVpcPeeringConnectionAccepterTypeOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterTypeOutput {
	return o
}

func (o VpcPeeringConnectionAccepterTypeOutput) ToVpcPeeringConnectionAccepterTypePtrOutput() VpcPeeringConnectionAccepterTypePtrOutput {
	return o.ToVpcPeeringConnectionAccepterTypePtrOutputWithContext(context.Background())
}

func (o VpcPeeringConnectionAccepterTypeOutput) ToVpcPeeringConnectionAccepterTypePtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterTypePtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterType) *VpcPeeringConnectionAccepterType {
		return &v
	}).(VpcPeeringConnectionAccepterTypePtrOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC.
func (o VpcPeeringConnectionAccepterTypeOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterType) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC. This is
// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
// inter-region VPC peering.
func (o VpcPeeringConnectionAccepterTypeOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterType) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection.
func (o VpcPeeringConnectionAccepterTypeOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterType) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionAccepterTypePtrOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionAccepterTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionAccepterType)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterTypePtrOutput) ToVpcPeeringConnectionAccepterTypePtrOutput() VpcPeeringConnectionAccepterTypePtrOutput {
	return o
}

func (o VpcPeeringConnectionAccepterTypePtrOutput) ToVpcPeeringConnectionAccepterTypePtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterTypePtrOutput {
	return o
}

func (o VpcPeeringConnectionAccepterTypePtrOutput) Elem() VpcPeeringConnectionAccepterTypeOutput {
	return o.ApplyT(func(v *VpcPeeringConnectionAccepterType) VpcPeeringConnectionAccepterType { return *v }).(VpcPeeringConnectionAccepterTypeOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC.
func (o VpcPeeringConnectionAccepterTypePtrOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterType) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC. This is
// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
// inter-region VPC peering.
func (o VpcPeeringConnectionAccepterTypePtrOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterType) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection.
func (o VpcPeeringConnectionAccepterTypePtrOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterType) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionAccepterAccepter struct {
	// Indicates whether a local ClassicLink connection can communicate
	// with the peer VPC over the VPC Peering Connection.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Indicates whether a local VPC can resolve public DNS hostnames to
	// private IP addresses when queried from instances in a peer VPC.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Indicates whether a local VPC can communicate with a ClassicLink
	// connection in the peer VPC over the VPC Peering Connection.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

type VpcPeeringConnectionAccepterAccepterInput interface {
	pulumi.Input

	ToVpcPeeringConnectionAccepterAccepterOutput() VpcPeeringConnectionAccepterAccepterOutput
	ToVpcPeeringConnectionAccepterAccepterOutputWithContext(context.Context) VpcPeeringConnectionAccepterAccepterOutput
}

type VpcPeeringConnectionAccepterAccepterArgs struct {
	// Indicates whether a local ClassicLink connection can communicate
	// with the peer VPC over the VPC Peering Connection.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Indicates whether a local VPC can resolve public DNS hostnames to
	// private IP addresses when queried from instances in a peer VPC.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Indicates whether a local VPC can communicate with a ClassicLink
	// connection in the peer VPC over the VPC Peering Connection.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (VpcPeeringConnectionAccepterAccepterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterAccepter)(nil)).Elem()
}

func (i VpcPeeringConnectionAccepterAccepterArgs) ToVpcPeeringConnectionAccepterAccepterOutput() VpcPeeringConnectionAccepterAccepterOutput {
	return i.ToVpcPeeringConnectionAccepterAccepterOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterAccepterArgs) ToVpcPeeringConnectionAccepterAccepterOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterAccepterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterAccepterOutput)
}

func (i VpcPeeringConnectionAccepterAccepterArgs) ToVpcPeeringConnectionAccepterAccepterPtrOutput() VpcPeeringConnectionAccepterAccepterPtrOutput {
	return i.ToVpcPeeringConnectionAccepterAccepterPtrOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterAccepterArgs) ToVpcPeeringConnectionAccepterAccepterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterAccepterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterAccepterOutput).ToVpcPeeringConnectionAccepterAccepterPtrOutputWithContext(ctx)
}

type VpcPeeringConnectionAccepterAccepterPtrInput interface {
	pulumi.Input

	ToVpcPeeringConnectionAccepterAccepterPtrOutput() VpcPeeringConnectionAccepterAccepterPtrOutput
	ToVpcPeeringConnectionAccepterAccepterPtrOutputWithContext(context.Context) VpcPeeringConnectionAccepterAccepterPtrOutput
}

type vpcPeeringConnectionAccepterAccepterPtrType VpcPeeringConnectionAccepterAccepterArgs

func VpcPeeringConnectionAccepterAccepterPtr(v *VpcPeeringConnectionAccepterAccepterArgs) VpcPeeringConnectionAccepterAccepterPtrInput {
	return (*vpcPeeringConnectionAccepterAccepterPtrType)(v)
}

func (*vpcPeeringConnectionAccepterAccepterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionAccepterAccepter)(nil)).Elem()
}

func (i *vpcPeeringConnectionAccepterAccepterPtrType) ToVpcPeeringConnectionAccepterAccepterPtrOutput() VpcPeeringConnectionAccepterAccepterPtrOutput {
	return i.ToVpcPeeringConnectionAccepterAccepterPtrOutputWithContext(context.Background())
}

func (i *vpcPeeringConnectionAccepterAccepterPtrType) ToVpcPeeringConnectionAccepterAccepterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterAccepterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterAccepterPtrOutput)
}

type VpcPeeringConnectionAccepterAccepterOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionAccepterAccepterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterAccepter)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterAccepterOutput) ToVpcPeeringConnectionAccepterAccepterOutput() VpcPeeringConnectionAccepterAccepterOutput {
	return o
}

func (o VpcPeeringConnectionAccepterAccepterOutput) ToVpcPeeringConnectionAccepterAccepterOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterAccepterOutput {
	return o
}

func (o VpcPeeringConnectionAccepterAccepterOutput) ToVpcPeeringConnectionAccepterAccepterPtrOutput() VpcPeeringConnectionAccepterAccepterPtrOutput {
	return o.ToVpcPeeringConnectionAccepterAccepterPtrOutputWithContext(context.Background())
}

func (o VpcPeeringConnectionAccepterAccepterOutput) ToVpcPeeringConnectionAccepterAccepterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterAccepterPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterAccepter) *VpcPeeringConnectionAccepterAccepter {
		return &v
	}).(VpcPeeringConnectionAccepterAccepterPtrOutput)
}

// Indicates whether a local ClassicLink connection can communicate
// with the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterAccepterOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterAccepter) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can resolve public DNS hostnames to
// private IP addresses when queried from instances in a peer VPC.
func (o VpcPeeringConnectionAccepterAccepterOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterAccepter) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can communicate with a ClassicLink
// connection in the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterAccepterOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterAccepter) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionAccepterAccepterPtrOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionAccepterAccepterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionAccepterAccepter)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterAccepterPtrOutput) ToVpcPeeringConnectionAccepterAccepterPtrOutput() VpcPeeringConnectionAccepterAccepterPtrOutput {
	return o
}

func (o VpcPeeringConnectionAccepterAccepterPtrOutput) ToVpcPeeringConnectionAccepterAccepterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterAccepterPtrOutput {
	return o
}

func (o VpcPeeringConnectionAccepterAccepterPtrOutput) Elem() VpcPeeringConnectionAccepterAccepterOutput {
	return o.ApplyT(func(v *VpcPeeringConnectionAccepterAccepter) VpcPeeringConnectionAccepterAccepter { return *v }).(VpcPeeringConnectionAccepterAccepterOutput)
}

// Indicates whether a local ClassicLink connection can communicate
// with the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterAccepterPtrOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterAccepter) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can resolve public DNS hostnames to
// private IP addresses when queried from instances in a peer VPC.
func (o VpcPeeringConnectionAccepterAccepterPtrOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterAccepter) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can communicate with a ClassicLink
// connection in the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterAccepterPtrOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterAccepter) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionAccepterAccepterArgs struct {
	// Indicates whether a local ClassicLink connection can communicate
	// with the peer VPC over the VPC Peering Connection.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Indicates whether a local VPC can resolve public DNS hostnames to
	// private IP addresses when queried from instances in a peer VPC.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Indicates whether a local VPC can communicate with a ClassicLink
	// connection in the peer VPC over the VPC Peering Connection.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

type VpcPeeringConnectionAccepterAccepterArgsInput interface {
	pulumi.Input

	ToVpcPeeringConnectionAccepterAccepterArgsOutput() VpcPeeringConnectionAccepterAccepterArgsOutput
	ToVpcPeeringConnectionAccepterAccepterArgsOutputWithContext(context.Context) VpcPeeringConnectionAccepterAccepterArgsOutput
}

type VpcPeeringConnectionAccepterAccepterArgsArgs struct {
	// Indicates whether a local ClassicLink connection can communicate
	// with the peer VPC over the VPC Peering Connection.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Indicates whether a local VPC can resolve public DNS hostnames to
	// private IP addresses when queried from instances in a peer VPC.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Indicates whether a local VPC can communicate with a ClassicLink
	// connection in the peer VPC over the VPC Peering Connection.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (VpcPeeringConnectionAccepterAccepterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterAccepterArgs)(nil)).Elem()
}

func (i VpcPeeringConnectionAccepterAccepterArgsArgs) ToVpcPeeringConnectionAccepterAccepterArgsOutput() VpcPeeringConnectionAccepterAccepterArgsOutput {
	return i.ToVpcPeeringConnectionAccepterAccepterArgsOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterAccepterArgsArgs) ToVpcPeeringConnectionAccepterAccepterArgsOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterAccepterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterAccepterArgsOutput)
}

func (i VpcPeeringConnectionAccepterAccepterArgsArgs) ToVpcPeeringConnectionAccepterAccepterArgsPtrOutput() VpcPeeringConnectionAccepterAccepterArgsPtrOutput {
	return i.ToVpcPeeringConnectionAccepterAccepterArgsPtrOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterAccepterArgsArgs) ToVpcPeeringConnectionAccepterAccepterArgsPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterAccepterArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterAccepterArgsOutput).ToVpcPeeringConnectionAccepterAccepterArgsPtrOutputWithContext(ctx)
}

type VpcPeeringConnectionAccepterAccepterArgsPtrInput interface {
	pulumi.Input

	ToVpcPeeringConnectionAccepterAccepterArgsPtrOutput() VpcPeeringConnectionAccepterAccepterArgsPtrOutput
	ToVpcPeeringConnectionAccepterAccepterArgsPtrOutputWithContext(context.Context) VpcPeeringConnectionAccepterAccepterArgsPtrOutput
}

type vpcPeeringConnectionAccepterAccepterArgsPtrType VpcPeeringConnectionAccepterAccepterArgsArgs

func VpcPeeringConnectionAccepterAccepterArgsPtr(v *VpcPeeringConnectionAccepterAccepterArgsArgs) VpcPeeringConnectionAccepterAccepterArgsPtrInput {
	return (*vpcPeeringConnectionAccepterAccepterArgsPtrType)(v)
}

func (*vpcPeeringConnectionAccepterAccepterArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionAccepterAccepterArgs)(nil)).Elem()
}

func (i *vpcPeeringConnectionAccepterAccepterArgsPtrType) ToVpcPeeringConnectionAccepterAccepterArgsPtrOutput() VpcPeeringConnectionAccepterAccepterArgsPtrOutput {
	return i.ToVpcPeeringConnectionAccepterAccepterArgsPtrOutputWithContext(context.Background())
}

func (i *vpcPeeringConnectionAccepterAccepterArgsPtrType) ToVpcPeeringConnectionAccepterAccepterArgsPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterAccepterArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterAccepterArgsPtrOutput)
}

type VpcPeeringConnectionAccepterAccepterArgsOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionAccepterAccepterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterAccepterArgs)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterAccepterArgsOutput) ToVpcPeeringConnectionAccepterAccepterArgsOutput() VpcPeeringConnectionAccepterAccepterArgsOutput {
	return o
}

func (o VpcPeeringConnectionAccepterAccepterArgsOutput) ToVpcPeeringConnectionAccepterAccepterArgsOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterAccepterArgsOutput {
	return o
}

func (o VpcPeeringConnectionAccepterAccepterArgsOutput) ToVpcPeeringConnectionAccepterAccepterArgsPtrOutput() VpcPeeringConnectionAccepterAccepterArgsPtrOutput {
	return o.ToVpcPeeringConnectionAccepterAccepterArgsPtrOutputWithContext(context.Background())
}

func (o VpcPeeringConnectionAccepterAccepterArgsOutput) ToVpcPeeringConnectionAccepterAccepterArgsPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterAccepterArgsPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterAccepterArgs) *VpcPeeringConnectionAccepterAccepterArgs {
		return &v
	}).(VpcPeeringConnectionAccepterAccepterArgsPtrOutput)
}

// Indicates whether a local ClassicLink connection can communicate
// with the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterAccepterArgsOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterAccepterArgs) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can resolve public DNS hostnames to
// private IP addresses when queried from instances in a peer VPC.
func (o VpcPeeringConnectionAccepterAccepterArgsOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterAccepterArgs) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can communicate with a ClassicLink
// connection in the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterAccepterArgsOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterAccepterArgs) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionAccepterAccepterArgsPtrOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionAccepterAccepterArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionAccepterAccepterArgs)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterAccepterArgsPtrOutput) ToVpcPeeringConnectionAccepterAccepterArgsPtrOutput() VpcPeeringConnectionAccepterAccepterArgsPtrOutput {
	return o
}

func (o VpcPeeringConnectionAccepterAccepterArgsPtrOutput) ToVpcPeeringConnectionAccepterAccepterArgsPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterAccepterArgsPtrOutput {
	return o
}

func (o VpcPeeringConnectionAccepterAccepterArgsPtrOutput) Elem() VpcPeeringConnectionAccepterAccepterArgsOutput {
	return o.ApplyT(func(v *VpcPeeringConnectionAccepterAccepterArgs) VpcPeeringConnectionAccepterAccepterArgs { return *v }).(VpcPeeringConnectionAccepterAccepterArgsOutput)
}

// Indicates whether a local ClassicLink connection can communicate
// with the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterAccepterArgsPtrOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterAccepterArgs) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can resolve public DNS hostnames to
// private IP addresses when queried from instances in a peer VPC.
func (o VpcPeeringConnectionAccepterAccepterArgsPtrOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterAccepterArgs) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can communicate with a ClassicLink
// connection in the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterAccepterArgsPtrOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterAccepterArgs) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionAccepterAccepterState struct {
	// Indicates whether a local ClassicLink connection can communicate
	// with the peer VPC over the VPC Peering Connection.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Indicates whether a local VPC can resolve public DNS hostnames to
	// private IP addresses when queried from instances in a peer VPC.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Indicates whether a local VPC can communicate with a ClassicLink
	// connection in the peer VPC over the VPC Peering Connection.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

type VpcPeeringConnectionAccepterAccepterStateInput interface {
	pulumi.Input

	ToVpcPeeringConnectionAccepterAccepterStateOutput() VpcPeeringConnectionAccepterAccepterStateOutput
	ToVpcPeeringConnectionAccepterAccepterStateOutputWithContext(context.Context) VpcPeeringConnectionAccepterAccepterStateOutput
}

type VpcPeeringConnectionAccepterAccepterStateArgs struct {
	// Indicates whether a local ClassicLink connection can communicate
	// with the peer VPC over the VPC Peering Connection.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Indicates whether a local VPC can resolve public DNS hostnames to
	// private IP addresses when queried from instances in a peer VPC.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Indicates whether a local VPC can communicate with a ClassicLink
	// connection in the peer VPC over the VPC Peering Connection.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (VpcPeeringConnectionAccepterAccepterStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterAccepterState)(nil)).Elem()
}

func (i VpcPeeringConnectionAccepterAccepterStateArgs) ToVpcPeeringConnectionAccepterAccepterStateOutput() VpcPeeringConnectionAccepterAccepterStateOutput {
	return i.ToVpcPeeringConnectionAccepterAccepterStateOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterAccepterStateArgs) ToVpcPeeringConnectionAccepterAccepterStateOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterAccepterStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterAccepterStateOutput)
}

type VpcPeeringConnectionAccepterAccepterStateOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionAccepterAccepterStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterAccepterState)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterAccepterStateOutput) ToVpcPeeringConnectionAccepterAccepterStateOutput() VpcPeeringConnectionAccepterAccepterStateOutput {
	return o
}

func (o VpcPeeringConnectionAccepterAccepterStateOutput) ToVpcPeeringConnectionAccepterAccepterStateOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterAccepterStateOutput {
	return o
}

// Indicates whether a local ClassicLink connection can communicate
// with the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterAccepterStateOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterAccepterState) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can resolve public DNS hostnames to
// private IP addresses when queried from instances in a peer VPC.
func (o VpcPeeringConnectionAccepterAccepterStateOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterAccepterState) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can communicate with a ClassicLink
// connection in the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterAccepterStateOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterAccepterState) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionAccepterArgsType struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC. This is
	// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
	// inter-region VPC peering.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

type VpcPeeringConnectionAccepterArgsTypeInput interface {
	pulumi.Input

	ToVpcPeeringConnectionAccepterArgsTypeOutput() VpcPeeringConnectionAccepterArgsTypeOutput
	ToVpcPeeringConnectionAccepterArgsTypeOutputWithContext(context.Context) VpcPeeringConnectionAccepterArgsTypeOutput
}

type VpcPeeringConnectionAccepterArgsTypeArgs struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC. This is
	// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
	// inter-region VPC peering.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (VpcPeeringConnectionAccepterArgsTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterArgsType)(nil)).Elem()
}

func (i VpcPeeringConnectionAccepterArgsTypeArgs) ToVpcPeeringConnectionAccepterArgsTypeOutput() VpcPeeringConnectionAccepterArgsTypeOutput {
	return i.ToVpcPeeringConnectionAccepterArgsTypeOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterArgsTypeArgs) ToVpcPeeringConnectionAccepterArgsTypeOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterArgsTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterArgsTypeOutput)
}

func (i VpcPeeringConnectionAccepterArgsTypeArgs) ToVpcPeeringConnectionAccepterArgsTypePtrOutput() VpcPeeringConnectionAccepterArgsTypePtrOutput {
	return i.ToVpcPeeringConnectionAccepterArgsTypePtrOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterArgsTypeArgs) ToVpcPeeringConnectionAccepterArgsTypePtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterArgsTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterArgsTypeOutput).ToVpcPeeringConnectionAccepterArgsTypePtrOutputWithContext(ctx)
}

type VpcPeeringConnectionAccepterArgsTypePtrInput interface {
	pulumi.Input

	ToVpcPeeringConnectionAccepterArgsTypePtrOutput() VpcPeeringConnectionAccepterArgsTypePtrOutput
	ToVpcPeeringConnectionAccepterArgsTypePtrOutputWithContext(context.Context) VpcPeeringConnectionAccepterArgsTypePtrOutput
}

type vpcPeeringConnectionAccepterArgsTypePtrType VpcPeeringConnectionAccepterArgsTypeArgs

func VpcPeeringConnectionAccepterArgsTypePtr(v *VpcPeeringConnectionAccepterArgsTypeArgs) VpcPeeringConnectionAccepterArgsTypePtrInput {
	return (*vpcPeeringConnectionAccepterArgsTypePtrType)(v)
}

func (*vpcPeeringConnectionAccepterArgsTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionAccepterArgsType)(nil)).Elem()
}

func (i *vpcPeeringConnectionAccepterArgsTypePtrType) ToVpcPeeringConnectionAccepterArgsTypePtrOutput() VpcPeeringConnectionAccepterArgsTypePtrOutput {
	return i.ToVpcPeeringConnectionAccepterArgsTypePtrOutputWithContext(context.Background())
}

func (i *vpcPeeringConnectionAccepterArgsTypePtrType) ToVpcPeeringConnectionAccepterArgsTypePtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterArgsTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterArgsTypePtrOutput)
}

type VpcPeeringConnectionAccepterArgsTypeOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionAccepterArgsTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterArgsType)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterArgsTypeOutput) ToVpcPeeringConnectionAccepterArgsTypeOutput() VpcPeeringConnectionAccepterArgsTypeOutput {
	return o
}

func (o VpcPeeringConnectionAccepterArgsTypeOutput) ToVpcPeeringConnectionAccepterArgsTypeOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterArgsTypeOutput {
	return o
}

func (o VpcPeeringConnectionAccepterArgsTypeOutput) ToVpcPeeringConnectionAccepterArgsTypePtrOutput() VpcPeeringConnectionAccepterArgsTypePtrOutput {
	return o.ToVpcPeeringConnectionAccepterArgsTypePtrOutputWithContext(context.Background())
}

func (o VpcPeeringConnectionAccepterArgsTypeOutput) ToVpcPeeringConnectionAccepterArgsTypePtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterArgsTypePtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterArgsType) *VpcPeeringConnectionAccepterArgsType {
		return &v
	}).(VpcPeeringConnectionAccepterArgsTypePtrOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC.
func (o VpcPeeringConnectionAccepterArgsTypeOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterArgsType) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC. This is
// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
// inter-region VPC peering.
func (o VpcPeeringConnectionAccepterArgsTypeOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterArgsType) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection.
func (o VpcPeeringConnectionAccepterArgsTypeOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterArgsType) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionAccepterArgsTypePtrOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionAccepterArgsTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionAccepterArgsType)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterArgsTypePtrOutput) ToVpcPeeringConnectionAccepterArgsTypePtrOutput() VpcPeeringConnectionAccepterArgsTypePtrOutput {
	return o
}

func (o VpcPeeringConnectionAccepterArgsTypePtrOutput) ToVpcPeeringConnectionAccepterArgsTypePtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterArgsTypePtrOutput {
	return o
}

func (o VpcPeeringConnectionAccepterArgsTypePtrOutput) Elem() VpcPeeringConnectionAccepterArgsTypeOutput {
	return o.ApplyT(func(v *VpcPeeringConnectionAccepterArgsType) VpcPeeringConnectionAccepterArgsType { return *v }).(VpcPeeringConnectionAccepterArgsTypeOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC.
func (o VpcPeeringConnectionAccepterArgsTypePtrOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterArgsType) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC. This is
// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
// inter-region VPC peering.
func (o VpcPeeringConnectionAccepterArgsTypePtrOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterArgsType) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection.
func (o VpcPeeringConnectionAccepterArgsTypePtrOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterArgsType) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionAccepterRequester struct {
	// Indicates whether a local ClassicLink connection can communicate
	// with the peer VPC over the VPC Peering Connection.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Indicates whether a local VPC can resolve public DNS hostnames to
	// private IP addresses when queried from instances in a peer VPC.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Indicates whether a local VPC can communicate with a ClassicLink
	// connection in the peer VPC over the VPC Peering Connection.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

type VpcPeeringConnectionAccepterRequesterInput interface {
	pulumi.Input

	ToVpcPeeringConnectionAccepterRequesterOutput() VpcPeeringConnectionAccepterRequesterOutput
	ToVpcPeeringConnectionAccepterRequesterOutputWithContext(context.Context) VpcPeeringConnectionAccepterRequesterOutput
}

type VpcPeeringConnectionAccepterRequesterArgs struct {
	// Indicates whether a local ClassicLink connection can communicate
	// with the peer VPC over the VPC Peering Connection.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Indicates whether a local VPC can resolve public DNS hostnames to
	// private IP addresses when queried from instances in a peer VPC.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Indicates whether a local VPC can communicate with a ClassicLink
	// connection in the peer VPC over the VPC Peering Connection.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (VpcPeeringConnectionAccepterRequesterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterRequester)(nil)).Elem()
}

func (i VpcPeeringConnectionAccepterRequesterArgs) ToVpcPeeringConnectionAccepterRequesterOutput() VpcPeeringConnectionAccepterRequesterOutput {
	return i.ToVpcPeeringConnectionAccepterRequesterOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterRequesterArgs) ToVpcPeeringConnectionAccepterRequesterOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterRequesterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterRequesterOutput)
}

func (i VpcPeeringConnectionAccepterRequesterArgs) ToVpcPeeringConnectionAccepterRequesterPtrOutput() VpcPeeringConnectionAccepterRequesterPtrOutput {
	return i.ToVpcPeeringConnectionAccepterRequesterPtrOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterRequesterArgs) ToVpcPeeringConnectionAccepterRequesterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterRequesterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterRequesterOutput).ToVpcPeeringConnectionAccepterRequesterPtrOutputWithContext(ctx)
}

type VpcPeeringConnectionAccepterRequesterPtrInput interface {
	pulumi.Input

	ToVpcPeeringConnectionAccepterRequesterPtrOutput() VpcPeeringConnectionAccepterRequesterPtrOutput
	ToVpcPeeringConnectionAccepterRequesterPtrOutputWithContext(context.Context) VpcPeeringConnectionAccepterRequesterPtrOutput
}

type vpcPeeringConnectionAccepterRequesterPtrType VpcPeeringConnectionAccepterRequesterArgs

func VpcPeeringConnectionAccepterRequesterPtr(v *VpcPeeringConnectionAccepterRequesterArgs) VpcPeeringConnectionAccepterRequesterPtrInput {
	return (*vpcPeeringConnectionAccepterRequesterPtrType)(v)
}

func (*vpcPeeringConnectionAccepterRequesterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionAccepterRequester)(nil)).Elem()
}

func (i *vpcPeeringConnectionAccepterRequesterPtrType) ToVpcPeeringConnectionAccepterRequesterPtrOutput() VpcPeeringConnectionAccepterRequesterPtrOutput {
	return i.ToVpcPeeringConnectionAccepterRequesterPtrOutputWithContext(context.Background())
}

func (i *vpcPeeringConnectionAccepterRequesterPtrType) ToVpcPeeringConnectionAccepterRequesterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterRequesterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterRequesterPtrOutput)
}

type VpcPeeringConnectionAccepterRequesterOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionAccepterRequesterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterRequester)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterRequesterOutput) ToVpcPeeringConnectionAccepterRequesterOutput() VpcPeeringConnectionAccepterRequesterOutput {
	return o
}

func (o VpcPeeringConnectionAccepterRequesterOutput) ToVpcPeeringConnectionAccepterRequesterOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterRequesterOutput {
	return o
}

func (o VpcPeeringConnectionAccepterRequesterOutput) ToVpcPeeringConnectionAccepterRequesterPtrOutput() VpcPeeringConnectionAccepterRequesterPtrOutput {
	return o.ToVpcPeeringConnectionAccepterRequesterPtrOutputWithContext(context.Background())
}

func (o VpcPeeringConnectionAccepterRequesterOutput) ToVpcPeeringConnectionAccepterRequesterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterRequesterPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterRequester) *VpcPeeringConnectionAccepterRequester {
		return &v
	}).(VpcPeeringConnectionAccepterRequesterPtrOutput)
}

// Indicates whether a local ClassicLink connection can communicate
// with the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterRequesterOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterRequester) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can resolve public DNS hostnames to
// private IP addresses when queried from instances in a peer VPC.
func (o VpcPeeringConnectionAccepterRequesterOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterRequester) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can communicate with a ClassicLink
// connection in the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterRequesterOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterRequester) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionAccepterRequesterPtrOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionAccepterRequesterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionAccepterRequester)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterRequesterPtrOutput) ToVpcPeeringConnectionAccepterRequesterPtrOutput() VpcPeeringConnectionAccepterRequesterPtrOutput {
	return o
}

func (o VpcPeeringConnectionAccepterRequesterPtrOutput) ToVpcPeeringConnectionAccepterRequesterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterRequesterPtrOutput {
	return o
}

func (o VpcPeeringConnectionAccepterRequesterPtrOutput) Elem() VpcPeeringConnectionAccepterRequesterOutput {
	return o.ApplyT(func(v *VpcPeeringConnectionAccepterRequester) VpcPeeringConnectionAccepterRequester { return *v }).(VpcPeeringConnectionAccepterRequesterOutput)
}

// Indicates whether a local ClassicLink connection can communicate
// with the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterRequesterPtrOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterRequester) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can resolve public DNS hostnames to
// private IP addresses when queried from instances in a peer VPC.
func (o VpcPeeringConnectionAccepterRequesterPtrOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterRequester) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can communicate with a ClassicLink
// connection in the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterRequesterPtrOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterRequester) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionAccepterRequesterArgs struct {
	// Indicates whether a local ClassicLink connection can communicate
	// with the peer VPC over the VPC Peering Connection.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Indicates whether a local VPC can resolve public DNS hostnames to
	// private IP addresses when queried from instances in a peer VPC.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Indicates whether a local VPC can communicate with a ClassicLink
	// connection in the peer VPC over the VPC Peering Connection.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

type VpcPeeringConnectionAccepterRequesterArgsInput interface {
	pulumi.Input

	ToVpcPeeringConnectionAccepterRequesterArgsOutput() VpcPeeringConnectionAccepterRequesterArgsOutput
	ToVpcPeeringConnectionAccepterRequesterArgsOutputWithContext(context.Context) VpcPeeringConnectionAccepterRequesterArgsOutput
}

type VpcPeeringConnectionAccepterRequesterArgsArgs struct {
	// Indicates whether a local ClassicLink connection can communicate
	// with the peer VPC over the VPC Peering Connection.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Indicates whether a local VPC can resolve public DNS hostnames to
	// private IP addresses when queried from instances in a peer VPC.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Indicates whether a local VPC can communicate with a ClassicLink
	// connection in the peer VPC over the VPC Peering Connection.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (VpcPeeringConnectionAccepterRequesterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterRequesterArgs)(nil)).Elem()
}

func (i VpcPeeringConnectionAccepterRequesterArgsArgs) ToVpcPeeringConnectionAccepterRequesterArgsOutput() VpcPeeringConnectionAccepterRequesterArgsOutput {
	return i.ToVpcPeeringConnectionAccepterRequesterArgsOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterRequesterArgsArgs) ToVpcPeeringConnectionAccepterRequesterArgsOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterRequesterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterRequesterArgsOutput)
}

func (i VpcPeeringConnectionAccepterRequesterArgsArgs) ToVpcPeeringConnectionAccepterRequesterArgsPtrOutput() VpcPeeringConnectionAccepterRequesterArgsPtrOutput {
	return i.ToVpcPeeringConnectionAccepterRequesterArgsPtrOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterRequesterArgsArgs) ToVpcPeeringConnectionAccepterRequesterArgsPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterRequesterArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterRequesterArgsOutput).ToVpcPeeringConnectionAccepterRequesterArgsPtrOutputWithContext(ctx)
}

type VpcPeeringConnectionAccepterRequesterArgsPtrInput interface {
	pulumi.Input

	ToVpcPeeringConnectionAccepterRequesterArgsPtrOutput() VpcPeeringConnectionAccepterRequesterArgsPtrOutput
	ToVpcPeeringConnectionAccepterRequesterArgsPtrOutputWithContext(context.Context) VpcPeeringConnectionAccepterRequesterArgsPtrOutput
}

type vpcPeeringConnectionAccepterRequesterArgsPtrType VpcPeeringConnectionAccepterRequesterArgsArgs

func VpcPeeringConnectionAccepterRequesterArgsPtr(v *VpcPeeringConnectionAccepterRequesterArgsArgs) VpcPeeringConnectionAccepterRequesterArgsPtrInput {
	return (*vpcPeeringConnectionAccepterRequesterArgsPtrType)(v)
}

func (*vpcPeeringConnectionAccepterRequesterArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionAccepterRequesterArgs)(nil)).Elem()
}

func (i *vpcPeeringConnectionAccepterRequesterArgsPtrType) ToVpcPeeringConnectionAccepterRequesterArgsPtrOutput() VpcPeeringConnectionAccepterRequesterArgsPtrOutput {
	return i.ToVpcPeeringConnectionAccepterRequesterArgsPtrOutputWithContext(context.Background())
}

func (i *vpcPeeringConnectionAccepterRequesterArgsPtrType) ToVpcPeeringConnectionAccepterRequesterArgsPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterRequesterArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterRequesterArgsPtrOutput)
}

type VpcPeeringConnectionAccepterRequesterArgsOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionAccepterRequesterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterRequesterArgs)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterRequesterArgsOutput) ToVpcPeeringConnectionAccepterRequesterArgsOutput() VpcPeeringConnectionAccepterRequesterArgsOutput {
	return o
}

func (o VpcPeeringConnectionAccepterRequesterArgsOutput) ToVpcPeeringConnectionAccepterRequesterArgsOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterRequesterArgsOutput {
	return o
}

func (o VpcPeeringConnectionAccepterRequesterArgsOutput) ToVpcPeeringConnectionAccepterRequesterArgsPtrOutput() VpcPeeringConnectionAccepterRequesterArgsPtrOutput {
	return o.ToVpcPeeringConnectionAccepterRequesterArgsPtrOutputWithContext(context.Background())
}

func (o VpcPeeringConnectionAccepterRequesterArgsOutput) ToVpcPeeringConnectionAccepterRequesterArgsPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterRequesterArgsPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterRequesterArgs) *VpcPeeringConnectionAccepterRequesterArgs {
		return &v
	}).(VpcPeeringConnectionAccepterRequesterArgsPtrOutput)
}

// Indicates whether a local ClassicLink connection can communicate
// with the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterRequesterArgsOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterRequesterArgs) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can resolve public DNS hostnames to
// private IP addresses when queried from instances in a peer VPC.
func (o VpcPeeringConnectionAccepterRequesterArgsOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterRequesterArgs) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can communicate with a ClassicLink
// connection in the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterRequesterArgsOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterRequesterArgs) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionAccepterRequesterArgsPtrOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionAccepterRequesterArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionAccepterRequesterArgs)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterRequesterArgsPtrOutput) ToVpcPeeringConnectionAccepterRequesterArgsPtrOutput() VpcPeeringConnectionAccepterRequesterArgsPtrOutput {
	return o
}

func (o VpcPeeringConnectionAccepterRequesterArgsPtrOutput) ToVpcPeeringConnectionAccepterRequesterArgsPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterRequesterArgsPtrOutput {
	return o
}

func (o VpcPeeringConnectionAccepterRequesterArgsPtrOutput) Elem() VpcPeeringConnectionAccepterRequesterArgsOutput {
	return o.ApplyT(func(v *VpcPeeringConnectionAccepterRequesterArgs) VpcPeeringConnectionAccepterRequesterArgs {
		return *v
	}).(VpcPeeringConnectionAccepterRequesterArgsOutput)
}

// Indicates whether a local ClassicLink connection can communicate
// with the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterRequesterArgsPtrOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterRequesterArgs) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can resolve public DNS hostnames to
// private IP addresses when queried from instances in a peer VPC.
func (o VpcPeeringConnectionAccepterRequesterArgsPtrOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterRequesterArgs) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can communicate with a ClassicLink
// connection in the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterRequesterArgsPtrOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterRequesterArgs) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionAccepterRequesterState struct {
	// Indicates whether a local ClassicLink connection can communicate
	// with the peer VPC over the VPC Peering Connection.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Indicates whether a local VPC can resolve public DNS hostnames to
	// private IP addresses when queried from instances in a peer VPC.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Indicates whether a local VPC can communicate with a ClassicLink
	// connection in the peer VPC over the VPC Peering Connection.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

type VpcPeeringConnectionAccepterRequesterStateInput interface {
	pulumi.Input

	ToVpcPeeringConnectionAccepterRequesterStateOutput() VpcPeeringConnectionAccepterRequesterStateOutput
	ToVpcPeeringConnectionAccepterRequesterStateOutputWithContext(context.Context) VpcPeeringConnectionAccepterRequesterStateOutput
}

type VpcPeeringConnectionAccepterRequesterStateArgs struct {
	// Indicates whether a local ClassicLink connection can communicate
	// with the peer VPC over the VPC Peering Connection.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Indicates whether a local VPC can resolve public DNS hostnames to
	// private IP addresses when queried from instances in a peer VPC.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Indicates whether a local VPC can communicate with a ClassicLink
	// connection in the peer VPC over the VPC Peering Connection.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (VpcPeeringConnectionAccepterRequesterStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterRequesterState)(nil)).Elem()
}

func (i VpcPeeringConnectionAccepterRequesterStateArgs) ToVpcPeeringConnectionAccepterRequesterStateOutput() VpcPeeringConnectionAccepterRequesterStateOutput {
	return i.ToVpcPeeringConnectionAccepterRequesterStateOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterRequesterStateArgs) ToVpcPeeringConnectionAccepterRequesterStateOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterRequesterStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterRequesterStateOutput)
}

type VpcPeeringConnectionAccepterRequesterStateOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionAccepterRequesterStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterRequesterState)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterRequesterStateOutput) ToVpcPeeringConnectionAccepterRequesterStateOutput() VpcPeeringConnectionAccepterRequesterStateOutput {
	return o
}

func (o VpcPeeringConnectionAccepterRequesterStateOutput) ToVpcPeeringConnectionAccepterRequesterStateOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterRequesterStateOutput {
	return o
}

// Indicates whether a local ClassicLink connection can communicate
// with the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterRequesterStateOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterRequesterState) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can resolve public DNS hostnames to
// private IP addresses when queried from instances in a peer VPC.
func (o VpcPeeringConnectionAccepterRequesterStateOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterRequesterState) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can communicate with a ClassicLink
// connection in the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterRequesterStateOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterRequesterState) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionAccepterStateType struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC. This is
	// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
	// inter-region VPC peering.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

type VpcPeeringConnectionAccepterStateTypeInput interface {
	pulumi.Input

	ToVpcPeeringConnectionAccepterStateTypeOutput() VpcPeeringConnectionAccepterStateTypeOutput
	ToVpcPeeringConnectionAccepterStateTypeOutputWithContext(context.Context) VpcPeeringConnectionAccepterStateTypeOutput
}

type VpcPeeringConnectionAccepterStateTypeArgs struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC. This is
	// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
	// inter-region VPC peering.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (VpcPeeringConnectionAccepterStateTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterStateType)(nil)).Elem()
}

func (i VpcPeeringConnectionAccepterStateTypeArgs) ToVpcPeeringConnectionAccepterStateTypeOutput() VpcPeeringConnectionAccepterStateTypeOutput {
	return i.ToVpcPeeringConnectionAccepterStateTypeOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterStateTypeArgs) ToVpcPeeringConnectionAccepterStateTypeOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterStateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterStateTypeOutput)
}

type VpcPeeringConnectionAccepterStateTypeOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionAccepterStateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterStateType)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterStateTypeOutput) ToVpcPeeringConnectionAccepterStateTypeOutput() VpcPeeringConnectionAccepterStateTypeOutput {
	return o
}

func (o VpcPeeringConnectionAccepterStateTypeOutput) ToVpcPeeringConnectionAccepterStateTypeOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterStateTypeOutput {
	return o
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC.
func (o VpcPeeringConnectionAccepterStateTypeOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterStateType) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC. This is
// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
// inter-region VPC peering.
func (o VpcPeeringConnectionAccepterStateTypeOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterStateType) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection.
func (o VpcPeeringConnectionAccepterStateTypeOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterStateType) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionRequester struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC. This is
	// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
	// inter-region VPC peering.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

type VpcPeeringConnectionRequesterInput interface {
	pulumi.Input

	ToVpcPeeringConnectionRequesterOutput() VpcPeeringConnectionRequesterOutput
	ToVpcPeeringConnectionRequesterOutputWithContext(context.Context) VpcPeeringConnectionRequesterOutput
}

type VpcPeeringConnectionRequesterArgs struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC. This is
	// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
	// inter-region VPC peering.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (VpcPeeringConnectionRequesterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionRequester)(nil)).Elem()
}

func (i VpcPeeringConnectionRequesterArgs) ToVpcPeeringConnectionRequesterOutput() VpcPeeringConnectionRequesterOutput {
	return i.ToVpcPeeringConnectionRequesterOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionRequesterArgs) ToVpcPeeringConnectionRequesterOutputWithContext(ctx context.Context) VpcPeeringConnectionRequesterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionRequesterOutput)
}

func (i VpcPeeringConnectionRequesterArgs) ToVpcPeeringConnectionRequesterPtrOutput() VpcPeeringConnectionRequesterPtrOutput {
	return i.ToVpcPeeringConnectionRequesterPtrOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionRequesterArgs) ToVpcPeeringConnectionRequesterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionRequesterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionRequesterOutput).ToVpcPeeringConnectionRequesterPtrOutputWithContext(ctx)
}

type VpcPeeringConnectionRequesterPtrInput interface {
	pulumi.Input

	ToVpcPeeringConnectionRequesterPtrOutput() VpcPeeringConnectionRequesterPtrOutput
	ToVpcPeeringConnectionRequesterPtrOutputWithContext(context.Context) VpcPeeringConnectionRequesterPtrOutput
}

type vpcPeeringConnectionRequesterPtrType VpcPeeringConnectionRequesterArgs

func VpcPeeringConnectionRequesterPtr(v *VpcPeeringConnectionRequesterArgs) VpcPeeringConnectionRequesterPtrInput {
	return (*vpcPeeringConnectionRequesterPtrType)(v)
}

func (*vpcPeeringConnectionRequesterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionRequester)(nil)).Elem()
}

func (i *vpcPeeringConnectionRequesterPtrType) ToVpcPeeringConnectionRequesterPtrOutput() VpcPeeringConnectionRequesterPtrOutput {
	return i.ToVpcPeeringConnectionRequesterPtrOutputWithContext(context.Background())
}

func (i *vpcPeeringConnectionRequesterPtrType) ToVpcPeeringConnectionRequesterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionRequesterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionRequesterPtrOutput)
}

type VpcPeeringConnectionRequesterOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionRequesterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionRequester)(nil)).Elem()
}

func (o VpcPeeringConnectionRequesterOutput) ToVpcPeeringConnectionRequesterOutput() VpcPeeringConnectionRequesterOutput {
	return o
}

func (o VpcPeeringConnectionRequesterOutput) ToVpcPeeringConnectionRequesterOutputWithContext(ctx context.Context) VpcPeeringConnectionRequesterOutput {
	return o
}

func (o VpcPeeringConnectionRequesterOutput) ToVpcPeeringConnectionRequesterPtrOutput() VpcPeeringConnectionRequesterPtrOutput {
	return o.ToVpcPeeringConnectionRequesterPtrOutputWithContext(context.Background())
}

func (o VpcPeeringConnectionRequesterOutput) ToVpcPeeringConnectionRequesterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionRequesterPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionRequester) *VpcPeeringConnectionRequester {
		return &v
	}).(VpcPeeringConnectionRequesterPtrOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC.
func (o VpcPeeringConnectionRequesterOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionRequester) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC. This is
// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
// inter-region VPC peering.
func (o VpcPeeringConnectionRequesterOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionRequester) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection.
func (o VpcPeeringConnectionRequesterOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionRequester) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionRequesterPtrOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionRequesterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionRequester)(nil)).Elem()
}

func (o VpcPeeringConnectionRequesterPtrOutput) ToVpcPeeringConnectionRequesterPtrOutput() VpcPeeringConnectionRequesterPtrOutput {
	return o
}

func (o VpcPeeringConnectionRequesterPtrOutput) ToVpcPeeringConnectionRequesterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionRequesterPtrOutput {
	return o
}

func (o VpcPeeringConnectionRequesterPtrOutput) Elem() VpcPeeringConnectionRequesterOutput {
	return o.ApplyT(func(v *VpcPeeringConnectionRequester) VpcPeeringConnectionRequester { return *v }).(VpcPeeringConnectionRequesterOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC.
func (o VpcPeeringConnectionRequesterPtrOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionRequester) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC. This is
// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
// inter-region VPC peering.
func (o VpcPeeringConnectionRequesterPtrOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionRequester) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection.
func (o VpcPeeringConnectionRequesterPtrOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionRequester) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionRequesterArgs struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC. This is
	// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
	// inter-region VPC peering.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

type VpcPeeringConnectionRequesterArgsInput interface {
	pulumi.Input

	ToVpcPeeringConnectionRequesterArgsOutput() VpcPeeringConnectionRequesterArgsOutput
	ToVpcPeeringConnectionRequesterArgsOutputWithContext(context.Context) VpcPeeringConnectionRequesterArgsOutput
}

type VpcPeeringConnectionRequesterArgsArgs struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC. This is
	// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
	// inter-region VPC peering.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (VpcPeeringConnectionRequesterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionRequesterArgs)(nil)).Elem()
}

func (i VpcPeeringConnectionRequesterArgsArgs) ToVpcPeeringConnectionRequesterArgsOutput() VpcPeeringConnectionRequesterArgsOutput {
	return i.ToVpcPeeringConnectionRequesterArgsOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionRequesterArgsArgs) ToVpcPeeringConnectionRequesterArgsOutputWithContext(ctx context.Context) VpcPeeringConnectionRequesterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionRequesterArgsOutput)
}

func (i VpcPeeringConnectionRequesterArgsArgs) ToVpcPeeringConnectionRequesterArgsPtrOutput() VpcPeeringConnectionRequesterArgsPtrOutput {
	return i.ToVpcPeeringConnectionRequesterArgsPtrOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionRequesterArgsArgs) ToVpcPeeringConnectionRequesterArgsPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionRequesterArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionRequesterArgsOutput).ToVpcPeeringConnectionRequesterArgsPtrOutputWithContext(ctx)
}

type VpcPeeringConnectionRequesterArgsPtrInput interface {
	pulumi.Input

	ToVpcPeeringConnectionRequesterArgsPtrOutput() VpcPeeringConnectionRequesterArgsPtrOutput
	ToVpcPeeringConnectionRequesterArgsPtrOutputWithContext(context.Context) VpcPeeringConnectionRequesterArgsPtrOutput
}

type vpcPeeringConnectionRequesterArgsPtrType VpcPeeringConnectionRequesterArgsArgs

func VpcPeeringConnectionRequesterArgsPtr(v *VpcPeeringConnectionRequesterArgsArgs) VpcPeeringConnectionRequesterArgsPtrInput {
	return (*vpcPeeringConnectionRequesterArgsPtrType)(v)
}

func (*vpcPeeringConnectionRequesterArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionRequesterArgs)(nil)).Elem()
}

func (i *vpcPeeringConnectionRequesterArgsPtrType) ToVpcPeeringConnectionRequesterArgsPtrOutput() VpcPeeringConnectionRequesterArgsPtrOutput {
	return i.ToVpcPeeringConnectionRequesterArgsPtrOutputWithContext(context.Background())
}

func (i *vpcPeeringConnectionRequesterArgsPtrType) ToVpcPeeringConnectionRequesterArgsPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionRequesterArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionRequesterArgsPtrOutput)
}

type VpcPeeringConnectionRequesterArgsOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionRequesterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionRequesterArgs)(nil)).Elem()
}

func (o VpcPeeringConnectionRequesterArgsOutput) ToVpcPeeringConnectionRequesterArgsOutput() VpcPeeringConnectionRequesterArgsOutput {
	return o
}

func (o VpcPeeringConnectionRequesterArgsOutput) ToVpcPeeringConnectionRequesterArgsOutputWithContext(ctx context.Context) VpcPeeringConnectionRequesterArgsOutput {
	return o
}

func (o VpcPeeringConnectionRequesterArgsOutput) ToVpcPeeringConnectionRequesterArgsPtrOutput() VpcPeeringConnectionRequesterArgsPtrOutput {
	return o.ToVpcPeeringConnectionRequesterArgsPtrOutputWithContext(context.Background())
}

func (o VpcPeeringConnectionRequesterArgsOutput) ToVpcPeeringConnectionRequesterArgsPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionRequesterArgsPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionRequesterArgs) *VpcPeeringConnectionRequesterArgs {
		return &v
	}).(VpcPeeringConnectionRequesterArgsPtrOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC.
func (o VpcPeeringConnectionRequesterArgsOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionRequesterArgs) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC. This is
// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
// inter-region VPC peering.
func (o VpcPeeringConnectionRequesterArgsOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionRequesterArgs) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection.
func (o VpcPeeringConnectionRequesterArgsOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionRequesterArgs) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionRequesterArgsPtrOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionRequesterArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionRequesterArgs)(nil)).Elem()
}

func (o VpcPeeringConnectionRequesterArgsPtrOutput) ToVpcPeeringConnectionRequesterArgsPtrOutput() VpcPeeringConnectionRequesterArgsPtrOutput {
	return o
}

func (o VpcPeeringConnectionRequesterArgsPtrOutput) ToVpcPeeringConnectionRequesterArgsPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionRequesterArgsPtrOutput {
	return o
}

func (o VpcPeeringConnectionRequesterArgsPtrOutput) Elem() VpcPeeringConnectionRequesterArgsOutput {
	return o.ApplyT(func(v *VpcPeeringConnectionRequesterArgs) VpcPeeringConnectionRequesterArgs { return *v }).(VpcPeeringConnectionRequesterArgsOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC.
func (o VpcPeeringConnectionRequesterArgsPtrOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionRequesterArgs) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC. This is
// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
// inter-region VPC peering.
func (o VpcPeeringConnectionRequesterArgsPtrOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionRequesterArgs) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection.
func (o VpcPeeringConnectionRequesterArgsPtrOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionRequesterArgs) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionRequesterState struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC. This is
	// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
	// inter-region VPC peering.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

type VpcPeeringConnectionRequesterStateInput interface {
	pulumi.Input

	ToVpcPeeringConnectionRequesterStateOutput() VpcPeeringConnectionRequesterStateOutput
	ToVpcPeeringConnectionRequesterStateOutputWithContext(context.Context) VpcPeeringConnectionRequesterStateOutput
}

type VpcPeeringConnectionRequesterStateArgs struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC. This is
	// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
	// inter-region VPC peering.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (VpcPeeringConnectionRequesterStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionRequesterState)(nil)).Elem()
}

func (i VpcPeeringConnectionRequesterStateArgs) ToVpcPeeringConnectionRequesterStateOutput() VpcPeeringConnectionRequesterStateOutput {
	return i.ToVpcPeeringConnectionRequesterStateOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionRequesterStateArgs) ToVpcPeeringConnectionRequesterStateOutputWithContext(ctx context.Context) VpcPeeringConnectionRequesterStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionRequesterStateOutput)
}

type VpcPeeringConnectionRequesterStateOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionRequesterStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionRequesterState)(nil)).Elem()
}

func (o VpcPeeringConnectionRequesterStateOutput) ToVpcPeeringConnectionRequesterStateOutput() VpcPeeringConnectionRequesterStateOutput {
	return o
}

func (o VpcPeeringConnectionRequesterStateOutput) ToVpcPeeringConnectionRequesterStateOutputWithContext(ctx context.Context) VpcPeeringConnectionRequesterStateOutput {
	return o
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC.
func (o VpcPeeringConnectionRequesterStateOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionRequesterState) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC. This is
// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
// inter-region VPC peering.
func (o VpcPeeringConnectionRequesterStateOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionRequesterState) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection.
func (o VpcPeeringConnectionRequesterStateOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionRequesterState) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpnConnectionRouteType struct {
	DestinationCidrBlock string `pulumi:"destinationCidrBlock"`
	Source               string `pulumi:"source"`
	State                string `pulumi:"state"`
}

type VpnConnectionRouteTypeInput interface {
	pulumi.Input

	ToVpnConnectionRouteTypeOutput() VpnConnectionRouteTypeOutput
	ToVpnConnectionRouteTypeOutputWithContext(context.Context) VpnConnectionRouteTypeOutput
}

type VpnConnectionRouteTypeArgs struct {
	DestinationCidrBlock pulumi.StringInput `pulumi:"destinationCidrBlock"`
	Source               pulumi.StringInput `pulumi:"source"`
	State                pulumi.StringInput `pulumi:"state"`
}

func (VpnConnectionRouteTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionRouteType)(nil)).Elem()
}

func (i VpnConnectionRouteTypeArgs) ToVpnConnectionRouteTypeOutput() VpnConnectionRouteTypeOutput {
	return i.ToVpnConnectionRouteTypeOutputWithContext(context.Background())
}

func (i VpnConnectionRouteTypeArgs) ToVpnConnectionRouteTypeOutputWithContext(ctx context.Context) VpnConnectionRouteTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionRouteTypeOutput)
}

type VpnConnectionRouteTypeArrayInput interface {
	pulumi.Input

	ToVpnConnectionRouteTypeArrayOutput() VpnConnectionRouteTypeArrayOutput
	ToVpnConnectionRouteTypeArrayOutputWithContext(context.Context) VpnConnectionRouteTypeArrayOutput
}

type VpnConnectionRouteTypeArray []VpnConnectionRouteTypeInput

func (VpnConnectionRouteTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionRouteType)(nil)).Elem()
}

func (i VpnConnectionRouteTypeArray) ToVpnConnectionRouteTypeArrayOutput() VpnConnectionRouteTypeArrayOutput {
	return i.ToVpnConnectionRouteTypeArrayOutputWithContext(context.Background())
}

func (i VpnConnectionRouteTypeArray) ToVpnConnectionRouteTypeArrayOutputWithContext(ctx context.Context) VpnConnectionRouteTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionRouteTypeArrayOutput)
}

type VpnConnectionRouteTypeOutput struct{ *pulumi.OutputState }

func (VpnConnectionRouteTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionRouteType)(nil)).Elem()
}

func (o VpnConnectionRouteTypeOutput) ToVpnConnectionRouteTypeOutput() VpnConnectionRouteTypeOutput {
	return o
}

func (o VpnConnectionRouteTypeOutput) ToVpnConnectionRouteTypeOutputWithContext(ctx context.Context) VpnConnectionRouteTypeOutput {
	return o
}

func (o VpnConnectionRouteTypeOutput) DestinationCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v VpnConnectionRouteType) string { return v.DestinationCidrBlock }).(pulumi.StringOutput)
}

func (o VpnConnectionRouteTypeOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v VpnConnectionRouteType) string { return v.Source }).(pulumi.StringOutput)
}

func (o VpnConnectionRouteTypeOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v VpnConnectionRouteType) string { return v.State }).(pulumi.StringOutput)
}

type VpnConnectionRouteTypeArrayOutput struct{ *pulumi.OutputState }

func (VpnConnectionRouteTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionRouteType)(nil)).Elem()
}

func (o VpnConnectionRouteTypeArrayOutput) ToVpnConnectionRouteTypeArrayOutput() VpnConnectionRouteTypeArrayOutput {
	return o
}

func (o VpnConnectionRouteTypeArrayOutput) ToVpnConnectionRouteTypeArrayOutputWithContext(ctx context.Context) VpnConnectionRouteTypeArrayOutput {
	return o
}

func (o VpnConnectionRouteTypeArrayOutput) Index(i pulumi.IntInput) VpnConnectionRouteTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnConnectionRouteType {
		return vs[0].([]VpnConnectionRouteType)[vs[1].(int)]
	}).(VpnConnectionRouteTypeOutput)
}

type VpnConnectionRouteStateType struct {
	DestinationCidrBlock *string `pulumi:"destinationCidrBlock"`
	Source               *string `pulumi:"source"`
	State                *string `pulumi:"state"`
}

type VpnConnectionRouteStateTypeInput interface {
	pulumi.Input

	ToVpnConnectionRouteStateTypeOutput() VpnConnectionRouteStateTypeOutput
	ToVpnConnectionRouteStateTypeOutputWithContext(context.Context) VpnConnectionRouteStateTypeOutput
}

type VpnConnectionRouteStateTypeArgs struct {
	DestinationCidrBlock pulumi.StringPtrInput `pulumi:"destinationCidrBlock"`
	Source               pulumi.StringPtrInput `pulumi:"source"`
	State                pulumi.StringPtrInput `pulumi:"state"`
}

func (VpnConnectionRouteStateTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionRouteStateType)(nil)).Elem()
}

func (i VpnConnectionRouteStateTypeArgs) ToVpnConnectionRouteStateTypeOutput() VpnConnectionRouteStateTypeOutput {
	return i.ToVpnConnectionRouteStateTypeOutputWithContext(context.Background())
}

func (i VpnConnectionRouteStateTypeArgs) ToVpnConnectionRouteStateTypeOutputWithContext(ctx context.Context) VpnConnectionRouteStateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionRouteStateTypeOutput)
}

type VpnConnectionRouteStateTypeArrayInput interface {
	pulumi.Input

	ToVpnConnectionRouteStateTypeArrayOutput() VpnConnectionRouteStateTypeArrayOutput
	ToVpnConnectionRouteStateTypeArrayOutputWithContext(context.Context) VpnConnectionRouteStateTypeArrayOutput
}

type VpnConnectionRouteStateTypeArray []VpnConnectionRouteStateTypeInput

func (VpnConnectionRouteStateTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionRouteStateType)(nil)).Elem()
}

func (i VpnConnectionRouteStateTypeArray) ToVpnConnectionRouteStateTypeArrayOutput() VpnConnectionRouteStateTypeArrayOutput {
	return i.ToVpnConnectionRouteStateTypeArrayOutputWithContext(context.Background())
}

func (i VpnConnectionRouteStateTypeArray) ToVpnConnectionRouteStateTypeArrayOutputWithContext(ctx context.Context) VpnConnectionRouteStateTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionRouteStateTypeArrayOutput)
}

type VpnConnectionRouteStateTypeOutput struct{ *pulumi.OutputState }

func (VpnConnectionRouteStateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionRouteStateType)(nil)).Elem()
}

func (o VpnConnectionRouteStateTypeOutput) ToVpnConnectionRouteStateTypeOutput() VpnConnectionRouteStateTypeOutput {
	return o
}

func (o VpnConnectionRouteStateTypeOutput) ToVpnConnectionRouteStateTypeOutputWithContext(ctx context.Context) VpnConnectionRouteStateTypeOutput {
	return o
}

func (o VpnConnectionRouteStateTypeOutput) DestinationCidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionRouteStateType) *string { return v.DestinationCidrBlock }).(pulumi.StringPtrOutput)
}

func (o VpnConnectionRouteStateTypeOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionRouteStateType) *string { return v.Source }).(pulumi.StringPtrOutput)
}

func (o VpnConnectionRouteStateTypeOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionRouteStateType) *string { return v.State }).(pulumi.StringPtrOutput)
}

type VpnConnectionRouteStateTypeArrayOutput struct{ *pulumi.OutputState }

func (VpnConnectionRouteStateTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionRouteStateType)(nil)).Elem()
}

func (o VpnConnectionRouteStateTypeArrayOutput) ToVpnConnectionRouteStateTypeArrayOutput() VpnConnectionRouteStateTypeArrayOutput {
	return o
}

func (o VpnConnectionRouteStateTypeArrayOutput) ToVpnConnectionRouteStateTypeArrayOutputWithContext(ctx context.Context) VpnConnectionRouteStateTypeArrayOutput {
	return o
}

func (o VpnConnectionRouteStateTypeArrayOutput) Index(i pulumi.IntInput) VpnConnectionRouteStateTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnConnectionRouteStateType {
		return vs[0].([]VpnConnectionRouteStateType)[vs[1].(int)]
	}).(VpnConnectionRouteStateTypeOutput)
}

type VpnConnectionVgwTelemetry struct {
	AcceptedRouteCount int    `pulumi:"acceptedRouteCount"`
	LastStatusChange   string `pulumi:"lastStatusChange"`
	OutsideIpAddress   string `pulumi:"outsideIpAddress"`
	Status             string `pulumi:"status"`
	StatusMessage      string `pulumi:"statusMessage"`
}

type VpnConnectionVgwTelemetryInput interface {
	pulumi.Input

	ToVpnConnectionVgwTelemetryOutput() VpnConnectionVgwTelemetryOutput
	ToVpnConnectionVgwTelemetryOutputWithContext(context.Context) VpnConnectionVgwTelemetryOutput
}

type VpnConnectionVgwTelemetryArgs struct {
	AcceptedRouteCount pulumi.IntInput    `pulumi:"acceptedRouteCount"`
	LastStatusChange   pulumi.StringInput `pulumi:"lastStatusChange"`
	OutsideIpAddress   pulumi.StringInput `pulumi:"outsideIpAddress"`
	Status             pulumi.StringInput `pulumi:"status"`
	StatusMessage      pulumi.StringInput `pulumi:"statusMessage"`
}

func (VpnConnectionVgwTelemetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionVgwTelemetry)(nil)).Elem()
}

func (i VpnConnectionVgwTelemetryArgs) ToVpnConnectionVgwTelemetryOutput() VpnConnectionVgwTelemetryOutput {
	return i.ToVpnConnectionVgwTelemetryOutputWithContext(context.Background())
}

func (i VpnConnectionVgwTelemetryArgs) ToVpnConnectionVgwTelemetryOutputWithContext(ctx context.Context) VpnConnectionVgwTelemetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionVgwTelemetryOutput)
}

type VpnConnectionVgwTelemetryArrayInput interface {
	pulumi.Input

	ToVpnConnectionVgwTelemetryArrayOutput() VpnConnectionVgwTelemetryArrayOutput
	ToVpnConnectionVgwTelemetryArrayOutputWithContext(context.Context) VpnConnectionVgwTelemetryArrayOutput
}

type VpnConnectionVgwTelemetryArray []VpnConnectionVgwTelemetryInput

func (VpnConnectionVgwTelemetryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionVgwTelemetry)(nil)).Elem()
}

func (i VpnConnectionVgwTelemetryArray) ToVpnConnectionVgwTelemetryArrayOutput() VpnConnectionVgwTelemetryArrayOutput {
	return i.ToVpnConnectionVgwTelemetryArrayOutputWithContext(context.Background())
}

func (i VpnConnectionVgwTelemetryArray) ToVpnConnectionVgwTelemetryArrayOutputWithContext(ctx context.Context) VpnConnectionVgwTelemetryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionVgwTelemetryArrayOutput)
}

type VpnConnectionVgwTelemetryOutput struct{ *pulumi.OutputState }

func (VpnConnectionVgwTelemetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionVgwTelemetry)(nil)).Elem()
}

func (o VpnConnectionVgwTelemetryOutput) ToVpnConnectionVgwTelemetryOutput() VpnConnectionVgwTelemetryOutput {
	return o
}

func (o VpnConnectionVgwTelemetryOutput) ToVpnConnectionVgwTelemetryOutputWithContext(ctx context.Context) VpnConnectionVgwTelemetryOutput {
	return o
}

func (o VpnConnectionVgwTelemetryOutput) AcceptedRouteCount() pulumi.IntOutput {
	return o.ApplyT(func(v VpnConnectionVgwTelemetry) int { return v.AcceptedRouteCount }).(pulumi.IntOutput)
}

func (o VpnConnectionVgwTelemetryOutput) LastStatusChange() pulumi.StringOutput {
	return o.ApplyT(func(v VpnConnectionVgwTelemetry) string { return v.LastStatusChange }).(pulumi.StringOutput)
}

func (o VpnConnectionVgwTelemetryOutput) OutsideIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v VpnConnectionVgwTelemetry) string { return v.OutsideIpAddress }).(pulumi.StringOutput)
}

func (o VpnConnectionVgwTelemetryOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v VpnConnectionVgwTelemetry) string { return v.Status }).(pulumi.StringOutput)
}

func (o VpnConnectionVgwTelemetryOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v VpnConnectionVgwTelemetry) string { return v.StatusMessage }).(pulumi.StringOutput)
}

type VpnConnectionVgwTelemetryArrayOutput struct{ *pulumi.OutputState }

func (VpnConnectionVgwTelemetryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionVgwTelemetry)(nil)).Elem()
}

func (o VpnConnectionVgwTelemetryArrayOutput) ToVpnConnectionVgwTelemetryArrayOutput() VpnConnectionVgwTelemetryArrayOutput {
	return o
}

func (o VpnConnectionVgwTelemetryArrayOutput) ToVpnConnectionVgwTelemetryArrayOutputWithContext(ctx context.Context) VpnConnectionVgwTelemetryArrayOutput {
	return o
}

func (o VpnConnectionVgwTelemetryArrayOutput) Index(i pulumi.IntInput) VpnConnectionVgwTelemetryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnConnectionVgwTelemetry {
		return vs[0].([]VpnConnectionVgwTelemetry)[vs[1].(int)]
	}).(VpnConnectionVgwTelemetryOutput)
}

type VpnConnectionVgwTelemetryState struct {
	AcceptedRouteCount *int    `pulumi:"acceptedRouteCount"`
	LastStatusChange   *string `pulumi:"lastStatusChange"`
	OutsideIpAddress   *string `pulumi:"outsideIpAddress"`
	Status             *string `pulumi:"status"`
	StatusMessage      *string `pulumi:"statusMessage"`
}

type VpnConnectionVgwTelemetryStateInput interface {
	pulumi.Input

	ToVpnConnectionVgwTelemetryStateOutput() VpnConnectionVgwTelemetryStateOutput
	ToVpnConnectionVgwTelemetryStateOutputWithContext(context.Context) VpnConnectionVgwTelemetryStateOutput
}

type VpnConnectionVgwTelemetryStateArgs struct {
	AcceptedRouteCount pulumi.IntPtrInput    `pulumi:"acceptedRouteCount"`
	LastStatusChange   pulumi.StringPtrInput `pulumi:"lastStatusChange"`
	OutsideIpAddress   pulumi.StringPtrInput `pulumi:"outsideIpAddress"`
	Status             pulumi.StringPtrInput `pulumi:"status"`
	StatusMessage      pulumi.StringPtrInput `pulumi:"statusMessage"`
}

func (VpnConnectionVgwTelemetryStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionVgwTelemetryState)(nil)).Elem()
}

func (i VpnConnectionVgwTelemetryStateArgs) ToVpnConnectionVgwTelemetryStateOutput() VpnConnectionVgwTelemetryStateOutput {
	return i.ToVpnConnectionVgwTelemetryStateOutputWithContext(context.Background())
}

func (i VpnConnectionVgwTelemetryStateArgs) ToVpnConnectionVgwTelemetryStateOutputWithContext(ctx context.Context) VpnConnectionVgwTelemetryStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionVgwTelemetryStateOutput)
}

type VpnConnectionVgwTelemetryStateArrayInput interface {
	pulumi.Input

	ToVpnConnectionVgwTelemetryStateArrayOutput() VpnConnectionVgwTelemetryStateArrayOutput
	ToVpnConnectionVgwTelemetryStateArrayOutputWithContext(context.Context) VpnConnectionVgwTelemetryStateArrayOutput
}

type VpnConnectionVgwTelemetryStateArray []VpnConnectionVgwTelemetryStateInput

func (VpnConnectionVgwTelemetryStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionVgwTelemetryState)(nil)).Elem()
}

func (i VpnConnectionVgwTelemetryStateArray) ToVpnConnectionVgwTelemetryStateArrayOutput() VpnConnectionVgwTelemetryStateArrayOutput {
	return i.ToVpnConnectionVgwTelemetryStateArrayOutputWithContext(context.Background())
}

func (i VpnConnectionVgwTelemetryStateArray) ToVpnConnectionVgwTelemetryStateArrayOutputWithContext(ctx context.Context) VpnConnectionVgwTelemetryStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionVgwTelemetryStateArrayOutput)
}

type VpnConnectionVgwTelemetryStateOutput struct{ *pulumi.OutputState }

func (VpnConnectionVgwTelemetryStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionVgwTelemetryState)(nil)).Elem()
}

func (o VpnConnectionVgwTelemetryStateOutput) ToVpnConnectionVgwTelemetryStateOutput() VpnConnectionVgwTelemetryStateOutput {
	return o
}

func (o VpnConnectionVgwTelemetryStateOutput) ToVpnConnectionVgwTelemetryStateOutputWithContext(ctx context.Context) VpnConnectionVgwTelemetryStateOutput {
	return o
}

func (o VpnConnectionVgwTelemetryStateOutput) AcceptedRouteCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionVgwTelemetryState) *int { return v.AcceptedRouteCount }).(pulumi.IntPtrOutput)
}

func (o VpnConnectionVgwTelemetryStateOutput) LastStatusChange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionVgwTelemetryState) *string { return v.LastStatusChange }).(pulumi.StringPtrOutput)
}

func (o VpnConnectionVgwTelemetryStateOutput) OutsideIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionVgwTelemetryState) *string { return v.OutsideIpAddress }).(pulumi.StringPtrOutput)
}

func (o VpnConnectionVgwTelemetryStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionVgwTelemetryState) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o VpnConnectionVgwTelemetryStateOutput) StatusMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionVgwTelemetryState) *string { return v.StatusMessage }).(pulumi.StringPtrOutput)
}

type VpnConnectionVgwTelemetryStateArrayOutput struct{ *pulumi.OutputState }

func (VpnConnectionVgwTelemetryStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionVgwTelemetryState)(nil)).Elem()
}

func (o VpnConnectionVgwTelemetryStateArrayOutput) ToVpnConnectionVgwTelemetryStateArrayOutput() VpnConnectionVgwTelemetryStateArrayOutput {
	return o
}

func (o VpnConnectionVgwTelemetryStateArrayOutput) ToVpnConnectionVgwTelemetryStateArrayOutputWithContext(ctx context.Context) VpnConnectionVgwTelemetryStateArrayOutput {
	return o
}

func (o VpnConnectionVgwTelemetryStateArrayOutput) Index(i pulumi.IntInput) VpnConnectionVgwTelemetryStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnConnectionVgwTelemetryState {
		return vs[0].([]VpnConnectionVgwTelemetryState)[vs[1].(int)]
	}).(VpnConnectionVgwTelemetryStateOutput)
}

type GetCustomerGatewayFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetCustomerGatewayFilterInput interface {
	pulumi.Input

	ToGetCustomerGatewayFilterOutput() GetCustomerGatewayFilterOutput
	ToGetCustomerGatewayFilterOutputWithContext(context.Context) GetCustomerGatewayFilterOutput
}

type GetCustomerGatewayFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetCustomerGatewayFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomerGatewayFilter)(nil)).Elem()
}

func (i GetCustomerGatewayFilterArgs) ToGetCustomerGatewayFilterOutput() GetCustomerGatewayFilterOutput {
	return i.ToGetCustomerGatewayFilterOutputWithContext(context.Background())
}

func (i GetCustomerGatewayFilterArgs) ToGetCustomerGatewayFilterOutputWithContext(ctx context.Context) GetCustomerGatewayFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomerGatewayFilterOutput)
}

type GetCustomerGatewayFilterArrayInput interface {
	pulumi.Input

	ToGetCustomerGatewayFilterArrayOutput() GetCustomerGatewayFilterArrayOutput
	ToGetCustomerGatewayFilterArrayOutputWithContext(context.Context) GetCustomerGatewayFilterArrayOutput
}

type GetCustomerGatewayFilterArray []GetCustomerGatewayFilterInput

func (GetCustomerGatewayFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomerGatewayFilter)(nil)).Elem()
}

func (i GetCustomerGatewayFilterArray) ToGetCustomerGatewayFilterArrayOutput() GetCustomerGatewayFilterArrayOutput {
	return i.ToGetCustomerGatewayFilterArrayOutputWithContext(context.Background())
}

func (i GetCustomerGatewayFilterArray) ToGetCustomerGatewayFilterArrayOutputWithContext(ctx context.Context) GetCustomerGatewayFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomerGatewayFilterArrayOutput)
}

type GetCustomerGatewayFilterOutput struct{ *pulumi.OutputState }

func (GetCustomerGatewayFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomerGatewayFilter)(nil)).Elem()
}

func (o GetCustomerGatewayFilterOutput) ToGetCustomerGatewayFilterOutput() GetCustomerGatewayFilterOutput {
	return o
}

func (o GetCustomerGatewayFilterOutput) ToGetCustomerGatewayFilterOutputWithContext(ctx context.Context) GetCustomerGatewayFilterOutput {
	return o
}

func (o GetCustomerGatewayFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomerGatewayFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetCustomerGatewayFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCustomerGatewayFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetCustomerGatewayFilterArrayOutput struct{ *pulumi.OutputState }

func (GetCustomerGatewayFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomerGatewayFilter)(nil)).Elem()
}

func (o GetCustomerGatewayFilterArrayOutput) ToGetCustomerGatewayFilterArrayOutput() GetCustomerGatewayFilterArrayOutput {
	return o
}

func (o GetCustomerGatewayFilterArrayOutput) ToGetCustomerGatewayFilterArrayOutputWithContext(ctx context.Context) GetCustomerGatewayFilterArrayOutput {
	return o
}

func (o GetCustomerGatewayFilterArrayOutput) Index(i pulumi.IntInput) GetCustomerGatewayFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomerGatewayFilter {
		return vs[0].([]GetCustomerGatewayFilter)[vs[1].(int)]
	}).(GetCustomerGatewayFilterOutput)
}

type GetCustomerGatewayFilterArgs struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetCustomerGatewayFilterArgsInput interface {
	pulumi.Input

	ToGetCustomerGatewayFilterArgsOutput() GetCustomerGatewayFilterArgsOutput
	ToGetCustomerGatewayFilterArgsOutputWithContext(context.Context) GetCustomerGatewayFilterArgsOutput
}

type GetCustomerGatewayFilterArgsArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetCustomerGatewayFilterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomerGatewayFilterArgs)(nil)).Elem()
}

func (i GetCustomerGatewayFilterArgsArgs) ToGetCustomerGatewayFilterArgsOutput() GetCustomerGatewayFilterArgsOutput {
	return i.ToGetCustomerGatewayFilterArgsOutputWithContext(context.Background())
}

func (i GetCustomerGatewayFilterArgsArgs) ToGetCustomerGatewayFilterArgsOutputWithContext(ctx context.Context) GetCustomerGatewayFilterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomerGatewayFilterArgsOutput)
}

type GetCustomerGatewayFilterArgsArrayInput interface {
	pulumi.Input

	ToGetCustomerGatewayFilterArgsArrayOutput() GetCustomerGatewayFilterArgsArrayOutput
	ToGetCustomerGatewayFilterArgsArrayOutputWithContext(context.Context) GetCustomerGatewayFilterArgsArrayOutput
}

type GetCustomerGatewayFilterArgsArray []GetCustomerGatewayFilterArgsInput

func (GetCustomerGatewayFilterArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomerGatewayFilterArgs)(nil)).Elem()
}

func (i GetCustomerGatewayFilterArgsArray) ToGetCustomerGatewayFilterArgsArrayOutput() GetCustomerGatewayFilterArgsArrayOutput {
	return i.ToGetCustomerGatewayFilterArgsArrayOutputWithContext(context.Background())
}

func (i GetCustomerGatewayFilterArgsArray) ToGetCustomerGatewayFilterArgsArrayOutputWithContext(ctx context.Context) GetCustomerGatewayFilterArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomerGatewayFilterArgsArrayOutput)
}

type GetCustomerGatewayFilterArgsOutput struct{ *pulumi.OutputState }

func (GetCustomerGatewayFilterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomerGatewayFilterArgs)(nil)).Elem()
}

func (o GetCustomerGatewayFilterArgsOutput) ToGetCustomerGatewayFilterArgsOutput() GetCustomerGatewayFilterArgsOutput {
	return o
}

func (o GetCustomerGatewayFilterArgsOutput) ToGetCustomerGatewayFilterArgsOutputWithContext(ctx context.Context) GetCustomerGatewayFilterArgsOutput {
	return o
}

func (o GetCustomerGatewayFilterArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomerGatewayFilterArgs) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetCustomerGatewayFilterArgsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCustomerGatewayFilterArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetCustomerGatewayFilterArgsArrayOutput struct{ *pulumi.OutputState }

func (GetCustomerGatewayFilterArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomerGatewayFilterArgs)(nil)).Elem()
}

func (o GetCustomerGatewayFilterArgsArrayOutput) ToGetCustomerGatewayFilterArgsArrayOutput() GetCustomerGatewayFilterArgsArrayOutput {
	return o
}

func (o GetCustomerGatewayFilterArgsArrayOutput) ToGetCustomerGatewayFilterArgsArrayOutputWithContext(ctx context.Context) GetCustomerGatewayFilterArgsArrayOutput {
	return o
}

func (o GetCustomerGatewayFilterArgsArrayOutput) Index(i pulumi.IntInput) GetCustomerGatewayFilterArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomerGatewayFilterArgs {
		return vs[0].([]GetCustomerGatewayFilterArgs)[vs[1].(int)]
	}).(GetCustomerGatewayFilterArgsOutput)
}

type GetInstanceCreditSpecification struct {
	CpuCredits string `pulumi:"cpuCredits"`
}

type GetInstanceCreditSpecificationInput interface {
	pulumi.Input

	ToGetInstanceCreditSpecificationOutput() GetInstanceCreditSpecificationOutput
	ToGetInstanceCreditSpecificationOutputWithContext(context.Context) GetInstanceCreditSpecificationOutput
}

type GetInstanceCreditSpecificationArgs struct {
	CpuCredits pulumi.StringInput `pulumi:"cpuCredits"`
}

func (GetInstanceCreditSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceCreditSpecification)(nil)).Elem()
}

func (i GetInstanceCreditSpecificationArgs) ToGetInstanceCreditSpecificationOutput() GetInstanceCreditSpecificationOutput {
	return i.ToGetInstanceCreditSpecificationOutputWithContext(context.Background())
}

func (i GetInstanceCreditSpecificationArgs) ToGetInstanceCreditSpecificationOutputWithContext(ctx context.Context) GetInstanceCreditSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceCreditSpecificationOutput)
}

type GetInstanceCreditSpecificationArrayInput interface {
	pulumi.Input

	ToGetInstanceCreditSpecificationArrayOutput() GetInstanceCreditSpecificationArrayOutput
	ToGetInstanceCreditSpecificationArrayOutputWithContext(context.Context) GetInstanceCreditSpecificationArrayOutput
}

type GetInstanceCreditSpecificationArray []GetInstanceCreditSpecificationInput

func (GetInstanceCreditSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceCreditSpecification)(nil)).Elem()
}

func (i GetInstanceCreditSpecificationArray) ToGetInstanceCreditSpecificationArrayOutput() GetInstanceCreditSpecificationArrayOutput {
	return i.ToGetInstanceCreditSpecificationArrayOutputWithContext(context.Background())
}

func (i GetInstanceCreditSpecificationArray) ToGetInstanceCreditSpecificationArrayOutputWithContext(ctx context.Context) GetInstanceCreditSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceCreditSpecificationArrayOutput)
}

type GetInstanceCreditSpecificationOutput struct{ *pulumi.OutputState }

func (GetInstanceCreditSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceCreditSpecification)(nil)).Elem()
}

func (o GetInstanceCreditSpecificationOutput) ToGetInstanceCreditSpecificationOutput() GetInstanceCreditSpecificationOutput {
	return o
}

func (o GetInstanceCreditSpecificationOutput) ToGetInstanceCreditSpecificationOutputWithContext(ctx context.Context) GetInstanceCreditSpecificationOutput {
	return o
}

func (o GetInstanceCreditSpecificationOutput) CpuCredits() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceCreditSpecification) string { return v.CpuCredits }).(pulumi.StringOutput)
}

type GetInstanceCreditSpecificationArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceCreditSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceCreditSpecification)(nil)).Elem()
}

func (o GetInstanceCreditSpecificationArrayOutput) ToGetInstanceCreditSpecificationArrayOutput() GetInstanceCreditSpecificationArrayOutput {
	return o
}

func (o GetInstanceCreditSpecificationArrayOutput) ToGetInstanceCreditSpecificationArrayOutputWithContext(ctx context.Context) GetInstanceCreditSpecificationArrayOutput {
	return o
}

func (o GetInstanceCreditSpecificationArrayOutput) Index(i pulumi.IntInput) GetInstanceCreditSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceCreditSpecification {
		return vs[0].([]GetInstanceCreditSpecification)[vs[1].(int)]
	}).(GetInstanceCreditSpecificationOutput)
}

type GetInstanceEbsBlockDevice struct {
	// If the root block device will be deleted on termination.
	DeleteOnTermination bool `pulumi:"deleteOnTermination"`
	// The physical name of the device.
	DeviceName string `pulumi:"deviceName"`
	// If the EBS volume is encrypted.
	Encrypted bool `pulumi:"encrypted"`
	// `0` If the volume is not a provisioned IOPS image, otherwise the supported IOPS count.
	Iops     int    `pulumi:"iops"`
	KmsKeyId string `pulumi:"kmsKeyId"`
	// The ID of the snapshot.
	SnapshotId string `pulumi:"snapshotId"`
	VolumeId   string `pulumi:"volumeId"`
	// The size of the volume, in GiB.
	VolumeSize int `pulumi:"volumeSize"`
	// The type of the volume.
	VolumeType string `pulumi:"volumeType"`
}

type GetInstanceEbsBlockDeviceInput interface {
	pulumi.Input

	ToGetInstanceEbsBlockDeviceOutput() GetInstanceEbsBlockDeviceOutput
	ToGetInstanceEbsBlockDeviceOutputWithContext(context.Context) GetInstanceEbsBlockDeviceOutput
}

type GetInstanceEbsBlockDeviceArgs struct {
	// If the root block device will be deleted on termination.
	DeleteOnTermination pulumi.BoolInput `pulumi:"deleteOnTermination"`
	// The physical name of the device.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// If the EBS volume is encrypted.
	Encrypted pulumi.BoolInput `pulumi:"encrypted"`
	// `0` If the volume is not a provisioned IOPS image, otherwise the supported IOPS count.
	Iops     pulumi.IntInput    `pulumi:"iops"`
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
	// The ID of the snapshot.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	VolumeId   pulumi.StringInput `pulumi:"volumeId"`
	// The size of the volume, in GiB.
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
	// The type of the volume.
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (GetInstanceEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEbsBlockDevice)(nil)).Elem()
}

func (i GetInstanceEbsBlockDeviceArgs) ToGetInstanceEbsBlockDeviceOutput() GetInstanceEbsBlockDeviceOutput {
	return i.ToGetInstanceEbsBlockDeviceOutputWithContext(context.Background())
}

func (i GetInstanceEbsBlockDeviceArgs) ToGetInstanceEbsBlockDeviceOutputWithContext(ctx context.Context) GetInstanceEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEbsBlockDeviceOutput)
}

type GetInstanceEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToGetInstanceEbsBlockDeviceArrayOutput() GetInstanceEbsBlockDeviceArrayOutput
	ToGetInstanceEbsBlockDeviceArrayOutputWithContext(context.Context) GetInstanceEbsBlockDeviceArrayOutput
}

type GetInstanceEbsBlockDeviceArray []GetInstanceEbsBlockDeviceInput

func (GetInstanceEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceEbsBlockDevice)(nil)).Elem()
}

func (i GetInstanceEbsBlockDeviceArray) ToGetInstanceEbsBlockDeviceArrayOutput() GetInstanceEbsBlockDeviceArrayOutput {
	return i.ToGetInstanceEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i GetInstanceEbsBlockDeviceArray) ToGetInstanceEbsBlockDeviceArrayOutputWithContext(ctx context.Context) GetInstanceEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEbsBlockDeviceArrayOutput)
}

type GetInstanceEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (GetInstanceEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEbsBlockDevice)(nil)).Elem()
}

func (o GetInstanceEbsBlockDeviceOutput) ToGetInstanceEbsBlockDeviceOutput() GetInstanceEbsBlockDeviceOutput {
	return o
}

func (o GetInstanceEbsBlockDeviceOutput) ToGetInstanceEbsBlockDeviceOutputWithContext(ctx context.Context) GetInstanceEbsBlockDeviceOutput {
	return o
}

// If the root block device will be deleted on termination.
func (o GetInstanceEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceEbsBlockDevice) bool { return v.DeleteOnTermination }).(pulumi.BoolOutput)
}

// The physical name of the device.
func (o GetInstanceEbsBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEbsBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// If the EBS volume is encrypted.
func (o GetInstanceEbsBlockDeviceOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceEbsBlockDevice) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

// `0` If the volume is not a provisioned IOPS image, otherwise the supported IOPS count.
func (o GetInstanceEbsBlockDeviceOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceEbsBlockDevice) int { return v.Iops }).(pulumi.IntOutput)
}

func (o GetInstanceEbsBlockDeviceOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEbsBlockDevice) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

// The ID of the snapshot.
func (o GetInstanceEbsBlockDeviceOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEbsBlockDevice) string { return v.SnapshotId }).(pulumi.StringOutput)
}

func (o GetInstanceEbsBlockDeviceOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEbsBlockDevice) string { return v.VolumeId }).(pulumi.StringOutput)
}

// The size of the volume, in GiB.
func (o GetInstanceEbsBlockDeviceOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceEbsBlockDevice) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// The type of the volume.
func (o GetInstanceEbsBlockDeviceOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEbsBlockDevice) string { return v.VolumeType }).(pulumi.StringOutput)
}

type GetInstanceEbsBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceEbsBlockDevice)(nil)).Elem()
}

func (o GetInstanceEbsBlockDeviceArrayOutput) ToGetInstanceEbsBlockDeviceArrayOutput() GetInstanceEbsBlockDeviceArrayOutput {
	return o
}

func (o GetInstanceEbsBlockDeviceArrayOutput) ToGetInstanceEbsBlockDeviceArrayOutputWithContext(ctx context.Context) GetInstanceEbsBlockDeviceArrayOutput {
	return o
}

func (o GetInstanceEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) GetInstanceEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceEbsBlockDevice {
		return vs[0].([]GetInstanceEbsBlockDevice)[vs[1].(int)]
	}).(GetInstanceEbsBlockDeviceOutput)
}

type GetInstanceEphemeralBlockDevice struct {
	// The physical name of the device.
	DeviceName string `pulumi:"deviceName"`
	// Whether the specified device included in the device mapping was suppressed or not (Boolean).
	NoDevice *bool `pulumi:"noDevice"`
	// The virtual device name.
	VirtualName *string `pulumi:"virtualName"`
}

type GetInstanceEphemeralBlockDeviceInput interface {
	pulumi.Input

	ToGetInstanceEphemeralBlockDeviceOutput() GetInstanceEphemeralBlockDeviceOutput
	ToGetInstanceEphemeralBlockDeviceOutputWithContext(context.Context) GetInstanceEphemeralBlockDeviceOutput
}

type GetInstanceEphemeralBlockDeviceArgs struct {
	// The physical name of the device.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Whether the specified device included in the device mapping was suppressed or not (Boolean).
	NoDevice pulumi.BoolPtrInput `pulumi:"noDevice"`
	// The virtual device name.
	VirtualName pulumi.StringPtrInput `pulumi:"virtualName"`
}

func (GetInstanceEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEphemeralBlockDevice)(nil)).Elem()
}

func (i GetInstanceEphemeralBlockDeviceArgs) ToGetInstanceEphemeralBlockDeviceOutput() GetInstanceEphemeralBlockDeviceOutput {
	return i.ToGetInstanceEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i GetInstanceEphemeralBlockDeviceArgs) ToGetInstanceEphemeralBlockDeviceOutputWithContext(ctx context.Context) GetInstanceEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEphemeralBlockDeviceOutput)
}

type GetInstanceEphemeralBlockDeviceArrayInput interface {
	pulumi.Input

	ToGetInstanceEphemeralBlockDeviceArrayOutput() GetInstanceEphemeralBlockDeviceArrayOutput
	ToGetInstanceEphemeralBlockDeviceArrayOutputWithContext(context.Context) GetInstanceEphemeralBlockDeviceArrayOutput
}

type GetInstanceEphemeralBlockDeviceArray []GetInstanceEphemeralBlockDeviceInput

func (GetInstanceEphemeralBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceEphemeralBlockDevice)(nil)).Elem()
}

func (i GetInstanceEphemeralBlockDeviceArray) ToGetInstanceEphemeralBlockDeviceArrayOutput() GetInstanceEphemeralBlockDeviceArrayOutput {
	return i.ToGetInstanceEphemeralBlockDeviceArrayOutputWithContext(context.Background())
}

func (i GetInstanceEphemeralBlockDeviceArray) ToGetInstanceEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) GetInstanceEphemeralBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEphemeralBlockDeviceArrayOutput)
}

type GetInstanceEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (GetInstanceEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEphemeralBlockDevice)(nil)).Elem()
}

func (o GetInstanceEphemeralBlockDeviceOutput) ToGetInstanceEphemeralBlockDeviceOutput() GetInstanceEphemeralBlockDeviceOutput {
	return o
}

func (o GetInstanceEphemeralBlockDeviceOutput) ToGetInstanceEphemeralBlockDeviceOutputWithContext(ctx context.Context) GetInstanceEphemeralBlockDeviceOutput {
	return o
}

// The physical name of the device.
func (o GetInstanceEphemeralBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEphemeralBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Whether the specified device included in the device mapping was suppressed or not (Boolean).
func (o GetInstanceEphemeralBlockDeviceOutput) NoDevice() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetInstanceEphemeralBlockDevice) *bool { return v.NoDevice }).(pulumi.BoolPtrOutput)
}

// The virtual device name.
func (o GetInstanceEphemeralBlockDeviceOutput) VirtualName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceEphemeralBlockDevice) *string { return v.VirtualName }).(pulumi.StringPtrOutput)
}

type GetInstanceEphemeralBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceEphemeralBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceEphemeralBlockDevice)(nil)).Elem()
}

func (o GetInstanceEphemeralBlockDeviceArrayOutput) ToGetInstanceEphemeralBlockDeviceArrayOutput() GetInstanceEphemeralBlockDeviceArrayOutput {
	return o
}

func (o GetInstanceEphemeralBlockDeviceArrayOutput) ToGetInstanceEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) GetInstanceEphemeralBlockDeviceArrayOutput {
	return o
}

func (o GetInstanceEphemeralBlockDeviceArrayOutput) Index(i pulumi.IntInput) GetInstanceEphemeralBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceEphemeralBlockDevice {
		return vs[0].([]GetInstanceEphemeralBlockDevice)[vs[1].(int)]
	}).(GetInstanceEphemeralBlockDeviceOutput)
}

type GetInstanceFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetInstanceFilterInput interface {
	pulumi.Input

	ToGetInstanceFilterOutput() GetInstanceFilterOutput
	ToGetInstanceFilterOutputWithContext(context.Context) GetInstanceFilterOutput
}

type GetInstanceFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInstanceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceFilter)(nil)).Elem()
}

func (i GetInstanceFilterArgs) ToGetInstanceFilterOutput() GetInstanceFilterOutput {
	return i.ToGetInstanceFilterOutputWithContext(context.Background())
}

func (i GetInstanceFilterArgs) ToGetInstanceFilterOutputWithContext(ctx context.Context) GetInstanceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceFilterOutput)
}

type GetInstanceFilterArrayInput interface {
	pulumi.Input

	ToGetInstanceFilterArrayOutput() GetInstanceFilterArrayOutput
	ToGetInstanceFilterArrayOutputWithContext(context.Context) GetInstanceFilterArrayOutput
}

type GetInstanceFilterArray []GetInstanceFilterInput

func (GetInstanceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceFilter)(nil)).Elem()
}

func (i GetInstanceFilterArray) ToGetInstanceFilterArrayOutput() GetInstanceFilterArrayOutput {
	return i.ToGetInstanceFilterArrayOutputWithContext(context.Background())
}

func (i GetInstanceFilterArray) ToGetInstanceFilterArrayOutputWithContext(ctx context.Context) GetInstanceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceFilterArrayOutput)
}

type GetInstanceFilterOutput struct{ *pulumi.OutputState }

func (GetInstanceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceFilter)(nil)).Elem()
}

func (o GetInstanceFilterOutput) ToGetInstanceFilterOutput() GetInstanceFilterOutput {
	return o
}

func (o GetInstanceFilterOutput) ToGetInstanceFilterOutputWithContext(ctx context.Context) GetInstanceFilterOutput {
	return o
}

func (o GetInstanceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetInstanceFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInstanceFilterArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceFilter)(nil)).Elem()
}

func (o GetInstanceFilterArrayOutput) ToGetInstanceFilterArrayOutput() GetInstanceFilterArrayOutput {
	return o
}

func (o GetInstanceFilterArrayOutput) ToGetInstanceFilterArrayOutputWithContext(ctx context.Context) GetInstanceFilterArrayOutput {
	return o
}

func (o GetInstanceFilterArrayOutput) Index(i pulumi.IntInput) GetInstanceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceFilter {
		return vs[0].([]GetInstanceFilter)[vs[1].(int)]
	}).(GetInstanceFilterOutput)
}

type GetInstanceFilterArgs struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetInstanceFilterArgsInput interface {
	pulumi.Input

	ToGetInstanceFilterArgsOutput() GetInstanceFilterArgsOutput
	ToGetInstanceFilterArgsOutputWithContext(context.Context) GetInstanceFilterArgsOutput
}

type GetInstanceFilterArgsArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInstanceFilterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceFilterArgs)(nil)).Elem()
}

func (i GetInstanceFilterArgsArgs) ToGetInstanceFilterArgsOutput() GetInstanceFilterArgsOutput {
	return i.ToGetInstanceFilterArgsOutputWithContext(context.Background())
}

func (i GetInstanceFilterArgsArgs) ToGetInstanceFilterArgsOutputWithContext(ctx context.Context) GetInstanceFilterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceFilterArgsOutput)
}

type GetInstanceFilterArgsArrayInput interface {
	pulumi.Input

	ToGetInstanceFilterArgsArrayOutput() GetInstanceFilterArgsArrayOutput
	ToGetInstanceFilterArgsArrayOutputWithContext(context.Context) GetInstanceFilterArgsArrayOutput
}

type GetInstanceFilterArgsArray []GetInstanceFilterArgsInput

func (GetInstanceFilterArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceFilterArgs)(nil)).Elem()
}

func (i GetInstanceFilterArgsArray) ToGetInstanceFilterArgsArrayOutput() GetInstanceFilterArgsArrayOutput {
	return i.ToGetInstanceFilterArgsArrayOutputWithContext(context.Background())
}

func (i GetInstanceFilterArgsArray) ToGetInstanceFilterArgsArrayOutputWithContext(ctx context.Context) GetInstanceFilterArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceFilterArgsArrayOutput)
}

type GetInstanceFilterArgsOutput struct{ *pulumi.OutputState }

func (GetInstanceFilterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceFilterArgs)(nil)).Elem()
}

func (o GetInstanceFilterArgsOutput) ToGetInstanceFilterArgsOutput() GetInstanceFilterArgsOutput {
	return o
}

func (o GetInstanceFilterArgsOutput) ToGetInstanceFilterArgsOutputWithContext(ctx context.Context) GetInstanceFilterArgsOutput {
	return o
}

func (o GetInstanceFilterArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceFilterArgs) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetInstanceFilterArgsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceFilterArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInstanceFilterArgsArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceFilterArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceFilterArgs)(nil)).Elem()
}

func (o GetInstanceFilterArgsArrayOutput) ToGetInstanceFilterArgsArrayOutput() GetInstanceFilterArgsArrayOutput {
	return o
}

func (o GetInstanceFilterArgsArrayOutput) ToGetInstanceFilterArgsArrayOutputWithContext(ctx context.Context) GetInstanceFilterArgsArrayOutput {
	return o
}

func (o GetInstanceFilterArgsArrayOutput) Index(i pulumi.IntInput) GetInstanceFilterArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceFilterArgs {
		return vs[0].([]GetInstanceFilterArgs)[vs[1].(int)]
	}).(GetInstanceFilterArgsOutput)
}

type GetInstanceMetadataOption struct {
	// The state of the metadata service: `enabled`, `disabled`.
	HttpEndpoint string `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests.
	HttpPutResponseHopLimit int `pulumi:"httpPutResponseHopLimit"`
	// If session tokens are required: `optional`, `required`.
	HttpTokens string `pulumi:"httpTokens"`
}

type GetInstanceMetadataOptionInput interface {
	pulumi.Input

	ToGetInstanceMetadataOptionOutput() GetInstanceMetadataOptionOutput
	ToGetInstanceMetadataOptionOutputWithContext(context.Context) GetInstanceMetadataOptionOutput
}

type GetInstanceMetadataOptionArgs struct {
	// The state of the metadata service: `enabled`, `disabled`.
	HttpEndpoint pulumi.StringInput `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests.
	HttpPutResponseHopLimit pulumi.IntInput `pulumi:"httpPutResponseHopLimit"`
	// If session tokens are required: `optional`, `required`.
	HttpTokens pulumi.StringInput `pulumi:"httpTokens"`
}

func (GetInstanceMetadataOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMetadataOption)(nil)).Elem()
}

func (i GetInstanceMetadataOptionArgs) ToGetInstanceMetadataOptionOutput() GetInstanceMetadataOptionOutput {
	return i.ToGetInstanceMetadataOptionOutputWithContext(context.Background())
}

func (i GetInstanceMetadataOptionArgs) ToGetInstanceMetadataOptionOutputWithContext(ctx context.Context) GetInstanceMetadataOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMetadataOptionOutput)
}

type GetInstanceMetadataOptionArrayInput interface {
	pulumi.Input

	ToGetInstanceMetadataOptionArrayOutput() GetInstanceMetadataOptionArrayOutput
	ToGetInstanceMetadataOptionArrayOutputWithContext(context.Context) GetInstanceMetadataOptionArrayOutput
}

type GetInstanceMetadataOptionArray []GetInstanceMetadataOptionInput

func (GetInstanceMetadataOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceMetadataOption)(nil)).Elem()
}

func (i GetInstanceMetadataOptionArray) ToGetInstanceMetadataOptionArrayOutput() GetInstanceMetadataOptionArrayOutput {
	return i.ToGetInstanceMetadataOptionArrayOutputWithContext(context.Background())
}

func (i GetInstanceMetadataOptionArray) ToGetInstanceMetadataOptionArrayOutputWithContext(ctx context.Context) GetInstanceMetadataOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMetadataOptionArrayOutput)
}

type GetInstanceMetadataOptionOutput struct{ *pulumi.OutputState }

func (GetInstanceMetadataOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMetadataOption)(nil)).Elem()
}

func (o GetInstanceMetadataOptionOutput) ToGetInstanceMetadataOptionOutput() GetInstanceMetadataOptionOutput {
	return o
}

func (o GetInstanceMetadataOptionOutput) ToGetInstanceMetadataOptionOutputWithContext(ctx context.Context) GetInstanceMetadataOptionOutput {
	return o
}

// The state of the metadata service: `enabled`, `disabled`.
func (o GetInstanceMetadataOptionOutput) HttpEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMetadataOption) string { return v.HttpEndpoint }).(pulumi.StringOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests.
func (o GetInstanceMetadataOptionOutput) HttpPutResponseHopLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceMetadataOption) int { return v.HttpPutResponseHopLimit }).(pulumi.IntOutput)
}

// If session tokens are required: `optional`, `required`.
func (o GetInstanceMetadataOptionOutput) HttpTokens() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMetadataOption) string { return v.HttpTokens }).(pulumi.StringOutput)
}

type GetInstanceMetadataOptionArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceMetadataOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceMetadataOption)(nil)).Elem()
}

func (o GetInstanceMetadataOptionArrayOutput) ToGetInstanceMetadataOptionArrayOutput() GetInstanceMetadataOptionArrayOutput {
	return o
}

func (o GetInstanceMetadataOptionArrayOutput) ToGetInstanceMetadataOptionArrayOutputWithContext(ctx context.Context) GetInstanceMetadataOptionArrayOutput {
	return o
}

func (o GetInstanceMetadataOptionArrayOutput) Index(i pulumi.IntInput) GetInstanceMetadataOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceMetadataOption {
		return vs[0].([]GetInstanceMetadataOption)[vs[1].(int)]
	}).(GetInstanceMetadataOptionOutput)
}

type GetInstanceRootBlockDevice struct {
	// If the root block device will be deleted on termination.
	DeleteOnTermination bool `pulumi:"deleteOnTermination"`
	// If the EBS volume is encrypted.
	Encrypted bool `pulumi:"encrypted"`
	// `0` If the volume is not a provisioned IOPS image, otherwise the supported IOPS count.
	Iops     int    `pulumi:"iops"`
	KmsKeyId string `pulumi:"kmsKeyId"`
	VolumeId string `pulumi:"volumeId"`
	// The size of the volume, in GiB.
	VolumeSize int `pulumi:"volumeSize"`
	// The type of the volume.
	VolumeType string `pulumi:"volumeType"`
}

type GetInstanceRootBlockDeviceInput interface {
	pulumi.Input

	ToGetInstanceRootBlockDeviceOutput() GetInstanceRootBlockDeviceOutput
	ToGetInstanceRootBlockDeviceOutputWithContext(context.Context) GetInstanceRootBlockDeviceOutput
}

type GetInstanceRootBlockDeviceArgs struct {
	// If the root block device will be deleted on termination.
	DeleteOnTermination pulumi.BoolInput `pulumi:"deleteOnTermination"`
	// If the EBS volume is encrypted.
	Encrypted pulumi.BoolInput `pulumi:"encrypted"`
	// `0` If the volume is not a provisioned IOPS image, otherwise the supported IOPS count.
	Iops     pulumi.IntInput    `pulumi:"iops"`
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
	VolumeId pulumi.StringInput `pulumi:"volumeId"`
	// The size of the volume, in GiB.
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
	// The type of the volume.
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (GetInstanceRootBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceRootBlockDevice)(nil)).Elem()
}

func (i GetInstanceRootBlockDeviceArgs) ToGetInstanceRootBlockDeviceOutput() GetInstanceRootBlockDeviceOutput {
	return i.ToGetInstanceRootBlockDeviceOutputWithContext(context.Background())
}

func (i GetInstanceRootBlockDeviceArgs) ToGetInstanceRootBlockDeviceOutputWithContext(ctx context.Context) GetInstanceRootBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceRootBlockDeviceOutput)
}

type GetInstanceRootBlockDeviceArrayInput interface {
	pulumi.Input

	ToGetInstanceRootBlockDeviceArrayOutput() GetInstanceRootBlockDeviceArrayOutput
	ToGetInstanceRootBlockDeviceArrayOutputWithContext(context.Context) GetInstanceRootBlockDeviceArrayOutput
}

type GetInstanceRootBlockDeviceArray []GetInstanceRootBlockDeviceInput

func (GetInstanceRootBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceRootBlockDevice)(nil)).Elem()
}

func (i GetInstanceRootBlockDeviceArray) ToGetInstanceRootBlockDeviceArrayOutput() GetInstanceRootBlockDeviceArrayOutput {
	return i.ToGetInstanceRootBlockDeviceArrayOutputWithContext(context.Background())
}

func (i GetInstanceRootBlockDeviceArray) ToGetInstanceRootBlockDeviceArrayOutputWithContext(ctx context.Context) GetInstanceRootBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceRootBlockDeviceArrayOutput)
}

type GetInstanceRootBlockDeviceOutput struct{ *pulumi.OutputState }

func (GetInstanceRootBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceRootBlockDevice)(nil)).Elem()
}

func (o GetInstanceRootBlockDeviceOutput) ToGetInstanceRootBlockDeviceOutput() GetInstanceRootBlockDeviceOutput {
	return o
}

func (o GetInstanceRootBlockDeviceOutput) ToGetInstanceRootBlockDeviceOutputWithContext(ctx context.Context) GetInstanceRootBlockDeviceOutput {
	return o
}

// If the root block device will be deleted on termination.
func (o GetInstanceRootBlockDeviceOutput) DeleteOnTermination() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceRootBlockDevice) bool { return v.DeleteOnTermination }).(pulumi.BoolOutput)
}

// If the EBS volume is encrypted.
func (o GetInstanceRootBlockDeviceOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceRootBlockDevice) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

// `0` If the volume is not a provisioned IOPS image, otherwise the supported IOPS count.
func (o GetInstanceRootBlockDeviceOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceRootBlockDevice) int { return v.Iops }).(pulumi.IntOutput)
}

func (o GetInstanceRootBlockDeviceOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceRootBlockDevice) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

func (o GetInstanceRootBlockDeviceOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceRootBlockDevice) string { return v.VolumeId }).(pulumi.StringOutput)
}

// The size of the volume, in GiB.
func (o GetInstanceRootBlockDeviceOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceRootBlockDevice) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// The type of the volume.
func (o GetInstanceRootBlockDeviceOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceRootBlockDevice) string { return v.VolumeType }).(pulumi.StringOutput)
}

type GetInstanceRootBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceRootBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceRootBlockDevice)(nil)).Elem()
}

func (o GetInstanceRootBlockDeviceArrayOutput) ToGetInstanceRootBlockDeviceArrayOutput() GetInstanceRootBlockDeviceArrayOutput {
	return o
}

func (o GetInstanceRootBlockDeviceArrayOutput) ToGetInstanceRootBlockDeviceArrayOutputWithContext(ctx context.Context) GetInstanceRootBlockDeviceArrayOutput {
	return o
}

func (o GetInstanceRootBlockDeviceArrayOutput) Index(i pulumi.IntInput) GetInstanceRootBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceRootBlockDevice {
		return vs[0].([]GetInstanceRootBlockDevice)[vs[1].(int)]
	}).(GetInstanceRootBlockDeviceOutput)
}

type GetInstanceTypeOfferingFilter struct {
	// Name of the filter. The `location` filter depends on the top-level `locationType` argument and if not specified, defaults to the current region.
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

type GetInstanceTypeOfferingFilterInput interface {
	pulumi.Input

	ToGetInstanceTypeOfferingFilterOutput() GetInstanceTypeOfferingFilterOutput
	ToGetInstanceTypeOfferingFilterOutputWithContext(context.Context) GetInstanceTypeOfferingFilterOutput
}

type GetInstanceTypeOfferingFilterArgs struct {
	// Name of the filter. The `location` filter depends on the top-level `locationType` argument and if not specified, defaults to the current region.
	Name pulumi.StringInput `pulumi:"name"`
	// List of one or more values for the filter.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInstanceTypeOfferingFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeOfferingFilter)(nil)).Elem()
}

func (i GetInstanceTypeOfferingFilterArgs) ToGetInstanceTypeOfferingFilterOutput() GetInstanceTypeOfferingFilterOutput {
	return i.ToGetInstanceTypeOfferingFilterOutputWithContext(context.Background())
}

func (i GetInstanceTypeOfferingFilterArgs) ToGetInstanceTypeOfferingFilterOutputWithContext(ctx context.Context) GetInstanceTypeOfferingFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeOfferingFilterOutput)
}

type GetInstanceTypeOfferingFilterArrayInput interface {
	pulumi.Input

	ToGetInstanceTypeOfferingFilterArrayOutput() GetInstanceTypeOfferingFilterArrayOutput
	ToGetInstanceTypeOfferingFilterArrayOutputWithContext(context.Context) GetInstanceTypeOfferingFilterArrayOutput
}

type GetInstanceTypeOfferingFilterArray []GetInstanceTypeOfferingFilterInput

func (GetInstanceTypeOfferingFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypeOfferingFilter)(nil)).Elem()
}

func (i GetInstanceTypeOfferingFilterArray) ToGetInstanceTypeOfferingFilterArrayOutput() GetInstanceTypeOfferingFilterArrayOutput {
	return i.ToGetInstanceTypeOfferingFilterArrayOutputWithContext(context.Background())
}

func (i GetInstanceTypeOfferingFilterArray) ToGetInstanceTypeOfferingFilterArrayOutputWithContext(ctx context.Context) GetInstanceTypeOfferingFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeOfferingFilterArrayOutput)
}

type GetInstanceTypeOfferingFilterOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeOfferingFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeOfferingFilter)(nil)).Elem()
}

func (o GetInstanceTypeOfferingFilterOutput) ToGetInstanceTypeOfferingFilterOutput() GetInstanceTypeOfferingFilterOutput {
	return o
}

func (o GetInstanceTypeOfferingFilterOutput) ToGetInstanceTypeOfferingFilterOutputWithContext(ctx context.Context) GetInstanceTypeOfferingFilterOutput {
	return o
}

// Name of the filter. The `location` filter depends on the top-level `locationType` argument and if not specified, defaults to the current region.
func (o GetInstanceTypeOfferingFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypeOfferingFilter) string { return v.Name }).(pulumi.StringOutput)
}

// List of one or more values for the filter.
func (o GetInstanceTypeOfferingFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceTypeOfferingFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInstanceTypeOfferingFilterArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeOfferingFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypeOfferingFilter)(nil)).Elem()
}

func (o GetInstanceTypeOfferingFilterArrayOutput) ToGetInstanceTypeOfferingFilterArrayOutput() GetInstanceTypeOfferingFilterArrayOutput {
	return o
}

func (o GetInstanceTypeOfferingFilterArrayOutput) ToGetInstanceTypeOfferingFilterArrayOutputWithContext(ctx context.Context) GetInstanceTypeOfferingFilterArrayOutput {
	return o
}

func (o GetInstanceTypeOfferingFilterArrayOutput) Index(i pulumi.IntInput) GetInstanceTypeOfferingFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceTypeOfferingFilter {
		return vs[0].([]GetInstanceTypeOfferingFilter)[vs[1].(int)]
	}).(GetInstanceTypeOfferingFilterOutput)
}

type GetInstanceTypeOfferingFilterArgs struct {
	// Name of the filter. The `location` filter depends on the top-level `locationType` argument and if not specified, defaults to the current region.
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

type GetInstanceTypeOfferingFilterArgsInput interface {
	pulumi.Input

	ToGetInstanceTypeOfferingFilterArgsOutput() GetInstanceTypeOfferingFilterArgsOutput
	ToGetInstanceTypeOfferingFilterArgsOutputWithContext(context.Context) GetInstanceTypeOfferingFilterArgsOutput
}

type GetInstanceTypeOfferingFilterArgsArgs struct {
	// Name of the filter. The `location` filter depends on the top-level `locationType` argument and if not specified, defaults to the current region.
	Name pulumi.StringInput `pulumi:"name"`
	// List of one or more values for the filter.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInstanceTypeOfferingFilterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeOfferingFilterArgs)(nil)).Elem()
}

func (i GetInstanceTypeOfferingFilterArgsArgs) ToGetInstanceTypeOfferingFilterArgsOutput() GetInstanceTypeOfferingFilterArgsOutput {
	return i.ToGetInstanceTypeOfferingFilterArgsOutputWithContext(context.Background())
}

func (i GetInstanceTypeOfferingFilterArgsArgs) ToGetInstanceTypeOfferingFilterArgsOutputWithContext(ctx context.Context) GetInstanceTypeOfferingFilterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeOfferingFilterArgsOutput)
}

type GetInstanceTypeOfferingFilterArgsArrayInput interface {
	pulumi.Input

	ToGetInstanceTypeOfferingFilterArgsArrayOutput() GetInstanceTypeOfferingFilterArgsArrayOutput
	ToGetInstanceTypeOfferingFilterArgsArrayOutputWithContext(context.Context) GetInstanceTypeOfferingFilterArgsArrayOutput
}

type GetInstanceTypeOfferingFilterArgsArray []GetInstanceTypeOfferingFilterArgsInput

func (GetInstanceTypeOfferingFilterArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypeOfferingFilterArgs)(nil)).Elem()
}

func (i GetInstanceTypeOfferingFilterArgsArray) ToGetInstanceTypeOfferingFilterArgsArrayOutput() GetInstanceTypeOfferingFilterArgsArrayOutput {
	return i.ToGetInstanceTypeOfferingFilterArgsArrayOutputWithContext(context.Background())
}

func (i GetInstanceTypeOfferingFilterArgsArray) ToGetInstanceTypeOfferingFilterArgsArrayOutputWithContext(ctx context.Context) GetInstanceTypeOfferingFilterArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeOfferingFilterArgsArrayOutput)
}

type GetInstanceTypeOfferingFilterArgsOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeOfferingFilterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeOfferingFilterArgs)(nil)).Elem()
}

func (o GetInstanceTypeOfferingFilterArgsOutput) ToGetInstanceTypeOfferingFilterArgsOutput() GetInstanceTypeOfferingFilterArgsOutput {
	return o
}

func (o GetInstanceTypeOfferingFilterArgsOutput) ToGetInstanceTypeOfferingFilterArgsOutputWithContext(ctx context.Context) GetInstanceTypeOfferingFilterArgsOutput {
	return o
}

// Name of the filter. The `location` filter depends on the top-level `locationType` argument and if not specified, defaults to the current region.
func (o GetInstanceTypeOfferingFilterArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypeOfferingFilterArgs) string { return v.Name }).(pulumi.StringOutput)
}

// List of one or more values for the filter.
func (o GetInstanceTypeOfferingFilterArgsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceTypeOfferingFilterArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInstanceTypeOfferingFilterArgsArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeOfferingFilterArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypeOfferingFilterArgs)(nil)).Elem()
}

func (o GetInstanceTypeOfferingFilterArgsArrayOutput) ToGetInstanceTypeOfferingFilterArgsArrayOutput() GetInstanceTypeOfferingFilterArgsArrayOutput {
	return o
}

func (o GetInstanceTypeOfferingFilterArgsArrayOutput) ToGetInstanceTypeOfferingFilterArgsArrayOutputWithContext(ctx context.Context) GetInstanceTypeOfferingFilterArgsArrayOutput {
	return o
}

func (o GetInstanceTypeOfferingFilterArgsArrayOutput) Index(i pulumi.IntInput) GetInstanceTypeOfferingFilterArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceTypeOfferingFilterArgs {
		return vs[0].([]GetInstanceTypeOfferingFilterArgs)[vs[1].(int)]
	}).(GetInstanceTypeOfferingFilterArgsOutput)
}

type GetInstanceTypeOfferingsFilter struct {
	// Name of the filter. The `location` filter depends on the top-level `locationType` argument and if not specified, defaults to the current region.
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

type GetInstanceTypeOfferingsFilterInput interface {
	pulumi.Input

	ToGetInstanceTypeOfferingsFilterOutput() GetInstanceTypeOfferingsFilterOutput
	ToGetInstanceTypeOfferingsFilterOutputWithContext(context.Context) GetInstanceTypeOfferingsFilterOutput
}

type GetInstanceTypeOfferingsFilterArgs struct {
	// Name of the filter. The `location` filter depends on the top-level `locationType` argument and if not specified, defaults to the current region.
	Name pulumi.StringInput `pulumi:"name"`
	// List of one or more values for the filter.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInstanceTypeOfferingsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeOfferingsFilter)(nil)).Elem()
}

func (i GetInstanceTypeOfferingsFilterArgs) ToGetInstanceTypeOfferingsFilterOutput() GetInstanceTypeOfferingsFilterOutput {
	return i.ToGetInstanceTypeOfferingsFilterOutputWithContext(context.Background())
}

func (i GetInstanceTypeOfferingsFilterArgs) ToGetInstanceTypeOfferingsFilterOutputWithContext(ctx context.Context) GetInstanceTypeOfferingsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeOfferingsFilterOutput)
}

type GetInstanceTypeOfferingsFilterArrayInput interface {
	pulumi.Input

	ToGetInstanceTypeOfferingsFilterArrayOutput() GetInstanceTypeOfferingsFilterArrayOutput
	ToGetInstanceTypeOfferingsFilterArrayOutputWithContext(context.Context) GetInstanceTypeOfferingsFilterArrayOutput
}

type GetInstanceTypeOfferingsFilterArray []GetInstanceTypeOfferingsFilterInput

func (GetInstanceTypeOfferingsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypeOfferingsFilter)(nil)).Elem()
}

func (i GetInstanceTypeOfferingsFilterArray) ToGetInstanceTypeOfferingsFilterArrayOutput() GetInstanceTypeOfferingsFilterArrayOutput {
	return i.ToGetInstanceTypeOfferingsFilterArrayOutputWithContext(context.Background())
}

func (i GetInstanceTypeOfferingsFilterArray) ToGetInstanceTypeOfferingsFilterArrayOutputWithContext(ctx context.Context) GetInstanceTypeOfferingsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeOfferingsFilterArrayOutput)
}

type GetInstanceTypeOfferingsFilterOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeOfferingsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeOfferingsFilter)(nil)).Elem()
}

func (o GetInstanceTypeOfferingsFilterOutput) ToGetInstanceTypeOfferingsFilterOutput() GetInstanceTypeOfferingsFilterOutput {
	return o
}

func (o GetInstanceTypeOfferingsFilterOutput) ToGetInstanceTypeOfferingsFilterOutputWithContext(ctx context.Context) GetInstanceTypeOfferingsFilterOutput {
	return o
}

// Name of the filter. The `location` filter depends on the top-level `locationType` argument and if not specified, defaults to the current region.
func (o GetInstanceTypeOfferingsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypeOfferingsFilter) string { return v.Name }).(pulumi.StringOutput)
}

// List of one or more values for the filter.
func (o GetInstanceTypeOfferingsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceTypeOfferingsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInstanceTypeOfferingsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeOfferingsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypeOfferingsFilter)(nil)).Elem()
}

func (o GetInstanceTypeOfferingsFilterArrayOutput) ToGetInstanceTypeOfferingsFilterArrayOutput() GetInstanceTypeOfferingsFilterArrayOutput {
	return o
}

func (o GetInstanceTypeOfferingsFilterArrayOutput) ToGetInstanceTypeOfferingsFilterArrayOutputWithContext(ctx context.Context) GetInstanceTypeOfferingsFilterArrayOutput {
	return o
}

func (o GetInstanceTypeOfferingsFilterArrayOutput) Index(i pulumi.IntInput) GetInstanceTypeOfferingsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceTypeOfferingsFilter {
		return vs[0].([]GetInstanceTypeOfferingsFilter)[vs[1].(int)]
	}).(GetInstanceTypeOfferingsFilterOutput)
}

type GetInstanceTypeOfferingsFilterArgs struct {
	// Name of the filter. The `location` filter depends on the top-level `locationType` argument and if not specified, defaults to the current region.
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

type GetInstanceTypeOfferingsFilterArgsInput interface {
	pulumi.Input

	ToGetInstanceTypeOfferingsFilterArgsOutput() GetInstanceTypeOfferingsFilterArgsOutput
	ToGetInstanceTypeOfferingsFilterArgsOutputWithContext(context.Context) GetInstanceTypeOfferingsFilterArgsOutput
}

type GetInstanceTypeOfferingsFilterArgsArgs struct {
	// Name of the filter. The `location` filter depends on the top-level `locationType` argument and if not specified, defaults to the current region.
	Name pulumi.StringInput `pulumi:"name"`
	// List of one or more values for the filter.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInstanceTypeOfferingsFilterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeOfferingsFilterArgs)(nil)).Elem()
}

func (i GetInstanceTypeOfferingsFilterArgsArgs) ToGetInstanceTypeOfferingsFilterArgsOutput() GetInstanceTypeOfferingsFilterArgsOutput {
	return i.ToGetInstanceTypeOfferingsFilterArgsOutputWithContext(context.Background())
}

func (i GetInstanceTypeOfferingsFilterArgsArgs) ToGetInstanceTypeOfferingsFilterArgsOutputWithContext(ctx context.Context) GetInstanceTypeOfferingsFilterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeOfferingsFilterArgsOutput)
}

type GetInstanceTypeOfferingsFilterArgsArrayInput interface {
	pulumi.Input

	ToGetInstanceTypeOfferingsFilterArgsArrayOutput() GetInstanceTypeOfferingsFilterArgsArrayOutput
	ToGetInstanceTypeOfferingsFilterArgsArrayOutputWithContext(context.Context) GetInstanceTypeOfferingsFilterArgsArrayOutput
}

type GetInstanceTypeOfferingsFilterArgsArray []GetInstanceTypeOfferingsFilterArgsInput

func (GetInstanceTypeOfferingsFilterArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypeOfferingsFilterArgs)(nil)).Elem()
}

func (i GetInstanceTypeOfferingsFilterArgsArray) ToGetInstanceTypeOfferingsFilterArgsArrayOutput() GetInstanceTypeOfferingsFilterArgsArrayOutput {
	return i.ToGetInstanceTypeOfferingsFilterArgsArrayOutputWithContext(context.Background())
}

func (i GetInstanceTypeOfferingsFilterArgsArray) ToGetInstanceTypeOfferingsFilterArgsArrayOutputWithContext(ctx context.Context) GetInstanceTypeOfferingsFilterArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeOfferingsFilterArgsArrayOutput)
}

type GetInstanceTypeOfferingsFilterArgsOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeOfferingsFilterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeOfferingsFilterArgs)(nil)).Elem()
}

func (o GetInstanceTypeOfferingsFilterArgsOutput) ToGetInstanceTypeOfferingsFilterArgsOutput() GetInstanceTypeOfferingsFilterArgsOutput {
	return o
}

func (o GetInstanceTypeOfferingsFilterArgsOutput) ToGetInstanceTypeOfferingsFilterArgsOutputWithContext(ctx context.Context) GetInstanceTypeOfferingsFilterArgsOutput {
	return o
}

// Name of the filter. The `location` filter depends on the top-level `locationType` argument and if not specified, defaults to the current region.
func (o GetInstanceTypeOfferingsFilterArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypeOfferingsFilterArgs) string { return v.Name }).(pulumi.StringOutput)
}

// List of one or more values for the filter.
func (o GetInstanceTypeOfferingsFilterArgsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceTypeOfferingsFilterArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInstanceTypeOfferingsFilterArgsArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeOfferingsFilterArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypeOfferingsFilterArgs)(nil)).Elem()
}

func (o GetInstanceTypeOfferingsFilterArgsArrayOutput) ToGetInstanceTypeOfferingsFilterArgsArrayOutput() GetInstanceTypeOfferingsFilterArgsArrayOutput {
	return o
}

func (o GetInstanceTypeOfferingsFilterArgsArrayOutput) ToGetInstanceTypeOfferingsFilterArgsArrayOutputWithContext(ctx context.Context) GetInstanceTypeOfferingsFilterArgsArrayOutput {
	return o
}

func (o GetInstanceTypeOfferingsFilterArgsArrayOutput) Index(i pulumi.IntInput) GetInstanceTypeOfferingsFilterArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceTypeOfferingsFilterArgs {
		return vs[0].([]GetInstanceTypeOfferingsFilterArgs)[vs[1].(int)]
	}).(GetInstanceTypeOfferingsFilterArgsOutput)
}

type GetInstancesFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetInstancesFilterInput interface {
	pulumi.Input

	ToGetInstancesFilterOutput() GetInstancesFilterOutput
	ToGetInstancesFilterOutputWithContext(context.Context) GetInstancesFilterOutput
}

type GetInstancesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInstancesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesFilter)(nil)).Elem()
}

func (i GetInstancesFilterArgs) ToGetInstancesFilterOutput() GetInstancesFilterOutput {
	return i.ToGetInstancesFilterOutputWithContext(context.Background())
}

func (i GetInstancesFilterArgs) ToGetInstancesFilterOutputWithContext(ctx context.Context) GetInstancesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesFilterOutput)
}

type GetInstancesFilterArrayInput interface {
	pulumi.Input

	ToGetInstancesFilterArrayOutput() GetInstancesFilterArrayOutput
	ToGetInstancesFilterArrayOutputWithContext(context.Context) GetInstancesFilterArrayOutput
}

type GetInstancesFilterArray []GetInstancesFilterInput

func (GetInstancesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesFilter)(nil)).Elem()
}

func (i GetInstancesFilterArray) ToGetInstancesFilterArrayOutput() GetInstancesFilterArrayOutput {
	return i.ToGetInstancesFilterArrayOutputWithContext(context.Background())
}

func (i GetInstancesFilterArray) ToGetInstancesFilterArrayOutputWithContext(ctx context.Context) GetInstancesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesFilterArrayOutput)
}

type GetInstancesFilterOutput struct{ *pulumi.OutputState }

func (GetInstancesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesFilter)(nil)).Elem()
}

func (o GetInstancesFilterOutput) ToGetInstancesFilterOutput() GetInstancesFilterOutput {
	return o
}

func (o GetInstancesFilterOutput) ToGetInstancesFilterOutputWithContext(ctx context.Context) GetInstancesFilterOutput {
	return o
}

func (o GetInstancesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetInstancesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInstancesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesFilter)(nil)).Elem()
}

func (o GetInstancesFilterArrayOutput) ToGetInstancesFilterArrayOutput() GetInstancesFilterArrayOutput {
	return o
}

func (o GetInstancesFilterArrayOutput) ToGetInstancesFilterArrayOutputWithContext(ctx context.Context) GetInstancesFilterArrayOutput {
	return o
}

func (o GetInstancesFilterArrayOutput) Index(i pulumi.IntInput) GetInstancesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesFilter {
		return vs[0].([]GetInstancesFilter)[vs[1].(int)]
	}).(GetInstancesFilterOutput)
}

type GetInstancesFilterArgs struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetInstancesFilterArgsInput interface {
	pulumi.Input

	ToGetInstancesFilterArgsOutput() GetInstancesFilterArgsOutput
	ToGetInstancesFilterArgsOutputWithContext(context.Context) GetInstancesFilterArgsOutput
}

type GetInstancesFilterArgsArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInstancesFilterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesFilterArgs)(nil)).Elem()
}

func (i GetInstancesFilterArgsArgs) ToGetInstancesFilterArgsOutput() GetInstancesFilterArgsOutput {
	return i.ToGetInstancesFilterArgsOutputWithContext(context.Background())
}

func (i GetInstancesFilterArgsArgs) ToGetInstancesFilterArgsOutputWithContext(ctx context.Context) GetInstancesFilterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesFilterArgsOutput)
}

type GetInstancesFilterArgsArrayInput interface {
	pulumi.Input

	ToGetInstancesFilterArgsArrayOutput() GetInstancesFilterArgsArrayOutput
	ToGetInstancesFilterArgsArrayOutputWithContext(context.Context) GetInstancesFilterArgsArrayOutput
}

type GetInstancesFilterArgsArray []GetInstancesFilterArgsInput

func (GetInstancesFilterArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesFilterArgs)(nil)).Elem()
}

func (i GetInstancesFilterArgsArray) ToGetInstancesFilterArgsArrayOutput() GetInstancesFilterArgsArrayOutput {
	return i.ToGetInstancesFilterArgsArrayOutputWithContext(context.Background())
}

func (i GetInstancesFilterArgsArray) ToGetInstancesFilterArgsArrayOutputWithContext(ctx context.Context) GetInstancesFilterArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesFilterArgsArrayOutput)
}

type GetInstancesFilterArgsOutput struct{ *pulumi.OutputState }

func (GetInstancesFilterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesFilterArgs)(nil)).Elem()
}

func (o GetInstancesFilterArgsOutput) ToGetInstancesFilterArgsOutput() GetInstancesFilterArgsOutput {
	return o
}

func (o GetInstancesFilterArgsOutput) ToGetInstancesFilterArgsOutputWithContext(ctx context.Context) GetInstancesFilterArgsOutput {
	return o
}

func (o GetInstancesFilterArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesFilterArgs) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetInstancesFilterArgsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesFilterArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInstancesFilterArgsArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesFilterArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesFilterArgs)(nil)).Elem()
}

func (o GetInstancesFilterArgsArrayOutput) ToGetInstancesFilterArgsArrayOutput() GetInstancesFilterArgsArrayOutput {
	return o
}

func (o GetInstancesFilterArgsArrayOutput) ToGetInstancesFilterArgsArrayOutputWithContext(ctx context.Context) GetInstancesFilterArgsArrayOutput {
	return o
}

func (o GetInstancesFilterArgsArrayOutput) Index(i pulumi.IntInput) GetInstancesFilterArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesFilterArgs {
		return vs[0].([]GetInstancesFilterArgs)[vs[1].(int)]
	}).(GetInstancesFilterArgsOutput)
}

type GetInternetGatewayAttachment struct {
	// The current state of the attachment between the gateway and the VPC. Present only if a VPC is attached
	State string `pulumi:"state"`
	// The ID of an attached VPC.
	VpcId string `pulumi:"vpcId"`
}

type GetInternetGatewayAttachmentInput interface {
	pulumi.Input

	ToGetInternetGatewayAttachmentOutput() GetInternetGatewayAttachmentOutput
	ToGetInternetGatewayAttachmentOutputWithContext(context.Context) GetInternetGatewayAttachmentOutput
}

type GetInternetGatewayAttachmentArgs struct {
	// The current state of the attachment between the gateway and the VPC. Present only if a VPC is attached
	State pulumi.StringInput `pulumi:"state"`
	// The ID of an attached VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetInternetGatewayAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetGatewayAttachment)(nil)).Elem()
}

func (i GetInternetGatewayAttachmentArgs) ToGetInternetGatewayAttachmentOutput() GetInternetGatewayAttachmentOutput {
	return i.ToGetInternetGatewayAttachmentOutputWithContext(context.Background())
}

func (i GetInternetGatewayAttachmentArgs) ToGetInternetGatewayAttachmentOutputWithContext(ctx context.Context) GetInternetGatewayAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetGatewayAttachmentOutput)
}

type GetInternetGatewayAttachmentArrayInput interface {
	pulumi.Input

	ToGetInternetGatewayAttachmentArrayOutput() GetInternetGatewayAttachmentArrayOutput
	ToGetInternetGatewayAttachmentArrayOutputWithContext(context.Context) GetInternetGatewayAttachmentArrayOutput
}

type GetInternetGatewayAttachmentArray []GetInternetGatewayAttachmentInput

func (GetInternetGatewayAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetGatewayAttachment)(nil)).Elem()
}

func (i GetInternetGatewayAttachmentArray) ToGetInternetGatewayAttachmentArrayOutput() GetInternetGatewayAttachmentArrayOutput {
	return i.ToGetInternetGatewayAttachmentArrayOutputWithContext(context.Background())
}

func (i GetInternetGatewayAttachmentArray) ToGetInternetGatewayAttachmentArrayOutputWithContext(ctx context.Context) GetInternetGatewayAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetGatewayAttachmentArrayOutput)
}

type GetInternetGatewayAttachmentOutput struct{ *pulumi.OutputState }

func (GetInternetGatewayAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetGatewayAttachment)(nil)).Elem()
}

func (o GetInternetGatewayAttachmentOutput) ToGetInternetGatewayAttachmentOutput() GetInternetGatewayAttachmentOutput {
	return o
}

func (o GetInternetGatewayAttachmentOutput) ToGetInternetGatewayAttachmentOutputWithContext(ctx context.Context) GetInternetGatewayAttachmentOutput {
	return o
}

// The current state of the attachment between the gateway and the VPC. Present only if a VPC is attached
func (o GetInternetGatewayAttachmentOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetInternetGatewayAttachment) string { return v.State }).(pulumi.StringOutput)
}

// The ID of an attached VPC.
func (o GetInternetGatewayAttachmentOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInternetGatewayAttachment) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetInternetGatewayAttachmentArrayOutput struct{ *pulumi.OutputState }

func (GetInternetGatewayAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetGatewayAttachment)(nil)).Elem()
}

func (o GetInternetGatewayAttachmentArrayOutput) ToGetInternetGatewayAttachmentArrayOutput() GetInternetGatewayAttachmentArrayOutput {
	return o
}

func (o GetInternetGatewayAttachmentArrayOutput) ToGetInternetGatewayAttachmentArrayOutputWithContext(ctx context.Context) GetInternetGatewayAttachmentArrayOutput {
	return o
}

func (o GetInternetGatewayAttachmentArrayOutput) Index(i pulumi.IntInput) GetInternetGatewayAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInternetGatewayAttachment {
		return vs[0].([]GetInternetGatewayAttachment)[vs[1].(int)]
	}).(GetInternetGatewayAttachmentOutput)
}

type GetInternetGatewayFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInternetGateways.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// An Internet Gateway will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetInternetGatewayFilterInput interface {
	pulumi.Input

	ToGetInternetGatewayFilterOutput() GetInternetGatewayFilterOutput
	ToGetInternetGatewayFilterOutputWithContext(context.Context) GetInternetGatewayFilterOutput
}

type GetInternetGatewayFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInternetGateways.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// An Internet Gateway will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInternetGatewayFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetGatewayFilter)(nil)).Elem()
}

func (i GetInternetGatewayFilterArgs) ToGetInternetGatewayFilterOutput() GetInternetGatewayFilterOutput {
	return i.ToGetInternetGatewayFilterOutputWithContext(context.Background())
}

func (i GetInternetGatewayFilterArgs) ToGetInternetGatewayFilterOutputWithContext(ctx context.Context) GetInternetGatewayFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetGatewayFilterOutput)
}

type GetInternetGatewayFilterArrayInput interface {
	pulumi.Input

	ToGetInternetGatewayFilterArrayOutput() GetInternetGatewayFilterArrayOutput
	ToGetInternetGatewayFilterArrayOutputWithContext(context.Context) GetInternetGatewayFilterArrayOutput
}

type GetInternetGatewayFilterArray []GetInternetGatewayFilterInput

func (GetInternetGatewayFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetGatewayFilter)(nil)).Elem()
}

func (i GetInternetGatewayFilterArray) ToGetInternetGatewayFilterArrayOutput() GetInternetGatewayFilterArrayOutput {
	return i.ToGetInternetGatewayFilterArrayOutputWithContext(context.Background())
}

func (i GetInternetGatewayFilterArray) ToGetInternetGatewayFilterArrayOutputWithContext(ctx context.Context) GetInternetGatewayFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetGatewayFilterArrayOutput)
}

type GetInternetGatewayFilterOutput struct{ *pulumi.OutputState }

func (GetInternetGatewayFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetGatewayFilter)(nil)).Elem()
}

func (o GetInternetGatewayFilterOutput) ToGetInternetGatewayFilterOutput() GetInternetGatewayFilterOutput {
	return o
}

func (o GetInternetGatewayFilterOutput) ToGetInternetGatewayFilterOutputWithContext(ctx context.Context) GetInternetGatewayFilterOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInternetGateways.html).
func (o GetInternetGatewayFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInternetGatewayFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// An Internet Gateway will be selected if any one of the given values matches.
func (o GetInternetGatewayFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInternetGatewayFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInternetGatewayFilterArrayOutput struct{ *pulumi.OutputState }

func (GetInternetGatewayFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetGatewayFilter)(nil)).Elem()
}

func (o GetInternetGatewayFilterArrayOutput) ToGetInternetGatewayFilterArrayOutput() GetInternetGatewayFilterArrayOutput {
	return o
}

func (o GetInternetGatewayFilterArrayOutput) ToGetInternetGatewayFilterArrayOutputWithContext(ctx context.Context) GetInternetGatewayFilterArrayOutput {
	return o
}

func (o GetInternetGatewayFilterArrayOutput) Index(i pulumi.IntInput) GetInternetGatewayFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInternetGatewayFilter {
		return vs[0].([]GetInternetGatewayFilter)[vs[1].(int)]
	}).(GetInternetGatewayFilterOutput)
}

type GetInternetGatewayFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInternetGateways.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// An Internet Gateway will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetInternetGatewayFilterArgsInput interface {
	pulumi.Input

	ToGetInternetGatewayFilterArgsOutput() GetInternetGatewayFilterArgsOutput
	ToGetInternetGatewayFilterArgsOutputWithContext(context.Context) GetInternetGatewayFilterArgsOutput
}

type GetInternetGatewayFilterArgsArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInternetGateways.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// An Internet Gateway will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInternetGatewayFilterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetGatewayFilterArgs)(nil)).Elem()
}

func (i GetInternetGatewayFilterArgsArgs) ToGetInternetGatewayFilterArgsOutput() GetInternetGatewayFilterArgsOutput {
	return i.ToGetInternetGatewayFilterArgsOutputWithContext(context.Background())
}

func (i GetInternetGatewayFilterArgsArgs) ToGetInternetGatewayFilterArgsOutputWithContext(ctx context.Context) GetInternetGatewayFilterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetGatewayFilterArgsOutput)
}

type GetInternetGatewayFilterArgsArrayInput interface {
	pulumi.Input

	ToGetInternetGatewayFilterArgsArrayOutput() GetInternetGatewayFilterArgsArrayOutput
	ToGetInternetGatewayFilterArgsArrayOutputWithContext(context.Context) GetInternetGatewayFilterArgsArrayOutput
}

type GetInternetGatewayFilterArgsArray []GetInternetGatewayFilterArgsInput

func (GetInternetGatewayFilterArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetGatewayFilterArgs)(nil)).Elem()
}

func (i GetInternetGatewayFilterArgsArray) ToGetInternetGatewayFilterArgsArrayOutput() GetInternetGatewayFilterArgsArrayOutput {
	return i.ToGetInternetGatewayFilterArgsArrayOutputWithContext(context.Background())
}

func (i GetInternetGatewayFilterArgsArray) ToGetInternetGatewayFilterArgsArrayOutputWithContext(ctx context.Context) GetInternetGatewayFilterArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetGatewayFilterArgsArrayOutput)
}

type GetInternetGatewayFilterArgsOutput struct{ *pulumi.OutputState }

func (GetInternetGatewayFilterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetGatewayFilterArgs)(nil)).Elem()
}

func (o GetInternetGatewayFilterArgsOutput) ToGetInternetGatewayFilterArgsOutput() GetInternetGatewayFilterArgsOutput {
	return o
}

func (o GetInternetGatewayFilterArgsOutput) ToGetInternetGatewayFilterArgsOutputWithContext(ctx context.Context) GetInternetGatewayFilterArgsOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInternetGateways.html).
func (o GetInternetGatewayFilterArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInternetGatewayFilterArgs) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// An Internet Gateway will be selected if any one of the given values matches.
func (o GetInternetGatewayFilterArgsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInternetGatewayFilterArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInternetGatewayFilterArgsArrayOutput struct{ *pulumi.OutputState }

func (GetInternetGatewayFilterArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetGatewayFilterArgs)(nil)).Elem()
}

func (o GetInternetGatewayFilterArgsArrayOutput) ToGetInternetGatewayFilterArgsArrayOutput() GetInternetGatewayFilterArgsArrayOutput {
	return o
}

func (o GetInternetGatewayFilterArgsArrayOutput) ToGetInternetGatewayFilterArgsArrayOutputWithContext(ctx context.Context) GetInternetGatewayFilterArgsArrayOutput {
	return o
}

func (o GetInternetGatewayFilterArgsArrayOutput) Index(i pulumi.IntInput) GetInternetGatewayFilterArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInternetGatewayFilterArgs {
		return vs[0].([]GetInternetGatewayFilterArgs)[vs[1].(int)]
	}).(GetInternetGatewayFilterArgsOutput)
}

type GetLaunchConfigurationEbsBlockDevice struct {
	// Whether the EBS Volume will be deleted on instance termination.
	DeleteOnTermination bool `pulumi:"deleteOnTermination"`
	// The Name of the device.
	DeviceName string `pulumi:"deviceName"`
	// Whether the volume is Encrypted.
	Encrypted bool `pulumi:"encrypted"`
	// The provisioned IOPs of the volume.
	Iops int `pulumi:"iops"`
	// The Snapshot ID of the mount.
	SnapshotId string `pulumi:"snapshotId"`
	// The Size of the volume.
	VolumeSize int `pulumi:"volumeSize"`
	// The Type of the volume.
	VolumeType string `pulumi:"volumeType"`
}

type GetLaunchConfigurationEbsBlockDeviceInput interface {
	pulumi.Input

	ToGetLaunchConfigurationEbsBlockDeviceOutput() GetLaunchConfigurationEbsBlockDeviceOutput
	ToGetLaunchConfigurationEbsBlockDeviceOutputWithContext(context.Context) GetLaunchConfigurationEbsBlockDeviceOutput
}

type GetLaunchConfigurationEbsBlockDeviceArgs struct {
	// Whether the EBS Volume will be deleted on instance termination.
	DeleteOnTermination pulumi.BoolInput `pulumi:"deleteOnTermination"`
	// The Name of the device.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Whether the volume is Encrypted.
	Encrypted pulumi.BoolInput `pulumi:"encrypted"`
	// The provisioned IOPs of the volume.
	Iops pulumi.IntInput `pulumi:"iops"`
	// The Snapshot ID of the mount.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	// The Size of the volume.
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
	// The Type of the volume.
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (GetLaunchConfigurationEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchConfigurationEbsBlockDevice)(nil)).Elem()
}

func (i GetLaunchConfigurationEbsBlockDeviceArgs) ToGetLaunchConfigurationEbsBlockDeviceOutput() GetLaunchConfigurationEbsBlockDeviceOutput {
	return i.ToGetLaunchConfigurationEbsBlockDeviceOutputWithContext(context.Background())
}

func (i GetLaunchConfigurationEbsBlockDeviceArgs) ToGetLaunchConfigurationEbsBlockDeviceOutputWithContext(ctx context.Context) GetLaunchConfigurationEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchConfigurationEbsBlockDeviceOutput)
}

type GetLaunchConfigurationEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToGetLaunchConfigurationEbsBlockDeviceArrayOutput() GetLaunchConfigurationEbsBlockDeviceArrayOutput
	ToGetLaunchConfigurationEbsBlockDeviceArrayOutputWithContext(context.Context) GetLaunchConfigurationEbsBlockDeviceArrayOutput
}

type GetLaunchConfigurationEbsBlockDeviceArray []GetLaunchConfigurationEbsBlockDeviceInput

func (GetLaunchConfigurationEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchConfigurationEbsBlockDevice)(nil)).Elem()
}

func (i GetLaunchConfigurationEbsBlockDeviceArray) ToGetLaunchConfigurationEbsBlockDeviceArrayOutput() GetLaunchConfigurationEbsBlockDeviceArrayOutput {
	return i.ToGetLaunchConfigurationEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i GetLaunchConfigurationEbsBlockDeviceArray) ToGetLaunchConfigurationEbsBlockDeviceArrayOutputWithContext(ctx context.Context) GetLaunchConfigurationEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchConfigurationEbsBlockDeviceArrayOutput)
}

type GetLaunchConfigurationEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (GetLaunchConfigurationEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchConfigurationEbsBlockDevice)(nil)).Elem()
}

func (o GetLaunchConfigurationEbsBlockDeviceOutput) ToGetLaunchConfigurationEbsBlockDeviceOutput() GetLaunchConfigurationEbsBlockDeviceOutput {
	return o
}

func (o GetLaunchConfigurationEbsBlockDeviceOutput) ToGetLaunchConfigurationEbsBlockDeviceOutputWithContext(ctx context.Context) GetLaunchConfigurationEbsBlockDeviceOutput {
	return o
}

// Whether the EBS Volume will be deleted on instance termination.
func (o GetLaunchConfigurationEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLaunchConfigurationEbsBlockDevice) bool { return v.DeleteOnTermination }).(pulumi.BoolOutput)
}

// The Name of the device.
func (o GetLaunchConfigurationEbsBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchConfigurationEbsBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Whether the volume is Encrypted.
func (o GetLaunchConfigurationEbsBlockDeviceOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLaunchConfigurationEbsBlockDevice) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

// The provisioned IOPs of the volume.
func (o GetLaunchConfigurationEbsBlockDeviceOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v GetLaunchConfigurationEbsBlockDevice) int { return v.Iops }).(pulumi.IntOutput)
}

// The Snapshot ID of the mount.
func (o GetLaunchConfigurationEbsBlockDeviceOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchConfigurationEbsBlockDevice) string { return v.SnapshotId }).(pulumi.StringOutput)
}

// The Size of the volume.
func (o GetLaunchConfigurationEbsBlockDeviceOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetLaunchConfigurationEbsBlockDevice) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// The Type of the volume.
func (o GetLaunchConfigurationEbsBlockDeviceOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchConfigurationEbsBlockDevice) string { return v.VolumeType }).(pulumi.StringOutput)
}

type GetLaunchConfigurationEbsBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchConfigurationEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchConfigurationEbsBlockDevice)(nil)).Elem()
}

func (o GetLaunchConfigurationEbsBlockDeviceArrayOutput) ToGetLaunchConfigurationEbsBlockDeviceArrayOutput() GetLaunchConfigurationEbsBlockDeviceArrayOutput {
	return o
}

func (o GetLaunchConfigurationEbsBlockDeviceArrayOutput) ToGetLaunchConfigurationEbsBlockDeviceArrayOutputWithContext(ctx context.Context) GetLaunchConfigurationEbsBlockDeviceArrayOutput {
	return o
}

func (o GetLaunchConfigurationEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) GetLaunchConfigurationEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchConfigurationEbsBlockDevice {
		return vs[0].([]GetLaunchConfigurationEbsBlockDevice)[vs[1].(int)]
	}).(GetLaunchConfigurationEbsBlockDeviceOutput)
}

type GetLaunchConfigurationEphemeralBlockDevice struct {
	// The Name of the device.
	DeviceName string `pulumi:"deviceName"`
	// The Virtual Name of the device.
	VirtualName string `pulumi:"virtualName"`
}

type GetLaunchConfigurationEphemeralBlockDeviceInput interface {
	pulumi.Input

	ToGetLaunchConfigurationEphemeralBlockDeviceOutput() GetLaunchConfigurationEphemeralBlockDeviceOutput
	ToGetLaunchConfigurationEphemeralBlockDeviceOutputWithContext(context.Context) GetLaunchConfigurationEphemeralBlockDeviceOutput
}

type GetLaunchConfigurationEphemeralBlockDeviceArgs struct {
	// The Name of the device.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// The Virtual Name of the device.
	VirtualName pulumi.StringInput `pulumi:"virtualName"`
}

func (GetLaunchConfigurationEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchConfigurationEphemeralBlockDevice)(nil)).Elem()
}

func (i GetLaunchConfigurationEphemeralBlockDeviceArgs) ToGetLaunchConfigurationEphemeralBlockDeviceOutput() GetLaunchConfigurationEphemeralBlockDeviceOutput {
	return i.ToGetLaunchConfigurationEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i GetLaunchConfigurationEphemeralBlockDeviceArgs) ToGetLaunchConfigurationEphemeralBlockDeviceOutputWithContext(ctx context.Context) GetLaunchConfigurationEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchConfigurationEphemeralBlockDeviceOutput)
}

type GetLaunchConfigurationEphemeralBlockDeviceArrayInput interface {
	pulumi.Input

	ToGetLaunchConfigurationEphemeralBlockDeviceArrayOutput() GetLaunchConfigurationEphemeralBlockDeviceArrayOutput
	ToGetLaunchConfigurationEphemeralBlockDeviceArrayOutputWithContext(context.Context) GetLaunchConfigurationEphemeralBlockDeviceArrayOutput
}

type GetLaunchConfigurationEphemeralBlockDeviceArray []GetLaunchConfigurationEphemeralBlockDeviceInput

func (GetLaunchConfigurationEphemeralBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchConfigurationEphemeralBlockDevice)(nil)).Elem()
}

func (i GetLaunchConfigurationEphemeralBlockDeviceArray) ToGetLaunchConfigurationEphemeralBlockDeviceArrayOutput() GetLaunchConfigurationEphemeralBlockDeviceArrayOutput {
	return i.ToGetLaunchConfigurationEphemeralBlockDeviceArrayOutputWithContext(context.Background())
}

func (i GetLaunchConfigurationEphemeralBlockDeviceArray) ToGetLaunchConfigurationEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) GetLaunchConfigurationEphemeralBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchConfigurationEphemeralBlockDeviceArrayOutput)
}

type GetLaunchConfigurationEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (GetLaunchConfigurationEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchConfigurationEphemeralBlockDevice)(nil)).Elem()
}

func (o GetLaunchConfigurationEphemeralBlockDeviceOutput) ToGetLaunchConfigurationEphemeralBlockDeviceOutput() GetLaunchConfigurationEphemeralBlockDeviceOutput {
	return o
}

func (o GetLaunchConfigurationEphemeralBlockDeviceOutput) ToGetLaunchConfigurationEphemeralBlockDeviceOutputWithContext(ctx context.Context) GetLaunchConfigurationEphemeralBlockDeviceOutput {
	return o
}

// The Name of the device.
func (o GetLaunchConfigurationEphemeralBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchConfigurationEphemeralBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// The Virtual Name of the device.
func (o GetLaunchConfigurationEphemeralBlockDeviceOutput) VirtualName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchConfigurationEphemeralBlockDevice) string { return v.VirtualName }).(pulumi.StringOutput)
}

type GetLaunchConfigurationEphemeralBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchConfigurationEphemeralBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchConfigurationEphemeralBlockDevice)(nil)).Elem()
}

func (o GetLaunchConfigurationEphemeralBlockDeviceArrayOutput) ToGetLaunchConfigurationEphemeralBlockDeviceArrayOutput() GetLaunchConfigurationEphemeralBlockDeviceArrayOutput {
	return o
}

func (o GetLaunchConfigurationEphemeralBlockDeviceArrayOutput) ToGetLaunchConfigurationEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) GetLaunchConfigurationEphemeralBlockDeviceArrayOutput {
	return o
}

func (o GetLaunchConfigurationEphemeralBlockDeviceArrayOutput) Index(i pulumi.IntInput) GetLaunchConfigurationEphemeralBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchConfigurationEphemeralBlockDevice {
		return vs[0].([]GetLaunchConfigurationEphemeralBlockDevice)[vs[1].(int)]
	}).(GetLaunchConfigurationEphemeralBlockDeviceOutput)
}

type GetLaunchConfigurationRootBlockDevice struct {
	// Whether the EBS Volume will be deleted on instance termination.
	DeleteOnTermination bool `pulumi:"deleteOnTermination"`
	// Whether the volume is Encrypted.
	Encrypted bool `pulumi:"encrypted"`
	// The provisioned IOPs of the volume.
	Iops int `pulumi:"iops"`
	// The Size of the volume.
	VolumeSize int `pulumi:"volumeSize"`
	// The Type of the volume.
	VolumeType string `pulumi:"volumeType"`
}

type GetLaunchConfigurationRootBlockDeviceInput interface {
	pulumi.Input

	ToGetLaunchConfigurationRootBlockDeviceOutput() GetLaunchConfigurationRootBlockDeviceOutput
	ToGetLaunchConfigurationRootBlockDeviceOutputWithContext(context.Context) GetLaunchConfigurationRootBlockDeviceOutput
}

type GetLaunchConfigurationRootBlockDeviceArgs struct {
	// Whether the EBS Volume will be deleted on instance termination.
	DeleteOnTermination pulumi.BoolInput `pulumi:"deleteOnTermination"`
	// Whether the volume is Encrypted.
	Encrypted pulumi.BoolInput `pulumi:"encrypted"`
	// The provisioned IOPs of the volume.
	Iops pulumi.IntInput `pulumi:"iops"`
	// The Size of the volume.
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
	// The Type of the volume.
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (GetLaunchConfigurationRootBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchConfigurationRootBlockDevice)(nil)).Elem()
}

func (i GetLaunchConfigurationRootBlockDeviceArgs) ToGetLaunchConfigurationRootBlockDeviceOutput() GetLaunchConfigurationRootBlockDeviceOutput {
	return i.ToGetLaunchConfigurationRootBlockDeviceOutputWithContext(context.Background())
}

func (i GetLaunchConfigurationRootBlockDeviceArgs) ToGetLaunchConfigurationRootBlockDeviceOutputWithContext(ctx context.Context) GetLaunchConfigurationRootBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchConfigurationRootBlockDeviceOutput)
}

type GetLaunchConfigurationRootBlockDeviceArrayInput interface {
	pulumi.Input

	ToGetLaunchConfigurationRootBlockDeviceArrayOutput() GetLaunchConfigurationRootBlockDeviceArrayOutput
	ToGetLaunchConfigurationRootBlockDeviceArrayOutputWithContext(context.Context) GetLaunchConfigurationRootBlockDeviceArrayOutput
}

type GetLaunchConfigurationRootBlockDeviceArray []GetLaunchConfigurationRootBlockDeviceInput

func (GetLaunchConfigurationRootBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchConfigurationRootBlockDevice)(nil)).Elem()
}

func (i GetLaunchConfigurationRootBlockDeviceArray) ToGetLaunchConfigurationRootBlockDeviceArrayOutput() GetLaunchConfigurationRootBlockDeviceArrayOutput {
	return i.ToGetLaunchConfigurationRootBlockDeviceArrayOutputWithContext(context.Background())
}

func (i GetLaunchConfigurationRootBlockDeviceArray) ToGetLaunchConfigurationRootBlockDeviceArrayOutputWithContext(ctx context.Context) GetLaunchConfigurationRootBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchConfigurationRootBlockDeviceArrayOutput)
}

type GetLaunchConfigurationRootBlockDeviceOutput struct{ *pulumi.OutputState }

func (GetLaunchConfigurationRootBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchConfigurationRootBlockDevice)(nil)).Elem()
}

func (o GetLaunchConfigurationRootBlockDeviceOutput) ToGetLaunchConfigurationRootBlockDeviceOutput() GetLaunchConfigurationRootBlockDeviceOutput {
	return o
}

func (o GetLaunchConfigurationRootBlockDeviceOutput) ToGetLaunchConfigurationRootBlockDeviceOutputWithContext(ctx context.Context) GetLaunchConfigurationRootBlockDeviceOutput {
	return o
}

// Whether the EBS Volume will be deleted on instance termination.
func (o GetLaunchConfigurationRootBlockDeviceOutput) DeleteOnTermination() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLaunchConfigurationRootBlockDevice) bool { return v.DeleteOnTermination }).(pulumi.BoolOutput)
}

// Whether the volume is Encrypted.
func (o GetLaunchConfigurationRootBlockDeviceOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLaunchConfigurationRootBlockDevice) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

// The provisioned IOPs of the volume.
func (o GetLaunchConfigurationRootBlockDeviceOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v GetLaunchConfigurationRootBlockDevice) int { return v.Iops }).(pulumi.IntOutput)
}

// The Size of the volume.
func (o GetLaunchConfigurationRootBlockDeviceOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetLaunchConfigurationRootBlockDevice) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// The Type of the volume.
func (o GetLaunchConfigurationRootBlockDeviceOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchConfigurationRootBlockDevice) string { return v.VolumeType }).(pulumi.StringOutput)
}

type GetLaunchConfigurationRootBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchConfigurationRootBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchConfigurationRootBlockDevice)(nil)).Elem()
}

func (o GetLaunchConfigurationRootBlockDeviceArrayOutput) ToGetLaunchConfigurationRootBlockDeviceArrayOutput() GetLaunchConfigurationRootBlockDeviceArrayOutput {
	return o
}

func (o GetLaunchConfigurationRootBlockDeviceArrayOutput) ToGetLaunchConfigurationRootBlockDeviceArrayOutputWithContext(ctx context.Context) GetLaunchConfigurationRootBlockDeviceArrayOutput {
	return o
}

func (o GetLaunchConfigurationRootBlockDeviceArrayOutput) Index(i pulumi.IntInput) GetLaunchConfigurationRootBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchConfigurationRootBlockDevice {
		return vs[0].([]GetLaunchConfigurationRootBlockDevice)[vs[1].(int)]
	}).(GetLaunchConfigurationRootBlockDeviceOutput)
}

type GetLaunchTemplateBlockDeviceMapping struct {
	DeviceName  string                                  `pulumi:"deviceName"`
	Ebs         []GetLaunchTemplateBlockDeviceMappingEb `pulumi:"ebs"`
	NoDevice    string                                  `pulumi:"noDevice"`
	VirtualName string                                  `pulumi:"virtualName"`
}

type GetLaunchTemplateBlockDeviceMappingInput interface {
	pulumi.Input

	ToGetLaunchTemplateBlockDeviceMappingOutput() GetLaunchTemplateBlockDeviceMappingOutput
	ToGetLaunchTemplateBlockDeviceMappingOutputWithContext(context.Context) GetLaunchTemplateBlockDeviceMappingOutput
}

type GetLaunchTemplateBlockDeviceMappingArgs struct {
	DeviceName  pulumi.StringInput                              `pulumi:"deviceName"`
	Ebs         GetLaunchTemplateBlockDeviceMappingEbArrayInput `pulumi:"ebs"`
	NoDevice    pulumi.StringInput                              `pulumi:"noDevice"`
	VirtualName pulumi.StringInput                              `pulumi:"virtualName"`
}

func (GetLaunchTemplateBlockDeviceMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateBlockDeviceMapping)(nil)).Elem()
}

func (i GetLaunchTemplateBlockDeviceMappingArgs) ToGetLaunchTemplateBlockDeviceMappingOutput() GetLaunchTemplateBlockDeviceMappingOutput {
	return i.ToGetLaunchTemplateBlockDeviceMappingOutputWithContext(context.Background())
}

func (i GetLaunchTemplateBlockDeviceMappingArgs) ToGetLaunchTemplateBlockDeviceMappingOutputWithContext(ctx context.Context) GetLaunchTemplateBlockDeviceMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateBlockDeviceMappingOutput)
}

type GetLaunchTemplateBlockDeviceMappingArrayInput interface {
	pulumi.Input

	ToGetLaunchTemplateBlockDeviceMappingArrayOutput() GetLaunchTemplateBlockDeviceMappingArrayOutput
	ToGetLaunchTemplateBlockDeviceMappingArrayOutputWithContext(context.Context) GetLaunchTemplateBlockDeviceMappingArrayOutput
}

type GetLaunchTemplateBlockDeviceMappingArray []GetLaunchTemplateBlockDeviceMappingInput

func (GetLaunchTemplateBlockDeviceMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateBlockDeviceMapping)(nil)).Elem()
}

func (i GetLaunchTemplateBlockDeviceMappingArray) ToGetLaunchTemplateBlockDeviceMappingArrayOutput() GetLaunchTemplateBlockDeviceMappingArrayOutput {
	return i.ToGetLaunchTemplateBlockDeviceMappingArrayOutputWithContext(context.Background())
}

func (i GetLaunchTemplateBlockDeviceMappingArray) ToGetLaunchTemplateBlockDeviceMappingArrayOutputWithContext(ctx context.Context) GetLaunchTemplateBlockDeviceMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateBlockDeviceMappingArrayOutput)
}

type GetLaunchTemplateBlockDeviceMappingOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateBlockDeviceMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateBlockDeviceMapping)(nil)).Elem()
}

func (o GetLaunchTemplateBlockDeviceMappingOutput) ToGetLaunchTemplateBlockDeviceMappingOutput() GetLaunchTemplateBlockDeviceMappingOutput {
	return o
}

func (o GetLaunchTemplateBlockDeviceMappingOutput) ToGetLaunchTemplateBlockDeviceMappingOutputWithContext(ctx context.Context) GetLaunchTemplateBlockDeviceMappingOutput {
	return o
}

func (o GetLaunchTemplateBlockDeviceMappingOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateBlockDeviceMapping) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o GetLaunchTemplateBlockDeviceMappingOutput) Ebs() GetLaunchTemplateBlockDeviceMappingEbArrayOutput {
	return o.ApplyT(func(v GetLaunchTemplateBlockDeviceMapping) []GetLaunchTemplateBlockDeviceMappingEb { return v.Ebs }).(GetLaunchTemplateBlockDeviceMappingEbArrayOutput)
}

func (o GetLaunchTemplateBlockDeviceMappingOutput) NoDevice() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateBlockDeviceMapping) string { return v.NoDevice }).(pulumi.StringOutput)
}

func (o GetLaunchTemplateBlockDeviceMappingOutput) VirtualName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateBlockDeviceMapping) string { return v.VirtualName }).(pulumi.StringOutput)
}

type GetLaunchTemplateBlockDeviceMappingArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateBlockDeviceMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateBlockDeviceMapping)(nil)).Elem()
}

func (o GetLaunchTemplateBlockDeviceMappingArrayOutput) ToGetLaunchTemplateBlockDeviceMappingArrayOutput() GetLaunchTemplateBlockDeviceMappingArrayOutput {
	return o
}

func (o GetLaunchTemplateBlockDeviceMappingArrayOutput) ToGetLaunchTemplateBlockDeviceMappingArrayOutputWithContext(ctx context.Context) GetLaunchTemplateBlockDeviceMappingArrayOutput {
	return o
}

func (o GetLaunchTemplateBlockDeviceMappingArrayOutput) Index(i pulumi.IntInput) GetLaunchTemplateBlockDeviceMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchTemplateBlockDeviceMapping {
		return vs[0].([]GetLaunchTemplateBlockDeviceMapping)[vs[1].(int)]
	}).(GetLaunchTemplateBlockDeviceMappingOutput)
}

type GetLaunchTemplateBlockDeviceMappingEb struct {
	DeleteOnTermination string `pulumi:"deleteOnTermination"`
	Encrypted           string `pulumi:"encrypted"`
	Iops                int    `pulumi:"iops"`
	KmsKeyId            string `pulumi:"kmsKeyId"`
	SnapshotId          string `pulumi:"snapshotId"`
	VolumeSize          int    `pulumi:"volumeSize"`
	VolumeType          string `pulumi:"volumeType"`
}

type GetLaunchTemplateBlockDeviceMappingEbInput interface {
	pulumi.Input

	ToGetLaunchTemplateBlockDeviceMappingEbOutput() GetLaunchTemplateBlockDeviceMappingEbOutput
	ToGetLaunchTemplateBlockDeviceMappingEbOutputWithContext(context.Context) GetLaunchTemplateBlockDeviceMappingEbOutput
}

type GetLaunchTemplateBlockDeviceMappingEbArgs struct {
	DeleteOnTermination pulumi.StringInput `pulumi:"deleteOnTermination"`
	Encrypted           pulumi.StringInput `pulumi:"encrypted"`
	Iops                pulumi.IntInput    `pulumi:"iops"`
	KmsKeyId            pulumi.StringInput `pulumi:"kmsKeyId"`
	SnapshotId          pulumi.StringInput `pulumi:"snapshotId"`
	VolumeSize          pulumi.IntInput    `pulumi:"volumeSize"`
	VolumeType          pulumi.StringInput `pulumi:"volumeType"`
}

func (GetLaunchTemplateBlockDeviceMappingEbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateBlockDeviceMappingEb)(nil)).Elem()
}

func (i GetLaunchTemplateBlockDeviceMappingEbArgs) ToGetLaunchTemplateBlockDeviceMappingEbOutput() GetLaunchTemplateBlockDeviceMappingEbOutput {
	return i.ToGetLaunchTemplateBlockDeviceMappingEbOutputWithContext(context.Background())
}

func (i GetLaunchTemplateBlockDeviceMappingEbArgs) ToGetLaunchTemplateBlockDeviceMappingEbOutputWithContext(ctx context.Context) GetLaunchTemplateBlockDeviceMappingEbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateBlockDeviceMappingEbOutput)
}

type GetLaunchTemplateBlockDeviceMappingEbArrayInput interface {
	pulumi.Input

	ToGetLaunchTemplateBlockDeviceMappingEbArrayOutput() GetLaunchTemplateBlockDeviceMappingEbArrayOutput
	ToGetLaunchTemplateBlockDeviceMappingEbArrayOutputWithContext(context.Context) GetLaunchTemplateBlockDeviceMappingEbArrayOutput
}

type GetLaunchTemplateBlockDeviceMappingEbArray []GetLaunchTemplateBlockDeviceMappingEbInput

func (GetLaunchTemplateBlockDeviceMappingEbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateBlockDeviceMappingEb)(nil)).Elem()
}

func (i GetLaunchTemplateBlockDeviceMappingEbArray) ToGetLaunchTemplateBlockDeviceMappingEbArrayOutput() GetLaunchTemplateBlockDeviceMappingEbArrayOutput {
	return i.ToGetLaunchTemplateBlockDeviceMappingEbArrayOutputWithContext(context.Background())
}

func (i GetLaunchTemplateBlockDeviceMappingEbArray) ToGetLaunchTemplateBlockDeviceMappingEbArrayOutputWithContext(ctx context.Context) GetLaunchTemplateBlockDeviceMappingEbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateBlockDeviceMappingEbArrayOutput)
}

type GetLaunchTemplateBlockDeviceMappingEbOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateBlockDeviceMappingEbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateBlockDeviceMappingEb)(nil)).Elem()
}

func (o GetLaunchTemplateBlockDeviceMappingEbOutput) ToGetLaunchTemplateBlockDeviceMappingEbOutput() GetLaunchTemplateBlockDeviceMappingEbOutput {
	return o
}

func (o GetLaunchTemplateBlockDeviceMappingEbOutput) ToGetLaunchTemplateBlockDeviceMappingEbOutputWithContext(ctx context.Context) GetLaunchTemplateBlockDeviceMappingEbOutput {
	return o
}

func (o GetLaunchTemplateBlockDeviceMappingEbOutput) DeleteOnTermination() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateBlockDeviceMappingEb) string { return v.DeleteOnTermination }).(pulumi.StringOutput)
}

func (o GetLaunchTemplateBlockDeviceMappingEbOutput) Encrypted() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateBlockDeviceMappingEb) string { return v.Encrypted }).(pulumi.StringOutput)
}

func (o GetLaunchTemplateBlockDeviceMappingEbOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v GetLaunchTemplateBlockDeviceMappingEb) int { return v.Iops }).(pulumi.IntOutput)
}

func (o GetLaunchTemplateBlockDeviceMappingEbOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateBlockDeviceMappingEb) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

func (o GetLaunchTemplateBlockDeviceMappingEbOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateBlockDeviceMappingEb) string { return v.SnapshotId }).(pulumi.StringOutput)
}

func (o GetLaunchTemplateBlockDeviceMappingEbOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetLaunchTemplateBlockDeviceMappingEb) int { return v.VolumeSize }).(pulumi.IntOutput)
}

func (o GetLaunchTemplateBlockDeviceMappingEbOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateBlockDeviceMappingEb) string { return v.VolumeType }).(pulumi.StringOutput)
}

type GetLaunchTemplateBlockDeviceMappingEbArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateBlockDeviceMappingEbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateBlockDeviceMappingEb)(nil)).Elem()
}

func (o GetLaunchTemplateBlockDeviceMappingEbArrayOutput) ToGetLaunchTemplateBlockDeviceMappingEbArrayOutput() GetLaunchTemplateBlockDeviceMappingEbArrayOutput {
	return o
}

func (o GetLaunchTemplateBlockDeviceMappingEbArrayOutput) ToGetLaunchTemplateBlockDeviceMappingEbArrayOutputWithContext(ctx context.Context) GetLaunchTemplateBlockDeviceMappingEbArrayOutput {
	return o
}

func (o GetLaunchTemplateBlockDeviceMappingEbArrayOutput) Index(i pulumi.IntInput) GetLaunchTemplateBlockDeviceMappingEbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchTemplateBlockDeviceMappingEb {
		return vs[0].([]GetLaunchTemplateBlockDeviceMappingEb)[vs[1].(int)]
	}).(GetLaunchTemplateBlockDeviceMappingEbOutput)
}

type GetLaunchTemplateCreditSpecification struct {
	CpuCredits string `pulumi:"cpuCredits"`
}

type GetLaunchTemplateCreditSpecificationInput interface {
	pulumi.Input

	ToGetLaunchTemplateCreditSpecificationOutput() GetLaunchTemplateCreditSpecificationOutput
	ToGetLaunchTemplateCreditSpecificationOutputWithContext(context.Context) GetLaunchTemplateCreditSpecificationOutput
}

type GetLaunchTemplateCreditSpecificationArgs struct {
	CpuCredits pulumi.StringInput `pulumi:"cpuCredits"`
}

func (GetLaunchTemplateCreditSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateCreditSpecification)(nil)).Elem()
}

func (i GetLaunchTemplateCreditSpecificationArgs) ToGetLaunchTemplateCreditSpecificationOutput() GetLaunchTemplateCreditSpecificationOutput {
	return i.ToGetLaunchTemplateCreditSpecificationOutputWithContext(context.Background())
}

func (i GetLaunchTemplateCreditSpecificationArgs) ToGetLaunchTemplateCreditSpecificationOutputWithContext(ctx context.Context) GetLaunchTemplateCreditSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateCreditSpecificationOutput)
}

type GetLaunchTemplateCreditSpecificationArrayInput interface {
	pulumi.Input

	ToGetLaunchTemplateCreditSpecificationArrayOutput() GetLaunchTemplateCreditSpecificationArrayOutput
	ToGetLaunchTemplateCreditSpecificationArrayOutputWithContext(context.Context) GetLaunchTemplateCreditSpecificationArrayOutput
}

type GetLaunchTemplateCreditSpecificationArray []GetLaunchTemplateCreditSpecificationInput

func (GetLaunchTemplateCreditSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateCreditSpecification)(nil)).Elem()
}

func (i GetLaunchTemplateCreditSpecificationArray) ToGetLaunchTemplateCreditSpecificationArrayOutput() GetLaunchTemplateCreditSpecificationArrayOutput {
	return i.ToGetLaunchTemplateCreditSpecificationArrayOutputWithContext(context.Background())
}

func (i GetLaunchTemplateCreditSpecificationArray) ToGetLaunchTemplateCreditSpecificationArrayOutputWithContext(ctx context.Context) GetLaunchTemplateCreditSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateCreditSpecificationArrayOutput)
}

type GetLaunchTemplateCreditSpecificationOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateCreditSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateCreditSpecification)(nil)).Elem()
}

func (o GetLaunchTemplateCreditSpecificationOutput) ToGetLaunchTemplateCreditSpecificationOutput() GetLaunchTemplateCreditSpecificationOutput {
	return o
}

func (o GetLaunchTemplateCreditSpecificationOutput) ToGetLaunchTemplateCreditSpecificationOutputWithContext(ctx context.Context) GetLaunchTemplateCreditSpecificationOutput {
	return o
}

func (o GetLaunchTemplateCreditSpecificationOutput) CpuCredits() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateCreditSpecification) string { return v.CpuCredits }).(pulumi.StringOutput)
}

type GetLaunchTemplateCreditSpecificationArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateCreditSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateCreditSpecification)(nil)).Elem()
}

func (o GetLaunchTemplateCreditSpecificationArrayOutput) ToGetLaunchTemplateCreditSpecificationArrayOutput() GetLaunchTemplateCreditSpecificationArrayOutput {
	return o
}

func (o GetLaunchTemplateCreditSpecificationArrayOutput) ToGetLaunchTemplateCreditSpecificationArrayOutputWithContext(ctx context.Context) GetLaunchTemplateCreditSpecificationArrayOutput {
	return o
}

func (o GetLaunchTemplateCreditSpecificationArrayOutput) Index(i pulumi.IntInput) GetLaunchTemplateCreditSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchTemplateCreditSpecification {
		return vs[0].([]GetLaunchTemplateCreditSpecification)[vs[1].(int)]
	}).(GetLaunchTemplateCreditSpecificationOutput)
}

type GetLaunchTemplateElasticGpuSpecification struct {
	Type string `pulumi:"type"`
}

type GetLaunchTemplateElasticGpuSpecificationInput interface {
	pulumi.Input

	ToGetLaunchTemplateElasticGpuSpecificationOutput() GetLaunchTemplateElasticGpuSpecificationOutput
	ToGetLaunchTemplateElasticGpuSpecificationOutputWithContext(context.Context) GetLaunchTemplateElasticGpuSpecificationOutput
}

type GetLaunchTemplateElasticGpuSpecificationArgs struct {
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetLaunchTemplateElasticGpuSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateElasticGpuSpecification)(nil)).Elem()
}

func (i GetLaunchTemplateElasticGpuSpecificationArgs) ToGetLaunchTemplateElasticGpuSpecificationOutput() GetLaunchTemplateElasticGpuSpecificationOutput {
	return i.ToGetLaunchTemplateElasticGpuSpecificationOutputWithContext(context.Background())
}

func (i GetLaunchTemplateElasticGpuSpecificationArgs) ToGetLaunchTemplateElasticGpuSpecificationOutputWithContext(ctx context.Context) GetLaunchTemplateElasticGpuSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateElasticGpuSpecificationOutput)
}

type GetLaunchTemplateElasticGpuSpecificationArrayInput interface {
	pulumi.Input

	ToGetLaunchTemplateElasticGpuSpecificationArrayOutput() GetLaunchTemplateElasticGpuSpecificationArrayOutput
	ToGetLaunchTemplateElasticGpuSpecificationArrayOutputWithContext(context.Context) GetLaunchTemplateElasticGpuSpecificationArrayOutput
}

type GetLaunchTemplateElasticGpuSpecificationArray []GetLaunchTemplateElasticGpuSpecificationInput

func (GetLaunchTemplateElasticGpuSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateElasticGpuSpecification)(nil)).Elem()
}

func (i GetLaunchTemplateElasticGpuSpecificationArray) ToGetLaunchTemplateElasticGpuSpecificationArrayOutput() GetLaunchTemplateElasticGpuSpecificationArrayOutput {
	return i.ToGetLaunchTemplateElasticGpuSpecificationArrayOutputWithContext(context.Background())
}

func (i GetLaunchTemplateElasticGpuSpecificationArray) ToGetLaunchTemplateElasticGpuSpecificationArrayOutputWithContext(ctx context.Context) GetLaunchTemplateElasticGpuSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateElasticGpuSpecificationArrayOutput)
}

type GetLaunchTemplateElasticGpuSpecificationOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateElasticGpuSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateElasticGpuSpecification)(nil)).Elem()
}

func (o GetLaunchTemplateElasticGpuSpecificationOutput) ToGetLaunchTemplateElasticGpuSpecificationOutput() GetLaunchTemplateElasticGpuSpecificationOutput {
	return o
}

func (o GetLaunchTemplateElasticGpuSpecificationOutput) ToGetLaunchTemplateElasticGpuSpecificationOutputWithContext(ctx context.Context) GetLaunchTemplateElasticGpuSpecificationOutput {
	return o
}

func (o GetLaunchTemplateElasticGpuSpecificationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateElasticGpuSpecification) string { return v.Type }).(pulumi.StringOutput)
}

type GetLaunchTemplateElasticGpuSpecificationArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateElasticGpuSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateElasticGpuSpecification)(nil)).Elem()
}

func (o GetLaunchTemplateElasticGpuSpecificationArrayOutput) ToGetLaunchTemplateElasticGpuSpecificationArrayOutput() GetLaunchTemplateElasticGpuSpecificationArrayOutput {
	return o
}

func (o GetLaunchTemplateElasticGpuSpecificationArrayOutput) ToGetLaunchTemplateElasticGpuSpecificationArrayOutputWithContext(ctx context.Context) GetLaunchTemplateElasticGpuSpecificationArrayOutput {
	return o
}

func (o GetLaunchTemplateElasticGpuSpecificationArrayOutput) Index(i pulumi.IntInput) GetLaunchTemplateElasticGpuSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchTemplateElasticGpuSpecification {
		return vs[0].([]GetLaunchTemplateElasticGpuSpecification)[vs[1].(int)]
	}).(GetLaunchTemplateElasticGpuSpecificationOutput)
}

type GetLaunchTemplateFilter struct {
	// The name of the filter field. Valid values can be found in the [EC2 DescribeLaunchTemplates API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

type GetLaunchTemplateFilterInput interface {
	pulumi.Input

	ToGetLaunchTemplateFilterOutput() GetLaunchTemplateFilterOutput
	ToGetLaunchTemplateFilterOutputWithContext(context.Context) GetLaunchTemplateFilterOutput
}

type GetLaunchTemplateFilterArgs struct {
	// The name of the filter field. Valid values can be found in the [EC2 DescribeLaunchTemplates API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetLaunchTemplateFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateFilter)(nil)).Elem()
}

func (i GetLaunchTemplateFilterArgs) ToGetLaunchTemplateFilterOutput() GetLaunchTemplateFilterOutput {
	return i.ToGetLaunchTemplateFilterOutputWithContext(context.Background())
}

func (i GetLaunchTemplateFilterArgs) ToGetLaunchTemplateFilterOutputWithContext(ctx context.Context) GetLaunchTemplateFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateFilterOutput)
}

type GetLaunchTemplateFilterArrayInput interface {
	pulumi.Input

	ToGetLaunchTemplateFilterArrayOutput() GetLaunchTemplateFilterArrayOutput
	ToGetLaunchTemplateFilterArrayOutputWithContext(context.Context) GetLaunchTemplateFilterArrayOutput
}

type GetLaunchTemplateFilterArray []GetLaunchTemplateFilterInput

func (GetLaunchTemplateFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateFilter)(nil)).Elem()
}

func (i GetLaunchTemplateFilterArray) ToGetLaunchTemplateFilterArrayOutput() GetLaunchTemplateFilterArrayOutput {
	return i.ToGetLaunchTemplateFilterArrayOutputWithContext(context.Background())
}

func (i GetLaunchTemplateFilterArray) ToGetLaunchTemplateFilterArrayOutputWithContext(ctx context.Context) GetLaunchTemplateFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateFilterArrayOutput)
}

type GetLaunchTemplateFilterOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateFilter)(nil)).Elem()
}

func (o GetLaunchTemplateFilterOutput) ToGetLaunchTemplateFilterOutput() GetLaunchTemplateFilterOutput {
	return o
}

func (o GetLaunchTemplateFilterOutput) ToGetLaunchTemplateFilterOutputWithContext(ctx context.Context) GetLaunchTemplateFilterOutput {
	return o
}

// The name of the filter field. Valid values can be found in the [EC2 DescribeLaunchTemplates API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html).
func (o GetLaunchTemplateFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetLaunchTemplateFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLaunchTemplateFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetLaunchTemplateFilterArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateFilter)(nil)).Elem()
}

func (o GetLaunchTemplateFilterArrayOutput) ToGetLaunchTemplateFilterArrayOutput() GetLaunchTemplateFilterArrayOutput {
	return o
}

func (o GetLaunchTemplateFilterArrayOutput) ToGetLaunchTemplateFilterArrayOutputWithContext(ctx context.Context) GetLaunchTemplateFilterArrayOutput {
	return o
}

func (o GetLaunchTemplateFilterArrayOutput) Index(i pulumi.IntInput) GetLaunchTemplateFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchTemplateFilter {
		return vs[0].([]GetLaunchTemplateFilter)[vs[1].(int)]
	}).(GetLaunchTemplateFilterOutput)
}

type GetLaunchTemplateFilterArgs struct {
	// The name of the filter field. Valid values can be found in the [EC2 DescribeLaunchTemplates API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

type GetLaunchTemplateFilterArgsInput interface {
	pulumi.Input

	ToGetLaunchTemplateFilterArgsOutput() GetLaunchTemplateFilterArgsOutput
	ToGetLaunchTemplateFilterArgsOutputWithContext(context.Context) GetLaunchTemplateFilterArgsOutput
}

type GetLaunchTemplateFilterArgsArgs struct {
	// The name of the filter field. Valid values can be found in the [EC2 DescribeLaunchTemplates API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetLaunchTemplateFilterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateFilterArgs)(nil)).Elem()
}

func (i GetLaunchTemplateFilterArgsArgs) ToGetLaunchTemplateFilterArgsOutput() GetLaunchTemplateFilterArgsOutput {
	return i.ToGetLaunchTemplateFilterArgsOutputWithContext(context.Background())
}

func (i GetLaunchTemplateFilterArgsArgs) ToGetLaunchTemplateFilterArgsOutputWithContext(ctx context.Context) GetLaunchTemplateFilterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateFilterArgsOutput)
}

type GetLaunchTemplateFilterArgsArrayInput interface {
	pulumi.Input

	ToGetLaunchTemplateFilterArgsArrayOutput() GetLaunchTemplateFilterArgsArrayOutput
	ToGetLaunchTemplateFilterArgsArrayOutputWithContext(context.Context) GetLaunchTemplateFilterArgsArrayOutput
}

type GetLaunchTemplateFilterArgsArray []GetLaunchTemplateFilterArgsInput

func (GetLaunchTemplateFilterArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateFilterArgs)(nil)).Elem()
}

func (i GetLaunchTemplateFilterArgsArray) ToGetLaunchTemplateFilterArgsArrayOutput() GetLaunchTemplateFilterArgsArrayOutput {
	return i.ToGetLaunchTemplateFilterArgsArrayOutputWithContext(context.Background())
}

func (i GetLaunchTemplateFilterArgsArray) ToGetLaunchTemplateFilterArgsArrayOutputWithContext(ctx context.Context) GetLaunchTemplateFilterArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateFilterArgsArrayOutput)
}

type GetLaunchTemplateFilterArgsOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateFilterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateFilterArgs)(nil)).Elem()
}

func (o GetLaunchTemplateFilterArgsOutput) ToGetLaunchTemplateFilterArgsOutput() GetLaunchTemplateFilterArgsOutput {
	return o
}

func (o GetLaunchTemplateFilterArgsOutput) ToGetLaunchTemplateFilterArgsOutputWithContext(ctx context.Context) GetLaunchTemplateFilterArgsOutput {
	return o
}

// The name of the filter field. Valid values can be found in the [EC2 DescribeLaunchTemplates API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html).
func (o GetLaunchTemplateFilterArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateFilterArgs) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetLaunchTemplateFilterArgsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLaunchTemplateFilterArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetLaunchTemplateFilterArgsArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateFilterArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateFilterArgs)(nil)).Elem()
}

func (o GetLaunchTemplateFilterArgsArrayOutput) ToGetLaunchTemplateFilterArgsArrayOutput() GetLaunchTemplateFilterArgsArrayOutput {
	return o
}

func (o GetLaunchTemplateFilterArgsArrayOutput) ToGetLaunchTemplateFilterArgsArrayOutputWithContext(ctx context.Context) GetLaunchTemplateFilterArgsArrayOutput {
	return o
}

func (o GetLaunchTemplateFilterArgsArrayOutput) Index(i pulumi.IntInput) GetLaunchTemplateFilterArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchTemplateFilterArgs {
		return vs[0].([]GetLaunchTemplateFilterArgs)[vs[1].(int)]
	}).(GetLaunchTemplateFilterArgsOutput)
}

type GetLaunchTemplateHibernationOption struct {
	Configured bool `pulumi:"configured"`
}

type GetLaunchTemplateHibernationOptionInput interface {
	pulumi.Input

	ToGetLaunchTemplateHibernationOptionOutput() GetLaunchTemplateHibernationOptionOutput
	ToGetLaunchTemplateHibernationOptionOutputWithContext(context.Context) GetLaunchTemplateHibernationOptionOutput
}

type GetLaunchTemplateHibernationOptionArgs struct {
	Configured pulumi.BoolInput `pulumi:"configured"`
}

func (GetLaunchTemplateHibernationOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateHibernationOption)(nil)).Elem()
}

func (i GetLaunchTemplateHibernationOptionArgs) ToGetLaunchTemplateHibernationOptionOutput() GetLaunchTemplateHibernationOptionOutput {
	return i.ToGetLaunchTemplateHibernationOptionOutputWithContext(context.Background())
}

func (i GetLaunchTemplateHibernationOptionArgs) ToGetLaunchTemplateHibernationOptionOutputWithContext(ctx context.Context) GetLaunchTemplateHibernationOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateHibernationOptionOutput)
}

type GetLaunchTemplateHibernationOptionArrayInput interface {
	pulumi.Input

	ToGetLaunchTemplateHibernationOptionArrayOutput() GetLaunchTemplateHibernationOptionArrayOutput
	ToGetLaunchTemplateHibernationOptionArrayOutputWithContext(context.Context) GetLaunchTemplateHibernationOptionArrayOutput
}

type GetLaunchTemplateHibernationOptionArray []GetLaunchTemplateHibernationOptionInput

func (GetLaunchTemplateHibernationOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateHibernationOption)(nil)).Elem()
}

func (i GetLaunchTemplateHibernationOptionArray) ToGetLaunchTemplateHibernationOptionArrayOutput() GetLaunchTemplateHibernationOptionArrayOutput {
	return i.ToGetLaunchTemplateHibernationOptionArrayOutputWithContext(context.Background())
}

func (i GetLaunchTemplateHibernationOptionArray) ToGetLaunchTemplateHibernationOptionArrayOutputWithContext(ctx context.Context) GetLaunchTemplateHibernationOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateHibernationOptionArrayOutput)
}

type GetLaunchTemplateHibernationOptionOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateHibernationOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateHibernationOption)(nil)).Elem()
}

func (o GetLaunchTemplateHibernationOptionOutput) ToGetLaunchTemplateHibernationOptionOutput() GetLaunchTemplateHibernationOptionOutput {
	return o
}

func (o GetLaunchTemplateHibernationOptionOutput) ToGetLaunchTemplateHibernationOptionOutputWithContext(ctx context.Context) GetLaunchTemplateHibernationOptionOutput {
	return o
}

func (o GetLaunchTemplateHibernationOptionOutput) Configured() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLaunchTemplateHibernationOption) bool { return v.Configured }).(pulumi.BoolOutput)
}

type GetLaunchTemplateHibernationOptionArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateHibernationOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateHibernationOption)(nil)).Elem()
}

func (o GetLaunchTemplateHibernationOptionArrayOutput) ToGetLaunchTemplateHibernationOptionArrayOutput() GetLaunchTemplateHibernationOptionArrayOutput {
	return o
}

func (o GetLaunchTemplateHibernationOptionArrayOutput) ToGetLaunchTemplateHibernationOptionArrayOutputWithContext(ctx context.Context) GetLaunchTemplateHibernationOptionArrayOutput {
	return o
}

func (o GetLaunchTemplateHibernationOptionArrayOutput) Index(i pulumi.IntInput) GetLaunchTemplateHibernationOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchTemplateHibernationOption {
		return vs[0].([]GetLaunchTemplateHibernationOption)[vs[1].(int)]
	}).(GetLaunchTemplateHibernationOptionOutput)
}

type GetLaunchTemplateIamInstanceProfile struct {
	// Amazon Resource Name (ARN) of the launch template.
	Arn string `pulumi:"arn"`
	// The name of the filter field. Valid values can be found in the [EC2 DescribeLaunchTemplates API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html).
	Name string `pulumi:"name"`
}

type GetLaunchTemplateIamInstanceProfileInput interface {
	pulumi.Input

	ToGetLaunchTemplateIamInstanceProfileOutput() GetLaunchTemplateIamInstanceProfileOutput
	ToGetLaunchTemplateIamInstanceProfileOutputWithContext(context.Context) GetLaunchTemplateIamInstanceProfileOutput
}

type GetLaunchTemplateIamInstanceProfileArgs struct {
	// Amazon Resource Name (ARN) of the launch template.
	Arn pulumi.StringInput `pulumi:"arn"`
	// The name of the filter field. Valid values can be found in the [EC2 DescribeLaunchTemplates API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html).
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetLaunchTemplateIamInstanceProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateIamInstanceProfile)(nil)).Elem()
}

func (i GetLaunchTemplateIamInstanceProfileArgs) ToGetLaunchTemplateIamInstanceProfileOutput() GetLaunchTemplateIamInstanceProfileOutput {
	return i.ToGetLaunchTemplateIamInstanceProfileOutputWithContext(context.Background())
}

func (i GetLaunchTemplateIamInstanceProfileArgs) ToGetLaunchTemplateIamInstanceProfileOutputWithContext(ctx context.Context) GetLaunchTemplateIamInstanceProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateIamInstanceProfileOutput)
}

type GetLaunchTemplateIamInstanceProfileArrayInput interface {
	pulumi.Input

	ToGetLaunchTemplateIamInstanceProfileArrayOutput() GetLaunchTemplateIamInstanceProfileArrayOutput
	ToGetLaunchTemplateIamInstanceProfileArrayOutputWithContext(context.Context) GetLaunchTemplateIamInstanceProfileArrayOutput
}

type GetLaunchTemplateIamInstanceProfileArray []GetLaunchTemplateIamInstanceProfileInput

func (GetLaunchTemplateIamInstanceProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateIamInstanceProfile)(nil)).Elem()
}

func (i GetLaunchTemplateIamInstanceProfileArray) ToGetLaunchTemplateIamInstanceProfileArrayOutput() GetLaunchTemplateIamInstanceProfileArrayOutput {
	return i.ToGetLaunchTemplateIamInstanceProfileArrayOutputWithContext(context.Background())
}

func (i GetLaunchTemplateIamInstanceProfileArray) ToGetLaunchTemplateIamInstanceProfileArrayOutputWithContext(ctx context.Context) GetLaunchTemplateIamInstanceProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateIamInstanceProfileArrayOutput)
}

type GetLaunchTemplateIamInstanceProfileOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateIamInstanceProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateIamInstanceProfile)(nil)).Elem()
}

func (o GetLaunchTemplateIamInstanceProfileOutput) ToGetLaunchTemplateIamInstanceProfileOutput() GetLaunchTemplateIamInstanceProfileOutput {
	return o
}

func (o GetLaunchTemplateIamInstanceProfileOutput) ToGetLaunchTemplateIamInstanceProfileOutputWithContext(ctx context.Context) GetLaunchTemplateIamInstanceProfileOutput {
	return o
}

// Amazon Resource Name (ARN) of the launch template.
func (o GetLaunchTemplateIamInstanceProfileOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateIamInstanceProfile) string { return v.Arn }).(pulumi.StringOutput)
}

// The name of the filter field. Valid values can be found in the [EC2 DescribeLaunchTemplates API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html).
func (o GetLaunchTemplateIamInstanceProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateIamInstanceProfile) string { return v.Name }).(pulumi.StringOutput)
}

type GetLaunchTemplateIamInstanceProfileArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateIamInstanceProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateIamInstanceProfile)(nil)).Elem()
}

func (o GetLaunchTemplateIamInstanceProfileArrayOutput) ToGetLaunchTemplateIamInstanceProfileArrayOutput() GetLaunchTemplateIamInstanceProfileArrayOutput {
	return o
}

func (o GetLaunchTemplateIamInstanceProfileArrayOutput) ToGetLaunchTemplateIamInstanceProfileArrayOutputWithContext(ctx context.Context) GetLaunchTemplateIamInstanceProfileArrayOutput {
	return o
}

func (o GetLaunchTemplateIamInstanceProfileArrayOutput) Index(i pulumi.IntInput) GetLaunchTemplateIamInstanceProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchTemplateIamInstanceProfile {
		return vs[0].([]GetLaunchTemplateIamInstanceProfile)[vs[1].(int)]
	}).(GetLaunchTemplateIamInstanceProfileOutput)
}

type GetLaunchTemplateInstanceMarketOption struct {
	MarketType  string                                            `pulumi:"marketType"`
	SpotOptions []GetLaunchTemplateInstanceMarketOptionSpotOption `pulumi:"spotOptions"`
}

type GetLaunchTemplateInstanceMarketOptionInput interface {
	pulumi.Input

	ToGetLaunchTemplateInstanceMarketOptionOutput() GetLaunchTemplateInstanceMarketOptionOutput
	ToGetLaunchTemplateInstanceMarketOptionOutputWithContext(context.Context) GetLaunchTemplateInstanceMarketOptionOutput
}

type GetLaunchTemplateInstanceMarketOptionArgs struct {
	MarketType  pulumi.StringInput                                        `pulumi:"marketType"`
	SpotOptions GetLaunchTemplateInstanceMarketOptionSpotOptionArrayInput `pulumi:"spotOptions"`
}

func (GetLaunchTemplateInstanceMarketOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceMarketOption)(nil)).Elem()
}

func (i GetLaunchTemplateInstanceMarketOptionArgs) ToGetLaunchTemplateInstanceMarketOptionOutput() GetLaunchTemplateInstanceMarketOptionOutput {
	return i.ToGetLaunchTemplateInstanceMarketOptionOutputWithContext(context.Background())
}

func (i GetLaunchTemplateInstanceMarketOptionArgs) ToGetLaunchTemplateInstanceMarketOptionOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceMarketOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateInstanceMarketOptionOutput)
}

type GetLaunchTemplateInstanceMarketOptionArrayInput interface {
	pulumi.Input

	ToGetLaunchTemplateInstanceMarketOptionArrayOutput() GetLaunchTemplateInstanceMarketOptionArrayOutput
	ToGetLaunchTemplateInstanceMarketOptionArrayOutputWithContext(context.Context) GetLaunchTemplateInstanceMarketOptionArrayOutput
}

type GetLaunchTemplateInstanceMarketOptionArray []GetLaunchTemplateInstanceMarketOptionInput

func (GetLaunchTemplateInstanceMarketOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateInstanceMarketOption)(nil)).Elem()
}

func (i GetLaunchTemplateInstanceMarketOptionArray) ToGetLaunchTemplateInstanceMarketOptionArrayOutput() GetLaunchTemplateInstanceMarketOptionArrayOutput {
	return i.ToGetLaunchTemplateInstanceMarketOptionArrayOutputWithContext(context.Background())
}

func (i GetLaunchTemplateInstanceMarketOptionArray) ToGetLaunchTemplateInstanceMarketOptionArrayOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceMarketOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateInstanceMarketOptionArrayOutput)
}

type GetLaunchTemplateInstanceMarketOptionOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateInstanceMarketOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceMarketOption)(nil)).Elem()
}

func (o GetLaunchTemplateInstanceMarketOptionOutput) ToGetLaunchTemplateInstanceMarketOptionOutput() GetLaunchTemplateInstanceMarketOptionOutput {
	return o
}

func (o GetLaunchTemplateInstanceMarketOptionOutput) ToGetLaunchTemplateInstanceMarketOptionOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceMarketOptionOutput {
	return o
}

func (o GetLaunchTemplateInstanceMarketOptionOutput) MarketType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateInstanceMarketOption) string { return v.MarketType }).(pulumi.StringOutput)
}

func (o GetLaunchTemplateInstanceMarketOptionOutput) SpotOptions() GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput {
	return o.ApplyT(func(v GetLaunchTemplateInstanceMarketOption) []GetLaunchTemplateInstanceMarketOptionSpotOption {
		return v.SpotOptions
	}).(GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput)
}

type GetLaunchTemplateInstanceMarketOptionArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateInstanceMarketOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateInstanceMarketOption)(nil)).Elem()
}

func (o GetLaunchTemplateInstanceMarketOptionArrayOutput) ToGetLaunchTemplateInstanceMarketOptionArrayOutput() GetLaunchTemplateInstanceMarketOptionArrayOutput {
	return o
}

func (o GetLaunchTemplateInstanceMarketOptionArrayOutput) ToGetLaunchTemplateInstanceMarketOptionArrayOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceMarketOptionArrayOutput {
	return o
}

func (o GetLaunchTemplateInstanceMarketOptionArrayOutput) Index(i pulumi.IntInput) GetLaunchTemplateInstanceMarketOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchTemplateInstanceMarketOption {
		return vs[0].([]GetLaunchTemplateInstanceMarketOption)[vs[1].(int)]
	}).(GetLaunchTemplateInstanceMarketOptionOutput)
}

type GetLaunchTemplateInstanceMarketOptionSpotOption struct {
	BlockDurationMinutes         int    `pulumi:"blockDurationMinutes"`
	InstanceInterruptionBehavior string `pulumi:"instanceInterruptionBehavior"`
	MaxPrice                     string `pulumi:"maxPrice"`
	SpotInstanceType             string `pulumi:"spotInstanceType"`
	ValidUntil                   string `pulumi:"validUntil"`
}

type GetLaunchTemplateInstanceMarketOptionSpotOptionInput interface {
	pulumi.Input

	ToGetLaunchTemplateInstanceMarketOptionSpotOptionOutput() GetLaunchTemplateInstanceMarketOptionSpotOptionOutput
	ToGetLaunchTemplateInstanceMarketOptionSpotOptionOutputWithContext(context.Context) GetLaunchTemplateInstanceMarketOptionSpotOptionOutput
}

type GetLaunchTemplateInstanceMarketOptionSpotOptionArgs struct {
	BlockDurationMinutes         pulumi.IntInput    `pulumi:"blockDurationMinutes"`
	InstanceInterruptionBehavior pulumi.StringInput `pulumi:"instanceInterruptionBehavior"`
	MaxPrice                     pulumi.StringInput `pulumi:"maxPrice"`
	SpotInstanceType             pulumi.StringInput `pulumi:"spotInstanceType"`
	ValidUntil                   pulumi.StringInput `pulumi:"validUntil"`
}

func (GetLaunchTemplateInstanceMarketOptionSpotOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceMarketOptionSpotOption)(nil)).Elem()
}

func (i GetLaunchTemplateInstanceMarketOptionSpotOptionArgs) ToGetLaunchTemplateInstanceMarketOptionSpotOptionOutput() GetLaunchTemplateInstanceMarketOptionSpotOptionOutput {
	return i.ToGetLaunchTemplateInstanceMarketOptionSpotOptionOutputWithContext(context.Background())
}

func (i GetLaunchTemplateInstanceMarketOptionSpotOptionArgs) ToGetLaunchTemplateInstanceMarketOptionSpotOptionOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceMarketOptionSpotOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateInstanceMarketOptionSpotOptionOutput)
}

type GetLaunchTemplateInstanceMarketOptionSpotOptionArrayInput interface {
	pulumi.Input

	ToGetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput() GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput
	ToGetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutputWithContext(context.Context) GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput
}

type GetLaunchTemplateInstanceMarketOptionSpotOptionArray []GetLaunchTemplateInstanceMarketOptionSpotOptionInput

func (GetLaunchTemplateInstanceMarketOptionSpotOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateInstanceMarketOptionSpotOption)(nil)).Elem()
}

func (i GetLaunchTemplateInstanceMarketOptionSpotOptionArray) ToGetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput() GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput {
	return i.ToGetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutputWithContext(context.Background())
}

func (i GetLaunchTemplateInstanceMarketOptionSpotOptionArray) ToGetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput)
}

type GetLaunchTemplateInstanceMarketOptionSpotOptionOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateInstanceMarketOptionSpotOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceMarketOptionSpotOption)(nil)).Elem()
}

func (o GetLaunchTemplateInstanceMarketOptionSpotOptionOutput) ToGetLaunchTemplateInstanceMarketOptionSpotOptionOutput() GetLaunchTemplateInstanceMarketOptionSpotOptionOutput {
	return o
}

func (o GetLaunchTemplateInstanceMarketOptionSpotOptionOutput) ToGetLaunchTemplateInstanceMarketOptionSpotOptionOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceMarketOptionSpotOptionOutput {
	return o
}

func (o GetLaunchTemplateInstanceMarketOptionSpotOptionOutput) BlockDurationMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetLaunchTemplateInstanceMarketOptionSpotOption) int { return v.BlockDurationMinutes }).(pulumi.IntOutput)
}

func (o GetLaunchTemplateInstanceMarketOptionSpotOptionOutput) InstanceInterruptionBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateInstanceMarketOptionSpotOption) string { return v.InstanceInterruptionBehavior }).(pulumi.StringOutput)
}

func (o GetLaunchTemplateInstanceMarketOptionSpotOptionOutput) MaxPrice() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateInstanceMarketOptionSpotOption) string { return v.MaxPrice }).(pulumi.StringOutput)
}

func (o GetLaunchTemplateInstanceMarketOptionSpotOptionOutput) SpotInstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateInstanceMarketOptionSpotOption) string { return v.SpotInstanceType }).(pulumi.StringOutput)
}

func (o GetLaunchTemplateInstanceMarketOptionSpotOptionOutput) ValidUntil() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateInstanceMarketOptionSpotOption) string { return v.ValidUntil }).(pulumi.StringOutput)
}

type GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateInstanceMarketOptionSpotOption)(nil)).Elem()
}

func (o GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput) ToGetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput() GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput {
	return o
}

func (o GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput) ToGetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput {
	return o
}

func (o GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput) Index(i pulumi.IntInput) GetLaunchTemplateInstanceMarketOptionSpotOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchTemplateInstanceMarketOptionSpotOption {
		return vs[0].([]GetLaunchTemplateInstanceMarketOptionSpotOption)[vs[1].(int)]
	}).(GetLaunchTemplateInstanceMarketOptionSpotOptionOutput)
}

type GetLaunchTemplateMetadataOption struct {
	// The state of the metadata service: `enabled`, `disabled`.
	HttpEndpoint string `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests.
	HttpPutResponseHopLimit int `pulumi:"httpPutResponseHopLimit"`
	// If session tokens are required: `optional`, `required`.
	HttpTokens string `pulumi:"httpTokens"`
}

type GetLaunchTemplateMetadataOptionInput interface {
	pulumi.Input

	ToGetLaunchTemplateMetadataOptionOutput() GetLaunchTemplateMetadataOptionOutput
	ToGetLaunchTemplateMetadataOptionOutputWithContext(context.Context) GetLaunchTemplateMetadataOptionOutput
}

type GetLaunchTemplateMetadataOptionArgs struct {
	// The state of the metadata service: `enabled`, `disabled`.
	HttpEndpoint pulumi.StringInput `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests.
	HttpPutResponseHopLimit pulumi.IntInput `pulumi:"httpPutResponseHopLimit"`
	// If session tokens are required: `optional`, `required`.
	HttpTokens pulumi.StringInput `pulumi:"httpTokens"`
}

func (GetLaunchTemplateMetadataOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateMetadataOption)(nil)).Elem()
}

func (i GetLaunchTemplateMetadataOptionArgs) ToGetLaunchTemplateMetadataOptionOutput() GetLaunchTemplateMetadataOptionOutput {
	return i.ToGetLaunchTemplateMetadataOptionOutputWithContext(context.Background())
}

func (i GetLaunchTemplateMetadataOptionArgs) ToGetLaunchTemplateMetadataOptionOutputWithContext(ctx context.Context) GetLaunchTemplateMetadataOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateMetadataOptionOutput)
}

type GetLaunchTemplateMetadataOptionArrayInput interface {
	pulumi.Input

	ToGetLaunchTemplateMetadataOptionArrayOutput() GetLaunchTemplateMetadataOptionArrayOutput
	ToGetLaunchTemplateMetadataOptionArrayOutputWithContext(context.Context) GetLaunchTemplateMetadataOptionArrayOutput
}

type GetLaunchTemplateMetadataOptionArray []GetLaunchTemplateMetadataOptionInput

func (GetLaunchTemplateMetadataOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateMetadataOption)(nil)).Elem()
}

func (i GetLaunchTemplateMetadataOptionArray) ToGetLaunchTemplateMetadataOptionArrayOutput() GetLaunchTemplateMetadataOptionArrayOutput {
	return i.ToGetLaunchTemplateMetadataOptionArrayOutputWithContext(context.Background())
}

func (i GetLaunchTemplateMetadataOptionArray) ToGetLaunchTemplateMetadataOptionArrayOutputWithContext(ctx context.Context) GetLaunchTemplateMetadataOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateMetadataOptionArrayOutput)
}

type GetLaunchTemplateMetadataOptionOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateMetadataOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateMetadataOption)(nil)).Elem()
}

func (o GetLaunchTemplateMetadataOptionOutput) ToGetLaunchTemplateMetadataOptionOutput() GetLaunchTemplateMetadataOptionOutput {
	return o
}

func (o GetLaunchTemplateMetadataOptionOutput) ToGetLaunchTemplateMetadataOptionOutputWithContext(ctx context.Context) GetLaunchTemplateMetadataOptionOutput {
	return o
}

// The state of the metadata service: `enabled`, `disabled`.
func (o GetLaunchTemplateMetadataOptionOutput) HttpEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateMetadataOption) string { return v.HttpEndpoint }).(pulumi.StringOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests.
func (o GetLaunchTemplateMetadataOptionOutput) HttpPutResponseHopLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetLaunchTemplateMetadataOption) int { return v.HttpPutResponseHopLimit }).(pulumi.IntOutput)
}

// If session tokens are required: `optional`, `required`.
func (o GetLaunchTemplateMetadataOptionOutput) HttpTokens() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateMetadataOption) string { return v.HttpTokens }).(pulumi.StringOutput)
}

type GetLaunchTemplateMetadataOptionArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateMetadataOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateMetadataOption)(nil)).Elem()
}

func (o GetLaunchTemplateMetadataOptionArrayOutput) ToGetLaunchTemplateMetadataOptionArrayOutput() GetLaunchTemplateMetadataOptionArrayOutput {
	return o
}

func (o GetLaunchTemplateMetadataOptionArrayOutput) ToGetLaunchTemplateMetadataOptionArrayOutputWithContext(ctx context.Context) GetLaunchTemplateMetadataOptionArrayOutput {
	return o
}

func (o GetLaunchTemplateMetadataOptionArrayOutput) Index(i pulumi.IntInput) GetLaunchTemplateMetadataOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchTemplateMetadataOption {
		return vs[0].([]GetLaunchTemplateMetadataOption)[vs[1].(int)]
	}).(GetLaunchTemplateMetadataOptionOutput)
}

type GetLaunchTemplateMonitoring struct {
	Enabled bool `pulumi:"enabled"`
}

type GetLaunchTemplateMonitoringInput interface {
	pulumi.Input

	ToGetLaunchTemplateMonitoringOutput() GetLaunchTemplateMonitoringOutput
	ToGetLaunchTemplateMonitoringOutputWithContext(context.Context) GetLaunchTemplateMonitoringOutput
}

type GetLaunchTemplateMonitoringArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetLaunchTemplateMonitoringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateMonitoring)(nil)).Elem()
}

func (i GetLaunchTemplateMonitoringArgs) ToGetLaunchTemplateMonitoringOutput() GetLaunchTemplateMonitoringOutput {
	return i.ToGetLaunchTemplateMonitoringOutputWithContext(context.Background())
}

func (i GetLaunchTemplateMonitoringArgs) ToGetLaunchTemplateMonitoringOutputWithContext(ctx context.Context) GetLaunchTemplateMonitoringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateMonitoringOutput)
}

type GetLaunchTemplateMonitoringArrayInput interface {
	pulumi.Input

	ToGetLaunchTemplateMonitoringArrayOutput() GetLaunchTemplateMonitoringArrayOutput
	ToGetLaunchTemplateMonitoringArrayOutputWithContext(context.Context) GetLaunchTemplateMonitoringArrayOutput
}

type GetLaunchTemplateMonitoringArray []GetLaunchTemplateMonitoringInput

func (GetLaunchTemplateMonitoringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateMonitoring)(nil)).Elem()
}

func (i GetLaunchTemplateMonitoringArray) ToGetLaunchTemplateMonitoringArrayOutput() GetLaunchTemplateMonitoringArrayOutput {
	return i.ToGetLaunchTemplateMonitoringArrayOutputWithContext(context.Background())
}

func (i GetLaunchTemplateMonitoringArray) ToGetLaunchTemplateMonitoringArrayOutputWithContext(ctx context.Context) GetLaunchTemplateMonitoringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateMonitoringArrayOutput)
}

type GetLaunchTemplateMonitoringOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateMonitoringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateMonitoring)(nil)).Elem()
}

func (o GetLaunchTemplateMonitoringOutput) ToGetLaunchTemplateMonitoringOutput() GetLaunchTemplateMonitoringOutput {
	return o
}

func (o GetLaunchTemplateMonitoringOutput) ToGetLaunchTemplateMonitoringOutputWithContext(ctx context.Context) GetLaunchTemplateMonitoringOutput {
	return o
}

func (o GetLaunchTemplateMonitoringOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLaunchTemplateMonitoring) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetLaunchTemplateMonitoringArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateMonitoringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateMonitoring)(nil)).Elem()
}

func (o GetLaunchTemplateMonitoringArrayOutput) ToGetLaunchTemplateMonitoringArrayOutput() GetLaunchTemplateMonitoringArrayOutput {
	return o
}

func (o GetLaunchTemplateMonitoringArrayOutput) ToGetLaunchTemplateMonitoringArrayOutputWithContext(ctx context.Context) GetLaunchTemplateMonitoringArrayOutput {
	return o
}

func (o GetLaunchTemplateMonitoringArrayOutput) Index(i pulumi.IntInput) GetLaunchTemplateMonitoringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchTemplateMonitoring {
		return vs[0].([]GetLaunchTemplateMonitoring)[vs[1].(int)]
	}).(GetLaunchTemplateMonitoringOutput)
}

type GetLaunchTemplateNetworkInterface struct {
	AssociatePublicIpAddress bool `pulumi:"associatePublicIpAddress"`
	DeleteOnTermination      bool `pulumi:"deleteOnTermination"`
	// Description of the launch template.
	Description        string   `pulumi:"description"`
	DeviceIndex        int      `pulumi:"deviceIndex"`
	Ipv4AddressCount   int      `pulumi:"ipv4AddressCount"`
	Ipv4Addresses      []string `pulumi:"ipv4Addresses"`
	Ipv6AddressCount   int      `pulumi:"ipv6AddressCount"`
	Ipv6Addresses      []string `pulumi:"ipv6Addresses"`
	NetworkInterfaceId string   `pulumi:"networkInterfaceId"`
	PrivateIpAddress   string   `pulumi:"privateIpAddress"`
	SecurityGroups     []string `pulumi:"securityGroups"`
	SubnetId           string   `pulumi:"subnetId"`
}

type GetLaunchTemplateNetworkInterfaceInput interface {
	pulumi.Input

	ToGetLaunchTemplateNetworkInterfaceOutput() GetLaunchTemplateNetworkInterfaceOutput
	ToGetLaunchTemplateNetworkInterfaceOutputWithContext(context.Context) GetLaunchTemplateNetworkInterfaceOutput
}

type GetLaunchTemplateNetworkInterfaceArgs struct {
	AssociatePublicIpAddress pulumi.BoolInput `pulumi:"associatePublicIpAddress"`
	DeleteOnTermination      pulumi.BoolInput `pulumi:"deleteOnTermination"`
	// Description of the launch template.
	Description        pulumi.StringInput      `pulumi:"description"`
	DeviceIndex        pulumi.IntInput         `pulumi:"deviceIndex"`
	Ipv4AddressCount   pulumi.IntInput         `pulumi:"ipv4AddressCount"`
	Ipv4Addresses      pulumi.StringArrayInput `pulumi:"ipv4Addresses"`
	Ipv6AddressCount   pulumi.IntInput         `pulumi:"ipv6AddressCount"`
	Ipv6Addresses      pulumi.StringArrayInput `pulumi:"ipv6Addresses"`
	NetworkInterfaceId pulumi.StringInput      `pulumi:"networkInterfaceId"`
	PrivateIpAddress   pulumi.StringInput      `pulumi:"privateIpAddress"`
	SecurityGroups     pulumi.StringArrayInput `pulumi:"securityGroups"`
	SubnetId           pulumi.StringInput      `pulumi:"subnetId"`
}

func (GetLaunchTemplateNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateNetworkInterface)(nil)).Elem()
}

func (i GetLaunchTemplateNetworkInterfaceArgs) ToGetLaunchTemplateNetworkInterfaceOutput() GetLaunchTemplateNetworkInterfaceOutput {
	return i.ToGetLaunchTemplateNetworkInterfaceOutputWithContext(context.Background())
}

func (i GetLaunchTemplateNetworkInterfaceArgs) ToGetLaunchTemplateNetworkInterfaceOutputWithContext(ctx context.Context) GetLaunchTemplateNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateNetworkInterfaceOutput)
}

type GetLaunchTemplateNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToGetLaunchTemplateNetworkInterfaceArrayOutput() GetLaunchTemplateNetworkInterfaceArrayOutput
	ToGetLaunchTemplateNetworkInterfaceArrayOutputWithContext(context.Context) GetLaunchTemplateNetworkInterfaceArrayOutput
}

type GetLaunchTemplateNetworkInterfaceArray []GetLaunchTemplateNetworkInterfaceInput

func (GetLaunchTemplateNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateNetworkInterface)(nil)).Elem()
}

func (i GetLaunchTemplateNetworkInterfaceArray) ToGetLaunchTemplateNetworkInterfaceArrayOutput() GetLaunchTemplateNetworkInterfaceArrayOutput {
	return i.ToGetLaunchTemplateNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i GetLaunchTemplateNetworkInterfaceArray) ToGetLaunchTemplateNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetLaunchTemplateNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateNetworkInterfaceArrayOutput)
}

type GetLaunchTemplateNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateNetworkInterface)(nil)).Elem()
}

func (o GetLaunchTemplateNetworkInterfaceOutput) ToGetLaunchTemplateNetworkInterfaceOutput() GetLaunchTemplateNetworkInterfaceOutput {
	return o
}

func (o GetLaunchTemplateNetworkInterfaceOutput) ToGetLaunchTemplateNetworkInterfaceOutputWithContext(ctx context.Context) GetLaunchTemplateNetworkInterfaceOutput {
	return o
}

func (o GetLaunchTemplateNetworkInterfaceOutput) AssociatePublicIpAddress() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLaunchTemplateNetworkInterface) bool { return v.AssociatePublicIpAddress }).(pulumi.BoolOutput)
}

func (o GetLaunchTemplateNetworkInterfaceOutput) DeleteOnTermination() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLaunchTemplateNetworkInterface) bool { return v.DeleteOnTermination }).(pulumi.BoolOutput)
}

// Description of the launch template.
func (o GetLaunchTemplateNetworkInterfaceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateNetworkInterface) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetLaunchTemplateNetworkInterfaceOutput) DeviceIndex() pulumi.IntOutput {
	return o.ApplyT(func(v GetLaunchTemplateNetworkInterface) int { return v.DeviceIndex }).(pulumi.IntOutput)
}

func (o GetLaunchTemplateNetworkInterfaceOutput) Ipv4AddressCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetLaunchTemplateNetworkInterface) int { return v.Ipv4AddressCount }).(pulumi.IntOutput)
}

func (o GetLaunchTemplateNetworkInterfaceOutput) Ipv4Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLaunchTemplateNetworkInterface) []string { return v.Ipv4Addresses }).(pulumi.StringArrayOutput)
}

func (o GetLaunchTemplateNetworkInterfaceOutput) Ipv6AddressCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetLaunchTemplateNetworkInterface) int { return v.Ipv6AddressCount }).(pulumi.IntOutput)
}

func (o GetLaunchTemplateNetworkInterfaceOutput) Ipv6Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLaunchTemplateNetworkInterface) []string { return v.Ipv6Addresses }).(pulumi.StringArrayOutput)
}

func (o GetLaunchTemplateNetworkInterfaceOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateNetworkInterface) string { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

func (o GetLaunchTemplateNetworkInterfaceOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateNetworkInterface) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

func (o GetLaunchTemplateNetworkInterfaceOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLaunchTemplateNetworkInterface) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o GetLaunchTemplateNetworkInterfaceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateNetworkInterface) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetLaunchTemplateNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateNetworkInterface)(nil)).Elem()
}

func (o GetLaunchTemplateNetworkInterfaceArrayOutput) ToGetLaunchTemplateNetworkInterfaceArrayOutput() GetLaunchTemplateNetworkInterfaceArrayOutput {
	return o
}

func (o GetLaunchTemplateNetworkInterfaceArrayOutput) ToGetLaunchTemplateNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetLaunchTemplateNetworkInterfaceArrayOutput {
	return o
}

func (o GetLaunchTemplateNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) GetLaunchTemplateNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchTemplateNetworkInterface {
		return vs[0].([]GetLaunchTemplateNetworkInterface)[vs[1].(int)]
	}).(GetLaunchTemplateNetworkInterfaceOutput)
}

type GetLaunchTemplatePlacement struct {
	Affinity         string `pulumi:"affinity"`
	AvailabilityZone string `pulumi:"availabilityZone"`
	GroupName        string `pulumi:"groupName"`
	HostId           string `pulumi:"hostId"`
	SpreadDomain     string `pulumi:"spreadDomain"`
	Tenancy          string `pulumi:"tenancy"`
}

type GetLaunchTemplatePlacementInput interface {
	pulumi.Input

	ToGetLaunchTemplatePlacementOutput() GetLaunchTemplatePlacementOutput
	ToGetLaunchTemplatePlacementOutputWithContext(context.Context) GetLaunchTemplatePlacementOutput
}

type GetLaunchTemplatePlacementArgs struct {
	Affinity         pulumi.StringInput `pulumi:"affinity"`
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	GroupName        pulumi.StringInput `pulumi:"groupName"`
	HostId           pulumi.StringInput `pulumi:"hostId"`
	SpreadDomain     pulumi.StringInput `pulumi:"spreadDomain"`
	Tenancy          pulumi.StringInput `pulumi:"tenancy"`
}

func (GetLaunchTemplatePlacementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplatePlacement)(nil)).Elem()
}

func (i GetLaunchTemplatePlacementArgs) ToGetLaunchTemplatePlacementOutput() GetLaunchTemplatePlacementOutput {
	return i.ToGetLaunchTemplatePlacementOutputWithContext(context.Background())
}

func (i GetLaunchTemplatePlacementArgs) ToGetLaunchTemplatePlacementOutputWithContext(ctx context.Context) GetLaunchTemplatePlacementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplatePlacementOutput)
}

type GetLaunchTemplatePlacementArrayInput interface {
	pulumi.Input

	ToGetLaunchTemplatePlacementArrayOutput() GetLaunchTemplatePlacementArrayOutput
	ToGetLaunchTemplatePlacementArrayOutputWithContext(context.Context) GetLaunchTemplatePlacementArrayOutput
}

type GetLaunchTemplatePlacementArray []GetLaunchTemplatePlacementInput

func (GetLaunchTemplatePlacementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplatePlacement)(nil)).Elem()
}

func (i GetLaunchTemplatePlacementArray) ToGetLaunchTemplatePlacementArrayOutput() GetLaunchTemplatePlacementArrayOutput {
	return i.ToGetLaunchTemplatePlacementArrayOutputWithContext(context.Background())
}

func (i GetLaunchTemplatePlacementArray) ToGetLaunchTemplatePlacementArrayOutputWithContext(ctx context.Context) GetLaunchTemplatePlacementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplatePlacementArrayOutput)
}

type GetLaunchTemplatePlacementOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplatePlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplatePlacement)(nil)).Elem()
}

func (o GetLaunchTemplatePlacementOutput) ToGetLaunchTemplatePlacementOutput() GetLaunchTemplatePlacementOutput {
	return o
}

func (o GetLaunchTemplatePlacementOutput) ToGetLaunchTemplatePlacementOutputWithContext(ctx context.Context) GetLaunchTemplatePlacementOutput {
	return o
}

func (o GetLaunchTemplatePlacementOutput) Affinity() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplatePlacement) string { return v.Affinity }).(pulumi.StringOutput)
}

func (o GetLaunchTemplatePlacementOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplatePlacement) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o GetLaunchTemplatePlacementOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplatePlacement) string { return v.GroupName }).(pulumi.StringOutput)
}

func (o GetLaunchTemplatePlacementOutput) HostId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplatePlacement) string { return v.HostId }).(pulumi.StringOutput)
}

func (o GetLaunchTemplatePlacementOutput) SpreadDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplatePlacement) string { return v.SpreadDomain }).(pulumi.StringOutput)
}

func (o GetLaunchTemplatePlacementOutput) Tenancy() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplatePlacement) string { return v.Tenancy }).(pulumi.StringOutput)
}

type GetLaunchTemplatePlacementArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplatePlacementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplatePlacement)(nil)).Elem()
}

func (o GetLaunchTemplatePlacementArrayOutput) ToGetLaunchTemplatePlacementArrayOutput() GetLaunchTemplatePlacementArrayOutput {
	return o
}

func (o GetLaunchTemplatePlacementArrayOutput) ToGetLaunchTemplatePlacementArrayOutputWithContext(ctx context.Context) GetLaunchTemplatePlacementArrayOutput {
	return o
}

func (o GetLaunchTemplatePlacementArrayOutput) Index(i pulumi.IntInput) GetLaunchTemplatePlacementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchTemplatePlacement {
		return vs[0].([]GetLaunchTemplatePlacement)[vs[1].(int)]
	}).(GetLaunchTemplatePlacementOutput)
}

type GetLaunchTemplateTagSpecification struct {
	ResourceType string `pulumi:"resourceType"`
	// A mapping of tags, each pair of which must exactly match a pair on the desired Launch Template.
	Tags map[string]interface{} `pulumi:"tags"`
}

type GetLaunchTemplateTagSpecificationInput interface {
	pulumi.Input

	ToGetLaunchTemplateTagSpecificationOutput() GetLaunchTemplateTagSpecificationOutput
	ToGetLaunchTemplateTagSpecificationOutputWithContext(context.Context) GetLaunchTemplateTagSpecificationOutput
}

type GetLaunchTemplateTagSpecificationArgs struct {
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// A mapping of tags, each pair of which must exactly match a pair on the desired Launch Template.
	Tags pulumi.MapInput `pulumi:"tags"`
}

func (GetLaunchTemplateTagSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateTagSpecification)(nil)).Elem()
}

func (i GetLaunchTemplateTagSpecificationArgs) ToGetLaunchTemplateTagSpecificationOutput() GetLaunchTemplateTagSpecificationOutput {
	return i.ToGetLaunchTemplateTagSpecificationOutputWithContext(context.Background())
}

func (i GetLaunchTemplateTagSpecificationArgs) ToGetLaunchTemplateTagSpecificationOutputWithContext(ctx context.Context) GetLaunchTemplateTagSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateTagSpecificationOutput)
}

type GetLaunchTemplateTagSpecificationArrayInput interface {
	pulumi.Input

	ToGetLaunchTemplateTagSpecificationArrayOutput() GetLaunchTemplateTagSpecificationArrayOutput
	ToGetLaunchTemplateTagSpecificationArrayOutputWithContext(context.Context) GetLaunchTemplateTagSpecificationArrayOutput
}

type GetLaunchTemplateTagSpecificationArray []GetLaunchTemplateTagSpecificationInput

func (GetLaunchTemplateTagSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateTagSpecification)(nil)).Elem()
}

func (i GetLaunchTemplateTagSpecificationArray) ToGetLaunchTemplateTagSpecificationArrayOutput() GetLaunchTemplateTagSpecificationArrayOutput {
	return i.ToGetLaunchTemplateTagSpecificationArrayOutputWithContext(context.Background())
}

func (i GetLaunchTemplateTagSpecificationArray) ToGetLaunchTemplateTagSpecificationArrayOutputWithContext(ctx context.Context) GetLaunchTemplateTagSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateTagSpecificationArrayOutput)
}

type GetLaunchTemplateTagSpecificationOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateTagSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateTagSpecification)(nil)).Elem()
}

func (o GetLaunchTemplateTagSpecificationOutput) ToGetLaunchTemplateTagSpecificationOutput() GetLaunchTemplateTagSpecificationOutput {
	return o
}

func (o GetLaunchTemplateTagSpecificationOutput) ToGetLaunchTemplateTagSpecificationOutputWithContext(ctx context.Context) GetLaunchTemplateTagSpecificationOutput {
	return o
}

func (o GetLaunchTemplateTagSpecificationOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateTagSpecification) string { return v.ResourceType }).(pulumi.StringOutput)
}

// A mapping of tags, each pair of which must exactly match a pair on the desired Launch Template.
func (o GetLaunchTemplateTagSpecificationOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetLaunchTemplateTagSpecification) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

type GetLaunchTemplateTagSpecificationArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateTagSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateTagSpecification)(nil)).Elem()
}

func (o GetLaunchTemplateTagSpecificationArrayOutput) ToGetLaunchTemplateTagSpecificationArrayOutput() GetLaunchTemplateTagSpecificationArrayOutput {
	return o
}

func (o GetLaunchTemplateTagSpecificationArrayOutput) ToGetLaunchTemplateTagSpecificationArrayOutputWithContext(ctx context.Context) GetLaunchTemplateTagSpecificationArrayOutput {
	return o
}

func (o GetLaunchTemplateTagSpecificationArrayOutput) Index(i pulumi.IntInput) GetLaunchTemplateTagSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchTemplateTagSpecification {
		return vs[0].([]GetLaunchTemplateTagSpecification)[vs[1].(int)]
	}).(GetLaunchTemplateTagSpecificationOutput)
}

type GetNatGatewayFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNatGateways.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// An Nat Gateway will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetNatGatewayFilterInput interface {
	pulumi.Input

	ToGetNatGatewayFilterOutput() GetNatGatewayFilterOutput
	ToGetNatGatewayFilterOutputWithContext(context.Context) GetNatGatewayFilterOutput
}

type GetNatGatewayFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNatGateways.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// An Nat Gateway will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNatGatewayFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatGatewayFilter)(nil)).Elem()
}

func (i GetNatGatewayFilterArgs) ToGetNatGatewayFilterOutput() GetNatGatewayFilterOutput {
	return i.ToGetNatGatewayFilterOutputWithContext(context.Background())
}

func (i GetNatGatewayFilterArgs) ToGetNatGatewayFilterOutputWithContext(ctx context.Context) GetNatGatewayFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatGatewayFilterOutput)
}

type GetNatGatewayFilterArrayInput interface {
	pulumi.Input

	ToGetNatGatewayFilterArrayOutput() GetNatGatewayFilterArrayOutput
	ToGetNatGatewayFilterArrayOutputWithContext(context.Context) GetNatGatewayFilterArrayOutput
}

type GetNatGatewayFilterArray []GetNatGatewayFilterInput

func (GetNatGatewayFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatGatewayFilter)(nil)).Elem()
}

func (i GetNatGatewayFilterArray) ToGetNatGatewayFilterArrayOutput() GetNatGatewayFilterArrayOutput {
	return i.ToGetNatGatewayFilterArrayOutputWithContext(context.Background())
}

func (i GetNatGatewayFilterArray) ToGetNatGatewayFilterArrayOutputWithContext(ctx context.Context) GetNatGatewayFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatGatewayFilterArrayOutput)
}

type GetNatGatewayFilterOutput struct{ *pulumi.OutputState }

func (GetNatGatewayFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatGatewayFilter)(nil)).Elem()
}

func (o GetNatGatewayFilterOutput) ToGetNatGatewayFilterOutput() GetNatGatewayFilterOutput {
	return o
}

func (o GetNatGatewayFilterOutput) ToGetNatGatewayFilterOutputWithContext(ctx context.Context) GetNatGatewayFilterOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNatGateways.html).
func (o GetNatGatewayFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatGatewayFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// An Nat Gateway will be selected if any one of the given values matches.
func (o GetNatGatewayFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNatGatewayFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNatGatewayFilterArrayOutput struct{ *pulumi.OutputState }

func (GetNatGatewayFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatGatewayFilter)(nil)).Elem()
}

func (o GetNatGatewayFilterArrayOutput) ToGetNatGatewayFilterArrayOutput() GetNatGatewayFilterArrayOutput {
	return o
}

func (o GetNatGatewayFilterArrayOutput) ToGetNatGatewayFilterArrayOutputWithContext(ctx context.Context) GetNatGatewayFilterArrayOutput {
	return o
}

func (o GetNatGatewayFilterArrayOutput) Index(i pulumi.IntInput) GetNatGatewayFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNatGatewayFilter {
		return vs[0].([]GetNatGatewayFilter)[vs[1].(int)]
	}).(GetNatGatewayFilterOutput)
}

type GetNatGatewayFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNatGateways.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// An Nat Gateway will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetNatGatewayFilterArgsInput interface {
	pulumi.Input

	ToGetNatGatewayFilterArgsOutput() GetNatGatewayFilterArgsOutput
	ToGetNatGatewayFilterArgsOutputWithContext(context.Context) GetNatGatewayFilterArgsOutput
}

type GetNatGatewayFilterArgsArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNatGateways.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// An Nat Gateway will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNatGatewayFilterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatGatewayFilterArgs)(nil)).Elem()
}

func (i GetNatGatewayFilterArgsArgs) ToGetNatGatewayFilterArgsOutput() GetNatGatewayFilterArgsOutput {
	return i.ToGetNatGatewayFilterArgsOutputWithContext(context.Background())
}

func (i GetNatGatewayFilterArgsArgs) ToGetNatGatewayFilterArgsOutputWithContext(ctx context.Context) GetNatGatewayFilterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatGatewayFilterArgsOutput)
}

type GetNatGatewayFilterArgsArrayInput interface {
	pulumi.Input

	ToGetNatGatewayFilterArgsArrayOutput() GetNatGatewayFilterArgsArrayOutput
	ToGetNatGatewayFilterArgsArrayOutputWithContext(context.Context) GetNatGatewayFilterArgsArrayOutput
}

type GetNatGatewayFilterArgsArray []GetNatGatewayFilterArgsInput

func (GetNatGatewayFilterArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatGatewayFilterArgs)(nil)).Elem()
}

func (i GetNatGatewayFilterArgsArray) ToGetNatGatewayFilterArgsArrayOutput() GetNatGatewayFilterArgsArrayOutput {
	return i.ToGetNatGatewayFilterArgsArrayOutputWithContext(context.Background())
}

func (i GetNatGatewayFilterArgsArray) ToGetNatGatewayFilterArgsArrayOutputWithContext(ctx context.Context) GetNatGatewayFilterArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatGatewayFilterArgsArrayOutput)
}

type GetNatGatewayFilterArgsOutput struct{ *pulumi.OutputState }

func (GetNatGatewayFilterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatGatewayFilterArgs)(nil)).Elem()
}

func (o GetNatGatewayFilterArgsOutput) ToGetNatGatewayFilterArgsOutput() GetNatGatewayFilterArgsOutput {
	return o
}

func (o GetNatGatewayFilterArgsOutput) ToGetNatGatewayFilterArgsOutputWithContext(ctx context.Context) GetNatGatewayFilterArgsOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNatGateways.html).
func (o GetNatGatewayFilterArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatGatewayFilterArgs) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// An Nat Gateway will be selected if any one of the given values matches.
func (o GetNatGatewayFilterArgsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNatGatewayFilterArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNatGatewayFilterArgsArrayOutput struct{ *pulumi.OutputState }

func (GetNatGatewayFilterArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatGatewayFilterArgs)(nil)).Elem()
}

func (o GetNatGatewayFilterArgsArrayOutput) ToGetNatGatewayFilterArgsArrayOutput() GetNatGatewayFilterArgsArrayOutput {
	return o
}

func (o GetNatGatewayFilterArgsArrayOutput) ToGetNatGatewayFilterArgsArrayOutputWithContext(ctx context.Context) GetNatGatewayFilterArgsArrayOutput {
	return o
}

func (o GetNatGatewayFilterArgsArrayOutput) Index(i pulumi.IntInput) GetNatGatewayFilterArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNatGatewayFilterArgs {
		return vs[0].([]GetNatGatewayFilterArgs)[vs[1].(int)]
	}).(GetNatGatewayFilterArgsOutput)
}

type GetNetworkAclsFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkAcls.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetNetworkAclsFilterInput interface {
	pulumi.Input

	ToGetNetworkAclsFilterOutput() GetNetworkAclsFilterOutput
	ToGetNetworkAclsFilterOutputWithContext(context.Context) GetNetworkAclsFilterOutput
}

type GetNetworkAclsFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkAcls.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNetworkAclsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsFilter)(nil)).Elem()
}

func (i GetNetworkAclsFilterArgs) ToGetNetworkAclsFilterOutput() GetNetworkAclsFilterOutput {
	return i.ToGetNetworkAclsFilterOutputWithContext(context.Background())
}

func (i GetNetworkAclsFilterArgs) ToGetNetworkAclsFilterOutputWithContext(ctx context.Context) GetNetworkAclsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAclsFilterOutput)
}

type GetNetworkAclsFilterArrayInput interface {
	pulumi.Input

	ToGetNetworkAclsFilterArrayOutput() GetNetworkAclsFilterArrayOutput
	ToGetNetworkAclsFilterArrayOutputWithContext(context.Context) GetNetworkAclsFilterArrayOutput
}

type GetNetworkAclsFilterArray []GetNetworkAclsFilterInput

func (GetNetworkAclsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAclsFilter)(nil)).Elem()
}

func (i GetNetworkAclsFilterArray) ToGetNetworkAclsFilterArrayOutput() GetNetworkAclsFilterArrayOutput {
	return i.ToGetNetworkAclsFilterArrayOutputWithContext(context.Background())
}

func (i GetNetworkAclsFilterArray) ToGetNetworkAclsFilterArrayOutputWithContext(ctx context.Context) GetNetworkAclsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAclsFilterArrayOutput)
}

type GetNetworkAclsFilterOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsFilter)(nil)).Elem()
}

func (o GetNetworkAclsFilterOutput) ToGetNetworkAclsFilterOutput() GetNetworkAclsFilterOutput {
	return o
}

func (o GetNetworkAclsFilterOutput) ToGetNetworkAclsFilterOutputWithContext(ctx context.Context) GetNetworkAclsFilterOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkAcls.html).
func (o GetNetworkAclsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A VPC will be selected if any one of the given values matches.
func (o GetNetworkAclsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkAclsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNetworkAclsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAclsFilter)(nil)).Elem()
}

func (o GetNetworkAclsFilterArrayOutput) ToGetNetworkAclsFilterArrayOutput() GetNetworkAclsFilterArrayOutput {
	return o
}

func (o GetNetworkAclsFilterArrayOutput) ToGetNetworkAclsFilterArrayOutputWithContext(ctx context.Context) GetNetworkAclsFilterArrayOutput {
	return o
}

func (o GetNetworkAclsFilterArrayOutput) Index(i pulumi.IntInput) GetNetworkAclsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkAclsFilter {
		return vs[0].([]GetNetworkAclsFilter)[vs[1].(int)]
	}).(GetNetworkAclsFilterOutput)
}

type GetNetworkAclsFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkAcls.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetNetworkAclsFilterArgsInput interface {
	pulumi.Input

	ToGetNetworkAclsFilterArgsOutput() GetNetworkAclsFilterArgsOutput
	ToGetNetworkAclsFilterArgsOutputWithContext(context.Context) GetNetworkAclsFilterArgsOutput
}

type GetNetworkAclsFilterArgsArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkAcls.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNetworkAclsFilterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsFilterArgs)(nil)).Elem()
}

func (i GetNetworkAclsFilterArgsArgs) ToGetNetworkAclsFilterArgsOutput() GetNetworkAclsFilterArgsOutput {
	return i.ToGetNetworkAclsFilterArgsOutputWithContext(context.Background())
}

func (i GetNetworkAclsFilterArgsArgs) ToGetNetworkAclsFilterArgsOutputWithContext(ctx context.Context) GetNetworkAclsFilterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAclsFilterArgsOutput)
}

type GetNetworkAclsFilterArgsArrayInput interface {
	pulumi.Input

	ToGetNetworkAclsFilterArgsArrayOutput() GetNetworkAclsFilterArgsArrayOutput
	ToGetNetworkAclsFilterArgsArrayOutputWithContext(context.Context) GetNetworkAclsFilterArgsArrayOutput
}

type GetNetworkAclsFilterArgsArray []GetNetworkAclsFilterArgsInput

func (GetNetworkAclsFilterArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAclsFilterArgs)(nil)).Elem()
}

func (i GetNetworkAclsFilterArgsArray) ToGetNetworkAclsFilterArgsArrayOutput() GetNetworkAclsFilterArgsArrayOutput {
	return i.ToGetNetworkAclsFilterArgsArrayOutputWithContext(context.Background())
}

func (i GetNetworkAclsFilterArgsArray) ToGetNetworkAclsFilterArgsArrayOutputWithContext(ctx context.Context) GetNetworkAclsFilterArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAclsFilterArgsArrayOutput)
}

type GetNetworkAclsFilterArgsOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsFilterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsFilterArgs)(nil)).Elem()
}

func (o GetNetworkAclsFilterArgsOutput) ToGetNetworkAclsFilterArgsOutput() GetNetworkAclsFilterArgsOutput {
	return o
}

func (o GetNetworkAclsFilterArgsOutput) ToGetNetworkAclsFilterArgsOutputWithContext(ctx context.Context) GetNetworkAclsFilterArgsOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkAcls.html).
func (o GetNetworkAclsFilterArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsFilterArgs) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A VPC will be selected if any one of the given values matches.
func (o GetNetworkAclsFilterArgsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkAclsFilterArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNetworkAclsFilterArgsArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsFilterArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAclsFilterArgs)(nil)).Elem()
}

func (o GetNetworkAclsFilterArgsArrayOutput) ToGetNetworkAclsFilterArgsArrayOutput() GetNetworkAclsFilterArgsArrayOutput {
	return o
}

func (o GetNetworkAclsFilterArgsArrayOutput) ToGetNetworkAclsFilterArgsArrayOutputWithContext(ctx context.Context) GetNetworkAclsFilterArgsArrayOutput {
	return o
}

func (o GetNetworkAclsFilterArgsArrayOutput) Index(i pulumi.IntInput) GetNetworkAclsFilterArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkAclsFilterArgs {
		return vs[0].([]GetNetworkAclsFilterArgs)[vs[1].(int)]
	}).(GetNetworkAclsFilterArgsOutput)
}

type GetNetworkInterfaceAssociation struct {
	// The allocation ID.
	AllocationId string `pulumi:"allocationId"`
	// The association ID.
	AssociationId string `pulumi:"associationId"`
	// The ID of the Elastic IP address owner.
	IpOwnerId string `pulumi:"ipOwnerId"`
	// The public DNS name.
	PublicDnsName string `pulumi:"publicDnsName"`
	// The address of the Elastic IP address bound to the network interface.
	PublicIp string `pulumi:"publicIp"`
}

type GetNetworkInterfaceAssociationInput interface {
	pulumi.Input

	ToGetNetworkInterfaceAssociationOutput() GetNetworkInterfaceAssociationOutput
	ToGetNetworkInterfaceAssociationOutputWithContext(context.Context) GetNetworkInterfaceAssociationOutput
}

type GetNetworkInterfaceAssociationArgs struct {
	// The allocation ID.
	AllocationId pulumi.StringInput `pulumi:"allocationId"`
	// The association ID.
	AssociationId pulumi.StringInput `pulumi:"associationId"`
	// The ID of the Elastic IP address owner.
	IpOwnerId pulumi.StringInput `pulumi:"ipOwnerId"`
	// The public DNS name.
	PublicDnsName pulumi.StringInput `pulumi:"publicDnsName"`
	// The address of the Elastic IP address bound to the network interface.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
}

func (GetNetworkInterfaceAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfaceAssociation)(nil)).Elem()
}

func (i GetNetworkInterfaceAssociationArgs) ToGetNetworkInterfaceAssociationOutput() GetNetworkInterfaceAssociationOutput {
	return i.ToGetNetworkInterfaceAssociationOutputWithContext(context.Background())
}

func (i GetNetworkInterfaceAssociationArgs) ToGetNetworkInterfaceAssociationOutputWithContext(ctx context.Context) GetNetworkInterfaceAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfaceAssociationOutput)
}

type GetNetworkInterfaceAssociationArrayInput interface {
	pulumi.Input

	ToGetNetworkInterfaceAssociationArrayOutput() GetNetworkInterfaceAssociationArrayOutput
	ToGetNetworkInterfaceAssociationArrayOutputWithContext(context.Context) GetNetworkInterfaceAssociationArrayOutput
}

type GetNetworkInterfaceAssociationArray []GetNetworkInterfaceAssociationInput

func (GetNetworkInterfaceAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfaceAssociation)(nil)).Elem()
}

func (i GetNetworkInterfaceAssociationArray) ToGetNetworkInterfaceAssociationArrayOutput() GetNetworkInterfaceAssociationArrayOutput {
	return i.ToGetNetworkInterfaceAssociationArrayOutputWithContext(context.Background())
}

func (i GetNetworkInterfaceAssociationArray) ToGetNetworkInterfaceAssociationArrayOutputWithContext(ctx context.Context) GetNetworkInterfaceAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfaceAssociationArrayOutput)
}

type GetNetworkInterfaceAssociationOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfaceAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfaceAssociation)(nil)).Elem()
}

func (o GetNetworkInterfaceAssociationOutput) ToGetNetworkInterfaceAssociationOutput() GetNetworkInterfaceAssociationOutput {
	return o
}

func (o GetNetworkInterfaceAssociationOutput) ToGetNetworkInterfaceAssociationOutputWithContext(ctx context.Context) GetNetworkInterfaceAssociationOutput {
	return o
}

// The allocation ID.
func (o GetNetworkInterfaceAssociationOutput) AllocationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfaceAssociation) string { return v.AllocationId }).(pulumi.StringOutput)
}

// The association ID.
func (o GetNetworkInterfaceAssociationOutput) AssociationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfaceAssociation) string { return v.AssociationId }).(pulumi.StringOutput)
}

// The ID of the Elastic IP address owner.
func (o GetNetworkInterfaceAssociationOutput) IpOwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfaceAssociation) string { return v.IpOwnerId }).(pulumi.StringOutput)
}

// The public DNS name.
func (o GetNetworkInterfaceAssociationOutput) PublicDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfaceAssociation) string { return v.PublicDnsName }).(pulumi.StringOutput)
}

// The address of the Elastic IP address bound to the network interface.
func (o GetNetworkInterfaceAssociationOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfaceAssociation) string { return v.PublicIp }).(pulumi.StringOutput)
}

type GetNetworkInterfaceAssociationArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfaceAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfaceAssociation)(nil)).Elem()
}

func (o GetNetworkInterfaceAssociationArrayOutput) ToGetNetworkInterfaceAssociationArrayOutput() GetNetworkInterfaceAssociationArrayOutput {
	return o
}

func (o GetNetworkInterfaceAssociationArrayOutput) ToGetNetworkInterfaceAssociationArrayOutputWithContext(ctx context.Context) GetNetworkInterfaceAssociationArrayOutput {
	return o
}

func (o GetNetworkInterfaceAssociationArrayOutput) Index(i pulumi.IntInput) GetNetworkInterfaceAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkInterfaceAssociation {
		return vs[0].([]GetNetworkInterfaceAssociation)[vs[1].(int)]
	}).(GetNetworkInterfaceAssociationOutput)
}

type GetNetworkInterfaceAttachmentType struct {
	AttachmentId    string `pulumi:"attachmentId"`
	DeviceIndex     int    `pulumi:"deviceIndex"`
	InstanceId      string `pulumi:"instanceId"`
	InstanceOwnerId string `pulumi:"instanceOwnerId"`
}

type GetNetworkInterfaceAttachmentTypeInput interface {
	pulumi.Input

	ToGetNetworkInterfaceAttachmentTypeOutput() GetNetworkInterfaceAttachmentTypeOutput
	ToGetNetworkInterfaceAttachmentTypeOutputWithContext(context.Context) GetNetworkInterfaceAttachmentTypeOutput
}

type GetNetworkInterfaceAttachmentTypeArgs struct {
	AttachmentId    pulumi.StringInput `pulumi:"attachmentId"`
	DeviceIndex     pulumi.IntInput    `pulumi:"deviceIndex"`
	InstanceId      pulumi.StringInput `pulumi:"instanceId"`
	InstanceOwnerId pulumi.StringInput `pulumi:"instanceOwnerId"`
}

func (GetNetworkInterfaceAttachmentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfaceAttachmentType)(nil)).Elem()
}

func (i GetNetworkInterfaceAttachmentTypeArgs) ToGetNetworkInterfaceAttachmentTypeOutput() GetNetworkInterfaceAttachmentTypeOutput {
	return i.ToGetNetworkInterfaceAttachmentTypeOutputWithContext(context.Background())
}

func (i GetNetworkInterfaceAttachmentTypeArgs) ToGetNetworkInterfaceAttachmentTypeOutputWithContext(ctx context.Context) GetNetworkInterfaceAttachmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfaceAttachmentTypeOutput)
}

type GetNetworkInterfaceAttachmentTypeArrayInput interface {
	pulumi.Input

	ToGetNetworkInterfaceAttachmentTypeArrayOutput() GetNetworkInterfaceAttachmentTypeArrayOutput
	ToGetNetworkInterfaceAttachmentTypeArrayOutputWithContext(context.Context) GetNetworkInterfaceAttachmentTypeArrayOutput
}

type GetNetworkInterfaceAttachmentTypeArray []GetNetworkInterfaceAttachmentTypeInput

func (GetNetworkInterfaceAttachmentTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfaceAttachmentType)(nil)).Elem()
}

func (i GetNetworkInterfaceAttachmentTypeArray) ToGetNetworkInterfaceAttachmentTypeArrayOutput() GetNetworkInterfaceAttachmentTypeArrayOutput {
	return i.ToGetNetworkInterfaceAttachmentTypeArrayOutputWithContext(context.Background())
}

func (i GetNetworkInterfaceAttachmentTypeArray) ToGetNetworkInterfaceAttachmentTypeArrayOutputWithContext(ctx context.Context) GetNetworkInterfaceAttachmentTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfaceAttachmentTypeArrayOutput)
}

type GetNetworkInterfaceAttachmentTypeOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfaceAttachmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfaceAttachmentType)(nil)).Elem()
}

func (o GetNetworkInterfaceAttachmentTypeOutput) ToGetNetworkInterfaceAttachmentTypeOutput() GetNetworkInterfaceAttachmentTypeOutput {
	return o
}

func (o GetNetworkInterfaceAttachmentTypeOutput) ToGetNetworkInterfaceAttachmentTypeOutputWithContext(ctx context.Context) GetNetworkInterfaceAttachmentTypeOutput {
	return o
}

func (o GetNetworkInterfaceAttachmentTypeOutput) AttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfaceAttachmentType) string { return v.AttachmentId }).(pulumi.StringOutput)
}

func (o GetNetworkInterfaceAttachmentTypeOutput) DeviceIndex() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkInterfaceAttachmentType) int { return v.DeviceIndex }).(pulumi.IntOutput)
}

func (o GetNetworkInterfaceAttachmentTypeOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfaceAttachmentType) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetNetworkInterfaceAttachmentTypeOutput) InstanceOwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfaceAttachmentType) string { return v.InstanceOwnerId }).(pulumi.StringOutput)
}

type GetNetworkInterfaceAttachmentTypeArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfaceAttachmentTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfaceAttachmentType)(nil)).Elem()
}

func (o GetNetworkInterfaceAttachmentTypeArrayOutput) ToGetNetworkInterfaceAttachmentTypeArrayOutput() GetNetworkInterfaceAttachmentTypeArrayOutput {
	return o
}

func (o GetNetworkInterfaceAttachmentTypeArrayOutput) ToGetNetworkInterfaceAttachmentTypeArrayOutputWithContext(ctx context.Context) GetNetworkInterfaceAttachmentTypeArrayOutput {
	return o
}

func (o GetNetworkInterfaceAttachmentTypeArrayOutput) Index(i pulumi.IntInput) GetNetworkInterfaceAttachmentTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkInterfaceAttachmentType {
		return vs[0].([]GetNetworkInterfaceAttachmentType)[vs[1].(int)]
	}).(GetNetworkInterfaceAttachmentTypeOutput)
}

type GetNetworkInterfaceFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetNetworkInterfaceFilterInput interface {
	pulumi.Input

	ToGetNetworkInterfaceFilterOutput() GetNetworkInterfaceFilterOutput
	ToGetNetworkInterfaceFilterOutputWithContext(context.Context) GetNetworkInterfaceFilterOutput
}

type GetNetworkInterfaceFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNetworkInterfaceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfaceFilter)(nil)).Elem()
}

func (i GetNetworkInterfaceFilterArgs) ToGetNetworkInterfaceFilterOutput() GetNetworkInterfaceFilterOutput {
	return i.ToGetNetworkInterfaceFilterOutputWithContext(context.Background())
}

func (i GetNetworkInterfaceFilterArgs) ToGetNetworkInterfaceFilterOutputWithContext(ctx context.Context) GetNetworkInterfaceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfaceFilterOutput)
}

type GetNetworkInterfaceFilterArrayInput interface {
	pulumi.Input

	ToGetNetworkInterfaceFilterArrayOutput() GetNetworkInterfaceFilterArrayOutput
	ToGetNetworkInterfaceFilterArrayOutputWithContext(context.Context) GetNetworkInterfaceFilterArrayOutput
}

type GetNetworkInterfaceFilterArray []GetNetworkInterfaceFilterInput

func (GetNetworkInterfaceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfaceFilter)(nil)).Elem()
}

func (i GetNetworkInterfaceFilterArray) ToGetNetworkInterfaceFilterArrayOutput() GetNetworkInterfaceFilterArrayOutput {
	return i.ToGetNetworkInterfaceFilterArrayOutputWithContext(context.Background())
}

func (i GetNetworkInterfaceFilterArray) ToGetNetworkInterfaceFilterArrayOutputWithContext(ctx context.Context) GetNetworkInterfaceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfaceFilterArrayOutput)
}

type GetNetworkInterfaceFilterOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfaceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfaceFilter)(nil)).Elem()
}

func (o GetNetworkInterfaceFilterOutput) ToGetNetworkInterfaceFilterOutput() GetNetworkInterfaceFilterOutput {
	return o
}

func (o GetNetworkInterfaceFilterOutput) ToGetNetworkInterfaceFilterOutputWithContext(ctx context.Context) GetNetworkInterfaceFilterOutput {
	return o
}

func (o GetNetworkInterfaceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfaceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNetworkInterfaceFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkInterfaceFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNetworkInterfaceFilterArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfaceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfaceFilter)(nil)).Elem()
}

func (o GetNetworkInterfaceFilterArrayOutput) ToGetNetworkInterfaceFilterArrayOutput() GetNetworkInterfaceFilterArrayOutput {
	return o
}

func (o GetNetworkInterfaceFilterArrayOutput) ToGetNetworkInterfaceFilterArrayOutputWithContext(ctx context.Context) GetNetworkInterfaceFilterArrayOutput {
	return o
}

func (o GetNetworkInterfaceFilterArrayOutput) Index(i pulumi.IntInput) GetNetworkInterfaceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkInterfaceFilter {
		return vs[0].([]GetNetworkInterfaceFilter)[vs[1].(int)]
	}).(GetNetworkInterfaceFilterOutput)
}

type GetNetworkInterfaceFilterArgs struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetNetworkInterfaceFilterArgsInput interface {
	pulumi.Input

	ToGetNetworkInterfaceFilterArgsOutput() GetNetworkInterfaceFilterArgsOutput
	ToGetNetworkInterfaceFilterArgsOutputWithContext(context.Context) GetNetworkInterfaceFilterArgsOutput
}

type GetNetworkInterfaceFilterArgsArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNetworkInterfaceFilterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfaceFilterArgs)(nil)).Elem()
}

func (i GetNetworkInterfaceFilterArgsArgs) ToGetNetworkInterfaceFilterArgsOutput() GetNetworkInterfaceFilterArgsOutput {
	return i.ToGetNetworkInterfaceFilterArgsOutputWithContext(context.Background())
}

func (i GetNetworkInterfaceFilterArgsArgs) ToGetNetworkInterfaceFilterArgsOutputWithContext(ctx context.Context) GetNetworkInterfaceFilterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfaceFilterArgsOutput)
}

type GetNetworkInterfaceFilterArgsArrayInput interface {
	pulumi.Input

	ToGetNetworkInterfaceFilterArgsArrayOutput() GetNetworkInterfaceFilterArgsArrayOutput
	ToGetNetworkInterfaceFilterArgsArrayOutputWithContext(context.Context) GetNetworkInterfaceFilterArgsArrayOutput
}

type GetNetworkInterfaceFilterArgsArray []GetNetworkInterfaceFilterArgsInput

func (GetNetworkInterfaceFilterArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfaceFilterArgs)(nil)).Elem()
}

func (i GetNetworkInterfaceFilterArgsArray) ToGetNetworkInterfaceFilterArgsArrayOutput() GetNetworkInterfaceFilterArgsArrayOutput {
	return i.ToGetNetworkInterfaceFilterArgsArrayOutputWithContext(context.Background())
}

func (i GetNetworkInterfaceFilterArgsArray) ToGetNetworkInterfaceFilterArgsArrayOutputWithContext(ctx context.Context) GetNetworkInterfaceFilterArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfaceFilterArgsArrayOutput)
}

type GetNetworkInterfaceFilterArgsOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfaceFilterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfaceFilterArgs)(nil)).Elem()
}

func (o GetNetworkInterfaceFilterArgsOutput) ToGetNetworkInterfaceFilterArgsOutput() GetNetworkInterfaceFilterArgsOutput {
	return o
}

func (o GetNetworkInterfaceFilterArgsOutput) ToGetNetworkInterfaceFilterArgsOutputWithContext(ctx context.Context) GetNetworkInterfaceFilterArgsOutput {
	return o
}

func (o GetNetworkInterfaceFilterArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfaceFilterArgs) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNetworkInterfaceFilterArgsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkInterfaceFilterArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNetworkInterfaceFilterArgsArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfaceFilterArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfaceFilterArgs)(nil)).Elem()
}

func (o GetNetworkInterfaceFilterArgsArrayOutput) ToGetNetworkInterfaceFilterArgsArrayOutput() GetNetworkInterfaceFilterArgsArrayOutput {
	return o
}

func (o GetNetworkInterfaceFilterArgsArrayOutput) ToGetNetworkInterfaceFilterArgsArrayOutputWithContext(ctx context.Context) GetNetworkInterfaceFilterArgsArrayOutput {
	return o
}

func (o GetNetworkInterfaceFilterArgsArrayOutput) Index(i pulumi.IntInput) GetNetworkInterfaceFilterArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkInterfaceFilterArgs {
		return vs[0].([]GetNetworkInterfaceFilterArgs)[vs[1].(int)]
	}).(GetNetworkInterfaceFilterArgsOutput)
}

type GetNetworkInterfacesFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfaces.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	Values []string `pulumi:"values"`
}

type GetNetworkInterfacesFilterInput interface {
	pulumi.Input

	ToGetNetworkInterfacesFilterOutput() GetNetworkInterfacesFilterOutput
	ToGetNetworkInterfacesFilterOutputWithContext(context.Context) GetNetworkInterfacesFilterOutput
}

type GetNetworkInterfacesFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfaces.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNetworkInterfacesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfacesFilter)(nil)).Elem()
}

func (i GetNetworkInterfacesFilterArgs) ToGetNetworkInterfacesFilterOutput() GetNetworkInterfacesFilterOutput {
	return i.ToGetNetworkInterfacesFilterOutputWithContext(context.Background())
}

func (i GetNetworkInterfacesFilterArgs) ToGetNetworkInterfacesFilterOutputWithContext(ctx context.Context) GetNetworkInterfacesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfacesFilterOutput)
}

type GetNetworkInterfacesFilterArrayInput interface {
	pulumi.Input

	ToGetNetworkInterfacesFilterArrayOutput() GetNetworkInterfacesFilterArrayOutput
	ToGetNetworkInterfacesFilterArrayOutputWithContext(context.Context) GetNetworkInterfacesFilterArrayOutput
}

type GetNetworkInterfacesFilterArray []GetNetworkInterfacesFilterInput

func (GetNetworkInterfacesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfacesFilter)(nil)).Elem()
}

func (i GetNetworkInterfacesFilterArray) ToGetNetworkInterfacesFilterArrayOutput() GetNetworkInterfacesFilterArrayOutput {
	return i.ToGetNetworkInterfacesFilterArrayOutputWithContext(context.Background())
}

func (i GetNetworkInterfacesFilterArray) ToGetNetworkInterfacesFilterArrayOutputWithContext(ctx context.Context) GetNetworkInterfacesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfacesFilterArrayOutput)
}

type GetNetworkInterfacesFilterOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfacesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfacesFilter)(nil)).Elem()
}

func (o GetNetworkInterfacesFilterOutput) ToGetNetworkInterfacesFilterOutput() GetNetworkInterfacesFilterOutput {
	return o
}

func (o GetNetworkInterfacesFilterOutput) ToGetNetworkInterfacesFilterOutputWithContext(ctx context.Context) GetNetworkInterfacesFilterOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfaces.html).
func (o GetNetworkInterfacesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
func (o GetNetworkInterfacesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkInterfacesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNetworkInterfacesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfacesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfacesFilter)(nil)).Elem()
}

func (o GetNetworkInterfacesFilterArrayOutput) ToGetNetworkInterfacesFilterArrayOutput() GetNetworkInterfacesFilterArrayOutput {
	return o
}

func (o GetNetworkInterfacesFilterArrayOutput) ToGetNetworkInterfacesFilterArrayOutputWithContext(ctx context.Context) GetNetworkInterfacesFilterArrayOutput {
	return o
}

func (o GetNetworkInterfacesFilterArrayOutput) Index(i pulumi.IntInput) GetNetworkInterfacesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkInterfacesFilter {
		return vs[0].([]GetNetworkInterfacesFilter)[vs[1].(int)]
	}).(GetNetworkInterfacesFilterOutput)
}

type GetNetworkInterfacesFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfaces.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	Values []string `pulumi:"values"`
}

type GetNetworkInterfacesFilterArgsInput interface {
	pulumi.Input

	ToGetNetworkInterfacesFilterArgsOutput() GetNetworkInterfacesFilterArgsOutput
	ToGetNetworkInterfacesFilterArgsOutputWithContext(context.Context) GetNetworkInterfacesFilterArgsOutput
}

type GetNetworkInterfacesFilterArgsArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfaces.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNetworkInterfacesFilterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfacesFilterArgs)(nil)).Elem()
}

func (i GetNetworkInterfacesFilterArgsArgs) ToGetNetworkInterfacesFilterArgsOutput() GetNetworkInterfacesFilterArgsOutput {
	return i.ToGetNetworkInterfacesFilterArgsOutputWithContext(context.Background())
}

func (i GetNetworkInterfacesFilterArgsArgs) ToGetNetworkInterfacesFilterArgsOutputWithContext(ctx context.Context) GetNetworkInterfacesFilterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfacesFilterArgsOutput)
}

type GetNetworkInterfacesFilterArgsArrayInput interface {
	pulumi.Input

	ToGetNetworkInterfacesFilterArgsArrayOutput() GetNetworkInterfacesFilterArgsArrayOutput
	ToGetNetworkInterfacesFilterArgsArrayOutputWithContext(context.Context) GetNetworkInterfacesFilterArgsArrayOutput
}

type GetNetworkInterfacesFilterArgsArray []GetNetworkInterfacesFilterArgsInput

func (GetNetworkInterfacesFilterArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfacesFilterArgs)(nil)).Elem()
}

func (i GetNetworkInterfacesFilterArgsArray) ToGetNetworkInterfacesFilterArgsArrayOutput() GetNetworkInterfacesFilterArgsArrayOutput {
	return i.ToGetNetworkInterfacesFilterArgsArrayOutputWithContext(context.Background())
}

func (i GetNetworkInterfacesFilterArgsArray) ToGetNetworkInterfacesFilterArgsArrayOutputWithContext(ctx context.Context) GetNetworkInterfacesFilterArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfacesFilterArgsArrayOutput)
}

type GetNetworkInterfacesFilterArgsOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfacesFilterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfacesFilterArgs)(nil)).Elem()
}

func (o GetNetworkInterfacesFilterArgsOutput) ToGetNetworkInterfacesFilterArgsOutput() GetNetworkInterfacesFilterArgsOutput {
	return o
}

func (o GetNetworkInterfacesFilterArgsOutput) ToGetNetworkInterfacesFilterArgsOutputWithContext(ctx context.Context) GetNetworkInterfacesFilterArgsOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfaces.html).
func (o GetNetworkInterfacesFilterArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesFilterArgs) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
func (o GetNetworkInterfacesFilterArgsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkInterfacesFilterArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNetworkInterfacesFilterArgsArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfacesFilterArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfacesFilterArgs)(nil)).Elem()
}

func (o GetNetworkInterfacesFilterArgsArrayOutput) ToGetNetworkInterfacesFilterArgsArrayOutput() GetNetworkInterfacesFilterArgsArrayOutput {
	return o
}

func (o GetNetworkInterfacesFilterArgsArrayOutput) ToGetNetworkInterfacesFilterArgsArrayOutputWithContext(ctx context.Context) GetNetworkInterfacesFilterArgsArrayOutput {
	return o
}

func (o GetNetworkInterfacesFilterArgsArrayOutput) Index(i pulumi.IntInput) GetNetworkInterfacesFilterArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkInterfacesFilterArgs {
		return vs[0].([]GetNetworkInterfacesFilterArgs)[vs[1].(int)]
	}).(GetNetworkInterfacesFilterArgsOutput)
}

type GetRouteTableAssociationType struct {
	// The id of an Internet Gateway or Virtual Private Gateway which is connected to the Route Table (not exported if not passed as a parameter).
	GatewayId string `pulumi:"gatewayId"`
	// If the Association due to the Main Route Table.
	Main bool `pulumi:"main"`
	// The Association ID.
	RouteTableAssociationId string `pulumi:"routeTableAssociationId"`
	// The id of the specific Route Table to retrieve.
	RouteTableId string `pulumi:"routeTableId"`
	// The id of a Subnet which is connected to the Route Table (not exported if not passed as a parameter).
	SubnetId string `pulumi:"subnetId"`
}

type GetRouteTableAssociationTypeInput interface {
	pulumi.Input

	ToGetRouteTableAssociationTypeOutput() GetRouteTableAssociationTypeOutput
	ToGetRouteTableAssociationTypeOutputWithContext(context.Context) GetRouteTableAssociationTypeOutput
}

type GetRouteTableAssociationTypeArgs struct {
	// The id of an Internet Gateway or Virtual Private Gateway which is connected to the Route Table (not exported if not passed as a parameter).
	GatewayId pulumi.StringInput `pulumi:"gatewayId"`
	// If the Association due to the Main Route Table.
	Main pulumi.BoolInput `pulumi:"main"`
	// The Association ID.
	RouteTableAssociationId pulumi.StringInput `pulumi:"routeTableAssociationId"`
	// The id of the specific Route Table to retrieve.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// The id of a Subnet which is connected to the Route Table (not exported if not passed as a parameter).
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetRouteTableAssociationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableAssociationType)(nil)).Elem()
}

func (i GetRouteTableAssociationTypeArgs) ToGetRouteTableAssociationTypeOutput() GetRouteTableAssociationTypeOutput {
	return i.ToGetRouteTableAssociationTypeOutputWithContext(context.Background())
}

func (i GetRouteTableAssociationTypeArgs) ToGetRouteTableAssociationTypeOutputWithContext(ctx context.Context) GetRouteTableAssociationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableAssociationTypeOutput)
}

type GetRouteTableAssociationTypeArrayInput interface {
	pulumi.Input

	ToGetRouteTableAssociationTypeArrayOutput() GetRouteTableAssociationTypeArrayOutput
	ToGetRouteTableAssociationTypeArrayOutputWithContext(context.Context) GetRouteTableAssociationTypeArrayOutput
}

type GetRouteTableAssociationTypeArray []GetRouteTableAssociationTypeInput

func (GetRouteTableAssociationTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableAssociationType)(nil)).Elem()
}

func (i GetRouteTableAssociationTypeArray) ToGetRouteTableAssociationTypeArrayOutput() GetRouteTableAssociationTypeArrayOutput {
	return i.ToGetRouteTableAssociationTypeArrayOutputWithContext(context.Background())
}

func (i GetRouteTableAssociationTypeArray) ToGetRouteTableAssociationTypeArrayOutputWithContext(ctx context.Context) GetRouteTableAssociationTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableAssociationTypeArrayOutput)
}

type GetRouteTableAssociationTypeOutput struct{ *pulumi.OutputState }

func (GetRouteTableAssociationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableAssociationType)(nil)).Elem()
}

func (o GetRouteTableAssociationTypeOutput) ToGetRouteTableAssociationTypeOutput() GetRouteTableAssociationTypeOutput {
	return o
}

func (o GetRouteTableAssociationTypeOutput) ToGetRouteTableAssociationTypeOutputWithContext(ctx context.Context) GetRouteTableAssociationTypeOutput {
	return o
}

// The id of an Internet Gateway or Virtual Private Gateway which is connected to the Route Table (not exported if not passed as a parameter).
func (o GetRouteTableAssociationTypeOutput) GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableAssociationType) string { return v.GatewayId }).(pulumi.StringOutput)
}

// If the Association due to the Main Route Table.
func (o GetRouteTableAssociationTypeOutput) Main() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRouteTableAssociationType) bool { return v.Main }).(pulumi.BoolOutput)
}

// The Association ID.
func (o GetRouteTableAssociationTypeOutput) RouteTableAssociationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableAssociationType) string { return v.RouteTableAssociationId }).(pulumi.StringOutput)
}

// The id of the specific Route Table to retrieve.
func (o GetRouteTableAssociationTypeOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableAssociationType) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// The id of a Subnet which is connected to the Route Table (not exported if not passed as a parameter).
func (o GetRouteTableAssociationTypeOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableAssociationType) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetRouteTableAssociationTypeArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTableAssociationTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableAssociationType)(nil)).Elem()
}

func (o GetRouteTableAssociationTypeArrayOutput) ToGetRouteTableAssociationTypeArrayOutput() GetRouteTableAssociationTypeArrayOutput {
	return o
}

func (o GetRouteTableAssociationTypeArrayOutput) ToGetRouteTableAssociationTypeArrayOutputWithContext(ctx context.Context) GetRouteTableAssociationTypeArrayOutput {
	return o
}

func (o GetRouteTableAssociationTypeArrayOutput) Index(i pulumi.IntInput) GetRouteTableAssociationTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTableAssociationType {
		return vs[0].([]GetRouteTableAssociationType)[vs[1].(int)]
	}).(GetRouteTableAssociationTypeOutput)
}

type GetRouteTableFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Route Table will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetRouteTableFilterInput interface {
	pulumi.Input

	ToGetRouteTableFilterOutput() GetRouteTableFilterOutput
	ToGetRouteTableFilterOutputWithContext(context.Context) GetRouteTableFilterOutput
}

type GetRouteTableFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Route Table will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRouteTableFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableFilter)(nil)).Elem()
}

func (i GetRouteTableFilterArgs) ToGetRouteTableFilterOutput() GetRouteTableFilterOutput {
	return i.ToGetRouteTableFilterOutputWithContext(context.Background())
}

func (i GetRouteTableFilterArgs) ToGetRouteTableFilterOutputWithContext(ctx context.Context) GetRouteTableFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableFilterOutput)
}

type GetRouteTableFilterArrayInput interface {
	pulumi.Input

	ToGetRouteTableFilterArrayOutput() GetRouteTableFilterArrayOutput
	ToGetRouteTableFilterArrayOutputWithContext(context.Context) GetRouteTableFilterArrayOutput
}

type GetRouteTableFilterArray []GetRouteTableFilterInput

func (GetRouteTableFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableFilter)(nil)).Elem()
}

func (i GetRouteTableFilterArray) ToGetRouteTableFilterArrayOutput() GetRouteTableFilterArrayOutput {
	return i.ToGetRouteTableFilterArrayOutputWithContext(context.Background())
}

func (i GetRouteTableFilterArray) ToGetRouteTableFilterArrayOutputWithContext(ctx context.Context) GetRouteTableFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableFilterArrayOutput)
}

type GetRouteTableFilterOutput struct{ *pulumi.OutputState }

func (GetRouteTableFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableFilter)(nil)).Elem()
}

func (o GetRouteTableFilterOutput) ToGetRouteTableFilterOutput() GetRouteTableFilterOutput {
	return o
}

func (o GetRouteTableFilterOutput) ToGetRouteTableFilterOutputWithContext(ctx context.Context) GetRouteTableFilterOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).
func (o GetRouteTableFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A Route Table will be selected if any one of the given values matches.
func (o GetRouteTableFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteTableFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRouteTableFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTableFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableFilter)(nil)).Elem()
}

func (o GetRouteTableFilterArrayOutput) ToGetRouteTableFilterArrayOutput() GetRouteTableFilterArrayOutput {
	return o
}

func (o GetRouteTableFilterArrayOutput) ToGetRouteTableFilterArrayOutputWithContext(ctx context.Context) GetRouteTableFilterArrayOutput {
	return o
}

func (o GetRouteTableFilterArrayOutput) Index(i pulumi.IntInput) GetRouteTableFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTableFilter {
		return vs[0].([]GetRouteTableFilter)[vs[1].(int)]
	}).(GetRouteTableFilterOutput)
}

type GetRouteTableFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Route Table will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetRouteTableFilterArgsInput interface {
	pulumi.Input

	ToGetRouteTableFilterArgsOutput() GetRouteTableFilterArgsOutput
	ToGetRouteTableFilterArgsOutputWithContext(context.Context) GetRouteTableFilterArgsOutput
}

type GetRouteTableFilterArgsArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Route Table will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRouteTableFilterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableFilterArgs)(nil)).Elem()
}

func (i GetRouteTableFilterArgsArgs) ToGetRouteTableFilterArgsOutput() GetRouteTableFilterArgsOutput {
	return i.ToGetRouteTableFilterArgsOutputWithContext(context.Background())
}

func (i GetRouteTableFilterArgsArgs) ToGetRouteTableFilterArgsOutputWithContext(ctx context.Context) GetRouteTableFilterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableFilterArgsOutput)
}

type GetRouteTableFilterArgsArrayInput interface {
	pulumi.Input

	ToGetRouteTableFilterArgsArrayOutput() GetRouteTableFilterArgsArrayOutput
	ToGetRouteTableFilterArgsArrayOutputWithContext(context.Context) GetRouteTableFilterArgsArrayOutput
}

type GetRouteTableFilterArgsArray []GetRouteTableFilterArgsInput

func (GetRouteTableFilterArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableFilterArgs)(nil)).Elem()
}

func (i GetRouteTableFilterArgsArray) ToGetRouteTableFilterArgsArrayOutput() GetRouteTableFilterArgsArrayOutput {
	return i.ToGetRouteTableFilterArgsArrayOutputWithContext(context.Background())
}

func (i GetRouteTableFilterArgsArray) ToGetRouteTableFilterArgsArrayOutputWithContext(ctx context.Context) GetRouteTableFilterArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableFilterArgsArrayOutput)
}

type GetRouteTableFilterArgsOutput struct{ *pulumi.OutputState }

func (GetRouteTableFilterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableFilterArgs)(nil)).Elem()
}

func (o GetRouteTableFilterArgsOutput) ToGetRouteTableFilterArgsOutput() GetRouteTableFilterArgsOutput {
	return o
}

func (o GetRouteTableFilterArgsOutput) ToGetRouteTableFilterArgsOutputWithContext(ctx context.Context) GetRouteTableFilterArgsOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).
func (o GetRouteTableFilterArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableFilterArgs) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A Route Table will be selected if any one of the given values matches.
func (o GetRouteTableFilterArgsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteTableFilterArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRouteTableFilterArgsArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTableFilterArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableFilterArgs)(nil)).Elem()
}

func (o GetRouteTableFilterArgsArrayOutput) ToGetRouteTableFilterArgsArrayOutput() GetRouteTableFilterArgsArrayOutput {
	return o
}

func (o GetRouteTableFilterArgsArrayOutput) ToGetRouteTableFilterArgsArrayOutputWithContext(ctx context.Context) GetRouteTableFilterArgsArrayOutput {
	return o
}

func (o GetRouteTableFilterArgsArrayOutput) Index(i pulumi.IntInput) GetRouteTableFilterArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTableFilterArgs {
		return vs[0].([]GetRouteTableFilterArgs)[vs[1].(int)]
	}).(GetRouteTableFilterArgsOutput)
}

type GetRouteTableRoute struct {
	// The CIDR block of the route.
	CidrBlock string `pulumi:"cidrBlock"`
	// The ID of the Egress Only Internet Gateway.
	EgressOnlyGatewayId string `pulumi:"egressOnlyGatewayId"`
	// The id of an Internet Gateway or Virtual Private Gateway which is connected to the Route Table (not exported if not passed as a parameter).
	GatewayId string `pulumi:"gatewayId"`
	// The EC2 instance ID.
	InstanceId string `pulumi:"instanceId"`
	// The IPv6 CIDR block of the route.
	Ipv6CidrBlock string `pulumi:"ipv6CidrBlock"`
	// The NAT Gateway ID.
	NatGatewayId string `pulumi:"natGatewayId"`
	// The ID of the elastic network interface (eni) to use.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
	// The EC2 Transit Gateway ID.
	TransitGatewayId string `pulumi:"transitGatewayId"`
	// The VPC Peering ID.
	VpcPeeringConnectionId string `pulumi:"vpcPeeringConnectionId"`
}

type GetRouteTableRouteInput interface {
	pulumi.Input

	ToGetRouteTableRouteOutput() GetRouteTableRouteOutput
	ToGetRouteTableRouteOutputWithContext(context.Context) GetRouteTableRouteOutput
}

type GetRouteTableRouteArgs struct {
	// The CIDR block of the route.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// The ID of the Egress Only Internet Gateway.
	EgressOnlyGatewayId pulumi.StringInput `pulumi:"egressOnlyGatewayId"`
	// The id of an Internet Gateway or Virtual Private Gateway which is connected to the Route Table (not exported if not passed as a parameter).
	GatewayId pulumi.StringInput `pulumi:"gatewayId"`
	// The EC2 instance ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The IPv6 CIDR block of the route.
	Ipv6CidrBlock pulumi.StringInput `pulumi:"ipv6CidrBlock"`
	// The NAT Gateway ID.
	NatGatewayId pulumi.StringInput `pulumi:"natGatewayId"`
	// The ID of the elastic network interface (eni) to use.
	NetworkInterfaceId pulumi.StringInput `pulumi:"networkInterfaceId"`
	// The EC2 Transit Gateway ID.
	TransitGatewayId pulumi.StringInput `pulumi:"transitGatewayId"`
	// The VPC Peering ID.
	VpcPeeringConnectionId pulumi.StringInput `pulumi:"vpcPeeringConnectionId"`
}

func (GetRouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableRoute)(nil)).Elem()
}

func (i GetRouteTableRouteArgs) ToGetRouteTableRouteOutput() GetRouteTableRouteOutput {
	return i.ToGetRouteTableRouteOutputWithContext(context.Background())
}

func (i GetRouteTableRouteArgs) ToGetRouteTableRouteOutputWithContext(ctx context.Context) GetRouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableRouteOutput)
}

type GetRouteTableRouteArrayInput interface {
	pulumi.Input

	ToGetRouteTableRouteArrayOutput() GetRouteTableRouteArrayOutput
	ToGetRouteTableRouteArrayOutputWithContext(context.Context) GetRouteTableRouteArrayOutput
}

type GetRouteTableRouteArray []GetRouteTableRouteInput

func (GetRouteTableRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableRoute)(nil)).Elem()
}

func (i GetRouteTableRouteArray) ToGetRouteTableRouteArrayOutput() GetRouteTableRouteArrayOutput {
	return i.ToGetRouteTableRouteArrayOutputWithContext(context.Background())
}

func (i GetRouteTableRouteArray) ToGetRouteTableRouteArrayOutputWithContext(ctx context.Context) GetRouteTableRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableRouteArrayOutput)
}

type GetRouteTableRouteOutput struct{ *pulumi.OutputState }

func (GetRouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableRoute)(nil)).Elem()
}

func (o GetRouteTableRouteOutput) ToGetRouteTableRouteOutput() GetRouteTableRouteOutput {
	return o
}

func (o GetRouteTableRouteOutput) ToGetRouteTableRouteOutputWithContext(ctx context.Context) GetRouteTableRouteOutput {
	return o
}

// The CIDR block of the route.
func (o GetRouteTableRouteOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// The ID of the Egress Only Internet Gateway.
func (o GetRouteTableRouteOutput) EgressOnlyGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.EgressOnlyGatewayId }).(pulumi.StringOutput)
}

// The id of an Internet Gateway or Virtual Private Gateway which is connected to the Route Table (not exported if not passed as a parameter).
func (o GetRouteTableRouteOutput) GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.GatewayId }).(pulumi.StringOutput)
}

// The EC2 instance ID.
func (o GetRouteTableRouteOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The IPv6 CIDR block of the route.
func (o GetRouteTableRouteOutput) Ipv6CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.Ipv6CidrBlock }).(pulumi.StringOutput)
}

// The NAT Gateway ID.
func (o GetRouteTableRouteOutput) NatGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.NatGatewayId }).(pulumi.StringOutput)
}

// The ID of the elastic network interface (eni) to use.
func (o GetRouteTableRouteOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

// The EC2 Transit Gateway ID.
func (o GetRouteTableRouteOutput) TransitGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.TransitGatewayId }).(pulumi.StringOutput)
}

// The VPC Peering ID.
func (o GetRouteTableRouteOutput) VpcPeeringConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.VpcPeeringConnectionId }).(pulumi.StringOutput)
}

type GetRouteTableRouteArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTableRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableRoute)(nil)).Elem()
}

func (o GetRouteTableRouteArrayOutput) ToGetRouteTableRouteArrayOutput() GetRouteTableRouteArrayOutput {
	return o
}

func (o GetRouteTableRouteArrayOutput) ToGetRouteTableRouteArrayOutputWithContext(ctx context.Context) GetRouteTableRouteArrayOutput {
	return o
}

func (o GetRouteTableRouteArrayOutput) Index(i pulumi.IntInput) GetRouteTableRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTableRoute {
		return vs[0].([]GetRouteTableRoute)[vs[1].(int)]
	}).(GetRouteTableRouteOutput)
}

type GetRouteTablesFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Route Table will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetRouteTablesFilterInput interface {
	pulumi.Input

	ToGetRouteTablesFilterOutput() GetRouteTablesFilterOutput
	ToGetRouteTablesFilterOutputWithContext(context.Context) GetRouteTablesFilterOutput
}

type GetRouteTablesFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Route Table will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRouteTablesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesFilter)(nil)).Elem()
}

func (i GetRouteTablesFilterArgs) ToGetRouteTablesFilterOutput() GetRouteTablesFilterOutput {
	return i.ToGetRouteTablesFilterOutputWithContext(context.Background())
}

func (i GetRouteTablesFilterArgs) ToGetRouteTablesFilterOutputWithContext(ctx context.Context) GetRouteTablesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesFilterOutput)
}

type GetRouteTablesFilterArrayInput interface {
	pulumi.Input

	ToGetRouteTablesFilterArrayOutput() GetRouteTablesFilterArrayOutput
	ToGetRouteTablesFilterArrayOutputWithContext(context.Context) GetRouteTablesFilterArrayOutput
}

type GetRouteTablesFilterArray []GetRouteTablesFilterInput

func (GetRouteTablesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesFilter)(nil)).Elem()
}

func (i GetRouteTablesFilterArray) ToGetRouteTablesFilterArrayOutput() GetRouteTablesFilterArrayOutput {
	return i.ToGetRouteTablesFilterArrayOutputWithContext(context.Background())
}

func (i GetRouteTablesFilterArray) ToGetRouteTablesFilterArrayOutputWithContext(ctx context.Context) GetRouteTablesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesFilterArrayOutput)
}

type GetRouteTablesFilterOutput struct{ *pulumi.OutputState }

func (GetRouteTablesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesFilter)(nil)).Elem()
}

func (o GetRouteTablesFilterOutput) ToGetRouteTablesFilterOutput() GetRouteTablesFilterOutput {
	return o
}

func (o GetRouteTablesFilterOutput) ToGetRouteTablesFilterOutputWithContext(ctx context.Context) GetRouteTablesFilterOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).
func (o GetRouteTablesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A Route Table will be selected if any one of the given values matches.
func (o GetRouteTablesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteTablesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRouteTablesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTablesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesFilter)(nil)).Elem()
}

func (o GetRouteTablesFilterArrayOutput) ToGetRouteTablesFilterArrayOutput() GetRouteTablesFilterArrayOutput {
	return o
}

func (o GetRouteTablesFilterArrayOutput) ToGetRouteTablesFilterArrayOutputWithContext(ctx context.Context) GetRouteTablesFilterArrayOutput {
	return o
}

func (o GetRouteTablesFilterArrayOutput) Index(i pulumi.IntInput) GetRouteTablesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTablesFilter {
		return vs[0].([]GetRouteTablesFilter)[vs[1].(int)]
	}).(GetRouteTablesFilterOutput)
}

type GetRouteTablesFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Route Table will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetRouteTablesFilterArgsInput interface {
	pulumi.Input

	ToGetRouteTablesFilterArgsOutput() GetRouteTablesFilterArgsOutput
	ToGetRouteTablesFilterArgsOutputWithContext(context.Context) GetRouteTablesFilterArgsOutput
}

type GetRouteTablesFilterArgsArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Route Table will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRouteTablesFilterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesFilterArgs)(nil)).Elem()
}

func (i GetRouteTablesFilterArgsArgs) ToGetRouteTablesFilterArgsOutput() GetRouteTablesFilterArgsOutput {
	return i.ToGetRouteTablesFilterArgsOutputWithContext(context.Background())
}

func (i GetRouteTablesFilterArgsArgs) ToGetRouteTablesFilterArgsOutputWithContext(ctx context.Context) GetRouteTablesFilterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesFilterArgsOutput)
}

type GetRouteTablesFilterArgsArrayInput interface {
	pulumi.Input

	ToGetRouteTablesFilterArgsArrayOutput() GetRouteTablesFilterArgsArrayOutput
	ToGetRouteTablesFilterArgsArrayOutputWithContext(context.Context) GetRouteTablesFilterArgsArrayOutput
}

type GetRouteTablesFilterArgsArray []GetRouteTablesFilterArgsInput

func (GetRouteTablesFilterArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesFilterArgs)(nil)).Elem()
}

func (i GetRouteTablesFilterArgsArray) ToGetRouteTablesFilterArgsArrayOutput() GetRouteTablesFilterArgsArrayOutput {
	return i.ToGetRouteTablesFilterArgsArrayOutputWithContext(context.Background())
}

func (i GetRouteTablesFilterArgsArray) ToGetRouteTablesFilterArgsArrayOutputWithContext(ctx context.Context) GetRouteTablesFilterArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesFilterArgsArrayOutput)
}

type GetRouteTablesFilterArgsOutput struct{ *pulumi.OutputState }

func (GetRouteTablesFilterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesFilterArgs)(nil)).Elem()
}

func (o GetRouteTablesFilterArgsOutput) ToGetRouteTablesFilterArgsOutput() GetRouteTablesFilterArgsOutput {
	return o
}

func (o GetRouteTablesFilterArgsOutput) ToGetRouteTablesFilterArgsOutputWithContext(ctx context.Context) GetRouteTablesFilterArgsOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).
func (o GetRouteTablesFilterArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesFilterArgs) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A Route Table will be selected if any one of the given values matches.
func (o GetRouteTablesFilterArgsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteTablesFilterArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRouteTablesFilterArgsArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTablesFilterArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesFilterArgs)(nil)).Elem()
}

func (o GetRouteTablesFilterArgsArrayOutput) ToGetRouteTablesFilterArgsArrayOutput() GetRouteTablesFilterArgsArrayOutput {
	return o
}

func (o GetRouteTablesFilterArgsArrayOutput) ToGetRouteTablesFilterArgsArrayOutputWithContext(ctx context.Context) GetRouteTablesFilterArgsArrayOutput {
	return o
}

func (o GetRouteTablesFilterArgsArrayOutput) Index(i pulumi.IntInput) GetRouteTablesFilterArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTablesFilterArgs {
		return vs[0].([]GetRouteTablesFilterArgs)[vs[1].(int)]
	}).(GetRouteTablesFilterArgsOutput)
}

type GetSecurityGroupFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Security Group will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetSecurityGroupFilterInput interface {
	pulumi.Input

	ToGetSecurityGroupFilterOutput() GetSecurityGroupFilterOutput
	ToGetSecurityGroupFilterOutputWithContext(context.Context) GetSecurityGroupFilterOutput
}

type GetSecurityGroupFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Security Group will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSecurityGroupFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupFilter)(nil)).Elem()
}

func (i GetSecurityGroupFilterArgs) ToGetSecurityGroupFilterOutput() GetSecurityGroupFilterOutput {
	return i.ToGetSecurityGroupFilterOutputWithContext(context.Background())
}

func (i GetSecurityGroupFilterArgs) ToGetSecurityGroupFilterOutputWithContext(ctx context.Context) GetSecurityGroupFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupFilterOutput)
}

type GetSecurityGroupFilterArrayInput interface {
	pulumi.Input

	ToGetSecurityGroupFilterArrayOutput() GetSecurityGroupFilterArrayOutput
	ToGetSecurityGroupFilterArrayOutputWithContext(context.Context) GetSecurityGroupFilterArrayOutput
}

type GetSecurityGroupFilterArray []GetSecurityGroupFilterInput

func (GetSecurityGroupFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupFilter)(nil)).Elem()
}

func (i GetSecurityGroupFilterArray) ToGetSecurityGroupFilterArrayOutput() GetSecurityGroupFilterArrayOutput {
	return i.ToGetSecurityGroupFilterArrayOutputWithContext(context.Background())
}

func (i GetSecurityGroupFilterArray) ToGetSecurityGroupFilterArrayOutputWithContext(ctx context.Context) GetSecurityGroupFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupFilterArrayOutput)
}

type GetSecurityGroupFilterOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupFilter)(nil)).Elem()
}

func (o GetSecurityGroupFilterOutput) ToGetSecurityGroupFilterOutput() GetSecurityGroupFilterOutput {
	return o
}

func (o GetSecurityGroupFilterOutput) ToGetSecurityGroupFilterOutputWithContext(ctx context.Context) GetSecurityGroupFilterOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html).
func (o GetSecurityGroupFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A Security Group will be selected if any one of the given values matches.
func (o GetSecurityGroupFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityGroupFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSecurityGroupFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupFilter)(nil)).Elem()
}

func (o GetSecurityGroupFilterArrayOutput) ToGetSecurityGroupFilterArrayOutput() GetSecurityGroupFilterArrayOutput {
	return o
}

func (o GetSecurityGroupFilterArrayOutput) ToGetSecurityGroupFilterArrayOutputWithContext(ctx context.Context) GetSecurityGroupFilterArrayOutput {
	return o
}

func (o GetSecurityGroupFilterArrayOutput) Index(i pulumi.IntInput) GetSecurityGroupFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGroupFilter {
		return vs[0].([]GetSecurityGroupFilter)[vs[1].(int)]
	}).(GetSecurityGroupFilterOutput)
}

type GetSecurityGroupFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Security Group will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetSecurityGroupFilterArgsInput interface {
	pulumi.Input

	ToGetSecurityGroupFilterArgsOutput() GetSecurityGroupFilterArgsOutput
	ToGetSecurityGroupFilterArgsOutputWithContext(context.Context) GetSecurityGroupFilterArgsOutput
}

type GetSecurityGroupFilterArgsArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Security Group will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSecurityGroupFilterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupFilterArgs)(nil)).Elem()
}

func (i GetSecurityGroupFilterArgsArgs) ToGetSecurityGroupFilterArgsOutput() GetSecurityGroupFilterArgsOutput {
	return i.ToGetSecurityGroupFilterArgsOutputWithContext(context.Background())
}

func (i GetSecurityGroupFilterArgsArgs) ToGetSecurityGroupFilterArgsOutputWithContext(ctx context.Context) GetSecurityGroupFilterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupFilterArgsOutput)
}

type GetSecurityGroupFilterArgsArrayInput interface {
	pulumi.Input

	ToGetSecurityGroupFilterArgsArrayOutput() GetSecurityGroupFilterArgsArrayOutput
	ToGetSecurityGroupFilterArgsArrayOutputWithContext(context.Context) GetSecurityGroupFilterArgsArrayOutput
}

type GetSecurityGroupFilterArgsArray []GetSecurityGroupFilterArgsInput

func (GetSecurityGroupFilterArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupFilterArgs)(nil)).Elem()
}

func (i GetSecurityGroupFilterArgsArray) ToGetSecurityGroupFilterArgsArrayOutput() GetSecurityGroupFilterArgsArrayOutput {
	return i.ToGetSecurityGroupFilterArgsArrayOutputWithContext(context.Background())
}

func (i GetSecurityGroupFilterArgsArray) ToGetSecurityGroupFilterArgsArrayOutputWithContext(ctx context.Context) GetSecurityGroupFilterArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupFilterArgsArrayOutput)
}

type GetSecurityGroupFilterArgsOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupFilterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupFilterArgs)(nil)).Elem()
}

func (o GetSecurityGroupFilterArgsOutput) ToGetSecurityGroupFilterArgsOutput() GetSecurityGroupFilterArgsOutput {
	return o
}

func (o GetSecurityGroupFilterArgsOutput) ToGetSecurityGroupFilterArgsOutputWithContext(ctx context.Context) GetSecurityGroupFilterArgsOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html).
func (o GetSecurityGroupFilterArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupFilterArgs) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A Security Group will be selected if any one of the given values matches.
func (o GetSecurityGroupFilterArgsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityGroupFilterArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSecurityGroupFilterArgsArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupFilterArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupFilterArgs)(nil)).Elem()
}

func (o GetSecurityGroupFilterArgsArrayOutput) ToGetSecurityGroupFilterArgsArrayOutput() GetSecurityGroupFilterArgsArrayOutput {
	return o
}

func (o GetSecurityGroupFilterArgsArrayOutput) ToGetSecurityGroupFilterArgsArrayOutputWithContext(ctx context.Context) GetSecurityGroupFilterArgsArrayOutput {
	return o
}

func (o GetSecurityGroupFilterArgsArrayOutput) Index(i pulumi.IntInput) GetSecurityGroupFilterArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGroupFilterArgs {
		return vs[0].([]GetSecurityGroupFilterArgs)[vs[1].(int)]
	}).(GetSecurityGroupFilterArgsOutput)
}

type GetSecurityGroupsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetSecurityGroupsFilterInput interface {
	pulumi.Input

	ToGetSecurityGroupsFilterOutput() GetSecurityGroupsFilterOutput
	ToGetSecurityGroupsFilterOutputWithContext(context.Context) GetSecurityGroupsFilterOutput
}

type GetSecurityGroupsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSecurityGroupsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupsFilter)(nil)).Elem()
}

func (i GetSecurityGroupsFilterArgs) ToGetSecurityGroupsFilterOutput() GetSecurityGroupsFilterOutput {
	return i.ToGetSecurityGroupsFilterOutputWithContext(context.Background())
}

func (i GetSecurityGroupsFilterArgs) ToGetSecurityGroupsFilterOutputWithContext(ctx context.Context) GetSecurityGroupsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupsFilterOutput)
}

type GetSecurityGroupsFilterArrayInput interface {
	pulumi.Input

	ToGetSecurityGroupsFilterArrayOutput() GetSecurityGroupsFilterArrayOutput
	ToGetSecurityGroupsFilterArrayOutputWithContext(context.Context) GetSecurityGroupsFilterArrayOutput
}

type GetSecurityGroupsFilterArray []GetSecurityGroupsFilterInput

func (GetSecurityGroupsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupsFilter)(nil)).Elem()
}

func (i GetSecurityGroupsFilterArray) ToGetSecurityGroupsFilterArrayOutput() GetSecurityGroupsFilterArrayOutput {
	return i.ToGetSecurityGroupsFilterArrayOutputWithContext(context.Background())
}

func (i GetSecurityGroupsFilterArray) ToGetSecurityGroupsFilterArrayOutputWithContext(ctx context.Context) GetSecurityGroupsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupsFilterArrayOutput)
}

type GetSecurityGroupsFilterOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupsFilter)(nil)).Elem()
}

func (o GetSecurityGroupsFilterOutput) ToGetSecurityGroupsFilterOutput() GetSecurityGroupsFilterOutput {
	return o
}

func (o GetSecurityGroupsFilterOutput) ToGetSecurityGroupsFilterOutputWithContext(ctx context.Context) GetSecurityGroupsFilterOutput {
	return o
}

func (o GetSecurityGroupsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSecurityGroupsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityGroupsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSecurityGroupsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupsFilter)(nil)).Elem()
}

func (o GetSecurityGroupsFilterArrayOutput) ToGetSecurityGroupsFilterArrayOutput() GetSecurityGroupsFilterArrayOutput {
	return o
}

func (o GetSecurityGroupsFilterArrayOutput) ToGetSecurityGroupsFilterArrayOutputWithContext(ctx context.Context) GetSecurityGroupsFilterArrayOutput {
	return o
}

func (o GetSecurityGroupsFilterArrayOutput) Index(i pulumi.IntInput) GetSecurityGroupsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGroupsFilter {
		return vs[0].([]GetSecurityGroupsFilter)[vs[1].(int)]
	}).(GetSecurityGroupsFilterOutput)
}

type GetSecurityGroupsFilterArgs struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetSecurityGroupsFilterArgsInput interface {
	pulumi.Input

	ToGetSecurityGroupsFilterArgsOutput() GetSecurityGroupsFilterArgsOutput
	ToGetSecurityGroupsFilterArgsOutputWithContext(context.Context) GetSecurityGroupsFilterArgsOutput
}

type GetSecurityGroupsFilterArgsArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSecurityGroupsFilterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupsFilterArgs)(nil)).Elem()
}

func (i GetSecurityGroupsFilterArgsArgs) ToGetSecurityGroupsFilterArgsOutput() GetSecurityGroupsFilterArgsOutput {
	return i.ToGetSecurityGroupsFilterArgsOutputWithContext(context.Background())
}

func (i GetSecurityGroupsFilterArgsArgs) ToGetSecurityGroupsFilterArgsOutputWithContext(ctx context.Context) GetSecurityGroupsFilterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupsFilterArgsOutput)
}

type GetSecurityGroupsFilterArgsArrayInput interface {
	pulumi.Input

	ToGetSecurityGroupsFilterArgsArrayOutput() GetSecurityGroupsFilterArgsArrayOutput
	ToGetSecurityGroupsFilterArgsArrayOutputWithContext(context.Context) GetSecurityGroupsFilterArgsArrayOutput
}

type GetSecurityGroupsFilterArgsArray []GetSecurityGroupsFilterArgsInput

func (GetSecurityGroupsFilterArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupsFilterArgs)(nil)).Elem()
}

func (i GetSecurityGroupsFilterArgsArray) ToGetSecurityGroupsFilterArgsArrayOutput() GetSecurityGroupsFilterArgsArrayOutput {
	return i.ToGetSecurityGroupsFilterArgsArrayOutputWithContext(context.Background())
}

func (i GetSecurityGroupsFilterArgsArray) ToGetSecurityGroupsFilterArgsArrayOutputWithContext(ctx context.Context) GetSecurityGroupsFilterArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupsFilterArgsArrayOutput)
}

type GetSecurityGroupsFilterArgsOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupsFilterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupsFilterArgs)(nil)).Elem()
}

func (o GetSecurityGroupsFilterArgsOutput) ToGetSecurityGroupsFilterArgsOutput() GetSecurityGroupsFilterArgsOutput {
	return o
}

func (o GetSecurityGroupsFilterArgsOutput) ToGetSecurityGroupsFilterArgsOutputWithContext(ctx context.Context) GetSecurityGroupsFilterArgsOutput {
	return o
}

func (o GetSecurityGroupsFilterArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsFilterArgs) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSecurityGroupsFilterArgsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityGroupsFilterArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSecurityGroupsFilterArgsArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupsFilterArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupsFilterArgs)(nil)).Elem()
}

func (o GetSecurityGroupsFilterArgsArrayOutput) ToGetSecurityGroupsFilterArgsArrayOutput() GetSecurityGroupsFilterArgsArrayOutput {
	return o
}

func (o GetSecurityGroupsFilterArgsArrayOutput) ToGetSecurityGroupsFilterArgsArrayOutputWithContext(ctx context.Context) GetSecurityGroupsFilterArgsArrayOutput {
	return o
}

func (o GetSecurityGroupsFilterArgsArrayOutput) Index(i pulumi.IntInput) GetSecurityGroupsFilterArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGroupsFilterArgs {
		return vs[0].([]GetSecurityGroupsFilterArgs)[vs[1].(int)]
	}).(GetSecurityGroupsFilterArgsOutput)
}

type GetSubnetFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
	// For example, if matching against tag `Name`, use:
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A subnet will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetSubnetFilterInput interface {
	pulumi.Input

	ToGetSubnetFilterOutput() GetSubnetFilterOutput
	ToGetSubnetFilterOutputWithContext(context.Context) GetSubnetFilterOutput
}

type GetSubnetFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
	// For example, if matching against tag `Name`, use:
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A subnet will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSubnetFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetFilter)(nil)).Elem()
}

func (i GetSubnetFilterArgs) ToGetSubnetFilterOutput() GetSubnetFilterOutput {
	return i.ToGetSubnetFilterOutputWithContext(context.Background())
}

func (i GetSubnetFilterArgs) ToGetSubnetFilterOutputWithContext(ctx context.Context) GetSubnetFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetFilterOutput)
}

type GetSubnetFilterArrayInput interface {
	pulumi.Input

	ToGetSubnetFilterArrayOutput() GetSubnetFilterArrayOutput
	ToGetSubnetFilterArrayOutputWithContext(context.Context) GetSubnetFilterArrayOutput
}

type GetSubnetFilterArray []GetSubnetFilterInput

func (GetSubnetFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetFilter)(nil)).Elem()
}

func (i GetSubnetFilterArray) ToGetSubnetFilterArrayOutput() GetSubnetFilterArrayOutput {
	return i.ToGetSubnetFilterArrayOutputWithContext(context.Background())
}

func (i GetSubnetFilterArray) ToGetSubnetFilterArrayOutputWithContext(ctx context.Context) GetSubnetFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetFilterArrayOutput)
}

type GetSubnetFilterOutput struct{ *pulumi.OutputState }

func (GetSubnetFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetFilter)(nil)).Elem()
}

func (o GetSubnetFilterOutput) ToGetSubnetFilterOutput() GetSubnetFilterOutput {
	return o
}

func (o GetSubnetFilterOutput) ToGetSubnetFilterOutputWithContext(ctx context.Context) GetSubnetFilterOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
// For example, if matching against tag `Name`, use:
func (o GetSubnetFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A subnet will be selected if any one of the given values matches.
func (o GetSubnetFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubnetFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSubnetFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSubnetFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetFilter)(nil)).Elem()
}

func (o GetSubnetFilterArrayOutput) ToGetSubnetFilterArrayOutput() GetSubnetFilterArrayOutput {
	return o
}

func (o GetSubnetFilterArrayOutput) ToGetSubnetFilterArrayOutputWithContext(ctx context.Context) GetSubnetFilterArrayOutput {
	return o
}

func (o GetSubnetFilterArrayOutput) Index(i pulumi.IntInput) GetSubnetFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubnetFilter {
		return vs[0].([]GetSubnetFilter)[vs[1].(int)]
	}).(GetSubnetFilterOutput)
}

type GetSubnetFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
	// For example, if matching against tag `Name`, use:
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A subnet will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetSubnetFilterArgsInput interface {
	pulumi.Input

	ToGetSubnetFilterArgsOutput() GetSubnetFilterArgsOutput
	ToGetSubnetFilterArgsOutputWithContext(context.Context) GetSubnetFilterArgsOutput
}

type GetSubnetFilterArgsArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
	// For example, if matching against tag `Name`, use:
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A subnet will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSubnetFilterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetFilterArgs)(nil)).Elem()
}

func (i GetSubnetFilterArgsArgs) ToGetSubnetFilterArgsOutput() GetSubnetFilterArgsOutput {
	return i.ToGetSubnetFilterArgsOutputWithContext(context.Background())
}

func (i GetSubnetFilterArgsArgs) ToGetSubnetFilterArgsOutputWithContext(ctx context.Context) GetSubnetFilterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetFilterArgsOutput)
}

type GetSubnetFilterArgsArrayInput interface {
	pulumi.Input

	ToGetSubnetFilterArgsArrayOutput() GetSubnetFilterArgsArrayOutput
	ToGetSubnetFilterArgsArrayOutputWithContext(context.Context) GetSubnetFilterArgsArrayOutput
}

type GetSubnetFilterArgsArray []GetSubnetFilterArgsInput

func (GetSubnetFilterArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetFilterArgs)(nil)).Elem()
}

func (i GetSubnetFilterArgsArray) ToGetSubnetFilterArgsArrayOutput() GetSubnetFilterArgsArrayOutput {
	return i.ToGetSubnetFilterArgsArrayOutputWithContext(context.Background())
}

func (i GetSubnetFilterArgsArray) ToGetSubnetFilterArgsArrayOutputWithContext(ctx context.Context) GetSubnetFilterArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetFilterArgsArrayOutput)
}

type GetSubnetFilterArgsOutput struct{ *pulumi.OutputState }

func (GetSubnetFilterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetFilterArgs)(nil)).Elem()
}

func (o GetSubnetFilterArgsOutput) ToGetSubnetFilterArgsOutput() GetSubnetFilterArgsOutput {
	return o
}

func (o GetSubnetFilterArgsOutput) ToGetSubnetFilterArgsOutputWithContext(ctx context.Context) GetSubnetFilterArgsOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
// For example, if matching against tag `Name`, use:
func (o GetSubnetFilterArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetFilterArgs) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A subnet will be selected if any one of the given values matches.
func (o GetSubnetFilterArgsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubnetFilterArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSubnetFilterArgsArrayOutput struct{ *pulumi.OutputState }

func (GetSubnetFilterArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetFilterArgs)(nil)).Elem()
}

func (o GetSubnetFilterArgsArrayOutput) ToGetSubnetFilterArgsArrayOutput() GetSubnetFilterArgsArrayOutput {
	return o
}

func (o GetSubnetFilterArgsArrayOutput) ToGetSubnetFilterArgsArrayOutputWithContext(ctx context.Context) GetSubnetFilterArgsArrayOutput {
	return o
}

func (o GetSubnetFilterArgsArrayOutput) Index(i pulumi.IntInput) GetSubnetFilterArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubnetFilterArgs {
		return vs[0].([]GetSubnetFilterArgs)[vs[1].(int)]
	}).(GetSubnetFilterArgsOutput)
}

type GetSubnetIdsFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
	// For example, if matching against tag `Name`, use:
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// Subnet IDs will be selected if any one of the given values match.
	Values []string `pulumi:"values"`
}

type GetSubnetIdsFilterInput interface {
	pulumi.Input

	ToGetSubnetIdsFilterOutput() GetSubnetIdsFilterOutput
	ToGetSubnetIdsFilterOutputWithContext(context.Context) GetSubnetIdsFilterOutput
}

type GetSubnetIdsFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
	// For example, if matching against tag `Name`, use:
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// Subnet IDs will be selected if any one of the given values match.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSubnetIdsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetIdsFilter)(nil)).Elem()
}

func (i GetSubnetIdsFilterArgs) ToGetSubnetIdsFilterOutput() GetSubnetIdsFilterOutput {
	return i.ToGetSubnetIdsFilterOutputWithContext(context.Background())
}

func (i GetSubnetIdsFilterArgs) ToGetSubnetIdsFilterOutputWithContext(ctx context.Context) GetSubnetIdsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetIdsFilterOutput)
}

type GetSubnetIdsFilterArrayInput interface {
	pulumi.Input

	ToGetSubnetIdsFilterArrayOutput() GetSubnetIdsFilterArrayOutput
	ToGetSubnetIdsFilterArrayOutputWithContext(context.Context) GetSubnetIdsFilterArrayOutput
}

type GetSubnetIdsFilterArray []GetSubnetIdsFilterInput

func (GetSubnetIdsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetIdsFilter)(nil)).Elem()
}

func (i GetSubnetIdsFilterArray) ToGetSubnetIdsFilterArrayOutput() GetSubnetIdsFilterArrayOutput {
	return i.ToGetSubnetIdsFilterArrayOutputWithContext(context.Background())
}

func (i GetSubnetIdsFilterArray) ToGetSubnetIdsFilterArrayOutputWithContext(ctx context.Context) GetSubnetIdsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetIdsFilterArrayOutput)
}

type GetSubnetIdsFilterOutput struct{ *pulumi.OutputState }

func (GetSubnetIdsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetIdsFilter)(nil)).Elem()
}

func (o GetSubnetIdsFilterOutput) ToGetSubnetIdsFilterOutput() GetSubnetIdsFilterOutput {
	return o
}

func (o GetSubnetIdsFilterOutput) ToGetSubnetIdsFilterOutputWithContext(ctx context.Context) GetSubnetIdsFilterOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
// For example, if matching against tag `Name`, use:
func (o GetSubnetIdsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetIdsFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// Subnet IDs will be selected if any one of the given values match.
func (o GetSubnetIdsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubnetIdsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSubnetIdsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSubnetIdsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetIdsFilter)(nil)).Elem()
}

func (o GetSubnetIdsFilterArrayOutput) ToGetSubnetIdsFilterArrayOutput() GetSubnetIdsFilterArrayOutput {
	return o
}

func (o GetSubnetIdsFilterArrayOutput) ToGetSubnetIdsFilterArrayOutputWithContext(ctx context.Context) GetSubnetIdsFilterArrayOutput {
	return o
}

func (o GetSubnetIdsFilterArrayOutput) Index(i pulumi.IntInput) GetSubnetIdsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubnetIdsFilter {
		return vs[0].([]GetSubnetIdsFilter)[vs[1].(int)]
	}).(GetSubnetIdsFilterOutput)
}

type GetSubnetIdsFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
	// For example, if matching against tag `Name`, use:
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// Subnet IDs will be selected if any one of the given values match.
	Values []string `pulumi:"values"`
}

type GetSubnetIdsFilterArgsInput interface {
	pulumi.Input

	ToGetSubnetIdsFilterArgsOutput() GetSubnetIdsFilterArgsOutput
	ToGetSubnetIdsFilterArgsOutputWithContext(context.Context) GetSubnetIdsFilterArgsOutput
}

type GetSubnetIdsFilterArgsArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
	// For example, if matching against tag `Name`, use:
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// Subnet IDs will be selected if any one of the given values match.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSubnetIdsFilterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetIdsFilterArgs)(nil)).Elem()
}

func (i GetSubnetIdsFilterArgsArgs) ToGetSubnetIdsFilterArgsOutput() GetSubnetIdsFilterArgsOutput {
	return i.ToGetSubnetIdsFilterArgsOutputWithContext(context.Background())
}

func (i GetSubnetIdsFilterArgsArgs) ToGetSubnetIdsFilterArgsOutputWithContext(ctx context.Context) GetSubnetIdsFilterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetIdsFilterArgsOutput)
}

type GetSubnetIdsFilterArgsArrayInput interface {
	pulumi.Input

	ToGetSubnetIdsFilterArgsArrayOutput() GetSubnetIdsFilterArgsArrayOutput
	ToGetSubnetIdsFilterArgsArrayOutputWithContext(context.Context) GetSubnetIdsFilterArgsArrayOutput
}

type GetSubnetIdsFilterArgsArray []GetSubnetIdsFilterArgsInput

func (GetSubnetIdsFilterArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetIdsFilterArgs)(nil)).Elem()
}

func (i GetSubnetIdsFilterArgsArray) ToGetSubnetIdsFilterArgsArrayOutput() GetSubnetIdsFilterArgsArrayOutput {
	return i.ToGetSubnetIdsFilterArgsArrayOutputWithContext(context.Background())
}

func (i GetSubnetIdsFilterArgsArray) ToGetSubnetIdsFilterArgsArrayOutputWithContext(ctx context.Context) GetSubnetIdsFilterArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetIdsFilterArgsArrayOutput)
}

type GetSubnetIdsFilterArgsOutput struct{ *pulumi.OutputState }

func (GetSubnetIdsFilterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetIdsFilterArgs)(nil)).Elem()
}

func (o GetSubnetIdsFilterArgsOutput) ToGetSubnetIdsFilterArgsOutput() GetSubnetIdsFilterArgsOutput {
	return o
}

func (o GetSubnetIdsFilterArgsOutput) ToGetSubnetIdsFilterArgsOutputWithContext(ctx context.Context) GetSubnetIdsFilterArgsOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
// For example, if matching against tag `Name`, use:
func (o GetSubnetIdsFilterArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetIdsFilterArgs) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// Subnet IDs will be selected if any one of the given values match.
func (o GetSubnetIdsFilterArgsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubnetIdsFilterArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSubnetIdsFilterArgsArrayOutput struct{ *pulumi.OutputState }

func (GetSubnetIdsFilterArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetIdsFilterArgs)(nil)).Elem()
}

func (o GetSubnetIdsFilterArgsArrayOutput) ToGetSubnetIdsFilterArgsArrayOutput() GetSubnetIdsFilterArgsArrayOutput {
	return o
}

func (o GetSubnetIdsFilterArgsArrayOutput) ToGetSubnetIdsFilterArgsArrayOutputWithContext(ctx context.Context) GetSubnetIdsFilterArgsArrayOutput {
	return o
}

func (o GetSubnetIdsFilterArgsArrayOutput) Index(i pulumi.IntInput) GetSubnetIdsFilterArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubnetIdsFilterArgs {
		return vs[0].([]GetSubnetIdsFilterArgs)[vs[1].(int)]
	}).(GetSubnetIdsFilterArgsOutput)
}

type GetVpcCidrBlockAssociation struct {
	// The association ID for the the IPv4 CIDR block.
	AssociationId string `pulumi:"associationId"`
	// The cidr block of the desired VPC.
	CidrBlock string `pulumi:"cidrBlock"`
	// The current state of the desired VPC.
	// Can be either `"pending"` or `"available"`.
	State string `pulumi:"state"`
}

type GetVpcCidrBlockAssociationInput interface {
	pulumi.Input

	ToGetVpcCidrBlockAssociationOutput() GetVpcCidrBlockAssociationOutput
	ToGetVpcCidrBlockAssociationOutputWithContext(context.Context) GetVpcCidrBlockAssociationOutput
}

type GetVpcCidrBlockAssociationArgs struct {
	// The association ID for the the IPv4 CIDR block.
	AssociationId pulumi.StringInput `pulumi:"associationId"`
	// The cidr block of the desired VPC.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// The current state of the desired VPC.
	// Can be either `"pending"` or `"available"`.
	State pulumi.StringInput `pulumi:"state"`
}

func (GetVpcCidrBlockAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcCidrBlockAssociation)(nil)).Elem()
}

func (i GetVpcCidrBlockAssociationArgs) ToGetVpcCidrBlockAssociationOutput() GetVpcCidrBlockAssociationOutput {
	return i.ToGetVpcCidrBlockAssociationOutputWithContext(context.Background())
}

func (i GetVpcCidrBlockAssociationArgs) ToGetVpcCidrBlockAssociationOutputWithContext(ctx context.Context) GetVpcCidrBlockAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcCidrBlockAssociationOutput)
}

type GetVpcCidrBlockAssociationArrayInput interface {
	pulumi.Input

	ToGetVpcCidrBlockAssociationArrayOutput() GetVpcCidrBlockAssociationArrayOutput
	ToGetVpcCidrBlockAssociationArrayOutputWithContext(context.Context) GetVpcCidrBlockAssociationArrayOutput
}

type GetVpcCidrBlockAssociationArray []GetVpcCidrBlockAssociationInput

func (GetVpcCidrBlockAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcCidrBlockAssociation)(nil)).Elem()
}

func (i GetVpcCidrBlockAssociationArray) ToGetVpcCidrBlockAssociationArrayOutput() GetVpcCidrBlockAssociationArrayOutput {
	return i.ToGetVpcCidrBlockAssociationArrayOutputWithContext(context.Background())
}

func (i GetVpcCidrBlockAssociationArray) ToGetVpcCidrBlockAssociationArrayOutputWithContext(ctx context.Context) GetVpcCidrBlockAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcCidrBlockAssociationArrayOutput)
}

type GetVpcCidrBlockAssociationOutput struct{ *pulumi.OutputState }

func (GetVpcCidrBlockAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcCidrBlockAssociation)(nil)).Elem()
}

func (o GetVpcCidrBlockAssociationOutput) ToGetVpcCidrBlockAssociationOutput() GetVpcCidrBlockAssociationOutput {
	return o
}

func (o GetVpcCidrBlockAssociationOutput) ToGetVpcCidrBlockAssociationOutputWithContext(ctx context.Context) GetVpcCidrBlockAssociationOutput {
	return o
}

// The association ID for the the IPv4 CIDR block.
func (o GetVpcCidrBlockAssociationOutput) AssociationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcCidrBlockAssociation) string { return v.AssociationId }).(pulumi.StringOutput)
}

// The cidr block of the desired VPC.
func (o GetVpcCidrBlockAssociationOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcCidrBlockAssociation) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// The current state of the desired VPC.
// Can be either `"pending"` or `"available"`.
func (o GetVpcCidrBlockAssociationOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcCidrBlockAssociation) string { return v.State }).(pulumi.StringOutput)
}

type GetVpcCidrBlockAssociationArrayOutput struct{ *pulumi.OutputState }

func (GetVpcCidrBlockAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcCidrBlockAssociation)(nil)).Elem()
}

func (o GetVpcCidrBlockAssociationArrayOutput) ToGetVpcCidrBlockAssociationArrayOutput() GetVpcCidrBlockAssociationArrayOutput {
	return o
}

func (o GetVpcCidrBlockAssociationArrayOutput) ToGetVpcCidrBlockAssociationArrayOutputWithContext(ctx context.Context) GetVpcCidrBlockAssociationArrayOutput {
	return o
}

func (o GetVpcCidrBlockAssociationArrayOutput) Index(i pulumi.IntInput) GetVpcCidrBlockAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcCidrBlockAssociation {
		return vs[0].([]GetVpcCidrBlockAssociation)[vs[1].(int)]
	}).(GetVpcCidrBlockAssociationOutput)
}

type GetVpcDhcpOptionsFilter struct {
	// The name of the field to filter.
	Name string `pulumi:"name"`
	// Set of values for filtering.
	Values []string `pulumi:"values"`
}

type GetVpcDhcpOptionsFilterInput interface {
	pulumi.Input

	ToGetVpcDhcpOptionsFilterOutput() GetVpcDhcpOptionsFilterOutput
	ToGetVpcDhcpOptionsFilterOutputWithContext(context.Context) GetVpcDhcpOptionsFilterOutput
}

type GetVpcDhcpOptionsFilterArgs struct {
	// The name of the field to filter.
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values for filtering.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVpcDhcpOptionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcDhcpOptionsFilter)(nil)).Elem()
}

func (i GetVpcDhcpOptionsFilterArgs) ToGetVpcDhcpOptionsFilterOutput() GetVpcDhcpOptionsFilterOutput {
	return i.ToGetVpcDhcpOptionsFilterOutputWithContext(context.Background())
}

func (i GetVpcDhcpOptionsFilterArgs) ToGetVpcDhcpOptionsFilterOutputWithContext(ctx context.Context) GetVpcDhcpOptionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcDhcpOptionsFilterOutput)
}

type GetVpcDhcpOptionsFilterArrayInput interface {
	pulumi.Input

	ToGetVpcDhcpOptionsFilterArrayOutput() GetVpcDhcpOptionsFilterArrayOutput
	ToGetVpcDhcpOptionsFilterArrayOutputWithContext(context.Context) GetVpcDhcpOptionsFilterArrayOutput
}

type GetVpcDhcpOptionsFilterArray []GetVpcDhcpOptionsFilterInput

func (GetVpcDhcpOptionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcDhcpOptionsFilter)(nil)).Elem()
}

func (i GetVpcDhcpOptionsFilterArray) ToGetVpcDhcpOptionsFilterArrayOutput() GetVpcDhcpOptionsFilterArrayOutput {
	return i.ToGetVpcDhcpOptionsFilterArrayOutputWithContext(context.Background())
}

func (i GetVpcDhcpOptionsFilterArray) ToGetVpcDhcpOptionsFilterArrayOutputWithContext(ctx context.Context) GetVpcDhcpOptionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcDhcpOptionsFilterArrayOutput)
}

type GetVpcDhcpOptionsFilterOutput struct{ *pulumi.OutputState }

func (GetVpcDhcpOptionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcDhcpOptionsFilter)(nil)).Elem()
}

func (o GetVpcDhcpOptionsFilterOutput) ToGetVpcDhcpOptionsFilterOutput() GetVpcDhcpOptionsFilterOutput {
	return o
}

func (o GetVpcDhcpOptionsFilterOutput) ToGetVpcDhcpOptionsFilterOutputWithContext(ctx context.Context) GetVpcDhcpOptionsFilterOutput {
	return o
}

// The name of the field to filter.
func (o GetVpcDhcpOptionsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcDhcpOptionsFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values for filtering.
func (o GetVpcDhcpOptionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcDhcpOptionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVpcDhcpOptionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVpcDhcpOptionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcDhcpOptionsFilter)(nil)).Elem()
}

func (o GetVpcDhcpOptionsFilterArrayOutput) ToGetVpcDhcpOptionsFilterArrayOutput() GetVpcDhcpOptionsFilterArrayOutput {
	return o
}

func (o GetVpcDhcpOptionsFilterArrayOutput) ToGetVpcDhcpOptionsFilterArrayOutputWithContext(ctx context.Context) GetVpcDhcpOptionsFilterArrayOutput {
	return o
}

func (o GetVpcDhcpOptionsFilterArrayOutput) Index(i pulumi.IntInput) GetVpcDhcpOptionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcDhcpOptionsFilter {
		return vs[0].([]GetVpcDhcpOptionsFilter)[vs[1].(int)]
	}).(GetVpcDhcpOptionsFilterOutput)
}

type GetVpcDhcpOptionsFilterArgs struct {
	// The name of the field to filter.
	Name string `pulumi:"name"`
	// Set of values for filtering.
	Values []string `pulumi:"values"`
}

type GetVpcDhcpOptionsFilterArgsInput interface {
	pulumi.Input

	ToGetVpcDhcpOptionsFilterArgsOutput() GetVpcDhcpOptionsFilterArgsOutput
	ToGetVpcDhcpOptionsFilterArgsOutputWithContext(context.Context) GetVpcDhcpOptionsFilterArgsOutput
}

type GetVpcDhcpOptionsFilterArgsArgs struct {
	// The name of the field to filter.
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values for filtering.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVpcDhcpOptionsFilterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcDhcpOptionsFilterArgs)(nil)).Elem()
}

func (i GetVpcDhcpOptionsFilterArgsArgs) ToGetVpcDhcpOptionsFilterArgsOutput() GetVpcDhcpOptionsFilterArgsOutput {
	return i.ToGetVpcDhcpOptionsFilterArgsOutputWithContext(context.Background())
}

func (i GetVpcDhcpOptionsFilterArgsArgs) ToGetVpcDhcpOptionsFilterArgsOutputWithContext(ctx context.Context) GetVpcDhcpOptionsFilterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcDhcpOptionsFilterArgsOutput)
}

type GetVpcDhcpOptionsFilterArgsArrayInput interface {
	pulumi.Input

	ToGetVpcDhcpOptionsFilterArgsArrayOutput() GetVpcDhcpOptionsFilterArgsArrayOutput
	ToGetVpcDhcpOptionsFilterArgsArrayOutputWithContext(context.Context) GetVpcDhcpOptionsFilterArgsArrayOutput
}

type GetVpcDhcpOptionsFilterArgsArray []GetVpcDhcpOptionsFilterArgsInput

func (GetVpcDhcpOptionsFilterArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcDhcpOptionsFilterArgs)(nil)).Elem()
}

func (i GetVpcDhcpOptionsFilterArgsArray) ToGetVpcDhcpOptionsFilterArgsArrayOutput() GetVpcDhcpOptionsFilterArgsArrayOutput {
	return i.ToGetVpcDhcpOptionsFilterArgsArrayOutputWithContext(context.Background())
}

func (i GetVpcDhcpOptionsFilterArgsArray) ToGetVpcDhcpOptionsFilterArgsArrayOutputWithContext(ctx context.Context) GetVpcDhcpOptionsFilterArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcDhcpOptionsFilterArgsArrayOutput)
}

type GetVpcDhcpOptionsFilterArgsOutput struct{ *pulumi.OutputState }

func (GetVpcDhcpOptionsFilterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcDhcpOptionsFilterArgs)(nil)).Elem()
}

func (o GetVpcDhcpOptionsFilterArgsOutput) ToGetVpcDhcpOptionsFilterArgsOutput() GetVpcDhcpOptionsFilterArgsOutput {
	return o
}

func (o GetVpcDhcpOptionsFilterArgsOutput) ToGetVpcDhcpOptionsFilterArgsOutputWithContext(ctx context.Context) GetVpcDhcpOptionsFilterArgsOutput {
	return o
}

// The name of the field to filter.
func (o GetVpcDhcpOptionsFilterArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcDhcpOptionsFilterArgs) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values for filtering.
func (o GetVpcDhcpOptionsFilterArgsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcDhcpOptionsFilterArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVpcDhcpOptionsFilterArgsArrayOutput struct{ *pulumi.OutputState }

func (GetVpcDhcpOptionsFilterArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcDhcpOptionsFilterArgs)(nil)).Elem()
}

func (o GetVpcDhcpOptionsFilterArgsArrayOutput) ToGetVpcDhcpOptionsFilterArgsArrayOutput() GetVpcDhcpOptionsFilterArgsArrayOutput {
	return o
}

func (o GetVpcDhcpOptionsFilterArgsArrayOutput) ToGetVpcDhcpOptionsFilterArgsArrayOutputWithContext(ctx context.Context) GetVpcDhcpOptionsFilterArgsArrayOutput {
	return o
}

func (o GetVpcDhcpOptionsFilterArgsArrayOutput) Index(i pulumi.IntInput) GetVpcDhcpOptionsFilterArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcDhcpOptionsFilterArgs {
		return vs[0].([]GetVpcDhcpOptionsFilterArgs)[vs[1].(int)]
	}).(GetVpcDhcpOptionsFilterArgsOutput)
}

type GetVpcEndpointDnsEntry struct {
	// The DNS name.
	DnsName string `pulumi:"dnsName"`
	// The ID of the private hosted zone.
	HostedZoneId string `pulumi:"hostedZoneId"`
}

type GetVpcEndpointDnsEntryInput interface {
	pulumi.Input

	ToGetVpcEndpointDnsEntryOutput() GetVpcEndpointDnsEntryOutput
	ToGetVpcEndpointDnsEntryOutputWithContext(context.Context) GetVpcEndpointDnsEntryOutput
}

type GetVpcEndpointDnsEntryArgs struct {
	// The DNS name.
	DnsName pulumi.StringInput `pulumi:"dnsName"`
	// The ID of the private hosted zone.
	HostedZoneId pulumi.StringInput `pulumi:"hostedZoneId"`
}

func (GetVpcEndpointDnsEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcEndpointDnsEntry)(nil)).Elem()
}

func (i GetVpcEndpointDnsEntryArgs) ToGetVpcEndpointDnsEntryOutput() GetVpcEndpointDnsEntryOutput {
	return i.ToGetVpcEndpointDnsEntryOutputWithContext(context.Background())
}

func (i GetVpcEndpointDnsEntryArgs) ToGetVpcEndpointDnsEntryOutputWithContext(ctx context.Context) GetVpcEndpointDnsEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcEndpointDnsEntryOutput)
}

type GetVpcEndpointDnsEntryArrayInput interface {
	pulumi.Input

	ToGetVpcEndpointDnsEntryArrayOutput() GetVpcEndpointDnsEntryArrayOutput
	ToGetVpcEndpointDnsEntryArrayOutputWithContext(context.Context) GetVpcEndpointDnsEntryArrayOutput
}

type GetVpcEndpointDnsEntryArray []GetVpcEndpointDnsEntryInput

func (GetVpcEndpointDnsEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcEndpointDnsEntry)(nil)).Elem()
}

func (i GetVpcEndpointDnsEntryArray) ToGetVpcEndpointDnsEntryArrayOutput() GetVpcEndpointDnsEntryArrayOutput {
	return i.ToGetVpcEndpointDnsEntryArrayOutputWithContext(context.Background())
}

func (i GetVpcEndpointDnsEntryArray) ToGetVpcEndpointDnsEntryArrayOutputWithContext(ctx context.Context) GetVpcEndpointDnsEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcEndpointDnsEntryArrayOutput)
}

type GetVpcEndpointDnsEntryOutput struct{ *pulumi.OutputState }

func (GetVpcEndpointDnsEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcEndpointDnsEntry)(nil)).Elem()
}

func (o GetVpcEndpointDnsEntryOutput) ToGetVpcEndpointDnsEntryOutput() GetVpcEndpointDnsEntryOutput {
	return o
}

func (o GetVpcEndpointDnsEntryOutput) ToGetVpcEndpointDnsEntryOutputWithContext(ctx context.Context) GetVpcEndpointDnsEntryOutput {
	return o
}

// The DNS name.
func (o GetVpcEndpointDnsEntryOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEndpointDnsEntry) string { return v.DnsName }).(pulumi.StringOutput)
}

// The ID of the private hosted zone.
func (o GetVpcEndpointDnsEntryOutput) HostedZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEndpointDnsEntry) string { return v.HostedZoneId }).(pulumi.StringOutput)
}

type GetVpcEndpointDnsEntryArrayOutput struct{ *pulumi.OutputState }

func (GetVpcEndpointDnsEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcEndpointDnsEntry)(nil)).Elem()
}

func (o GetVpcEndpointDnsEntryArrayOutput) ToGetVpcEndpointDnsEntryArrayOutput() GetVpcEndpointDnsEntryArrayOutput {
	return o
}

func (o GetVpcEndpointDnsEntryArrayOutput) ToGetVpcEndpointDnsEntryArrayOutputWithContext(ctx context.Context) GetVpcEndpointDnsEntryArrayOutput {
	return o
}

func (o GetVpcEndpointDnsEntryArrayOutput) Index(i pulumi.IntInput) GetVpcEndpointDnsEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcEndpointDnsEntry {
		return vs[0].([]GetVpcEndpointDnsEntry)[vs[1].(int)]
	}).(GetVpcEndpointDnsEntryOutput)
}

type GetVpcEndpointFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpoints.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC Endpoint will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetVpcEndpointFilterInput interface {
	pulumi.Input

	ToGetVpcEndpointFilterOutput() GetVpcEndpointFilterOutput
	ToGetVpcEndpointFilterOutputWithContext(context.Context) GetVpcEndpointFilterOutput
}

type GetVpcEndpointFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpoints.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC Endpoint will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVpcEndpointFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcEndpointFilter)(nil)).Elem()
}

func (i GetVpcEndpointFilterArgs) ToGetVpcEndpointFilterOutput() GetVpcEndpointFilterOutput {
	return i.ToGetVpcEndpointFilterOutputWithContext(context.Background())
}

func (i GetVpcEndpointFilterArgs) ToGetVpcEndpointFilterOutputWithContext(ctx context.Context) GetVpcEndpointFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcEndpointFilterOutput)
}

type GetVpcEndpointFilterArrayInput interface {
	pulumi.Input

	ToGetVpcEndpointFilterArrayOutput() GetVpcEndpointFilterArrayOutput
	ToGetVpcEndpointFilterArrayOutputWithContext(context.Context) GetVpcEndpointFilterArrayOutput
}

type GetVpcEndpointFilterArray []GetVpcEndpointFilterInput

func (GetVpcEndpointFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcEndpointFilter)(nil)).Elem()
}

func (i GetVpcEndpointFilterArray) ToGetVpcEndpointFilterArrayOutput() GetVpcEndpointFilterArrayOutput {
	return i.ToGetVpcEndpointFilterArrayOutputWithContext(context.Background())
}

func (i GetVpcEndpointFilterArray) ToGetVpcEndpointFilterArrayOutputWithContext(ctx context.Context) GetVpcEndpointFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcEndpointFilterArrayOutput)
}

type GetVpcEndpointFilterOutput struct{ *pulumi.OutputState }

func (GetVpcEndpointFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcEndpointFilter)(nil)).Elem()
}

func (o GetVpcEndpointFilterOutput) ToGetVpcEndpointFilterOutput() GetVpcEndpointFilterOutput {
	return o
}

func (o GetVpcEndpointFilterOutput) ToGetVpcEndpointFilterOutputWithContext(ctx context.Context) GetVpcEndpointFilterOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpoints.html).
func (o GetVpcEndpointFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEndpointFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A VPC Endpoint will be selected if any one of the given values matches.
func (o GetVpcEndpointFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcEndpointFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVpcEndpointFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVpcEndpointFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcEndpointFilter)(nil)).Elem()
}

func (o GetVpcEndpointFilterArrayOutput) ToGetVpcEndpointFilterArrayOutput() GetVpcEndpointFilterArrayOutput {
	return o
}

func (o GetVpcEndpointFilterArrayOutput) ToGetVpcEndpointFilterArrayOutputWithContext(ctx context.Context) GetVpcEndpointFilterArrayOutput {
	return o
}

func (o GetVpcEndpointFilterArrayOutput) Index(i pulumi.IntInput) GetVpcEndpointFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcEndpointFilter {
		return vs[0].([]GetVpcEndpointFilter)[vs[1].(int)]
	}).(GetVpcEndpointFilterOutput)
}

type GetVpcEndpointFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpoints.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC Endpoint will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetVpcEndpointFilterArgsInput interface {
	pulumi.Input

	ToGetVpcEndpointFilterArgsOutput() GetVpcEndpointFilterArgsOutput
	ToGetVpcEndpointFilterArgsOutputWithContext(context.Context) GetVpcEndpointFilterArgsOutput
}

type GetVpcEndpointFilterArgsArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpoints.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC Endpoint will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVpcEndpointFilterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcEndpointFilterArgs)(nil)).Elem()
}

func (i GetVpcEndpointFilterArgsArgs) ToGetVpcEndpointFilterArgsOutput() GetVpcEndpointFilterArgsOutput {
	return i.ToGetVpcEndpointFilterArgsOutputWithContext(context.Background())
}

func (i GetVpcEndpointFilterArgsArgs) ToGetVpcEndpointFilterArgsOutputWithContext(ctx context.Context) GetVpcEndpointFilterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcEndpointFilterArgsOutput)
}

type GetVpcEndpointFilterArgsArrayInput interface {
	pulumi.Input

	ToGetVpcEndpointFilterArgsArrayOutput() GetVpcEndpointFilterArgsArrayOutput
	ToGetVpcEndpointFilterArgsArrayOutputWithContext(context.Context) GetVpcEndpointFilterArgsArrayOutput
}

type GetVpcEndpointFilterArgsArray []GetVpcEndpointFilterArgsInput

func (GetVpcEndpointFilterArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcEndpointFilterArgs)(nil)).Elem()
}

func (i GetVpcEndpointFilterArgsArray) ToGetVpcEndpointFilterArgsArrayOutput() GetVpcEndpointFilterArgsArrayOutput {
	return i.ToGetVpcEndpointFilterArgsArrayOutputWithContext(context.Background())
}

func (i GetVpcEndpointFilterArgsArray) ToGetVpcEndpointFilterArgsArrayOutputWithContext(ctx context.Context) GetVpcEndpointFilterArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcEndpointFilterArgsArrayOutput)
}

type GetVpcEndpointFilterArgsOutput struct{ *pulumi.OutputState }

func (GetVpcEndpointFilterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcEndpointFilterArgs)(nil)).Elem()
}

func (o GetVpcEndpointFilterArgsOutput) ToGetVpcEndpointFilterArgsOutput() GetVpcEndpointFilterArgsOutput {
	return o
}

func (o GetVpcEndpointFilterArgsOutput) ToGetVpcEndpointFilterArgsOutputWithContext(ctx context.Context) GetVpcEndpointFilterArgsOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpoints.html).
func (o GetVpcEndpointFilterArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEndpointFilterArgs) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A VPC Endpoint will be selected if any one of the given values matches.
func (o GetVpcEndpointFilterArgsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcEndpointFilterArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVpcEndpointFilterArgsArrayOutput struct{ *pulumi.OutputState }

func (GetVpcEndpointFilterArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcEndpointFilterArgs)(nil)).Elem()
}

func (o GetVpcEndpointFilterArgsArrayOutput) ToGetVpcEndpointFilterArgsArrayOutput() GetVpcEndpointFilterArgsArrayOutput {
	return o
}

func (o GetVpcEndpointFilterArgsArrayOutput) ToGetVpcEndpointFilterArgsArrayOutputWithContext(ctx context.Context) GetVpcEndpointFilterArgsArrayOutput {
	return o
}

func (o GetVpcEndpointFilterArgsArrayOutput) Index(i pulumi.IntInput) GetVpcEndpointFilterArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcEndpointFilterArgs {
		return vs[0].([]GetVpcEndpointFilterArgs)[vs[1].(int)]
	}).(GetVpcEndpointFilterArgsOutput)
}

type GetVpcEndpointServiceFilter struct {
	// The name of the filter field. Valid values can be found in the [EC2 DescribeVpcEndpointServices API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServices.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

type GetVpcEndpointServiceFilterInput interface {
	pulumi.Input

	ToGetVpcEndpointServiceFilterOutput() GetVpcEndpointServiceFilterOutput
	ToGetVpcEndpointServiceFilterOutputWithContext(context.Context) GetVpcEndpointServiceFilterOutput
}

type GetVpcEndpointServiceFilterArgs struct {
	// The name of the filter field. Valid values can be found in the [EC2 DescribeVpcEndpointServices API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServices.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVpcEndpointServiceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcEndpointServiceFilter)(nil)).Elem()
}

func (i GetVpcEndpointServiceFilterArgs) ToGetVpcEndpointServiceFilterOutput() GetVpcEndpointServiceFilterOutput {
	return i.ToGetVpcEndpointServiceFilterOutputWithContext(context.Background())
}

func (i GetVpcEndpointServiceFilterArgs) ToGetVpcEndpointServiceFilterOutputWithContext(ctx context.Context) GetVpcEndpointServiceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcEndpointServiceFilterOutput)
}

type GetVpcEndpointServiceFilterArrayInput interface {
	pulumi.Input

	ToGetVpcEndpointServiceFilterArrayOutput() GetVpcEndpointServiceFilterArrayOutput
	ToGetVpcEndpointServiceFilterArrayOutputWithContext(context.Context) GetVpcEndpointServiceFilterArrayOutput
}

type GetVpcEndpointServiceFilterArray []GetVpcEndpointServiceFilterInput

func (GetVpcEndpointServiceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcEndpointServiceFilter)(nil)).Elem()
}

func (i GetVpcEndpointServiceFilterArray) ToGetVpcEndpointServiceFilterArrayOutput() GetVpcEndpointServiceFilterArrayOutput {
	return i.ToGetVpcEndpointServiceFilterArrayOutputWithContext(context.Background())
}

func (i GetVpcEndpointServiceFilterArray) ToGetVpcEndpointServiceFilterArrayOutputWithContext(ctx context.Context) GetVpcEndpointServiceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcEndpointServiceFilterArrayOutput)
}

type GetVpcEndpointServiceFilterOutput struct{ *pulumi.OutputState }

func (GetVpcEndpointServiceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcEndpointServiceFilter)(nil)).Elem()
}

func (o GetVpcEndpointServiceFilterOutput) ToGetVpcEndpointServiceFilterOutput() GetVpcEndpointServiceFilterOutput {
	return o
}

func (o GetVpcEndpointServiceFilterOutput) ToGetVpcEndpointServiceFilterOutputWithContext(ctx context.Context) GetVpcEndpointServiceFilterOutput {
	return o
}

// The name of the filter field. Valid values can be found in the [EC2 DescribeVpcEndpointServices API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServices.html).
func (o GetVpcEndpointServiceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEndpointServiceFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetVpcEndpointServiceFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcEndpointServiceFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVpcEndpointServiceFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVpcEndpointServiceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcEndpointServiceFilter)(nil)).Elem()
}

func (o GetVpcEndpointServiceFilterArrayOutput) ToGetVpcEndpointServiceFilterArrayOutput() GetVpcEndpointServiceFilterArrayOutput {
	return o
}

func (o GetVpcEndpointServiceFilterArrayOutput) ToGetVpcEndpointServiceFilterArrayOutputWithContext(ctx context.Context) GetVpcEndpointServiceFilterArrayOutput {
	return o
}

func (o GetVpcEndpointServiceFilterArrayOutput) Index(i pulumi.IntInput) GetVpcEndpointServiceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcEndpointServiceFilter {
		return vs[0].([]GetVpcEndpointServiceFilter)[vs[1].(int)]
	}).(GetVpcEndpointServiceFilterOutput)
}

type GetVpcEndpointServiceFilterArgs struct {
	// The name of the filter field. Valid values can be found in the [EC2 DescribeVpcEndpointServices API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServices.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

type GetVpcEndpointServiceFilterArgsInput interface {
	pulumi.Input

	ToGetVpcEndpointServiceFilterArgsOutput() GetVpcEndpointServiceFilterArgsOutput
	ToGetVpcEndpointServiceFilterArgsOutputWithContext(context.Context) GetVpcEndpointServiceFilterArgsOutput
}

type GetVpcEndpointServiceFilterArgsArgs struct {
	// The name of the filter field. Valid values can be found in the [EC2 DescribeVpcEndpointServices API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServices.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVpcEndpointServiceFilterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcEndpointServiceFilterArgs)(nil)).Elem()
}

func (i GetVpcEndpointServiceFilterArgsArgs) ToGetVpcEndpointServiceFilterArgsOutput() GetVpcEndpointServiceFilterArgsOutput {
	return i.ToGetVpcEndpointServiceFilterArgsOutputWithContext(context.Background())
}

func (i GetVpcEndpointServiceFilterArgsArgs) ToGetVpcEndpointServiceFilterArgsOutputWithContext(ctx context.Context) GetVpcEndpointServiceFilterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcEndpointServiceFilterArgsOutput)
}

type GetVpcEndpointServiceFilterArgsArrayInput interface {
	pulumi.Input

	ToGetVpcEndpointServiceFilterArgsArrayOutput() GetVpcEndpointServiceFilterArgsArrayOutput
	ToGetVpcEndpointServiceFilterArgsArrayOutputWithContext(context.Context) GetVpcEndpointServiceFilterArgsArrayOutput
}

type GetVpcEndpointServiceFilterArgsArray []GetVpcEndpointServiceFilterArgsInput

func (GetVpcEndpointServiceFilterArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcEndpointServiceFilterArgs)(nil)).Elem()
}

func (i GetVpcEndpointServiceFilterArgsArray) ToGetVpcEndpointServiceFilterArgsArrayOutput() GetVpcEndpointServiceFilterArgsArrayOutput {
	return i.ToGetVpcEndpointServiceFilterArgsArrayOutputWithContext(context.Background())
}

func (i GetVpcEndpointServiceFilterArgsArray) ToGetVpcEndpointServiceFilterArgsArrayOutputWithContext(ctx context.Context) GetVpcEndpointServiceFilterArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcEndpointServiceFilterArgsArrayOutput)
}

type GetVpcEndpointServiceFilterArgsOutput struct{ *pulumi.OutputState }

func (GetVpcEndpointServiceFilterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcEndpointServiceFilterArgs)(nil)).Elem()
}

func (o GetVpcEndpointServiceFilterArgsOutput) ToGetVpcEndpointServiceFilterArgsOutput() GetVpcEndpointServiceFilterArgsOutput {
	return o
}

func (o GetVpcEndpointServiceFilterArgsOutput) ToGetVpcEndpointServiceFilterArgsOutputWithContext(ctx context.Context) GetVpcEndpointServiceFilterArgsOutput {
	return o
}

// The name of the filter field. Valid values can be found in the [EC2 DescribeVpcEndpointServices API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServices.html).
func (o GetVpcEndpointServiceFilterArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEndpointServiceFilterArgs) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetVpcEndpointServiceFilterArgsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcEndpointServiceFilterArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVpcEndpointServiceFilterArgsArrayOutput struct{ *pulumi.OutputState }

func (GetVpcEndpointServiceFilterArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcEndpointServiceFilterArgs)(nil)).Elem()
}

func (o GetVpcEndpointServiceFilterArgsArrayOutput) ToGetVpcEndpointServiceFilterArgsArrayOutput() GetVpcEndpointServiceFilterArgsArrayOutput {
	return o
}

func (o GetVpcEndpointServiceFilterArgsArrayOutput) ToGetVpcEndpointServiceFilterArgsArrayOutputWithContext(ctx context.Context) GetVpcEndpointServiceFilterArgsArrayOutput {
	return o
}

func (o GetVpcEndpointServiceFilterArgsArrayOutput) Index(i pulumi.IntInput) GetVpcEndpointServiceFilterArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcEndpointServiceFilterArgs {
		return vs[0].([]GetVpcEndpointServiceFilterArgs)[vs[1].(int)]
	}).(GetVpcEndpointServiceFilterArgsOutput)
}

type GetVpcFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetVpcFilterInput interface {
	pulumi.Input

	ToGetVpcFilterOutput() GetVpcFilterOutput
	ToGetVpcFilterOutputWithContext(context.Context) GetVpcFilterOutput
}

type GetVpcFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVpcFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcFilter)(nil)).Elem()
}

func (i GetVpcFilterArgs) ToGetVpcFilterOutput() GetVpcFilterOutput {
	return i.ToGetVpcFilterOutputWithContext(context.Background())
}

func (i GetVpcFilterArgs) ToGetVpcFilterOutputWithContext(ctx context.Context) GetVpcFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcFilterOutput)
}

type GetVpcFilterArrayInput interface {
	pulumi.Input

	ToGetVpcFilterArrayOutput() GetVpcFilterArrayOutput
	ToGetVpcFilterArrayOutputWithContext(context.Context) GetVpcFilterArrayOutput
}

type GetVpcFilterArray []GetVpcFilterInput

func (GetVpcFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcFilter)(nil)).Elem()
}

func (i GetVpcFilterArray) ToGetVpcFilterArrayOutput() GetVpcFilterArrayOutput {
	return i.ToGetVpcFilterArrayOutputWithContext(context.Background())
}

func (i GetVpcFilterArray) ToGetVpcFilterArrayOutputWithContext(ctx context.Context) GetVpcFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcFilterArrayOutput)
}

type GetVpcFilterOutput struct{ *pulumi.OutputState }

func (GetVpcFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcFilter)(nil)).Elem()
}

func (o GetVpcFilterOutput) ToGetVpcFilterOutput() GetVpcFilterOutput {
	return o
}

func (o GetVpcFilterOutput) ToGetVpcFilterOutputWithContext(ctx context.Context) GetVpcFilterOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).
func (o GetVpcFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A VPC will be selected if any one of the given values matches.
func (o GetVpcFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVpcFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVpcFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcFilter)(nil)).Elem()
}

func (o GetVpcFilterArrayOutput) ToGetVpcFilterArrayOutput() GetVpcFilterArrayOutput {
	return o
}

func (o GetVpcFilterArrayOutput) ToGetVpcFilterArrayOutputWithContext(ctx context.Context) GetVpcFilterArrayOutput {
	return o
}

func (o GetVpcFilterArrayOutput) Index(i pulumi.IntInput) GetVpcFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcFilter {
		return vs[0].([]GetVpcFilter)[vs[1].(int)]
	}).(GetVpcFilterOutput)
}

type GetVpcFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetVpcFilterArgsInput interface {
	pulumi.Input

	ToGetVpcFilterArgsOutput() GetVpcFilterArgsOutput
	ToGetVpcFilterArgsOutputWithContext(context.Context) GetVpcFilterArgsOutput
}

type GetVpcFilterArgsArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVpcFilterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcFilterArgs)(nil)).Elem()
}

func (i GetVpcFilterArgsArgs) ToGetVpcFilterArgsOutput() GetVpcFilterArgsOutput {
	return i.ToGetVpcFilterArgsOutputWithContext(context.Background())
}

func (i GetVpcFilterArgsArgs) ToGetVpcFilterArgsOutputWithContext(ctx context.Context) GetVpcFilterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcFilterArgsOutput)
}

type GetVpcFilterArgsArrayInput interface {
	pulumi.Input

	ToGetVpcFilterArgsArrayOutput() GetVpcFilterArgsArrayOutput
	ToGetVpcFilterArgsArrayOutputWithContext(context.Context) GetVpcFilterArgsArrayOutput
}

type GetVpcFilterArgsArray []GetVpcFilterArgsInput

func (GetVpcFilterArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcFilterArgs)(nil)).Elem()
}

func (i GetVpcFilterArgsArray) ToGetVpcFilterArgsArrayOutput() GetVpcFilterArgsArrayOutput {
	return i.ToGetVpcFilterArgsArrayOutputWithContext(context.Background())
}

func (i GetVpcFilterArgsArray) ToGetVpcFilterArgsArrayOutputWithContext(ctx context.Context) GetVpcFilterArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcFilterArgsArrayOutput)
}

type GetVpcFilterArgsOutput struct{ *pulumi.OutputState }

func (GetVpcFilterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcFilterArgs)(nil)).Elem()
}

func (o GetVpcFilterArgsOutput) ToGetVpcFilterArgsOutput() GetVpcFilterArgsOutput {
	return o
}

func (o GetVpcFilterArgsOutput) ToGetVpcFilterArgsOutputWithContext(ctx context.Context) GetVpcFilterArgsOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).
func (o GetVpcFilterArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcFilterArgs) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A VPC will be selected if any one of the given values matches.
func (o GetVpcFilterArgsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcFilterArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVpcFilterArgsArrayOutput struct{ *pulumi.OutputState }

func (GetVpcFilterArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcFilterArgs)(nil)).Elem()
}

func (o GetVpcFilterArgsArrayOutput) ToGetVpcFilterArgsArrayOutput() GetVpcFilterArgsArrayOutput {
	return o
}

func (o GetVpcFilterArgsArrayOutput) ToGetVpcFilterArgsArrayOutputWithContext(ctx context.Context) GetVpcFilterArgsArrayOutput {
	return o
}

func (o GetVpcFilterArgsArrayOutput) Index(i pulumi.IntInput) GetVpcFilterArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcFilterArgs {
		return vs[0].([]GetVpcFilterArgs)[vs[1].(int)]
	}).(GetVpcFilterArgsOutput)
}

type GetVpcPeeringConnectionFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC Peering Connection will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetVpcPeeringConnectionFilterInput interface {
	pulumi.Input

	ToGetVpcPeeringConnectionFilterOutput() GetVpcPeeringConnectionFilterOutput
	ToGetVpcPeeringConnectionFilterOutputWithContext(context.Context) GetVpcPeeringConnectionFilterOutput
}

type GetVpcPeeringConnectionFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC Peering Connection will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVpcPeeringConnectionFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcPeeringConnectionFilter)(nil)).Elem()
}

func (i GetVpcPeeringConnectionFilterArgs) ToGetVpcPeeringConnectionFilterOutput() GetVpcPeeringConnectionFilterOutput {
	return i.ToGetVpcPeeringConnectionFilterOutputWithContext(context.Background())
}

func (i GetVpcPeeringConnectionFilterArgs) ToGetVpcPeeringConnectionFilterOutputWithContext(ctx context.Context) GetVpcPeeringConnectionFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcPeeringConnectionFilterOutput)
}

type GetVpcPeeringConnectionFilterArrayInput interface {
	pulumi.Input

	ToGetVpcPeeringConnectionFilterArrayOutput() GetVpcPeeringConnectionFilterArrayOutput
	ToGetVpcPeeringConnectionFilterArrayOutputWithContext(context.Context) GetVpcPeeringConnectionFilterArrayOutput
}

type GetVpcPeeringConnectionFilterArray []GetVpcPeeringConnectionFilterInput

func (GetVpcPeeringConnectionFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcPeeringConnectionFilter)(nil)).Elem()
}

func (i GetVpcPeeringConnectionFilterArray) ToGetVpcPeeringConnectionFilterArrayOutput() GetVpcPeeringConnectionFilterArrayOutput {
	return i.ToGetVpcPeeringConnectionFilterArrayOutputWithContext(context.Background())
}

func (i GetVpcPeeringConnectionFilterArray) ToGetVpcPeeringConnectionFilterArrayOutputWithContext(ctx context.Context) GetVpcPeeringConnectionFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcPeeringConnectionFilterArrayOutput)
}

type GetVpcPeeringConnectionFilterOutput struct{ *pulumi.OutputState }

func (GetVpcPeeringConnectionFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcPeeringConnectionFilter)(nil)).Elem()
}

func (o GetVpcPeeringConnectionFilterOutput) ToGetVpcPeeringConnectionFilterOutput() GetVpcPeeringConnectionFilterOutput {
	return o
}

func (o GetVpcPeeringConnectionFilterOutput) ToGetVpcPeeringConnectionFilterOutputWithContext(ctx context.Context) GetVpcPeeringConnectionFilterOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html).
func (o GetVpcPeeringConnectionFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcPeeringConnectionFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A VPC Peering Connection will be selected if any one of the given values matches.
func (o GetVpcPeeringConnectionFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcPeeringConnectionFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVpcPeeringConnectionFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVpcPeeringConnectionFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcPeeringConnectionFilter)(nil)).Elem()
}

func (o GetVpcPeeringConnectionFilterArrayOutput) ToGetVpcPeeringConnectionFilterArrayOutput() GetVpcPeeringConnectionFilterArrayOutput {
	return o
}

func (o GetVpcPeeringConnectionFilterArrayOutput) ToGetVpcPeeringConnectionFilterArrayOutputWithContext(ctx context.Context) GetVpcPeeringConnectionFilterArrayOutput {
	return o
}

func (o GetVpcPeeringConnectionFilterArrayOutput) Index(i pulumi.IntInput) GetVpcPeeringConnectionFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcPeeringConnectionFilter {
		return vs[0].([]GetVpcPeeringConnectionFilter)[vs[1].(int)]
	}).(GetVpcPeeringConnectionFilterOutput)
}

type GetVpcPeeringConnectionFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC Peering Connection will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetVpcPeeringConnectionFilterArgsInput interface {
	pulumi.Input

	ToGetVpcPeeringConnectionFilterArgsOutput() GetVpcPeeringConnectionFilterArgsOutput
	ToGetVpcPeeringConnectionFilterArgsOutputWithContext(context.Context) GetVpcPeeringConnectionFilterArgsOutput
}

type GetVpcPeeringConnectionFilterArgsArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC Peering Connection will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVpcPeeringConnectionFilterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcPeeringConnectionFilterArgs)(nil)).Elem()
}

func (i GetVpcPeeringConnectionFilterArgsArgs) ToGetVpcPeeringConnectionFilterArgsOutput() GetVpcPeeringConnectionFilterArgsOutput {
	return i.ToGetVpcPeeringConnectionFilterArgsOutputWithContext(context.Background())
}

func (i GetVpcPeeringConnectionFilterArgsArgs) ToGetVpcPeeringConnectionFilterArgsOutputWithContext(ctx context.Context) GetVpcPeeringConnectionFilterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcPeeringConnectionFilterArgsOutput)
}

type GetVpcPeeringConnectionFilterArgsArrayInput interface {
	pulumi.Input

	ToGetVpcPeeringConnectionFilterArgsArrayOutput() GetVpcPeeringConnectionFilterArgsArrayOutput
	ToGetVpcPeeringConnectionFilterArgsArrayOutputWithContext(context.Context) GetVpcPeeringConnectionFilterArgsArrayOutput
}

type GetVpcPeeringConnectionFilterArgsArray []GetVpcPeeringConnectionFilterArgsInput

func (GetVpcPeeringConnectionFilterArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcPeeringConnectionFilterArgs)(nil)).Elem()
}

func (i GetVpcPeeringConnectionFilterArgsArray) ToGetVpcPeeringConnectionFilterArgsArrayOutput() GetVpcPeeringConnectionFilterArgsArrayOutput {
	return i.ToGetVpcPeeringConnectionFilterArgsArrayOutputWithContext(context.Background())
}

func (i GetVpcPeeringConnectionFilterArgsArray) ToGetVpcPeeringConnectionFilterArgsArrayOutputWithContext(ctx context.Context) GetVpcPeeringConnectionFilterArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcPeeringConnectionFilterArgsArrayOutput)
}

type GetVpcPeeringConnectionFilterArgsOutput struct{ *pulumi.OutputState }

func (GetVpcPeeringConnectionFilterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcPeeringConnectionFilterArgs)(nil)).Elem()
}

func (o GetVpcPeeringConnectionFilterArgsOutput) ToGetVpcPeeringConnectionFilterArgsOutput() GetVpcPeeringConnectionFilterArgsOutput {
	return o
}

func (o GetVpcPeeringConnectionFilterArgsOutput) ToGetVpcPeeringConnectionFilterArgsOutputWithContext(ctx context.Context) GetVpcPeeringConnectionFilterArgsOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html).
func (o GetVpcPeeringConnectionFilterArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcPeeringConnectionFilterArgs) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A VPC Peering Connection will be selected if any one of the given values matches.
func (o GetVpcPeeringConnectionFilterArgsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcPeeringConnectionFilterArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVpcPeeringConnectionFilterArgsArrayOutput struct{ *pulumi.OutputState }

func (GetVpcPeeringConnectionFilterArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcPeeringConnectionFilterArgs)(nil)).Elem()
}

func (o GetVpcPeeringConnectionFilterArgsArrayOutput) ToGetVpcPeeringConnectionFilterArgsArrayOutput() GetVpcPeeringConnectionFilterArgsArrayOutput {
	return o
}

func (o GetVpcPeeringConnectionFilterArgsArrayOutput) ToGetVpcPeeringConnectionFilterArgsArrayOutputWithContext(ctx context.Context) GetVpcPeeringConnectionFilterArgsArrayOutput {
	return o
}

func (o GetVpcPeeringConnectionFilterArgsArrayOutput) Index(i pulumi.IntInput) GetVpcPeeringConnectionFilterArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcPeeringConnectionFilterArgs {
		return vs[0].([]GetVpcPeeringConnectionFilterArgs)[vs[1].(int)]
	}).(GetVpcPeeringConnectionFilterArgsOutput)
}

type GetVpcsFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetVpcsFilterInput interface {
	pulumi.Input

	ToGetVpcsFilterOutput() GetVpcsFilterOutput
	ToGetVpcsFilterOutputWithContext(context.Context) GetVpcsFilterOutput
}

type GetVpcsFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVpcsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcsFilter)(nil)).Elem()
}

func (i GetVpcsFilterArgs) ToGetVpcsFilterOutput() GetVpcsFilterOutput {
	return i.ToGetVpcsFilterOutputWithContext(context.Background())
}

func (i GetVpcsFilterArgs) ToGetVpcsFilterOutputWithContext(ctx context.Context) GetVpcsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcsFilterOutput)
}

type GetVpcsFilterArrayInput interface {
	pulumi.Input

	ToGetVpcsFilterArrayOutput() GetVpcsFilterArrayOutput
	ToGetVpcsFilterArrayOutputWithContext(context.Context) GetVpcsFilterArrayOutput
}

type GetVpcsFilterArray []GetVpcsFilterInput

func (GetVpcsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcsFilter)(nil)).Elem()
}

func (i GetVpcsFilterArray) ToGetVpcsFilterArrayOutput() GetVpcsFilterArrayOutput {
	return i.ToGetVpcsFilterArrayOutputWithContext(context.Background())
}

func (i GetVpcsFilterArray) ToGetVpcsFilterArrayOutputWithContext(ctx context.Context) GetVpcsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcsFilterArrayOutput)
}

type GetVpcsFilterOutput struct{ *pulumi.OutputState }

func (GetVpcsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcsFilter)(nil)).Elem()
}

func (o GetVpcsFilterOutput) ToGetVpcsFilterOutput() GetVpcsFilterOutput {
	return o
}

func (o GetVpcsFilterOutput) ToGetVpcsFilterOutputWithContext(ctx context.Context) GetVpcsFilterOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).
func (o GetVpcsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A VPC will be selected if any one of the given values matches.
func (o GetVpcsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVpcsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVpcsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcsFilter)(nil)).Elem()
}

func (o GetVpcsFilterArrayOutput) ToGetVpcsFilterArrayOutput() GetVpcsFilterArrayOutput {
	return o
}

func (o GetVpcsFilterArrayOutput) ToGetVpcsFilterArrayOutputWithContext(ctx context.Context) GetVpcsFilterArrayOutput {
	return o
}

func (o GetVpcsFilterArrayOutput) Index(i pulumi.IntInput) GetVpcsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcsFilter {
		return vs[0].([]GetVpcsFilter)[vs[1].(int)]
	}).(GetVpcsFilterOutput)
}

type GetVpcsFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetVpcsFilterArgsInput interface {
	pulumi.Input

	ToGetVpcsFilterArgsOutput() GetVpcsFilterArgsOutput
	ToGetVpcsFilterArgsOutputWithContext(context.Context) GetVpcsFilterArgsOutput
}

type GetVpcsFilterArgsArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVpcsFilterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcsFilterArgs)(nil)).Elem()
}

func (i GetVpcsFilterArgsArgs) ToGetVpcsFilterArgsOutput() GetVpcsFilterArgsOutput {
	return i.ToGetVpcsFilterArgsOutputWithContext(context.Background())
}

func (i GetVpcsFilterArgsArgs) ToGetVpcsFilterArgsOutputWithContext(ctx context.Context) GetVpcsFilterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcsFilterArgsOutput)
}

type GetVpcsFilterArgsArrayInput interface {
	pulumi.Input

	ToGetVpcsFilterArgsArrayOutput() GetVpcsFilterArgsArrayOutput
	ToGetVpcsFilterArgsArrayOutputWithContext(context.Context) GetVpcsFilterArgsArrayOutput
}

type GetVpcsFilterArgsArray []GetVpcsFilterArgsInput

func (GetVpcsFilterArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcsFilterArgs)(nil)).Elem()
}

func (i GetVpcsFilterArgsArray) ToGetVpcsFilterArgsArrayOutput() GetVpcsFilterArgsArrayOutput {
	return i.ToGetVpcsFilterArgsArrayOutputWithContext(context.Background())
}

func (i GetVpcsFilterArgsArray) ToGetVpcsFilterArgsArrayOutputWithContext(ctx context.Context) GetVpcsFilterArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcsFilterArgsArrayOutput)
}

type GetVpcsFilterArgsOutput struct{ *pulumi.OutputState }

func (GetVpcsFilterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcsFilterArgs)(nil)).Elem()
}

func (o GetVpcsFilterArgsOutput) ToGetVpcsFilterArgsOutput() GetVpcsFilterArgsOutput {
	return o
}

func (o GetVpcsFilterArgsOutput) ToGetVpcsFilterArgsOutputWithContext(ctx context.Context) GetVpcsFilterArgsOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).
func (o GetVpcsFilterArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsFilterArgs) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A VPC will be selected if any one of the given values matches.
func (o GetVpcsFilterArgsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcsFilterArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVpcsFilterArgsArrayOutput struct{ *pulumi.OutputState }

func (GetVpcsFilterArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcsFilterArgs)(nil)).Elem()
}

func (o GetVpcsFilterArgsArrayOutput) ToGetVpcsFilterArgsArrayOutput() GetVpcsFilterArgsArrayOutput {
	return o
}

func (o GetVpcsFilterArgsArrayOutput) ToGetVpcsFilterArgsArrayOutputWithContext(ctx context.Context) GetVpcsFilterArgsArrayOutput {
	return o
}

func (o GetVpcsFilterArgsArrayOutput) Index(i pulumi.IntInput) GetVpcsFilterArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcsFilterArgs {
		return vs[0].([]GetVpcsFilterArgs)[vs[1].(int)]
	}).(GetVpcsFilterArgsOutput)
}

type GetVpnGatewayFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnGateways.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPN Gateway will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetVpnGatewayFilterInput interface {
	pulumi.Input

	ToGetVpnGatewayFilterOutput() GetVpnGatewayFilterOutput
	ToGetVpnGatewayFilterOutputWithContext(context.Context) GetVpnGatewayFilterOutput
}

type GetVpnGatewayFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnGateways.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPN Gateway will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVpnGatewayFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnGatewayFilter)(nil)).Elem()
}

func (i GetVpnGatewayFilterArgs) ToGetVpnGatewayFilterOutput() GetVpnGatewayFilterOutput {
	return i.ToGetVpnGatewayFilterOutputWithContext(context.Background())
}

func (i GetVpnGatewayFilterArgs) ToGetVpnGatewayFilterOutputWithContext(ctx context.Context) GetVpnGatewayFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnGatewayFilterOutput)
}

type GetVpnGatewayFilterArrayInput interface {
	pulumi.Input

	ToGetVpnGatewayFilterArrayOutput() GetVpnGatewayFilterArrayOutput
	ToGetVpnGatewayFilterArrayOutputWithContext(context.Context) GetVpnGatewayFilterArrayOutput
}

type GetVpnGatewayFilterArray []GetVpnGatewayFilterInput

func (GetVpnGatewayFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnGatewayFilter)(nil)).Elem()
}

func (i GetVpnGatewayFilterArray) ToGetVpnGatewayFilterArrayOutput() GetVpnGatewayFilterArrayOutput {
	return i.ToGetVpnGatewayFilterArrayOutputWithContext(context.Background())
}

func (i GetVpnGatewayFilterArray) ToGetVpnGatewayFilterArrayOutputWithContext(ctx context.Context) GetVpnGatewayFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnGatewayFilterArrayOutput)
}

type GetVpnGatewayFilterOutput struct{ *pulumi.OutputState }

func (GetVpnGatewayFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnGatewayFilter)(nil)).Elem()
}

func (o GetVpnGatewayFilterOutput) ToGetVpnGatewayFilterOutput() GetVpnGatewayFilterOutput {
	return o
}

func (o GetVpnGatewayFilterOutput) ToGetVpnGatewayFilterOutputWithContext(ctx context.Context) GetVpnGatewayFilterOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnGateways.html).
func (o GetVpnGatewayFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnGatewayFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A VPN Gateway will be selected if any one of the given values matches.
func (o GetVpnGatewayFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpnGatewayFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVpnGatewayFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVpnGatewayFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnGatewayFilter)(nil)).Elem()
}

func (o GetVpnGatewayFilterArrayOutput) ToGetVpnGatewayFilterArrayOutput() GetVpnGatewayFilterArrayOutput {
	return o
}

func (o GetVpnGatewayFilterArrayOutput) ToGetVpnGatewayFilterArrayOutputWithContext(ctx context.Context) GetVpnGatewayFilterArrayOutput {
	return o
}

func (o GetVpnGatewayFilterArrayOutput) Index(i pulumi.IntInput) GetVpnGatewayFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnGatewayFilter {
		return vs[0].([]GetVpnGatewayFilter)[vs[1].(int)]
	}).(GetVpnGatewayFilterOutput)
}

type GetVpnGatewayFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnGateways.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPN Gateway will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetVpnGatewayFilterArgsInput interface {
	pulumi.Input

	ToGetVpnGatewayFilterArgsOutput() GetVpnGatewayFilterArgsOutput
	ToGetVpnGatewayFilterArgsOutputWithContext(context.Context) GetVpnGatewayFilterArgsOutput
}

type GetVpnGatewayFilterArgsArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnGateways.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPN Gateway will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVpnGatewayFilterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnGatewayFilterArgs)(nil)).Elem()
}

func (i GetVpnGatewayFilterArgsArgs) ToGetVpnGatewayFilterArgsOutput() GetVpnGatewayFilterArgsOutput {
	return i.ToGetVpnGatewayFilterArgsOutputWithContext(context.Background())
}

func (i GetVpnGatewayFilterArgsArgs) ToGetVpnGatewayFilterArgsOutputWithContext(ctx context.Context) GetVpnGatewayFilterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnGatewayFilterArgsOutput)
}

type GetVpnGatewayFilterArgsArrayInput interface {
	pulumi.Input

	ToGetVpnGatewayFilterArgsArrayOutput() GetVpnGatewayFilterArgsArrayOutput
	ToGetVpnGatewayFilterArgsArrayOutputWithContext(context.Context) GetVpnGatewayFilterArgsArrayOutput
}

type GetVpnGatewayFilterArgsArray []GetVpnGatewayFilterArgsInput

func (GetVpnGatewayFilterArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnGatewayFilterArgs)(nil)).Elem()
}

func (i GetVpnGatewayFilterArgsArray) ToGetVpnGatewayFilterArgsArrayOutput() GetVpnGatewayFilterArgsArrayOutput {
	return i.ToGetVpnGatewayFilterArgsArrayOutputWithContext(context.Background())
}

func (i GetVpnGatewayFilterArgsArray) ToGetVpnGatewayFilterArgsArrayOutputWithContext(ctx context.Context) GetVpnGatewayFilterArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnGatewayFilterArgsArrayOutput)
}

type GetVpnGatewayFilterArgsOutput struct{ *pulumi.OutputState }

func (GetVpnGatewayFilterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnGatewayFilterArgs)(nil)).Elem()
}

func (o GetVpnGatewayFilterArgsOutput) ToGetVpnGatewayFilterArgsOutput() GetVpnGatewayFilterArgsOutput {
	return o
}

func (o GetVpnGatewayFilterArgsOutput) ToGetVpnGatewayFilterArgsOutputWithContext(ctx context.Context) GetVpnGatewayFilterArgsOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnGateways.html).
func (o GetVpnGatewayFilterArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnGatewayFilterArgs) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A VPN Gateway will be selected if any one of the given values matches.
func (o GetVpnGatewayFilterArgsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpnGatewayFilterArgs) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVpnGatewayFilterArgsArrayOutput struct{ *pulumi.OutputState }

func (GetVpnGatewayFilterArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnGatewayFilterArgs)(nil)).Elem()
}

func (o GetVpnGatewayFilterArgsArrayOutput) ToGetVpnGatewayFilterArgsArrayOutput() GetVpnGatewayFilterArgsArrayOutput {
	return o
}

func (o GetVpnGatewayFilterArgsArrayOutput) ToGetVpnGatewayFilterArgsArrayOutputWithContext(ctx context.Context) GetVpnGatewayFilterArgsArrayOutput {
	return o
}

func (o GetVpnGatewayFilterArgsArrayOutput) Index(i pulumi.IntInput) GetVpnGatewayFilterArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnGatewayFilterArgs {
		return vs[0].([]GetVpnGatewayFilterArgs)[vs[1].(int)]
	}).(GetVpnGatewayFilterArgsOutput)
}

func init() {
	pulumi.RegisterOutputType(AmiCopyEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(AmiCopyEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(AmiCopyEbsBlockDeviceArgsOutput{})
	pulumi.RegisterOutputType(AmiCopyEbsBlockDeviceArgsArrayOutput{})
	pulumi.RegisterOutputType(AmiCopyEbsBlockDeviceStateOutput{})
	pulumi.RegisterOutputType(AmiCopyEbsBlockDeviceStateArrayOutput{})
	pulumi.RegisterOutputType(AmiCopyEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(AmiCopyEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(AmiCopyEphemeralBlockDeviceArgsOutput{})
	pulumi.RegisterOutputType(AmiCopyEphemeralBlockDeviceArgsArrayOutput{})
	pulumi.RegisterOutputType(AmiCopyEphemeralBlockDeviceStateOutput{})
	pulumi.RegisterOutputType(AmiCopyEphemeralBlockDeviceStateArrayOutput{})
	pulumi.RegisterOutputType(AmiEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(AmiEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(AmiEbsBlockDeviceArgsOutput{})
	pulumi.RegisterOutputType(AmiEbsBlockDeviceArgsArrayOutput{})
	pulumi.RegisterOutputType(AmiEbsBlockDeviceStateOutput{})
	pulumi.RegisterOutputType(AmiEbsBlockDeviceStateArrayOutput{})
	pulumi.RegisterOutputType(AmiEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(AmiEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(AmiEphemeralBlockDeviceArgsOutput{})
	pulumi.RegisterOutputType(AmiEphemeralBlockDeviceArgsArrayOutput{})
	pulumi.RegisterOutputType(AmiEphemeralBlockDeviceStateOutput{})
	pulumi.RegisterOutputType(AmiEphemeralBlockDeviceStateArrayOutput{})
	pulumi.RegisterOutputType(AmiFromInstanceEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(AmiFromInstanceEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(AmiFromInstanceEbsBlockDeviceArgsOutput{})
	pulumi.RegisterOutputType(AmiFromInstanceEbsBlockDeviceArgsArrayOutput{})
	pulumi.RegisterOutputType(AmiFromInstanceEbsBlockDeviceStateOutput{})
	pulumi.RegisterOutputType(AmiFromInstanceEbsBlockDeviceStateArrayOutput{})
	pulumi.RegisterOutputType(AmiFromInstanceEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(AmiFromInstanceEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(AmiFromInstanceEphemeralBlockDeviceArgsOutput{})
	pulumi.RegisterOutputType(AmiFromInstanceEphemeralBlockDeviceArgsArrayOutput{})
	pulumi.RegisterOutputType(AmiFromInstanceEphemeralBlockDeviceStateOutput{})
	pulumi.RegisterOutputType(AmiFromInstanceEphemeralBlockDeviceStateArrayOutput{})
	pulumi.RegisterOutputType(DefaultNetworkAclEgressOutput{})
	pulumi.RegisterOutputType(DefaultNetworkAclEgressArrayOutput{})
	pulumi.RegisterOutputType(DefaultNetworkAclEgressArgsOutput{})
	pulumi.RegisterOutputType(DefaultNetworkAclEgressArgsArrayOutput{})
	pulumi.RegisterOutputType(DefaultNetworkAclEgressStateOutput{})
	pulumi.RegisterOutputType(DefaultNetworkAclEgressStateArrayOutput{})
	pulumi.RegisterOutputType(DefaultNetworkAclIngressOutput{})
	pulumi.RegisterOutputType(DefaultNetworkAclIngressArrayOutput{})
	pulumi.RegisterOutputType(DefaultNetworkAclIngressArgsOutput{})
	pulumi.RegisterOutputType(DefaultNetworkAclIngressArgsArrayOutput{})
	pulumi.RegisterOutputType(DefaultNetworkAclIngressStateOutput{})
	pulumi.RegisterOutputType(DefaultNetworkAclIngressStateArrayOutput{})
	pulumi.RegisterOutputType(DefaultRouteTableRouteOutput{})
	pulumi.RegisterOutputType(DefaultRouteTableRouteArrayOutput{})
	pulumi.RegisterOutputType(DefaultRouteTableRouteArgsOutput{})
	pulumi.RegisterOutputType(DefaultRouteTableRouteArgsArrayOutput{})
	pulumi.RegisterOutputType(DefaultRouteTableRouteStateOutput{})
	pulumi.RegisterOutputType(DefaultRouteTableRouteStateArrayOutput{})
	pulumi.RegisterOutputType(DefaultSecurityGroupEgressOutput{})
	pulumi.RegisterOutputType(DefaultSecurityGroupEgressArrayOutput{})
	pulumi.RegisterOutputType(DefaultSecurityGroupEgressArgsOutput{})
	pulumi.RegisterOutputType(DefaultSecurityGroupEgressArgsArrayOutput{})
	pulumi.RegisterOutputType(DefaultSecurityGroupEgressStateOutput{})
	pulumi.RegisterOutputType(DefaultSecurityGroupEgressStateArrayOutput{})
	pulumi.RegisterOutputType(DefaultSecurityGroupIngressOutput{})
	pulumi.RegisterOutputType(DefaultSecurityGroupIngressArrayOutput{})
	pulumi.RegisterOutputType(DefaultSecurityGroupIngressArgsOutput{})
	pulumi.RegisterOutputType(DefaultSecurityGroupIngressArgsArrayOutput{})
	pulumi.RegisterOutputType(DefaultSecurityGroupIngressStateOutput{})
	pulumi.RegisterOutputType(DefaultSecurityGroupIngressStateArrayOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigPtrOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigArgsOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigArgsPtrOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigLaunchTemplateSpecificationArgsOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigOverrideOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigOverrideArrayOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigOverrideArgsOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigOverrideArgsArrayOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigStateOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigStateLaunchTemplateSpecificationOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigStateOverrideOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigStateOverrideArrayOutput{})
	pulumi.RegisterOutputType(FleetOnDemandOptionsOutput{})
	pulumi.RegisterOutputType(FleetOnDemandOptionsPtrOutput{})
	pulumi.RegisterOutputType(FleetOnDemandOptionsArgsOutput{})
	pulumi.RegisterOutputType(FleetOnDemandOptionsArgsPtrOutput{})
	pulumi.RegisterOutputType(FleetOnDemandOptionsStateOutput{})
	pulumi.RegisterOutputType(FleetSpotOptionsOutput{})
	pulumi.RegisterOutputType(FleetSpotOptionsPtrOutput{})
	pulumi.RegisterOutputType(FleetSpotOptionsArgsOutput{})
	pulumi.RegisterOutputType(FleetSpotOptionsArgsPtrOutput{})
	pulumi.RegisterOutputType(FleetSpotOptionsStateOutput{})
	pulumi.RegisterOutputType(FleetTargetCapacitySpecificationOutput{})
	pulumi.RegisterOutputType(FleetTargetCapacitySpecificationPtrOutput{})
	pulumi.RegisterOutputType(FleetTargetCapacitySpecificationArgsOutput{})
	pulumi.RegisterOutputType(FleetTargetCapacitySpecificationArgsPtrOutput{})
	pulumi.RegisterOutputType(FleetTargetCapacitySpecificationStateOutput{})
	pulumi.RegisterOutputType(InstanceCreditSpecificationOutput{})
	pulumi.RegisterOutputType(InstanceCreditSpecificationPtrOutput{})
	pulumi.RegisterOutputType(InstanceCreditSpecificationArgsOutput{})
	pulumi.RegisterOutputType(InstanceCreditSpecificationArgsPtrOutput{})
	pulumi.RegisterOutputType(InstanceCreditSpecificationStateOutput{})
	pulumi.RegisterOutputType(InstanceEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(InstanceEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(InstanceEbsBlockDeviceArgsOutput{})
	pulumi.RegisterOutputType(InstanceEbsBlockDeviceArgsArrayOutput{})
	pulumi.RegisterOutputType(InstanceEbsBlockDeviceStateOutput{})
	pulumi.RegisterOutputType(InstanceEbsBlockDeviceStateArrayOutput{})
	pulumi.RegisterOutputType(InstanceEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(InstanceEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(InstanceEphemeralBlockDeviceArgsOutput{})
	pulumi.RegisterOutputType(InstanceEphemeralBlockDeviceArgsArrayOutput{})
	pulumi.RegisterOutputType(InstanceEphemeralBlockDeviceStateOutput{})
	pulumi.RegisterOutputType(InstanceEphemeralBlockDeviceStateArrayOutput{})
	pulumi.RegisterOutputType(InstanceMetadataOptionsOutput{})
	pulumi.RegisterOutputType(InstanceMetadataOptionsPtrOutput{})
	pulumi.RegisterOutputType(InstanceMetadataOptionsArgsOutput{})
	pulumi.RegisterOutputType(InstanceMetadataOptionsArgsPtrOutput{})
	pulumi.RegisterOutputType(InstanceMetadataOptionsStateOutput{})
	pulumi.RegisterOutputType(InstanceNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(InstanceNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(InstanceNetworkInterfaceArgsOutput{})
	pulumi.RegisterOutputType(InstanceNetworkInterfaceArgsArrayOutput{})
	pulumi.RegisterOutputType(InstanceNetworkInterfaceStateOutput{})
	pulumi.RegisterOutputType(InstanceNetworkInterfaceStateArrayOutput{})
	pulumi.RegisterOutputType(InstanceRootBlockDeviceOutput{})
	pulumi.RegisterOutputType(InstanceRootBlockDevicePtrOutput{})
	pulumi.RegisterOutputType(InstanceRootBlockDeviceArgsOutput{})
	pulumi.RegisterOutputType(InstanceRootBlockDeviceArgsPtrOutput{})
	pulumi.RegisterOutputType(InstanceRootBlockDeviceStateOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationEbsBlockDeviceArgsOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationEbsBlockDeviceArgsArrayOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationEbsBlockDeviceStateOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationEbsBlockDeviceStateArrayOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationEphemeralBlockDeviceArgsOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationEphemeralBlockDeviceArgsArrayOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationEphemeralBlockDeviceStateOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationEphemeralBlockDeviceStateArrayOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationRootBlockDeviceOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationRootBlockDevicePtrOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationRootBlockDeviceArgsOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationRootBlockDeviceArgsPtrOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationRootBlockDeviceStateOutput{})
	pulumi.RegisterOutputType(LaunchTemplateBlockDeviceMappingOutput{})
	pulumi.RegisterOutputType(LaunchTemplateBlockDeviceMappingArrayOutput{})
	pulumi.RegisterOutputType(LaunchTemplateBlockDeviceMappingArgsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateBlockDeviceMappingArgsArrayOutput{})
	pulumi.RegisterOutputType(LaunchTemplateBlockDeviceMappingEbsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateBlockDeviceMappingEbsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateBlockDeviceMappingEbsArgsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateBlockDeviceMappingEbsArgsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateBlockDeviceMappingStateOutput{})
	pulumi.RegisterOutputType(LaunchTemplateBlockDeviceMappingStateArrayOutput{})
	pulumi.RegisterOutputType(LaunchTemplateBlockDeviceMappingStateEbsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateBlockDeviceMappingStateEbsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCapacityReservationSpecificationOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCapacityReservationSpecificationPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCapacityReservationSpecificationArgsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCapacityReservationSpecificationArgsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCapacityReservationSpecificationStateOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCapacityReservationSpecificationStateCapacityReservationTargetPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCpuOptionsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCpuOptionsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCpuOptionsArgsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCpuOptionsArgsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCpuOptionsStateOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCreditSpecificationOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCreditSpecificationPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCreditSpecificationArgsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCreditSpecificationArgsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCreditSpecificationStateOutput{})
	pulumi.RegisterOutputType(LaunchTemplateElasticGpuSpecificationOutput{})
	pulumi.RegisterOutputType(LaunchTemplateElasticGpuSpecificationArrayOutput{})
	pulumi.RegisterOutputType(LaunchTemplateElasticGpuSpecificationArgsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateElasticGpuSpecificationArgsArrayOutput{})
	pulumi.RegisterOutputType(LaunchTemplateElasticGpuSpecificationStateOutput{})
	pulumi.RegisterOutputType(LaunchTemplateElasticGpuSpecificationStateArrayOutput{})
	pulumi.RegisterOutputType(LaunchTemplateElasticInferenceAcceleratorOutput{})
	pulumi.RegisterOutputType(LaunchTemplateElasticInferenceAcceleratorPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateElasticInferenceAcceleratorArgsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateElasticInferenceAcceleratorArgsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateElasticInferenceAcceleratorStateOutput{})
	pulumi.RegisterOutputType(LaunchTemplateHibernationOptionsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateHibernationOptionsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateHibernationOptionsArgsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateHibernationOptionsArgsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateHibernationOptionsStateOutput{})
	pulumi.RegisterOutputType(LaunchTemplateIamInstanceProfileOutput{})
	pulumi.RegisterOutputType(LaunchTemplateIamInstanceProfilePtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateIamInstanceProfileArgsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateIamInstanceProfileArgsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateIamInstanceProfileStateOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceMarketOptionsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceMarketOptionsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceMarketOptionsArgsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceMarketOptionsArgsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceMarketOptionsSpotOptionsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceMarketOptionsSpotOptionsArgsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceMarketOptionsSpotOptionsArgsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceMarketOptionsStateOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceMarketOptionsStateSpotOptionsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceMarketOptionsStateSpotOptionsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateLicenseSpecificationOutput{})
	pulumi.RegisterOutputType(LaunchTemplateLicenseSpecificationArrayOutput{})
	pulumi.RegisterOutputType(LaunchTemplateLicenseSpecificationArgsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateLicenseSpecificationArgsArrayOutput{})
	pulumi.RegisterOutputType(LaunchTemplateLicenseSpecificationStateOutput{})
	pulumi.RegisterOutputType(LaunchTemplateLicenseSpecificationStateArrayOutput{})
	pulumi.RegisterOutputType(LaunchTemplateMetadataOptionsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateMetadataOptionsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateMetadataOptionsArgsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateMetadataOptionsArgsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateMetadataOptionsStateOutput{})
	pulumi.RegisterOutputType(LaunchTemplateMonitoringOutput{})
	pulumi.RegisterOutputType(LaunchTemplateMonitoringPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateMonitoringArgsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateMonitoringArgsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateMonitoringStateOutput{})
	pulumi.RegisterOutputType(LaunchTemplateNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(LaunchTemplateNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(LaunchTemplateNetworkInterfaceArgsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateNetworkInterfaceArgsArrayOutput{})
	pulumi.RegisterOutputType(LaunchTemplateNetworkInterfaceStateOutput{})
	pulumi.RegisterOutputType(LaunchTemplateNetworkInterfaceStateArrayOutput{})
	pulumi.RegisterOutputType(LaunchTemplatePlacementOutput{})
	pulumi.RegisterOutputType(LaunchTemplatePlacementPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplatePlacementArgsOutput{})
	pulumi.RegisterOutputType(LaunchTemplatePlacementArgsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplatePlacementStateOutput{})
	pulumi.RegisterOutputType(LaunchTemplateTagSpecificationOutput{})
	pulumi.RegisterOutputType(LaunchTemplateTagSpecificationArrayOutput{})
	pulumi.RegisterOutputType(LaunchTemplateTagSpecificationArgsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateTagSpecificationArgsArrayOutput{})
	pulumi.RegisterOutputType(LaunchTemplateTagSpecificationStateOutput{})
	pulumi.RegisterOutputType(LaunchTemplateTagSpecificationStateArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclEgressOutput{})
	pulumi.RegisterOutputType(NetworkAclEgressArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclEgressArgsOutput{})
	pulumi.RegisterOutputType(NetworkAclEgressArgsArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclEgressStateOutput{})
	pulumi.RegisterOutputType(NetworkAclEgressStateArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclIngressOutput{})
	pulumi.RegisterOutputType(NetworkAclIngressArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclIngressArgsOutput{})
	pulumi.RegisterOutputType(NetworkAclIngressArgsArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclIngressStateOutput{})
	pulumi.RegisterOutputType(NetworkAclIngressStateArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceAttachmentTypeOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceAttachmentTypeArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceAttachmentArgsTypeOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceAttachmentArgsTypeArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceAttachmentStateTypeOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceAttachmentStateTypeArrayOutput{})
	pulumi.RegisterOutputType(PeeringConnectionOptionsAccepterOutput{})
	pulumi.RegisterOutputType(PeeringConnectionOptionsAccepterPtrOutput{})
	pulumi.RegisterOutputType(PeeringConnectionOptionsAccepterArgsOutput{})
	pulumi.RegisterOutputType(PeeringConnectionOptionsAccepterArgsPtrOutput{})
	pulumi.RegisterOutputType(PeeringConnectionOptionsAccepterStateOutput{})
	pulumi.RegisterOutputType(PeeringConnectionOptionsRequesterOutput{})
	pulumi.RegisterOutputType(PeeringConnectionOptionsRequesterPtrOutput{})
	pulumi.RegisterOutputType(PeeringConnectionOptionsRequesterArgsOutput{})
	pulumi.RegisterOutputType(PeeringConnectionOptionsRequesterArgsPtrOutput{})
	pulumi.RegisterOutputType(PeeringConnectionOptionsRequesterStateOutput{})
	pulumi.RegisterOutputType(RouteTableRouteOutput{})
	pulumi.RegisterOutputType(RouteTableRouteArrayOutput{})
	pulumi.RegisterOutputType(RouteTableRouteArgsOutput{})
	pulumi.RegisterOutputType(RouteTableRouteArgsArrayOutput{})
	pulumi.RegisterOutputType(RouteTableRouteStateOutput{})
	pulumi.RegisterOutputType(RouteTableRouteStateArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupEgressOutput{})
	pulumi.RegisterOutputType(SecurityGroupEgressArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupEgressArgsOutput{})
	pulumi.RegisterOutputType(SecurityGroupEgressArgsArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupEgressStateOutput{})
	pulumi.RegisterOutputType(SecurityGroupEgressStateArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupIngressOutput{})
	pulumi.RegisterOutputType(SecurityGroupIngressArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupIngressArgsOutput{})
	pulumi.RegisterOutputType(SecurityGroupIngressArgsArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupIngressStateOutput{})
	pulumi.RegisterOutputType(SecurityGroupIngressStateArrayOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationArrayOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationArgsOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationArgsArrayOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgsArrayOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgsArrayOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationRootBlockDeviceArgsArrayOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationStateOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationStateArrayOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationStateEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationStateEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationStateRootBlockDeviceOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationStateRootBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestCreditSpecificationOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestCreditSpecificationPtrOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestCreditSpecificationArgsOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestCreditSpecificationArgsPtrOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestCreditSpecificationStateOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestEbsBlockDeviceArgsOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestEbsBlockDeviceArgsArrayOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestEbsBlockDeviceStateOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestEbsBlockDeviceStateArrayOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestEphemeralBlockDeviceArgsOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestEphemeralBlockDeviceArgsArrayOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestEphemeralBlockDeviceStateOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestEphemeralBlockDeviceStateArrayOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestMetadataOptionsOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestMetadataOptionsPtrOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestMetadataOptionsArgsOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestMetadataOptionsArgsPtrOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestMetadataOptionsStateOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestNetworkInterfaceArgsOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestNetworkInterfaceArgsArrayOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestNetworkInterfaceStateOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestNetworkInterfaceStateArrayOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestRootBlockDeviceOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestRootBlockDevicePtrOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestRootBlockDeviceArgsOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestRootBlockDeviceArgsPtrOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestRootBlockDeviceStateOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFilterRuleDestinationPortRangeOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFilterRuleDestinationPortRangePtrOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFilterRuleDestinationPortRangeArgsOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFilterRuleDestinationPortRangeArgsPtrOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFilterRuleDestinationPortRangeStateOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFilterRuleSourcePortRangeOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFilterRuleSourcePortRangePtrOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFilterRuleSourcePortRangeArgsOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFilterRuleSourcePortRangeArgsPtrOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFilterRuleSourcePortRangeStateOutput{})
	pulumi.RegisterOutputType(VpcEndpointDnsEntryOutput{})
	pulumi.RegisterOutputType(VpcEndpointDnsEntryArrayOutput{})
	pulumi.RegisterOutputType(VpcEndpointDnsEntryStateOutput{})
	pulumi.RegisterOutputType(VpcEndpointDnsEntryStateArrayOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterTypeOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterTypePtrOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterAccepterOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterAccepterPtrOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterAccepterArgsOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterAccepterArgsPtrOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterAccepterStateOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterArgsTypeOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterArgsTypePtrOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterRequesterOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterRequesterPtrOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterRequesterArgsOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterRequesterArgsPtrOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterRequesterStateOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterStateTypeOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionRequesterOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionRequesterPtrOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionRequesterArgsOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionRequesterArgsPtrOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionRequesterStateOutput{})
	pulumi.RegisterOutputType(VpnConnectionRouteTypeOutput{})
	pulumi.RegisterOutputType(VpnConnectionRouteTypeArrayOutput{})
	pulumi.RegisterOutputType(VpnConnectionRouteStateTypeOutput{})
	pulumi.RegisterOutputType(VpnConnectionRouteStateTypeArrayOutput{})
	pulumi.RegisterOutputType(VpnConnectionVgwTelemetryOutput{})
	pulumi.RegisterOutputType(VpnConnectionVgwTelemetryArrayOutput{})
	pulumi.RegisterOutputType(VpnConnectionVgwTelemetryStateOutput{})
	pulumi.RegisterOutputType(VpnConnectionVgwTelemetryStateArrayOutput{})
	pulumi.RegisterOutputType(GetCustomerGatewayFilterOutput{})
	pulumi.RegisterOutputType(GetCustomerGatewayFilterArrayOutput{})
	pulumi.RegisterOutputType(GetCustomerGatewayFilterArgsOutput{})
	pulumi.RegisterOutputType(GetCustomerGatewayFilterArgsArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceCreditSpecificationOutput{})
	pulumi.RegisterOutputType(GetInstanceCreditSpecificationArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(GetInstanceEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(GetInstanceEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceFilterOutput{})
	pulumi.RegisterOutputType(GetInstanceFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceFilterArgsOutput{})
	pulumi.RegisterOutputType(GetInstanceFilterArgsArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceMetadataOptionOutput{})
	pulumi.RegisterOutputType(GetInstanceMetadataOptionArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceRootBlockDeviceOutput{})
	pulumi.RegisterOutputType(GetInstanceRootBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeOfferingFilterOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeOfferingFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeOfferingFilterArgsOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeOfferingFilterArgsArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeOfferingsFilterOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeOfferingsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeOfferingsFilterArgsOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeOfferingsFilterArgsArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesFilterOutput{})
	pulumi.RegisterOutputType(GetInstancesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesFilterArgsOutput{})
	pulumi.RegisterOutputType(GetInstancesFilterArgsArrayOutput{})
	pulumi.RegisterOutputType(GetInternetGatewayAttachmentOutput{})
	pulumi.RegisterOutputType(GetInternetGatewayAttachmentArrayOutput{})
	pulumi.RegisterOutputType(GetInternetGatewayFilterOutput{})
	pulumi.RegisterOutputType(GetInternetGatewayFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInternetGatewayFilterArgsOutput{})
	pulumi.RegisterOutputType(GetInternetGatewayFilterArgsArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchConfigurationEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(GetLaunchConfigurationEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchConfigurationEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(GetLaunchConfigurationEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchConfigurationRootBlockDeviceOutput{})
	pulumi.RegisterOutputType(GetLaunchConfigurationRootBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateBlockDeviceMappingOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateBlockDeviceMappingArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateBlockDeviceMappingEbOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateBlockDeviceMappingEbArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateCreditSpecificationOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateCreditSpecificationArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateElasticGpuSpecificationOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateElasticGpuSpecificationArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateFilterOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateFilterArgsOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateFilterArgsArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateHibernationOptionOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateHibernationOptionArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateIamInstanceProfileOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateIamInstanceProfileArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateInstanceMarketOptionOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateInstanceMarketOptionArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateInstanceMarketOptionSpotOptionOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateMetadataOptionOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateMetadataOptionArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateMonitoringOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateMonitoringArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplatePlacementOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplatePlacementArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateTagSpecificationOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateTagSpecificationArrayOutput{})
	pulumi.RegisterOutputType(GetNatGatewayFilterOutput{})
	pulumi.RegisterOutputType(GetNatGatewayFilterArrayOutput{})
	pulumi.RegisterOutputType(GetNatGatewayFilterArgsOutput{})
	pulumi.RegisterOutputType(GetNatGatewayFilterArgsArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkAclsFilterOutput{})
	pulumi.RegisterOutputType(GetNetworkAclsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkAclsFilterArgsOutput{})
	pulumi.RegisterOutputType(GetNetworkAclsFilterArgsArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfaceAssociationOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfaceAssociationArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfaceAttachmentTypeOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfaceAttachmentTypeArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfaceFilterOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfaceFilterArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfaceFilterArgsOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfaceFilterArgsArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfacesFilterOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfacesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfacesFilterArgsOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfacesFilterArgsArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTableAssociationTypeOutput{})
	pulumi.RegisterOutputType(GetRouteTableAssociationTypeArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTableFilterOutput{})
	pulumi.RegisterOutputType(GetRouteTableFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTableFilterArgsOutput{})
	pulumi.RegisterOutputType(GetRouteTableFilterArgsArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTableRouteOutput{})
	pulumi.RegisterOutputType(GetRouteTableRouteArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTablesFilterOutput{})
	pulumi.RegisterOutputType(GetRouteTablesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTablesFilterArgsOutput{})
	pulumi.RegisterOutputType(GetRouteTablesFilterArgsArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupFilterOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupFilterArgsOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupFilterArgsArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsFilterOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsFilterArgsOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsFilterArgsArrayOutput{})
	pulumi.RegisterOutputType(GetSubnetFilterOutput{})
	pulumi.RegisterOutputType(GetSubnetFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSubnetFilterArgsOutput{})
	pulumi.RegisterOutputType(GetSubnetFilterArgsArrayOutput{})
	pulumi.RegisterOutputType(GetSubnetIdsFilterOutput{})
	pulumi.RegisterOutputType(GetSubnetIdsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSubnetIdsFilterArgsOutput{})
	pulumi.RegisterOutputType(GetSubnetIdsFilterArgsArrayOutput{})
	pulumi.RegisterOutputType(GetVpcCidrBlockAssociationOutput{})
	pulumi.RegisterOutputType(GetVpcCidrBlockAssociationArrayOutput{})
	pulumi.RegisterOutputType(GetVpcDhcpOptionsFilterOutput{})
	pulumi.RegisterOutputType(GetVpcDhcpOptionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVpcDhcpOptionsFilterArgsOutput{})
	pulumi.RegisterOutputType(GetVpcDhcpOptionsFilterArgsArrayOutput{})
	pulumi.RegisterOutputType(GetVpcEndpointDnsEntryOutput{})
	pulumi.RegisterOutputType(GetVpcEndpointDnsEntryArrayOutput{})
	pulumi.RegisterOutputType(GetVpcEndpointFilterOutput{})
	pulumi.RegisterOutputType(GetVpcEndpointFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVpcEndpointFilterArgsOutput{})
	pulumi.RegisterOutputType(GetVpcEndpointFilterArgsArrayOutput{})
	pulumi.RegisterOutputType(GetVpcEndpointServiceFilterOutput{})
	pulumi.RegisterOutputType(GetVpcEndpointServiceFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVpcEndpointServiceFilterArgsOutput{})
	pulumi.RegisterOutputType(GetVpcEndpointServiceFilterArgsArrayOutput{})
	pulumi.RegisterOutputType(GetVpcFilterOutput{})
	pulumi.RegisterOutputType(GetVpcFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVpcFilterArgsOutput{})
	pulumi.RegisterOutputType(GetVpcFilterArgsArrayOutput{})
	pulumi.RegisterOutputType(GetVpcPeeringConnectionFilterOutput{})
	pulumi.RegisterOutputType(GetVpcPeeringConnectionFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVpcPeeringConnectionFilterArgsOutput{})
	pulumi.RegisterOutputType(GetVpcPeeringConnectionFilterArgsArrayOutput{})
	pulumi.RegisterOutputType(GetVpcsFilterOutput{})
	pulumi.RegisterOutputType(GetVpcsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVpcsFilterArgsOutput{})
	pulumi.RegisterOutputType(GetVpcsFilterArgsArrayOutput{})
	pulumi.RegisterOutputType(GetVpnGatewayFilterOutput{})
	pulumi.RegisterOutputType(GetVpnGatewayFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVpnGatewayFilterArgsOutput{})
	pulumi.RegisterOutputType(GetVpnGatewayFilterArgsArrayOutput{})
}
