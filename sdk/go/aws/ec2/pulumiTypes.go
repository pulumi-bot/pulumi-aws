// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AmiCopyEbsBlockDevice struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The path at which the device is exposed to created instances.
	DeviceName *string `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted *bool `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops *int `pulumi:"iops"`
	// The id of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId *string `pulumi:"snapshotId"`
	// The size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of EBS volume to create. Can be one of "standard" (the
	// default), "io1" or "gp2".
	VolumeType *string `pulumi:"volumeType"`
}

// AmiCopyEbsBlockDeviceInput is an input type that accepts AmiCopyEbsBlockDeviceArgs and AmiCopyEbsBlockDeviceOutput values.
// You can construct a concrete instance of `AmiCopyEbsBlockDeviceInput` via:
//
//          AmiCopyEbsBlockDeviceArgs{...}
type AmiCopyEbsBlockDeviceInput interface {
	pulumi.Input

	ToAmiCopyEbsBlockDeviceOutput() AmiCopyEbsBlockDeviceOutput
	ToAmiCopyEbsBlockDeviceOutputWithContext(context.Context) AmiCopyEbsBlockDeviceOutput
}

type AmiCopyEbsBlockDeviceArgs struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The path at which the device is exposed to created instances.
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The id of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// The size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of EBS volume to create. Can be one of "standard" (the
	// default), "io1" or "gp2".
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (AmiCopyEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiCopyEbsBlockDevice)(nil)).Elem()
}

func (i AmiCopyEbsBlockDeviceArgs) ToAmiCopyEbsBlockDeviceOutput() AmiCopyEbsBlockDeviceOutput {
	return i.ToAmiCopyEbsBlockDeviceOutputWithContext(context.Background())
}

func (i AmiCopyEbsBlockDeviceArgs) ToAmiCopyEbsBlockDeviceOutputWithContext(ctx context.Context) AmiCopyEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiCopyEbsBlockDeviceOutput)
}

// AmiCopyEbsBlockDeviceArrayInput is an input type that accepts AmiCopyEbsBlockDeviceArray and AmiCopyEbsBlockDeviceArrayOutput values.
// You can construct a concrete instance of `AmiCopyEbsBlockDeviceArrayInput` via:
//
//          AmiCopyEbsBlockDeviceArray{ AmiCopyEbsBlockDeviceArgs{...} }
type AmiCopyEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToAmiCopyEbsBlockDeviceArrayOutput() AmiCopyEbsBlockDeviceArrayOutput
	ToAmiCopyEbsBlockDeviceArrayOutputWithContext(context.Context) AmiCopyEbsBlockDeviceArrayOutput
}

type AmiCopyEbsBlockDeviceArray []AmiCopyEbsBlockDeviceInput

func (AmiCopyEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiCopyEbsBlockDevice)(nil)).Elem()
}

func (i AmiCopyEbsBlockDeviceArray) ToAmiCopyEbsBlockDeviceArrayOutput() AmiCopyEbsBlockDeviceArrayOutput {
	return i.ToAmiCopyEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i AmiCopyEbsBlockDeviceArray) ToAmiCopyEbsBlockDeviceArrayOutputWithContext(ctx context.Context) AmiCopyEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiCopyEbsBlockDeviceArrayOutput)
}

type AmiCopyEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (AmiCopyEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiCopyEbsBlockDevice)(nil)).Elem()
}

func (o AmiCopyEbsBlockDeviceOutput) ToAmiCopyEbsBlockDeviceOutput() AmiCopyEbsBlockDeviceOutput {
	return o
}

func (o AmiCopyEbsBlockDeviceOutput) ToAmiCopyEbsBlockDeviceOutputWithContext(ctx context.Context) AmiCopyEbsBlockDeviceOutput {
	return o
}

// Boolean controlling whether the EBS volumes created to
// support each created instance will be deleted once that instance is terminated.
func (o AmiCopyEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The path at which the device is exposed to created instances.
func (o AmiCopyEbsBlockDeviceOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDevice) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
func (o AmiCopyEbsBlockDeviceOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// Number of I/O operations per second the
// created volumes will support.
func (o AmiCopyEbsBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The id of an EBS snapshot that will be used to initialize the created
// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
// snapshot.
func (o AmiCopyEbsBlockDeviceOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDevice) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The size of created volumes in GiB.
// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
// as the selected snapshot.
func (o AmiCopyEbsBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of EBS volume to create. Can be one of "standard" (the
// default), "io1" or "gp2".
func (o AmiCopyEbsBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type AmiCopyEbsBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (AmiCopyEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiCopyEbsBlockDevice)(nil)).Elem()
}

func (o AmiCopyEbsBlockDeviceArrayOutput) ToAmiCopyEbsBlockDeviceArrayOutput() AmiCopyEbsBlockDeviceArrayOutput {
	return o
}

func (o AmiCopyEbsBlockDeviceArrayOutput) ToAmiCopyEbsBlockDeviceArrayOutputWithContext(ctx context.Context) AmiCopyEbsBlockDeviceArrayOutput {
	return o
}

func (o AmiCopyEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) AmiCopyEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmiCopyEbsBlockDevice {
		return vs[0].([]AmiCopyEbsBlockDevice)[vs[1].(int)]
	}).(AmiCopyEbsBlockDeviceOutput)
}

type AmiCopyEphemeralBlockDevice struct {
	// The path at which the device is exposed to created instances.
	DeviceName *string `pulumi:"deviceName"`
	// A name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName *string `pulumi:"virtualName"`
}

// AmiCopyEphemeralBlockDeviceInput is an input type that accepts AmiCopyEphemeralBlockDeviceArgs and AmiCopyEphemeralBlockDeviceOutput values.
// You can construct a concrete instance of `AmiCopyEphemeralBlockDeviceInput` via:
//
//          AmiCopyEphemeralBlockDeviceArgs{...}
type AmiCopyEphemeralBlockDeviceInput interface {
	pulumi.Input

	ToAmiCopyEphemeralBlockDeviceOutput() AmiCopyEphemeralBlockDeviceOutput
	ToAmiCopyEphemeralBlockDeviceOutputWithContext(context.Context) AmiCopyEphemeralBlockDeviceOutput
}

type AmiCopyEphemeralBlockDeviceArgs struct {
	// The path at which the device is exposed to created instances.
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	// A name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName pulumi.StringPtrInput `pulumi:"virtualName"`
}

func (AmiCopyEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiCopyEphemeralBlockDevice)(nil)).Elem()
}

func (i AmiCopyEphemeralBlockDeviceArgs) ToAmiCopyEphemeralBlockDeviceOutput() AmiCopyEphemeralBlockDeviceOutput {
	return i.ToAmiCopyEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i AmiCopyEphemeralBlockDeviceArgs) ToAmiCopyEphemeralBlockDeviceOutputWithContext(ctx context.Context) AmiCopyEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiCopyEphemeralBlockDeviceOutput)
}

// AmiCopyEphemeralBlockDeviceArrayInput is an input type that accepts AmiCopyEphemeralBlockDeviceArray and AmiCopyEphemeralBlockDeviceArrayOutput values.
// You can construct a concrete instance of `AmiCopyEphemeralBlockDeviceArrayInput` via:
//
//          AmiCopyEphemeralBlockDeviceArray{ AmiCopyEphemeralBlockDeviceArgs{...} }
type AmiCopyEphemeralBlockDeviceArrayInput interface {
	pulumi.Input

	ToAmiCopyEphemeralBlockDeviceArrayOutput() AmiCopyEphemeralBlockDeviceArrayOutput
	ToAmiCopyEphemeralBlockDeviceArrayOutputWithContext(context.Context) AmiCopyEphemeralBlockDeviceArrayOutput
}

type AmiCopyEphemeralBlockDeviceArray []AmiCopyEphemeralBlockDeviceInput

func (AmiCopyEphemeralBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiCopyEphemeralBlockDevice)(nil)).Elem()
}

func (i AmiCopyEphemeralBlockDeviceArray) ToAmiCopyEphemeralBlockDeviceArrayOutput() AmiCopyEphemeralBlockDeviceArrayOutput {
	return i.ToAmiCopyEphemeralBlockDeviceArrayOutputWithContext(context.Background())
}

func (i AmiCopyEphemeralBlockDeviceArray) ToAmiCopyEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) AmiCopyEphemeralBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiCopyEphemeralBlockDeviceArrayOutput)
}

type AmiCopyEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (AmiCopyEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiCopyEphemeralBlockDevice)(nil)).Elem()
}

func (o AmiCopyEphemeralBlockDeviceOutput) ToAmiCopyEphemeralBlockDeviceOutput() AmiCopyEphemeralBlockDeviceOutput {
	return o
}

func (o AmiCopyEphemeralBlockDeviceOutput) ToAmiCopyEphemeralBlockDeviceOutputWithContext(ctx context.Context) AmiCopyEphemeralBlockDeviceOutput {
	return o
}

// The path at which the device is exposed to created instances.
func (o AmiCopyEphemeralBlockDeviceOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiCopyEphemeralBlockDevice) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

// A name for the ephemeral device, of the form "ephemeralN" where
// *N* is a volume number starting from zero.
func (o AmiCopyEphemeralBlockDeviceOutput) VirtualName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiCopyEphemeralBlockDevice) *string { return v.VirtualName }).(pulumi.StringPtrOutput)
}

type AmiCopyEphemeralBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (AmiCopyEphemeralBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiCopyEphemeralBlockDevice)(nil)).Elem()
}

func (o AmiCopyEphemeralBlockDeviceArrayOutput) ToAmiCopyEphemeralBlockDeviceArrayOutput() AmiCopyEphemeralBlockDeviceArrayOutput {
	return o
}

func (o AmiCopyEphemeralBlockDeviceArrayOutput) ToAmiCopyEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) AmiCopyEphemeralBlockDeviceArrayOutput {
	return o
}

func (o AmiCopyEphemeralBlockDeviceArrayOutput) Index(i pulumi.IntInput) AmiCopyEphemeralBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmiCopyEphemeralBlockDevice {
		return vs[0].([]AmiCopyEphemeralBlockDevice)[vs[1].(int)]
	}).(AmiCopyEphemeralBlockDeviceOutput)
}

type AmiEbsBlockDevice struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The path at which the device is exposed to created instances.
	DeviceName string `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted *bool `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops *int `pulumi:"iops"`
	// The id of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId *string `pulumi:"snapshotId"`
	// The size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of EBS volume to create. Can be one of "standard" (the
	// default), "io1" or "gp2".
	VolumeType *string `pulumi:"volumeType"`
}

// AmiEbsBlockDeviceInput is an input type that accepts AmiEbsBlockDeviceArgs and AmiEbsBlockDeviceOutput values.
// You can construct a concrete instance of `AmiEbsBlockDeviceInput` via:
//
//          AmiEbsBlockDeviceArgs{...}
type AmiEbsBlockDeviceInput interface {
	pulumi.Input

	ToAmiEbsBlockDeviceOutput() AmiEbsBlockDeviceOutput
	ToAmiEbsBlockDeviceOutputWithContext(context.Context) AmiEbsBlockDeviceOutput
}

type AmiEbsBlockDeviceArgs struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The path at which the device is exposed to created instances.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The id of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// The size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of EBS volume to create. Can be one of "standard" (the
	// default), "io1" or "gp2".
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (AmiEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiEbsBlockDevice)(nil)).Elem()
}

func (i AmiEbsBlockDeviceArgs) ToAmiEbsBlockDeviceOutput() AmiEbsBlockDeviceOutput {
	return i.ToAmiEbsBlockDeviceOutputWithContext(context.Background())
}

func (i AmiEbsBlockDeviceArgs) ToAmiEbsBlockDeviceOutputWithContext(ctx context.Context) AmiEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiEbsBlockDeviceOutput)
}

// AmiEbsBlockDeviceArrayInput is an input type that accepts AmiEbsBlockDeviceArray and AmiEbsBlockDeviceArrayOutput values.
// You can construct a concrete instance of `AmiEbsBlockDeviceArrayInput` via:
//
//          AmiEbsBlockDeviceArray{ AmiEbsBlockDeviceArgs{...} }
type AmiEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToAmiEbsBlockDeviceArrayOutput() AmiEbsBlockDeviceArrayOutput
	ToAmiEbsBlockDeviceArrayOutputWithContext(context.Context) AmiEbsBlockDeviceArrayOutput
}

type AmiEbsBlockDeviceArray []AmiEbsBlockDeviceInput

func (AmiEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiEbsBlockDevice)(nil)).Elem()
}

func (i AmiEbsBlockDeviceArray) ToAmiEbsBlockDeviceArrayOutput() AmiEbsBlockDeviceArrayOutput {
	return i.ToAmiEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i AmiEbsBlockDeviceArray) ToAmiEbsBlockDeviceArrayOutputWithContext(ctx context.Context) AmiEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiEbsBlockDeviceArrayOutput)
}

type AmiEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (AmiEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiEbsBlockDevice)(nil)).Elem()
}

func (o AmiEbsBlockDeviceOutput) ToAmiEbsBlockDeviceOutput() AmiEbsBlockDeviceOutput {
	return o
}

func (o AmiEbsBlockDeviceOutput) ToAmiEbsBlockDeviceOutputWithContext(ctx context.Context) AmiEbsBlockDeviceOutput {
	return o
}

// Boolean controlling whether the EBS volumes created to
// support each created instance will be deleted once that instance is terminated.
func (o AmiEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmiEbsBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The path at which the device is exposed to created instances.
func (o AmiEbsBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v AmiEbsBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
func (o AmiEbsBlockDeviceOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmiEbsBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// Number of I/O operations per second the
// created volumes will support.
func (o AmiEbsBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AmiEbsBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The id of an EBS snapshot that will be used to initialize the created
// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
// snapshot.
func (o AmiEbsBlockDeviceOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiEbsBlockDevice) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The size of created volumes in GiB.
// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
// as the selected snapshot.
func (o AmiEbsBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AmiEbsBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of EBS volume to create. Can be one of "standard" (the
// default), "io1" or "gp2".
func (o AmiEbsBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiEbsBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type AmiEbsBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (AmiEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiEbsBlockDevice)(nil)).Elem()
}

func (o AmiEbsBlockDeviceArrayOutput) ToAmiEbsBlockDeviceArrayOutput() AmiEbsBlockDeviceArrayOutput {
	return o
}

func (o AmiEbsBlockDeviceArrayOutput) ToAmiEbsBlockDeviceArrayOutputWithContext(ctx context.Context) AmiEbsBlockDeviceArrayOutput {
	return o
}

func (o AmiEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) AmiEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmiEbsBlockDevice {
		return vs[0].([]AmiEbsBlockDevice)[vs[1].(int)]
	}).(AmiEbsBlockDeviceOutput)
}

type AmiEphemeralBlockDevice struct {
	// The path at which the device is exposed to created instances.
	DeviceName string `pulumi:"deviceName"`
	// A name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName string `pulumi:"virtualName"`
}

// AmiEphemeralBlockDeviceInput is an input type that accepts AmiEphemeralBlockDeviceArgs and AmiEphemeralBlockDeviceOutput values.
// You can construct a concrete instance of `AmiEphemeralBlockDeviceInput` via:
//
//          AmiEphemeralBlockDeviceArgs{...}
type AmiEphemeralBlockDeviceInput interface {
	pulumi.Input

	ToAmiEphemeralBlockDeviceOutput() AmiEphemeralBlockDeviceOutput
	ToAmiEphemeralBlockDeviceOutputWithContext(context.Context) AmiEphemeralBlockDeviceOutput
}

type AmiEphemeralBlockDeviceArgs struct {
	// The path at which the device is exposed to created instances.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// A name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName pulumi.StringInput `pulumi:"virtualName"`
}

func (AmiEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiEphemeralBlockDevice)(nil)).Elem()
}

func (i AmiEphemeralBlockDeviceArgs) ToAmiEphemeralBlockDeviceOutput() AmiEphemeralBlockDeviceOutput {
	return i.ToAmiEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i AmiEphemeralBlockDeviceArgs) ToAmiEphemeralBlockDeviceOutputWithContext(ctx context.Context) AmiEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiEphemeralBlockDeviceOutput)
}

// AmiEphemeralBlockDeviceArrayInput is an input type that accepts AmiEphemeralBlockDeviceArray and AmiEphemeralBlockDeviceArrayOutput values.
// You can construct a concrete instance of `AmiEphemeralBlockDeviceArrayInput` via:
//
//          AmiEphemeralBlockDeviceArray{ AmiEphemeralBlockDeviceArgs{...} }
type AmiEphemeralBlockDeviceArrayInput interface {
	pulumi.Input

	ToAmiEphemeralBlockDeviceArrayOutput() AmiEphemeralBlockDeviceArrayOutput
	ToAmiEphemeralBlockDeviceArrayOutputWithContext(context.Context) AmiEphemeralBlockDeviceArrayOutput
}

type AmiEphemeralBlockDeviceArray []AmiEphemeralBlockDeviceInput

func (AmiEphemeralBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiEphemeralBlockDevice)(nil)).Elem()
}

func (i AmiEphemeralBlockDeviceArray) ToAmiEphemeralBlockDeviceArrayOutput() AmiEphemeralBlockDeviceArrayOutput {
	return i.ToAmiEphemeralBlockDeviceArrayOutputWithContext(context.Background())
}

func (i AmiEphemeralBlockDeviceArray) ToAmiEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) AmiEphemeralBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiEphemeralBlockDeviceArrayOutput)
}

type AmiEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (AmiEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiEphemeralBlockDevice)(nil)).Elem()
}

func (o AmiEphemeralBlockDeviceOutput) ToAmiEphemeralBlockDeviceOutput() AmiEphemeralBlockDeviceOutput {
	return o
}

func (o AmiEphemeralBlockDeviceOutput) ToAmiEphemeralBlockDeviceOutputWithContext(ctx context.Context) AmiEphemeralBlockDeviceOutput {
	return o
}

// The path at which the device is exposed to created instances.
func (o AmiEphemeralBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v AmiEphemeralBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// A name for the ephemeral device, of the form "ephemeralN" where
// *N* is a volume number starting from zero.
func (o AmiEphemeralBlockDeviceOutput) VirtualName() pulumi.StringOutput {
	return o.ApplyT(func(v AmiEphemeralBlockDevice) string { return v.VirtualName }).(pulumi.StringOutput)
}

type AmiEphemeralBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (AmiEphemeralBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiEphemeralBlockDevice)(nil)).Elem()
}

func (o AmiEphemeralBlockDeviceArrayOutput) ToAmiEphemeralBlockDeviceArrayOutput() AmiEphemeralBlockDeviceArrayOutput {
	return o
}

func (o AmiEphemeralBlockDeviceArrayOutput) ToAmiEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) AmiEphemeralBlockDeviceArrayOutput {
	return o
}

func (o AmiEphemeralBlockDeviceArrayOutput) Index(i pulumi.IntInput) AmiEphemeralBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmiEphemeralBlockDevice {
		return vs[0].([]AmiEphemeralBlockDevice)[vs[1].(int)]
	}).(AmiEphemeralBlockDeviceOutput)
}

type AmiFromInstanceEbsBlockDevice struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The path at which the device is exposed to created instances.
	DeviceName *string `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted *bool `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops *int `pulumi:"iops"`
	// The id of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId *string `pulumi:"snapshotId"`
	// The size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of EBS volume to create. Can be one of "standard" (the
	// default), "io1" or "gp2".
	VolumeType *string `pulumi:"volumeType"`
}

// AmiFromInstanceEbsBlockDeviceInput is an input type that accepts AmiFromInstanceEbsBlockDeviceArgs and AmiFromInstanceEbsBlockDeviceOutput values.
// You can construct a concrete instance of `AmiFromInstanceEbsBlockDeviceInput` via:
//
//          AmiFromInstanceEbsBlockDeviceArgs{...}
type AmiFromInstanceEbsBlockDeviceInput interface {
	pulumi.Input

	ToAmiFromInstanceEbsBlockDeviceOutput() AmiFromInstanceEbsBlockDeviceOutput
	ToAmiFromInstanceEbsBlockDeviceOutputWithContext(context.Context) AmiFromInstanceEbsBlockDeviceOutput
}

type AmiFromInstanceEbsBlockDeviceArgs struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The path at which the device is exposed to created instances.
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The id of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// The size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of EBS volume to create. Can be one of "standard" (the
	// default), "io1" or "gp2".
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (AmiFromInstanceEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiFromInstanceEbsBlockDevice)(nil)).Elem()
}

func (i AmiFromInstanceEbsBlockDeviceArgs) ToAmiFromInstanceEbsBlockDeviceOutput() AmiFromInstanceEbsBlockDeviceOutput {
	return i.ToAmiFromInstanceEbsBlockDeviceOutputWithContext(context.Background())
}

func (i AmiFromInstanceEbsBlockDeviceArgs) ToAmiFromInstanceEbsBlockDeviceOutputWithContext(ctx context.Context) AmiFromInstanceEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiFromInstanceEbsBlockDeviceOutput)
}

// AmiFromInstanceEbsBlockDeviceArrayInput is an input type that accepts AmiFromInstanceEbsBlockDeviceArray and AmiFromInstanceEbsBlockDeviceArrayOutput values.
// You can construct a concrete instance of `AmiFromInstanceEbsBlockDeviceArrayInput` via:
//
//          AmiFromInstanceEbsBlockDeviceArray{ AmiFromInstanceEbsBlockDeviceArgs{...} }
type AmiFromInstanceEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToAmiFromInstanceEbsBlockDeviceArrayOutput() AmiFromInstanceEbsBlockDeviceArrayOutput
	ToAmiFromInstanceEbsBlockDeviceArrayOutputWithContext(context.Context) AmiFromInstanceEbsBlockDeviceArrayOutput
}

type AmiFromInstanceEbsBlockDeviceArray []AmiFromInstanceEbsBlockDeviceInput

func (AmiFromInstanceEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiFromInstanceEbsBlockDevice)(nil)).Elem()
}

func (i AmiFromInstanceEbsBlockDeviceArray) ToAmiFromInstanceEbsBlockDeviceArrayOutput() AmiFromInstanceEbsBlockDeviceArrayOutput {
	return i.ToAmiFromInstanceEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i AmiFromInstanceEbsBlockDeviceArray) ToAmiFromInstanceEbsBlockDeviceArrayOutputWithContext(ctx context.Context) AmiFromInstanceEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiFromInstanceEbsBlockDeviceArrayOutput)
}

type AmiFromInstanceEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (AmiFromInstanceEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiFromInstanceEbsBlockDevice)(nil)).Elem()
}

func (o AmiFromInstanceEbsBlockDeviceOutput) ToAmiFromInstanceEbsBlockDeviceOutput() AmiFromInstanceEbsBlockDeviceOutput {
	return o
}

func (o AmiFromInstanceEbsBlockDeviceOutput) ToAmiFromInstanceEbsBlockDeviceOutputWithContext(ctx context.Context) AmiFromInstanceEbsBlockDeviceOutput {
	return o
}

// Boolean controlling whether the EBS volumes created to
// support each created instance will be deleted once that instance is terminated.
func (o AmiFromInstanceEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The path at which the device is exposed to created instances.
func (o AmiFromInstanceEbsBlockDeviceOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDevice) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
func (o AmiFromInstanceEbsBlockDeviceOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// Number of I/O operations per second the
// created volumes will support.
func (o AmiFromInstanceEbsBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The id of an EBS snapshot that will be used to initialize the created
// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
// snapshot.
func (o AmiFromInstanceEbsBlockDeviceOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDevice) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The size of created volumes in GiB.
// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
// as the selected snapshot.
func (o AmiFromInstanceEbsBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of EBS volume to create. Can be one of "standard" (the
// default), "io1" or "gp2".
func (o AmiFromInstanceEbsBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type AmiFromInstanceEbsBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (AmiFromInstanceEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiFromInstanceEbsBlockDevice)(nil)).Elem()
}

func (o AmiFromInstanceEbsBlockDeviceArrayOutput) ToAmiFromInstanceEbsBlockDeviceArrayOutput() AmiFromInstanceEbsBlockDeviceArrayOutput {
	return o
}

func (o AmiFromInstanceEbsBlockDeviceArrayOutput) ToAmiFromInstanceEbsBlockDeviceArrayOutputWithContext(ctx context.Context) AmiFromInstanceEbsBlockDeviceArrayOutput {
	return o
}

func (o AmiFromInstanceEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) AmiFromInstanceEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmiFromInstanceEbsBlockDevice {
		return vs[0].([]AmiFromInstanceEbsBlockDevice)[vs[1].(int)]
	}).(AmiFromInstanceEbsBlockDeviceOutput)
}

type AmiFromInstanceEphemeralBlockDevice struct {
	// The path at which the device is exposed to created instances.
	DeviceName *string `pulumi:"deviceName"`
	// A name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName *string `pulumi:"virtualName"`
}

// AmiFromInstanceEphemeralBlockDeviceInput is an input type that accepts AmiFromInstanceEphemeralBlockDeviceArgs and AmiFromInstanceEphemeralBlockDeviceOutput values.
// You can construct a concrete instance of `AmiFromInstanceEphemeralBlockDeviceInput` via:
//
//          AmiFromInstanceEphemeralBlockDeviceArgs{...}
type AmiFromInstanceEphemeralBlockDeviceInput interface {
	pulumi.Input

	ToAmiFromInstanceEphemeralBlockDeviceOutput() AmiFromInstanceEphemeralBlockDeviceOutput
	ToAmiFromInstanceEphemeralBlockDeviceOutputWithContext(context.Context) AmiFromInstanceEphemeralBlockDeviceOutput
}

type AmiFromInstanceEphemeralBlockDeviceArgs struct {
	// The path at which the device is exposed to created instances.
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	// A name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName pulumi.StringPtrInput `pulumi:"virtualName"`
}

func (AmiFromInstanceEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiFromInstanceEphemeralBlockDevice)(nil)).Elem()
}

func (i AmiFromInstanceEphemeralBlockDeviceArgs) ToAmiFromInstanceEphemeralBlockDeviceOutput() AmiFromInstanceEphemeralBlockDeviceOutput {
	return i.ToAmiFromInstanceEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i AmiFromInstanceEphemeralBlockDeviceArgs) ToAmiFromInstanceEphemeralBlockDeviceOutputWithContext(ctx context.Context) AmiFromInstanceEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiFromInstanceEphemeralBlockDeviceOutput)
}

// AmiFromInstanceEphemeralBlockDeviceArrayInput is an input type that accepts AmiFromInstanceEphemeralBlockDeviceArray and AmiFromInstanceEphemeralBlockDeviceArrayOutput values.
// You can construct a concrete instance of `AmiFromInstanceEphemeralBlockDeviceArrayInput` via:
//
//          AmiFromInstanceEphemeralBlockDeviceArray{ AmiFromInstanceEphemeralBlockDeviceArgs{...} }
type AmiFromInstanceEphemeralBlockDeviceArrayInput interface {
	pulumi.Input

	ToAmiFromInstanceEphemeralBlockDeviceArrayOutput() AmiFromInstanceEphemeralBlockDeviceArrayOutput
	ToAmiFromInstanceEphemeralBlockDeviceArrayOutputWithContext(context.Context) AmiFromInstanceEphemeralBlockDeviceArrayOutput
}

type AmiFromInstanceEphemeralBlockDeviceArray []AmiFromInstanceEphemeralBlockDeviceInput

func (AmiFromInstanceEphemeralBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiFromInstanceEphemeralBlockDevice)(nil)).Elem()
}

func (i AmiFromInstanceEphemeralBlockDeviceArray) ToAmiFromInstanceEphemeralBlockDeviceArrayOutput() AmiFromInstanceEphemeralBlockDeviceArrayOutput {
	return i.ToAmiFromInstanceEphemeralBlockDeviceArrayOutputWithContext(context.Background())
}

func (i AmiFromInstanceEphemeralBlockDeviceArray) ToAmiFromInstanceEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) AmiFromInstanceEphemeralBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiFromInstanceEphemeralBlockDeviceArrayOutput)
}

type AmiFromInstanceEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (AmiFromInstanceEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiFromInstanceEphemeralBlockDevice)(nil)).Elem()
}

func (o AmiFromInstanceEphemeralBlockDeviceOutput) ToAmiFromInstanceEphemeralBlockDeviceOutput() AmiFromInstanceEphemeralBlockDeviceOutput {
	return o
}

func (o AmiFromInstanceEphemeralBlockDeviceOutput) ToAmiFromInstanceEphemeralBlockDeviceOutputWithContext(ctx context.Context) AmiFromInstanceEphemeralBlockDeviceOutput {
	return o
}

// The path at which the device is exposed to created instances.
func (o AmiFromInstanceEphemeralBlockDeviceOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEphemeralBlockDevice) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

// A name for the ephemeral device, of the form "ephemeralN" where
// *N* is a volume number starting from zero.
func (o AmiFromInstanceEphemeralBlockDeviceOutput) VirtualName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEphemeralBlockDevice) *string { return v.VirtualName }).(pulumi.StringPtrOutput)
}

type AmiFromInstanceEphemeralBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (AmiFromInstanceEphemeralBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiFromInstanceEphemeralBlockDevice)(nil)).Elem()
}

func (o AmiFromInstanceEphemeralBlockDeviceArrayOutput) ToAmiFromInstanceEphemeralBlockDeviceArrayOutput() AmiFromInstanceEphemeralBlockDeviceArrayOutput {
	return o
}

func (o AmiFromInstanceEphemeralBlockDeviceArrayOutput) ToAmiFromInstanceEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) AmiFromInstanceEphemeralBlockDeviceArrayOutput {
	return o
}

func (o AmiFromInstanceEphemeralBlockDeviceArrayOutput) Index(i pulumi.IntInput) AmiFromInstanceEphemeralBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmiFromInstanceEphemeralBlockDevice {
		return vs[0].([]AmiFromInstanceEphemeralBlockDevice)[vs[1].(int)]
	}).(AmiFromInstanceEphemeralBlockDeviceOutput)
}

type DefaultNetworkAclEgress struct {
	// The action to take.
	Action string `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort int `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode *int `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType *int `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol string `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo int `pulumi:"ruleNo"`
	// The to port to match.
	ToPort int `pulumi:"toPort"`
}

// DefaultNetworkAclEgressInput is an input type that accepts DefaultNetworkAclEgressArgs and DefaultNetworkAclEgressOutput values.
// You can construct a concrete instance of `DefaultNetworkAclEgressInput` via:
//
//          DefaultNetworkAclEgressArgs{...}
type DefaultNetworkAclEgressInput interface {
	pulumi.Input

	ToDefaultNetworkAclEgressOutput() DefaultNetworkAclEgressOutput
	ToDefaultNetworkAclEgressOutputWithContext(context.Context) DefaultNetworkAclEgressOutput
}

type DefaultNetworkAclEgressArgs struct {
	// The action to take.
	Action pulumi.StringInput `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode pulumi.IntPtrInput `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType pulumi.IntPtrInput `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo pulumi.IntInput `pulumi:"ruleNo"`
	// The to port to match.
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (DefaultNetworkAclEgressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultNetworkAclEgress)(nil)).Elem()
}

func (i DefaultNetworkAclEgressArgs) ToDefaultNetworkAclEgressOutput() DefaultNetworkAclEgressOutput {
	return i.ToDefaultNetworkAclEgressOutputWithContext(context.Background())
}

func (i DefaultNetworkAclEgressArgs) ToDefaultNetworkAclEgressOutputWithContext(ctx context.Context) DefaultNetworkAclEgressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultNetworkAclEgressOutput)
}

// DefaultNetworkAclEgressArrayInput is an input type that accepts DefaultNetworkAclEgressArray and DefaultNetworkAclEgressArrayOutput values.
// You can construct a concrete instance of `DefaultNetworkAclEgressArrayInput` via:
//
//          DefaultNetworkAclEgressArray{ DefaultNetworkAclEgressArgs{...} }
type DefaultNetworkAclEgressArrayInput interface {
	pulumi.Input

	ToDefaultNetworkAclEgressArrayOutput() DefaultNetworkAclEgressArrayOutput
	ToDefaultNetworkAclEgressArrayOutputWithContext(context.Context) DefaultNetworkAclEgressArrayOutput
}

type DefaultNetworkAclEgressArray []DefaultNetworkAclEgressInput

func (DefaultNetworkAclEgressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultNetworkAclEgress)(nil)).Elem()
}

func (i DefaultNetworkAclEgressArray) ToDefaultNetworkAclEgressArrayOutput() DefaultNetworkAclEgressArrayOutput {
	return i.ToDefaultNetworkAclEgressArrayOutputWithContext(context.Background())
}

func (i DefaultNetworkAclEgressArray) ToDefaultNetworkAclEgressArrayOutputWithContext(ctx context.Context) DefaultNetworkAclEgressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultNetworkAclEgressArrayOutput)
}

type DefaultNetworkAclEgressOutput struct{ *pulumi.OutputState }

func (DefaultNetworkAclEgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultNetworkAclEgress)(nil)).Elem()
}

func (o DefaultNetworkAclEgressOutput) ToDefaultNetworkAclEgressOutput() DefaultNetworkAclEgressOutput {
	return o
}

func (o DefaultNetworkAclEgressOutput) ToDefaultNetworkAclEgressOutputWithContext(ctx context.Context) DefaultNetworkAclEgressOutput {
	return o
}

// The action to take.
func (o DefaultNetworkAclEgressOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgress) string { return v.Action }).(pulumi.StringOutput)
}

// The CIDR block to match. This must be a
// valid network mask.
func (o DefaultNetworkAclEgressOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgress) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// The from port to match.
func (o DefaultNetworkAclEgressOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgress) int { return v.FromPort }).(pulumi.IntOutput)
}

// The ICMP type code to be used. Default 0.
func (o DefaultNetworkAclEgressOutput) IcmpCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgress) *int { return v.IcmpCode }).(pulumi.IntPtrOutput)
}

// The ICMP type to be used. Default 0.
func (o DefaultNetworkAclEgressOutput) IcmpType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgress) *int { return v.IcmpType }).(pulumi.IntPtrOutput)
}

// The IPv6 CIDR block.
func (o DefaultNetworkAclEgressOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgress) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// The protocol to match. If using the -1 'all'
// protocol, you must specify a from and to port of 0.
func (o DefaultNetworkAclEgressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgress) string { return v.Protocol }).(pulumi.StringOutput)
}

// The rule number. Used for ordering.
func (o DefaultNetworkAclEgressOutput) RuleNo() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgress) int { return v.RuleNo }).(pulumi.IntOutput)
}

// The to port to match.
func (o DefaultNetworkAclEgressOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgress) int { return v.ToPort }).(pulumi.IntOutput)
}

type DefaultNetworkAclEgressArrayOutput struct{ *pulumi.OutputState }

func (DefaultNetworkAclEgressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultNetworkAclEgress)(nil)).Elem()
}

func (o DefaultNetworkAclEgressArrayOutput) ToDefaultNetworkAclEgressArrayOutput() DefaultNetworkAclEgressArrayOutput {
	return o
}

func (o DefaultNetworkAclEgressArrayOutput) ToDefaultNetworkAclEgressArrayOutputWithContext(ctx context.Context) DefaultNetworkAclEgressArrayOutput {
	return o
}

func (o DefaultNetworkAclEgressArrayOutput) Index(i pulumi.IntInput) DefaultNetworkAclEgressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DefaultNetworkAclEgress {
		return vs[0].([]DefaultNetworkAclEgress)[vs[1].(int)]
	}).(DefaultNetworkAclEgressOutput)
}

type DefaultNetworkAclIngress struct {
	// The action to take.
	Action string `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort int `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode *int `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType *int `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol string `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo int `pulumi:"ruleNo"`
	// The to port to match.
	ToPort int `pulumi:"toPort"`
}

// DefaultNetworkAclIngressInput is an input type that accepts DefaultNetworkAclIngressArgs and DefaultNetworkAclIngressOutput values.
// You can construct a concrete instance of `DefaultNetworkAclIngressInput` via:
//
//          DefaultNetworkAclIngressArgs{...}
type DefaultNetworkAclIngressInput interface {
	pulumi.Input

	ToDefaultNetworkAclIngressOutput() DefaultNetworkAclIngressOutput
	ToDefaultNetworkAclIngressOutputWithContext(context.Context) DefaultNetworkAclIngressOutput
}

type DefaultNetworkAclIngressArgs struct {
	// The action to take.
	Action pulumi.StringInput `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode pulumi.IntPtrInput `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType pulumi.IntPtrInput `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo pulumi.IntInput `pulumi:"ruleNo"`
	// The to port to match.
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (DefaultNetworkAclIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultNetworkAclIngress)(nil)).Elem()
}

func (i DefaultNetworkAclIngressArgs) ToDefaultNetworkAclIngressOutput() DefaultNetworkAclIngressOutput {
	return i.ToDefaultNetworkAclIngressOutputWithContext(context.Background())
}

func (i DefaultNetworkAclIngressArgs) ToDefaultNetworkAclIngressOutputWithContext(ctx context.Context) DefaultNetworkAclIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultNetworkAclIngressOutput)
}

// DefaultNetworkAclIngressArrayInput is an input type that accepts DefaultNetworkAclIngressArray and DefaultNetworkAclIngressArrayOutput values.
// You can construct a concrete instance of `DefaultNetworkAclIngressArrayInput` via:
//
//          DefaultNetworkAclIngressArray{ DefaultNetworkAclIngressArgs{...} }
type DefaultNetworkAclIngressArrayInput interface {
	pulumi.Input

	ToDefaultNetworkAclIngressArrayOutput() DefaultNetworkAclIngressArrayOutput
	ToDefaultNetworkAclIngressArrayOutputWithContext(context.Context) DefaultNetworkAclIngressArrayOutput
}

type DefaultNetworkAclIngressArray []DefaultNetworkAclIngressInput

func (DefaultNetworkAclIngressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultNetworkAclIngress)(nil)).Elem()
}

func (i DefaultNetworkAclIngressArray) ToDefaultNetworkAclIngressArrayOutput() DefaultNetworkAclIngressArrayOutput {
	return i.ToDefaultNetworkAclIngressArrayOutputWithContext(context.Background())
}

func (i DefaultNetworkAclIngressArray) ToDefaultNetworkAclIngressArrayOutputWithContext(ctx context.Context) DefaultNetworkAclIngressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultNetworkAclIngressArrayOutput)
}

type DefaultNetworkAclIngressOutput struct{ *pulumi.OutputState }

func (DefaultNetworkAclIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultNetworkAclIngress)(nil)).Elem()
}

func (o DefaultNetworkAclIngressOutput) ToDefaultNetworkAclIngressOutput() DefaultNetworkAclIngressOutput {
	return o
}

func (o DefaultNetworkAclIngressOutput) ToDefaultNetworkAclIngressOutputWithContext(ctx context.Context) DefaultNetworkAclIngressOutput {
	return o
}

// The action to take.
func (o DefaultNetworkAclIngressOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngress) string { return v.Action }).(pulumi.StringOutput)
}

// The CIDR block to match. This must be a
// valid network mask.
func (o DefaultNetworkAclIngressOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngress) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// The from port to match.
func (o DefaultNetworkAclIngressOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngress) int { return v.FromPort }).(pulumi.IntOutput)
}

// The ICMP type code to be used. Default 0.
func (o DefaultNetworkAclIngressOutput) IcmpCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngress) *int { return v.IcmpCode }).(pulumi.IntPtrOutput)
}

// The ICMP type to be used. Default 0.
func (o DefaultNetworkAclIngressOutput) IcmpType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngress) *int { return v.IcmpType }).(pulumi.IntPtrOutput)
}

// The IPv6 CIDR block.
func (o DefaultNetworkAclIngressOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngress) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// The protocol to match. If using the -1 'all'
// protocol, you must specify a from and to port of 0.
func (o DefaultNetworkAclIngressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngress) string { return v.Protocol }).(pulumi.StringOutput)
}

// The rule number. Used for ordering.
func (o DefaultNetworkAclIngressOutput) RuleNo() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngress) int { return v.RuleNo }).(pulumi.IntOutput)
}

// The to port to match.
func (o DefaultNetworkAclIngressOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngress) int { return v.ToPort }).(pulumi.IntOutput)
}

type DefaultNetworkAclIngressArrayOutput struct{ *pulumi.OutputState }

func (DefaultNetworkAclIngressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultNetworkAclIngress)(nil)).Elem()
}

func (o DefaultNetworkAclIngressArrayOutput) ToDefaultNetworkAclIngressArrayOutput() DefaultNetworkAclIngressArrayOutput {
	return o
}

func (o DefaultNetworkAclIngressArrayOutput) ToDefaultNetworkAclIngressArrayOutputWithContext(ctx context.Context) DefaultNetworkAclIngressArrayOutput {
	return o
}

func (o DefaultNetworkAclIngressArrayOutput) Index(i pulumi.IntInput) DefaultNetworkAclIngressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DefaultNetworkAclIngress {
		return vs[0].([]DefaultNetworkAclIngress)[vs[1].(int)]
	}).(DefaultNetworkAclIngressOutput)
}

type DefaultRouteTableRoute struct {
	// The CIDR block of the route.
	CidrBlock *string `pulumi:"cidrBlock"`
	// Identifier of a VPC Egress Only Internet Gateway.
	EgressOnlyGatewayId *string `pulumi:"egressOnlyGatewayId"`
	// Identifier of a VPC internet gateway or a virtual private gateway.
	GatewayId *string `pulumi:"gatewayId"`
	// Identifier of an EC2 instance.
	InstanceId *string `pulumi:"instanceId"`
	// The Ipv6 CIDR block of the route
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// Identifier of a VPC NAT gateway.
	NatGatewayId *string `pulumi:"natGatewayId"`
	// Identifier of an EC2 network interface.
	NetworkInterfaceId *string `pulumi:"networkInterfaceId"`
	// Identifier of an EC2 Transit Gateway.
	TransitGatewayId *string `pulumi:"transitGatewayId"`
	// Identifier of a VPC peering connection.
	VpcPeeringConnectionId *string `pulumi:"vpcPeeringConnectionId"`
}

// DefaultRouteTableRouteInput is an input type that accepts DefaultRouteTableRouteArgs and DefaultRouteTableRouteOutput values.
// You can construct a concrete instance of `DefaultRouteTableRouteInput` via:
//
//          DefaultRouteTableRouteArgs{...}
type DefaultRouteTableRouteInput interface {
	pulumi.Input

	ToDefaultRouteTableRouteOutput() DefaultRouteTableRouteOutput
	ToDefaultRouteTableRouteOutputWithContext(context.Context) DefaultRouteTableRouteOutput
}

type DefaultRouteTableRouteArgs struct {
	// The CIDR block of the route.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// Identifier of a VPC Egress Only Internet Gateway.
	EgressOnlyGatewayId pulumi.StringPtrInput `pulumi:"egressOnlyGatewayId"`
	// Identifier of a VPC internet gateway or a virtual private gateway.
	GatewayId pulumi.StringPtrInput `pulumi:"gatewayId"`
	// Identifier of an EC2 instance.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// The Ipv6 CIDR block of the route
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// Identifier of a VPC NAT gateway.
	NatGatewayId pulumi.StringPtrInput `pulumi:"natGatewayId"`
	// Identifier of an EC2 network interface.
	NetworkInterfaceId pulumi.StringPtrInput `pulumi:"networkInterfaceId"`
	// Identifier of an EC2 Transit Gateway.
	TransitGatewayId pulumi.StringPtrInput `pulumi:"transitGatewayId"`
	// Identifier of a VPC peering connection.
	VpcPeeringConnectionId pulumi.StringPtrInput `pulumi:"vpcPeeringConnectionId"`
}

func (DefaultRouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultRouteTableRoute)(nil)).Elem()
}

func (i DefaultRouteTableRouteArgs) ToDefaultRouteTableRouteOutput() DefaultRouteTableRouteOutput {
	return i.ToDefaultRouteTableRouteOutputWithContext(context.Background())
}

func (i DefaultRouteTableRouteArgs) ToDefaultRouteTableRouteOutputWithContext(ctx context.Context) DefaultRouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultRouteTableRouteOutput)
}

// DefaultRouteTableRouteArrayInput is an input type that accepts DefaultRouteTableRouteArray and DefaultRouteTableRouteArrayOutput values.
// You can construct a concrete instance of `DefaultRouteTableRouteArrayInput` via:
//
//          DefaultRouteTableRouteArray{ DefaultRouteTableRouteArgs{...} }
type DefaultRouteTableRouteArrayInput interface {
	pulumi.Input

	ToDefaultRouteTableRouteArrayOutput() DefaultRouteTableRouteArrayOutput
	ToDefaultRouteTableRouteArrayOutputWithContext(context.Context) DefaultRouteTableRouteArrayOutput
}

type DefaultRouteTableRouteArray []DefaultRouteTableRouteInput

func (DefaultRouteTableRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultRouteTableRoute)(nil)).Elem()
}

func (i DefaultRouteTableRouteArray) ToDefaultRouteTableRouteArrayOutput() DefaultRouteTableRouteArrayOutput {
	return i.ToDefaultRouteTableRouteArrayOutputWithContext(context.Background())
}

func (i DefaultRouteTableRouteArray) ToDefaultRouteTableRouteArrayOutputWithContext(ctx context.Context) DefaultRouteTableRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultRouteTableRouteArrayOutput)
}

type DefaultRouteTableRouteOutput struct{ *pulumi.OutputState }

func (DefaultRouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultRouteTableRoute)(nil)).Elem()
}

func (o DefaultRouteTableRouteOutput) ToDefaultRouteTableRouteOutput() DefaultRouteTableRouteOutput {
	return o
}

func (o DefaultRouteTableRouteOutput) ToDefaultRouteTableRouteOutputWithContext(ctx context.Context) DefaultRouteTableRouteOutput {
	return o
}

// The CIDR block of the route.
func (o DefaultRouteTableRouteOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRoute) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC Egress Only Internet Gateway.
func (o DefaultRouteTableRouteOutput) EgressOnlyGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRoute) *string { return v.EgressOnlyGatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC internet gateway or a virtual private gateway.
func (o DefaultRouteTableRouteOutput) GatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRoute) *string { return v.GatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of an EC2 instance.
func (o DefaultRouteTableRouteOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRoute) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// The Ipv6 CIDR block of the route
func (o DefaultRouteTableRouteOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRoute) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC NAT gateway.
func (o DefaultRouteTableRouteOutput) NatGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRoute) *string { return v.NatGatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of an EC2 network interface.
func (o DefaultRouteTableRouteOutput) NetworkInterfaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRoute) *string { return v.NetworkInterfaceId }).(pulumi.StringPtrOutput)
}

// Identifier of an EC2 Transit Gateway.
func (o DefaultRouteTableRouteOutput) TransitGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRoute) *string { return v.TransitGatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC peering connection.
func (o DefaultRouteTableRouteOutput) VpcPeeringConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRoute) *string { return v.VpcPeeringConnectionId }).(pulumi.StringPtrOutput)
}

type DefaultRouteTableRouteArrayOutput struct{ *pulumi.OutputState }

func (DefaultRouteTableRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultRouteTableRoute)(nil)).Elem()
}

func (o DefaultRouteTableRouteArrayOutput) ToDefaultRouteTableRouteArrayOutput() DefaultRouteTableRouteArrayOutput {
	return o
}

func (o DefaultRouteTableRouteArrayOutput) ToDefaultRouteTableRouteArrayOutputWithContext(ctx context.Context) DefaultRouteTableRouteArrayOutput {
	return o
}

func (o DefaultRouteTableRouteArrayOutput) Index(i pulumi.IntInput) DefaultRouteTableRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DefaultRouteTableRoute {
		return vs[0].([]DefaultRouteTableRoute)[vs[1].(int)]
	}).(DefaultRouteTableRouteOutput)
}

type DefaultSecurityGroupEgress struct {
	CidrBlocks []string `pulumi:"cidrBlocks"`
	// The description of the security group
	Description    *string  `pulumi:"description"`
	FromPort       int      `pulumi:"fromPort"`
	Ipv6CidrBlocks []string `pulumi:"ipv6CidrBlocks"`
	PrefixListIds  []string `pulumi:"prefixListIds"`
	Protocol       string   `pulumi:"protocol"`
	SecurityGroups []string `pulumi:"securityGroups"`
	Self           *bool    `pulumi:"self"`
	ToPort         int      `pulumi:"toPort"`
}

// DefaultSecurityGroupEgressInput is an input type that accepts DefaultSecurityGroupEgressArgs and DefaultSecurityGroupEgressOutput values.
// You can construct a concrete instance of `DefaultSecurityGroupEgressInput` via:
//
//          DefaultSecurityGroupEgressArgs{...}
type DefaultSecurityGroupEgressInput interface {
	pulumi.Input

	ToDefaultSecurityGroupEgressOutput() DefaultSecurityGroupEgressOutput
	ToDefaultSecurityGroupEgressOutputWithContext(context.Context) DefaultSecurityGroupEgressOutput
}

type DefaultSecurityGroupEgressArgs struct {
	CidrBlocks pulumi.StringArrayInput `pulumi:"cidrBlocks"`
	// The description of the security group
	Description    pulumi.StringPtrInput   `pulumi:"description"`
	FromPort       pulumi.IntInput         `pulumi:"fromPort"`
	Ipv6CidrBlocks pulumi.StringArrayInput `pulumi:"ipv6CidrBlocks"`
	PrefixListIds  pulumi.StringArrayInput `pulumi:"prefixListIds"`
	Protocol       pulumi.StringInput      `pulumi:"protocol"`
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	Self           pulumi.BoolPtrInput     `pulumi:"self"`
	ToPort         pulumi.IntInput         `pulumi:"toPort"`
}

func (DefaultSecurityGroupEgressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultSecurityGroupEgress)(nil)).Elem()
}

func (i DefaultSecurityGroupEgressArgs) ToDefaultSecurityGroupEgressOutput() DefaultSecurityGroupEgressOutput {
	return i.ToDefaultSecurityGroupEgressOutputWithContext(context.Background())
}

func (i DefaultSecurityGroupEgressArgs) ToDefaultSecurityGroupEgressOutputWithContext(ctx context.Context) DefaultSecurityGroupEgressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultSecurityGroupEgressOutput)
}

// DefaultSecurityGroupEgressArrayInput is an input type that accepts DefaultSecurityGroupEgressArray and DefaultSecurityGroupEgressArrayOutput values.
// You can construct a concrete instance of `DefaultSecurityGroupEgressArrayInput` via:
//
//          DefaultSecurityGroupEgressArray{ DefaultSecurityGroupEgressArgs{...} }
type DefaultSecurityGroupEgressArrayInput interface {
	pulumi.Input

	ToDefaultSecurityGroupEgressArrayOutput() DefaultSecurityGroupEgressArrayOutput
	ToDefaultSecurityGroupEgressArrayOutputWithContext(context.Context) DefaultSecurityGroupEgressArrayOutput
}

type DefaultSecurityGroupEgressArray []DefaultSecurityGroupEgressInput

func (DefaultSecurityGroupEgressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultSecurityGroupEgress)(nil)).Elem()
}

func (i DefaultSecurityGroupEgressArray) ToDefaultSecurityGroupEgressArrayOutput() DefaultSecurityGroupEgressArrayOutput {
	return i.ToDefaultSecurityGroupEgressArrayOutputWithContext(context.Background())
}

func (i DefaultSecurityGroupEgressArray) ToDefaultSecurityGroupEgressArrayOutputWithContext(ctx context.Context) DefaultSecurityGroupEgressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultSecurityGroupEgressArrayOutput)
}

type DefaultSecurityGroupEgressOutput struct{ *pulumi.OutputState }

func (DefaultSecurityGroupEgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultSecurityGroupEgress)(nil)).Elem()
}

func (o DefaultSecurityGroupEgressOutput) ToDefaultSecurityGroupEgressOutput() DefaultSecurityGroupEgressOutput {
	return o
}

func (o DefaultSecurityGroupEgressOutput) ToDefaultSecurityGroupEgressOutputWithContext(ctx context.Context) DefaultSecurityGroupEgressOutput {
	return o
}

func (o DefaultSecurityGroupEgressOutput) CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgress) []string { return v.CidrBlocks }).(pulumi.StringArrayOutput)
}

// The description of the security group
func (o DefaultSecurityGroupEgressOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgress) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DefaultSecurityGroupEgressOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgress) int { return v.FromPort }).(pulumi.IntOutput)
}

func (o DefaultSecurityGroupEgressOutput) Ipv6CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgress) []string { return v.Ipv6CidrBlocks }).(pulumi.StringArrayOutput)
}

func (o DefaultSecurityGroupEgressOutput) PrefixListIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgress) []string { return v.PrefixListIds }).(pulumi.StringArrayOutput)
}

func (o DefaultSecurityGroupEgressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgress) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o DefaultSecurityGroupEgressOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgress) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o DefaultSecurityGroupEgressOutput) Self() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgress) *bool { return v.Self }).(pulumi.BoolPtrOutput)
}

func (o DefaultSecurityGroupEgressOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgress) int { return v.ToPort }).(pulumi.IntOutput)
}

type DefaultSecurityGroupEgressArrayOutput struct{ *pulumi.OutputState }

func (DefaultSecurityGroupEgressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultSecurityGroupEgress)(nil)).Elem()
}

func (o DefaultSecurityGroupEgressArrayOutput) ToDefaultSecurityGroupEgressArrayOutput() DefaultSecurityGroupEgressArrayOutput {
	return o
}

func (o DefaultSecurityGroupEgressArrayOutput) ToDefaultSecurityGroupEgressArrayOutputWithContext(ctx context.Context) DefaultSecurityGroupEgressArrayOutput {
	return o
}

func (o DefaultSecurityGroupEgressArrayOutput) Index(i pulumi.IntInput) DefaultSecurityGroupEgressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DefaultSecurityGroupEgress {
		return vs[0].([]DefaultSecurityGroupEgress)[vs[1].(int)]
	}).(DefaultSecurityGroupEgressOutput)
}

type DefaultSecurityGroupIngress struct {
	CidrBlocks []string `pulumi:"cidrBlocks"`
	// The description of the security group
	Description    *string  `pulumi:"description"`
	FromPort       int      `pulumi:"fromPort"`
	Ipv6CidrBlocks []string `pulumi:"ipv6CidrBlocks"`
	PrefixListIds  []string `pulumi:"prefixListIds"`
	Protocol       string   `pulumi:"protocol"`
	SecurityGroups []string `pulumi:"securityGroups"`
	Self           *bool    `pulumi:"self"`
	ToPort         int      `pulumi:"toPort"`
}

// DefaultSecurityGroupIngressInput is an input type that accepts DefaultSecurityGroupIngressArgs and DefaultSecurityGroupIngressOutput values.
// You can construct a concrete instance of `DefaultSecurityGroupIngressInput` via:
//
//          DefaultSecurityGroupIngressArgs{...}
type DefaultSecurityGroupIngressInput interface {
	pulumi.Input

	ToDefaultSecurityGroupIngressOutput() DefaultSecurityGroupIngressOutput
	ToDefaultSecurityGroupIngressOutputWithContext(context.Context) DefaultSecurityGroupIngressOutput
}

type DefaultSecurityGroupIngressArgs struct {
	CidrBlocks pulumi.StringArrayInput `pulumi:"cidrBlocks"`
	// The description of the security group
	Description    pulumi.StringPtrInput   `pulumi:"description"`
	FromPort       pulumi.IntInput         `pulumi:"fromPort"`
	Ipv6CidrBlocks pulumi.StringArrayInput `pulumi:"ipv6CidrBlocks"`
	PrefixListIds  pulumi.StringArrayInput `pulumi:"prefixListIds"`
	Protocol       pulumi.StringInput      `pulumi:"protocol"`
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	Self           pulumi.BoolPtrInput     `pulumi:"self"`
	ToPort         pulumi.IntInput         `pulumi:"toPort"`
}

func (DefaultSecurityGroupIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultSecurityGroupIngress)(nil)).Elem()
}

func (i DefaultSecurityGroupIngressArgs) ToDefaultSecurityGroupIngressOutput() DefaultSecurityGroupIngressOutput {
	return i.ToDefaultSecurityGroupIngressOutputWithContext(context.Background())
}

func (i DefaultSecurityGroupIngressArgs) ToDefaultSecurityGroupIngressOutputWithContext(ctx context.Context) DefaultSecurityGroupIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultSecurityGroupIngressOutput)
}

// DefaultSecurityGroupIngressArrayInput is an input type that accepts DefaultSecurityGroupIngressArray and DefaultSecurityGroupIngressArrayOutput values.
// You can construct a concrete instance of `DefaultSecurityGroupIngressArrayInput` via:
//
//          DefaultSecurityGroupIngressArray{ DefaultSecurityGroupIngressArgs{...} }
type DefaultSecurityGroupIngressArrayInput interface {
	pulumi.Input

	ToDefaultSecurityGroupIngressArrayOutput() DefaultSecurityGroupIngressArrayOutput
	ToDefaultSecurityGroupIngressArrayOutputWithContext(context.Context) DefaultSecurityGroupIngressArrayOutput
}

type DefaultSecurityGroupIngressArray []DefaultSecurityGroupIngressInput

func (DefaultSecurityGroupIngressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultSecurityGroupIngress)(nil)).Elem()
}

func (i DefaultSecurityGroupIngressArray) ToDefaultSecurityGroupIngressArrayOutput() DefaultSecurityGroupIngressArrayOutput {
	return i.ToDefaultSecurityGroupIngressArrayOutputWithContext(context.Background())
}

func (i DefaultSecurityGroupIngressArray) ToDefaultSecurityGroupIngressArrayOutputWithContext(ctx context.Context) DefaultSecurityGroupIngressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultSecurityGroupIngressArrayOutput)
}

type DefaultSecurityGroupIngressOutput struct{ *pulumi.OutputState }

func (DefaultSecurityGroupIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultSecurityGroupIngress)(nil)).Elem()
}

func (o DefaultSecurityGroupIngressOutput) ToDefaultSecurityGroupIngressOutput() DefaultSecurityGroupIngressOutput {
	return o
}

func (o DefaultSecurityGroupIngressOutput) ToDefaultSecurityGroupIngressOutputWithContext(ctx context.Context) DefaultSecurityGroupIngressOutput {
	return o
}

func (o DefaultSecurityGroupIngressOutput) CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngress) []string { return v.CidrBlocks }).(pulumi.StringArrayOutput)
}

// The description of the security group
func (o DefaultSecurityGroupIngressOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngress) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DefaultSecurityGroupIngressOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngress) int { return v.FromPort }).(pulumi.IntOutput)
}

func (o DefaultSecurityGroupIngressOutput) Ipv6CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngress) []string { return v.Ipv6CidrBlocks }).(pulumi.StringArrayOutput)
}

func (o DefaultSecurityGroupIngressOutput) PrefixListIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngress) []string { return v.PrefixListIds }).(pulumi.StringArrayOutput)
}

func (o DefaultSecurityGroupIngressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngress) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o DefaultSecurityGroupIngressOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngress) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o DefaultSecurityGroupIngressOutput) Self() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngress) *bool { return v.Self }).(pulumi.BoolPtrOutput)
}

func (o DefaultSecurityGroupIngressOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngress) int { return v.ToPort }).(pulumi.IntOutput)
}

type DefaultSecurityGroupIngressArrayOutput struct{ *pulumi.OutputState }

func (DefaultSecurityGroupIngressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultSecurityGroupIngress)(nil)).Elem()
}

func (o DefaultSecurityGroupIngressArrayOutput) ToDefaultSecurityGroupIngressArrayOutput() DefaultSecurityGroupIngressArrayOutput {
	return o
}

func (o DefaultSecurityGroupIngressArrayOutput) ToDefaultSecurityGroupIngressArrayOutputWithContext(ctx context.Context) DefaultSecurityGroupIngressArrayOutput {
	return o
}

func (o DefaultSecurityGroupIngressArrayOutput) Index(i pulumi.IntInput) DefaultSecurityGroupIngressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DefaultSecurityGroupIngress {
		return vs[0].([]DefaultSecurityGroupIngress)[vs[1].(int)]
	}).(DefaultSecurityGroupIngressOutput)
}

type FleetLaunchTemplateConfig struct {
	// Nested argument containing EC2 Launch Template to use. Defined below.
	LaunchTemplateSpecification FleetLaunchTemplateConfigLaunchTemplateSpecification `pulumi:"launchTemplateSpecification"`
	// Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
	Overrides []FleetLaunchTemplateConfigOverride `pulumi:"overrides"`
}

// FleetLaunchTemplateConfigInput is an input type that accepts FleetLaunchTemplateConfigArgs and FleetLaunchTemplateConfigOutput values.
// You can construct a concrete instance of `FleetLaunchTemplateConfigInput` via:
//
//          FleetLaunchTemplateConfigArgs{...}
type FleetLaunchTemplateConfigInput interface {
	pulumi.Input

	ToFleetLaunchTemplateConfigOutput() FleetLaunchTemplateConfigOutput
	ToFleetLaunchTemplateConfigOutputWithContext(context.Context) FleetLaunchTemplateConfigOutput
}

type FleetLaunchTemplateConfigArgs struct {
	// Nested argument containing EC2 Launch Template to use. Defined below.
	LaunchTemplateSpecification FleetLaunchTemplateConfigLaunchTemplateSpecificationInput `pulumi:"launchTemplateSpecification"`
	// Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
	Overrides FleetLaunchTemplateConfigOverrideArrayInput `pulumi:"overrides"`
}

func (FleetLaunchTemplateConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfig)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigArgs) ToFleetLaunchTemplateConfigOutput() FleetLaunchTemplateConfigOutput {
	return i.ToFleetLaunchTemplateConfigOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigArgs) ToFleetLaunchTemplateConfigOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigOutput)
}

func (i FleetLaunchTemplateConfigArgs) ToFleetLaunchTemplateConfigPtrOutput() FleetLaunchTemplateConfigPtrOutput {
	return i.ToFleetLaunchTemplateConfigPtrOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigArgs) ToFleetLaunchTemplateConfigPtrOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigOutput).ToFleetLaunchTemplateConfigPtrOutputWithContext(ctx)
}

// FleetLaunchTemplateConfigPtrInput is an input type that accepts FleetLaunchTemplateConfigArgs, FleetLaunchTemplateConfigPtr and FleetLaunchTemplateConfigPtrOutput values.
// You can construct a concrete instance of `FleetLaunchTemplateConfigPtrInput` via:
//
//          FleetLaunchTemplateConfigArgs{...}
//
//  or:
//
//          nil
type FleetLaunchTemplateConfigPtrInput interface {
	pulumi.Input

	ToFleetLaunchTemplateConfigPtrOutput() FleetLaunchTemplateConfigPtrOutput
	ToFleetLaunchTemplateConfigPtrOutputWithContext(context.Context) FleetLaunchTemplateConfigPtrOutput
}

type fleetLaunchTemplateConfigPtrType FleetLaunchTemplateConfigArgs

func FleetLaunchTemplateConfigPtr(v *FleetLaunchTemplateConfigArgs) FleetLaunchTemplateConfigPtrInput {
	return (*fleetLaunchTemplateConfigPtrType)(v)
}

func (*fleetLaunchTemplateConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetLaunchTemplateConfig)(nil)).Elem()
}

func (i *fleetLaunchTemplateConfigPtrType) ToFleetLaunchTemplateConfigPtrOutput() FleetLaunchTemplateConfigPtrOutput {
	return i.ToFleetLaunchTemplateConfigPtrOutputWithContext(context.Background())
}

func (i *fleetLaunchTemplateConfigPtrType) ToFleetLaunchTemplateConfigPtrOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigPtrOutput)
}

type FleetLaunchTemplateConfigOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfig)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigOutput) ToFleetLaunchTemplateConfigOutput() FleetLaunchTemplateConfigOutput {
	return o
}

func (o FleetLaunchTemplateConfigOutput) ToFleetLaunchTemplateConfigOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOutput {
	return o
}

func (o FleetLaunchTemplateConfigOutput) ToFleetLaunchTemplateConfigPtrOutput() FleetLaunchTemplateConfigPtrOutput {
	return o.ToFleetLaunchTemplateConfigPtrOutputWithContext(context.Background())
}

func (o FleetLaunchTemplateConfigOutput) ToFleetLaunchTemplateConfigPtrOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfig) *FleetLaunchTemplateConfig {
		return &v
	}).(FleetLaunchTemplateConfigPtrOutput)
}

// Nested argument containing EC2 Launch Template to use. Defined below.
func (o FleetLaunchTemplateConfigOutput) LaunchTemplateSpecification() FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfig) FleetLaunchTemplateConfigLaunchTemplateSpecification {
		return v.LaunchTemplateSpecification
	}).(FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput)
}

// Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
func (o FleetLaunchTemplateConfigOutput) Overrides() FleetLaunchTemplateConfigOverrideArrayOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfig) []FleetLaunchTemplateConfigOverride { return v.Overrides }).(FleetLaunchTemplateConfigOverrideArrayOutput)
}

type FleetLaunchTemplateConfigPtrOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetLaunchTemplateConfig)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigPtrOutput) ToFleetLaunchTemplateConfigPtrOutput() FleetLaunchTemplateConfigPtrOutput {
	return o
}

func (o FleetLaunchTemplateConfigPtrOutput) ToFleetLaunchTemplateConfigPtrOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigPtrOutput {
	return o
}

func (o FleetLaunchTemplateConfigPtrOutput) Elem() FleetLaunchTemplateConfigOutput {
	return o.ApplyT(func(v *FleetLaunchTemplateConfig) FleetLaunchTemplateConfig { return *v }).(FleetLaunchTemplateConfigOutput)
}

// Nested argument containing EC2 Launch Template to use. Defined below.
func (o FleetLaunchTemplateConfigPtrOutput) LaunchTemplateSpecification() FleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutput {
	return o.ApplyT(func(v *FleetLaunchTemplateConfig) *FleetLaunchTemplateConfigLaunchTemplateSpecification {
		if v == nil {
			return nil
		}
		return &v.LaunchTemplateSpecification
	}).(FleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutput)
}

// Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
func (o FleetLaunchTemplateConfigPtrOutput) Overrides() FleetLaunchTemplateConfigOverrideArrayOutput {
	return o.ApplyT(func(v *FleetLaunchTemplateConfig) []FleetLaunchTemplateConfigOverride {
		if v == nil {
			return nil
		}
		return v.Overrides
	}).(FleetLaunchTemplateConfigOverrideArrayOutput)
}

type FleetLaunchTemplateConfigLaunchTemplateSpecification struct {
	// ID of the launch template.
	LaunchTemplateId *string `pulumi:"launchTemplateId"`
	// Name of the launch template.
	LaunchTemplateName *string `pulumi:"launchTemplateName"`
	// Version number of the launch template.
	Version string `pulumi:"version"`
}

// FleetLaunchTemplateConfigLaunchTemplateSpecificationInput is an input type that accepts FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs and FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput values.
// You can construct a concrete instance of `FleetLaunchTemplateConfigLaunchTemplateSpecificationInput` via:
//
//          FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs{...}
type FleetLaunchTemplateConfigLaunchTemplateSpecificationInput interface {
	pulumi.Input

	ToFleetLaunchTemplateConfigLaunchTemplateSpecificationOutput() FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput
	ToFleetLaunchTemplateConfigLaunchTemplateSpecificationOutputWithContext(context.Context) FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput
}

type FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs struct {
	// ID of the launch template.
	LaunchTemplateId pulumi.StringPtrInput `pulumi:"launchTemplateId"`
	// Name of the launch template.
	LaunchTemplateName pulumi.StringPtrInput `pulumi:"launchTemplateName"`
	// Version number of the launch template.
	Version pulumi.StringInput `pulumi:"version"`
}

func (FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigLaunchTemplateSpecification)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs) ToFleetLaunchTemplateConfigLaunchTemplateSpecificationOutput() FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return i.ToFleetLaunchTemplateConfigLaunchTemplateSpecificationOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs) ToFleetLaunchTemplateConfigLaunchTemplateSpecificationOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput)
}

func (i FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs) ToFleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutput() FleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutput {
	return i.ToFleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs) ToFleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput).ToFleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutputWithContext(ctx)
}

// FleetLaunchTemplateConfigLaunchTemplateSpecificationPtrInput is an input type that accepts FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs, FleetLaunchTemplateConfigLaunchTemplateSpecificationPtr and FleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutput values.
// You can construct a concrete instance of `FleetLaunchTemplateConfigLaunchTemplateSpecificationPtrInput` via:
//
//          FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs{...}
//
//  or:
//
//          nil
type FleetLaunchTemplateConfigLaunchTemplateSpecificationPtrInput interface {
	pulumi.Input

	ToFleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutput() FleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutput
	ToFleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutputWithContext(context.Context) FleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutput
}

type fleetLaunchTemplateConfigLaunchTemplateSpecificationPtrType FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs

func FleetLaunchTemplateConfigLaunchTemplateSpecificationPtr(v *FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs) FleetLaunchTemplateConfigLaunchTemplateSpecificationPtrInput {
	return (*fleetLaunchTemplateConfigLaunchTemplateSpecificationPtrType)(v)
}

func (*fleetLaunchTemplateConfigLaunchTemplateSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetLaunchTemplateConfigLaunchTemplateSpecification)(nil)).Elem()
}

func (i *fleetLaunchTemplateConfigLaunchTemplateSpecificationPtrType) ToFleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutput() FleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutput {
	return i.ToFleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutputWithContext(context.Background())
}

func (i *fleetLaunchTemplateConfigLaunchTemplateSpecificationPtrType) ToFleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutput)
}

type FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigLaunchTemplateSpecification)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput) ToFleetLaunchTemplateConfigLaunchTemplateSpecificationOutput() FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return o
}

func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput) ToFleetLaunchTemplateConfigLaunchTemplateSpecificationOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return o
}

func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput) ToFleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutput() FleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutput {
	return o.ToFleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutputWithContext(context.Background())
}

func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput) ToFleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigLaunchTemplateSpecification) *FleetLaunchTemplateConfigLaunchTemplateSpecification {
		return &v
	}).(FleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutput)
}

// ID of the launch template.
func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput) LaunchTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigLaunchTemplateSpecification) *string { return v.LaunchTemplateId }).(pulumi.StringPtrOutput)
}

// Name of the launch template.
func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput) LaunchTemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigLaunchTemplateSpecification) *string { return v.LaunchTemplateName }).(pulumi.StringPtrOutput)
}

// Version number of the launch template.
func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigLaunchTemplateSpecification) string { return v.Version }).(pulumi.StringOutput)
}

type FleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetLaunchTemplateConfigLaunchTemplateSpecification)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutput) ToFleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutput() FleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutput {
	return o
}

func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutput) ToFleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutput {
	return o
}

func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutput) Elem() FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return o.ApplyT(func(v *FleetLaunchTemplateConfigLaunchTemplateSpecification) FleetLaunchTemplateConfigLaunchTemplateSpecification {
		return *v
	}).(FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput)
}

// ID of the launch template.
func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutput) LaunchTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FleetLaunchTemplateConfigLaunchTemplateSpecification) *string {
		if v == nil {
			return nil
		}
		return v.LaunchTemplateId
	}).(pulumi.StringPtrOutput)
}

// Name of the launch template.
func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutput) LaunchTemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FleetLaunchTemplateConfigLaunchTemplateSpecification) *string {
		if v == nil {
			return nil
		}
		return v.LaunchTemplateName
	}).(pulumi.StringPtrOutput)
}

// Version number of the launch template.
func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FleetLaunchTemplateConfigLaunchTemplateSpecification) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type FleetLaunchTemplateConfigOverride struct {
	// Availability Zone in which to launch the instances.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Instance type.
	InstanceType *string `pulumi:"instanceType"`
	// Maximum price per unit hour that you are willing to pay for a Spot Instance.
	MaxPrice *string `pulumi:"maxPrice"`
	// Priority for the launch template override. If `onDemandOptions` `allocationStrategy` is set to `prioritized`, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
	Priority *float64 `pulumi:"priority"`
	// ID of the subnet in which to launch the instances.
	SubnetId *string `pulumi:"subnetId"`
	// Number of units provided by the specified instance type.
	WeightedCapacity *float64 `pulumi:"weightedCapacity"`
}

// FleetLaunchTemplateConfigOverrideInput is an input type that accepts FleetLaunchTemplateConfigOverrideArgs and FleetLaunchTemplateConfigOverrideOutput values.
// You can construct a concrete instance of `FleetLaunchTemplateConfigOverrideInput` via:
//
//          FleetLaunchTemplateConfigOverrideArgs{...}
type FleetLaunchTemplateConfigOverrideInput interface {
	pulumi.Input

	ToFleetLaunchTemplateConfigOverrideOutput() FleetLaunchTemplateConfigOverrideOutput
	ToFleetLaunchTemplateConfigOverrideOutputWithContext(context.Context) FleetLaunchTemplateConfigOverrideOutput
}

type FleetLaunchTemplateConfigOverrideArgs struct {
	// Availability Zone in which to launch the instances.
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// Instance type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// Maximum price per unit hour that you are willing to pay for a Spot Instance.
	MaxPrice pulumi.StringPtrInput `pulumi:"maxPrice"`
	// Priority for the launch template override. If `onDemandOptions` `allocationStrategy` is set to `prioritized`, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
	Priority pulumi.Float64PtrInput `pulumi:"priority"`
	// ID of the subnet in which to launch the instances.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// Number of units provided by the specified instance type.
	WeightedCapacity pulumi.Float64PtrInput `pulumi:"weightedCapacity"`
}

func (FleetLaunchTemplateConfigOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigOverride)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigOverrideArgs) ToFleetLaunchTemplateConfigOverrideOutput() FleetLaunchTemplateConfigOverrideOutput {
	return i.ToFleetLaunchTemplateConfigOverrideOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigOverrideArgs) ToFleetLaunchTemplateConfigOverrideOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigOverrideOutput)
}

// FleetLaunchTemplateConfigOverrideArrayInput is an input type that accepts FleetLaunchTemplateConfigOverrideArray and FleetLaunchTemplateConfigOverrideArrayOutput values.
// You can construct a concrete instance of `FleetLaunchTemplateConfigOverrideArrayInput` via:
//
//          FleetLaunchTemplateConfigOverrideArray{ FleetLaunchTemplateConfigOverrideArgs{...} }
type FleetLaunchTemplateConfigOverrideArrayInput interface {
	pulumi.Input

	ToFleetLaunchTemplateConfigOverrideArrayOutput() FleetLaunchTemplateConfigOverrideArrayOutput
	ToFleetLaunchTemplateConfigOverrideArrayOutputWithContext(context.Context) FleetLaunchTemplateConfigOverrideArrayOutput
}

type FleetLaunchTemplateConfigOverrideArray []FleetLaunchTemplateConfigOverrideInput

func (FleetLaunchTemplateConfigOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FleetLaunchTemplateConfigOverride)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigOverrideArray) ToFleetLaunchTemplateConfigOverrideArrayOutput() FleetLaunchTemplateConfigOverrideArrayOutput {
	return i.ToFleetLaunchTemplateConfigOverrideArrayOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigOverrideArray) ToFleetLaunchTemplateConfigOverrideArrayOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigOverrideArrayOutput)
}

type FleetLaunchTemplateConfigOverrideOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigOverride)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigOverrideOutput) ToFleetLaunchTemplateConfigOverrideOutput() FleetLaunchTemplateConfigOverrideOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideOutput) ToFleetLaunchTemplateConfigOverrideOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideOutput {
	return o
}

// Availability Zone in which to launch the instances.
func (o FleetLaunchTemplateConfigOverrideOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigOverride) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// Instance type.
func (o FleetLaunchTemplateConfigOverrideOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigOverride) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// Maximum price per unit hour that you are willing to pay for a Spot Instance.
func (o FleetLaunchTemplateConfigOverrideOutput) MaxPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigOverride) *string { return v.MaxPrice }).(pulumi.StringPtrOutput)
}

// Priority for the launch template override. If `onDemandOptions` `allocationStrategy` is set to `prioritized`, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
func (o FleetLaunchTemplateConfigOverrideOutput) Priority() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigOverride) *float64 { return v.Priority }).(pulumi.Float64PtrOutput)
}

// ID of the subnet in which to launch the instances.
func (o FleetLaunchTemplateConfigOverrideOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigOverride) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// Number of units provided by the specified instance type.
func (o FleetLaunchTemplateConfigOverrideOutput) WeightedCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigOverride) *float64 { return v.WeightedCapacity }).(pulumi.Float64PtrOutput)
}

type FleetLaunchTemplateConfigOverrideArrayOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FleetLaunchTemplateConfigOverride)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigOverrideArrayOutput) ToFleetLaunchTemplateConfigOverrideArrayOutput() FleetLaunchTemplateConfigOverrideArrayOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideArrayOutput) ToFleetLaunchTemplateConfigOverrideArrayOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideArrayOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideArrayOutput) Index(i pulumi.IntInput) FleetLaunchTemplateConfigOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FleetLaunchTemplateConfigOverride {
		return vs[0].([]FleetLaunchTemplateConfigOverride)[vs[1].(int)]
	}).(FleetLaunchTemplateConfigOverrideOutput)
}

type FleetOnDemandOptions struct {
	// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
	AllocationStrategy *string `pulumi:"allocationStrategy"`
}

// FleetOnDemandOptionsInput is an input type that accepts FleetOnDemandOptionsArgs and FleetOnDemandOptionsOutput values.
// You can construct a concrete instance of `FleetOnDemandOptionsInput` via:
//
//          FleetOnDemandOptionsArgs{...}
type FleetOnDemandOptionsInput interface {
	pulumi.Input

	ToFleetOnDemandOptionsOutput() FleetOnDemandOptionsOutput
	ToFleetOnDemandOptionsOutputWithContext(context.Context) FleetOnDemandOptionsOutput
}

type FleetOnDemandOptionsArgs struct {
	// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
	AllocationStrategy pulumi.StringPtrInput `pulumi:"allocationStrategy"`
}

func (FleetOnDemandOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetOnDemandOptions)(nil)).Elem()
}

func (i FleetOnDemandOptionsArgs) ToFleetOnDemandOptionsOutput() FleetOnDemandOptionsOutput {
	return i.ToFleetOnDemandOptionsOutputWithContext(context.Background())
}

func (i FleetOnDemandOptionsArgs) ToFleetOnDemandOptionsOutputWithContext(ctx context.Context) FleetOnDemandOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetOnDemandOptionsOutput)
}

func (i FleetOnDemandOptionsArgs) ToFleetOnDemandOptionsPtrOutput() FleetOnDemandOptionsPtrOutput {
	return i.ToFleetOnDemandOptionsPtrOutputWithContext(context.Background())
}

func (i FleetOnDemandOptionsArgs) ToFleetOnDemandOptionsPtrOutputWithContext(ctx context.Context) FleetOnDemandOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetOnDemandOptionsOutput).ToFleetOnDemandOptionsPtrOutputWithContext(ctx)
}

// FleetOnDemandOptionsPtrInput is an input type that accepts FleetOnDemandOptionsArgs, FleetOnDemandOptionsPtr and FleetOnDemandOptionsPtrOutput values.
// You can construct a concrete instance of `FleetOnDemandOptionsPtrInput` via:
//
//          FleetOnDemandOptionsArgs{...}
//
//  or:
//
//          nil
type FleetOnDemandOptionsPtrInput interface {
	pulumi.Input

	ToFleetOnDemandOptionsPtrOutput() FleetOnDemandOptionsPtrOutput
	ToFleetOnDemandOptionsPtrOutputWithContext(context.Context) FleetOnDemandOptionsPtrOutput
}

type fleetOnDemandOptionsPtrType FleetOnDemandOptionsArgs

func FleetOnDemandOptionsPtr(v *FleetOnDemandOptionsArgs) FleetOnDemandOptionsPtrInput {
	return (*fleetOnDemandOptionsPtrType)(v)
}

func (*fleetOnDemandOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetOnDemandOptions)(nil)).Elem()
}

func (i *fleetOnDemandOptionsPtrType) ToFleetOnDemandOptionsPtrOutput() FleetOnDemandOptionsPtrOutput {
	return i.ToFleetOnDemandOptionsPtrOutputWithContext(context.Background())
}

func (i *fleetOnDemandOptionsPtrType) ToFleetOnDemandOptionsPtrOutputWithContext(ctx context.Context) FleetOnDemandOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetOnDemandOptionsPtrOutput)
}

type FleetOnDemandOptionsOutput struct{ *pulumi.OutputState }

func (FleetOnDemandOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetOnDemandOptions)(nil)).Elem()
}

func (o FleetOnDemandOptionsOutput) ToFleetOnDemandOptionsOutput() FleetOnDemandOptionsOutput {
	return o
}

func (o FleetOnDemandOptionsOutput) ToFleetOnDemandOptionsOutputWithContext(ctx context.Context) FleetOnDemandOptionsOutput {
	return o
}

func (o FleetOnDemandOptionsOutput) ToFleetOnDemandOptionsPtrOutput() FleetOnDemandOptionsPtrOutput {
	return o.ToFleetOnDemandOptionsPtrOutputWithContext(context.Background())
}

func (o FleetOnDemandOptionsOutput) ToFleetOnDemandOptionsPtrOutputWithContext(ctx context.Context) FleetOnDemandOptionsPtrOutput {
	return o.ApplyT(func(v FleetOnDemandOptions) *FleetOnDemandOptions {
		return &v
	}).(FleetOnDemandOptionsPtrOutput)
}

// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
func (o FleetOnDemandOptionsOutput) AllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetOnDemandOptions) *string { return v.AllocationStrategy }).(pulumi.StringPtrOutput)
}

type FleetOnDemandOptionsPtrOutput struct{ *pulumi.OutputState }

func (FleetOnDemandOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetOnDemandOptions)(nil)).Elem()
}

func (o FleetOnDemandOptionsPtrOutput) ToFleetOnDemandOptionsPtrOutput() FleetOnDemandOptionsPtrOutput {
	return o
}

func (o FleetOnDemandOptionsPtrOutput) ToFleetOnDemandOptionsPtrOutputWithContext(ctx context.Context) FleetOnDemandOptionsPtrOutput {
	return o
}

func (o FleetOnDemandOptionsPtrOutput) Elem() FleetOnDemandOptionsOutput {
	return o.ApplyT(func(v *FleetOnDemandOptions) FleetOnDemandOptions { return *v }).(FleetOnDemandOptionsOutput)
}

// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
func (o FleetOnDemandOptionsPtrOutput) AllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FleetOnDemandOptions) *string {
		if v == nil {
			return nil
		}
		return v.AllocationStrategy
	}).(pulumi.StringPtrOutput)
}

type FleetSpotOptions struct {
	// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
	AllocationStrategy *string `pulumi:"allocationStrategy"`
	// Behavior when a Spot Instance is interrupted. Valid values: `hibernate`, `stop`, `terminate`. Default: `terminate`.
	InstanceInterruptionBehavior *string `pulumi:"instanceInterruptionBehavior"`
	// Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot `allocationStrategy` is set to `lowestPrice`. Default: `1`.
	InstancePoolsToUseCount *int `pulumi:"instancePoolsToUseCount"`
}

// FleetSpotOptionsInput is an input type that accepts FleetSpotOptionsArgs and FleetSpotOptionsOutput values.
// You can construct a concrete instance of `FleetSpotOptionsInput` via:
//
//          FleetSpotOptionsArgs{...}
type FleetSpotOptionsInput interface {
	pulumi.Input

	ToFleetSpotOptionsOutput() FleetSpotOptionsOutput
	ToFleetSpotOptionsOutputWithContext(context.Context) FleetSpotOptionsOutput
}

type FleetSpotOptionsArgs struct {
	// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
	AllocationStrategy pulumi.StringPtrInput `pulumi:"allocationStrategy"`
	// Behavior when a Spot Instance is interrupted. Valid values: `hibernate`, `stop`, `terminate`. Default: `terminate`.
	InstanceInterruptionBehavior pulumi.StringPtrInput `pulumi:"instanceInterruptionBehavior"`
	// Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot `allocationStrategy` is set to `lowestPrice`. Default: `1`.
	InstancePoolsToUseCount pulumi.IntPtrInput `pulumi:"instancePoolsToUseCount"`
}

func (FleetSpotOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetSpotOptions)(nil)).Elem()
}

func (i FleetSpotOptionsArgs) ToFleetSpotOptionsOutput() FleetSpotOptionsOutput {
	return i.ToFleetSpotOptionsOutputWithContext(context.Background())
}

func (i FleetSpotOptionsArgs) ToFleetSpotOptionsOutputWithContext(ctx context.Context) FleetSpotOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetSpotOptionsOutput)
}

func (i FleetSpotOptionsArgs) ToFleetSpotOptionsPtrOutput() FleetSpotOptionsPtrOutput {
	return i.ToFleetSpotOptionsPtrOutputWithContext(context.Background())
}

func (i FleetSpotOptionsArgs) ToFleetSpotOptionsPtrOutputWithContext(ctx context.Context) FleetSpotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetSpotOptionsOutput).ToFleetSpotOptionsPtrOutputWithContext(ctx)
}

// FleetSpotOptionsPtrInput is an input type that accepts FleetSpotOptionsArgs, FleetSpotOptionsPtr and FleetSpotOptionsPtrOutput values.
// You can construct a concrete instance of `FleetSpotOptionsPtrInput` via:
//
//          FleetSpotOptionsArgs{...}
//
//  or:
//
//          nil
type FleetSpotOptionsPtrInput interface {
	pulumi.Input

	ToFleetSpotOptionsPtrOutput() FleetSpotOptionsPtrOutput
	ToFleetSpotOptionsPtrOutputWithContext(context.Context) FleetSpotOptionsPtrOutput
}

type fleetSpotOptionsPtrType FleetSpotOptionsArgs

func FleetSpotOptionsPtr(v *FleetSpotOptionsArgs) FleetSpotOptionsPtrInput {
	return (*fleetSpotOptionsPtrType)(v)
}

func (*fleetSpotOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetSpotOptions)(nil)).Elem()
}

func (i *fleetSpotOptionsPtrType) ToFleetSpotOptionsPtrOutput() FleetSpotOptionsPtrOutput {
	return i.ToFleetSpotOptionsPtrOutputWithContext(context.Background())
}

func (i *fleetSpotOptionsPtrType) ToFleetSpotOptionsPtrOutputWithContext(ctx context.Context) FleetSpotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetSpotOptionsPtrOutput)
}

type FleetSpotOptionsOutput struct{ *pulumi.OutputState }

func (FleetSpotOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetSpotOptions)(nil)).Elem()
}

func (o FleetSpotOptionsOutput) ToFleetSpotOptionsOutput() FleetSpotOptionsOutput {
	return o
}

func (o FleetSpotOptionsOutput) ToFleetSpotOptionsOutputWithContext(ctx context.Context) FleetSpotOptionsOutput {
	return o
}

func (o FleetSpotOptionsOutput) ToFleetSpotOptionsPtrOutput() FleetSpotOptionsPtrOutput {
	return o.ToFleetSpotOptionsPtrOutputWithContext(context.Background())
}

func (o FleetSpotOptionsOutput) ToFleetSpotOptionsPtrOutputWithContext(ctx context.Context) FleetSpotOptionsPtrOutput {
	return o.ApplyT(func(v FleetSpotOptions) *FleetSpotOptions {
		return &v
	}).(FleetSpotOptionsPtrOutput)
}

// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
func (o FleetSpotOptionsOutput) AllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetSpotOptions) *string { return v.AllocationStrategy }).(pulumi.StringPtrOutput)
}

// Behavior when a Spot Instance is interrupted. Valid values: `hibernate`, `stop`, `terminate`. Default: `terminate`.
func (o FleetSpotOptionsOutput) InstanceInterruptionBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetSpotOptions) *string { return v.InstanceInterruptionBehavior }).(pulumi.StringPtrOutput)
}

// Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot `allocationStrategy` is set to `lowestPrice`. Default: `1`.
func (o FleetSpotOptionsOutput) InstancePoolsToUseCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetSpotOptions) *int { return v.InstancePoolsToUseCount }).(pulumi.IntPtrOutput)
}

type FleetSpotOptionsPtrOutput struct{ *pulumi.OutputState }

func (FleetSpotOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetSpotOptions)(nil)).Elem()
}

func (o FleetSpotOptionsPtrOutput) ToFleetSpotOptionsPtrOutput() FleetSpotOptionsPtrOutput {
	return o
}

func (o FleetSpotOptionsPtrOutput) ToFleetSpotOptionsPtrOutputWithContext(ctx context.Context) FleetSpotOptionsPtrOutput {
	return o
}

func (o FleetSpotOptionsPtrOutput) Elem() FleetSpotOptionsOutput {
	return o.ApplyT(func(v *FleetSpotOptions) FleetSpotOptions { return *v }).(FleetSpotOptionsOutput)
}

// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
func (o FleetSpotOptionsPtrOutput) AllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FleetSpotOptions) *string {
		if v == nil {
			return nil
		}
		return v.AllocationStrategy
	}).(pulumi.StringPtrOutput)
}

// Behavior when a Spot Instance is interrupted. Valid values: `hibernate`, `stop`, `terminate`. Default: `terminate`.
func (o FleetSpotOptionsPtrOutput) InstanceInterruptionBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FleetSpotOptions) *string {
		if v == nil {
			return nil
		}
		return v.InstanceInterruptionBehavior
	}).(pulumi.StringPtrOutput)
}

// Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot `allocationStrategy` is set to `lowestPrice`. Default: `1`.
func (o FleetSpotOptionsPtrOutput) InstancePoolsToUseCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FleetSpotOptions) *int {
		if v == nil {
			return nil
		}
		return v.InstancePoolsToUseCount
	}).(pulumi.IntPtrOutput)
}

type FleetTargetCapacitySpecification struct {
	// Default target capacity type. Valid values: `on-demand`, `spot`.
	DefaultTargetCapacityType string `pulumi:"defaultTargetCapacityType"`
	// The number of On-Demand units to request.
	OnDemandTargetCapacity *int `pulumi:"onDemandTargetCapacity"`
	// The number of Spot units to request.
	SpotTargetCapacity *int `pulumi:"spotTargetCapacity"`
	// The number of units to request, filled using `defaultTargetCapacityType`.
	TotalTargetCapacity int `pulumi:"totalTargetCapacity"`
}

// FleetTargetCapacitySpecificationInput is an input type that accepts FleetTargetCapacitySpecificationArgs and FleetTargetCapacitySpecificationOutput values.
// You can construct a concrete instance of `FleetTargetCapacitySpecificationInput` via:
//
//          FleetTargetCapacitySpecificationArgs{...}
type FleetTargetCapacitySpecificationInput interface {
	pulumi.Input

	ToFleetTargetCapacitySpecificationOutput() FleetTargetCapacitySpecificationOutput
	ToFleetTargetCapacitySpecificationOutputWithContext(context.Context) FleetTargetCapacitySpecificationOutput
}

type FleetTargetCapacitySpecificationArgs struct {
	// Default target capacity type. Valid values: `on-demand`, `spot`.
	DefaultTargetCapacityType pulumi.StringInput `pulumi:"defaultTargetCapacityType"`
	// The number of On-Demand units to request.
	OnDemandTargetCapacity pulumi.IntPtrInput `pulumi:"onDemandTargetCapacity"`
	// The number of Spot units to request.
	SpotTargetCapacity pulumi.IntPtrInput `pulumi:"spotTargetCapacity"`
	// The number of units to request, filled using `defaultTargetCapacityType`.
	TotalTargetCapacity pulumi.IntInput `pulumi:"totalTargetCapacity"`
}

func (FleetTargetCapacitySpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetTargetCapacitySpecification)(nil)).Elem()
}

func (i FleetTargetCapacitySpecificationArgs) ToFleetTargetCapacitySpecificationOutput() FleetTargetCapacitySpecificationOutput {
	return i.ToFleetTargetCapacitySpecificationOutputWithContext(context.Background())
}

func (i FleetTargetCapacitySpecificationArgs) ToFleetTargetCapacitySpecificationOutputWithContext(ctx context.Context) FleetTargetCapacitySpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetTargetCapacitySpecificationOutput)
}

func (i FleetTargetCapacitySpecificationArgs) ToFleetTargetCapacitySpecificationPtrOutput() FleetTargetCapacitySpecificationPtrOutput {
	return i.ToFleetTargetCapacitySpecificationPtrOutputWithContext(context.Background())
}

func (i FleetTargetCapacitySpecificationArgs) ToFleetTargetCapacitySpecificationPtrOutputWithContext(ctx context.Context) FleetTargetCapacitySpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetTargetCapacitySpecificationOutput).ToFleetTargetCapacitySpecificationPtrOutputWithContext(ctx)
}

// FleetTargetCapacitySpecificationPtrInput is an input type that accepts FleetTargetCapacitySpecificationArgs, FleetTargetCapacitySpecificationPtr and FleetTargetCapacitySpecificationPtrOutput values.
// You can construct a concrete instance of `FleetTargetCapacitySpecificationPtrInput` via:
//
//          FleetTargetCapacitySpecificationArgs{...}
//
//  or:
//
//          nil
type FleetTargetCapacitySpecificationPtrInput interface {
	pulumi.Input

	ToFleetTargetCapacitySpecificationPtrOutput() FleetTargetCapacitySpecificationPtrOutput
	ToFleetTargetCapacitySpecificationPtrOutputWithContext(context.Context) FleetTargetCapacitySpecificationPtrOutput
}

type fleetTargetCapacitySpecificationPtrType FleetTargetCapacitySpecificationArgs

func FleetTargetCapacitySpecificationPtr(v *FleetTargetCapacitySpecificationArgs) FleetTargetCapacitySpecificationPtrInput {
	return (*fleetTargetCapacitySpecificationPtrType)(v)
}

func (*fleetTargetCapacitySpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetTargetCapacitySpecification)(nil)).Elem()
}

func (i *fleetTargetCapacitySpecificationPtrType) ToFleetTargetCapacitySpecificationPtrOutput() FleetTargetCapacitySpecificationPtrOutput {
	return i.ToFleetTargetCapacitySpecificationPtrOutputWithContext(context.Background())
}

func (i *fleetTargetCapacitySpecificationPtrType) ToFleetTargetCapacitySpecificationPtrOutputWithContext(ctx context.Context) FleetTargetCapacitySpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetTargetCapacitySpecificationPtrOutput)
}

type FleetTargetCapacitySpecificationOutput struct{ *pulumi.OutputState }

func (FleetTargetCapacitySpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetTargetCapacitySpecification)(nil)).Elem()
}

func (o FleetTargetCapacitySpecificationOutput) ToFleetTargetCapacitySpecificationOutput() FleetTargetCapacitySpecificationOutput {
	return o
}

func (o FleetTargetCapacitySpecificationOutput) ToFleetTargetCapacitySpecificationOutputWithContext(ctx context.Context) FleetTargetCapacitySpecificationOutput {
	return o
}

func (o FleetTargetCapacitySpecificationOutput) ToFleetTargetCapacitySpecificationPtrOutput() FleetTargetCapacitySpecificationPtrOutput {
	return o.ToFleetTargetCapacitySpecificationPtrOutputWithContext(context.Background())
}

func (o FleetTargetCapacitySpecificationOutput) ToFleetTargetCapacitySpecificationPtrOutputWithContext(ctx context.Context) FleetTargetCapacitySpecificationPtrOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecification) *FleetTargetCapacitySpecification {
		return &v
	}).(FleetTargetCapacitySpecificationPtrOutput)
}

// Default target capacity type. Valid values: `on-demand`, `spot`.
func (o FleetTargetCapacitySpecificationOutput) DefaultTargetCapacityType() pulumi.StringOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecification) string { return v.DefaultTargetCapacityType }).(pulumi.StringOutput)
}

// The number of On-Demand units to request.
func (o FleetTargetCapacitySpecificationOutput) OnDemandTargetCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecification) *int { return v.OnDemandTargetCapacity }).(pulumi.IntPtrOutput)
}

// The number of Spot units to request.
func (o FleetTargetCapacitySpecificationOutput) SpotTargetCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecification) *int { return v.SpotTargetCapacity }).(pulumi.IntPtrOutput)
}

// The number of units to request, filled using `defaultTargetCapacityType`.
func (o FleetTargetCapacitySpecificationOutput) TotalTargetCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecification) int { return v.TotalTargetCapacity }).(pulumi.IntOutput)
}

type FleetTargetCapacitySpecificationPtrOutput struct{ *pulumi.OutputState }

func (FleetTargetCapacitySpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetTargetCapacitySpecification)(nil)).Elem()
}

func (o FleetTargetCapacitySpecificationPtrOutput) ToFleetTargetCapacitySpecificationPtrOutput() FleetTargetCapacitySpecificationPtrOutput {
	return o
}

func (o FleetTargetCapacitySpecificationPtrOutput) ToFleetTargetCapacitySpecificationPtrOutputWithContext(ctx context.Context) FleetTargetCapacitySpecificationPtrOutput {
	return o
}

func (o FleetTargetCapacitySpecificationPtrOutput) Elem() FleetTargetCapacitySpecificationOutput {
	return o.ApplyT(func(v *FleetTargetCapacitySpecification) FleetTargetCapacitySpecification { return *v }).(FleetTargetCapacitySpecificationOutput)
}

// Default target capacity type. Valid values: `on-demand`, `spot`.
func (o FleetTargetCapacitySpecificationPtrOutput) DefaultTargetCapacityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FleetTargetCapacitySpecification) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultTargetCapacityType
	}).(pulumi.StringPtrOutput)
}

// The number of On-Demand units to request.
func (o FleetTargetCapacitySpecificationPtrOutput) OnDemandTargetCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FleetTargetCapacitySpecification) *int {
		if v == nil {
			return nil
		}
		return v.OnDemandTargetCapacity
	}).(pulumi.IntPtrOutput)
}

// The number of Spot units to request.
func (o FleetTargetCapacitySpecificationPtrOutput) SpotTargetCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FleetTargetCapacitySpecification) *int {
		if v == nil {
			return nil
		}
		return v.SpotTargetCapacity
	}).(pulumi.IntPtrOutput)
}

// The number of units to request, filled using `defaultTargetCapacityType`.
func (o FleetTargetCapacitySpecificationPtrOutput) TotalTargetCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FleetTargetCapacitySpecification) *int {
		if v == nil {
			return nil
		}
		return &v.TotalTargetCapacity
	}).(pulumi.IntPtrOutput)
}

type InstanceCreditSpecification struct {
	// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits *string `pulumi:"cpuCredits"`
}

// InstanceCreditSpecificationInput is an input type that accepts InstanceCreditSpecificationArgs and InstanceCreditSpecificationOutput values.
// You can construct a concrete instance of `InstanceCreditSpecificationInput` via:
//
//          InstanceCreditSpecificationArgs{...}
type InstanceCreditSpecificationInput interface {
	pulumi.Input

	ToInstanceCreditSpecificationOutput() InstanceCreditSpecificationOutput
	ToInstanceCreditSpecificationOutputWithContext(context.Context) InstanceCreditSpecificationOutput
}

type InstanceCreditSpecificationArgs struct {
	// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits pulumi.StringPtrInput `pulumi:"cpuCredits"`
}

func (InstanceCreditSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceCreditSpecification)(nil)).Elem()
}

func (i InstanceCreditSpecificationArgs) ToInstanceCreditSpecificationOutput() InstanceCreditSpecificationOutput {
	return i.ToInstanceCreditSpecificationOutputWithContext(context.Background())
}

func (i InstanceCreditSpecificationArgs) ToInstanceCreditSpecificationOutputWithContext(ctx context.Context) InstanceCreditSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceCreditSpecificationOutput)
}

func (i InstanceCreditSpecificationArgs) ToInstanceCreditSpecificationPtrOutput() InstanceCreditSpecificationPtrOutput {
	return i.ToInstanceCreditSpecificationPtrOutputWithContext(context.Background())
}

func (i InstanceCreditSpecificationArgs) ToInstanceCreditSpecificationPtrOutputWithContext(ctx context.Context) InstanceCreditSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceCreditSpecificationOutput).ToInstanceCreditSpecificationPtrOutputWithContext(ctx)
}

// InstanceCreditSpecificationPtrInput is an input type that accepts InstanceCreditSpecificationArgs, InstanceCreditSpecificationPtr and InstanceCreditSpecificationPtrOutput values.
// You can construct a concrete instance of `InstanceCreditSpecificationPtrInput` via:
//
//          InstanceCreditSpecificationArgs{...}
//
//  or:
//
//          nil
type InstanceCreditSpecificationPtrInput interface {
	pulumi.Input

	ToInstanceCreditSpecificationPtrOutput() InstanceCreditSpecificationPtrOutput
	ToInstanceCreditSpecificationPtrOutputWithContext(context.Context) InstanceCreditSpecificationPtrOutput
}

type instanceCreditSpecificationPtrType InstanceCreditSpecificationArgs

func InstanceCreditSpecificationPtr(v *InstanceCreditSpecificationArgs) InstanceCreditSpecificationPtrInput {
	return (*instanceCreditSpecificationPtrType)(v)
}

func (*instanceCreditSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceCreditSpecification)(nil)).Elem()
}

func (i *instanceCreditSpecificationPtrType) ToInstanceCreditSpecificationPtrOutput() InstanceCreditSpecificationPtrOutput {
	return i.ToInstanceCreditSpecificationPtrOutputWithContext(context.Background())
}

func (i *instanceCreditSpecificationPtrType) ToInstanceCreditSpecificationPtrOutputWithContext(ctx context.Context) InstanceCreditSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceCreditSpecificationPtrOutput)
}

type InstanceCreditSpecificationOutput struct{ *pulumi.OutputState }

func (InstanceCreditSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceCreditSpecification)(nil)).Elem()
}

func (o InstanceCreditSpecificationOutput) ToInstanceCreditSpecificationOutput() InstanceCreditSpecificationOutput {
	return o
}

func (o InstanceCreditSpecificationOutput) ToInstanceCreditSpecificationOutputWithContext(ctx context.Context) InstanceCreditSpecificationOutput {
	return o
}

func (o InstanceCreditSpecificationOutput) ToInstanceCreditSpecificationPtrOutput() InstanceCreditSpecificationPtrOutput {
	return o.ToInstanceCreditSpecificationPtrOutputWithContext(context.Background())
}

func (o InstanceCreditSpecificationOutput) ToInstanceCreditSpecificationPtrOutputWithContext(ctx context.Context) InstanceCreditSpecificationPtrOutput {
	return o.ApplyT(func(v InstanceCreditSpecification) *InstanceCreditSpecification {
		return &v
	}).(InstanceCreditSpecificationPtrOutput)
}

// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
func (o InstanceCreditSpecificationOutput) CpuCredits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceCreditSpecification) *string { return v.CpuCredits }).(pulumi.StringPtrOutput)
}

type InstanceCreditSpecificationPtrOutput struct{ *pulumi.OutputState }

func (InstanceCreditSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceCreditSpecification)(nil)).Elem()
}

func (o InstanceCreditSpecificationPtrOutput) ToInstanceCreditSpecificationPtrOutput() InstanceCreditSpecificationPtrOutput {
	return o
}

func (o InstanceCreditSpecificationPtrOutput) ToInstanceCreditSpecificationPtrOutputWithContext(ctx context.Context) InstanceCreditSpecificationPtrOutput {
	return o
}

func (o InstanceCreditSpecificationPtrOutput) Elem() InstanceCreditSpecificationOutput {
	return o.ApplyT(func(v *InstanceCreditSpecification) InstanceCreditSpecification { return *v }).(InstanceCreditSpecificationOutput)
}

// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
func (o InstanceCreditSpecificationPtrOutput) CpuCredits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceCreditSpecification) *string {
		if v == nil {
			return nil
		}
		return v.CpuCredits
	}).(pulumi.StringPtrOutput)
}

type InstanceEbsBlockDevice struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The name of the device to mount.
	DeviceName string `pulumi:"deviceName"`
	// Enables [EBS
	// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
	Encrypted *bool `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops *int `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId *string `pulumi:"snapshotId"`
	VolumeId   *string `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`,
	// or `"io1"`. (Default: `"gp2"`).
	VolumeType *string `pulumi:"volumeType"`
}

// InstanceEbsBlockDeviceInput is an input type that accepts InstanceEbsBlockDeviceArgs and InstanceEbsBlockDeviceOutput values.
// You can construct a concrete instance of `InstanceEbsBlockDeviceInput` via:
//
//          InstanceEbsBlockDeviceArgs{...}
type InstanceEbsBlockDeviceInput interface {
	pulumi.Input

	ToInstanceEbsBlockDeviceOutput() InstanceEbsBlockDeviceOutput
	ToInstanceEbsBlockDeviceOutputWithContext(context.Context) InstanceEbsBlockDeviceOutput
}

type InstanceEbsBlockDeviceArgs struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The name of the device to mount.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Enables [EBS
	// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	VolumeId   pulumi.StringPtrInput `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`,
	// or `"io1"`. (Default: `"gp2"`).
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (InstanceEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEbsBlockDevice)(nil)).Elem()
}

func (i InstanceEbsBlockDeviceArgs) ToInstanceEbsBlockDeviceOutput() InstanceEbsBlockDeviceOutput {
	return i.ToInstanceEbsBlockDeviceOutputWithContext(context.Background())
}

func (i InstanceEbsBlockDeviceArgs) ToInstanceEbsBlockDeviceOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEbsBlockDeviceOutput)
}

// InstanceEbsBlockDeviceArrayInput is an input type that accepts InstanceEbsBlockDeviceArray and InstanceEbsBlockDeviceArrayOutput values.
// You can construct a concrete instance of `InstanceEbsBlockDeviceArrayInput` via:
//
//          InstanceEbsBlockDeviceArray{ InstanceEbsBlockDeviceArgs{...} }
type InstanceEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToInstanceEbsBlockDeviceArrayOutput() InstanceEbsBlockDeviceArrayOutput
	ToInstanceEbsBlockDeviceArrayOutputWithContext(context.Context) InstanceEbsBlockDeviceArrayOutput
}

type InstanceEbsBlockDeviceArray []InstanceEbsBlockDeviceInput

func (InstanceEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEbsBlockDevice)(nil)).Elem()
}

func (i InstanceEbsBlockDeviceArray) ToInstanceEbsBlockDeviceArrayOutput() InstanceEbsBlockDeviceArrayOutput {
	return i.ToInstanceEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i InstanceEbsBlockDeviceArray) ToInstanceEbsBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEbsBlockDeviceArrayOutput)
}

type InstanceEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (InstanceEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEbsBlockDevice)(nil)).Elem()
}

func (o InstanceEbsBlockDeviceOutput) ToInstanceEbsBlockDeviceOutput() InstanceEbsBlockDeviceOutput {
	return o
}

func (o InstanceEbsBlockDeviceOutput) ToInstanceEbsBlockDeviceOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceOutput {
	return o
}

// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o InstanceEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The name of the device to mount.
func (o InstanceEbsBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Enables [EBS
// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
func (o InstanceEbsBlockDeviceOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This must be set with a `volumeType` of `"io1"`.
func (o InstanceEbsBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o InstanceEbsBlockDeviceOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The Snapshot ID to mount.
func (o InstanceEbsBlockDeviceOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

func (o InstanceEbsBlockDeviceOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gibibytes (GiB).
func (o InstanceEbsBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`,
// or `"io1"`. (Default: `"gp2"`).
func (o InstanceEbsBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type InstanceEbsBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (InstanceEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEbsBlockDevice)(nil)).Elem()
}

func (o InstanceEbsBlockDeviceArrayOutput) ToInstanceEbsBlockDeviceArrayOutput() InstanceEbsBlockDeviceArrayOutput {
	return o
}

func (o InstanceEbsBlockDeviceArrayOutput) ToInstanceEbsBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceArrayOutput {
	return o
}

func (o InstanceEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) InstanceEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceEbsBlockDevice {
		return vs[0].([]InstanceEbsBlockDevice)[vs[1].(int)]
	}).(InstanceEbsBlockDeviceOutput)
}

type InstanceEphemeralBlockDevice struct {
	// The name of the block device to mount on the instance.
	DeviceName string `pulumi:"deviceName"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice *bool `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g. `"ephemeral0"`).
	VirtualName *string `pulumi:"virtualName"`
}

// InstanceEphemeralBlockDeviceInput is an input type that accepts InstanceEphemeralBlockDeviceArgs and InstanceEphemeralBlockDeviceOutput values.
// You can construct a concrete instance of `InstanceEphemeralBlockDeviceInput` via:
//
//          InstanceEphemeralBlockDeviceArgs{...}
type InstanceEphemeralBlockDeviceInput interface {
	pulumi.Input

	ToInstanceEphemeralBlockDeviceOutput() InstanceEphemeralBlockDeviceOutput
	ToInstanceEphemeralBlockDeviceOutputWithContext(context.Context) InstanceEphemeralBlockDeviceOutput
}

type InstanceEphemeralBlockDeviceArgs struct {
	// The name of the block device to mount on the instance.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice pulumi.BoolPtrInput `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g. `"ephemeral0"`).
	VirtualName pulumi.StringPtrInput `pulumi:"virtualName"`
}

func (InstanceEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEphemeralBlockDevice)(nil)).Elem()
}

func (i InstanceEphemeralBlockDeviceArgs) ToInstanceEphemeralBlockDeviceOutput() InstanceEphemeralBlockDeviceOutput {
	return i.ToInstanceEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i InstanceEphemeralBlockDeviceArgs) ToInstanceEphemeralBlockDeviceOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEphemeralBlockDeviceOutput)
}

// InstanceEphemeralBlockDeviceArrayInput is an input type that accepts InstanceEphemeralBlockDeviceArray and InstanceEphemeralBlockDeviceArrayOutput values.
// You can construct a concrete instance of `InstanceEphemeralBlockDeviceArrayInput` via:
//
//          InstanceEphemeralBlockDeviceArray{ InstanceEphemeralBlockDeviceArgs{...} }
type InstanceEphemeralBlockDeviceArrayInput interface {
	pulumi.Input

	ToInstanceEphemeralBlockDeviceArrayOutput() InstanceEphemeralBlockDeviceArrayOutput
	ToInstanceEphemeralBlockDeviceArrayOutputWithContext(context.Context) InstanceEphemeralBlockDeviceArrayOutput
}

type InstanceEphemeralBlockDeviceArray []InstanceEphemeralBlockDeviceInput

func (InstanceEphemeralBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEphemeralBlockDevice)(nil)).Elem()
}

func (i InstanceEphemeralBlockDeviceArray) ToInstanceEphemeralBlockDeviceArrayOutput() InstanceEphemeralBlockDeviceArrayOutput {
	return i.ToInstanceEphemeralBlockDeviceArrayOutputWithContext(context.Background())
}

func (i InstanceEphemeralBlockDeviceArray) ToInstanceEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEphemeralBlockDeviceArrayOutput)
}

type InstanceEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (InstanceEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEphemeralBlockDevice)(nil)).Elem()
}

func (o InstanceEphemeralBlockDeviceOutput) ToInstanceEphemeralBlockDeviceOutput() InstanceEphemeralBlockDeviceOutput {
	return o
}

func (o InstanceEphemeralBlockDeviceOutput) ToInstanceEphemeralBlockDeviceOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceOutput {
	return o
}

// The name of the block device to mount on the instance.
func (o InstanceEphemeralBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceEphemeralBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Suppresses the specified device included in the AMI's block device mapping.
func (o InstanceEphemeralBlockDeviceOutput) NoDevice() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceEphemeralBlockDevice) *bool { return v.NoDevice }).(pulumi.BoolPtrOutput)
}

// The [Instance Store Device
// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
// (e.g. `"ephemeral0"`).
func (o InstanceEphemeralBlockDeviceOutput) VirtualName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceEphemeralBlockDevice) *string { return v.VirtualName }).(pulumi.StringPtrOutput)
}

type InstanceEphemeralBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (InstanceEphemeralBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEphemeralBlockDevice)(nil)).Elem()
}

func (o InstanceEphemeralBlockDeviceArrayOutput) ToInstanceEphemeralBlockDeviceArrayOutput() InstanceEphemeralBlockDeviceArrayOutput {
	return o
}

func (o InstanceEphemeralBlockDeviceArrayOutput) ToInstanceEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceArrayOutput {
	return o
}

func (o InstanceEphemeralBlockDeviceArrayOutput) Index(i pulumi.IntInput) InstanceEphemeralBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceEphemeralBlockDevice {
		return vs[0].([]InstanceEphemeralBlockDevice)[vs[1].(int)]
	}).(InstanceEphemeralBlockDeviceOutput)
}

type InstanceMetadataOptions struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint *string `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit *int `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens *string `pulumi:"httpTokens"`
}

// InstanceMetadataOptionsInput is an input type that accepts InstanceMetadataOptionsArgs and InstanceMetadataOptionsOutput values.
// You can construct a concrete instance of `InstanceMetadataOptionsInput` via:
//
//          InstanceMetadataOptionsArgs{...}
type InstanceMetadataOptionsInput interface {
	pulumi.Input

	ToInstanceMetadataOptionsOutput() InstanceMetadataOptionsOutput
	ToInstanceMetadataOptionsOutputWithContext(context.Context) InstanceMetadataOptionsOutput
}

type InstanceMetadataOptionsArgs struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint pulumi.StringPtrInput `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit pulumi.IntPtrInput `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens pulumi.StringPtrInput `pulumi:"httpTokens"`
}

func (InstanceMetadataOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMetadataOptions)(nil)).Elem()
}

func (i InstanceMetadataOptionsArgs) ToInstanceMetadataOptionsOutput() InstanceMetadataOptionsOutput {
	return i.ToInstanceMetadataOptionsOutputWithContext(context.Background())
}

func (i InstanceMetadataOptionsArgs) ToInstanceMetadataOptionsOutputWithContext(ctx context.Context) InstanceMetadataOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMetadataOptionsOutput)
}

func (i InstanceMetadataOptionsArgs) ToInstanceMetadataOptionsPtrOutput() InstanceMetadataOptionsPtrOutput {
	return i.ToInstanceMetadataOptionsPtrOutputWithContext(context.Background())
}

func (i InstanceMetadataOptionsArgs) ToInstanceMetadataOptionsPtrOutputWithContext(ctx context.Context) InstanceMetadataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMetadataOptionsOutput).ToInstanceMetadataOptionsPtrOutputWithContext(ctx)
}

// InstanceMetadataOptionsPtrInput is an input type that accepts InstanceMetadataOptionsArgs, InstanceMetadataOptionsPtr and InstanceMetadataOptionsPtrOutput values.
// You can construct a concrete instance of `InstanceMetadataOptionsPtrInput` via:
//
//          InstanceMetadataOptionsArgs{...}
//
//  or:
//
//          nil
type InstanceMetadataOptionsPtrInput interface {
	pulumi.Input

	ToInstanceMetadataOptionsPtrOutput() InstanceMetadataOptionsPtrOutput
	ToInstanceMetadataOptionsPtrOutputWithContext(context.Context) InstanceMetadataOptionsPtrOutput
}

type instanceMetadataOptionsPtrType InstanceMetadataOptionsArgs

func InstanceMetadataOptionsPtr(v *InstanceMetadataOptionsArgs) InstanceMetadataOptionsPtrInput {
	return (*instanceMetadataOptionsPtrType)(v)
}

func (*instanceMetadataOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceMetadataOptions)(nil)).Elem()
}

func (i *instanceMetadataOptionsPtrType) ToInstanceMetadataOptionsPtrOutput() InstanceMetadataOptionsPtrOutput {
	return i.ToInstanceMetadataOptionsPtrOutputWithContext(context.Background())
}

func (i *instanceMetadataOptionsPtrType) ToInstanceMetadataOptionsPtrOutputWithContext(ctx context.Context) InstanceMetadataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMetadataOptionsPtrOutput)
}

type InstanceMetadataOptionsOutput struct{ *pulumi.OutputState }

func (InstanceMetadataOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMetadataOptions)(nil)).Elem()
}

func (o InstanceMetadataOptionsOutput) ToInstanceMetadataOptionsOutput() InstanceMetadataOptionsOutput {
	return o
}

func (o InstanceMetadataOptionsOutput) ToInstanceMetadataOptionsOutputWithContext(ctx context.Context) InstanceMetadataOptionsOutput {
	return o
}

func (o InstanceMetadataOptionsOutput) ToInstanceMetadataOptionsPtrOutput() InstanceMetadataOptionsPtrOutput {
	return o.ToInstanceMetadataOptionsPtrOutputWithContext(context.Background())
}

func (o InstanceMetadataOptionsOutput) ToInstanceMetadataOptionsPtrOutputWithContext(ctx context.Context) InstanceMetadataOptionsPtrOutput {
	return o.ApplyT(func(v InstanceMetadataOptions) *InstanceMetadataOptions {
		return &v
	}).(InstanceMetadataOptionsPtrOutput)
}

// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
func (o InstanceMetadataOptionsOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMetadataOptions) *string { return v.HttpEndpoint }).(pulumi.StringPtrOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
func (o InstanceMetadataOptionsOutput) HttpPutResponseHopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceMetadataOptions) *int { return v.HttpPutResponseHopLimit }).(pulumi.IntPtrOutput)
}

// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
func (o InstanceMetadataOptionsOutput) HttpTokens() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMetadataOptions) *string { return v.HttpTokens }).(pulumi.StringPtrOutput)
}

type InstanceMetadataOptionsPtrOutput struct{ *pulumi.OutputState }

func (InstanceMetadataOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceMetadataOptions)(nil)).Elem()
}

func (o InstanceMetadataOptionsPtrOutput) ToInstanceMetadataOptionsPtrOutput() InstanceMetadataOptionsPtrOutput {
	return o
}

func (o InstanceMetadataOptionsPtrOutput) ToInstanceMetadataOptionsPtrOutputWithContext(ctx context.Context) InstanceMetadataOptionsPtrOutput {
	return o
}

func (o InstanceMetadataOptionsPtrOutput) Elem() InstanceMetadataOptionsOutput {
	return o.ApplyT(func(v *InstanceMetadataOptions) InstanceMetadataOptions { return *v }).(InstanceMetadataOptionsOutput)
}

// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
func (o InstanceMetadataOptionsPtrOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceMetadataOptions) *string {
		if v == nil {
			return nil
		}
		return v.HttpEndpoint
	}).(pulumi.StringPtrOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
func (o InstanceMetadataOptionsPtrOutput) HttpPutResponseHopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceMetadataOptions) *int {
		if v == nil {
			return nil
		}
		return v.HttpPutResponseHopLimit
	}).(pulumi.IntPtrOutput)
}

// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
func (o InstanceMetadataOptionsPtrOutput) HttpTokens() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceMetadataOptions) *string {
		if v == nil {
			return nil
		}
		return v.HttpTokens
	}).(pulumi.StringPtrOutput)
}

type InstanceNetworkInterface struct {
	// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The integer index of the network interface attachment. Limited by instance type.
	DeviceIndex int `pulumi:"deviceIndex"`
	// The ID of the network interface to attach.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
}

// InstanceNetworkInterfaceInput is an input type that accepts InstanceNetworkInterfaceArgs and InstanceNetworkInterfaceOutput values.
// You can construct a concrete instance of `InstanceNetworkInterfaceInput` via:
//
//          InstanceNetworkInterfaceArgs{...}
type InstanceNetworkInterfaceInput interface {
	pulumi.Input

	ToInstanceNetworkInterfaceOutput() InstanceNetworkInterfaceOutput
	ToInstanceNetworkInterfaceOutputWithContext(context.Context) InstanceNetworkInterfaceOutput
}

type InstanceNetworkInterfaceArgs struct {
	// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The integer index of the network interface attachment. Limited by instance type.
	DeviceIndex pulumi.IntInput `pulumi:"deviceIndex"`
	// The ID of the network interface to attach.
	NetworkInterfaceId pulumi.StringInput `pulumi:"networkInterfaceId"`
}

func (InstanceNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNetworkInterface)(nil)).Elem()
}

func (i InstanceNetworkInterfaceArgs) ToInstanceNetworkInterfaceOutput() InstanceNetworkInterfaceOutput {
	return i.ToInstanceNetworkInterfaceOutputWithContext(context.Background())
}

func (i InstanceNetworkInterfaceArgs) ToInstanceNetworkInterfaceOutputWithContext(ctx context.Context) InstanceNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNetworkInterfaceOutput)
}

// InstanceNetworkInterfaceArrayInput is an input type that accepts InstanceNetworkInterfaceArray and InstanceNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `InstanceNetworkInterfaceArrayInput` via:
//
//          InstanceNetworkInterfaceArray{ InstanceNetworkInterfaceArgs{...} }
type InstanceNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToInstanceNetworkInterfaceArrayOutput() InstanceNetworkInterfaceArrayOutput
	ToInstanceNetworkInterfaceArrayOutputWithContext(context.Context) InstanceNetworkInterfaceArrayOutput
}

type InstanceNetworkInterfaceArray []InstanceNetworkInterfaceInput

func (InstanceNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceNetworkInterface)(nil)).Elem()
}

func (i InstanceNetworkInterfaceArray) ToInstanceNetworkInterfaceArrayOutput() InstanceNetworkInterfaceArrayOutput {
	return i.ToInstanceNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i InstanceNetworkInterfaceArray) ToInstanceNetworkInterfaceArrayOutputWithContext(ctx context.Context) InstanceNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNetworkInterfaceArrayOutput)
}

type InstanceNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (InstanceNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNetworkInterface)(nil)).Elem()
}

func (o InstanceNetworkInterfaceOutput) ToInstanceNetworkInterfaceOutput() InstanceNetworkInterfaceOutput {
	return o
}

func (o InstanceNetworkInterfaceOutput) ToInstanceNetworkInterfaceOutputWithContext(ctx context.Context) InstanceNetworkInterfaceOutput {
	return o
}

// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
func (o InstanceNetworkInterfaceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceNetworkInterface) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The integer index of the network interface attachment. Limited by instance type.
func (o InstanceNetworkInterfaceOutput) DeviceIndex() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceNetworkInterface) int { return v.DeviceIndex }).(pulumi.IntOutput)
}

// The ID of the network interface to attach.
func (o InstanceNetworkInterfaceOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceNetworkInterface) string { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

type InstanceNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (InstanceNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceNetworkInterface)(nil)).Elem()
}

func (o InstanceNetworkInterfaceArrayOutput) ToInstanceNetworkInterfaceArrayOutput() InstanceNetworkInterfaceArrayOutput {
	return o
}

func (o InstanceNetworkInterfaceArrayOutput) ToInstanceNetworkInterfaceArrayOutputWithContext(ctx context.Context) InstanceNetworkInterfaceArrayOutput {
	return o
}

func (o InstanceNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) InstanceNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceNetworkInterface {
		return vs[0].([]InstanceNetworkInterface)[vs[1].(int)]
	}).(InstanceNetworkInterfaceOutput)
}

type InstanceRootBlockDevice struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The name of the device to mount.
	DeviceName *string `pulumi:"deviceName"`
	// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
	Encrypted *bool `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This is only valid for `volumeType` of `"io1"`, and must be specified if
	// using that type
	Iops *int `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	VolumeId *string `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
	VolumeType *string `pulumi:"volumeType"`
}

// InstanceRootBlockDeviceInput is an input type that accepts InstanceRootBlockDeviceArgs and InstanceRootBlockDeviceOutput values.
// You can construct a concrete instance of `InstanceRootBlockDeviceInput` via:
//
//          InstanceRootBlockDeviceArgs{...}
type InstanceRootBlockDeviceInput interface {
	pulumi.Input

	ToInstanceRootBlockDeviceOutput() InstanceRootBlockDeviceOutput
	ToInstanceRootBlockDeviceOutputWithContext(context.Context) InstanceRootBlockDeviceOutput
}

type InstanceRootBlockDeviceArgs struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The name of the device to mount.
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This is only valid for `volumeType` of `"io1"`, and must be specified if
	// using that type
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	VolumeId pulumi.StringPtrInput `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (InstanceRootBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceRootBlockDevice)(nil)).Elem()
}

func (i InstanceRootBlockDeviceArgs) ToInstanceRootBlockDeviceOutput() InstanceRootBlockDeviceOutput {
	return i.ToInstanceRootBlockDeviceOutputWithContext(context.Background())
}

func (i InstanceRootBlockDeviceArgs) ToInstanceRootBlockDeviceOutputWithContext(ctx context.Context) InstanceRootBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRootBlockDeviceOutput)
}

func (i InstanceRootBlockDeviceArgs) ToInstanceRootBlockDevicePtrOutput() InstanceRootBlockDevicePtrOutput {
	return i.ToInstanceRootBlockDevicePtrOutputWithContext(context.Background())
}

func (i InstanceRootBlockDeviceArgs) ToInstanceRootBlockDevicePtrOutputWithContext(ctx context.Context) InstanceRootBlockDevicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRootBlockDeviceOutput).ToInstanceRootBlockDevicePtrOutputWithContext(ctx)
}

// InstanceRootBlockDevicePtrInput is an input type that accepts InstanceRootBlockDeviceArgs, InstanceRootBlockDevicePtr and InstanceRootBlockDevicePtrOutput values.
// You can construct a concrete instance of `InstanceRootBlockDevicePtrInput` via:
//
//          InstanceRootBlockDeviceArgs{...}
//
//  or:
//
//          nil
type InstanceRootBlockDevicePtrInput interface {
	pulumi.Input

	ToInstanceRootBlockDevicePtrOutput() InstanceRootBlockDevicePtrOutput
	ToInstanceRootBlockDevicePtrOutputWithContext(context.Context) InstanceRootBlockDevicePtrOutput
}

type instanceRootBlockDevicePtrType InstanceRootBlockDeviceArgs

func InstanceRootBlockDevicePtr(v *InstanceRootBlockDeviceArgs) InstanceRootBlockDevicePtrInput {
	return (*instanceRootBlockDevicePtrType)(v)
}

func (*instanceRootBlockDevicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceRootBlockDevice)(nil)).Elem()
}

func (i *instanceRootBlockDevicePtrType) ToInstanceRootBlockDevicePtrOutput() InstanceRootBlockDevicePtrOutput {
	return i.ToInstanceRootBlockDevicePtrOutputWithContext(context.Background())
}

func (i *instanceRootBlockDevicePtrType) ToInstanceRootBlockDevicePtrOutputWithContext(ctx context.Context) InstanceRootBlockDevicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRootBlockDevicePtrOutput)
}

type InstanceRootBlockDeviceOutput struct{ *pulumi.OutputState }

func (InstanceRootBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceRootBlockDevice)(nil)).Elem()
}

func (o InstanceRootBlockDeviceOutput) ToInstanceRootBlockDeviceOutput() InstanceRootBlockDeviceOutput {
	return o
}

func (o InstanceRootBlockDeviceOutput) ToInstanceRootBlockDeviceOutputWithContext(ctx context.Context) InstanceRootBlockDeviceOutput {
	return o
}

func (o InstanceRootBlockDeviceOutput) ToInstanceRootBlockDevicePtrOutput() InstanceRootBlockDevicePtrOutput {
	return o.ToInstanceRootBlockDevicePtrOutputWithContext(context.Background())
}

func (o InstanceRootBlockDeviceOutput) ToInstanceRootBlockDevicePtrOutputWithContext(ctx context.Context) InstanceRootBlockDevicePtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *InstanceRootBlockDevice {
		return &v
	}).(InstanceRootBlockDevicePtrOutput)
}

// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o InstanceRootBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The name of the device to mount.
func (o InstanceRootBlockDeviceOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
func (o InstanceRootBlockDeviceOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This is only valid for `volumeType` of `"io1"`, and must be specified if
// using that type
func (o InstanceRootBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o InstanceRootBlockDeviceOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o InstanceRootBlockDeviceOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gibibytes (GiB).
func (o InstanceRootBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
func (o InstanceRootBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type InstanceRootBlockDevicePtrOutput struct{ *pulumi.OutputState }

func (InstanceRootBlockDevicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceRootBlockDevice)(nil)).Elem()
}

func (o InstanceRootBlockDevicePtrOutput) ToInstanceRootBlockDevicePtrOutput() InstanceRootBlockDevicePtrOutput {
	return o
}

func (o InstanceRootBlockDevicePtrOutput) ToInstanceRootBlockDevicePtrOutputWithContext(ctx context.Context) InstanceRootBlockDevicePtrOutput {
	return o
}

func (o InstanceRootBlockDevicePtrOutput) Elem() InstanceRootBlockDeviceOutput {
	return o.ApplyT(func(v *InstanceRootBlockDevice) InstanceRootBlockDevice { return *v }).(InstanceRootBlockDeviceOutput)
}

// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o InstanceRootBlockDevicePtrOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceRootBlockDevice) *bool {
		if v == nil {
			return nil
		}
		return v.DeleteOnTermination
	}).(pulumi.BoolPtrOutput)
}

// The name of the device to mount.
func (o InstanceRootBlockDevicePtrOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceRootBlockDevice) *string {
		if v == nil {
			return nil
		}
		return v.DeviceName
	}).(pulumi.StringPtrOutput)
}

// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
func (o InstanceRootBlockDevicePtrOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceRootBlockDevice) *bool {
		if v == nil {
			return nil
		}
		return v.Encrypted
	}).(pulumi.BoolPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This is only valid for `volumeType` of `"io1"`, and must be specified if
// using that type
func (o InstanceRootBlockDevicePtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceRootBlockDevice) *int {
		if v == nil {
			return nil
		}
		return v.Iops
	}).(pulumi.IntPtrOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o InstanceRootBlockDevicePtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceRootBlockDevice) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

func (o InstanceRootBlockDevicePtrOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceRootBlockDevice) *string {
		if v == nil {
			return nil
		}
		return v.VolumeId
	}).(pulumi.StringPtrOutput)
}

// The size of the volume in gibibytes (GiB).
func (o InstanceRootBlockDevicePtrOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceRootBlockDevice) *int {
		if v == nil {
			return nil
		}
		return v.VolumeSize
	}).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
func (o InstanceRootBlockDevicePtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceRootBlockDevice) *string {
		if v == nil {
			return nil
		}
		return v.VolumeType
	}).(pulumi.StringPtrOutput)
}

type LaunchConfigurationEbsBlockDevice struct {
	DeleteOnTermination *bool   `pulumi:"deleteOnTermination"`
	DeviceName          string  `pulumi:"deviceName"`
	Encrypted           *bool   `pulumi:"encrypted"`
	Iops                *int    `pulumi:"iops"`
	NoDevice            *bool   `pulumi:"noDevice"`
	SnapshotId          *string `pulumi:"snapshotId"`
	VolumeSize          *int    `pulumi:"volumeSize"`
	VolumeType          *string `pulumi:"volumeType"`
}

// LaunchConfigurationEbsBlockDeviceInput is an input type that accepts LaunchConfigurationEbsBlockDeviceArgs and LaunchConfigurationEbsBlockDeviceOutput values.
// You can construct a concrete instance of `LaunchConfigurationEbsBlockDeviceInput` via:
//
//          LaunchConfigurationEbsBlockDeviceArgs{...}
type LaunchConfigurationEbsBlockDeviceInput interface {
	pulumi.Input

	ToLaunchConfigurationEbsBlockDeviceOutput() LaunchConfigurationEbsBlockDeviceOutput
	ToLaunchConfigurationEbsBlockDeviceOutputWithContext(context.Context) LaunchConfigurationEbsBlockDeviceOutput
}

type LaunchConfigurationEbsBlockDeviceArgs struct {
	DeleteOnTermination pulumi.BoolPtrInput   `pulumi:"deleteOnTermination"`
	DeviceName          pulumi.StringInput    `pulumi:"deviceName"`
	Encrypted           pulumi.BoolPtrInput   `pulumi:"encrypted"`
	Iops                pulumi.IntPtrInput    `pulumi:"iops"`
	NoDevice            pulumi.BoolPtrInput   `pulumi:"noDevice"`
	SnapshotId          pulumi.StringPtrInput `pulumi:"snapshotId"`
	VolumeSize          pulumi.IntPtrInput    `pulumi:"volumeSize"`
	VolumeType          pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (LaunchConfigurationEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationEbsBlockDevice)(nil)).Elem()
}

func (i LaunchConfigurationEbsBlockDeviceArgs) ToLaunchConfigurationEbsBlockDeviceOutput() LaunchConfigurationEbsBlockDeviceOutput {
	return i.ToLaunchConfigurationEbsBlockDeviceOutputWithContext(context.Background())
}

func (i LaunchConfigurationEbsBlockDeviceArgs) ToLaunchConfigurationEbsBlockDeviceOutputWithContext(ctx context.Context) LaunchConfigurationEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationEbsBlockDeviceOutput)
}

// LaunchConfigurationEbsBlockDeviceArrayInput is an input type that accepts LaunchConfigurationEbsBlockDeviceArray and LaunchConfigurationEbsBlockDeviceArrayOutput values.
// You can construct a concrete instance of `LaunchConfigurationEbsBlockDeviceArrayInput` via:
//
//          LaunchConfigurationEbsBlockDeviceArray{ LaunchConfigurationEbsBlockDeviceArgs{...} }
type LaunchConfigurationEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToLaunchConfigurationEbsBlockDeviceArrayOutput() LaunchConfigurationEbsBlockDeviceArrayOutput
	ToLaunchConfigurationEbsBlockDeviceArrayOutputWithContext(context.Context) LaunchConfigurationEbsBlockDeviceArrayOutput
}

type LaunchConfigurationEbsBlockDeviceArray []LaunchConfigurationEbsBlockDeviceInput

func (LaunchConfigurationEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchConfigurationEbsBlockDevice)(nil)).Elem()
}

func (i LaunchConfigurationEbsBlockDeviceArray) ToLaunchConfigurationEbsBlockDeviceArrayOutput() LaunchConfigurationEbsBlockDeviceArrayOutput {
	return i.ToLaunchConfigurationEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i LaunchConfigurationEbsBlockDeviceArray) ToLaunchConfigurationEbsBlockDeviceArrayOutputWithContext(ctx context.Context) LaunchConfigurationEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationEbsBlockDeviceArrayOutput)
}

type LaunchConfigurationEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationEbsBlockDevice)(nil)).Elem()
}

func (o LaunchConfigurationEbsBlockDeviceOutput) ToLaunchConfigurationEbsBlockDeviceOutput() LaunchConfigurationEbsBlockDeviceOutput {
	return o
}

func (o LaunchConfigurationEbsBlockDeviceOutput) ToLaunchConfigurationEbsBlockDeviceOutputWithContext(ctx context.Context) LaunchConfigurationEbsBlockDeviceOutput {
	return o
}

func (o LaunchConfigurationEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o LaunchConfigurationEbsBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o LaunchConfigurationEbsBlockDeviceOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o LaunchConfigurationEbsBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o LaunchConfigurationEbsBlockDeviceOutput) NoDevice() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDevice) *bool { return v.NoDevice }).(pulumi.BoolPtrOutput)
}

func (o LaunchConfigurationEbsBlockDeviceOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDevice) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

func (o LaunchConfigurationEbsBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

func (o LaunchConfigurationEbsBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type LaunchConfigurationEbsBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchConfigurationEbsBlockDevice)(nil)).Elem()
}

func (o LaunchConfigurationEbsBlockDeviceArrayOutput) ToLaunchConfigurationEbsBlockDeviceArrayOutput() LaunchConfigurationEbsBlockDeviceArrayOutput {
	return o
}

func (o LaunchConfigurationEbsBlockDeviceArrayOutput) ToLaunchConfigurationEbsBlockDeviceArrayOutputWithContext(ctx context.Context) LaunchConfigurationEbsBlockDeviceArrayOutput {
	return o
}

func (o LaunchConfigurationEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) LaunchConfigurationEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchConfigurationEbsBlockDevice {
		return vs[0].([]LaunchConfigurationEbsBlockDevice)[vs[1].(int)]
	}).(LaunchConfigurationEbsBlockDeviceOutput)
}

type LaunchConfigurationEphemeralBlockDevice struct {
	DeviceName  string `pulumi:"deviceName"`
	VirtualName string `pulumi:"virtualName"`
}

// LaunchConfigurationEphemeralBlockDeviceInput is an input type that accepts LaunchConfigurationEphemeralBlockDeviceArgs and LaunchConfigurationEphemeralBlockDeviceOutput values.
// You can construct a concrete instance of `LaunchConfigurationEphemeralBlockDeviceInput` via:
//
//          LaunchConfigurationEphemeralBlockDeviceArgs{...}
type LaunchConfigurationEphemeralBlockDeviceInput interface {
	pulumi.Input

	ToLaunchConfigurationEphemeralBlockDeviceOutput() LaunchConfigurationEphemeralBlockDeviceOutput
	ToLaunchConfigurationEphemeralBlockDeviceOutputWithContext(context.Context) LaunchConfigurationEphemeralBlockDeviceOutput
}

type LaunchConfigurationEphemeralBlockDeviceArgs struct {
	DeviceName  pulumi.StringInput `pulumi:"deviceName"`
	VirtualName pulumi.StringInput `pulumi:"virtualName"`
}

func (LaunchConfigurationEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationEphemeralBlockDevice)(nil)).Elem()
}

func (i LaunchConfigurationEphemeralBlockDeviceArgs) ToLaunchConfigurationEphemeralBlockDeviceOutput() LaunchConfigurationEphemeralBlockDeviceOutput {
	return i.ToLaunchConfigurationEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i LaunchConfigurationEphemeralBlockDeviceArgs) ToLaunchConfigurationEphemeralBlockDeviceOutputWithContext(ctx context.Context) LaunchConfigurationEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationEphemeralBlockDeviceOutput)
}

// LaunchConfigurationEphemeralBlockDeviceArrayInput is an input type that accepts LaunchConfigurationEphemeralBlockDeviceArray and LaunchConfigurationEphemeralBlockDeviceArrayOutput values.
// You can construct a concrete instance of `LaunchConfigurationEphemeralBlockDeviceArrayInput` via:
//
//          LaunchConfigurationEphemeralBlockDeviceArray{ LaunchConfigurationEphemeralBlockDeviceArgs{...} }
type LaunchConfigurationEphemeralBlockDeviceArrayInput interface {
	pulumi.Input

	ToLaunchConfigurationEphemeralBlockDeviceArrayOutput() LaunchConfigurationEphemeralBlockDeviceArrayOutput
	ToLaunchConfigurationEphemeralBlockDeviceArrayOutputWithContext(context.Context) LaunchConfigurationEphemeralBlockDeviceArrayOutput
}

type LaunchConfigurationEphemeralBlockDeviceArray []LaunchConfigurationEphemeralBlockDeviceInput

func (LaunchConfigurationEphemeralBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchConfigurationEphemeralBlockDevice)(nil)).Elem()
}

func (i LaunchConfigurationEphemeralBlockDeviceArray) ToLaunchConfigurationEphemeralBlockDeviceArrayOutput() LaunchConfigurationEphemeralBlockDeviceArrayOutput {
	return i.ToLaunchConfigurationEphemeralBlockDeviceArrayOutputWithContext(context.Background())
}

func (i LaunchConfigurationEphemeralBlockDeviceArray) ToLaunchConfigurationEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) LaunchConfigurationEphemeralBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationEphemeralBlockDeviceArrayOutput)
}

type LaunchConfigurationEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationEphemeralBlockDevice)(nil)).Elem()
}

func (o LaunchConfigurationEphemeralBlockDeviceOutput) ToLaunchConfigurationEphemeralBlockDeviceOutput() LaunchConfigurationEphemeralBlockDeviceOutput {
	return o
}

func (o LaunchConfigurationEphemeralBlockDeviceOutput) ToLaunchConfigurationEphemeralBlockDeviceOutputWithContext(ctx context.Context) LaunchConfigurationEphemeralBlockDeviceOutput {
	return o
}

func (o LaunchConfigurationEphemeralBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchConfigurationEphemeralBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o LaunchConfigurationEphemeralBlockDeviceOutput) VirtualName() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchConfigurationEphemeralBlockDevice) string { return v.VirtualName }).(pulumi.StringOutput)
}

type LaunchConfigurationEphemeralBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationEphemeralBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchConfigurationEphemeralBlockDevice)(nil)).Elem()
}

func (o LaunchConfigurationEphemeralBlockDeviceArrayOutput) ToLaunchConfigurationEphemeralBlockDeviceArrayOutput() LaunchConfigurationEphemeralBlockDeviceArrayOutput {
	return o
}

func (o LaunchConfigurationEphemeralBlockDeviceArrayOutput) ToLaunchConfigurationEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) LaunchConfigurationEphemeralBlockDeviceArrayOutput {
	return o
}

func (o LaunchConfigurationEphemeralBlockDeviceArrayOutput) Index(i pulumi.IntInput) LaunchConfigurationEphemeralBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchConfigurationEphemeralBlockDevice {
		return vs[0].([]LaunchConfigurationEphemeralBlockDevice)[vs[1].(int)]
	}).(LaunchConfigurationEphemeralBlockDeviceOutput)
}

type LaunchConfigurationRootBlockDevice struct {
	DeleteOnTermination *bool   `pulumi:"deleteOnTermination"`
	Encrypted           *bool   `pulumi:"encrypted"`
	Iops                *int    `pulumi:"iops"`
	VolumeSize          *int    `pulumi:"volumeSize"`
	VolumeType          *string `pulumi:"volumeType"`
}

// LaunchConfigurationRootBlockDeviceInput is an input type that accepts LaunchConfigurationRootBlockDeviceArgs and LaunchConfigurationRootBlockDeviceOutput values.
// You can construct a concrete instance of `LaunchConfigurationRootBlockDeviceInput` via:
//
//          LaunchConfigurationRootBlockDeviceArgs{...}
type LaunchConfigurationRootBlockDeviceInput interface {
	pulumi.Input

	ToLaunchConfigurationRootBlockDeviceOutput() LaunchConfigurationRootBlockDeviceOutput
	ToLaunchConfigurationRootBlockDeviceOutputWithContext(context.Context) LaunchConfigurationRootBlockDeviceOutput
}

type LaunchConfigurationRootBlockDeviceArgs struct {
	DeleteOnTermination pulumi.BoolPtrInput   `pulumi:"deleteOnTermination"`
	Encrypted           pulumi.BoolPtrInput   `pulumi:"encrypted"`
	Iops                pulumi.IntPtrInput    `pulumi:"iops"`
	VolumeSize          pulumi.IntPtrInput    `pulumi:"volumeSize"`
	VolumeType          pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (LaunchConfigurationRootBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationRootBlockDevice)(nil)).Elem()
}

func (i LaunchConfigurationRootBlockDeviceArgs) ToLaunchConfigurationRootBlockDeviceOutput() LaunchConfigurationRootBlockDeviceOutput {
	return i.ToLaunchConfigurationRootBlockDeviceOutputWithContext(context.Background())
}

func (i LaunchConfigurationRootBlockDeviceArgs) ToLaunchConfigurationRootBlockDeviceOutputWithContext(ctx context.Context) LaunchConfigurationRootBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationRootBlockDeviceOutput)
}

func (i LaunchConfigurationRootBlockDeviceArgs) ToLaunchConfigurationRootBlockDevicePtrOutput() LaunchConfigurationRootBlockDevicePtrOutput {
	return i.ToLaunchConfigurationRootBlockDevicePtrOutputWithContext(context.Background())
}

func (i LaunchConfigurationRootBlockDeviceArgs) ToLaunchConfigurationRootBlockDevicePtrOutputWithContext(ctx context.Context) LaunchConfigurationRootBlockDevicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationRootBlockDeviceOutput).ToLaunchConfigurationRootBlockDevicePtrOutputWithContext(ctx)
}

// LaunchConfigurationRootBlockDevicePtrInput is an input type that accepts LaunchConfigurationRootBlockDeviceArgs, LaunchConfigurationRootBlockDevicePtr and LaunchConfigurationRootBlockDevicePtrOutput values.
// You can construct a concrete instance of `LaunchConfigurationRootBlockDevicePtrInput` via:
//
//          LaunchConfigurationRootBlockDeviceArgs{...}
//
//  or:
//
//          nil
type LaunchConfigurationRootBlockDevicePtrInput interface {
	pulumi.Input

	ToLaunchConfigurationRootBlockDevicePtrOutput() LaunchConfigurationRootBlockDevicePtrOutput
	ToLaunchConfigurationRootBlockDevicePtrOutputWithContext(context.Context) LaunchConfigurationRootBlockDevicePtrOutput
}

type launchConfigurationRootBlockDevicePtrType LaunchConfigurationRootBlockDeviceArgs

func LaunchConfigurationRootBlockDevicePtr(v *LaunchConfigurationRootBlockDeviceArgs) LaunchConfigurationRootBlockDevicePtrInput {
	return (*launchConfigurationRootBlockDevicePtrType)(v)
}

func (*launchConfigurationRootBlockDevicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchConfigurationRootBlockDevice)(nil)).Elem()
}

func (i *launchConfigurationRootBlockDevicePtrType) ToLaunchConfigurationRootBlockDevicePtrOutput() LaunchConfigurationRootBlockDevicePtrOutput {
	return i.ToLaunchConfigurationRootBlockDevicePtrOutputWithContext(context.Background())
}

func (i *launchConfigurationRootBlockDevicePtrType) ToLaunchConfigurationRootBlockDevicePtrOutputWithContext(ctx context.Context) LaunchConfigurationRootBlockDevicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationRootBlockDevicePtrOutput)
}

type LaunchConfigurationRootBlockDeviceOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationRootBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationRootBlockDevice)(nil)).Elem()
}

func (o LaunchConfigurationRootBlockDeviceOutput) ToLaunchConfigurationRootBlockDeviceOutput() LaunchConfigurationRootBlockDeviceOutput {
	return o
}

func (o LaunchConfigurationRootBlockDeviceOutput) ToLaunchConfigurationRootBlockDeviceOutputWithContext(ctx context.Context) LaunchConfigurationRootBlockDeviceOutput {
	return o
}

func (o LaunchConfigurationRootBlockDeviceOutput) ToLaunchConfigurationRootBlockDevicePtrOutput() LaunchConfigurationRootBlockDevicePtrOutput {
	return o.ToLaunchConfigurationRootBlockDevicePtrOutputWithContext(context.Background())
}

func (o LaunchConfigurationRootBlockDeviceOutput) ToLaunchConfigurationRootBlockDevicePtrOutputWithContext(ctx context.Context) LaunchConfigurationRootBlockDevicePtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDevice) *LaunchConfigurationRootBlockDevice {
		return &v
	}).(LaunchConfigurationRootBlockDevicePtrOutput)
}
func (o LaunchConfigurationRootBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o LaunchConfigurationRootBlockDeviceOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o LaunchConfigurationRootBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o LaunchConfigurationRootBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

func (o LaunchConfigurationRootBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type LaunchConfigurationRootBlockDevicePtrOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationRootBlockDevicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchConfigurationRootBlockDevice)(nil)).Elem()
}

func (o LaunchConfigurationRootBlockDevicePtrOutput) ToLaunchConfigurationRootBlockDevicePtrOutput() LaunchConfigurationRootBlockDevicePtrOutput {
	return o
}

func (o LaunchConfigurationRootBlockDevicePtrOutput) ToLaunchConfigurationRootBlockDevicePtrOutputWithContext(ctx context.Context) LaunchConfigurationRootBlockDevicePtrOutput {
	return o
}

func (o LaunchConfigurationRootBlockDevicePtrOutput) Elem() LaunchConfigurationRootBlockDeviceOutput {
	return o.ApplyT(func(v *LaunchConfigurationRootBlockDevice) LaunchConfigurationRootBlockDevice { return *v }).(LaunchConfigurationRootBlockDeviceOutput)
}

func (o LaunchConfigurationRootBlockDevicePtrOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LaunchConfigurationRootBlockDevice) *bool {
		if v == nil {
			return nil
		}
		return v.DeleteOnTermination
	}).(pulumi.BoolPtrOutput)
}

func (o LaunchConfigurationRootBlockDevicePtrOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LaunchConfigurationRootBlockDevice) *bool {
		if v == nil {
			return nil
		}
		return v.Encrypted
	}).(pulumi.BoolPtrOutput)
}

func (o LaunchConfigurationRootBlockDevicePtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LaunchConfigurationRootBlockDevice) *int {
		if v == nil {
			return nil
		}
		return v.Iops
	}).(pulumi.IntPtrOutput)
}

func (o LaunchConfigurationRootBlockDevicePtrOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LaunchConfigurationRootBlockDevice) *int {
		if v == nil {
			return nil
		}
		return v.VolumeSize
	}).(pulumi.IntPtrOutput)
}

func (o LaunchConfigurationRootBlockDevicePtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchConfigurationRootBlockDevice) *string {
		if v == nil {
			return nil
		}
		return v.VolumeType
	}).(pulumi.StringPtrOutput)
}

type LaunchTemplateBlockDeviceMapping struct {
	// The name of the device to mount.
	DeviceName *string `pulumi:"deviceName"`
	// Configure EBS volume properties.
	Ebs *LaunchTemplateBlockDeviceMappingEbs `pulumi:"ebs"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice *string `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g. `"ephemeral0"`).
	VirtualName *string `pulumi:"virtualName"`
}

// LaunchTemplateBlockDeviceMappingInput is an input type that accepts LaunchTemplateBlockDeviceMappingArgs and LaunchTemplateBlockDeviceMappingOutput values.
// You can construct a concrete instance of `LaunchTemplateBlockDeviceMappingInput` via:
//
//          LaunchTemplateBlockDeviceMappingArgs{...}
type LaunchTemplateBlockDeviceMappingInput interface {
	pulumi.Input

	ToLaunchTemplateBlockDeviceMappingOutput() LaunchTemplateBlockDeviceMappingOutput
	ToLaunchTemplateBlockDeviceMappingOutputWithContext(context.Context) LaunchTemplateBlockDeviceMappingOutput
}

type LaunchTemplateBlockDeviceMappingArgs struct {
	// The name of the device to mount.
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	// Configure EBS volume properties.
	Ebs LaunchTemplateBlockDeviceMappingEbsPtrInput `pulumi:"ebs"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice pulumi.StringPtrInput `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g. `"ephemeral0"`).
	VirtualName pulumi.StringPtrInput `pulumi:"virtualName"`
}

func (LaunchTemplateBlockDeviceMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateBlockDeviceMapping)(nil)).Elem()
}

func (i LaunchTemplateBlockDeviceMappingArgs) ToLaunchTemplateBlockDeviceMappingOutput() LaunchTemplateBlockDeviceMappingOutput {
	return i.ToLaunchTemplateBlockDeviceMappingOutputWithContext(context.Background())
}

func (i LaunchTemplateBlockDeviceMappingArgs) ToLaunchTemplateBlockDeviceMappingOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateBlockDeviceMappingOutput)
}

// LaunchTemplateBlockDeviceMappingArrayInput is an input type that accepts LaunchTemplateBlockDeviceMappingArray and LaunchTemplateBlockDeviceMappingArrayOutput values.
// You can construct a concrete instance of `LaunchTemplateBlockDeviceMappingArrayInput` via:
//
//          LaunchTemplateBlockDeviceMappingArray{ LaunchTemplateBlockDeviceMappingArgs{...} }
type LaunchTemplateBlockDeviceMappingArrayInput interface {
	pulumi.Input

	ToLaunchTemplateBlockDeviceMappingArrayOutput() LaunchTemplateBlockDeviceMappingArrayOutput
	ToLaunchTemplateBlockDeviceMappingArrayOutputWithContext(context.Context) LaunchTemplateBlockDeviceMappingArrayOutput
}

type LaunchTemplateBlockDeviceMappingArray []LaunchTemplateBlockDeviceMappingInput

func (LaunchTemplateBlockDeviceMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateBlockDeviceMapping)(nil)).Elem()
}

func (i LaunchTemplateBlockDeviceMappingArray) ToLaunchTemplateBlockDeviceMappingArrayOutput() LaunchTemplateBlockDeviceMappingArrayOutput {
	return i.ToLaunchTemplateBlockDeviceMappingArrayOutputWithContext(context.Background())
}

func (i LaunchTemplateBlockDeviceMappingArray) ToLaunchTemplateBlockDeviceMappingArrayOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateBlockDeviceMappingArrayOutput)
}

type LaunchTemplateBlockDeviceMappingOutput struct{ *pulumi.OutputState }

func (LaunchTemplateBlockDeviceMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateBlockDeviceMapping)(nil)).Elem()
}

func (o LaunchTemplateBlockDeviceMappingOutput) ToLaunchTemplateBlockDeviceMappingOutput() LaunchTemplateBlockDeviceMappingOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingOutput) ToLaunchTemplateBlockDeviceMappingOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingOutput {
	return o
}

// The name of the device to mount.
func (o LaunchTemplateBlockDeviceMappingOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMapping) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

// Configure EBS volume properties.
func (o LaunchTemplateBlockDeviceMappingOutput) Ebs() LaunchTemplateBlockDeviceMappingEbsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMapping) *LaunchTemplateBlockDeviceMappingEbs { return v.Ebs }).(LaunchTemplateBlockDeviceMappingEbsPtrOutput)
}

// Suppresses the specified device included in the AMI's block device mapping.
func (o LaunchTemplateBlockDeviceMappingOutput) NoDevice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMapping) *string { return v.NoDevice }).(pulumi.StringPtrOutput)
}

// The [Instance Store Device
// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
// (e.g. `"ephemeral0"`).
func (o LaunchTemplateBlockDeviceMappingOutput) VirtualName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMapping) *string { return v.VirtualName }).(pulumi.StringPtrOutput)
}

type LaunchTemplateBlockDeviceMappingArrayOutput struct{ *pulumi.OutputState }

func (LaunchTemplateBlockDeviceMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateBlockDeviceMapping)(nil)).Elem()
}

func (o LaunchTemplateBlockDeviceMappingArrayOutput) ToLaunchTemplateBlockDeviceMappingArrayOutput() LaunchTemplateBlockDeviceMappingArrayOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingArrayOutput) ToLaunchTemplateBlockDeviceMappingArrayOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingArrayOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingArrayOutput) Index(i pulumi.IntInput) LaunchTemplateBlockDeviceMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchTemplateBlockDeviceMapping {
		return vs[0].([]LaunchTemplateBlockDeviceMapping)[vs[1].(int)]
	}).(LaunchTemplateBlockDeviceMappingOutput)
}

type LaunchTemplateBlockDeviceMappingEbs struct {
	// Whether the volume should be destroyed on instance termination. Defaults to `false` if not set. See [Preserving Amazon EBS Volumes on Instance Termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) for more information.
	DeleteOnTermination *string `pulumi:"deleteOnTermination"`
	// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`.
	Encrypted *string `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops *int `pulumi:"iops"`
	// The ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
	// `encrypted` must be set to `true` when this is set.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId *string `pulumi:"snapshotId"`
	// The size of the volume in gigabytes.
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`, or `"io1"`. (Default: `"standard"`).
	VolumeType *string `pulumi:"volumeType"`
}

// LaunchTemplateBlockDeviceMappingEbsInput is an input type that accepts LaunchTemplateBlockDeviceMappingEbsArgs and LaunchTemplateBlockDeviceMappingEbsOutput values.
// You can construct a concrete instance of `LaunchTemplateBlockDeviceMappingEbsInput` via:
//
//          LaunchTemplateBlockDeviceMappingEbsArgs{...}
type LaunchTemplateBlockDeviceMappingEbsInput interface {
	pulumi.Input

	ToLaunchTemplateBlockDeviceMappingEbsOutput() LaunchTemplateBlockDeviceMappingEbsOutput
	ToLaunchTemplateBlockDeviceMappingEbsOutputWithContext(context.Context) LaunchTemplateBlockDeviceMappingEbsOutput
}

type LaunchTemplateBlockDeviceMappingEbsArgs struct {
	// Whether the volume should be destroyed on instance termination. Defaults to `false` if not set. See [Preserving Amazon EBS Volumes on Instance Termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) for more information.
	DeleteOnTermination pulumi.StringPtrInput `pulumi:"deleteOnTermination"`
	// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`.
	Encrypted pulumi.StringPtrInput `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
	// `encrypted` must be set to `true` when this is set.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// The size of the volume in gigabytes.
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`, or `"io1"`. (Default: `"standard"`).
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (LaunchTemplateBlockDeviceMappingEbsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateBlockDeviceMappingEbs)(nil)).Elem()
}

func (i LaunchTemplateBlockDeviceMappingEbsArgs) ToLaunchTemplateBlockDeviceMappingEbsOutput() LaunchTemplateBlockDeviceMappingEbsOutput {
	return i.ToLaunchTemplateBlockDeviceMappingEbsOutputWithContext(context.Background())
}

func (i LaunchTemplateBlockDeviceMappingEbsArgs) ToLaunchTemplateBlockDeviceMappingEbsOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingEbsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateBlockDeviceMappingEbsOutput)
}

func (i LaunchTemplateBlockDeviceMappingEbsArgs) ToLaunchTemplateBlockDeviceMappingEbsPtrOutput() LaunchTemplateBlockDeviceMappingEbsPtrOutput {
	return i.ToLaunchTemplateBlockDeviceMappingEbsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateBlockDeviceMappingEbsArgs) ToLaunchTemplateBlockDeviceMappingEbsPtrOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingEbsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateBlockDeviceMappingEbsOutput).ToLaunchTemplateBlockDeviceMappingEbsPtrOutputWithContext(ctx)
}

// LaunchTemplateBlockDeviceMappingEbsPtrInput is an input type that accepts LaunchTemplateBlockDeviceMappingEbsArgs, LaunchTemplateBlockDeviceMappingEbsPtr and LaunchTemplateBlockDeviceMappingEbsPtrOutput values.
// You can construct a concrete instance of `LaunchTemplateBlockDeviceMappingEbsPtrInput` via:
//
//          LaunchTemplateBlockDeviceMappingEbsArgs{...}
//
//  or:
//
//          nil
type LaunchTemplateBlockDeviceMappingEbsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateBlockDeviceMappingEbsPtrOutput() LaunchTemplateBlockDeviceMappingEbsPtrOutput
	ToLaunchTemplateBlockDeviceMappingEbsPtrOutputWithContext(context.Context) LaunchTemplateBlockDeviceMappingEbsPtrOutput
}

type launchTemplateBlockDeviceMappingEbsPtrType LaunchTemplateBlockDeviceMappingEbsArgs

func LaunchTemplateBlockDeviceMappingEbsPtr(v *LaunchTemplateBlockDeviceMappingEbsArgs) LaunchTemplateBlockDeviceMappingEbsPtrInput {
	return (*launchTemplateBlockDeviceMappingEbsPtrType)(v)
}

func (*launchTemplateBlockDeviceMappingEbsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateBlockDeviceMappingEbs)(nil)).Elem()
}

func (i *launchTemplateBlockDeviceMappingEbsPtrType) ToLaunchTemplateBlockDeviceMappingEbsPtrOutput() LaunchTemplateBlockDeviceMappingEbsPtrOutput {
	return i.ToLaunchTemplateBlockDeviceMappingEbsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateBlockDeviceMappingEbsPtrType) ToLaunchTemplateBlockDeviceMappingEbsPtrOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingEbsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateBlockDeviceMappingEbsPtrOutput)
}

type LaunchTemplateBlockDeviceMappingEbsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateBlockDeviceMappingEbsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateBlockDeviceMappingEbs)(nil)).Elem()
}

func (o LaunchTemplateBlockDeviceMappingEbsOutput) ToLaunchTemplateBlockDeviceMappingEbsOutput() LaunchTemplateBlockDeviceMappingEbsOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingEbsOutput) ToLaunchTemplateBlockDeviceMappingEbsOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingEbsOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingEbsOutput) ToLaunchTemplateBlockDeviceMappingEbsPtrOutput() LaunchTemplateBlockDeviceMappingEbsPtrOutput {
	return o.ToLaunchTemplateBlockDeviceMappingEbsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateBlockDeviceMappingEbsOutput) ToLaunchTemplateBlockDeviceMappingEbsPtrOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingEbsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *LaunchTemplateBlockDeviceMappingEbs {
		return &v
	}).(LaunchTemplateBlockDeviceMappingEbsPtrOutput)
}

// Whether the volume should be destroyed on instance termination. Defaults to `false` if not set. See [Preserving Amazon EBS Volumes on Instance Termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) for more information.
func (o LaunchTemplateBlockDeviceMappingEbsOutput) DeleteOnTermination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *string { return v.DeleteOnTermination }).(pulumi.StringPtrOutput)
}

// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
// on the volume (Default: `false`). Cannot be used with `snapshotId`.
func (o LaunchTemplateBlockDeviceMappingEbsOutput) Encrypted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *string { return v.Encrypted }).(pulumi.StringPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This must be set with a `volumeType` of `"io1"`.
func (o LaunchTemplateBlockDeviceMappingEbsOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
// `encrypted` must be set to `true` when this is set.
func (o LaunchTemplateBlockDeviceMappingEbsOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The Snapshot ID to mount.
func (o LaunchTemplateBlockDeviceMappingEbsOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gigabytes.
func (o LaunchTemplateBlockDeviceMappingEbsOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`, or `"io1"`. (Default: `"standard"`).
func (o LaunchTemplateBlockDeviceMappingEbsOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type LaunchTemplateBlockDeviceMappingEbsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateBlockDeviceMappingEbsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateBlockDeviceMappingEbs)(nil)).Elem()
}

func (o LaunchTemplateBlockDeviceMappingEbsPtrOutput) ToLaunchTemplateBlockDeviceMappingEbsPtrOutput() LaunchTemplateBlockDeviceMappingEbsPtrOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingEbsPtrOutput) ToLaunchTemplateBlockDeviceMappingEbsPtrOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingEbsPtrOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingEbsPtrOutput) Elem() LaunchTemplateBlockDeviceMappingEbsOutput {
	return o.ApplyT(func(v *LaunchTemplateBlockDeviceMappingEbs) LaunchTemplateBlockDeviceMappingEbs { return *v }).(LaunchTemplateBlockDeviceMappingEbsOutput)
}

// Whether the volume should be destroyed on instance termination. Defaults to `false` if not set. See [Preserving Amazon EBS Volumes on Instance Termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) for more information.
func (o LaunchTemplateBlockDeviceMappingEbsPtrOutput) DeleteOnTermination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateBlockDeviceMappingEbs) *string {
		if v == nil {
			return nil
		}
		return v.DeleteOnTermination
	}).(pulumi.StringPtrOutput)
}

// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
// on the volume (Default: `false`). Cannot be used with `snapshotId`.
func (o LaunchTemplateBlockDeviceMappingEbsPtrOutput) Encrypted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateBlockDeviceMappingEbs) *string {
		if v == nil {
			return nil
		}
		return v.Encrypted
	}).(pulumi.StringPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This must be set with a `volumeType` of `"io1"`.
func (o LaunchTemplateBlockDeviceMappingEbsPtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateBlockDeviceMappingEbs) *int {
		if v == nil {
			return nil
		}
		return v.Iops
	}).(pulumi.IntPtrOutput)
}

// The ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
// `encrypted` must be set to `true` when this is set.
func (o LaunchTemplateBlockDeviceMappingEbsPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateBlockDeviceMappingEbs) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

// The Snapshot ID to mount.
func (o LaunchTemplateBlockDeviceMappingEbsPtrOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateBlockDeviceMappingEbs) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotId
	}).(pulumi.StringPtrOutput)
}

// The size of the volume in gigabytes.
func (o LaunchTemplateBlockDeviceMappingEbsPtrOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateBlockDeviceMappingEbs) *int {
		if v == nil {
			return nil
		}
		return v.VolumeSize
	}).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`, or `"io1"`. (Default: `"standard"`).
func (o LaunchTemplateBlockDeviceMappingEbsPtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateBlockDeviceMappingEbs) *string {
		if v == nil {
			return nil
		}
		return v.VolumeType
	}).(pulumi.StringPtrOutput)
}

type LaunchTemplateCapacityReservationSpecification struct {
	// Indicates the instance's Capacity Reservation preferences. Can be `open` or `none`. (Default `none`).
	CapacityReservationPreference *string `pulumi:"capacityReservationPreference"`
	// Used to target a specific Capacity Reservation:
	CapacityReservationTarget *LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget `pulumi:"capacityReservationTarget"`
}

// LaunchTemplateCapacityReservationSpecificationInput is an input type that accepts LaunchTemplateCapacityReservationSpecificationArgs and LaunchTemplateCapacityReservationSpecificationOutput values.
// You can construct a concrete instance of `LaunchTemplateCapacityReservationSpecificationInput` via:
//
//          LaunchTemplateCapacityReservationSpecificationArgs{...}
type LaunchTemplateCapacityReservationSpecificationInput interface {
	pulumi.Input

	ToLaunchTemplateCapacityReservationSpecificationOutput() LaunchTemplateCapacityReservationSpecificationOutput
	ToLaunchTemplateCapacityReservationSpecificationOutputWithContext(context.Context) LaunchTemplateCapacityReservationSpecificationOutput
}

type LaunchTemplateCapacityReservationSpecificationArgs struct {
	// Indicates the instance's Capacity Reservation preferences. Can be `open` or `none`. (Default `none`).
	CapacityReservationPreference pulumi.StringPtrInput `pulumi:"capacityReservationPreference"`
	// Used to target a specific Capacity Reservation:
	CapacityReservationTarget LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrInput `pulumi:"capacityReservationTarget"`
}

func (LaunchTemplateCapacityReservationSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCapacityReservationSpecification)(nil)).Elem()
}

func (i LaunchTemplateCapacityReservationSpecificationArgs) ToLaunchTemplateCapacityReservationSpecificationOutput() LaunchTemplateCapacityReservationSpecificationOutput {
	return i.ToLaunchTemplateCapacityReservationSpecificationOutputWithContext(context.Background())
}

func (i LaunchTemplateCapacityReservationSpecificationArgs) ToLaunchTemplateCapacityReservationSpecificationOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCapacityReservationSpecificationOutput)
}

func (i LaunchTemplateCapacityReservationSpecificationArgs) ToLaunchTemplateCapacityReservationSpecificationPtrOutput() LaunchTemplateCapacityReservationSpecificationPtrOutput {
	return i.ToLaunchTemplateCapacityReservationSpecificationPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateCapacityReservationSpecificationArgs) ToLaunchTemplateCapacityReservationSpecificationPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCapacityReservationSpecificationOutput).ToLaunchTemplateCapacityReservationSpecificationPtrOutputWithContext(ctx)
}

// LaunchTemplateCapacityReservationSpecificationPtrInput is an input type that accepts LaunchTemplateCapacityReservationSpecificationArgs, LaunchTemplateCapacityReservationSpecificationPtr and LaunchTemplateCapacityReservationSpecificationPtrOutput values.
// You can construct a concrete instance of `LaunchTemplateCapacityReservationSpecificationPtrInput` via:
//
//          LaunchTemplateCapacityReservationSpecificationArgs{...}
//
//  or:
//
//          nil
type LaunchTemplateCapacityReservationSpecificationPtrInput interface {
	pulumi.Input

	ToLaunchTemplateCapacityReservationSpecificationPtrOutput() LaunchTemplateCapacityReservationSpecificationPtrOutput
	ToLaunchTemplateCapacityReservationSpecificationPtrOutputWithContext(context.Context) LaunchTemplateCapacityReservationSpecificationPtrOutput
}

type launchTemplateCapacityReservationSpecificationPtrType LaunchTemplateCapacityReservationSpecificationArgs

func LaunchTemplateCapacityReservationSpecificationPtr(v *LaunchTemplateCapacityReservationSpecificationArgs) LaunchTemplateCapacityReservationSpecificationPtrInput {
	return (*launchTemplateCapacityReservationSpecificationPtrType)(v)
}

func (*launchTemplateCapacityReservationSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCapacityReservationSpecification)(nil)).Elem()
}

func (i *launchTemplateCapacityReservationSpecificationPtrType) ToLaunchTemplateCapacityReservationSpecificationPtrOutput() LaunchTemplateCapacityReservationSpecificationPtrOutput {
	return i.ToLaunchTemplateCapacityReservationSpecificationPtrOutputWithContext(context.Background())
}

func (i *launchTemplateCapacityReservationSpecificationPtrType) ToLaunchTemplateCapacityReservationSpecificationPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCapacityReservationSpecificationPtrOutput)
}

type LaunchTemplateCapacityReservationSpecificationOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCapacityReservationSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCapacityReservationSpecification)(nil)).Elem()
}

func (o LaunchTemplateCapacityReservationSpecificationOutput) ToLaunchTemplateCapacityReservationSpecificationOutput() LaunchTemplateCapacityReservationSpecificationOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationOutput) ToLaunchTemplateCapacityReservationSpecificationOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationOutput) ToLaunchTemplateCapacityReservationSpecificationPtrOutput() LaunchTemplateCapacityReservationSpecificationPtrOutput {
	return o.ToLaunchTemplateCapacityReservationSpecificationPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateCapacityReservationSpecificationOutput) ToLaunchTemplateCapacityReservationSpecificationPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecification) *LaunchTemplateCapacityReservationSpecification {
		return &v
	}).(LaunchTemplateCapacityReservationSpecificationPtrOutput)
}

// Indicates the instance's Capacity Reservation preferences. Can be `open` or `none`. (Default `none`).
func (o LaunchTemplateCapacityReservationSpecificationOutput) CapacityReservationPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecification) *string { return v.CapacityReservationPreference }).(pulumi.StringPtrOutput)
}

// Used to target a specific Capacity Reservation:
func (o LaunchTemplateCapacityReservationSpecificationOutput) CapacityReservationTarget() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecification) *LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget {
		return v.CapacityReservationTarget
	}).(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput)
}

type LaunchTemplateCapacityReservationSpecificationPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCapacityReservationSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCapacityReservationSpecification)(nil)).Elem()
}

func (o LaunchTemplateCapacityReservationSpecificationPtrOutput) ToLaunchTemplateCapacityReservationSpecificationPtrOutput() LaunchTemplateCapacityReservationSpecificationPtrOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationPtrOutput) ToLaunchTemplateCapacityReservationSpecificationPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationPtrOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationPtrOutput) Elem() LaunchTemplateCapacityReservationSpecificationOutput {
	return o.ApplyT(func(v *LaunchTemplateCapacityReservationSpecification) LaunchTemplateCapacityReservationSpecification {
		return *v
	}).(LaunchTemplateCapacityReservationSpecificationOutput)
}

// Indicates the instance's Capacity Reservation preferences. Can be `open` or `none`. (Default `none`).
func (o LaunchTemplateCapacityReservationSpecificationPtrOutput) CapacityReservationPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateCapacityReservationSpecification) *string {
		if v == nil {
			return nil
		}
		return v.CapacityReservationPreference
	}).(pulumi.StringPtrOutput)
}

// Used to target a specific Capacity Reservation:
func (o LaunchTemplateCapacityReservationSpecificationPtrOutput) CapacityReservationTarget() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateCapacityReservationSpecification) *LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget {
		if v == nil {
			return nil
		}
		return v.CapacityReservationTarget
	}).(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput)
}

type LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget struct {
	// The ID of the Capacity Reservation to target.
	CapacityReservationId *string `pulumi:"capacityReservationId"`
}

// LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetInput is an input type that accepts LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs and LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput values.
// You can construct a concrete instance of `LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetInput` via:
//
//          LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs{...}
type LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetInput interface {
	pulumi.Input

	ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput
	ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutputWithContext(context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput
}

type LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs struct {
	// The ID of the Capacity Reservation to target.
	CapacityReservationId pulumi.StringPtrInput `pulumi:"capacityReservationId"`
}

func (LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget)(nil)).Elem()
}

func (i LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput {
	return i.ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutputWithContext(context.Background())
}

func (i LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput)
}

func (i LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput {
	return i.ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput).ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutputWithContext(ctx)
}

// LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrInput is an input type that accepts LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs, LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtr and LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput values.
// You can construct a concrete instance of `LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrInput` via:
//
//          LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs{...}
//
//  or:
//
//          nil
type LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrInput interface {
	pulumi.Input

	ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput
	ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutputWithContext(context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput
}

type launchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrType LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs

func LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtr(v *LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrInput {
	return (*launchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrType)(v)
}

func (*launchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget)(nil)).Elem()
}

func (i *launchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrType) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput {
	return i.ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutputWithContext(context.Background())
}

func (i *launchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrType) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput)
}

type LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget)(nil)).Elem()
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput {
	return o.ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget) *LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget {
		return &v
	}).(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput)
}

// The ID of the Capacity Reservation to target.
func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput) CapacityReservationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget) *string {
		return v.CapacityReservationId
	}).(pulumi.StringPtrOutput)
}

type LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget)(nil)).Elem()
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput) Elem() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput {
	return o.ApplyT(func(v *LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget) LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget {
		return *v
	}).(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput)
}

// The ID of the Capacity Reservation to target.
func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput) CapacityReservationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget) *string {
		if v == nil {
			return nil
		}
		return v.CapacityReservationId
	}).(pulumi.StringPtrOutput)
}

type LaunchTemplateCpuOptions struct {
	// The number of CPU cores for the instance.
	CoreCount *int `pulumi:"coreCount"`
	// The number of threads per CPU core. To disable Intel Hyper-Threading Technology for the instance, specify a value of 1.
	// Otherwise, specify the default value of 2.
	ThreadsPerCore *int `pulumi:"threadsPerCore"`
}

// LaunchTemplateCpuOptionsInput is an input type that accepts LaunchTemplateCpuOptionsArgs and LaunchTemplateCpuOptionsOutput values.
// You can construct a concrete instance of `LaunchTemplateCpuOptionsInput` via:
//
//          LaunchTemplateCpuOptionsArgs{...}
type LaunchTemplateCpuOptionsInput interface {
	pulumi.Input

	ToLaunchTemplateCpuOptionsOutput() LaunchTemplateCpuOptionsOutput
	ToLaunchTemplateCpuOptionsOutputWithContext(context.Context) LaunchTemplateCpuOptionsOutput
}

type LaunchTemplateCpuOptionsArgs struct {
	// The number of CPU cores for the instance.
	CoreCount pulumi.IntPtrInput `pulumi:"coreCount"`
	// The number of threads per CPU core. To disable Intel Hyper-Threading Technology for the instance, specify a value of 1.
	// Otherwise, specify the default value of 2.
	ThreadsPerCore pulumi.IntPtrInput `pulumi:"threadsPerCore"`
}

func (LaunchTemplateCpuOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCpuOptions)(nil)).Elem()
}

func (i LaunchTemplateCpuOptionsArgs) ToLaunchTemplateCpuOptionsOutput() LaunchTemplateCpuOptionsOutput {
	return i.ToLaunchTemplateCpuOptionsOutputWithContext(context.Background())
}

func (i LaunchTemplateCpuOptionsArgs) ToLaunchTemplateCpuOptionsOutputWithContext(ctx context.Context) LaunchTemplateCpuOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCpuOptionsOutput)
}

func (i LaunchTemplateCpuOptionsArgs) ToLaunchTemplateCpuOptionsPtrOutput() LaunchTemplateCpuOptionsPtrOutput {
	return i.ToLaunchTemplateCpuOptionsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateCpuOptionsArgs) ToLaunchTemplateCpuOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateCpuOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCpuOptionsOutput).ToLaunchTemplateCpuOptionsPtrOutputWithContext(ctx)
}

// LaunchTemplateCpuOptionsPtrInput is an input type that accepts LaunchTemplateCpuOptionsArgs, LaunchTemplateCpuOptionsPtr and LaunchTemplateCpuOptionsPtrOutput values.
// You can construct a concrete instance of `LaunchTemplateCpuOptionsPtrInput` via:
//
//          LaunchTemplateCpuOptionsArgs{...}
//
//  or:
//
//          nil
type LaunchTemplateCpuOptionsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateCpuOptionsPtrOutput() LaunchTemplateCpuOptionsPtrOutput
	ToLaunchTemplateCpuOptionsPtrOutputWithContext(context.Context) LaunchTemplateCpuOptionsPtrOutput
}

type launchTemplateCpuOptionsPtrType LaunchTemplateCpuOptionsArgs

func LaunchTemplateCpuOptionsPtr(v *LaunchTemplateCpuOptionsArgs) LaunchTemplateCpuOptionsPtrInput {
	return (*launchTemplateCpuOptionsPtrType)(v)
}

func (*launchTemplateCpuOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCpuOptions)(nil)).Elem()
}

func (i *launchTemplateCpuOptionsPtrType) ToLaunchTemplateCpuOptionsPtrOutput() LaunchTemplateCpuOptionsPtrOutput {
	return i.ToLaunchTemplateCpuOptionsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateCpuOptionsPtrType) ToLaunchTemplateCpuOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateCpuOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCpuOptionsPtrOutput)
}

type LaunchTemplateCpuOptionsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCpuOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCpuOptions)(nil)).Elem()
}

func (o LaunchTemplateCpuOptionsOutput) ToLaunchTemplateCpuOptionsOutput() LaunchTemplateCpuOptionsOutput {
	return o
}

func (o LaunchTemplateCpuOptionsOutput) ToLaunchTemplateCpuOptionsOutputWithContext(ctx context.Context) LaunchTemplateCpuOptionsOutput {
	return o
}

func (o LaunchTemplateCpuOptionsOutput) ToLaunchTemplateCpuOptionsPtrOutput() LaunchTemplateCpuOptionsPtrOutput {
	return o.ToLaunchTemplateCpuOptionsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateCpuOptionsOutput) ToLaunchTemplateCpuOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateCpuOptionsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCpuOptions) *LaunchTemplateCpuOptions {
		return &v
	}).(LaunchTemplateCpuOptionsPtrOutput)
}

// The number of CPU cores for the instance.
func (o LaunchTemplateCpuOptionsOutput) CoreCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCpuOptions) *int { return v.CoreCount }).(pulumi.IntPtrOutput)
}

// The number of threads per CPU core. To disable Intel Hyper-Threading Technology for the instance, specify a value of 1.
// Otherwise, specify the default value of 2.
func (o LaunchTemplateCpuOptionsOutput) ThreadsPerCore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCpuOptions) *int { return v.ThreadsPerCore }).(pulumi.IntPtrOutput)
}

type LaunchTemplateCpuOptionsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCpuOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCpuOptions)(nil)).Elem()
}

func (o LaunchTemplateCpuOptionsPtrOutput) ToLaunchTemplateCpuOptionsPtrOutput() LaunchTemplateCpuOptionsPtrOutput {
	return o
}

func (o LaunchTemplateCpuOptionsPtrOutput) ToLaunchTemplateCpuOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateCpuOptionsPtrOutput {
	return o
}

func (o LaunchTemplateCpuOptionsPtrOutput) Elem() LaunchTemplateCpuOptionsOutput {
	return o.ApplyT(func(v *LaunchTemplateCpuOptions) LaunchTemplateCpuOptions { return *v }).(LaunchTemplateCpuOptionsOutput)
}

// The number of CPU cores for the instance.
func (o LaunchTemplateCpuOptionsPtrOutput) CoreCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateCpuOptions) *int {
		if v == nil {
			return nil
		}
		return v.CoreCount
	}).(pulumi.IntPtrOutput)
}

// The number of threads per CPU core. To disable Intel Hyper-Threading Technology for the instance, specify a value of 1.
// Otherwise, specify the default value of 2.
func (o LaunchTemplateCpuOptionsPtrOutput) ThreadsPerCore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateCpuOptions) *int {
		if v == nil {
			return nil
		}
		return v.ThreadsPerCore
	}).(pulumi.IntPtrOutput)
}

type LaunchTemplateCreditSpecification struct {
	// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits *string `pulumi:"cpuCredits"`
}

// LaunchTemplateCreditSpecificationInput is an input type that accepts LaunchTemplateCreditSpecificationArgs and LaunchTemplateCreditSpecificationOutput values.
// You can construct a concrete instance of `LaunchTemplateCreditSpecificationInput` via:
//
//          LaunchTemplateCreditSpecificationArgs{...}
type LaunchTemplateCreditSpecificationInput interface {
	pulumi.Input

	ToLaunchTemplateCreditSpecificationOutput() LaunchTemplateCreditSpecificationOutput
	ToLaunchTemplateCreditSpecificationOutputWithContext(context.Context) LaunchTemplateCreditSpecificationOutput
}

type LaunchTemplateCreditSpecificationArgs struct {
	// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits pulumi.StringPtrInput `pulumi:"cpuCredits"`
}

func (LaunchTemplateCreditSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCreditSpecification)(nil)).Elem()
}

func (i LaunchTemplateCreditSpecificationArgs) ToLaunchTemplateCreditSpecificationOutput() LaunchTemplateCreditSpecificationOutput {
	return i.ToLaunchTemplateCreditSpecificationOutputWithContext(context.Background())
}

func (i LaunchTemplateCreditSpecificationArgs) ToLaunchTemplateCreditSpecificationOutputWithContext(ctx context.Context) LaunchTemplateCreditSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCreditSpecificationOutput)
}

func (i LaunchTemplateCreditSpecificationArgs) ToLaunchTemplateCreditSpecificationPtrOutput() LaunchTemplateCreditSpecificationPtrOutput {
	return i.ToLaunchTemplateCreditSpecificationPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateCreditSpecificationArgs) ToLaunchTemplateCreditSpecificationPtrOutputWithContext(ctx context.Context) LaunchTemplateCreditSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCreditSpecificationOutput).ToLaunchTemplateCreditSpecificationPtrOutputWithContext(ctx)
}

// LaunchTemplateCreditSpecificationPtrInput is an input type that accepts LaunchTemplateCreditSpecificationArgs, LaunchTemplateCreditSpecificationPtr and LaunchTemplateCreditSpecificationPtrOutput values.
// You can construct a concrete instance of `LaunchTemplateCreditSpecificationPtrInput` via:
//
//          LaunchTemplateCreditSpecificationArgs{...}
//
//  or:
//
//          nil
type LaunchTemplateCreditSpecificationPtrInput interface {
	pulumi.Input

	ToLaunchTemplateCreditSpecificationPtrOutput() LaunchTemplateCreditSpecificationPtrOutput
	ToLaunchTemplateCreditSpecificationPtrOutputWithContext(context.Context) LaunchTemplateCreditSpecificationPtrOutput
}

type launchTemplateCreditSpecificationPtrType LaunchTemplateCreditSpecificationArgs

func LaunchTemplateCreditSpecificationPtr(v *LaunchTemplateCreditSpecificationArgs) LaunchTemplateCreditSpecificationPtrInput {
	return (*launchTemplateCreditSpecificationPtrType)(v)
}

func (*launchTemplateCreditSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCreditSpecification)(nil)).Elem()
}

func (i *launchTemplateCreditSpecificationPtrType) ToLaunchTemplateCreditSpecificationPtrOutput() LaunchTemplateCreditSpecificationPtrOutput {
	return i.ToLaunchTemplateCreditSpecificationPtrOutputWithContext(context.Background())
}

func (i *launchTemplateCreditSpecificationPtrType) ToLaunchTemplateCreditSpecificationPtrOutputWithContext(ctx context.Context) LaunchTemplateCreditSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCreditSpecificationPtrOutput)
}

type LaunchTemplateCreditSpecificationOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCreditSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCreditSpecification)(nil)).Elem()
}

func (o LaunchTemplateCreditSpecificationOutput) ToLaunchTemplateCreditSpecificationOutput() LaunchTemplateCreditSpecificationOutput {
	return o
}

func (o LaunchTemplateCreditSpecificationOutput) ToLaunchTemplateCreditSpecificationOutputWithContext(ctx context.Context) LaunchTemplateCreditSpecificationOutput {
	return o
}

func (o LaunchTemplateCreditSpecificationOutput) ToLaunchTemplateCreditSpecificationPtrOutput() LaunchTemplateCreditSpecificationPtrOutput {
	return o.ToLaunchTemplateCreditSpecificationPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateCreditSpecificationOutput) ToLaunchTemplateCreditSpecificationPtrOutputWithContext(ctx context.Context) LaunchTemplateCreditSpecificationPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCreditSpecification) *LaunchTemplateCreditSpecification {
		return &v
	}).(LaunchTemplateCreditSpecificationPtrOutput)
}

// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
func (o LaunchTemplateCreditSpecificationOutput) CpuCredits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCreditSpecification) *string { return v.CpuCredits }).(pulumi.StringPtrOutput)
}

type LaunchTemplateCreditSpecificationPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCreditSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCreditSpecification)(nil)).Elem()
}

func (o LaunchTemplateCreditSpecificationPtrOutput) ToLaunchTemplateCreditSpecificationPtrOutput() LaunchTemplateCreditSpecificationPtrOutput {
	return o
}

func (o LaunchTemplateCreditSpecificationPtrOutput) ToLaunchTemplateCreditSpecificationPtrOutputWithContext(ctx context.Context) LaunchTemplateCreditSpecificationPtrOutput {
	return o
}

func (o LaunchTemplateCreditSpecificationPtrOutput) Elem() LaunchTemplateCreditSpecificationOutput {
	return o.ApplyT(func(v *LaunchTemplateCreditSpecification) LaunchTemplateCreditSpecification { return *v }).(LaunchTemplateCreditSpecificationOutput)
}

// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
func (o LaunchTemplateCreditSpecificationPtrOutput) CpuCredits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateCreditSpecification) *string {
		if v == nil {
			return nil
		}
		return v.CpuCredits
	}).(pulumi.StringPtrOutput)
}

type LaunchTemplateElasticGpuSpecification struct {
	// The [Elastic GPU Type](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-gpus.html#elastic-gpus-basics)
	Type string `pulumi:"type"`
}

// LaunchTemplateElasticGpuSpecificationInput is an input type that accepts LaunchTemplateElasticGpuSpecificationArgs and LaunchTemplateElasticGpuSpecificationOutput values.
// You can construct a concrete instance of `LaunchTemplateElasticGpuSpecificationInput` via:
//
//          LaunchTemplateElasticGpuSpecificationArgs{...}
type LaunchTemplateElasticGpuSpecificationInput interface {
	pulumi.Input

	ToLaunchTemplateElasticGpuSpecificationOutput() LaunchTemplateElasticGpuSpecificationOutput
	ToLaunchTemplateElasticGpuSpecificationOutputWithContext(context.Context) LaunchTemplateElasticGpuSpecificationOutput
}

type LaunchTemplateElasticGpuSpecificationArgs struct {
	// The [Elastic GPU Type](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-gpus.html#elastic-gpus-basics)
	Type pulumi.StringInput `pulumi:"type"`
}

func (LaunchTemplateElasticGpuSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateElasticGpuSpecification)(nil)).Elem()
}

func (i LaunchTemplateElasticGpuSpecificationArgs) ToLaunchTemplateElasticGpuSpecificationOutput() LaunchTemplateElasticGpuSpecificationOutput {
	return i.ToLaunchTemplateElasticGpuSpecificationOutputWithContext(context.Background())
}

func (i LaunchTemplateElasticGpuSpecificationArgs) ToLaunchTemplateElasticGpuSpecificationOutputWithContext(ctx context.Context) LaunchTemplateElasticGpuSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateElasticGpuSpecificationOutput)
}

// LaunchTemplateElasticGpuSpecificationArrayInput is an input type that accepts LaunchTemplateElasticGpuSpecificationArray and LaunchTemplateElasticGpuSpecificationArrayOutput values.
// You can construct a concrete instance of `LaunchTemplateElasticGpuSpecificationArrayInput` via:
//
//          LaunchTemplateElasticGpuSpecificationArray{ LaunchTemplateElasticGpuSpecificationArgs{...} }
type LaunchTemplateElasticGpuSpecificationArrayInput interface {
	pulumi.Input

	ToLaunchTemplateElasticGpuSpecificationArrayOutput() LaunchTemplateElasticGpuSpecificationArrayOutput
	ToLaunchTemplateElasticGpuSpecificationArrayOutputWithContext(context.Context) LaunchTemplateElasticGpuSpecificationArrayOutput
}

type LaunchTemplateElasticGpuSpecificationArray []LaunchTemplateElasticGpuSpecificationInput

func (LaunchTemplateElasticGpuSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateElasticGpuSpecification)(nil)).Elem()
}

func (i LaunchTemplateElasticGpuSpecificationArray) ToLaunchTemplateElasticGpuSpecificationArrayOutput() LaunchTemplateElasticGpuSpecificationArrayOutput {
	return i.ToLaunchTemplateElasticGpuSpecificationArrayOutputWithContext(context.Background())
}

func (i LaunchTemplateElasticGpuSpecificationArray) ToLaunchTemplateElasticGpuSpecificationArrayOutputWithContext(ctx context.Context) LaunchTemplateElasticGpuSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateElasticGpuSpecificationArrayOutput)
}

type LaunchTemplateElasticGpuSpecificationOutput struct{ *pulumi.OutputState }

func (LaunchTemplateElasticGpuSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateElasticGpuSpecification)(nil)).Elem()
}

func (o LaunchTemplateElasticGpuSpecificationOutput) ToLaunchTemplateElasticGpuSpecificationOutput() LaunchTemplateElasticGpuSpecificationOutput {
	return o
}

func (o LaunchTemplateElasticGpuSpecificationOutput) ToLaunchTemplateElasticGpuSpecificationOutputWithContext(ctx context.Context) LaunchTemplateElasticGpuSpecificationOutput {
	return o
}

// The [Elastic GPU Type](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-gpus.html#elastic-gpus-basics)
func (o LaunchTemplateElasticGpuSpecificationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchTemplateElasticGpuSpecification) string { return v.Type }).(pulumi.StringOutput)
}

type LaunchTemplateElasticGpuSpecificationArrayOutput struct{ *pulumi.OutputState }

func (LaunchTemplateElasticGpuSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateElasticGpuSpecification)(nil)).Elem()
}

func (o LaunchTemplateElasticGpuSpecificationArrayOutput) ToLaunchTemplateElasticGpuSpecificationArrayOutput() LaunchTemplateElasticGpuSpecificationArrayOutput {
	return o
}

func (o LaunchTemplateElasticGpuSpecificationArrayOutput) ToLaunchTemplateElasticGpuSpecificationArrayOutputWithContext(ctx context.Context) LaunchTemplateElasticGpuSpecificationArrayOutput {
	return o
}

func (o LaunchTemplateElasticGpuSpecificationArrayOutput) Index(i pulumi.IntInput) LaunchTemplateElasticGpuSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchTemplateElasticGpuSpecification {
		return vs[0].([]LaunchTemplateElasticGpuSpecification)[vs[1].(int)]
	}).(LaunchTemplateElasticGpuSpecificationOutput)
}

type LaunchTemplateElasticInferenceAccelerator struct {
	// Accelerator type.
	Type string `pulumi:"type"`
}

// LaunchTemplateElasticInferenceAcceleratorInput is an input type that accepts LaunchTemplateElasticInferenceAcceleratorArgs and LaunchTemplateElasticInferenceAcceleratorOutput values.
// You can construct a concrete instance of `LaunchTemplateElasticInferenceAcceleratorInput` via:
//
//          LaunchTemplateElasticInferenceAcceleratorArgs{...}
type LaunchTemplateElasticInferenceAcceleratorInput interface {
	pulumi.Input

	ToLaunchTemplateElasticInferenceAcceleratorOutput() LaunchTemplateElasticInferenceAcceleratorOutput
	ToLaunchTemplateElasticInferenceAcceleratorOutputWithContext(context.Context) LaunchTemplateElasticInferenceAcceleratorOutput
}

type LaunchTemplateElasticInferenceAcceleratorArgs struct {
	// Accelerator type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (LaunchTemplateElasticInferenceAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateElasticInferenceAccelerator)(nil)).Elem()
}

func (i LaunchTemplateElasticInferenceAcceleratorArgs) ToLaunchTemplateElasticInferenceAcceleratorOutput() LaunchTemplateElasticInferenceAcceleratorOutput {
	return i.ToLaunchTemplateElasticInferenceAcceleratorOutputWithContext(context.Background())
}

func (i LaunchTemplateElasticInferenceAcceleratorArgs) ToLaunchTemplateElasticInferenceAcceleratorOutputWithContext(ctx context.Context) LaunchTemplateElasticInferenceAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateElasticInferenceAcceleratorOutput)
}

func (i LaunchTemplateElasticInferenceAcceleratorArgs) ToLaunchTemplateElasticInferenceAcceleratorPtrOutput() LaunchTemplateElasticInferenceAcceleratorPtrOutput {
	return i.ToLaunchTemplateElasticInferenceAcceleratorPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateElasticInferenceAcceleratorArgs) ToLaunchTemplateElasticInferenceAcceleratorPtrOutputWithContext(ctx context.Context) LaunchTemplateElasticInferenceAcceleratorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateElasticInferenceAcceleratorOutput).ToLaunchTemplateElasticInferenceAcceleratorPtrOutputWithContext(ctx)
}

// LaunchTemplateElasticInferenceAcceleratorPtrInput is an input type that accepts LaunchTemplateElasticInferenceAcceleratorArgs, LaunchTemplateElasticInferenceAcceleratorPtr and LaunchTemplateElasticInferenceAcceleratorPtrOutput values.
// You can construct a concrete instance of `LaunchTemplateElasticInferenceAcceleratorPtrInput` via:
//
//          LaunchTemplateElasticInferenceAcceleratorArgs{...}
//
//  or:
//
//          nil
type LaunchTemplateElasticInferenceAcceleratorPtrInput interface {
	pulumi.Input

	ToLaunchTemplateElasticInferenceAcceleratorPtrOutput() LaunchTemplateElasticInferenceAcceleratorPtrOutput
	ToLaunchTemplateElasticInferenceAcceleratorPtrOutputWithContext(context.Context) LaunchTemplateElasticInferenceAcceleratorPtrOutput
}

type launchTemplateElasticInferenceAcceleratorPtrType LaunchTemplateElasticInferenceAcceleratorArgs

func LaunchTemplateElasticInferenceAcceleratorPtr(v *LaunchTemplateElasticInferenceAcceleratorArgs) LaunchTemplateElasticInferenceAcceleratorPtrInput {
	return (*launchTemplateElasticInferenceAcceleratorPtrType)(v)
}

func (*launchTemplateElasticInferenceAcceleratorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateElasticInferenceAccelerator)(nil)).Elem()
}

func (i *launchTemplateElasticInferenceAcceleratorPtrType) ToLaunchTemplateElasticInferenceAcceleratorPtrOutput() LaunchTemplateElasticInferenceAcceleratorPtrOutput {
	return i.ToLaunchTemplateElasticInferenceAcceleratorPtrOutputWithContext(context.Background())
}

func (i *launchTemplateElasticInferenceAcceleratorPtrType) ToLaunchTemplateElasticInferenceAcceleratorPtrOutputWithContext(ctx context.Context) LaunchTemplateElasticInferenceAcceleratorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateElasticInferenceAcceleratorPtrOutput)
}

type LaunchTemplateElasticInferenceAcceleratorOutput struct{ *pulumi.OutputState }

func (LaunchTemplateElasticInferenceAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateElasticInferenceAccelerator)(nil)).Elem()
}

func (o LaunchTemplateElasticInferenceAcceleratorOutput) ToLaunchTemplateElasticInferenceAcceleratorOutput() LaunchTemplateElasticInferenceAcceleratorOutput {
	return o
}

func (o LaunchTemplateElasticInferenceAcceleratorOutput) ToLaunchTemplateElasticInferenceAcceleratorOutputWithContext(ctx context.Context) LaunchTemplateElasticInferenceAcceleratorOutput {
	return o
}

func (o LaunchTemplateElasticInferenceAcceleratorOutput) ToLaunchTemplateElasticInferenceAcceleratorPtrOutput() LaunchTemplateElasticInferenceAcceleratorPtrOutput {
	return o.ToLaunchTemplateElasticInferenceAcceleratorPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateElasticInferenceAcceleratorOutput) ToLaunchTemplateElasticInferenceAcceleratorPtrOutputWithContext(ctx context.Context) LaunchTemplateElasticInferenceAcceleratorPtrOutput {
	return o.ApplyT(func(v LaunchTemplateElasticInferenceAccelerator) *LaunchTemplateElasticInferenceAccelerator {
		return &v
	}).(LaunchTemplateElasticInferenceAcceleratorPtrOutput)
}

// Accelerator type.
func (o LaunchTemplateElasticInferenceAcceleratorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchTemplateElasticInferenceAccelerator) string { return v.Type }).(pulumi.StringOutput)
}

type LaunchTemplateElasticInferenceAcceleratorPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateElasticInferenceAcceleratorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateElasticInferenceAccelerator)(nil)).Elem()
}

func (o LaunchTemplateElasticInferenceAcceleratorPtrOutput) ToLaunchTemplateElasticInferenceAcceleratorPtrOutput() LaunchTemplateElasticInferenceAcceleratorPtrOutput {
	return o
}

func (o LaunchTemplateElasticInferenceAcceleratorPtrOutput) ToLaunchTemplateElasticInferenceAcceleratorPtrOutputWithContext(ctx context.Context) LaunchTemplateElasticInferenceAcceleratorPtrOutput {
	return o
}

func (o LaunchTemplateElasticInferenceAcceleratorPtrOutput) Elem() LaunchTemplateElasticInferenceAcceleratorOutput {
	return o.ApplyT(func(v *LaunchTemplateElasticInferenceAccelerator) LaunchTemplateElasticInferenceAccelerator {
		return *v
	}).(LaunchTemplateElasticInferenceAcceleratorOutput)
}

// Accelerator type.
func (o LaunchTemplateElasticInferenceAcceleratorPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateElasticInferenceAccelerator) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type LaunchTemplateHibernationOptions struct {
	// If set to `true`, the launched EC2 instance will hibernation enabled.
	Configured bool `pulumi:"configured"`
}

// LaunchTemplateHibernationOptionsInput is an input type that accepts LaunchTemplateHibernationOptionsArgs and LaunchTemplateHibernationOptionsOutput values.
// You can construct a concrete instance of `LaunchTemplateHibernationOptionsInput` via:
//
//          LaunchTemplateHibernationOptionsArgs{...}
type LaunchTemplateHibernationOptionsInput interface {
	pulumi.Input

	ToLaunchTemplateHibernationOptionsOutput() LaunchTemplateHibernationOptionsOutput
	ToLaunchTemplateHibernationOptionsOutputWithContext(context.Context) LaunchTemplateHibernationOptionsOutput
}

type LaunchTemplateHibernationOptionsArgs struct {
	// If set to `true`, the launched EC2 instance will hibernation enabled.
	Configured pulumi.BoolInput `pulumi:"configured"`
}

func (LaunchTemplateHibernationOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateHibernationOptions)(nil)).Elem()
}

func (i LaunchTemplateHibernationOptionsArgs) ToLaunchTemplateHibernationOptionsOutput() LaunchTemplateHibernationOptionsOutput {
	return i.ToLaunchTemplateHibernationOptionsOutputWithContext(context.Background())
}

func (i LaunchTemplateHibernationOptionsArgs) ToLaunchTemplateHibernationOptionsOutputWithContext(ctx context.Context) LaunchTemplateHibernationOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateHibernationOptionsOutput)
}

func (i LaunchTemplateHibernationOptionsArgs) ToLaunchTemplateHibernationOptionsPtrOutput() LaunchTemplateHibernationOptionsPtrOutput {
	return i.ToLaunchTemplateHibernationOptionsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateHibernationOptionsArgs) ToLaunchTemplateHibernationOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateHibernationOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateHibernationOptionsOutput).ToLaunchTemplateHibernationOptionsPtrOutputWithContext(ctx)
}

// LaunchTemplateHibernationOptionsPtrInput is an input type that accepts LaunchTemplateHibernationOptionsArgs, LaunchTemplateHibernationOptionsPtr and LaunchTemplateHibernationOptionsPtrOutput values.
// You can construct a concrete instance of `LaunchTemplateHibernationOptionsPtrInput` via:
//
//          LaunchTemplateHibernationOptionsArgs{...}
//
//  or:
//
//          nil
type LaunchTemplateHibernationOptionsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateHibernationOptionsPtrOutput() LaunchTemplateHibernationOptionsPtrOutput
	ToLaunchTemplateHibernationOptionsPtrOutputWithContext(context.Context) LaunchTemplateHibernationOptionsPtrOutput
}

type launchTemplateHibernationOptionsPtrType LaunchTemplateHibernationOptionsArgs

func LaunchTemplateHibernationOptionsPtr(v *LaunchTemplateHibernationOptionsArgs) LaunchTemplateHibernationOptionsPtrInput {
	return (*launchTemplateHibernationOptionsPtrType)(v)
}

func (*launchTemplateHibernationOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateHibernationOptions)(nil)).Elem()
}

func (i *launchTemplateHibernationOptionsPtrType) ToLaunchTemplateHibernationOptionsPtrOutput() LaunchTemplateHibernationOptionsPtrOutput {
	return i.ToLaunchTemplateHibernationOptionsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateHibernationOptionsPtrType) ToLaunchTemplateHibernationOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateHibernationOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateHibernationOptionsPtrOutput)
}

type LaunchTemplateHibernationOptionsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateHibernationOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateHibernationOptions)(nil)).Elem()
}

func (o LaunchTemplateHibernationOptionsOutput) ToLaunchTemplateHibernationOptionsOutput() LaunchTemplateHibernationOptionsOutput {
	return o
}

func (o LaunchTemplateHibernationOptionsOutput) ToLaunchTemplateHibernationOptionsOutputWithContext(ctx context.Context) LaunchTemplateHibernationOptionsOutput {
	return o
}

func (o LaunchTemplateHibernationOptionsOutput) ToLaunchTemplateHibernationOptionsPtrOutput() LaunchTemplateHibernationOptionsPtrOutput {
	return o.ToLaunchTemplateHibernationOptionsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateHibernationOptionsOutput) ToLaunchTemplateHibernationOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateHibernationOptionsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateHibernationOptions) *LaunchTemplateHibernationOptions {
		return &v
	}).(LaunchTemplateHibernationOptionsPtrOutput)
}

// If set to `true`, the launched EC2 instance will hibernation enabled.
func (o LaunchTemplateHibernationOptionsOutput) Configured() pulumi.BoolOutput {
	return o.ApplyT(func(v LaunchTemplateHibernationOptions) bool { return v.Configured }).(pulumi.BoolOutput)
}

type LaunchTemplateHibernationOptionsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateHibernationOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateHibernationOptions)(nil)).Elem()
}

func (o LaunchTemplateHibernationOptionsPtrOutput) ToLaunchTemplateHibernationOptionsPtrOutput() LaunchTemplateHibernationOptionsPtrOutput {
	return o
}

func (o LaunchTemplateHibernationOptionsPtrOutput) ToLaunchTemplateHibernationOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateHibernationOptionsPtrOutput {
	return o
}

func (o LaunchTemplateHibernationOptionsPtrOutput) Elem() LaunchTemplateHibernationOptionsOutput {
	return o.ApplyT(func(v *LaunchTemplateHibernationOptions) LaunchTemplateHibernationOptions { return *v }).(LaunchTemplateHibernationOptionsOutput)
}

// If set to `true`, the launched EC2 instance will hibernation enabled.
func (o LaunchTemplateHibernationOptionsPtrOutput) Configured() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateHibernationOptions) *bool {
		if v == nil {
			return nil
		}
		return &v.Configured
	}).(pulumi.BoolPtrOutput)
}

type LaunchTemplateIamInstanceProfile struct {
	// The Amazon Resource Name (ARN) of the instance profile.
	Arn *string `pulumi:"arn"`
	// The name of the instance profile.
	Name *string `pulumi:"name"`
}

// LaunchTemplateIamInstanceProfileInput is an input type that accepts LaunchTemplateIamInstanceProfileArgs and LaunchTemplateIamInstanceProfileOutput values.
// You can construct a concrete instance of `LaunchTemplateIamInstanceProfileInput` via:
//
//          LaunchTemplateIamInstanceProfileArgs{...}
type LaunchTemplateIamInstanceProfileInput interface {
	pulumi.Input

	ToLaunchTemplateIamInstanceProfileOutput() LaunchTemplateIamInstanceProfileOutput
	ToLaunchTemplateIamInstanceProfileOutputWithContext(context.Context) LaunchTemplateIamInstanceProfileOutput
}

type LaunchTemplateIamInstanceProfileArgs struct {
	// The Amazon Resource Name (ARN) of the instance profile.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// The name of the instance profile.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LaunchTemplateIamInstanceProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateIamInstanceProfile)(nil)).Elem()
}

func (i LaunchTemplateIamInstanceProfileArgs) ToLaunchTemplateIamInstanceProfileOutput() LaunchTemplateIamInstanceProfileOutput {
	return i.ToLaunchTemplateIamInstanceProfileOutputWithContext(context.Background())
}

func (i LaunchTemplateIamInstanceProfileArgs) ToLaunchTemplateIamInstanceProfileOutputWithContext(ctx context.Context) LaunchTemplateIamInstanceProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateIamInstanceProfileOutput)
}

func (i LaunchTemplateIamInstanceProfileArgs) ToLaunchTemplateIamInstanceProfilePtrOutput() LaunchTemplateIamInstanceProfilePtrOutput {
	return i.ToLaunchTemplateIamInstanceProfilePtrOutputWithContext(context.Background())
}

func (i LaunchTemplateIamInstanceProfileArgs) ToLaunchTemplateIamInstanceProfilePtrOutputWithContext(ctx context.Context) LaunchTemplateIamInstanceProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateIamInstanceProfileOutput).ToLaunchTemplateIamInstanceProfilePtrOutputWithContext(ctx)
}

// LaunchTemplateIamInstanceProfilePtrInput is an input type that accepts LaunchTemplateIamInstanceProfileArgs, LaunchTemplateIamInstanceProfilePtr and LaunchTemplateIamInstanceProfilePtrOutput values.
// You can construct a concrete instance of `LaunchTemplateIamInstanceProfilePtrInput` via:
//
//          LaunchTemplateIamInstanceProfileArgs{...}
//
//  or:
//
//          nil
type LaunchTemplateIamInstanceProfilePtrInput interface {
	pulumi.Input

	ToLaunchTemplateIamInstanceProfilePtrOutput() LaunchTemplateIamInstanceProfilePtrOutput
	ToLaunchTemplateIamInstanceProfilePtrOutputWithContext(context.Context) LaunchTemplateIamInstanceProfilePtrOutput
}

type launchTemplateIamInstanceProfilePtrType LaunchTemplateIamInstanceProfileArgs

func LaunchTemplateIamInstanceProfilePtr(v *LaunchTemplateIamInstanceProfileArgs) LaunchTemplateIamInstanceProfilePtrInput {
	return (*launchTemplateIamInstanceProfilePtrType)(v)
}

func (*launchTemplateIamInstanceProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateIamInstanceProfile)(nil)).Elem()
}

func (i *launchTemplateIamInstanceProfilePtrType) ToLaunchTemplateIamInstanceProfilePtrOutput() LaunchTemplateIamInstanceProfilePtrOutput {
	return i.ToLaunchTemplateIamInstanceProfilePtrOutputWithContext(context.Background())
}

func (i *launchTemplateIamInstanceProfilePtrType) ToLaunchTemplateIamInstanceProfilePtrOutputWithContext(ctx context.Context) LaunchTemplateIamInstanceProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateIamInstanceProfilePtrOutput)
}

type LaunchTemplateIamInstanceProfileOutput struct{ *pulumi.OutputState }

func (LaunchTemplateIamInstanceProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateIamInstanceProfile)(nil)).Elem()
}

func (o LaunchTemplateIamInstanceProfileOutput) ToLaunchTemplateIamInstanceProfileOutput() LaunchTemplateIamInstanceProfileOutput {
	return o
}

func (o LaunchTemplateIamInstanceProfileOutput) ToLaunchTemplateIamInstanceProfileOutputWithContext(ctx context.Context) LaunchTemplateIamInstanceProfileOutput {
	return o
}

func (o LaunchTemplateIamInstanceProfileOutput) ToLaunchTemplateIamInstanceProfilePtrOutput() LaunchTemplateIamInstanceProfilePtrOutput {
	return o.ToLaunchTemplateIamInstanceProfilePtrOutputWithContext(context.Background())
}

func (o LaunchTemplateIamInstanceProfileOutput) ToLaunchTemplateIamInstanceProfilePtrOutputWithContext(ctx context.Context) LaunchTemplateIamInstanceProfilePtrOutput {
	return o.ApplyT(func(v LaunchTemplateIamInstanceProfile) *LaunchTemplateIamInstanceProfile {
		return &v
	}).(LaunchTemplateIamInstanceProfilePtrOutput)
}

// The Amazon Resource Name (ARN) of the instance profile.
func (o LaunchTemplateIamInstanceProfileOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateIamInstanceProfile) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The name of the instance profile.
func (o LaunchTemplateIamInstanceProfileOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateIamInstanceProfile) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LaunchTemplateIamInstanceProfilePtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateIamInstanceProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateIamInstanceProfile)(nil)).Elem()
}

func (o LaunchTemplateIamInstanceProfilePtrOutput) ToLaunchTemplateIamInstanceProfilePtrOutput() LaunchTemplateIamInstanceProfilePtrOutput {
	return o
}

func (o LaunchTemplateIamInstanceProfilePtrOutput) ToLaunchTemplateIamInstanceProfilePtrOutputWithContext(ctx context.Context) LaunchTemplateIamInstanceProfilePtrOutput {
	return o
}

func (o LaunchTemplateIamInstanceProfilePtrOutput) Elem() LaunchTemplateIamInstanceProfileOutput {
	return o.ApplyT(func(v *LaunchTemplateIamInstanceProfile) LaunchTemplateIamInstanceProfile { return *v }).(LaunchTemplateIamInstanceProfileOutput)
}

// The Amazon Resource Name (ARN) of the instance profile.
func (o LaunchTemplateIamInstanceProfilePtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateIamInstanceProfile) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// The name of the instance profile.
func (o LaunchTemplateIamInstanceProfilePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateIamInstanceProfile) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type LaunchTemplateInstanceMarketOptions struct {
	// The market type. Can be `spot`.
	MarketType *string `pulumi:"marketType"`
	// The options for [Spot Instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html)
	SpotOptions *LaunchTemplateInstanceMarketOptionsSpotOptions `pulumi:"spotOptions"`
}

// LaunchTemplateInstanceMarketOptionsInput is an input type that accepts LaunchTemplateInstanceMarketOptionsArgs and LaunchTemplateInstanceMarketOptionsOutput values.
// You can construct a concrete instance of `LaunchTemplateInstanceMarketOptionsInput` via:
//
//          LaunchTemplateInstanceMarketOptionsArgs{...}
type LaunchTemplateInstanceMarketOptionsInput interface {
	pulumi.Input

	ToLaunchTemplateInstanceMarketOptionsOutput() LaunchTemplateInstanceMarketOptionsOutput
	ToLaunchTemplateInstanceMarketOptionsOutputWithContext(context.Context) LaunchTemplateInstanceMarketOptionsOutput
}

type LaunchTemplateInstanceMarketOptionsArgs struct {
	// The market type. Can be `spot`.
	MarketType pulumi.StringPtrInput `pulumi:"marketType"`
	// The options for [Spot Instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html)
	SpotOptions LaunchTemplateInstanceMarketOptionsSpotOptionsPtrInput `pulumi:"spotOptions"`
}

func (LaunchTemplateInstanceMarketOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceMarketOptions)(nil)).Elem()
}

func (i LaunchTemplateInstanceMarketOptionsArgs) ToLaunchTemplateInstanceMarketOptionsOutput() LaunchTemplateInstanceMarketOptionsOutput {
	return i.ToLaunchTemplateInstanceMarketOptionsOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceMarketOptionsArgs) ToLaunchTemplateInstanceMarketOptionsOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceMarketOptionsOutput)
}

func (i LaunchTemplateInstanceMarketOptionsArgs) ToLaunchTemplateInstanceMarketOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsPtrOutput {
	return i.ToLaunchTemplateInstanceMarketOptionsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceMarketOptionsArgs) ToLaunchTemplateInstanceMarketOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceMarketOptionsOutput).ToLaunchTemplateInstanceMarketOptionsPtrOutputWithContext(ctx)
}

// LaunchTemplateInstanceMarketOptionsPtrInput is an input type that accepts LaunchTemplateInstanceMarketOptionsArgs, LaunchTemplateInstanceMarketOptionsPtr and LaunchTemplateInstanceMarketOptionsPtrOutput values.
// You can construct a concrete instance of `LaunchTemplateInstanceMarketOptionsPtrInput` via:
//
//          LaunchTemplateInstanceMarketOptionsArgs{...}
//
//  or:
//
//          nil
type LaunchTemplateInstanceMarketOptionsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateInstanceMarketOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsPtrOutput
	ToLaunchTemplateInstanceMarketOptionsPtrOutputWithContext(context.Context) LaunchTemplateInstanceMarketOptionsPtrOutput
}

type launchTemplateInstanceMarketOptionsPtrType LaunchTemplateInstanceMarketOptionsArgs

func LaunchTemplateInstanceMarketOptionsPtr(v *LaunchTemplateInstanceMarketOptionsArgs) LaunchTemplateInstanceMarketOptionsPtrInput {
	return (*launchTemplateInstanceMarketOptionsPtrType)(v)
}

func (*launchTemplateInstanceMarketOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateInstanceMarketOptions)(nil)).Elem()
}

func (i *launchTemplateInstanceMarketOptionsPtrType) ToLaunchTemplateInstanceMarketOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsPtrOutput {
	return i.ToLaunchTemplateInstanceMarketOptionsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateInstanceMarketOptionsPtrType) ToLaunchTemplateInstanceMarketOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceMarketOptionsPtrOutput)
}

type LaunchTemplateInstanceMarketOptionsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceMarketOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceMarketOptions)(nil)).Elem()
}

func (o LaunchTemplateInstanceMarketOptionsOutput) ToLaunchTemplateInstanceMarketOptionsOutput() LaunchTemplateInstanceMarketOptionsOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsOutput) ToLaunchTemplateInstanceMarketOptionsOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsOutput) ToLaunchTemplateInstanceMarketOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsPtrOutput {
	return o.ToLaunchTemplateInstanceMarketOptionsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateInstanceMarketOptionsOutput) ToLaunchTemplateInstanceMarketOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptions) *LaunchTemplateInstanceMarketOptions {
		return &v
	}).(LaunchTemplateInstanceMarketOptionsPtrOutput)
}

// The market type. Can be `spot`.
func (o LaunchTemplateInstanceMarketOptionsOutput) MarketType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptions) *string { return v.MarketType }).(pulumi.StringPtrOutput)
}

// The options for [Spot Instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html)
func (o LaunchTemplateInstanceMarketOptionsOutput) SpotOptions() LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptions) *LaunchTemplateInstanceMarketOptionsSpotOptions {
		return v.SpotOptions
	}).(LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput)
}

type LaunchTemplateInstanceMarketOptionsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceMarketOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateInstanceMarketOptions)(nil)).Elem()
}

func (o LaunchTemplateInstanceMarketOptionsPtrOutput) ToLaunchTemplateInstanceMarketOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsPtrOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsPtrOutput) ToLaunchTemplateInstanceMarketOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsPtrOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsPtrOutput) Elem() LaunchTemplateInstanceMarketOptionsOutput {
	return o.ApplyT(func(v *LaunchTemplateInstanceMarketOptions) LaunchTemplateInstanceMarketOptions { return *v }).(LaunchTemplateInstanceMarketOptionsOutput)
}

// The market type. Can be `spot`.
func (o LaunchTemplateInstanceMarketOptionsPtrOutput) MarketType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateInstanceMarketOptions) *string {
		if v == nil {
			return nil
		}
		return v.MarketType
	}).(pulumi.StringPtrOutput)
}

// The options for [Spot Instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html)
func (o LaunchTemplateInstanceMarketOptionsPtrOutput) SpotOptions() LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateInstanceMarketOptions) *LaunchTemplateInstanceMarketOptionsSpotOptions {
		if v == nil {
			return nil
		}
		return v.SpotOptions
	}).(LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput)
}

type LaunchTemplateInstanceMarketOptionsSpotOptions struct {
	// The required duration in minutes. This value must be a multiple of 60.
	BlockDurationMinutes *int `pulumi:"blockDurationMinutes"`
	// The behavior when a Spot Instance is interrupted. Can be `hibernate`,
	// `stop`, or `terminate`. (Default: `terminate`).
	InstanceInterruptionBehavior *string `pulumi:"instanceInterruptionBehavior"`
	// The maximum hourly price you're willing to pay for the Spot Instances.
	MaxPrice *string `pulumi:"maxPrice"`
	// The Spot Instance request type. Can be `one-time`, or `persistent`.
	SpotInstanceType *string `pulumi:"spotInstanceType"`
	// The end date of the request.
	ValidUntil *string `pulumi:"validUntil"`
}

// LaunchTemplateInstanceMarketOptionsSpotOptionsInput is an input type that accepts LaunchTemplateInstanceMarketOptionsSpotOptionsArgs and LaunchTemplateInstanceMarketOptionsSpotOptionsOutput values.
// You can construct a concrete instance of `LaunchTemplateInstanceMarketOptionsSpotOptionsInput` via:
//
//          LaunchTemplateInstanceMarketOptionsSpotOptionsArgs{...}
type LaunchTemplateInstanceMarketOptionsSpotOptionsInput interface {
	pulumi.Input

	ToLaunchTemplateInstanceMarketOptionsSpotOptionsOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsOutput
	ToLaunchTemplateInstanceMarketOptionsSpotOptionsOutputWithContext(context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsOutput
}

type LaunchTemplateInstanceMarketOptionsSpotOptionsArgs struct {
	// The required duration in minutes. This value must be a multiple of 60.
	BlockDurationMinutes pulumi.IntPtrInput `pulumi:"blockDurationMinutes"`
	// The behavior when a Spot Instance is interrupted. Can be `hibernate`,
	// `stop`, or `terminate`. (Default: `terminate`).
	InstanceInterruptionBehavior pulumi.StringPtrInput `pulumi:"instanceInterruptionBehavior"`
	// The maximum hourly price you're willing to pay for the Spot Instances.
	MaxPrice pulumi.StringPtrInput `pulumi:"maxPrice"`
	// The Spot Instance request type. Can be `one-time`, or `persistent`.
	SpotInstanceType pulumi.StringPtrInput `pulumi:"spotInstanceType"`
	// The end date of the request.
	ValidUntil pulumi.StringPtrInput `pulumi:"validUntil"`
}

func (LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceMarketOptionsSpotOptions)(nil)).Elem()
}

func (i LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) ToLaunchTemplateInstanceMarketOptionsSpotOptionsOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsOutput {
	return i.ToLaunchTemplateInstanceMarketOptionsSpotOptionsOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) ToLaunchTemplateInstanceMarketOptionsSpotOptionsOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceMarketOptionsSpotOptionsOutput)
}

func (i LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput {
	return i.ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceMarketOptionsSpotOptionsOutput).ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutputWithContext(ctx)
}

// LaunchTemplateInstanceMarketOptionsSpotOptionsPtrInput is an input type that accepts LaunchTemplateInstanceMarketOptionsSpotOptionsArgs, LaunchTemplateInstanceMarketOptionsSpotOptionsPtr and LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput values.
// You can construct a concrete instance of `LaunchTemplateInstanceMarketOptionsSpotOptionsPtrInput` via:
//
//          LaunchTemplateInstanceMarketOptionsSpotOptionsArgs{...}
//
//  or:
//
//          nil
type LaunchTemplateInstanceMarketOptionsSpotOptionsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput
	ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutputWithContext(context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput
}

type launchTemplateInstanceMarketOptionsSpotOptionsPtrType LaunchTemplateInstanceMarketOptionsSpotOptionsArgs

func LaunchTemplateInstanceMarketOptionsSpotOptionsPtr(v *LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) LaunchTemplateInstanceMarketOptionsSpotOptionsPtrInput {
	return (*launchTemplateInstanceMarketOptionsSpotOptionsPtrType)(v)
}

func (*launchTemplateInstanceMarketOptionsSpotOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateInstanceMarketOptionsSpotOptions)(nil)).Elem()
}

func (i *launchTemplateInstanceMarketOptionsSpotOptionsPtrType) ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput {
	return i.ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateInstanceMarketOptionsSpotOptionsPtrType) ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput)
}

type LaunchTemplateInstanceMarketOptionsSpotOptionsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceMarketOptionsSpotOptions)(nil)).Elem()
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) ToLaunchTemplateInstanceMarketOptionsSpotOptionsOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) ToLaunchTemplateInstanceMarketOptionsSpotOptionsOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput {
	return o.ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *LaunchTemplateInstanceMarketOptionsSpotOptions {
		return &v
	}).(LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput)
}

// The required duration in minutes. This value must be a multiple of 60.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) BlockDurationMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *int { return v.BlockDurationMinutes }).(pulumi.IntPtrOutput)
}

// The behavior when a Spot Instance is interrupted. Can be `hibernate`,
// `stop`, or `terminate`. (Default: `terminate`).
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) InstanceInterruptionBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *string { return v.InstanceInterruptionBehavior }).(pulumi.StringPtrOutput)
}

// The maximum hourly price you're willing to pay for the Spot Instances.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) MaxPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *string { return v.MaxPrice }).(pulumi.StringPtrOutput)
}

// The Spot Instance request type. Can be `one-time`, or `persistent`.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) SpotInstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *string { return v.SpotInstanceType }).(pulumi.StringPtrOutput)
}

// The end date of the request.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) ValidUntil() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *string { return v.ValidUntil }).(pulumi.StringPtrOutput)
}

type LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateInstanceMarketOptionsSpotOptions)(nil)).Elem()
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput) ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput) ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput) Elem() LaunchTemplateInstanceMarketOptionsSpotOptionsOutput {
	return o.ApplyT(func(v *LaunchTemplateInstanceMarketOptionsSpotOptions) LaunchTemplateInstanceMarketOptionsSpotOptions {
		return *v
	}).(LaunchTemplateInstanceMarketOptionsSpotOptionsOutput)
}

// The required duration in minutes. This value must be a multiple of 60.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput) BlockDurationMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateInstanceMarketOptionsSpotOptions) *int {
		if v == nil {
			return nil
		}
		return v.BlockDurationMinutes
	}).(pulumi.IntPtrOutput)
}

// The behavior when a Spot Instance is interrupted. Can be `hibernate`,
// `stop`, or `terminate`. (Default: `terminate`).
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput) InstanceInterruptionBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateInstanceMarketOptionsSpotOptions) *string {
		if v == nil {
			return nil
		}
		return v.InstanceInterruptionBehavior
	}).(pulumi.StringPtrOutput)
}

// The maximum hourly price you're willing to pay for the Spot Instances.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput) MaxPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateInstanceMarketOptionsSpotOptions) *string {
		if v == nil {
			return nil
		}
		return v.MaxPrice
	}).(pulumi.StringPtrOutput)
}

// The Spot Instance request type. Can be `one-time`, or `persistent`.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput) SpotInstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateInstanceMarketOptionsSpotOptions) *string {
		if v == nil {
			return nil
		}
		return v.SpotInstanceType
	}).(pulumi.StringPtrOutput)
}

// The end date of the request.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput) ValidUntil() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateInstanceMarketOptionsSpotOptions) *string {
		if v == nil {
			return nil
		}
		return v.ValidUntil
	}).(pulumi.StringPtrOutput)
}

type LaunchTemplateLicenseSpecification struct {
	// ARN of the license configuration.
	LicenseConfigurationArn string `pulumi:"licenseConfigurationArn"`
}

// LaunchTemplateLicenseSpecificationInput is an input type that accepts LaunchTemplateLicenseSpecificationArgs and LaunchTemplateLicenseSpecificationOutput values.
// You can construct a concrete instance of `LaunchTemplateLicenseSpecificationInput` via:
//
//          LaunchTemplateLicenseSpecificationArgs{...}
type LaunchTemplateLicenseSpecificationInput interface {
	pulumi.Input

	ToLaunchTemplateLicenseSpecificationOutput() LaunchTemplateLicenseSpecificationOutput
	ToLaunchTemplateLicenseSpecificationOutputWithContext(context.Context) LaunchTemplateLicenseSpecificationOutput
}

type LaunchTemplateLicenseSpecificationArgs struct {
	// ARN of the license configuration.
	LicenseConfigurationArn pulumi.StringInput `pulumi:"licenseConfigurationArn"`
}

func (LaunchTemplateLicenseSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateLicenseSpecification)(nil)).Elem()
}

func (i LaunchTemplateLicenseSpecificationArgs) ToLaunchTemplateLicenseSpecificationOutput() LaunchTemplateLicenseSpecificationOutput {
	return i.ToLaunchTemplateLicenseSpecificationOutputWithContext(context.Background())
}

func (i LaunchTemplateLicenseSpecificationArgs) ToLaunchTemplateLicenseSpecificationOutputWithContext(ctx context.Context) LaunchTemplateLicenseSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateLicenseSpecificationOutput)
}

// LaunchTemplateLicenseSpecificationArrayInput is an input type that accepts LaunchTemplateLicenseSpecificationArray and LaunchTemplateLicenseSpecificationArrayOutput values.
// You can construct a concrete instance of `LaunchTemplateLicenseSpecificationArrayInput` via:
//
//          LaunchTemplateLicenseSpecificationArray{ LaunchTemplateLicenseSpecificationArgs{...} }
type LaunchTemplateLicenseSpecificationArrayInput interface {
	pulumi.Input

	ToLaunchTemplateLicenseSpecificationArrayOutput() LaunchTemplateLicenseSpecificationArrayOutput
	ToLaunchTemplateLicenseSpecificationArrayOutputWithContext(context.Context) LaunchTemplateLicenseSpecificationArrayOutput
}

type LaunchTemplateLicenseSpecificationArray []LaunchTemplateLicenseSpecificationInput

func (LaunchTemplateLicenseSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateLicenseSpecification)(nil)).Elem()
}

func (i LaunchTemplateLicenseSpecificationArray) ToLaunchTemplateLicenseSpecificationArrayOutput() LaunchTemplateLicenseSpecificationArrayOutput {
	return i.ToLaunchTemplateLicenseSpecificationArrayOutputWithContext(context.Background())
}

func (i LaunchTemplateLicenseSpecificationArray) ToLaunchTemplateLicenseSpecificationArrayOutputWithContext(ctx context.Context) LaunchTemplateLicenseSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateLicenseSpecificationArrayOutput)
}

type LaunchTemplateLicenseSpecificationOutput struct{ *pulumi.OutputState }

func (LaunchTemplateLicenseSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateLicenseSpecification)(nil)).Elem()
}

func (o LaunchTemplateLicenseSpecificationOutput) ToLaunchTemplateLicenseSpecificationOutput() LaunchTemplateLicenseSpecificationOutput {
	return o
}

func (o LaunchTemplateLicenseSpecificationOutput) ToLaunchTemplateLicenseSpecificationOutputWithContext(ctx context.Context) LaunchTemplateLicenseSpecificationOutput {
	return o
}

// ARN of the license configuration.
func (o LaunchTemplateLicenseSpecificationOutput) LicenseConfigurationArn() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchTemplateLicenseSpecification) string { return v.LicenseConfigurationArn }).(pulumi.StringOutput)
}

type LaunchTemplateLicenseSpecificationArrayOutput struct{ *pulumi.OutputState }

func (LaunchTemplateLicenseSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateLicenseSpecification)(nil)).Elem()
}

func (o LaunchTemplateLicenseSpecificationArrayOutput) ToLaunchTemplateLicenseSpecificationArrayOutput() LaunchTemplateLicenseSpecificationArrayOutput {
	return o
}

func (o LaunchTemplateLicenseSpecificationArrayOutput) ToLaunchTemplateLicenseSpecificationArrayOutputWithContext(ctx context.Context) LaunchTemplateLicenseSpecificationArrayOutput {
	return o
}

func (o LaunchTemplateLicenseSpecificationArrayOutput) Index(i pulumi.IntInput) LaunchTemplateLicenseSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchTemplateLicenseSpecification {
		return vs[0].([]LaunchTemplateLicenseSpecification)[vs[1].(int)]
	}).(LaunchTemplateLicenseSpecificationOutput)
}

type LaunchTemplateMetadataOptions struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint *string `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit *int `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens *string `pulumi:"httpTokens"`
}

// LaunchTemplateMetadataOptionsInput is an input type that accepts LaunchTemplateMetadataOptionsArgs and LaunchTemplateMetadataOptionsOutput values.
// You can construct a concrete instance of `LaunchTemplateMetadataOptionsInput` via:
//
//          LaunchTemplateMetadataOptionsArgs{...}
type LaunchTemplateMetadataOptionsInput interface {
	pulumi.Input

	ToLaunchTemplateMetadataOptionsOutput() LaunchTemplateMetadataOptionsOutput
	ToLaunchTemplateMetadataOptionsOutputWithContext(context.Context) LaunchTemplateMetadataOptionsOutput
}

type LaunchTemplateMetadataOptionsArgs struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint pulumi.StringPtrInput `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit pulumi.IntPtrInput `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens pulumi.StringPtrInput `pulumi:"httpTokens"`
}

func (LaunchTemplateMetadataOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateMetadataOptions)(nil)).Elem()
}

func (i LaunchTemplateMetadataOptionsArgs) ToLaunchTemplateMetadataOptionsOutput() LaunchTemplateMetadataOptionsOutput {
	return i.ToLaunchTemplateMetadataOptionsOutputWithContext(context.Background())
}

func (i LaunchTemplateMetadataOptionsArgs) ToLaunchTemplateMetadataOptionsOutputWithContext(ctx context.Context) LaunchTemplateMetadataOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateMetadataOptionsOutput)
}

func (i LaunchTemplateMetadataOptionsArgs) ToLaunchTemplateMetadataOptionsPtrOutput() LaunchTemplateMetadataOptionsPtrOutput {
	return i.ToLaunchTemplateMetadataOptionsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateMetadataOptionsArgs) ToLaunchTemplateMetadataOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateMetadataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateMetadataOptionsOutput).ToLaunchTemplateMetadataOptionsPtrOutputWithContext(ctx)
}

// LaunchTemplateMetadataOptionsPtrInput is an input type that accepts LaunchTemplateMetadataOptionsArgs, LaunchTemplateMetadataOptionsPtr and LaunchTemplateMetadataOptionsPtrOutput values.
// You can construct a concrete instance of `LaunchTemplateMetadataOptionsPtrInput` via:
//
//          LaunchTemplateMetadataOptionsArgs{...}
//
//  or:
//
//          nil
type LaunchTemplateMetadataOptionsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateMetadataOptionsPtrOutput() LaunchTemplateMetadataOptionsPtrOutput
	ToLaunchTemplateMetadataOptionsPtrOutputWithContext(context.Context) LaunchTemplateMetadataOptionsPtrOutput
}

type launchTemplateMetadataOptionsPtrType LaunchTemplateMetadataOptionsArgs

func LaunchTemplateMetadataOptionsPtr(v *LaunchTemplateMetadataOptionsArgs) LaunchTemplateMetadataOptionsPtrInput {
	return (*launchTemplateMetadataOptionsPtrType)(v)
}

func (*launchTemplateMetadataOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateMetadataOptions)(nil)).Elem()
}

func (i *launchTemplateMetadataOptionsPtrType) ToLaunchTemplateMetadataOptionsPtrOutput() LaunchTemplateMetadataOptionsPtrOutput {
	return i.ToLaunchTemplateMetadataOptionsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateMetadataOptionsPtrType) ToLaunchTemplateMetadataOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateMetadataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateMetadataOptionsPtrOutput)
}

type LaunchTemplateMetadataOptionsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateMetadataOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateMetadataOptions)(nil)).Elem()
}

func (o LaunchTemplateMetadataOptionsOutput) ToLaunchTemplateMetadataOptionsOutput() LaunchTemplateMetadataOptionsOutput {
	return o
}

func (o LaunchTemplateMetadataOptionsOutput) ToLaunchTemplateMetadataOptionsOutputWithContext(ctx context.Context) LaunchTemplateMetadataOptionsOutput {
	return o
}

func (o LaunchTemplateMetadataOptionsOutput) ToLaunchTemplateMetadataOptionsPtrOutput() LaunchTemplateMetadataOptionsPtrOutput {
	return o.ToLaunchTemplateMetadataOptionsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateMetadataOptionsOutput) ToLaunchTemplateMetadataOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateMetadataOptionsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMetadataOptions) *LaunchTemplateMetadataOptions {
		return &v
	}).(LaunchTemplateMetadataOptionsPtrOutput)
}

// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
func (o LaunchTemplateMetadataOptionsOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMetadataOptions) *string { return v.HttpEndpoint }).(pulumi.StringPtrOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
func (o LaunchTemplateMetadataOptionsOutput) HttpPutResponseHopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMetadataOptions) *int { return v.HttpPutResponseHopLimit }).(pulumi.IntPtrOutput)
}

// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
func (o LaunchTemplateMetadataOptionsOutput) HttpTokens() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMetadataOptions) *string { return v.HttpTokens }).(pulumi.StringPtrOutput)
}

type LaunchTemplateMetadataOptionsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateMetadataOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateMetadataOptions)(nil)).Elem()
}

func (o LaunchTemplateMetadataOptionsPtrOutput) ToLaunchTemplateMetadataOptionsPtrOutput() LaunchTemplateMetadataOptionsPtrOutput {
	return o
}

func (o LaunchTemplateMetadataOptionsPtrOutput) ToLaunchTemplateMetadataOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateMetadataOptionsPtrOutput {
	return o
}

func (o LaunchTemplateMetadataOptionsPtrOutput) Elem() LaunchTemplateMetadataOptionsOutput {
	return o.ApplyT(func(v *LaunchTemplateMetadataOptions) LaunchTemplateMetadataOptions { return *v }).(LaunchTemplateMetadataOptionsOutput)
}

// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
func (o LaunchTemplateMetadataOptionsPtrOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateMetadataOptions) *string {
		if v == nil {
			return nil
		}
		return v.HttpEndpoint
	}).(pulumi.StringPtrOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
func (o LaunchTemplateMetadataOptionsPtrOutput) HttpPutResponseHopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateMetadataOptions) *int {
		if v == nil {
			return nil
		}
		return v.HttpPutResponseHopLimit
	}).(pulumi.IntPtrOutput)
}

// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
func (o LaunchTemplateMetadataOptionsPtrOutput) HttpTokens() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateMetadataOptions) *string {
		if v == nil {
			return nil
		}
		return v.HttpTokens
	}).(pulumi.StringPtrOutput)
}

type LaunchTemplateMonitoring struct {
	// If `true`, the launched EC2 instance will have detailed monitoring enabled.
	Enabled *bool `pulumi:"enabled"`
}

// LaunchTemplateMonitoringInput is an input type that accepts LaunchTemplateMonitoringArgs and LaunchTemplateMonitoringOutput values.
// You can construct a concrete instance of `LaunchTemplateMonitoringInput` via:
//
//          LaunchTemplateMonitoringArgs{...}
type LaunchTemplateMonitoringInput interface {
	pulumi.Input

	ToLaunchTemplateMonitoringOutput() LaunchTemplateMonitoringOutput
	ToLaunchTemplateMonitoringOutputWithContext(context.Context) LaunchTemplateMonitoringOutput
}

type LaunchTemplateMonitoringArgs struct {
	// If `true`, the launched EC2 instance will have detailed monitoring enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (LaunchTemplateMonitoringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateMonitoring)(nil)).Elem()
}

func (i LaunchTemplateMonitoringArgs) ToLaunchTemplateMonitoringOutput() LaunchTemplateMonitoringOutput {
	return i.ToLaunchTemplateMonitoringOutputWithContext(context.Background())
}

func (i LaunchTemplateMonitoringArgs) ToLaunchTemplateMonitoringOutputWithContext(ctx context.Context) LaunchTemplateMonitoringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateMonitoringOutput)
}

func (i LaunchTemplateMonitoringArgs) ToLaunchTemplateMonitoringPtrOutput() LaunchTemplateMonitoringPtrOutput {
	return i.ToLaunchTemplateMonitoringPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateMonitoringArgs) ToLaunchTemplateMonitoringPtrOutputWithContext(ctx context.Context) LaunchTemplateMonitoringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateMonitoringOutput).ToLaunchTemplateMonitoringPtrOutputWithContext(ctx)
}

// LaunchTemplateMonitoringPtrInput is an input type that accepts LaunchTemplateMonitoringArgs, LaunchTemplateMonitoringPtr and LaunchTemplateMonitoringPtrOutput values.
// You can construct a concrete instance of `LaunchTemplateMonitoringPtrInput` via:
//
//          LaunchTemplateMonitoringArgs{...}
//
//  or:
//
//          nil
type LaunchTemplateMonitoringPtrInput interface {
	pulumi.Input

	ToLaunchTemplateMonitoringPtrOutput() LaunchTemplateMonitoringPtrOutput
	ToLaunchTemplateMonitoringPtrOutputWithContext(context.Context) LaunchTemplateMonitoringPtrOutput
}

type launchTemplateMonitoringPtrType LaunchTemplateMonitoringArgs

func LaunchTemplateMonitoringPtr(v *LaunchTemplateMonitoringArgs) LaunchTemplateMonitoringPtrInput {
	return (*launchTemplateMonitoringPtrType)(v)
}

func (*launchTemplateMonitoringPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateMonitoring)(nil)).Elem()
}

func (i *launchTemplateMonitoringPtrType) ToLaunchTemplateMonitoringPtrOutput() LaunchTemplateMonitoringPtrOutput {
	return i.ToLaunchTemplateMonitoringPtrOutputWithContext(context.Background())
}

func (i *launchTemplateMonitoringPtrType) ToLaunchTemplateMonitoringPtrOutputWithContext(ctx context.Context) LaunchTemplateMonitoringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateMonitoringPtrOutput)
}

type LaunchTemplateMonitoringOutput struct{ *pulumi.OutputState }

func (LaunchTemplateMonitoringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateMonitoring)(nil)).Elem()
}

func (o LaunchTemplateMonitoringOutput) ToLaunchTemplateMonitoringOutput() LaunchTemplateMonitoringOutput {
	return o
}

func (o LaunchTemplateMonitoringOutput) ToLaunchTemplateMonitoringOutputWithContext(ctx context.Context) LaunchTemplateMonitoringOutput {
	return o
}

func (o LaunchTemplateMonitoringOutput) ToLaunchTemplateMonitoringPtrOutput() LaunchTemplateMonitoringPtrOutput {
	return o.ToLaunchTemplateMonitoringPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateMonitoringOutput) ToLaunchTemplateMonitoringPtrOutputWithContext(ctx context.Context) LaunchTemplateMonitoringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMonitoring) *LaunchTemplateMonitoring {
		return &v
	}).(LaunchTemplateMonitoringPtrOutput)
}

// If `true`, the launched EC2 instance will have detailed monitoring enabled.
func (o LaunchTemplateMonitoringOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMonitoring) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type LaunchTemplateMonitoringPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateMonitoringPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateMonitoring)(nil)).Elem()
}

func (o LaunchTemplateMonitoringPtrOutput) ToLaunchTemplateMonitoringPtrOutput() LaunchTemplateMonitoringPtrOutput {
	return o
}

func (o LaunchTemplateMonitoringPtrOutput) ToLaunchTemplateMonitoringPtrOutputWithContext(ctx context.Context) LaunchTemplateMonitoringPtrOutput {
	return o
}

func (o LaunchTemplateMonitoringPtrOutput) Elem() LaunchTemplateMonitoringOutput {
	return o.ApplyT(func(v *LaunchTemplateMonitoring) LaunchTemplateMonitoring { return *v }).(LaunchTemplateMonitoringOutput)
}

// If `true`, the launched EC2 instance will have detailed monitoring enabled.
func (o LaunchTemplateMonitoringPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LaunchTemplateMonitoring) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type LaunchTemplateNetworkInterface struct {
	// Associate a public ip address with the network interface.  Boolean value.
	AssociatePublicIpAddress *string `pulumi:"associatePublicIpAddress"`
	// Whether the network interface should be destroyed on instance termination. Defaults to `false` if not set.
	DeleteOnTermination *string `pulumi:"deleteOnTermination"`
	// Description of the network interface.
	Description *string `pulumi:"description"`
	// The integer index of the network interface attachment.
	DeviceIndex *int `pulumi:"deviceIndex"`
	// The number of secondary private IPv4 addresses to assign to a network interface. Conflicts with `ipv4Addresses`
	Ipv4AddressCount *int `pulumi:"ipv4AddressCount"`
	// One or more private IPv4 addresses to associate. Conflicts with `ipv4AddressCount`
	Ipv4Addresses []string `pulumi:"ipv4Addresses"`
	// The number of IPv6 addresses to assign to a network interface. Conflicts with `ipv6Addresses`
	Ipv6AddressCount *int `pulumi:"ipv6AddressCount"`
	// One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Conflicts with `ipv6AddressCount`
	Ipv6Addresses []string `pulumi:"ipv6Addresses"`
	// The ID of the network interface to attach.
	NetworkInterfaceId *string `pulumi:"networkInterfaceId"`
	// The primary private IPv4 address.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// A list of security group IDs to associate.
	SecurityGroups []string `pulumi:"securityGroups"`
	// The VPC Subnet ID to associate.
	SubnetId *string `pulumi:"subnetId"`
}

// LaunchTemplateNetworkInterfaceInput is an input type that accepts LaunchTemplateNetworkInterfaceArgs and LaunchTemplateNetworkInterfaceOutput values.
// You can construct a concrete instance of `LaunchTemplateNetworkInterfaceInput` via:
//
//          LaunchTemplateNetworkInterfaceArgs{...}
type LaunchTemplateNetworkInterfaceInput interface {
	pulumi.Input

	ToLaunchTemplateNetworkInterfaceOutput() LaunchTemplateNetworkInterfaceOutput
	ToLaunchTemplateNetworkInterfaceOutputWithContext(context.Context) LaunchTemplateNetworkInterfaceOutput
}

type LaunchTemplateNetworkInterfaceArgs struct {
	// Associate a public ip address with the network interface.  Boolean value.
	AssociatePublicIpAddress pulumi.StringPtrInput `pulumi:"associatePublicIpAddress"`
	// Whether the network interface should be destroyed on instance termination. Defaults to `false` if not set.
	DeleteOnTermination pulumi.StringPtrInput `pulumi:"deleteOnTermination"`
	// Description of the network interface.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The integer index of the network interface attachment.
	DeviceIndex pulumi.IntPtrInput `pulumi:"deviceIndex"`
	// The number of secondary private IPv4 addresses to assign to a network interface. Conflicts with `ipv4Addresses`
	Ipv4AddressCount pulumi.IntPtrInput `pulumi:"ipv4AddressCount"`
	// One or more private IPv4 addresses to associate. Conflicts with `ipv4AddressCount`
	Ipv4Addresses pulumi.StringArrayInput `pulumi:"ipv4Addresses"`
	// The number of IPv6 addresses to assign to a network interface. Conflicts with `ipv6Addresses`
	Ipv6AddressCount pulumi.IntPtrInput `pulumi:"ipv6AddressCount"`
	// One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Conflicts with `ipv6AddressCount`
	Ipv6Addresses pulumi.StringArrayInput `pulumi:"ipv6Addresses"`
	// The ID of the network interface to attach.
	NetworkInterfaceId pulumi.StringPtrInput `pulumi:"networkInterfaceId"`
	// The primary private IPv4 address.
	PrivateIpAddress pulumi.StringPtrInput `pulumi:"privateIpAddress"`
	// A list of security group IDs to associate.
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// The VPC Subnet ID to associate.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (LaunchTemplateNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateNetworkInterface)(nil)).Elem()
}

func (i LaunchTemplateNetworkInterfaceArgs) ToLaunchTemplateNetworkInterfaceOutput() LaunchTemplateNetworkInterfaceOutput {
	return i.ToLaunchTemplateNetworkInterfaceOutputWithContext(context.Background())
}

func (i LaunchTemplateNetworkInterfaceArgs) ToLaunchTemplateNetworkInterfaceOutputWithContext(ctx context.Context) LaunchTemplateNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateNetworkInterfaceOutput)
}

// LaunchTemplateNetworkInterfaceArrayInput is an input type that accepts LaunchTemplateNetworkInterfaceArray and LaunchTemplateNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `LaunchTemplateNetworkInterfaceArrayInput` via:
//
//          LaunchTemplateNetworkInterfaceArray{ LaunchTemplateNetworkInterfaceArgs{...} }
type LaunchTemplateNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToLaunchTemplateNetworkInterfaceArrayOutput() LaunchTemplateNetworkInterfaceArrayOutput
	ToLaunchTemplateNetworkInterfaceArrayOutputWithContext(context.Context) LaunchTemplateNetworkInterfaceArrayOutput
}

type LaunchTemplateNetworkInterfaceArray []LaunchTemplateNetworkInterfaceInput

func (LaunchTemplateNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateNetworkInterface)(nil)).Elem()
}

func (i LaunchTemplateNetworkInterfaceArray) ToLaunchTemplateNetworkInterfaceArrayOutput() LaunchTemplateNetworkInterfaceArrayOutput {
	return i.ToLaunchTemplateNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i LaunchTemplateNetworkInterfaceArray) ToLaunchTemplateNetworkInterfaceArrayOutputWithContext(ctx context.Context) LaunchTemplateNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateNetworkInterfaceArrayOutput)
}

type LaunchTemplateNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (LaunchTemplateNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateNetworkInterface)(nil)).Elem()
}

func (o LaunchTemplateNetworkInterfaceOutput) ToLaunchTemplateNetworkInterfaceOutput() LaunchTemplateNetworkInterfaceOutput {
	return o
}

func (o LaunchTemplateNetworkInterfaceOutput) ToLaunchTemplateNetworkInterfaceOutputWithContext(ctx context.Context) LaunchTemplateNetworkInterfaceOutput {
	return o
}

// Associate a public ip address with the network interface.  Boolean value.
func (o LaunchTemplateNetworkInterfaceOutput) AssociatePublicIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) *string { return v.AssociatePublicIpAddress }).(pulumi.StringPtrOutput)
}

// Whether the network interface should be destroyed on instance termination. Defaults to `false` if not set.
func (o LaunchTemplateNetworkInterfaceOutput) DeleteOnTermination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) *string { return v.DeleteOnTermination }).(pulumi.StringPtrOutput)
}

// Description of the network interface.
func (o LaunchTemplateNetworkInterfaceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The integer index of the network interface attachment.
func (o LaunchTemplateNetworkInterfaceOutput) DeviceIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) *int { return v.DeviceIndex }).(pulumi.IntPtrOutput)
}

// The number of secondary private IPv4 addresses to assign to a network interface. Conflicts with `ipv4Addresses`
func (o LaunchTemplateNetworkInterfaceOutput) Ipv4AddressCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) *int { return v.Ipv4AddressCount }).(pulumi.IntPtrOutput)
}

// One or more private IPv4 addresses to associate. Conflicts with `ipv4AddressCount`
func (o LaunchTemplateNetworkInterfaceOutput) Ipv4Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) []string { return v.Ipv4Addresses }).(pulumi.StringArrayOutput)
}

// The number of IPv6 addresses to assign to a network interface. Conflicts with `ipv6Addresses`
func (o LaunchTemplateNetworkInterfaceOutput) Ipv6AddressCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) *int { return v.Ipv6AddressCount }).(pulumi.IntPtrOutput)
}

// One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Conflicts with `ipv6AddressCount`
func (o LaunchTemplateNetworkInterfaceOutput) Ipv6Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) []string { return v.Ipv6Addresses }).(pulumi.StringArrayOutput)
}

// The ID of the network interface to attach.
func (o LaunchTemplateNetworkInterfaceOutput) NetworkInterfaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) *string { return v.NetworkInterfaceId }).(pulumi.StringPtrOutput)
}

// The primary private IPv4 address.
func (o LaunchTemplateNetworkInterfaceOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

// A list of security group IDs to associate.
func (o LaunchTemplateNetworkInterfaceOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// The VPC Subnet ID to associate.
func (o LaunchTemplateNetworkInterfaceOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type LaunchTemplateNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (LaunchTemplateNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateNetworkInterface)(nil)).Elem()
}

func (o LaunchTemplateNetworkInterfaceArrayOutput) ToLaunchTemplateNetworkInterfaceArrayOutput() LaunchTemplateNetworkInterfaceArrayOutput {
	return o
}

func (o LaunchTemplateNetworkInterfaceArrayOutput) ToLaunchTemplateNetworkInterfaceArrayOutputWithContext(ctx context.Context) LaunchTemplateNetworkInterfaceArrayOutput {
	return o
}

func (o LaunchTemplateNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) LaunchTemplateNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchTemplateNetworkInterface {
		return vs[0].([]LaunchTemplateNetworkInterface)[vs[1].(int)]
	}).(LaunchTemplateNetworkInterfaceOutput)
}

type LaunchTemplatePlacement struct {
	// The affinity setting for an instance on a Dedicated Host.
	Affinity *string `pulumi:"affinity"`
	// The Availability Zone for the instance.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The name of the placement group for the instance.
	GroupName *string `pulumi:"groupName"`
	// The ID of the Dedicated Host for the instance.
	HostId *string `pulumi:"hostId"`
	// The number of the partition the instance should launch in. Valid only if the placement group strategy is set to partition.
	PartitionNumber *int `pulumi:"partitionNumber"`
	// Reserved for future use.
	SpreadDomain *string `pulumi:"spreadDomain"`
	// The tenancy of the instance (if the instance is running in a VPC). Can be `default`, `dedicated`, or `host`.
	Tenancy *string `pulumi:"tenancy"`
}

// LaunchTemplatePlacementInput is an input type that accepts LaunchTemplatePlacementArgs and LaunchTemplatePlacementOutput values.
// You can construct a concrete instance of `LaunchTemplatePlacementInput` via:
//
//          LaunchTemplatePlacementArgs{...}
type LaunchTemplatePlacementInput interface {
	pulumi.Input

	ToLaunchTemplatePlacementOutput() LaunchTemplatePlacementOutput
	ToLaunchTemplatePlacementOutputWithContext(context.Context) LaunchTemplatePlacementOutput
}

type LaunchTemplatePlacementArgs struct {
	// The affinity setting for an instance on a Dedicated Host.
	Affinity pulumi.StringPtrInput `pulumi:"affinity"`
	// The Availability Zone for the instance.
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// The name of the placement group for the instance.
	GroupName pulumi.StringPtrInput `pulumi:"groupName"`
	// The ID of the Dedicated Host for the instance.
	HostId pulumi.StringPtrInput `pulumi:"hostId"`
	// The number of the partition the instance should launch in. Valid only if the placement group strategy is set to partition.
	PartitionNumber pulumi.IntPtrInput `pulumi:"partitionNumber"`
	// Reserved for future use.
	SpreadDomain pulumi.StringPtrInput `pulumi:"spreadDomain"`
	// The tenancy of the instance (if the instance is running in a VPC). Can be `default`, `dedicated`, or `host`.
	Tenancy pulumi.StringPtrInput `pulumi:"tenancy"`
}

func (LaunchTemplatePlacementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplatePlacement)(nil)).Elem()
}

func (i LaunchTemplatePlacementArgs) ToLaunchTemplatePlacementOutput() LaunchTemplatePlacementOutput {
	return i.ToLaunchTemplatePlacementOutputWithContext(context.Background())
}

func (i LaunchTemplatePlacementArgs) ToLaunchTemplatePlacementOutputWithContext(ctx context.Context) LaunchTemplatePlacementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplatePlacementOutput)
}

func (i LaunchTemplatePlacementArgs) ToLaunchTemplatePlacementPtrOutput() LaunchTemplatePlacementPtrOutput {
	return i.ToLaunchTemplatePlacementPtrOutputWithContext(context.Background())
}

func (i LaunchTemplatePlacementArgs) ToLaunchTemplatePlacementPtrOutputWithContext(ctx context.Context) LaunchTemplatePlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplatePlacementOutput).ToLaunchTemplatePlacementPtrOutputWithContext(ctx)
}

// LaunchTemplatePlacementPtrInput is an input type that accepts LaunchTemplatePlacementArgs, LaunchTemplatePlacementPtr and LaunchTemplatePlacementPtrOutput values.
// You can construct a concrete instance of `LaunchTemplatePlacementPtrInput` via:
//
//          LaunchTemplatePlacementArgs{...}
//
//  or:
//
//          nil
type LaunchTemplatePlacementPtrInput interface {
	pulumi.Input

	ToLaunchTemplatePlacementPtrOutput() LaunchTemplatePlacementPtrOutput
	ToLaunchTemplatePlacementPtrOutputWithContext(context.Context) LaunchTemplatePlacementPtrOutput
}

type launchTemplatePlacementPtrType LaunchTemplatePlacementArgs

func LaunchTemplatePlacementPtr(v *LaunchTemplatePlacementArgs) LaunchTemplatePlacementPtrInput {
	return (*launchTemplatePlacementPtrType)(v)
}

func (*launchTemplatePlacementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplatePlacement)(nil)).Elem()
}

func (i *launchTemplatePlacementPtrType) ToLaunchTemplatePlacementPtrOutput() LaunchTemplatePlacementPtrOutput {
	return i.ToLaunchTemplatePlacementPtrOutputWithContext(context.Background())
}

func (i *launchTemplatePlacementPtrType) ToLaunchTemplatePlacementPtrOutputWithContext(ctx context.Context) LaunchTemplatePlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplatePlacementPtrOutput)
}

type LaunchTemplatePlacementOutput struct{ *pulumi.OutputState }

func (LaunchTemplatePlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplatePlacement)(nil)).Elem()
}

func (o LaunchTemplatePlacementOutput) ToLaunchTemplatePlacementOutput() LaunchTemplatePlacementOutput {
	return o
}

func (o LaunchTemplatePlacementOutput) ToLaunchTemplatePlacementOutputWithContext(ctx context.Context) LaunchTemplatePlacementOutput {
	return o
}

func (o LaunchTemplatePlacementOutput) ToLaunchTemplatePlacementPtrOutput() LaunchTemplatePlacementPtrOutput {
	return o.ToLaunchTemplatePlacementPtrOutputWithContext(context.Background())
}

func (o LaunchTemplatePlacementOutput) ToLaunchTemplatePlacementPtrOutputWithContext(ctx context.Context) LaunchTemplatePlacementPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *LaunchTemplatePlacement {
		return &v
	}).(LaunchTemplatePlacementPtrOutput)
}

// The affinity setting for an instance on a Dedicated Host.
func (o LaunchTemplatePlacementOutput) Affinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *string { return v.Affinity }).(pulumi.StringPtrOutput)
}

// The Availability Zone for the instance.
func (o LaunchTemplatePlacementOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// The name of the placement group for the instance.
func (o LaunchTemplatePlacementOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *string { return v.GroupName }).(pulumi.StringPtrOutput)
}

// The ID of the Dedicated Host for the instance.
func (o LaunchTemplatePlacementOutput) HostId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *string { return v.HostId }).(pulumi.StringPtrOutput)
}

// The number of the partition the instance should launch in. Valid only if the placement group strategy is set to partition.
func (o LaunchTemplatePlacementOutput) PartitionNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *int { return v.PartitionNumber }).(pulumi.IntPtrOutput)
}

// Reserved for future use.
func (o LaunchTemplatePlacementOutput) SpreadDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *string { return v.SpreadDomain }).(pulumi.StringPtrOutput)
}

// The tenancy of the instance (if the instance is running in a VPC). Can be `default`, `dedicated`, or `host`.
func (o LaunchTemplatePlacementOutput) Tenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *string { return v.Tenancy }).(pulumi.StringPtrOutput)
}

type LaunchTemplatePlacementPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplatePlacementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplatePlacement)(nil)).Elem()
}

func (o LaunchTemplatePlacementPtrOutput) ToLaunchTemplatePlacementPtrOutput() LaunchTemplatePlacementPtrOutput {
	return o
}

func (o LaunchTemplatePlacementPtrOutput) ToLaunchTemplatePlacementPtrOutputWithContext(ctx context.Context) LaunchTemplatePlacementPtrOutput {
	return o
}

func (o LaunchTemplatePlacementPtrOutput) Elem() LaunchTemplatePlacementOutput {
	return o.ApplyT(func(v *LaunchTemplatePlacement) LaunchTemplatePlacement { return *v }).(LaunchTemplatePlacementOutput)
}

// The affinity setting for an instance on a Dedicated Host.
func (o LaunchTemplatePlacementPtrOutput) Affinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplatePlacement) *string {
		if v == nil {
			return nil
		}
		return v.Affinity
	}).(pulumi.StringPtrOutput)
}

// The Availability Zone for the instance.
func (o LaunchTemplatePlacementPtrOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplatePlacement) *string {
		if v == nil {
			return nil
		}
		return v.AvailabilityZone
	}).(pulumi.StringPtrOutput)
}

// The name of the placement group for the instance.
func (o LaunchTemplatePlacementPtrOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplatePlacement) *string {
		if v == nil {
			return nil
		}
		return v.GroupName
	}).(pulumi.StringPtrOutput)
}

// The ID of the Dedicated Host for the instance.
func (o LaunchTemplatePlacementPtrOutput) HostId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplatePlacement) *string {
		if v == nil {
			return nil
		}
		return v.HostId
	}).(pulumi.StringPtrOutput)
}

// The number of the partition the instance should launch in. Valid only if the placement group strategy is set to partition.
func (o LaunchTemplatePlacementPtrOutput) PartitionNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LaunchTemplatePlacement) *int {
		if v == nil {
			return nil
		}
		return v.PartitionNumber
	}).(pulumi.IntPtrOutput)
}

// Reserved for future use.
func (o LaunchTemplatePlacementPtrOutput) SpreadDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplatePlacement) *string {
		if v == nil {
			return nil
		}
		return v.SpreadDomain
	}).(pulumi.StringPtrOutput)
}

// The tenancy of the instance (if the instance is running in a VPC). Can be `default`, `dedicated`, or `host`.
func (o LaunchTemplatePlacementPtrOutput) Tenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplatePlacement) *string {
		if v == nil {
			return nil
		}
		return v.Tenancy
	}).(pulumi.StringPtrOutput)
}

type LaunchTemplateTagSpecification struct {
	// The type of resource to tag. Valid values are `instance` and `volume`.
	ResourceType *string `pulumi:"resourceType"`
	// A map of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}

// LaunchTemplateTagSpecificationInput is an input type that accepts LaunchTemplateTagSpecificationArgs and LaunchTemplateTagSpecificationOutput values.
// You can construct a concrete instance of `LaunchTemplateTagSpecificationInput` via:
//
//          LaunchTemplateTagSpecificationArgs{...}
type LaunchTemplateTagSpecificationInput interface {
	pulumi.Input

	ToLaunchTemplateTagSpecificationOutput() LaunchTemplateTagSpecificationOutput
	ToLaunchTemplateTagSpecificationOutputWithContext(context.Context) LaunchTemplateTagSpecificationOutput
}

type LaunchTemplateTagSpecificationArgs struct {
	// The type of resource to tag. Valid values are `instance` and `volume`.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// A map of tags to assign to the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LaunchTemplateTagSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateTagSpecification)(nil)).Elem()
}

func (i LaunchTemplateTagSpecificationArgs) ToLaunchTemplateTagSpecificationOutput() LaunchTemplateTagSpecificationOutput {
	return i.ToLaunchTemplateTagSpecificationOutputWithContext(context.Background())
}

func (i LaunchTemplateTagSpecificationArgs) ToLaunchTemplateTagSpecificationOutputWithContext(ctx context.Context) LaunchTemplateTagSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateTagSpecificationOutput)
}

// LaunchTemplateTagSpecificationArrayInput is an input type that accepts LaunchTemplateTagSpecificationArray and LaunchTemplateTagSpecificationArrayOutput values.
// You can construct a concrete instance of `LaunchTemplateTagSpecificationArrayInput` via:
//
//          LaunchTemplateTagSpecificationArray{ LaunchTemplateTagSpecificationArgs{...} }
type LaunchTemplateTagSpecificationArrayInput interface {
	pulumi.Input

	ToLaunchTemplateTagSpecificationArrayOutput() LaunchTemplateTagSpecificationArrayOutput
	ToLaunchTemplateTagSpecificationArrayOutputWithContext(context.Context) LaunchTemplateTagSpecificationArrayOutput
}

type LaunchTemplateTagSpecificationArray []LaunchTemplateTagSpecificationInput

func (LaunchTemplateTagSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateTagSpecification)(nil)).Elem()
}

func (i LaunchTemplateTagSpecificationArray) ToLaunchTemplateTagSpecificationArrayOutput() LaunchTemplateTagSpecificationArrayOutput {
	return i.ToLaunchTemplateTagSpecificationArrayOutputWithContext(context.Background())
}

func (i LaunchTemplateTagSpecificationArray) ToLaunchTemplateTagSpecificationArrayOutputWithContext(ctx context.Context) LaunchTemplateTagSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateTagSpecificationArrayOutput)
}

type LaunchTemplateTagSpecificationOutput struct{ *pulumi.OutputState }

func (LaunchTemplateTagSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateTagSpecification)(nil)).Elem()
}

func (o LaunchTemplateTagSpecificationOutput) ToLaunchTemplateTagSpecificationOutput() LaunchTemplateTagSpecificationOutput {
	return o
}

func (o LaunchTemplateTagSpecificationOutput) ToLaunchTemplateTagSpecificationOutputWithContext(ctx context.Context) LaunchTemplateTagSpecificationOutput {
	return o
}

// The type of resource to tag. Valid values are `instance` and `volume`.
func (o LaunchTemplateTagSpecificationOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateTagSpecification) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// A map of tags to assign to the resource.
func (o LaunchTemplateTagSpecificationOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LaunchTemplateTagSpecification) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type LaunchTemplateTagSpecificationArrayOutput struct{ *pulumi.OutputState }

func (LaunchTemplateTagSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateTagSpecification)(nil)).Elem()
}

func (o LaunchTemplateTagSpecificationArrayOutput) ToLaunchTemplateTagSpecificationArrayOutput() LaunchTemplateTagSpecificationArrayOutput {
	return o
}

func (o LaunchTemplateTagSpecificationArrayOutput) ToLaunchTemplateTagSpecificationArrayOutputWithContext(ctx context.Context) LaunchTemplateTagSpecificationArrayOutput {
	return o
}

func (o LaunchTemplateTagSpecificationArrayOutput) Index(i pulumi.IntInput) LaunchTemplateTagSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchTemplateTagSpecification {
		return vs[0].([]LaunchTemplateTagSpecification)[vs[1].(int)]
	}).(LaunchTemplateTagSpecificationOutput)
}

type NetworkAclEgress struct {
	// The action to take.
	Action string `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort int `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode *int `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType *int `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol string `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo int `pulumi:"ruleNo"`
	// The to port to match.
	ToPort int `pulumi:"toPort"`
}

// NetworkAclEgressInput is an input type that accepts NetworkAclEgressArgs and NetworkAclEgressOutput values.
// You can construct a concrete instance of `NetworkAclEgressInput` via:
//
//          NetworkAclEgressArgs{...}
type NetworkAclEgressInput interface {
	pulumi.Input

	ToNetworkAclEgressOutput() NetworkAclEgressOutput
	ToNetworkAclEgressOutputWithContext(context.Context) NetworkAclEgressOutput
}

type NetworkAclEgressArgs struct {
	// The action to take.
	Action pulumi.StringInput `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode pulumi.IntPtrInput `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType pulumi.IntPtrInput `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo pulumi.IntInput `pulumi:"ruleNo"`
	// The to port to match.
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (NetworkAclEgressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclEgress)(nil)).Elem()
}

func (i NetworkAclEgressArgs) ToNetworkAclEgressOutput() NetworkAclEgressOutput {
	return i.ToNetworkAclEgressOutputWithContext(context.Background())
}

func (i NetworkAclEgressArgs) ToNetworkAclEgressOutputWithContext(ctx context.Context) NetworkAclEgressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclEgressOutput)
}

// NetworkAclEgressArrayInput is an input type that accepts NetworkAclEgressArray and NetworkAclEgressArrayOutput values.
// You can construct a concrete instance of `NetworkAclEgressArrayInput` via:
//
//          NetworkAclEgressArray{ NetworkAclEgressArgs{...} }
type NetworkAclEgressArrayInput interface {
	pulumi.Input

	ToNetworkAclEgressArrayOutput() NetworkAclEgressArrayOutput
	ToNetworkAclEgressArrayOutputWithContext(context.Context) NetworkAclEgressArrayOutput
}

type NetworkAclEgressArray []NetworkAclEgressInput

func (NetworkAclEgressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclEgress)(nil)).Elem()
}

func (i NetworkAclEgressArray) ToNetworkAclEgressArrayOutput() NetworkAclEgressArrayOutput {
	return i.ToNetworkAclEgressArrayOutputWithContext(context.Background())
}

func (i NetworkAclEgressArray) ToNetworkAclEgressArrayOutputWithContext(ctx context.Context) NetworkAclEgressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclEgressArrayOutput)
}

type NetworkAclEgressOutput struct{ *pulumi.OutputState }

func (NetworkAclEgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclEgress)(nil)).Elem()
}

func (o NetworkAclEgressOutput) ToNetworkAclEgressOutput() NetworkAclEgressOutput {
	return o
}

func (o NetworkAclEgressOutput) ToNetworkAclEgressOutputWithContext(ctx context.Context) NetworkAclEgressOutput {
	return o
}

// The action to take.
func (o NetworkAclEgressOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclEgress) string { return v.Action }).(pulumi.StringOutput)
}

// The CIDR block to match. This must be a
// valid network mask.
func (o NetworkAclEgressOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEgress) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// The from port to match.
func (o NetworkAclEgressOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclEgress) int { return v.FromPort }).(pulumi.IntOutput)
}

// The ICMP type code to be used. Default 0.
func (o NetworkAclEgressOutput) IcmpCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAclEgress) *int { return v.IcmpCode }).(pulumi.IntPtrOutput)
}

// The ICMP type to be used. Default 0.
func (o NetworkAclEgressOutput) IcmpType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAclEgress) *int { return v.IcmpType }).(pulumi.IntPtrOutput)
}

// The IPv6 CIDR block.
func (o NetworkAclEgressOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEgress) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// The protocol to match. If using the -1 'all'
// protocol, you must specify a from and to port of 0.
func (o NetworkAclEgressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclEgress) string { return v.Protocol }).(pulumi.StringOutput)
}

// The rule number. Used for ordering.
func (o NetworkAclEgressOutput) RuleNo() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclEgress) int { return v.RuleNo }).(pulumi.IntOutput)
}

// The to port to match.
func (o NetworkAclEgressOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclEgress) int { return v.ToPort }).(pulumi.IntOutput)
}

type NetworkAclEgressArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclEgressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclEgress)(nil)).Elem()
}

func (o NetworkAclEgressArrayOutput) ToNetworkAclEgressArrayOutput() NetworkAclEgressArrayOutput {
	return o
}

func (o NetworkAclEgressArrayOutput) ToNetworkAclEgressArrayOutputWithContext(ctx context.Context) NetworkAclEgressArrayOutput {
	return o
}

func (o NetworkAclEgressArrayOutput) Index(i pulumi.IntInput) NetworkAclEgressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclEgress {
		return vs[0].([]NetworkAclEgress)[vs[1].(int)]
	}).(NetworkAclEgressOutput)
}

type NetworkAclIngress struct {
	// The action to take.
	Action string `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort int `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode *int `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType *int `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol string `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo int `pulumi:"ruleNo"`
	// The to port to match.
	ToPort int `pulumi:"toPort"`
}

// NetworkAclIngressInput is an input type that accepts NetworkAclIngressArgs and NetworkAclIngressOutput values.
// You can construct a concrete instance of `NetworkAclIngressInput` via:
//
//          NetworkAclIngressArgs{...}
type NetworkAclIngressInput interface {
	pulumi.Input

	ToNetworkAclIngressOutput() NetworkAclIngressOutput
	ToNetworkAclIngressOutputWithContext(context.Context) NetworkAclIngressOutput
}

type NetworkAclIngressArgs struct {
	// The action to take.
	Action pulumi.StringInput `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode pulumi.IntPtrInput `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType pulumi.IntPtrInput `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo pulumi.IntInput `pulumi:"ruleNo"`
	// The to port to match.
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (NetworkAclIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclIngress)(nil)).Elem()
}

func (i NetworkAclIngressArgs) ToNetworkAclIngressOutput() NetworkAclIngressOutput {
	return i.ToNetworkAclIngressOutputWithContext(context.Background())
}

func (i NetworkAclIngressArgs) ToNetworkAclIngressOutputWithContext(ctx context.Context) NetworkAclIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclIngressOutput)
}

// NetworkAclIngressArrayInput is an input type that accepts NetworkAclIngressArray and NetworkAclIngressArrayOutput values.
// You can construct a concrete instance of `NetworkAclIngressArrayInput` via:
//
//          NetworkAclIngressArray{ NetworkAclIngressArgs{...} }
type NetworkAclIngressArrayInput interface {
	pulumi.Input

	ToNetworkAclIngressArrayOutput() NetworkAclIngressArrayOutput
	ToNetworkAclIngressArrayOutputWithContext(context.Context) NetworkAclIngressArrayOutput
}

type NetworkAclIngressArray []NetworkAclIngressInput

func (NetworkAclIngressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclIngress)(nil)).Elem()
}

func (i NetworkAclIngressArray) ToNetworkAclIngressArrayOutput() NetworkAclIngressArrayOutput {
	return i.ToNetworkAclIngressArrayOutputWithContext(context.Background())
}

func (i NetworkAclIngressArray) ToNetworkAclIngressArrayOutputWithContext(ctx context.Context) NetworkAclIngressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclIngressArrayOutput)
}

type NetworkAclIngressOutput struct{ *pulumi.OutputState }

func (NetworkAclIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclIngress)(nil)).Elem()
}

func (o NetworkAclIngressOutput) ToNetworkAclIngressOutput() NetworkAclIngressOutput {
	return o
}

func (o NetworkAclIngressOutput) ToNetworkAclIngressOutputWithContext(ctx context.Context) NetworkAclIngressOutput {
	return o
}

// The action to take.
func (o NetworkAclIngressOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclIngress) string { return v.Action }).(pulumi.StringOutput)
}

// The CIDR block to match. This must be a
// valid network mask.
func (o NetworkAclIngressOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclIngress) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// The from port to match.
func (o NetworkAclIngressOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclIngress) int { return v.FromPort }).(pulumi.IntOutput)
}

// The ICMP type code to be used. Default 0.
func (o NetworkAclIngressOutput) IcmpCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAclIngress) *int { return v.IcmpCode }).(pulumi.IntPtrOutput)
}

// The ICMP type to be used. Default 0.
func (o NetworkAclIngressOutput) IcmpType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAclIngress) *int { return v.IcmpType }).(pulumi.IntPtrOutput)
}

// The IPv6 CIDR block.
func (o NetworkAclIngressOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclIngress) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// The protocol to match. If using the -1 'all'
// protocol, you must specify a from and to port of 0.
func (o NetworkAclIngressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclIngress) string { return v.Protocol }).(pulumi.StringOutput)
}

// The rule number. Used for ordering.
func (o NetworkAclIngressOutput) RuleNo() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclIngress) int { return v.RuleNo }).(pulumi.IntOutput)
}

// The to port to match.
func (o NetworkAclIngressOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclIngress) int { return v.ToPort }).(pulumi.IntOutput)
}

type NetworkAclIngressArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclIngressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclIngress)(nil)).Elem()
}

func (o NetworkAclIngressArrayOutput) ToNetworkAclIngressArrayOutput() NetworkAclIngressArrayOutput {
	return o
}

func (o NetworkAclIngressArrayOutput) ToNetworkAclIngressArrayOutputWithContext(ctx context.Context) NetworkAclIngressArrayOutput {
	return o
}

func (o NetworkAclIngressArrayOutput) Index(i pulumi.IntInput) NetworkAclIngressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclIngress {
		return vs[0].([]NetworkAclIngress)[vs[1].(int)]
	}).(NetworkAclIngressOutput)
}

type NetworkInterfaceAttachmentType struct {
	AttachmentId *string `pulumi:"attachmentId"`
	// Integer to define the devices index.
	DeviceIndex int `pulumi:"deviceIndex"`
	// ID of the instance to attach to.
	Instance string `pulumi:"instance"`
}

// NetworkInterfaceAttachmentTypeInput is an input type that accepts NetworkInterfaceAttachmentTypeArgs and NetworkInterfaceAttachmentTypeOutput values.
// You can construct a concrete instance of `NetworkInterfaceAttachmentTypeInput` via:
//
//          NetworkInterfaceAttachmentTypeArgs{...}
type NetworkInterfaceAttachmentTypeInput interface {
	pulumi.Input

	ToNetworkInterfaceAttachmentTypeOutput() NetworkInterfaceAttachmentTypeOutput
	ToNetworkInterfaceAttachmentTypeOutputWithContext(context.Context) NetworkInterfaceAttachmentTypeOutput
}

type NetworkInterfaceAttachmentTypeArgs struct {
	AttachmentId pulumi.StringPtrInput `pulumi:"attachmentId"`
	// Integer to define the devices index.
	DeviceIndex pulumi.IntInput `pulumi:"deviceIndex"`
	// ID of the instance to attach to.
	Instance pulumi.StringInput `pulumi:"instance"`
}

func (NetworkInterfaceAttachmentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceAttachmentType)(nil)).Elem()
}

func (i NetworkInterfaceAttachmentTypeArgs) ToNetworkInterfaceAttachmentTypeOutput() NetworkInterfaceAttachmentTypeOutput {
	return i.ToNetworkInterfaceAttachmentTypeOutputWithContext(context.Background())
}

func (i NetworkInterfaceAttachmentTypeArgs) ToNetworkInterfaceAttachmentTypeOutputWithContext(ctx context.Context) NetworkInterfaceAttachmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceAttachmentTypeOutput)
}

// NetworkInterfaceAttachmentTypeArrayInput is an input type that accepts NetworkInterfaceAttachmentTypeArray and NetworkInterfaceAttachmentTypeArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceAttachmentTypeArrayInput` via:
//
//          NetworkInterfaceAttachmentTypeArray{ NetworkInterfaceAttachmentTypeArgs{...} }
type NetworkInterfaceAttachmentTypeArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceAttachmentTypeArrayOutput() NetworkInterfaceAttachmentTypeArrayOutput
	ToNetworkInterfaceAttachmentTypeArrayOutputWithContext(context.Context) NetworkInterfaceAttachmentTypeArrayOutput
}

type NetworkInterfaceAttachmentTypeArray []NetworkInterfaceAttachmentTypeInput

func (NetworkInterfaceAttachmentTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceAttachmentType)(nil)).Elem()
}

func (i NetworkInterfaceAttachmentTypeArray) ToNetworkInterfaceAttachmentTypeArrayOutput() NetworkInterfaceAttachmentTypeArrayOutput {
	return i.ToNetworkInterfaceAttachmentTypeArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceAttachmentTypeArray) ToNetworkInterfaceAttachmentTypeArrayOutputWithContext(ctx context.Context) NetworkInterfaceAttachmentTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceAttachmentTypeArrayOutput)
}

type NetworkInterfaceAttachmentTypeOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceAttachmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceAttachmentType)(nil)).Elem()
}

func (o NetworkInterfaceAttachmentTypeOutput) ToNetworkInterfaceAttachmentTypeOutput() NetworkInterfaceAttachmentTypeOutput {
	return o
}

func (o NetworkInterfaceAttachmentTypeOutput) ToNetworkInterfaceAttachmentTypeOutputWithContext(ctx context.Context) NetworkInterfaceAttachmentTypeOutput {
	return o
}

func (o NetworkInterfaceAttachmentTypeOutput) AttachmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceAttachmentType) *string { return v.AttachmentId }).(pulumi.StringPtrOutput)
}

// Integer to define the devices index.
func (o NetworkInterfaceAttachmentTypeOutput) DeviceIndex() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkInterfaceAttachmentType) int { return v.DeviceIndex }).(pulumi.IntOutput)
}

// ID of the instance to attach to.
func (o NetworkInterfaceAttachmentTypeOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceAttachmentType) string { return v.Instance }).(pulumi.StringOutput)
}

type NetworkInterfaceAttachmentTypeArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceAttachmentTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceAttachmentType)(nil)).Elem()
}

func (o NetworkInterfaceAttachmentTypeArrayOutput) ToNetworkInterfaceAttachmentTypeArrayOutput() NetworkInterfaceAttachmentTypeArrayOutput {
	return o
}

func (o NetworkInterfaceAttachmentTypeArrayOutput) ToNetworkInterfaceAttachmentTypeArrayOutputWithContext(ctx context.Context) NetworkInterfaceAttachmentTypeArrayOutput {
	return o
}

func (o NetworkInterfaceAttachmentTypeArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceAttachmentTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceAttachmentType {
		return vs[0].([]NetworkInterfaceAttachmentType)[vs[1].(int)]
	}).(NetworkInterfaceAttachmentTypeOutput)
}

type PeeringConnectionOptionsAccepter struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC. This option is not supported for inter-region VPC peering.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection. This option is not supported for inter-region VPC peering.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

// PeeringConnectionOptionsAccepterInput is an input type that accepts PeeringConnectionOptionsAccepterArgs and PeeringConnectionOptionsAccepterOutput values.
// You can construct a concrete instance of `PeeringConnectionOptionsAccepterInput` via:
//
//          PeeringConnectionOptionsAccepterArgs{...}
type PeeringConnectionOptionsAccepterInput interface {
	pulumi.Input

	ToPeeringConnectionOptionsAccepterOutput() PeeringConnectionOptionsAccepterOutput
	ToPeeringConnectionOptionsAccepterOutputWithContext(context.Context) PeeringConnectionOptionsAccepterOutput
}

type PeeringConnectionOptionsAccepterArgs struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC. This option is not supported for inter-region VPC peering.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection. This option is not supported for inter-region VPC peering.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (PeeringConnectionOptionsAccepterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringConnectionOptionsAccepter)(nil)).Elem()
}

func (i PeeringConnectionOptionsAccepterArgs) ToPeeringConnectionOptionsAccepterOutput() PeeringConnectionOptionsAccepterOutput {
	return i.ToPeeringConnectionOptionsAccepterOutputWithContext(context.Background())
}

func (i PeeringConnectionOptionsAccepterArgs) ToPeeringConnectionOptionsAccepterOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsAccepterOutput)
}

func (i PeeringConnectionOptionsAccepterArgs) ToPeeringConnectionOptionsAccepterPtrOutput() PeeringConnectionOptionsAccepterPtrOutput {
	return i.ToPeeringConnectionOptionsAccepterPtrOutputWithContext(context.Background())
}

func (i PeeringConnectionOptionsAccepterArgs) ToPeeringConnectionOptionsAccepterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsAccepterOutput).ToPeeringConnectionOptionsAccepterPtrOutputWithContext(ctx)
}

// PeeringConnectionOptionsAccepterPtrInput is an input type that accepts PeeringConnectionOptionsAccepterArgs, PeeringConnectionOptionsAccepterPtr and PeeringConnectionOptionsAccepterPtrOutput values.
// You can construct a concrete instance of `PeeringConnectionOptionsAccepterPtrInput` via:
//
//          PeeringConnectionOptionsAccepterArgs{...}
//
//  or:
//
//          nil
type PeeringConnectionOptionsAccepterPtrInput interface {
	pulumi.Input

	ToPeeringConnectionOptionsAccepterPtrOutput() PeeringConnectionOptionsAccepterPtrOutput
	ToPeeringConnectionOptionsAccepterPtrOutputWithContext(context.Context) PeeringConnectionOptionsAccepterPtrOutput
}

type peeringConnectionOptionsAccepterPtrType PeeringConnectionOptionsAccepterArgs

func PeeringConnectionOptionsAccepterPtr(v *PeeringConnectionOptionsAccepterArgs) PeeringConnectionOptionsAccepterPtrInput {
	return (*peeringConnectionOptionsAccepterPtrType)(v)
}

func (*peeringConnectionOptionsAccepterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringConnectionOptionsAccepter)(nil)).Elem()
}

func (i *peeringConnectionOptionsAccepterPtrType) ToPeeringConnectionOptionsAccepterPtrOutput() PeeringConnectionOptionsAccepterPtrOutput {
	return i.ToPeeringConnectionOptionsAccepterPtrOutputWithContext(context.Background())
}

func (i *peeringConnectionOptionsAccepterPtrType) ToPeeringConnectionOptionsAccepterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsAccepterPtrOutput)
}

type PeeringConnectionOptionsAccepterOutput struct{ *pulumi.OutputState }

func (PeeringConnectionOptionsAccepterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringConnectionOptionsAccepter)(nil)).Elem()
}

func (o PeeringConnectionOptionsAccepterOutput) ToPeeringConnectionOptionsAccepterOutput() PeeringConnectionOptionsAccepterOutput {
	return o
}

func (o PeeringConnectionOptionsAccepterOutput) ToPeeringConnectionOptionsAccepterOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterOutput {
	return o
}

func (o PeeringConnectionOptionsAccepterOutput) ToPeeringConnectionOptionsAccepterPtrOutput() PeeringConnectionOptionsAccepterPtrOutput {
	return o.ToPeeringConnectionOptionsAccepterPtrOutputWithContext(context.Background())
}

func (o PeeringConnectionOptionsAccepterOutput) ToPeeringConnectionOptionsAccepterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsAccepter) *PeeringConnectionOptionsAccepter {
		return &v
	}).(PeeringConnectionOptionsAccepterPtrOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsAccepterOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsAccepter) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC.
func (o PeeringConnectionOptionsAccepterOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsAccepter) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsAccepterOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsAccepter) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type PeeringConnectionOptionsAccepterPtrOutput struct{ *pulumi.OutputState }

func (PeeringConnectionOptionsAccepterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringConnectionOptionsAccepter)(nil)).Elem()
}

func (o PeeringConnectionOptionsAccepterPtrOutput) ToPeeringConnectionOptionsAccepterPtrOutput() PeeringConnectionOptionsAccepterPtrOutput {
	return o
}

func (o PeeringConnectionOptionsAccepterPtrOutput) ToPeeringConnectionOptionsAccepterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterPtrOutput {
	return o
}

func (o PeeringConnectionOptionsAccepterPtrOutput) Elem() PeeringConnectionOptionsAccepterOutput {
	return o.ApplyT(func(v *PeeringConnectionOptionsAccepter) PeeringConnectionOptionsAccepter { return *v }).(PeeringConnectionOptionsAccepterOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsAccepterPtrOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PeeringConnectionOptionsAccepter) *bool {
		if v == nil {
			return nil
		}
		return v.AllowClassicLinkToRemoteVpc
	}).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC.
func (o PeeringConnectionOptionsAccepterPtrOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PeeringConnectionOptionsAccepter) *bool {
		if v == nil {
			return nil
		}
		return v.AllowRemoteVpcDnsResolution
	}).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsAccepterPtrOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PeeringConnectionOptionsAccepter) *bool {
		if v == nil {
			return nil
		}
		return v.AllowVpcToRemoteClassicLink
	}).(pulumi.BoolPtrOutput)
}

type PeeringConnectionOptionsRequester struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC. This option is not supported for inter-region VPC peering.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection. This option is not supported for inter-region VPC peering.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

// PeeringConnectionOptionsRequesterInput is an input type that accepts PeeringConnectionOptionsRequesterArgs and PeeringConnectionOptionsRequesterOutput values.
// You can construct a concrete instance of `PeeringConnectionOptionsRequesterInput` via:
//
//          PeeringConnectionOptionsRequesterArgs{...}
type PeeringConnectionOptionsRequesterInput interface {
	pulumi.Input

	ToPeeringConnectionOptionsRequesterOutput() PeeringConnectionOptionsRequesterOutput
	ToPeeringConnectionOptionsRequesterOutputWithContext(context.Context) PeeringConnectionOptionsRequesterOutput
}

type PeeringConnectionOptionsRequesterArgs struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC. This option is not supported for inter-region VPC peering.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection. This option is not supported for inter-region VPC peering.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (PeeringConnectionOptionsRequesterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringConnectionOptionsRequester)(nil)).Elem()
}

func (i PeeringConnectionOptionsRequesterArgs) ToPeeringConnectionOptionsRequesterOutput() PeeringConnectionOptionsRequesterOutput {
	return i.ToPeeringConnectionOptionsRequesterOutputWithContext(context.Background())
}

func (i PeeringConnectionOptionsRequesterArgs) ToPeeringConnectionOptionsRequesterOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsRequesterOutput)
}

func (i PeeringConnectionOptionsRequesterArgs) ToPeeringConnectionOptionsRequesterPtrOutput() PeeringConnectionOptionsRequesterPtrOutput {
	return i.ToPeeringConnectionOptionsRequesterPtrOutputWithContext(context.Background())
}

func (i PeeringConnectionOptionsRequesterArgs) ToPeeringConnectionOptionsRequesterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsRequesterOutput).ToPeeringConnectionOptionsRequesterPtrOutputWithContext(ctx)
}

// PeeringConnectionOptionsRequesterPtrInput is an input type that accepts PeeringConnectionOptionsRequesterArgs, PeeringConnectionOptionsRequesterPtr and PeeringConnectionOptionsRequesterPtrOutput values.
// You can construct a concrete instance of `PeeringConnectionOptionsRequesterPtrInput` via:
//
//          PeeringConnectionOptionsRequesterArgs{...}
//
//  or:
//
//          nil
type PeeringConnectionOptionsRequesterPtrInput interface {
	pulumi.Input

	ToPeeringConnectionOptionsRequesterPtrOutput() PeeringConnectionOptionsRequesterPtrOutput
	ToPeeringConnectionOptionsRequesterPtrOutputWithContext(context.Context) PeeringConnectionOptionsRequesterPtrOutput
}

type peeringConnectionOptionsRequesterPtrType PeeringConnectionOptionsRequesterArgs

func PeeringConnectionOptionsRequesterPtr(v *PeeringConnectionOptionsRequesterArgs) PeeringConnectionOptionsRequesterPtrInput {
	return (*peeringConnectionOptionsRequesterPtrType)(v)
}

func (*peeringConnectionOptionsRequesterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringConnectionOptionsRequester)(nil)).Elem()
}

func (i *peeringConnectionOptionsRequesterPtrType) ToPeeringConnectionOptionsRequesterPtrOutput() PeeringConnectionOptionsRequesterPtrOutput {
	return i.ToPeeringConnectionOptionsRequesterPtrOutputWithContext(context.Background())
}

func (i *peeringConnectionOptionsRequesterPtrType) ToPeeringConnectionOptionsRequesterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsRequesterPtrOutput)
}

type PeeringConnectionOptionsRequesterOutput struct{ *pulumi.OutputState }

func (PeeringConnectionOptionsRequesterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringConnectionOptionsRequester)(nil)).Elem()
}

func (o PeeringConnectionOptionsRequesterOutput) ToPeeringConnectionOptionsRequesterOutput() PeeringConnectionOptionsRequesterOutput {
	return o
}

func (o PeeringConnectionOptionsRequesterOutput) ToPeeringConnectionOptionsRequesterOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterOutput {
	return o
}

func (o PeeringConnectionOptionsRequesterOutput) ToPeeringConnectionOptionsRequesterPtrOutput() PeeringConnectionOptionsRequesterPtrOutput {
	return o.ToPeeringConnectionOptionsRequesterPtrOutputWithContext(context.Background())
}

func (o PeeringConnectionOptionsRequesterOutput) ToPeeringConnectionOptionsRequesterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsRequester) *PeeringConnectionOptionsRequester {
		return &v
	}).(PeeringConnectionOptionsRequesterPtrOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsRequesterOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsRequester) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC.
func (o PeeringConnectionOptionsRequesterOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsRequester) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsRequesterOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsRequester) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type PeeringConnectionOptionsRequesterPtrOutput struct{ *pulumi.OutputState }

func (PeeringConnectionOptionsRequesterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringConnectionOptionsRequester)(nil)).Elem()
}

func (o PeeringConnectionOptionsRequesterPtrOutput) ToPeeringConnectionOptionsRequesterPtrOutput() PeeringConnectionOptionsRequesterPtrOutput {
	return o
}

func (o PeeringConnectionOptionsRequesterPtrOutput) ToPeeringConnectionOptionsRequesterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterPtrOutput {
	return o
}

func (o PeeringConnectionOptionsRequesterPtrOutput) Elem() PeeringConnectionOptionsRequesterOutput {
	return o.ApplyT(func(v *PeeringConnectionOptionsRequester) PeeringConnectionOptionsRequester { return *v }).(PeeringConnectionOptionsRequesterOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsRequesterPtrOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PeeringConnectionOptionsRequester) *bool {
		if v == nil {
			return nil
		}
		return v.AllowClassicLinkToRemoteVpc
	}).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC.
func (o PeeringConnectionOptionsRequesterPtrOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PeeringConnectionOptionsRequester) *bool {
		if v == nil {
			return nil
		}
		return v.AllowRemoteVpcDnsResolution
	}).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsRequesterPtrOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PeeringConnectionOptionsRequester) *bool {
		if v == nil {
			return nil
		}
		return v.AllowVpcToRemoteClassicLink
	}).(pulumi.BoolPtrOutput)
}

type RouteTableRoute struct {
	// The CIDR block of the route.
	CidrBlock *string `pulumi:"cidrBlock"`
	// Identifier of a VPC Egress Only Internet Gateway.
	EgressOnlyGatewayId *string `pulumi:"egressOnlyGatewayId"`
	// Identifier of a VPC internet gateway or a virtual private gateway.
	GatewayId *string `pulumi:"gatewayId"`
	// Identifier of an EC2 instance.
	InstanceId *string `pulumi:"instanceId"`
	// The Ipv6 CIDR block of the route.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// Identifier of a VPC NAT gateway.
	NatGatewayId *string `pulumi:"natGatewayId"`
	// Identifier of an EC2 network interface.
	NetworkInterfaceId *string `pulumi:"networkInterfaceId"`
	// Identifier of an EC2 Transit Gateway.
	TransitGatewayId *string `pulumi:"transitGatewayId"`
	// Identifier of a VPC peering connection.
	VpcPeeringConnectionId *string `pulumi:"vpcPeeringConnectionId"`
}

// RouteTableRouteInput is an input type that accepts RouteTableRouteArgs and RouteTableRouteOutput values.
// You can construct a concrete instance of `RouteTableRouteInput` via:
//
//          RouteTableRouteArgs{...}
type RouteTableRouteInput interface {
	pulumi.Input

	ToRouteTableRouteOutput() RouteTableRouteOutput
	ToRouteTableRouteOutputWithContext(context.Context) RouteTableRouteOutput
}

type RouteTableRouteArgs struct {
	// The CIDR block of the route.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// Identifier of a VPC Egress Only Internet Gateway.
	EgressOnlyGatewayId pulumi.StringPtrInput `pulumi:"egressOnlyGatewayId"`
	// Identifier of a VPC internet gateway or a virtual private gateway.
	GatewayId pulumi.StringPtrInput `pulumi:"gatewayId"`
	// Identifier of an EC2 instance.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// The Ipv6 CIDR block of the route.
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// Identifier of a VPC NAT gateway.
	NatGatewayId pulumi.StringPtrInput `pulumi:"natGatewayId"`
	// Identifier of an EC2 network interface.
	NetworkInterfaceId pulumi.StringPtrInput `pulumi:"networkInterfaceId"`
	// Identifier of an EC2 Transit Gateway.
	TransitGatewayId pulumi.StringPtrInput `pulumi:"transitGatewayId"`
	// Identifier of a VPC peering connection.
	VpcPeeringConnectionId pulumi.StringPtrInput `pulumi:"vpcPeeringConnectionId"`
}

func (RouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableRoute)(nil)).Elem()
}

func (i RouteTableRouteArgs) ToRouteTableRouteOutput() RouteTableRouteOutput {
	return i.ToRouteTableRouteOutputWithContext(context.Background())
}

func (i RouteTableRouteArgs) ToRouteTableRouteOutputWithContext(ctx context.Context) RouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableRouteOutput)
}

// RouteTableRouteArrayInput is an input type that accepts RouteTableRouteArray and RouteTableRouteArrayOutput values.
// You can construct a concrete instance of `RouteTableRouteArrayInput` via:
//
//          RouteTableRouteArray{ RouteTableRouteArgs{...} }
type RouteTableRouteArrayInput interface {
	pulumi.Input

	ToRouteTableRouteArrayOutput() RouteTableRouteArrayOutput
	ToRouteTableRouteArrayOutputWithContext(context.Context) RouteTableRouteArrayOutput
}

type RouteTableRouteArray []RouteTableRouteInput

func (RouteTableRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableRoute)(nil)).Elem()
}

func (i RouteTableRouteArray) ToRouteTableRouteArrayOutput() RouteTableRouteArrayOutput {
	return i.ToRouteTableRouteArrayOutputWithContext(context.Background())
}

func (i RouteTableRouteArray) ToRouteTableRouteArrayOutputWithContext(ctx context.Context) RouteTableRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableRouteArrayOutput)
}

type RouteTableRouteOutput struct{ *pulumi.OutputState }

func (RouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableRoute)(nil)).Elem()
}

func (o RouteTableRouteOutput) ToRouteTableRouteOutput() RouteTableRouteOutput {
	return o
}

func (o RouteTableRouteOutput) ToRouteTableRouteOutputWithContext(ctx context.Context) RouteTableRouteOutput {
	return o
}

// The CIDR block of the route.
func (o RouteTableRouteOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRoute) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC Egress Only Internet Gateway.
func (o RouteTableRouteOutput) EgressOnlyGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRoute) *string { return v.EgressOnlyGatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC internet gateway or a virtual private gateway.
func (o RouteTableRouteOutput) GatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRoute) *string { return v.GatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of an EC2 instance.
func (o RouteTableRouteOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRoute) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// The Ipv6 CIDR block of the route.
func (o RouteTableRouteOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRoute) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC NAT gateway.
func (o RouteTableRouteOutput) NatGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRoute) *string { return v.NatGatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of an EC2 network interface.
func (o RouteTableRouteOutput) NetworkInterfaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRoute) *string { return v.NetworkInterfaceId }).(pulumi.StringPtrOutput)
}

// Identifier of an EC2 Transit Gateway.
func (o RouteTableRouteOutput) TransitGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRoute) *string { return v.TransitGatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC peering connection.
func (o RouteTableRouteOutput) VpcPeeringConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRoute) *string { return v.VpcPeeringConnectionId }).(pulumi.StringPtrOutput)
}

type RouteTableRouteArrayOutput struct{ *pulumi.OutputState }

func (RouteTableRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableRoute)(nil)).Elem()
}

func (o RouteTableRouteArrayOutput) ToRouteTableRouteArrayOutput() RouteTableRouteArrayOutput {
	return o
}

func (o RouteTableRouteArrayOutput) ToRouteTableRouteArrayOutputWithContext(ctx context.Context) RouteTableRouteArrayOutput {
	return o
}

func (o RouteTableRouteArrayOutput) Index(i pulumi.IntInput) RouteTableRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTableRoute {
		return vs[0].([]RouteTableRoute)[vs[1].(int)]
	}).(RouteTableRouteOutput)
}

type SecurityGroupEgress struct {
	// List of CIDR blocks.
	CidrBlocks []string `pulumi:"cidrBlocks"`
	// Description of this egress rule.
	Description *string `pulumi:"description"`
	// The start port (or ICMP type number if protocol is "icmp")
	FromPort int `pulumi:"fromPort"`
	// List of IPv6 CIDR blocks.
	Ipv6CidrBlocks []string `pulumi:"ipv6CidrBlocks"`
	// List of prefix list IDs (for allowing access to VPC endpoints)
	PrefixListIds []string `pulumi:"prefixListIds"`
	// The protocol. If you select a protocol of
	// "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "fromPort" and "toPort" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
	Protocol string `pulumi:"protocol"`
	// List of security group Group Names if using
	// EC2-Classic, or Group IDs if using a VPC.
	SecurityGroups []string `pulumi:"securityGroups"`
	// If true, the security group itself will be added as
	// a source to this egress rule.
	Self *bool `pulumi:"self"`
	// The end range port (or ICMP code if protocol is "icmp").
	ToPort int `pulumi:"toPort"`
}

// SecurityGroupEgressInput is an input type that accepts SecurityGroupEgressArgs and SecurityGroupEgressOutput values.
// You can construct a concrete instance of `SecurityGroupEgressInput` via:
//
//          SecurityGroupEgressArgs{...}
type SecurityGroupEgressInput interface {
	pulumi.Input

	ToSecurityGroupEgressOutput() SecurityGroupEgressOutput
	ToSecurityGroupEgressOutputWithContext(context.Context) SecurityGroupEgressOutput
}

type SecurityGroupEgressArgs struct {
	// List of CIDR blocks.
	CidrBlocks pulumi.StringArrayInput `pulumi:"cidrBlocks"`
	// Description of this egress rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The start port (or ICMP type number if protocol is "icmp")
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// List of IPv6 CIDR blocks.
	Ipv6CidrBlocks pulumi.StringArrayInput `pulumi:"ipv6CidrBlocks"`
	// List of prefix list IDs (for allowing access to VPC endpoints)
	PrefixListIds pulumi.StringArrayInput `pulumi:"prefixListIds"`
	// The protocol. If you select a protocol of
	// "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "fromPort" and "toPort" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// List of security group Group Names if using
	// EC2-Classic, or Group IDs if using a VPC.
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// If true, the security group itself will be added as
	// a source to this egress rule.
	Self pulumi.BoolPtrInput `pulumi:"self"`
	// The end range port (or ICMP code if protocol is "icmp").
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (SecurityGroupEgressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupEgress)(nil)).Elem()
}

func (i SecurityGroupEgressArgs) ToSecurityGroupEgressOutput() SecurityGroupEgressOutput {
	return i.ToSecurityGroupEgressOutputWithContext(context.Background())
}

func (i SecurityGroupEgressArgs) ToSecurityGroupEgressOutputWithContext(ctx context.Context) SecurityGroupEgressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupEgressOutput)
}

// SecurityGroupEgressArrayInput is an input type that accepts SecurityGroupEgressArray and SecurityGroupEgressArrayOutput values.
// You can construct a concrete instance of `SecurityGroupEgressArrayInput` via:
//
//          SecurityGroupEgressArray{ SecurityGroupEgressArgs{...} }
type SecurityGroupEgressArrayInput interface {
	pulumi.Input

	ToSecurityGroupEgressArrayOutput() SecurityGroupEgressArrayOutput
	ToSecurityGroupEgressArrayOutputWithContext(context.Context) SecurityGroupEgressArrayOutput
}

type SecurityGroupEgressArray []SecurityGroupEgressInput

func (SecurityGroupEgressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupEgress)(nil)).Elem()
}

func (i SecurityGroupEgressArray) ToSecurityGroupEgressArrayOutput() SecurityGroupEgressArrayOutput {
	return i.ToSecurityGroupEgressArrayOutputWithContext(context.Background())
}

func (i SecurityGroupEgressArray) ToSecurityGroupEgressArrayOutputWithContext(ctx context.Context) SecurityGroupEgressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupEgressArrayOutput)
}

type SecurityGroupEgressOutput struct{ *pulumi.OutputState }

func (SecurityGroupEgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupEgress)(nil)).Elem()
}

func (o SecurityGroupEgressOutput) ToSecurityGroupEgressOutput() SecurityGroupEgressOutput {
	return o
}

func (o SecurityGroupEgressOutput) ToSecurityGroupEgressOutputWithContext(ctx context.Context) SecurityGroupEgressOutput {
	return o
}

// List of CIDR blocks.
func (o SecurityGroupEgressOutput) CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupEgress) []string { return v.CidrBlocks }).(pulumi.StringArrayOutput)
}

// Description of this egress rule.
func (o SecurityGroupEgressOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityGroupEgress) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The start port (or ICMP type number if protocol is "icmp")
func (o SecurityGroupEgressOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityGroupEgress) int { return v.FromPort }).(pulumi.IntOutput)
}

// List of IPv6 CIDR blocks.
func (o SecurityGroupEgressOutput) Ipv6CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupEgress) []string { return v.Ipv6CidrBlocks }).(pulumi.StringArrayOutput)
}

// List of prefix list IDs (for allowing access to VPC endpoints)
func (o SecurityGroupEgressOutput) PrefixListIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupEgress) []string { return v.PrefixListIds }).(pulumi.StringArrayOutput)
}

// The protocol. If you select a protocol of
// "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "fromPort" and "toPort" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
func (o SecurityGroupEgressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupEgress) string { return v.Protocol }).(pulumi.StringOutput)
}

// List of security group Group Names if using
// EC2-Classic, or Group IDs if using a VPC.
func (o SecurityGroupEgressOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupEgress) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// If true, the security group itself will be added as
// a source to this egress rule.
func (o SecurityGroupEgressOutput) Self() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecurityGroupEgress) *bool { return v.Self }).(pulumi.BoolPtrOutput)
}

// The end range port (or ICMP code if protocol is "icmp").
func (o SecurityGroupEgressOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityGroupEgress) int { return v.ToPort }).(pulumi.IntOutput)
}

type SecurityGroupEgressArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupEgressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupEgress)(nil)).Elem()
}

func (o SecurityGroupEgressArrayOutput) ToSecurityGroupEgressArrayOutput() SecurityGroupEgressArrayOutput {
	return o
}

func (o SecurityGroupEgressArrayOutput) ToSecurityGroupEgressArrayOutputWithContext(ctx context.Context) SecurityGroupEgressArrayOutput {
	return o
}

func (o SecurityGroupEgressArrayOutput) Index(i pulumi.IntInput) SecurityGroupEgressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGroupEgress {
		return vs[0].([]SecurityGroupEgress)[vs[1].(int)]
	}).(SecurityGroupEgressOutput)
}

type SecurityGroupIngress struct {
	// List of CIDR blocks.
	CidrBlocks []string `pulumi:"cidrBlocks"`
	// Description of this egress rule.
	Description *string `pulumi:"description"`
	// The start port (or ICMP type number if protocol is "icmp")
	FromPort int `pulumi:"fromPort"`
	// List of IPv6 CIDR blocks.
	Ipv6CidrBlocks []string `pulumi:"ipv6CidrBlocks"`
	// List of prefix list IDs (for allowing access to VPC endpoints)
	PrefixListIds []string `pulumi:"prefixListIds"`
	// The protocol. If you select a protocol of
	// "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "fromPort" and "toPort" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
	Protocol string `pulumi:"protocol"`
	// List of security group Group Names if using
	// EC2-Classic, or Group IDs if using a VPC.
	SecurityGroups []string `pulumi:"securityGroups"`
	// If true, the security group itself will be added as
	// a source to this egress rule.
	Self *bool `pulumi:"self"`
	// The end range port (or ICMP code if protocol is "icmp").
	ToPort int `pulumi:"toPort"`
}

// SecurityGroupIngressInput is an input type that accepts SecurityGroupIngressArgs and SecurityGroupIngressOutput values.
// You can construct a concrete instance of `SecurityGroupIngressInput` via:
//
//          SecurityGroupIngressArgs{...}
type SecurityGroupIngressInput interface {
	pulumi.Input

	ToSecurityGroupIngressOutput() SecurityGroupIngressOutput
	ToSecurityGroupIngressOutputWithContext(context.Context) SecurityGroupIngressOutput
}

type SecurityGroupIngressArgs struct {
	// List of CIDR blocks.
	CidrBlocks pulumi.StringArrayInput `pulumi:"cidrBlocks"`
	// Description of this egress rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The start port (or ICMP type number if protocol is "icmp")
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// List of IPv6 CIDR blocks.
	Ipv6CidrBlocks pulumi.StringArrayInput `pulumi:"ipv6CidrBlocks"`
	// List of prefix list IDs (for allowing access to VPC endpoints)
	PrefixListIds pulumi.StringArrayInput `pulumi:"prefixListIds"`
	// The protocol. If you select a protocol of
	// "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "fromPort" and "toPort" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// List of security group Group Names if using
	// EC2-Classic, or Group IDs if using a VPC.
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// If true, the security group itself will be added as
	// a source to this egress rule.
	Self pulumi.BoolPtrInput `pulumi:"self"`
	// The end range port (or ICMP code if protocol is "icmp").
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (SecurityGroupIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupIngress)(nil)).Elem()
}

func (i SecurityGroupIngressArgs) ToSecurityGroupIngressOutput() SecurityGroupIngressOutput {
	return i.ToSecurityGroupIngressOutputWithContext(context.Background())
}

func (i SecurityGroupIngressArgs) ToSecurityGroupIngressOutputWithContext(ctx context.Context) SecurityGroupIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupIngressOutput)
}

// SecurityGroupIngressArrayInput is an input type that accepts SecurityGroupIngressArray and SecurityGroupIngressArrayOutput values.
// You can construct a concrete instance of `SecurityGroupIngressArrayInput` via:
//
//          SecurityGroupIngressArray{ SecurityGroupIngressArgs{...} }
type SecurityGroupIngressArrayInput interface {
	pulumi.Input

	ToSecurityGroupIngressArrayOutput() SecurityGroupIngressArrayOutput
	ToSecurityGroupIngressArrayOutputWithContext(context.Context) SecurityGroupIngressArrayOutput
}

type SecurityGroupIngressArray []SecurityGroupIngressInput

func (SecurityGroupIngressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupIngress)(nil)).Elem()
}

func (i SecurityGroupIngressArray) ToSecurityGroupIngressArrayOutput() SecurityGroupIngressArrayOutput {
	return i.ToSecurityGroupIngressArrayOutputWithContext(context.Background())
}

func (i SecurityGroupIngressArray) ToSecurityGroupIngressArrayOutputWithContext(ctx context.Context) SecurityGroupIngressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupIngressArrayOutput)
}

type SecurityGroupIngressOutput struct{ *pulumi.OutputState }

func (SecurityGroupIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupIngress)(nil)).Elem()
}

func (o SecurityGroupIngressOutput) ToSecurityGroupIngressOutput() SecurityGroupIngressOutput {
	return o
}

func (o SecurityGroupIngressOutput) ToSecurityGroupIngressOutputWithContext(ctx context.Context) SecurityGroupIngressOutput {
	return o
}

// List of CIDR blocks.
func (o SecurityGroupIngressOutput) CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupIngress) []string { return v.CidrBlocks }).(pulumi.StringArrayOutput)
}

// Description of this egress rule.
func (o SecurityGroupIngressOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityGroupIngress) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The start port (or ICMP type number if protocol is "icmp")
func (o SecurityGroupIngressOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityGroupIngress) int { return v.FromPort }).(pulumi.IntOutput)
}

// List of IPv6 CIDR blocks.
func (o SecurityGroupIngressOutput) Ipv6CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupIngress) []string { return v.Ipv6CidrBlocks }).(pulumi.StringArrayOutput)
}

// List of prefix list IDs (for allowing access to VPC endpoints)
func (o SecurityGroupIngressOutput) PrefixListIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupIngress) []string { return v.PrefixListIds }).(pulumi.StringArrayOutput)
}

// The protocol. If you select a protocol of
// "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "fromPort" and "toPort" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
func (o SecurityGroupIngressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupIngress) string { return v.Protocol }).(pulumi.StringOutput)
}

// List of security group Group Names if using
// EC2-Classic, or Group IDs if using a VPC.
func (o SecurityGroupIngressOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupIngress) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// If true, the security group itself will be added as
// a source to this egress rule.
func (o SecurityGroupIngressOutput) Self() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecurityGroupIngress) *bool { return v.Self }).(pulumi.BoolPtrOutput)
}

// The end range port (or ICMP code if protocol is "icmp").
func (o SecurityGroupIngressOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityGroupIngress) int { return v.ToPort }).(pulumi.IntOutput)
}

type SecurityGroupIngressArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupIngressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupIngress)(nil)).Elem()
}

func (o SecurityGroupIngressArrayOutput) ToSecurityGroupIngressArrayOutput() SecurityGroupIngressArrayOutput {
	return o
}

func (o SecurityGroupIngressArrayOutput) ToSecurityGroupIngressArrayOutputWithContext(ctx context.Context) SecurityGroupIngressArrayOutput {
	return o
}

func (o SecurityGroupIngressArrayOutput) Index(i pulumi.IntInput) SecurityGroupIngressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGroupIngress {
		return vs[0].([]SecurityGroupIngress)[vs[1].(int)]
	}).(SecurityGroupIngressOutput)
}

type SpotFleetRequestLaunchSpecification struct {
	Ami                      string `pulumi:"ami"`
	AssociatePublicIpAddress *bool  `pulumi:"associatePublicIpAddress"`
	// The availability zone in which to place the request.
	AvailabilityZone      *string                                                   `pulumi:"availabilityZone"`
	EbsBlockDevices       []SpotFleetRequestLaunchSpecificationEbsBlockDevice       `pulumi:"ebsBlockDevices"`
	EbsOptimized          *bool                                                     `pulumi:"ebsOptimized"`
	EphemeralBlockDevices []SpotFleetRequestLaunchSpecificationEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	IamInstanceProfile    *string                                                   `pulumi:"iamInstanceProfile"`
	IamInstanceProfileArn *string                                                   `pulumi:"iamInstanceProfileArn"`
	// The type of instance to request.
	InstanceType     string                                               `pulumi:"instanceType"`
	KeyName          *string                                              `pulumi:"keyName"`
	Monitoring       *bool                                                `pulumi:"monitoring"`
	PlacementGroup   *string                                              `pulumi:"placementGroup"`
	PlacementTenancy *string                                              `pulumi:"placementTenancy"`
	RootBlockDevices []SpotFleetRequestLaunchSpecificationRootBlockDevice `pulumi:"rootBlockDevices"`
	// The maximum spot bid for this override request.
	SpotPrice *string `pulumi:"spotPrice"`
	// The subnet in which to launch the requested instance.
	SubnetId *string `pulumi:"subnetId"`
	// A map of tags to assign to the resource.
	Tags                map[string]string `pulumi:"tags"`
	UserData            *string           `pulumi:"userData"`
	VpcSecurityGroupIds []string          `pulumi:"vpcSecurityGroupIds"`
	// The capacity added to the fleet by a fulfilled request.
	WeightedCapacity *string `pulumi:"weightedCapacity"`
}

// SpotFleetRequestLaunchSpecificationInput is an input type that accepts SpotFleetRequestLaunchSpecificationArgs and SpotFleetRequestLaunchSpecificationOutput values.
// You can construct a concrete instance of `SpotFleetRequestLaunchSpecificationInput` via:
//
//          SpotFleetRequestLaunchSpecificationArgs{...}
type SpotFleetRequestLaunchSpecificationInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationOutput() SpotFleetRequestLaunchSpecificationOutput
	ToSpotFleetRequestLaunchSpecificationOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationOutput
}

type SpotFleetRequestLaunchSpecificationArgs struct {
	Ami                      pulumi.StringInput  `pulumi:"ami"`
	AssociatePublicIpAddress pulumi.BoolPtrInput `pulumi:"associatePublicIpAddress"`
	// The availability zone in which to place the request.
	AvailabilityZone      pulumi.StringPtrInput                                             `pulumi:"availabilityZone"`
	EbsBlockDevices       SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayInput       `pulumi:"ebsBlockDevices"`
	EbsOptimized          pulumi.BoolPtrInput                                               `pulumi:"ebsOptimized"`
	EphemeralBlockDevices SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayInput `pulumi:"ephemeralBlockDevices"`
	IamInstanceProfile    pulumi.StringPtrInput                                             `pulumi:"iamInstanceProfile"`
	IamInstanceProfileArn pulumi.StringPtrInput                                             `pulumi:"iamInstanceProfileArn"`
	// The type of instance to request.
	InstanceType     pulumi.StringInput                                           `pulumi:"instanceType"`
	KeyName          pulumi.StringPtrInput                                        `pulumi:"keyName"`
	Monitoring       pulumi.BoolPtrInput                                          `pulumi:"monitoring"`
	PlacementGroup   pulumi.StringPtrInput                                        `pulumi:"placementGroup"`
	PlacementTenancy pulumi.StringPtrInput                                        `pulumi:"placementTenancy"`
	RootBlockDevices SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayInput `pulumi:"rootBlockDevices"`
	// The maximum spot bid for this override request.
	SpotPrice pulumi.StringPtrInput `pulumi:"spotPrice"`
	// The subnet in which to launch the requested instance.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// A map of tags to assign to the resource.
	Tags                pulumi.StringMapInput   `pulumi:"tags"`
	UserData            pulumi.StringPtrInput   `pulumi:"userData"`
	VpcSecurityGroupIds pulumi.StringArrayInput `pulumi:"vpcSecurityGroupIds"`
	// The capacity added to the fleet by a fulfilled request.
	WeightedCapacity pulumi.StringPtrInput `pulumi:"weightedCapacity"`
}

func (SpotFleetRequestLaunchSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecification)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationArgs) ToSpotFleetRequestLaunchSpecificationOutput() SpotFleetRequestLaunchSpecificationOutput {
	return i.ToSpotFleetRequestLaunchSpecificationOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationArgs) ToSpotFleetRequestLaunchSpecificationOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationOutput)
}

// SpotFleetRequestLaunchSpecificationArrayInput is an input type that accepts SpotFleetRequestLaunchSpecificationArray and SpotFleetRequestLaunchSpecificationArrayOutput values.
// You can construct a concrete instance of `SpotFleetRequestLaunchSpecificationArrayInput` via:
//
//          SpotFleetRequestLaunchSpecificationArray{ SpotFleetRequestLaunchSpecificationArgs{...} }
type SpotFleetRequestLaunchSpecificationArrayInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationArrayOutput() SpotFleetRequestLaunchSpecificationArrayOutput
	ToSpotFleetRequestLaunchSpecificationArrayOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationArrayOutput
}

type SpotFleetRequestLaunchSpecificationArray []SpotFleetRequestLaunchSpecificationInput

func (SpotFleetRequestLaunchSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecification)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationArray) ToSpotFleetRequestLaunchSpecificationArrayOutput() SpotFleetRequestLaunchSpecificationArrayOutput {
	return i.ToSpotFleetRequestLaunchSpecificationArrayOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationArray) ToSpotFleetRequestLaunchSpecificationArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationArrayOutput)
}

type SpotFleetRequestLaunchSpecificationOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecification)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationOutput) ToSpotFleetRequestLaunchSpecificationOutput() SpotFleetRequestLaunchSpecificationOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationOutput) ToSpotFleetRequestLaunchSpecificationOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationOutput) Ami() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) string { return v.Ami }).(pulumi.StringOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) AssociatePublicIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *bool { return v.AssociatePublicIpAddress }).(pulumi.BoolPtrOutput)
}

// The availability zone in which to place the request.
func (o SpotFleetRequestLaunchSpecificationOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) EbsBlockDevices() SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) []SpotFleetRequestLaunchSpecificationEbsBlockDevice {
		return v.EbsBlockDevices
	}).(SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) EbsOptimized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *bool { return v.EbsOptimized }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) EphemeralBlockDevices() SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) []SpotFleetRequestLaunchSpecificationEphemeralBlockDevice {
		return v.EphemeralBlockDevices
	}).(SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) IamInstanceProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *string { return v.IamInstanceProfile }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) IamInstanceProfileArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *string { return v.IamInstanceProfileArn }).(pulumi.StringPtrOutput)
}

// The type of instance to request.
func (o SpotFleetRequestLaunchSpecificationOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) string { return v.InstanceType }).(pulumi.StringOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) Monitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *bool { return v.Monitoring }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) PlacementGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *string { return v.PlacementGroup }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) PlacementTenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *string { return v.PlacementTenancy }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) RootBlockDevices() SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) []SpotFleetRequestLaunchSpecificationRootBlockDevice {
		return v.RootBlockDevices
	}).(SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput)
}

// The maximum spot bid for this override request.
func (o SpotFleetRequestLaunchSpecificationOutput) SpotPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *string { return v.SpotPrice }).(pulumi.StringPtrOutput)
}

// The subnet in which to launch the requested instance.
func (o SpotFleetRequestLaunchSpecificationOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// A map of tags to assign to the resource.
func (o SpotFleetRequestLaunchSpecificationOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *string { return v.UserData }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) VpcSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) []string { return v.VpcSecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The capacity added to the fleet by a fulfilled request.
func (o SpotFleetRequestLaunchSpecificationOutput) WeightedCapacity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *string { return v.WeightedCapacity }).(pulumi.StringPtrOutput)
}

type SpotFleetRequestLaunchSpecificationArrayOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecification)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationArrayOutput) ToSpotFleetRequestLaunchSpecificationArrayOutput() SpotFleetRequestLaunchSpecificationArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationArrayOutput) ToSpotFleetRequestLaunchSpecificationArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationArrayOutput) Index(i pulumi.IntInput) SpotFleetRequestLaunchSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotFleetRequestLaunchSpecification {
		return vs[0].([]SpotFleetRequestLaunchSpecification)[vs[1].(int)]
	}).(SpotFleetRequestLaunchSpecificationOutput)
}

type SpotFleetRequestLaunchSpecificationEbsBlockDevice struct {
	DeleteOnTermination *bool   `pulumi:"deleteOnTermination"`
	DeviceName          string  `pulumi:"deviceName"`
	Encrypted           *bool   `pulumi:"encrypted"`
	Iops                *int    `pulumi:"iops"`
	KmsKeyId            *string `pulumi:"kmsKeyId"`
	SnapshotId          *string `pulumi:"snapshotId"`
	VolumeSize          *int    `pulumi:"volumeSize"`
	VolumeType          *string `pulumi:"volumeType"`
}

// SpotFleetRequestLaunchSpecificationEbsBlockDeviceInput is an input type that accepts SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs and SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput values.
// You can construct a concrete instance of `SpotFleetRequestLaunchSpecificationEbsBlockDeviceInput` via:
//
//          SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs{...}
type SpotFleetRequestLaunchSpecificationEbsBlockDeviceInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput() SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput
	ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput
}

type SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs struct {
	DeleteOnTermination pulumi.BoolPtrInput   `pulumi:"deleteOnTermination"`
	DeviceName          pulumi.StringInput    `pulumi:"deviceName"`
	Encrypted           pulumi.BoolPtrInput   `pulumi:"encrypted"`
	Iops                pulumi.IntPtrInput    `pulumi:"iops"`
	KmsKeyId            pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	SnapshotId          pulumi.StringPtrInput `pulumi:"snapshotId"`
	VolumeSize          pulumi.IntPtrInput    `pulumi:"volumeSize"`
	VolumeType          pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationEbsBlockDevice)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput() SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput {
	return i.ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput)
}

// SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayInput is an input type that accepts SpotFleetRequestLaunchSpecificationEbsBlockDeviceArray and SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput values.
// You can construct a concrete instance of `SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayInput` via:
//
//          SpotFleetRequestLaunchSpecificationEbsBlockDeviceArray{ SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs{...} }
type SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput
	ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput
}

type SpotFleetRequestLaunchSpecificationEbsBlockDeviceArray []SpotFleetRequestLaunchSpecificationEbsBlockDeviceInput

func (SpotFleetRequestLaunchSpecificationEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationEbsBlockDevice)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationEbsBlockDeviceArray) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput {
	return i.ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationEbsBlockDeviceArray) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput)
}

type SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationEbsBlockDevice)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput() SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationEbsBlockDevice)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotFleetRequestLaunchSpecificationEbsBlockDevice {
		return vs[0].([]SpotFleetRequestLaunchSpecificationEbsBlockDevice)[vs[1].(int)]
	}).(SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput)
}

type SpotFleetRequestLaunchSpecificationEphemeralBlockDevice struct {
	DeviceName  string `pulumi:"deviceName"`
	VirtualName string `pulumi:"virtualName"`
}

// SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceInput is an input type that accepts SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs and SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput values.
// You can construct a concrete instance of `SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceInput` via:
//
//          SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs{...}
type SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput() SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput
	ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput
}

type SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs struct {
	DeviceName  pulumi.StringInput `pulumi:"deviceName"`
	VirtualName pulumi.StringInput `pulumi:"virtualName"`
}

func (SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationEphemeralBlockDevice)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput() SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput {
	return i.ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput)
}

// SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayInput is an input type that accepts SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArray and SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput values.
// You can construct a concrete instance of `SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayInput` via:
//
//          SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArray{ SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs{...} }
type SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput
	ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput
}

type SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArray []SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceInput

func (SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationEphemeralBlockDevice)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArray) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput {
	return i.ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArray) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput)
}

type SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationEphemeralBlockDevice)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput() SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEphemeralBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput) VirtualName() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEphemeralBlockDevice) string { return v.VirtualName }).(pulumi.StringOutput)
}

type SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationEphemeralBlockDevice)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput) Index(i pulumi.IntInput) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotFleetRequestLaunchSpecificationEphemeralBlockDevice {
		return vs[0].([]SpotFleetRequestLaunchSpecificationEphemeralBlockDevice)[vs[1].(int)]
	}).(SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput)
}

type SpotFleetRequestLaunchSpecificationRootBlockDevice struct {
	DeleteOnTermination *bool   `pulumi:"deleteOnTermination"`
	Encrypted           *bool   `pulumi:"encrypted"`
	Iops                *int    `pulumi:"iops"`
	KmsKeyId            *string `pulumi:"kmsKeyId"`
	VolumeSize          *int    `pulumi:"volumeSize"`
	VolumeType          *string `pulumi:"volumeType"`
}

// SpotFleetRequestLaunchSpecificationRootBlockDeviceInput is an input type that accepts SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs and SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput values.
// You can construct a concrete instance of `SpotFleetRequestLaunchSpecificationRootBlockDeviceInput` via:
//
//          SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs{...}
type SpotFleetRequestLaunchSpecificationRootBlockDeviceInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationRootBlockDeviceOutput() SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput
	ToSpotFleetRequestLaunchSpecificationRootBlockDeviceOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput
}

type SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs struct {
	DeleteOnTermination pulumi.BoolPtrInput   `pulumi:"deleteOnTermination"`
	Encrypted           pulumi.BoolPtrInput   `pulumi:"encrypted"`
	Iops                pulumi.IntPtrInput    `pulumi:"iops"`
	KmsKeyId            pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	VolumeSize          pulumi.IntPtrInput    `pulumi:"volumeSize"`
	VolumeType          pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationRootBlockDevice)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceOutput() SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput {
	return i.ToSpotFleetRequestLaunchSpecificationRootBlockDeviceOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput)
}

// SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayInput is an input type that accepts SpotFleetRequestLaunchSpecificationRootBlockDeviceArray and SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput values.
// You can construct a concrete instance of `SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayInput` via:
//
//          SpotFleetRequestLaunchSpecificationRootBlockDeviceArray{ SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs{...} }
type SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput
	ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput
}

type SpotFleetRequestLaunchSpecificationRootBlockDeviceArray []SpotFleetRequestLaunchSpecificationRootBlockDeviceInput

func (SpotFleetRequestLaunchSpecificationRootBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationRootBlockDevice)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationRootBlockDeviceArray) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput {
	return i.ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationRootBlockDeviceArray) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput)
}

type SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationRootBlockDevice)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceOutput() SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationRootBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationRootBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationRootBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationRootBlockDevice) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationRootBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationRootBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationRootBlockDevice)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput) Index(i pulumi.IntInput) SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotFleetRequestLaunchSpecificationRootBlockDevice {
		return vs[0].([]SpotFleetRequestLaunchSpecificationRootBlockDevice)[vs[1].(int)]
	}).(SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput)
}

type SpotFleetRequestLaunchTemplateConfig struct {
	// Launch template specification. See Launch Template Specification below for more details.
	LaunchTemplateSpecification SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecification `pulumi:"launchTemplateSpecification"`
	// One or more override configurations. See Overrides below for more details.
	Overrides []SpotFleetRequestLaunchTemplateConfigOverride `pulumi:"overrides"`
}

// SpotFleetRequestLaunchTemplateConfigInput is an input type that accepts SpotFleetRequestLaunchTemplateConfigArgs and SpotFleetRequestLaunchTemplateConfigOutput values.
// You can construct a concrete instance of `SpotFleetRequestLaunchTemplateConfigInput` via:
//
//          SpotFleetRequestLaunchTemplateConfigArgs{...}
type SpotFleetRequestLaunchTemplateConfigInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchTemplateConfigOutput() SpotFleetRequestLaunchTemplateConfigOutput
	ToSpotFleetRequestLaunchTemplateConfigOutputWithContext(context.Context) SpotFleetRequestLaunchTemplateConfigOutput
}

type SpotFleetRequestLaunchTemplateConfigArgs struct {
	// Launch template specification. See Launch Template Specification below for more details.
	LaunchTemplateSpecification SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationInput `pulumi:"launchTemplateSpecification"`
	// One or more override configurations. See Overrides below for more details.
	Overrides SpotFleetRequestLaunchTemplateConfigOverrideArrayInput `pulumi:"overrides"`
}

func (SpotFleetRequestLaunchTemplateConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfig)(nil)).Elem()
}

func (i SpotFleetRequestLaunchTemplateConfigArgs) ToSpotFleetRequestLaunchTemplateConfigOutput() SpotFleetRequestLaunchTemplateConfigOutput {
	return i.ToSpotFleetRequestLaunchTemplateConfigOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchTemplateConfigArgs) ToSpotFleetRequestLaunchTemplateConfigOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchTemplateConfigOutput)
}

// SpotFleetRequestLaunchTemplateConfigArrayInput is an input type that accepts SpotFleetRequestLaunchTemplateConfigArray and SpotFleetRequestLaunchTemplateConfigArrayOutput values.
// You can construct a concrete instance of `SpotFleetRequestLaunchTemplateConfigArrayInput` via:
//
//          SpotFleetRequestLaunchTemplateConfigArray{ SpotFleetRequestLaunchTemplateConfigArgs{...} }
type SpotFleetRequestLaunchTemplateConfigArrayInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchTemplateConfigArrayOutput() SpotFleetRequestLaunchTemplateConfigArrayOutput
	ToSpotFleetRequestLaunchTemplateConfigArrayOutputWithContext(context.Context) SpotFleetRequestLaunchTemplateConfigArrayOutput
}

type SpotFleetRequestLaunchTemplateConfigArray []SpotFleetRequestLaunchTemplateConfigInput

func (SpotFleetRequestLaunchTemplateConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchTemplateConfig)(nil)).Elem()
}

func (i SpotFleetRequestLaunchTemplateConfigArray) ToSpotFleetRequestLaunchTemplateConfigArrayOutput() SpotFleetRequestLaunchTemplateConfigArrayOutput {
	return i.ToSpotFleetRequestLaunchTemplateConfigArrayOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchTemplateConfigArray) ToSpotFleetRequestLaunchTemplateConfigArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchTemplateConfigArrayOutput)
}

type SpotFleetRequestLaunchTemplateConfigOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchTemplateConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfig)(nil)).Elem()
}

func (o SpotFleetRequestLaunchTemplateConfigOutput) ToSpotFleetRequestLaunchTemplateConfigOutput() SpotFleetRequestLaunchTemplateConfigOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigOutput) ToSpotFleetRequestLaunchTemplateConfigOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigOutput {
	return o
}

// Launch template specification. See Launch Template Specification below for more details.
func (o SpotFleetRequestLaunchTemplateConfigOutput) LaunchTemplateSpecification() SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchTemplateConfig) SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecification {
		return v.LaunchTemplateSpecification
	}).(SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput)
}

// One or more override configurations. See Overrides below for more details.
func (o SpotFleetRequestLaunchTemplateConfigOutput) Overrides() SpotFleetRequestLaunchTemplateConfigOverrideArrayOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchTemplateConfig) []SpotFleetRequestLaunchTemplateConfigOverride {
		return v.Overrides
	}).(SpotFleetRequestLaunchTemplateConfigOverrideArrayOutput)
}

type SpotFleetRequestLaunchTemplateConfigArrayOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchTemplateConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchTemplateConfig)(nil)).Elem()
}

func (o SpotFleetRequestLaunchTemplateConfigArrayOutput) ToSpotFleetRequestLaunchTemplateConfigArrayOutput() SpotFleetRequestLaunchTemplateConfigArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigArrayOutput) ToSpotFleetRequestLaunchTemplateConfigArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigArrayOutput) Index(i pulumi.IntInput) SpotFleetRequestLaunchTemplateConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotFleetRequestLaunchTemplateConfig {
		return vs[0].([]SpotFleetRequestLaunchTemplateConfig)[vs[1].(int)]
	}).(SpotFleetRequestLaunchTemplateConfigOutput)
}

type SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecification struct {
	// The ID of the launch template. Conflicts with `name`.
	Id *string `pulumi:"id"`
	// The name of the launch template. Conflicts with `id`.
	Name *string `pulumi:"name"`
	// Template version. Unlike the autoscaling equivalent, does not support `$Latest` or `$Default`, so use the launchTemplate resource's attribute, e.g. `"${aws_launch_template.foo.latest_version}"`. It will use the default version if omitted.
	Version *string `pulumi:"version"`
}

// SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationInput is an input type that accepts SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationArgs and SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput values.
// You can construct a concrete instance of `SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationInput` via:
//
//          SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationArgs{...}
type SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput() SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput
	ToSpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutputWithContext(context.Context) SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput
}

type SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationArgs struct {
	// The ID of the launch template. Conflicts with `name`.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the launch template. Conflicts with `id`.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Template version. Unlike the autoscaling equivalent, does not support `$Latest` or `$Default`, so use the launchTemplate resource's attribute, e.g. `"${aws_launch_template.foo.latest_version}"`. It will use the default version if omitted.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecification)(nil)).Elem()
}

func (i SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationArgs) ToSpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput() SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return i.ToSpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationArgs) ToSpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput)
}

type SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecification)(nil)).Elem()
}

func (o SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput) ToSpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput() SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput) ToSpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return o
}

// The ID of the launch template. Conflicts with `name`.
func (o SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecification) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the launch template. Conflicts with `id`.
func (o SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecification) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Template version. Unlike the autoscaling equivalent, does not support `$Latest` or `$Default`, so use the launchTemplate resource's attribute, e.g. `"${aws_launch_template.foo.latest_version}"`. It will use the default version if omitted.
func (o SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecification) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type SpotFleetRequestLaunchTemplateConfigOverride struct {
	// The availability zone in which to place the request.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The type of instance to request.
	InstanceType *string `pulumi:"instanceType"`
	// The priority for the launch template override. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority.
	Priority *float64 `pulumi:"priority"`
	// The maximum spot bid for this override request.
	SpotPrice *string `pulumi:"spotPrice"`
	// The subnet in which to launch the requested instance.
	SubnetId *string `pulumi:"subnetId"`
	// The capacity added to the fleet by a fulfilled request.
	WeightedCapacity *float64 `pulumi:"weightedCapacity"`
}

// SpotFleetRequestLaunchTemplateConfigOverrideInput is an input type that accepts SpotFleetRequestLaunchTemplateConfigOverrideArgs and SpotFleetRequestLaunchTemplateConfigOverrideOutput values.
// You can construct a concrete instance of `SpotFleetRequestLaunchTemplateConfigOverrideInput` via:
//
//          SpotFleetRequestLaunchTemplateConfigOverrideArgs{...}
type SpotFleetRequestLaunchTemplateConfigOverrideInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchTemplateConfigOverrideOutput() SpotFleetRequestLaunchTemplateConfigOverrideOutput
	ToSpotFleetRequestLaunchTemplateConfigOverrideOutputWithContext(context.Context) SpotFleetRequestLaunchTemplateConfigOverrideOutput
}

type SpotFleetRequestLaunchTemplateConfigOverrideArgs struct {
	// The availability zone in which to place the request.
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// The type of instance to request.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// The priority for the launch template override. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority.
	Priority pulumi.Float64PtrInput `pulumi:"priority"`
	// The maximum spot bid for this override request.
	SpotPrice pulumi.StringPtrInput `pulumi:"spotPrice"`
	// The subnet in which to launch the requested instance.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// The capacity added to the fleet by a fulfilled request.
	WeightedCapacity pulumi.Float64PtrInput `pulumi:"weightedCapacity"`
}

func (SpotFleetRequestLaunchTemplateConfigOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfigOverride)(nil)).Elem()
}

func (i SpotFleetRequestLaunchTemplateConfigOverrideArgs) ToSpotFleetRequestLaunchTemplateConfigOverrideOutput() SpotFleetRequestLaunchTemplateConfigOverrideOutput {
	return i.ToSpotFleetRequestLaunchTemplateConfigOverrideOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchTemplateConfigOverrideArgs) ToSpotFleetRequestLaunchTemplateConfigOverrideOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchTemplateConfigOverrideOutput)
}

// SpotFleetRequestLaunchTemplateConfigOverrideArrayInput is an input type that accepts SpotFleetRequestLaunchTemplateConfigOverrideArray and SpotFleetRequestLaunchTemplateConfigOverrideArrayOutput values.
// You can construct a concrete instance of `SpotFleetRequestLaunchTemplateConfigOverrideArrayInput` via:
//
//          SpotFleetRequestLaunchTemplateConfigOverrideArray{ SpotFleetRequestLaunchTemplateConfigOverrideArgs{...} }
type SpotFleetRequestLaunchTemplateConfigOverrideArrayInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchTemplateConfigOverrideArrayOutput() SpotFleetRequestLaunchTemplateConfigOverrideArrayOutput
	ToSpotFleetRequestLaunchTemplateConfigOverrideArrayOutputWithContext(context.Context) SpotFleetRequestLaunchTemplateConfigOverrideArrayOutput
}

type SpotFleetRequestLaunchTemplateConfigOverrideArray []SpotFleetRequestLaunchTemplateConfigOverrideInput

func (SpotFleetRequestLaunchTemplateConfigOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchTemplateConfigOverride)(nil)).Elem()
}

func (i SpotFleetRequestLaunchTemplateConfigOverrideArray) ToSpotFleetRequestLaunchTemplateConfigOverrideArrayOutput() SpotFleetRequestLaunchTemplateConfigOverrideArrayOutput {
	return i.ToSpotFleetRequestLaunchTemplateConfigOverrideArrayOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchTemplateConfigOverrideArray) ToSpotFleetRequestLaunchTemplateConfigOverrideArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchTemplateConfigOverrideArrayOutput)
}

type SpotFleetRequestLaunchTemplateConfigOverrideOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchTemplateConfigOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchTemplateConfigOverride)(nil)).Elem()
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideOutput) ToSpotFleetRequestLaunchTemplateConfigOverrideOutput() SpotFleetRequestLaunchTemplateConfigOverrideOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideOutput) ToSpotFleetRequestLaunchTemplateConfigOverrideOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigOverrideOutput {
	return o
}

// The availability zone in which to place the request.
func (o SpotFleetRequestLaunchTemplateConfigOverrideOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchTemplateConfigOverride) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// The type of instance to request.
func (o SpotFleetRequestLaunchTemplateConfigOverrideOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchTemplateConfigOverride) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// The priority for the launch template override. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority.
func (o SpotFleetRequestLaunchTemplateConfigOverrideOutput) Priority() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchTemplateConfigOverride) *float64 { return v.Priority }).(pulumi.Float64PtrOutput)
}

// The maximum spot bid for this override request.
func (o SpotFleetRequestLaunchTemplateConfigOverrideOutput) SpotPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchTemplateConfigOverride) *string { return v.SpotPrice }).(pulumi.StringPtrOutput)
}

// The subnet in which to launch the requested instance.
func (o SpotFleetRequestLaunchTemplateConfigOverrideOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchTemplateConfigOverride) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The capacity added to the fleet by a fulfilled request.
func (o SpotFleetRequestLaunchTemplateConfigOverrideOutput) WeightedCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchTemplateConfigOverride) *float64 { return v.WeightedCapacity }).(pulumi.Float64PtrOutput)
}

type SpotFleetRequestLaunchTemplateConfigOverrideArrayOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchTemplateConfigOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchTemplateConfigOverride)(nil)).Elem()
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideArrayOutput) ToSpotFleetRequestLaunchTemplateConfigOverrideArrayOutput() SpotFleetRequestLaunchTemplateConfigOverrideArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideArrayOutput) ToSpotFleetRequestLaunchTemplateConfigOverrideArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchTemplateConfigOverrideArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchTemplateConfigOverrideArrayOutput) Index(i pulumi.IntInput) SpotFleetRequestLaunchTemplateConfigOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotFleetRequestLaunchTemplateConfigOverride {
		return vs[0].([]SpotFleetRequestLaunchTemplateConfigOverride)[vs[1].(int)]
	}).(SpotFleetRequestLaunchTemplateConfigOverrideOutput)
}

type SpotInstanceRequestCreditSpecification struct {
	// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits *string `pulumi:"cpuCredits"`
}

// SpotInstanceRequestCreditSpecificationInput is an input type that accepts SpotInstanceRequestCreditSpecificationArgs and SpotInstanceRequestCreditSpecificationOutput values.
// You can construct a concrete instance of `SpotInstanceRequestCreditSpecificationInput` via:
//
//          SpotInstanceRequestCreditSpecificationArgs{...}
type SpotInstanceRequestCreditSpecificationInput interface {
	pulumi.Input

	ToSpotInstanceRequestCreditSpecificationOutput() SpotInstanceRequestCreditSpecificationOutput
	ToSpotInstanceRequestCreditSpecificationOutputWithContext(context.Context) SpotInstanceRequestCreditSpecificationOutput
}

type SpotInstanceRequestCreditSpecificationArgs struct {
	// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits pulumi.StringPtrInput `pulumi:"cpuCredits"`
}

func (SpotInstanceRequestCreditSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestCreditSpecification)(nil)).Elem()
}

func (i SpotInstanceRequestCreditSpecificationArgs) ToSpotInstanceRequestCreditSpecificationOutput() SpotInstanceRequestCreditSpecificationOutput {
	return i.ToSpotInstanceRequestCreditSpecificationOutputWithContext(context.Background())
}

func (i SpotInstanceRequestCreditSpecificationArgs) ToSpotInstanceRequestCreditSpecificationOutputWithContext(ctx context.Context) SpotInstanceRequestCreditSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestCreditSpecificationOutput)
}

func (i SpotInstanceRequestCreditSpecificationArgs) ToSpotInstanceRequestCreditSpecificationPtrOutput() SpotInstanceRequestCreditSpecificationPtrOutput {
	return i.ToSpotInstanceRequestCreditSpecificationPtrOutputWithContext(context.Background())
}

func (i SpotInstanceRequestCreditSpecificationArgs) ToSpotInstanceRequestCreditSpecificationPtrOutputWithContext(ctx context.Context) SpotInstanceRequestCreditSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestCreditSpecificationOutput).ToSpotInstanceRequestCreditSpecificationPtrOutputWithContext(ctx)
}

// SpotInstanceRequestCreditSpecificationPtrInput is an input type that accepts SpotInstanceRequestCreditSpecificationArgs, SpotInstanceRequestCreditSpecificationPtr and SpotInstanceRequestCreditSpecificationPtrOutput values.
// You can construct a concrete instance of `SpotInstanceRequestCreditSpecificationPtrInput` via:
//
//          SpotInstanceRequestCreditSpecificationArgs{...}
//
//  or:
//
//          nil
type SpotInstanceRequestCreditSpecificationPtrInput interface {
	pulumi.Input

	ToSpotInstanceRequestCreditSpecificationPtrOutput() SpotInstanceRequestCreditSpecificationPtrOutput
	ToSpotInstanceRequestCreditSpecificationPtrOutputWithContext(context.Context) SpotInstanceRequestCreditSpecificationPtrOutput
}

type spotInstanceRequestCreditSpecificationPtrType SpotInstanceRequestCreditSpecificationArgs

func SpotInstanceRequestCreditSpecificationPtr(v *SpotInstanceRequestCreditSpecificationArgs) SpotInstanceRequestCreditSpecificationPtrInput {
	return (*spotInstanceRequestCreditSpecificationPtrType)(v)
}

func (*spotInstanceRequestCreditSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotInstanceRequestCreditSpecification)(nil)).Elem()
}

func (i *spotInstanceRequestCreditSpecificationPtrType) ToSpotInstanceRequestCreditSpecificationPtrOutput() SpotInstanceRequestCreditSpecificationPtrOutput {
	return i.ToSpotInstanceRequestCreditSpecificationPtrOutputWithContext(context.Background())
}

func (i *spotInstanceRequestCreditSpecificationPtrType) ToSpotInstanceRequestCreditSpecificationPtrOutputWithContext(ctx context.Context) SpotInstanceRequestCreditSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestCreditSpecificationPtrOutput)
}

type SpotInstanceRequestCreditSpecificationOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestCreditSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestCreditSpecification)(nil)).Elem()
}

func (o SpotInstanceRequestCreditSpecificationOutput) ToSpotInstanceRequestCreditSpecificationOutput() SpotInstanceRequestCreditSpecificationOutput {
	return o
}

func (o SpotInstanceRequestCreditSpecificationOutput) ToSpotInstanceRequestCreditSpecificationOutputWithContext(ctx context.Context) SpotInstanceRequestCreditSpecificationOutput {
	return o
}

func (o SpotInstanceRequestCreditSpecificationOutput) ToSpotInstanceRequestCreditSpecificationPtrOutput() SpotInstanceRequestCreditSpecificationPtrOutput {
	return o.ToSpotInstanceRequestCreditSpecificationPtrOutputWithContext(context.Background())
}

func (o SpotInstanceRequestCreditSpecificationOutput) ToSpotInstanceRequestCreditSpecificationPtrOutputWithContext(ctx context.Context) SpotInstanceRequestCreditSpecificationPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestCreditSpecification) *SpotInstanceRequestCreditSpecification {
		return &v
	}).(SpotInstanceRequestCreditSpecificationPtrOutput)
}

// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
func (o SpotInstanceRequestCreditSpecificationOutput) CpuCredits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestCreditSpecification) *string { return v.CpuCredits }).(pulumi.StringPtrOutput)
}

type SpotInstanceRequestCreditSpecificationPtrOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestCreditSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotInstanceRequestCreditSpecification)(nil)).Elem()
}

func (o SpotInstanceRequestCreditSpecificationPtrOutput) ToSpotInstanceRequestCreditSpecificationPtrOutput() SpotInstanceRequestCreditSpecificationPtrOutput {
	return o
}

func (o SpotInstanceRequestCreditSpecificationPtrOutput) ToSpotInstanceRequestCreditSpecificationPtrOutputWithContext(ctx context.Context) SpotInstanceRequestCreditSpecificationPtrOutput {
	return o
}

func (o SpotInstanceRequestCreditSpecificationPtrOutput) Elem() SpotInstanceRequestCreditSpecificationOutput {
	return o.ApplyT(func(v *SpotInstanceRequestCreditSpecification) SpotInstanceRequestCreditSpecification { return *v }).(SpotInstanceRequestCreditSpecificationOutput)
}

// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
func (o SpotInstanceRequestCreditSpecificationPtrOutput) CpuCredits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequestCreditSpecification) *string {
		if v == nil {
			return nil
		}
		return v.CpuCredits
	}).(pulumi.StringPtrOutput)
}

type SpotInstanceRequestEbsBlockDevice struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The name of the device to mount.
	DeviceName string `pulumi:"deviceName"`
	// Enables [EBS
	// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
	Encrypted *bool `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops *int `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId *string `pulumi:"snapshotId"`
	VolumeId   *string `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`,
	// or `"io1"`. (Default: `"gp2"`).
	VolumeType *string `pulumi:"volumeType"`
}

// SpotInstanceRequestEbsBlockDeviceInput is an input type that accepts SpotInstanceRequestEbsBlockDeviceArgs and SpotInstanceRequestEbsBlockDeviceOutput values.
// You can construct a concrete instance of `SpotInstanceRequestEbsBlockDeviceInput` via:
//
//          SpotInstanceRequestEbsBlockDeviceArgs{...}
type SpotInstanceRequestEbsBlockDeviceInput interface {
	pulumi.Input

	ToSpotInstanceRequestEbsBlockDeviceOutput() SpotInstanceRequestEbsBlockDeviceOutput
	ToSpotInstanceRequestEbsBlockDeviceOutputWithContext(context.Context) SpotInstanceRequestEbsBlockDeviceOutput
}

type SpotInstanceRequestEbsBlockDeviceArgs struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The name of the device to mount.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Enables [EBS
	// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	VolumeId   pulumi.StringPtrInput `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`,
	// or `"io1"`. (Default: `"gp2"`).
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (SpotInstanceRequestEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestEbsBlockDevice)(nil)).Elem()
}

func (i SpotInstanceRequestEbsBlockDeviceArgs) ToSpotInstanceRequestEbsBlockDeviceOutput() SpotInstanceRequestEbsBlockDeviceOutput {
	return i.ToSpotInstanceRequestEbsBlockDeviceOutputWithContext(context.Background())
}

func (i SpotInstanceRequestEbsBlockDeviceArgs) ToSpotInstanceRequestEbsBlockDeviceOutputWithContext(ctx context.Context) SpotInstanceRequestEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestEbsBlockDeviceOutput)
}

// SpotInstanceRequestEbsBlockDeviceArrayInput is an input type that accepts SpotInstanceRequestEbsBlockDeviceArray and SpotInstanceRequestEbsBlockDeviceArrayOutput values.
// You can construct a concrete instance of `SpotInstanceRequestEbsBlockDeviceArrayInput` via:
//
//          SpotInstanceRequestEbsBlockDeviceArray{ SpotInstanceRequestEbsBlockDeviceArgs{...} }
type SpotInstanceRequestEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToSpotInstanceRequestEbsBlockDeviceArrayOutput() SpotInstanceRequestEbsBlockDeviceArrayOutput
	ToSpotInstanceRequestEbsBlockDeviceArrayOutputWithContext(context.Context) SpotInstanceRequestEbsBlockDeviceArrayOutput
}

type SpotInstanceRequestEbsBlockDeviceArray []SpotInstanceRequestEbsBlockDeviceInput

func (SpotInstanceRequestEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestEbsBlockDevice)(nil)).Elem()
}

func (i SpotInstanceRequestEbsBlockDeviceArray) ToSpotInstanceRequestEbsBlockDeviceArrayOutput() SpotInstanceRequestEbsBlockDeviceArrayOutput {
	return i.ToSpotInstanceRequestEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i SpotInstanceRequestEbsBlockDeviceArray) ToSpotInstanceRequestEbsBlockDeviceArrayOutputWithContext(ctx context.Context) SpotInstanceRequestEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestEbsBlockDeviceArrayOutput)
}

type SpotInstanceRequestEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestEbsBlockDevice)(nil)).Elem()
}

func (o SpotInstanceRequestEbsBlockDeviceOutput) ToSpotInstanceRequestEbsBlockDeviceOutput() SpotInstanceRequestEbsBlockDeviceOutput {
	return o
}

func (o SpotInstanceRequestEbsBlockDeviceOutput) ToSpotInstanceRequestEbsBlockDeviceOutputWithContext(ctx context.Context) SpotInstanceRequestEbsBlockDeviceOutput {
	return o
}

// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o SpotInstanceRequestEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The name of the device to mount.
func (o SpotInstanceRequestEbsBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Enables [EBS
// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
func (o SpotInstanceRequestEbsBlockDeviceOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This must be set with a `volumeType` of `"io1"`.
func (o SpotInstanceRequestEbsBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o SpotInstanceRequestEbsBlockDeviceOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDevice) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The Snapshot ID to mount.
func (o SpotInstanceRequestEbsBlockDeviceOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDevice) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

func (o SpotInstanceRequestEbsBlockDeviceOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDevice) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gibibytes (GiB).
func (o SpotInstanceRequestEbsBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`,
// or `"io1"`. (Default: `"gp2"`).
func (o SpotInstanceRequestEbsBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type SpotInstanceRequestEbsBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestEbsBlockDevice)(nil)).Elem()
}

func (o SpotInstanceRequestEbsBlockDeviceArrayOutput) ToSpotInstanceRequestEbsBlockDeviceArrayOutput() SpotInstanceRequestEbsBlockDeviceArrayOutput {
	return o
}

func (o SpotInstanceRequestEbsBlockDeviceArrayOutput) ToSpotInstanceRequestEbsBlockDeviceArrayOutputWithContext(ctx context.Context) SpotInstanceRequestEbsBlockDeviceArrayOutput {
	return o
}

func (o SpotInstanceRequestEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) SpotInstanceRequestEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotInstanceRequestEbsBlockDevice {
		return vs[0].([]SpotInstanceRequestEbsBlockDevice)[vs[1].(int)]
	}).(SpotInstanceRequestEbsBlockDeviceOutput)
}

type SpotInstanceRequestEphemeralBlockDevice struct {
	// The name of the block device to mount on the instance.
	DeviceName string `pulumi:"deviceName"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice *bool `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g. `"ephemeral0"`).
	VirtualName *string `pulumi:"virtualName"`
}

// SpotInstanceRequestEphemeralBlockDeviceInput is an input type that accepts SpotInstanceRequestEphemeralBlockDeviceArgs and SpotInstanceRequestEphemeralBlockDeviceOutput values.
// You can construct a concrete instance of `SpotInstanceRequestEphemeralBlockDeviceInput` via:
//
//          SpotInstanceRequestEphemeralBlockDeviceArgs{...}
type SpotInstanceRequestEphemeralBlockDeviceInput interface {
	pulumi.Input

	ToSpotInstanceRequestEphemeralBlockDeviceOutput() SpotInstanceRequestEphemeralBlockDeviceOutput
	ToSpotInstanceRequestEphemeralBlockDeviceOutputWithContext(context.Context) SpotInstanceRequestEphemeralBlockDeviceOutput
}

type SpotInstanceRequestEphemeralBlockDeviceArgs struct {
	// The name of the block device to mount on the instance.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice pulumi.BoolPtrInput `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g. `"ephemeral0"`).
	VirtualName pulumi.StringPtrInput `pulumi:"virtualName"`
}

func (SpotInstanceRequestEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestEphemeralBlockDevice)(nil)).Elem()
}

func (i SpotInstanceRequestEphemeralBlockDeviceArgs) ToSpotInstanceRequestEphemeralBlockDeviceOutput() SpotInstanceRequestEphemeralBlockDeviceOutput {
	return i.ToSpotInstanceRequestEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i SpotInstanceRequestEphemeralBlockDeviceArgs) ToSpotInstanceRequestEphemeralBlockDeviceOutputWithContext(ctx context.Context) SpotInstanceRequestEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestEphemeralBlockDeviceOutput)
}

// SpotInstanceRequestEphemeralBlockDeviceArrayInput is an input type that accepts SpotInstanceRequestEphemeralBlockDeviceArray and SpotInstanceRequestEphemeralBlockDeviceArrayOutput values.
// You can construct a concrete instance of `SpotInstanceRequestEphemeralBlockDeviceArrayInput` via:
//
//          SpotInstanceRequestEphemeralBlockDeviceArray{ SpotInstanceRequestEphemeralBlockDeviceArgs{...} }
type SpotInstanceRequestEphemeralBlockDeviceArrayInput interface {
	pulumi.Input

	ToSpotInstanceRequestEphemeralBlockDeviceArrayOutput() SpotInstanceRequestEphemeralBlockDeviceArrayOutput
	ToSpotInstanceRequestEphemeralBlockDeviceArrayOutputWithContext(context.Context) SpotInstanceRequestEphemeralBlockDeviceArrayOutput
}

type SpotInstanceRequestEphemeralBlockDeviceArray []SpotInstanceRequestEphemeralBlockDeviceInput

func (SpotInstanceRequestEphemeralBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestEphemeralBlockDevice)(nil)).Elem()
}

func (i SpotInstanceRequestEphemeralBlockDeviceArray) ToSpotInstanceRequestEphemeralBlockDeviceArrayOutput() SpotInstanceRequestEphemeralBlockDeviceArrayOutput {
	return i.ToSpotInstanceRequestEphemeralBlockDeviceArrayOutputWithContext(context.Background())
}

func (i SpotInstanceRequestEphemeralBlockDeviceArray) ToSpotInstanceRequestEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) SpotInstanceRequestEphemeralBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestEphemeralBlockDeviceArrayOutput)
}

type SpotInstanceRequestEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestEphemeralBlockDevice)(nil)).Elem()
}

func (o SpotInstanceRequestEphemeralBlockDeviceOutput) ToSpotInstanceRequestEphemeralBlockDeviceOutput() SpotInstanceRequestEphemeralBlockDeviceOutput {
	return o
}

func (o SpotInstanceRequestEphemeralBlockDeviceOutput) ToSpotInstanceRequestEphemeralBlockDeviceOutputWithContext(ctx context.Context) SpotInstanceRequestEphemeralBlockDeviceOutput {
	return o
}

// The name of the block device to mount on the instance.
func (o SpotInstanceRequestEphemeralBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v SpotInstanceRequestEphemeralBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Suppresses the specified device included in the AMI's block device mapping.
func (o SpotInstanceRequestEphemeralBlockDeviceOutput) NoDevice() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEphemeralBlockDevice) *bool { return v.NoDevice }).(pulumi.BoolPtrOutput)
}

// The [Instance Store Device
// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
// (e.g. `"ephemeral0"`).
func (o SpotInstanceRequestEphemeralBlockDeviceOutput) VirtualName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEphemeralBlockDevice) *string { return v.VirtualName }).(pulumi.StringPtrOutput)
}

type SpotInstanceRequestEphemeralBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestEphemeralBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestEphemeralBlockDevice)(nil)).Elem()
}

func (o SpotInstanceRequestEphemeralBlockDeviceArrayOutput) ToSpotInstanceRequestEphemeralBlockDeviceArrayOutput() SpotInstanceRequestEphemeralBlockDeviceArrayOutput {
	return o
}

func (o SpotInstanceRequestEphemeralBlockDeviceArrayOutput) ToSpotInstanceRequestEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) SpotInstanceRequestEphemeralBlockDeviceArrayOutput {
	return o
}

func (o SpotInstanceRequestEphemeralBlockDeviceArrayOutput) Index(i pulumi.IntInput) SpotInstanceRequestEphemeralBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotInstanceRequestEphemeralBlockDevice {
		return vs[0].([]SpotInstanceRequestEphemeralBlockDevice)[vs[1].(int)]
	}).(SpotInstanceRequestEphemeralBlockDeviceOutput)
}

type SpotInstanceRequestMetadataOptions struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint *string `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit *int `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens *string `pulumi:"httpTokens"`
}

// SpotInstanceRequestMetadataOptionsInput is an input type that accepts SpotInstanceRequestMetadataOptionsArgs and SpotInstanceRequestMetadataOptionsOutput values.
// You can construct a concrete instance of `SpotInstanceRequestMetadataOptionsInput` via:
//
//          SpotInstanceRequestMetadataOptionsArgs{...}
type SpotInstanceRequestMetadataOptionsInput interface {
	pulumi.Input

	ToSpotInstanceRequestMetadataOptionsOutput() SpotInstanceRequestMetadataOptionsOutput
	ToSpotInstanceRequestMetadataOptionsOutputWithContext(context.Context) SpotInstanceRequestMetadataOptionsOutput
}

type SpotInstanceRequestMetadataOptionsArgs struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint pulumi.StringPtrInput `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit pulumi.IntPtrInput `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens pulumi.StringPtrInput `pulumi:"httpTokens"`
}

func (SpotInstanceRequestMetadataOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestMetadataOptions)(nil)).Elem()
}

func (i SpotInstanceRequestMetadataOptionsArgs) ToSpotInstanceRequestMetadataOptionsOutput() SpotInstanceRequestMetadataOptionsOutput {
	return i.ToSpotInstanceRequestMetadataOptionsOutputWithContext(context.Background())
}

func (i SpotInstanceRequestMetadataOptionsArgs) ToSpotInstanceRequestMetadataOptionsOutputWithContext(ctx context.Context) SpotInstanceRequestMetadataOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestMetadataOptionsOutput)
}

func (i SpotInstanceRequestMetadataOptionsArgs) ToSpotInstanceRequestMetadataOptionsPtrOutput() SpotInstanceRequestMetadataOptionsPtrOutput {
	return i.ToSpotInstanceRequestMetadataOptionsPtrOutputWithContext(context.Background())
}

func (i SpotInstanceRequestMetadataOptionsArgs) ToSpotInstanceRequestMetadataOptionsPtrOutputWithContext(ctx context.Context) SpotInstanceRequestMetadataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestMetadataOptionsOutput).ToSpotInstanceRequestMetadataOptionsPtrOutputWithContext(ctx)
}

// SpotInstanceRequestMetadataOptionsPtrInput is an input type that accepts SpotInstanceRequestMetadataOptionsArgs, SpotInstanceRequestMetadataOptionsPtr and SpotInstanceRequestMetadataOptionsPtrOutput values.
// You can construct a concrete instance of `SpotInstanceRequestMetadataOptionsPtrInput` via:
//
//          SpotInstanceRequestMetadataOptionsArgs{...}
//
//  or:
//
//          nil
type SpotInstanceRequestMetadataOptionsPtrInput interface {
	pulumi.Input

	ToSpotInstanceRequestMetadataOptionsPtrOutput() SpotInstanceRequestMetadataOptionsPtrOutput
	ToSpotInstanceRequestMetadataOptionsPtrOutputWithContext(context.Context) SpotInstanceRequestMetadataOptionsPtrOutput
}

type spotInstanceRequestMetadataOptionsPtrType SpotInstanceRequestMetadataOptionsArgs

func SpotInstanceRequestMetadataOptionsPtr(v *SpotInstanceRequestMetadataOptionsArgs) SpotInstanceRequestMetadataOptionsPtrInput {
	return (*spotInstanceRequestMetadataOptionsPtrType)(v)
}

func (*spotInstanceRequestMetadataOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotInstanceRequestMetadataOptions)(nil)).Elem()
}

func (i *spotInstanceRequestMetadataOptionsPtrType) ToSpotInstanceRequestMetadataOptionsPtrOutput() SpotInstanceRequestMetadataOptionsPtrOutput {
	return i.ToSpotInstanceRequestMetadataOptionsPtrOutputWithContext(context.Background())
}

func (i *spotInstanceRequestMetadataOptionsPtrType) ToSpotInstanceRequestMetadataOptionsPtrOutputWithContext(ctx context.Context) SpotInstanceRequestMetadataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestMetadataOptionsPtrOutput)
}

type SpotInstanceRequestMetadataOptionsOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestMetadataOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestMetadataOptions)(nil)).Elem()
}

func (o SpotInstanceRequestMetadataOptionsOutput) ToSpotInstanceRequestMetadataOptionsOutput() SpotInstanceRequestMetadataOptionsOutput {
	return o
}

func (o SpotInstanceRequestMetadataOptionsOutput) ToSpotInstanceRequestMetadataOptionsOutputWithContext(ctx context.Context) SpotInstanceRequestMetadataOptionsOutput {
	return o
}

func (o SpotInstanceRequestMetadataOptionsOutput) ToSpotInstanceRequestMetadataOptionsPtrOutput() SpotInstanceRequestMetadataOptionsPtrOutput {
	return o.ToSpotInstanceRequestMetadataOptionsPtrOutputWithContext(context.Background())
}

func (o SpotInstanceRequestMetadataOptionsOutput) ToSpotInstanceRequestMetadataOptionsPtrOutputWithContext(ctx context.Context) SpotInstanceRequestMetadataOptionsPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestMetadataOptions) *SpotInstanceRequestMetadataOptions {
		return &v
	}).(SpotInstanceRequestMetadataOptionsPtrOutput)
}

// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
func (o SpotInstanceRequestMetadataOptionsOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestMetadataOptions) *string { return v.HttpEndpoint }).(pulumi.StringPtrOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
func (o SpotInstanceRequestMetadataOptionsOutput) HttpPutResponseHopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestMetadataOptions) *int { return v.HttpPutResponseHopLimit }).(pulumi.IntPtrOutput)
}

// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
func (o SpotInstanceRequestMetadataOptionsOutput) HttpTokens() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestMetadataOptions) *string { return v.HttpTokens }).(pulumi.StringPtrOutput)
}

type SpotInstanceRequestMetadataOptionsPtrOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestMetadataOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotInstanceRequestMetadataOptions)(nil)).Elem()
}

func (o SpotInstanceRequestMetadataOptionsPtrOutput) ToSpotInstanceRequestMetadataOptionsPtrOutput() SpotInstanceRequestMetadataOptionsPtrOutput {
	return o
}

func (o SpotInstanceRequestMetadataOptionsPtrOutput) ToSpotInstanceRequestMetadataOptionsPtrOutputWithContext(ctx context.Context) SpotInstanceRequestMetadataOptionsPtrOutput {
	return o
}

func (o SpotInstanceRequestMetadataOptionsPtrOutput) Elem() SpotInstanceRequestMetadataOptionsOutput {
	return o.ApplyT(func(v *SpotInstanceRequestMetadataOptions) SpotInstanceRequestMetadataOptions { return *v }).(SpotInstanceRequestMetadataOptionsOutput)
}

// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
func (o SpotInstanceRequestMetadataOptionsPtrOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequestMetadataOptions) *string {
		if v == nil {
			return nil
		}
		return v.HttpEndpoint
	}).(pulumi.StringPtrOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
func (o SpotInstanceRequestMetadataOptionsPtrOutput) HttpPutResponseHopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequestMetadataOptions) *int {
		if v == nil {
			return nil
		}
		return v.HttpPutResponseHopLimit
	}).(pulumi.IntPtrOutput)
}

// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
func (o SpotInstanceRequestMetadataOptionsPtrOutput) HttpTokens() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequestMetadataOptions) *string {
		if v == nil {
			return nil
		}
		return v.HttpTokens
	}).(pulumi.StringPtrOutput)
}

type SpotInstanceRequestNetworkInterface struct {
	// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The integer index of the network interface attachment. Limited by instance type.
	DeviceIndex int `pulumi:"deviceIndex"`
	// The ID of the network interface to attach.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
}

// SpotInstanceRequestNetworkInterfaceInput is an input type that accepts SpotInstanceRequestNetworkInterfaceArgs and SpotInstanceRequestNetworkInterfaceOutput values.
// You can construct a concrete instance of `SpotInstanceRequestNetworkInterfaceInput` via:
//
//          SpotInstanceRequestNetworkInterfaceArgs{...}
type SpotInstanceRequestNetworkInterfaceInput interface {
	pulumi.Input

	ToSpotInstanceRequestNetworkInterfaceOutput() SpotInstanceRequestNetworkInterfaceOutput
	ToSpotInstanceRequestNetworkInterfaceOutputWithContext(context.Context) SpotInstanceRequestNetworkInterfaceOutput
}

type SpotInstanceRequestNetworkInterfaceArgs struct {
	// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The integer index of the network interface attachment. Limited by instance type.
	DeviceIndex pulumi.IntInput `pulumi:"deviceIndex"`
	// The ID of the network interface to attach.
	NetworkInterfaceId pulumi.StringInput `pulumi:"networkInterfaceId"`
}

func (SpotInstanceRequestNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestNetworkInterface)(nil)).Elem()
}

func (i SpotInstanceRequestNetworkInterfaceArgs) ToSpotInstanceRequestNetworkInterfaceOutput() SpotInstanceRequestNetworkInterfaceOutput {
	return i.ToSpotInstanceRequestNetworkInterfaceOutputWithContext(context.Background())
}

func (i SpotInstanceRequestNetworkInterfaceArgs) ToSpotInstanceRequestNetworkInterfaceOutputWithContext(ctx context.Context) SpotInstanceRequestNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestNetworkInterfaceOutput)
}

// SpotInstanceRequestNetworkInterfaceArrayInput is an input type that accepts SpotInstanceRequestNetworkInterfaceArray and SpotInstanceRequestNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `SpotInstanceRequestNetworkInterfaceArrayInput` via:
//
//          SpotInstanceRequestNetworkInterfaceArray{ SpotInstanceRequestNetworkInterfaceArgs{...} }
type SpotInstanceRequestNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToSpotInstanceRequestNetworkInterfaceArrayOutput() SpotInstanceRequestNetworkInterfaceArrayOutput
	ToSpotInstanceRequestNetworkInterfaceArrayOutputWithContext(context.Context) SpotInstanceRequestNetworkInterfaceArrayOutput
}

type SpotInstanceRequestNetworkInterfaceArray []SpotInstanceRequestNetworkInterfaceInput

func (SpotInstanceRequestNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestNetworkInterface)(nil)).Elem()
}

func (i SpotInstanceRequestNetworkInterfaceArray) ToSpotInstanceRequestNetworkInterfaceArrayOutput() SpotInstanceRequestNetworkInterfaceArrayOutput {
	return i.ToSpotInstanceRequestNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i SpotInstanceRequestNetworkInterfaceArray) ToSpotInstanceRequestNetworkInterfaceArrayOutputWithContext(ctx context.Context) SpotInstanceRequestNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestNetworkInterfaceArrayOutput)
}

type SpotInstanceRequestNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestNetworkInterface)(nil)).Elem()
}

func (o SpotInstanceRequestNetworkInterfaceOutput) ToSpotInstanceRequestNetworkInterfaceOutput() SpotInstanceRequestNetworkInterfaceOutput {
	return o
}

func (o SpotInstanceRequestNetworkInterfaceOutput) ToSpotInstanceRequestNetworkInterfaceOutputWithContext(ctx context.Context) SpotInstanceRequestNetworkInterfaceOutput {
	return o
}

// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
func (o SpotInstanceRequestNetworkInterfaceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestNetworkInterface) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The integer index of the network interface attachment. Limited by instance type.
func (o SpotInstanceRequestNetworkInterfaceOutput) DeviceIndex() pulumi.IntOutput {
	return o.ApplyT(func(v SpotInstanceRequestNetworkInterface) int { return v.DeviceIndex }).(pulumi.IntOutput)
}

// The ID of the network interface to attach.
func (o SpotInstanceRequestNetworkInterfaceOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v SpotInstanceRequestNetworkInterface) string { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

type SpotInstanceRequestNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestNetworkInterface)(nil)).Elem()
}

func (o SpotInstanceRequestNetworkInterfaceArrayOutput) ToSpotInstanceRequestNetworkInterfaceArrayOutput() SpotInstanceRequestNetworkInterfaceArrayOutput {
	return o
}

func (o SpotInstanceRequestNetworkInterfaceArrayOutput) ToSpotInstanceRequestNetworkInterfaceArrayOutputWithContext(ctx context.Context) SpotInstanceRequestNetworkInterfaceArrayOutput {
	return o
}

func (o SpotInstanceRequestNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) SpotInstanceRequestNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotInstanceRequestNetworkInterface {
		return vs[0].([]SpotInstanceRequestNetworkInterface)[vs[1].(int)]
	}).(SpotInstanceRequestNetworkInterfaceOutput)
}

type SpotInstanceRequestRootBlockDevice struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The name of the device to mount.
	DeviceName *string `pulumi:"deviceName"`
	// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
	Encrypted *bool `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This is only valid for `volumeType` of `"io1"`, and must be specified if
	// using that type
	Iops *int `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	VolumeId *string `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
	VolumeType *string `pulumi:"volumeType"`
}

// SpotInstanceRequestRootBlockDeviceInput is an input type that accepts SpotInstanceRequestRootBlockDeviceArgs and SpotInstanceRequestRootBlockDeviceOutput values.
// You can construct a concrete instance of `SpotInstanceRequestRootBlockDeviceInput` via:
//
//          SpotInstanceRequestRootBlockDeviceArgs{...}
type SpotInstanceRequestRootBlockDeviceInput interface {
	pulumi.Input

	ToSpotInstanceRequestRootBlockDeviceOutput() SpotInstanceRequestRootBlockDeviceOutput
	ToSpotInstanceRequestRootBlockDeviceOutputWithContext(context.Context) SpotInstanceRequestRootBlockDeviceOutput
}

type SpotInstanceRequestRootBlockDeviceArgs struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The name of the device to mount.
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This is only valid for `volumeType` of `"io1"`, and must be specified if
	// using that type
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	VolumeId pulumi.StringPtrInput `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (SpotInstanceRequestRootBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestRootBlockDevice)(nil)).Elem()
}

func (i SpotInstanceRequestRootBlockDeviceArgs) ToSpotInstanceRequestRootBlockDeviceOutput() SpotInstanceRequestRootBlockDeviceOutput {
	return i.ToSpotInstanceRequestRootBlockDeviceOutputWithContext(context.Background())
}

func (i SpotInstanceRequestRootBlockDeviceArgs) ToSpotInstanceRequestRootBlockDeviceOutputWithContext(ctx context.Context) SpotInstanceRequestRootBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestRootBlockDeviceOutput)
}

func (i SpotInstanceRequestRootBlockDeviceArgs) ToSpotInstanceRequestRootBlockDevicePtrOutput() SpotInstanceRequestRootBlockDevicePtrOutput {
	return i.ToSpotInstanceRequestRootBlockDevicePtrOutputWithContext(context.Background())
}

func (i SpotInstanceRequestRootBlockDeviceArgs) ToSpotInstanceRequestRootBlockDevicePtrOutputWithContext(ctx context.Context) SpotInstanceRequestRootBlockDevicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestRootBlockDeviceOutput).ToSpotInstanceRequestRootBlockDevicePtrOutputWithContext(ctx)
}

// SpotInstanceRequestRootBlockDevicePtrInput is an input type that accepts SpotInstanceRequestRootBlockDeviceArgs, SpotInstanceRequestRootBlockDevicePtr and SpotInstanceRequestRootBlockDevicePtrOutput values.
// You can construct a concrete instance of `SpotInstanceRequestRootBlockDevicePtrInput` via:
//
//          SpotInstanceRequestRootBlockDeviceArgs{...}
//
//  or:
//
//          nil
type SpotInstanceRequestRootBlockDevicePtrInput interface {
	pulumi.Input

	ToSpotInstanceRequestRootBlockDevicePtrOutput() SpotInstanceRequestRootBlockDevicePtrOutput
	ToSpotInstanceRequestRootBlockDevicePtrOutputWithContext(context.Context) SpotInstanceRequestRootBlockDevicePtrOutput
}

type spotInstanceRequestRootBlockDevicePtrType SpotInstanceRequestRootBlockDeviceArgs

func SpotInstanceRequestRootBlockDevicePtr(v *SpotInstanceRequestRootBlockDeviceArgs) SpotInstanceRequestRootBlockDevicePtrInput {
	return (*spotInstanceRequestRootBlockDevicePtrType)(v)
}

func (*spotInstanceRequestRootBlockDevicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotInstanceRequestRootBlockDevice)(nil)).Elem()
}

func (i *spotInstanceRequestRootBlockDevicePtrType) ToSpotInstanceRequestRootBlockDevicePtrOutput() SpotInstanceRequestRootBlockDevicePtrOutput {
	return i.ToSpotInstanceRequestRootBlockDevicePtrOutputWithContext(context.Background())
}

func (i *spotInstanceRequestRootBlockDevicePtrType) ToSpotInstanceRequestRootBlockDevicePtrOutputWithContext(ctx context.Context) SpotInstanceRequestRootBlockDevicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestRootBlockDevicePtrOutput)
}

type SpotInstanceRequestRootBlockDeviceOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestRootBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestRootBlockDevice)(nil)).Elem()
}

func (o SpotInstanceRequestRootBlockDeviceOutput) ToSpotInstanceRequestRootBlockDeviceOutput() SpotInstanceRequestRootBlockDeviceOutput {
	return o
}

func (o SpotInstanceRequestRootBlockDeviceOutput) ToSpotInstanceRequestRootBlockDeviceOutputWithContext(ctx context.Context) SpotInstanceRequestRootBlockDeviceOutput {
	return o
}

func (o SpotInstanceRequestRootBlockDeviceOutput) ToSpotInstanceRequestRootBlockDevicePtrOutput() SpotInstanceRequestRootBlockDevicePtrOutput {
	return o.ToSpotInstanceRequestRootBlockDevicePtrOutputWithContext(context.Background())
}

func (o SpotInstanceRequestRootBlockDeviceOutput) ToSpotInstanceRequestRootBlockDevicePtrOutputWithContext(ctx context.Context) SpotInstanceRequestRootBlockDevicePtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) *SpotInstanceRequestRootBlockDevice {
		return &v
	}).(SpotInstanceRequestRootBlockDevicePtrOutput)
}

// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o SpotInstanceRequestRootBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The name of the device to mount.
func (o SpotInstanceRequestRootBlockDeviceOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
func (o SpotInstanceRequestRootBlockDeviceOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This is only valid for `volumeType` of `"io1"`, and must be specified if
// using that type
func (o SpotInstanceRequestRootBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o SpotInstanceRequestRootBlockDeviceOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o SpotInstanceRequestRootBlockDeviceOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gibibytes (GiB).
func (o SpotInstanceRequestRootBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
func (o SpotInstanceRequestRootBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type SpotInstanceRequestRootBlockDevicePtrOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestRootBlockDevicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotInstanceRequestRootBlockDevice)(nil)).Elem()
}

func (o SpotInstanceRequestRootBlockDevicePtrOutput) ToSpotInstanceRequestRootBlockDevicePtrOutput() SpotInstanceRequestRootBlockDevicePtrOutput {
	return o
}

func (o SpotInstanceRequestRootBlockDevicePtrOutput) ToSpotInstanceRequestRootBlockDevicePtrOutputWithContext(ctx context.Context) SpotInstanceRequestRootBlockDevicePtrOutput {
	return o
}

func (o SpotInstanceRequestRootBlockDevicePtrOutput) Elem() SpotInstanceRequestRootBlockDeviceOutput {
	return o.ApplyT(func(v *SpotInstanceRequestRootBlockDevice) SpotInstanceRequestRootBlockDevice { return *v }).(SpotInstanceRequestRootBlockDeviceOutput)
}

// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o SpotInstanceRequestRootBlockDevicePtrOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequestRootBlockDevice) *bool {
		if v == nil {
			return nil
		}
		return v.DeleteOnTermination
	}).(pulumi.BoolPtrOutput)
}

// The name of the device to mount.
func (o SpotInstanceRequestRootBlockDevicePtrOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequestRootBlockDevice) *string {
		if v == nil {
			return nil
		}
		return v.DeviceName
	}).(pulumi.StringPtrOutput)
}

// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
func (o SpotInstanceRequestRootBlockDevicePtrOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequestRootBlockDevice) *bool {
		if v == nil {
			return nil
		}
		return v.Encrypted
	}).(pulumi.BoolPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This is only valid for `volumeType` of `"io1"`, and must be specified if
// using that type
func (o SpotInstanceRequestRootBlockDevicePtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequestRootBlockDevice) *int {
		if v == nil {
			return nil
		}
		return v.Iops
	}).(pulumi.IntPtrOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o SpotInstanceRequestRootBlockDevicePtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequestRootBlockDevice) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

func (o SpotInstanceRequestRootBlockDevicePtrOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequestRootBlockDevice) *string {
		if v == nil {
			return nil
		}
		return v.VolumeId
	}).(pulumi.StringPtrOutput)
}

// The size of the volume in gibibytes (GiB).
func (o SpotInstanceRequestRootBlockDevicePtrOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequestRootBlockDevice) *int {
		if v == nil {
			return nil
		}
		return v.VolumeSize
	}).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
func (o SpotInstanceRequestRootBlockDevicePtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotInstanceRequestRootBlockDevice) *string {
		if v == nil {
			return nil
		}
		return v.VolumeType
	}).(pulumi.StringPtrOutput)
}

type TrafficMirrorFilterRuleDestinationPortRange struct {
	// Starting port of the range
	FromPort *int `pulumi:"fromPort"`
	// Ending port of the range
	ToPort *int `pulumi:"toPort"`
}

// TrafficMirrorFilterRuleDestinationPortRangeInput is an input type that accepts TrafficMirrorFilterRuleDestinationPortRangeArgs and TrafficMirrorFilterRuleDestinationPortRangeOutput values.
// You can construct a concrete instance of `TrafficMirrorFilterRuleDestinationPortRangeInput` via:
//
//          TrafficMirrorFilterRuleDestinationPortRangeArgs{...}
type TrafficMirrorFilterRuleDestinationPortRangeInput interface {
	pulumi.Input

	ToTrafficMirrorFilterRuleDestinationPortRangeOutput() TrafficMirrorFilterRuleDestinationPortRangeOutput
	ToTrafficMirrorFilterRuleDestinationPortRangeOutputWithContext(context.Context) TrafficMirrorFilterRuleDestinationPortRangeOutput
}

type TrafficMirrorFilterRuleDestinationPortRangeArgs struct {
	// Starting port of the range
	FromPort pulumi.IntPtrInput `pulumi:"fromPort"`
	// Ending port of the range
	ToPort pulumi.IntPtrInput `pulumi:"toPort"`
}

func (TrafficMirrorFilterRuleDestinationPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilterRuleDestinationPortRange)(nil)).Elem()
}

func (i TrafficMirrorFilterRuleDestinationPortRangeArgs) ToTrafficMirrorFilterRuleDestinationPortRangeOutput() TrafficMirrorFilterRuleDestinationPortRangeOutput {
	return i.ToTrafficMirrorFilterRuleDestinationPortRangeOutputWithContext(context.Background())
}

func (i TrafficMirrorFilterRuleDestinationPortRangeArgs) ToTrafficMirrorFilterRuleDestinationPortRangeOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleDestinationPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleDestinationPortRangeOutput)
}

func (i TrafficMirrorFilterRuleDestinationPortRangeArgs) ToTrafficMirrorFilterRuleDestinationPortRangePtrOutput() TrafficMirrorFilterRuleDestinationPortRangePtrOutput {
	return i.ToTrafficMirrorFilterRuleDestinationPortRangePtrOutputWithContext(context.Background())
}

func (i TrafficMirrorFilterRuleDestinationPortRangeArgs) ToTrafficMirrorFilterRuleDestinationPortRangePtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleDestinationPortRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleDestinationPortRangeOutput).ToTrafficMirrorFilterRuleDestinationPortRangePtrOutputWithContext(ctx)
}

// TrafficMirrorFilterRuleDestinationPortRangePtrInput is an input type that accepts TrafficMirrorFilterRuleDestinationPortRangeArgs, TrafficMirrorFilterRuleDestinationPortRangePtr and TrafficMirrorFilterRuleDestinationPortRangePtrOutput values.
// You can construct a concrete instance of `TrafficMirrorFilterRuleDestinationPortRangePtrInput` via:
//
//          TrafficMirrorFilterRuleDestinationPortRangeArgs{...}
//
//  or:
//
//          nil
type TrafficMirrorFilterRuleDestinationPortRangePtrInput interface {
	pulumi.Input

	ToTrafficMirrorFilterRuleDestinationPortRangePtrOutput() TrafficMirrorFilterRuleDestinationPortRangePtrOutput
	ToTrafficMirrorFilterRuleDestinationPortRangePtrOutputWithContext(context.Context) TrafficMirrorFilterRuleDestinationPortRangePtrOutput
}

type trafficMirrorFilterRuleDestinationPortRangePtrType TrafficMirrorFilterRuleDestinationPortRangeArgs

func TrafficMirrorFilterRuleDestinationPortRangePtr(v *TrafficMirrorFilterRuleDestinationPortRangeArgs) TrafficMirrorFilterRuleDestinationPortRangePtrInput {
	return (*trafficMirrorFilterRuleDestinationPortRangePtrType)(v)
}

func (*trafficMirrorFilterRuleDestinationPortRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficMirrorFilterRuleDestinationPortRange)(nil)).Elem()
}

func (i *trafficMirrorFilterRuleDestinationPortRangePtrType) ToTrafficMirrorFilterRuleDestinationPortRangePtrOutput() TrafficMirrorFilterRuleDestinationPortRangePtrOutput {
	return i.ToTrafficMirrorFilterRuleDestinationPortRangePtrOutputWithContext(context.Background())
}

func (i *trafficMirrorFilterRuleDestinationPortRangePtrType) ToTrafficMirrorFilterRuleDestinationPortRangePtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleDestinationPortRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleDestinationPortRangePtrOutput)
}

type TrafficMirrorFilterRuleDestinationPortRangeOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFilterRuleDestinationPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilterRuleDestinationPortRange)(nil)).Elem()
}

func (o TrafficMirrorFilterRuleDestinationPortRangeOutput) ToTrafficMirrorFilterRuleDestinationPortRangeOutput() TrafficMirrorFilterRuleDestinationPortRangeOutput {
	return o
}

func (o TrafficMirrorFilterRuleDestinationPortRangeOutput) ToTrafficMirrorFilterRuleDestinationPortRangeOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleDestinationPortRangeOutput {
	return o
}

func (o TrafficMirrorFilterRuleDestinationPortRangeOutput) ToTrafficMirrorFilterRuleDestinationPortRangePtrOutput() TrafficMirrorFilterRuleDestinationPortRangePtrOutput {
	return o.ToTrafficMirrorFilterRuleDestinationPortRangePtrOutputWithContext(context.Background())
}

func (o TrafficMirrorFilterRuleDestinationPortRangeOutput) ToTrafficMirrorFilterRuleDestinationPortRangePtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleDestinationPortRangePtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleDestinationPortRange) *TrafficMirrorFilterRuleDestinationPortRange {
		return &v
	}).(TrafficMirrorFilterRuleDestinationPortRangePtrOutput)
}

// Starting port of the range
func (o TrafficMirrorFilterRuleDestinationPortRangeOutput) FromPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleDestinationPortRange) *int { return v.FromPort }).(pulumi.IntPtrOutput)
}

// Ending port of the range
func (o TrafficMirrorFilterRuleDestinationPortRangeOutput) ToPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleDestinationPortRange) *int { return v.ToPort }).(pulumi.IntPtrOutput)
}

type TrafficMirrorFilterRuleDestinationPortRangePtrOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFilterRuleDestinationPortRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficMirrorFilterRuleDestinationPortRange)(nil)).Elem()
}

func (o TrafficMirrorFilterRuleDestinationPortRangePtrOutput) ToTrafficMirrorFilterRuleDestinationPortRangePtrOutput() TrafficMirrorFilterRuleDestinationPortRangePtrOutput {
	return o
}

func (o TrafficMirrorFilterRuleDestinationPortRangePtrOutput) ToTrafficMirrorFilterRuleDestinationPortRangePtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleDestinationPortRangePtrOutput {
	return o
}

func (o TrafficMirrorFilterRuleDestinationPortRangePtrOutput) Elem() TrafficMirrorFilterRuleDestinationPortRangeOutput {
	return o.ApplyT(func(v *TrafficMirrorFilterRuleDestinationPortRange) TrafficMirrorFilterRuleDestinationPortRange {
		return *v
	}).(TrafficMirrorFilterRuleDestinationPortRangeOutput)
}

// Starting port of the range
func (o TrafficMirrorFilterRuleDestinationPortRangePtrOutput) FromPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TrafficMirrorFilterRuleDestinationPortRange) *int {
		if v == nil {
			return nil
		}
		return v.FromPort
	}).(pulumi.IntPtrOutput)
}

// Ending port of the range
func (o TrafficMirrorFilterRuleDestinationPortRangePtrOutput) ToPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TrafficMirrorFilterRuleDestinationPortRange) *int {
		if v == nil {
			return nil
		}
		return v.ToPort
	}).(pulumi.IntPtrOutput)
}

type TrafficMirrorFilterRuleSourcePortRange struct {
	// Starting port of the range
	FromPort *int `pulumi:"fromPort"`
	// Ending port of the range
	ToPort *int `pulumi:"toPort"`
}

// TrafficMirrorFilterRuleSourcePortRangeInput is an input type that accepts TrafficMirrorFilterRuleSourcePortRangeArgs and TrafficMirrorFilterRuleSourcePortRangeOutput values.
// You can construct a concrete instance of `TrafficMirrorFilterRuleSourcePortRangeInput` via:
//
//          TrafficMirrorFilterRuleSourcePortRangeArgs{...}
type TrafficMirrorFilterRuleSourcePortRangeInput interface {
	pulumi.Input

	ToTrafficMirrorFilterRuleSourcePortRangeOutput() TrafficMirrorFilterRuleSourcePortRangeOutput
	ToTrafficMirrorFilterRuleSourcePortRangeOutputWithContext(context.Context) TrafficMirrorFilterRuleSourcePortRangeOutput
}

type TrafficMirrorFilterRuleSourcePortRangeArgs struct {
	// Starting port of the range
	FromPort pulumi.IntPtrInput `pulumi:"fromPort"`
	// Ending port of the range
	ToPort pulumi.IntPtrInput `pulumi:"toPort"`
}

func (TrafficMirrorFilterRuleSourcePortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilterRuleSourcePortRange)(nil)).Elem()
}

func (i TrafficMirrorFilterRuleSourcePortRangeArgs) ToTrafficMirrorFilterRuleSourcePortRangeOutput() TrafficMirrorFilterRuleSourcePortRangeOutput {
	return i.ToTrafficMirrorFilterRuleSourcePortRangeOutputWithContext(context.Background())
}

func (i TrafficMirrorFilterRuleSourcePortRangeArgs) ToTrafficMirrorFilterRuleSourcePortRangeOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleSourcePortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleSourcePortRangeOutput)
}

func (i TrafficMirrorFilterRuleSourcePortRangeArgs) ToTrafficMirrorFilterRuleSourcePortRangePtrOutput() TrafficMirrorFilterRuleSourcePortRangePtrOutput {
	return i.ToTrafficMirrorFilterRuleSourcePortRangePtrOutputWithContext(context.Background())
}

func (i TrafficMirrorFilterRuleSourcePortRangeArgs) ToTrafficMirrorFilterRuleSourcePortRangePtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleSourcePortRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleSourcePortRangeOutput).ToTrafficMirrorFilterRuleSourcePortRangePtrOutputWithContext(ctx)
}

// TrafficMirrorFilterRuleSourcePortRangePtrInput is an input type that accepts TrafficMirrorFilterRuleSourcePortRangeArgs, TrafficMirrorFilterRuleSourcePortRangePtr and TrafficMirrorFilterRuleSourcePortRangePtrOutput values.
// You can construct a concrete instance of `TrafficMirrorFilterRuleSourcePortRangePtrInput` via:
//
//          TrafficMirrorFilterRuleSourcePortRangeArgs{...}
//
//  or:
//
//          nil
type TrafficMirrorFilterRuleSourcePortRangePtrInput interface {
	pulumi.Input

	ToTrafficMirrorFilterRuleSourcePortRangePtrOutput() TrafficMirrorFilterRuleSourcePortRangePtrOutput
	ToTrafficMirrorFilterRuleSourcePortRangePtrOutputWithContext(context.Context) TrafficMirrorFilterRuleSourcePortRangePtrOutput
}

type trafficMirrorFilterRuleSourcePortRangePtrType TrafficMirrorFilterRuleSourcePortRangeArgs

func TrafficMirrorFilterRuleSourcePortRangePtr(v *TrafficMirrorFilterRuleSourcePortRangeArgs) TrafficMirrorFilterRuleSourcePortRangePtrInput {
	return (*trafficMirrorFilterRuleSourcePortRangePtrType)(v)
}

func (*trafficMirrorFilterRuleSourcePortRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficMirrorFilterRuleSourcePortRange)(nil)).Elem()
}

func (i *trafficMirrorFilterRuleSourcePortRangePtrType) ToTrafficMirrorFilterRuleSourcePortRangePtrOutput() TrafficMirrorFilterRuleSourcePortRangePtrOutput {
	return i.ToTrafficMirrorFilterRuleSourcePortRangePtrOutputWithContext(context.Background())
}

func (i *trafficMirrorFilterRuleSourcePortRangePtrType) ToTrafficMirrorFilterRuleSourcePortRangePtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleSourcePortRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleSourcePortRangePtrOutput)
}

type TrafficMirrorFilterRuleSourcePortRangeOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFilterRuleSourcePortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilterRuleSourcePortRange)(nil)).Elem()
}

func (o TrafficMirrorFilterRuleSourcePortRangeOutput) ToTrafficMirrorFilterRuleSourcePortRangeOutput() TrafficMirrorFilterRuleSourcePortRangeOutput {
	return o
}

func (o TrafficMirrorFilterRuleSourcePortRangeOutput) ToTrafficMirrorFilterRuleSourcePortRangeOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleSourcePortRangeOutput {
	return o
}

func (o TrafficMirrorFilterRuleSourcePortRangeOutput) ToTrafficMirrorFilterRuleSourcePortRangePtrOutput() TrafficMirrorFilterRuleSourcePortRangePtrOutput {
	return o.ToTrafficMirrorFilterRuleSourcePortRangePtrOutputWithContext(context.Background())
}

func (o TrafficMirrorFilterRuleSourcePortRangeOutput) ToTrafficMirrorFilterRuleSourcePortRangePtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleSourcePortRangePtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleSourcePortRange) *TrafficMirrorFilterRuleSourcePortRange {
		return &v
	}).(TrafficMirrorFilterRuleSourcePortRangePtrOutput)
}

// Starting port of the range
func (o TrafficMirrorFilterRuleSourcePortRangeOutput) FromPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleSourcePortRange) *int { return v.FromPort }).(pulumi.IntPtrOutput)
}

// Ending port of the range
func (o TrafficMirrorFilterRuleSourcePortRangeOutput) ToPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleSourcePortRange) *int { return v.ToPort }).(pulumi.IntPtrOutput)
}

type TrafficMirrorFilterRuleSourcePortRangePtrOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFilterRuleSourcePortRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficMirrorFilterRuleSourcePortRange)(nil)).Elem()
}

func (o TrafficMirrorFilterRuleSourcePortRangePtrOutput) ToTrafficMirrorFilterRuleSourcePortRangePtrOutput() TrafficMirrorFilterRuleSourcePortRangePtrOutput {
	return o
}

func (o TrafficMirrorFilterRuleSourcePortRangePtrOutput) ToTrafficMirrorFilterRuleSourcePortRangePtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleSourcePortRangePtrOutput {
	return o
}

func (o TrafficMirrorFilterRuleSourcePortRangePtrOutput) Elem() TrafficMirrorFilterRuleSourcePortRangeOutput {
	return o.ApplyT(func(v *TrafficMirrorFilterRuleSourcePortRange) TrafficMirrorFilterRuleSourcePortRange { return *v }).(TrafficMirrorFilterRuleSourcePortRangeOutput)
}

// Starting port of the range
func (o TrafficMirrorFilterRuleSourcePortRangePtrOutput) FromPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TrafficMirrorFilterRuleSourcePortRange) *int {
		if v == nil {
			return nil
		}
		return v.FromPort
	}).(pulumi.IntPtrOutput)
}

// Ending port of the range
func (o TrafficMirrorFilterRuleSourcePortRangePtrOutput) ToPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TrafficMirrorFilterRuleSourcePortRange) *int {
		if v == nil {
			return nil
		}
		return v.ToPort
	}).(pulumi.IntPtrOutput)
}

type VpcEndpointDnsEntry struct {
	// The DNS name.
	DnsName *string `pulumi:"dnsName"`
	// The ID of the private hosted zone.
	HostedZoneId *string `pulumi:"hostedZoneId"`
}

// VpcEndpointDnsEntryInput is an input type that accepts VpcEndpointDnsEntryArgs and VpcEndpointDnsEntryOutput values.
// You can construct a concrete instance of `VpcEndpointDnsEntryInput` via:
//
//          VpcEndpointDnsEntryArgs{...}
type VpcEndpointDnsEntryInput interface {
	pulumi.Input

	ToVpcEndpointDnsEntryOutput() VpcEndpointDnsEntryOutput
	ToVpcEndpointDnsEntryOutputWithContext(context.Context) VpcEndpointDnsEntryOutput
}

type VpcEndpointDnsEntryArgs struct {
	// The DNS name.
	DnsName pulumi.StringPtrInput `pulumi:"dnsName"`
	// The ID of the private hosted zone.
	HostedZoneId pulumi.StringPtrInput `pulumi:"hostedZoneId"`
}

func (VpcEndpointDnsEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcEndpointDnsEntry)(nil)).Elem()
}

func (i VpcEndpointDnsEntryArgs) ToVpcEndpointDnsEntryOutput() VpcEndpointDnsEntryOutput {
	return i.ToVpcEndpointDnsEntryOutputWithContext(context.Background())
}

func (i VpcEndpointDnsEntryArgs) ToVpcEndpointDnsEntryOutputWithContext(ctx context.Context) VpcEndpointDnsEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointDnsEntryOutput)
}

// VpcEndpointDnsEntryArrayInput is an input type that accepts VpcEndpointDnsEntryArray and VpcEndpointDnsEntryArrayOutput values.
// You can construct a concrete instance of `VpcEndpointDnsEntryArrayInput` via:
//
//          VpcEndpointDnsEntryArray{ VpcEndpointDnsEntryArgs{...} }
type VpcEndpointDnsEntryArrayInput interface {
	pulumi.Input

	ToVpcEndpointDnsEntryArrayOutput() VpcEndpointDnsEntryArrayOutput
	ToVpcEndpointDnsEntryArrayOutputWithContext(context.Context) VpcEndpointDnsEntryArrayOutput
}

type VpcEndpointDnsEntryArray []VpcEndpointDnsEntryInput

func (VpcEndpointDnsEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcEndpointDnsEntry)(nil)).Elem()
}

func (i VpcEndpointDnsEntryArray) ToVpcEndpointDnsEntryArrayOutput() VpcEndpointDnsEntryArrayOutput {
	return i.ToVpcEndpointDnsEntryArrayOutputWithContext(context.Background())
}

func (i VpcEndpointDnsEntryArray) ToVpcEndpointDnsEntryArrayOutputWithContext(ctx context.Context) VpcEndpointDnsEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointDnsEntryArrayOutput)
}

type VpcEndpointDnsEntryOutput struct{ *pulumi.OutputState }

func (VpcEndpointDnsEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcEndpointDnsEntry)(nil)).Elem()
}

func (o VpcEndpointDnsEntryOutput) ToVpcEndpointDnsEntryOutput() VpcEndpointDnsEntryOutput {
	return o
}

func (o VpcEndpointDnsEntryOutput) ToVpcEndpointDnsEntryOutputWithContext(ctx context.Context) VpcEndpointDnsEntryOutput {
	return o
}

// The DNS name.
func (o VpcEndpointDnsEntryOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcEndpointDnsEntry) *string { return v.DnsName }).(pulumi.StringPtrOutput)
}

// The ID of the private hosted zone.
func (o VpcEndpointDnsEntryOutput) HostedZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcEndpointDnsEntry) *string { return v.HostedZoneId }).(pulumi.StringPtrOutput)
}

type VpcEndpointDnsEntryArrayOutput struct{ *pulumi.OutputState }

func (VpcEndpointDnsEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcEndpointDnsEntry)(nil)).Elem()
}

func (o VpcEndpointDnsEntryArrayOutput) ToVpcEndpointDnsEntryArrayOutput() VpcEndpointDnsEntryArrayOutput {
	return o
}

func (o VpcEndpointDnsEntryArrayOutput) ToVpcEndpointDnsEntryArrayOutputWithContext(ctx context.Context) VpcEndpointDnsEntryArrayOutput {
	return o
}

func (o VpcEndpointDnsEntryArrayOutput) Index(i pulumi.IntInput) VpcEndpointDnsEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcEndpointDnsEntry {
		return vs[0].([]VpcEndpointDnsEntry)[vs[1].(int)]
	}).(VpcEndpointDnsEntryOutput)
}

type VpcPeeringConnectionAccepterType struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC. This is
	// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
	// inter-region VPC peering.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

// VpcPeeringConnectionAccepterTypeInput is an input type that accepts VpcPeeringConnectionAccepterTypeArgs and VpcPeeringConnectionAccepterTypeOutput values.
// You can construct a concrete instance of `VpcPeeringConnectionAccepterTypeInput` via:
//
//          VpcPeeringConnectionAccepterTypeArgs{...}
type VpcPeeringConnectionAccepterTypeInput interface {
	pulumi.Input

	ToVpcPeeringConnectionAccepterTypeOutput() VpcPeeringConnectionAccepterTypeOutput
	ToVpcPeeringConnectionAccepterTypeOutputWithContext(context.Context) VpcPeeringConnectionAccepterTypeOutput
}

type VpcPeeringConnectionAccepterTypeArgs struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC. This is
	// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
	// inter-region VPC peering.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (VpcPeeringConnectionAccepterTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterType)(nil)).Elem()
}

func (i VpcPeeringConnectionAccepterTypeArgs) ToVpcPeeringConnectionAccepterTypeOutput() VpcPeeringConnectionAccepterTypeOutput {
	return i.ToVpcPeeringConnectionAccepterTypeOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterTypeArgs) ToVpcPeeringConnectionAccepterTypeOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterTypeOutput)
}

func (i VpcPeeringConnectionAccepterTypeArgs) ToVpcPeeringConnectionAccepterTypePtrOutput() VpcPeeringConnectionAccepterTypePtrOutput {
	return i.ToVpcPeeringConnectionAccepterTypePtrOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterTypeArgs) ToVpcPeeringConnectionAccepterTypePtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterTypeOutput).ToVpcPeeringConnectionAccepterTypePtrOutputWithContext(ctx)
}

// VpcPeeringConnectionAccepterTypePtrInput is an input type that accepts VpcPeeringConnectionAccepterTypeArgs, VpcPeeringConnectionAccepterTypePtr and VpcPeeringConnectionAccepterTypePtrOutput values.
// You can construct a concrete instance of `VpcPeeringConnectionAccepterTypePtrInput` via:
//
//          VpcPeeringConnectionAccepterTypeArgs{...}
//
//  or:
//
//          nil
type VpcPeeringConnectionAccepterTypePtrInput interface {
	pulumi.Input

	ToVpcPeeringConnectionAccepterTypePtrOutput() VpcPeeringConnectionAccepterTypePtrOutput
	ToVpcPeeringConnectionAccepterTypePtrOutputWithContext(context.Context) VpcPeeringConnectionAccepterTypePtrOutput
}

type vpcPeeringConnectionAccepterTypePtrType VpcPeeringConnectionAccepterTypeArgs

func VpcPeeringConnectionAccepterTypePtr(v *VpcPeeringConnectionAccepterTypeArgs) VpcPeeringConnectionAccepterTypePtrInput {
	return (*vpcPeeringConnectionAccepterTypePtrType)(v)
}

func (*vpcPeeringConnectionAccepterTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionAccepterType)(nil)).Elem()
}

func (i *vpcPeeringConnectionAccepterTypePtrType) ToVpcPeeringConnectionAccepterTypePtrOutput() VpcPeeringConnectionAccepterTypePtrOutput {
	return i.ToVpcPeeringConnectionAccepterTypePtrOutputWithContext(context.Background())
}

func (i *vpcPeeringConnectionAccepterTypePtrType) ToVpcPeeringConnectionAccepterTypePtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterTypePtrOutput)
}

type VpcPeeringConnectionAccepterTypeOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionAccepterTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterType)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterTypeOutput) ToVpcPeeringConnectionAccepterTypeOutput() VpcPeeringConnectionAccepterTypeOutput {
	return o
}

func (o VpcPeeringConnectionAccepterTypeOutput) ToVpcPeeringConnectionAccepterTypeOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterTypeOutput {
	return o
}

func (o VpcPeeringConnectionAccepterTypeOutput) ToVpcPeeringConnectionAccepterTypePtrOutput() VpcPeeringConnectionAccepterTypePtrOutput {
	return o.ToVpcPeeringConnectionAccepterTypePtrOutputWithContext(context.Background())
}

func (o VpcPeeringConnectionAccepterTypeOutput) ToVpcPeeringConnectionAccepterTypePtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterTypePtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterType) *VpcPeeringConnectionAccepterType {
		return &v
	}).(VpcPeeringConnectionAccepterTypePtrOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC.
func (o VpcPeeringConnectionAccepterTypeOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterType) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC. This is
// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
// inter-region VPC peering.
func (o VpcPeeringConnectionAccepterTypeOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterType) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection.
func (o VpcPeeringConnectionAccepterTypeOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterType) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionAccepterTypePtrOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionAccepterTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionAccepterType)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterTypePtrOutput) ToVpcPeeringConnectionAccepterTypePtrOutput() VpcPeeringConnectionAccepterTypePtrOutput {
	return o
}

func (o VpcPeeringConnectionAccepterTypePtrOutput) ToVpcPeeringConnectionAccepterTypePtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterTypePtrOutput {
	return o
}

func (o VpcPeeringConnectionAccepterTypePtrOutput) Elem() VpcPeeringConnectionAccepterTypeOutput {
	return o.ApplyT(func(v *VpcPeeringConnectionAccepterType) VpcPeeringConnectionAccepterType { return *v }).(VpcPeeringConnectionAccepterTypeOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC.
func (o VpcPeeringConnectionAccepterTypePtrOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcPeeringConnectionAccepterType) *bool {
		if v == nil {
			return nil
		}
		return v.AllowClassicLinkToRemoteVpc
	}).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC. This is
// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
// inter-region VPC peering.
func (o VpcPeeringConnectionAccepterTypePtrOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcPeeringConnectionAccepterType) *bool {
		if v == nil {
			return nil
		}
		return v.AllowRemoteVpcDnsResolution
	}).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection.
func (o VpcPeeringConnectionAccepterTypePtrOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcPeeringConnectionAccepterType) *bool {
		if v == nil {
			return nil
		}
		return v.AllowVpcToRemoteClassicLink
	}).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionAccepterAccepter struct {
	// Indicates whether a local ClassicLink connection can communicate
	// with the peer VPC over the VPC Peering Connection.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Indicates whether a local VPC can resolve public DNS hostnames to
	// private IP addresses when queried from instances in a peer VPC.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Indicates whether a local VPC can communicate with a ClassicLink
	// connection in the peer VPC over the VPC Peering Connection.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

// VpcPeeringConnectionAccepterAccepterInput is an input type that accepts VpcPeeringConnectionAccepterAccepterArgs and VpcPeeringConnectionAccepterAccepterOutput values.
// You can construct a concrete instance of `VpcPeeringConnectionAccepterAccepterInput` via:
//
//          VpcPeeringConnectionAccepterAccepterArgs{...}
type VpcPeeringConnectionAccepterAccepterInput interface {
	pulumi.Input

	ToVpcPeeringConnectionAccepterAccepterOutput() VpcPeeringConnectionAccepterAccepterOutput
	ToVpcPeeringConnectionAccepterAccepterOutputWithContext(context.Context) VpcPeeringConnectionAccepterAccepterOutput
}

type VpcPeeringConnectionAccepterAccepterArgs struct {
	// Indicates whether a local ClassicLink connection can communicate
	// with the peer VPC over the VPC Peering Connection.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Indicates whether a local VPC can resolve public DNS hostnames to
	// private IP addresses when queried from instances in a peer VPC.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Indicates whether a local VPC can communicate with a ClassicLink
	// connection in the peer VPC over the VPC Peering Connection.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (VpcPeeringConnectionAccepterAccepterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterAccepter)(nil)).Elem()
}

func (i VpcPeeringConnectionAccepterAccepterArgs) ToVpcPeeringConnectionAccepterAccepterOutput() VpcPeeringConnectionAccepterAccepterOutput {
	return i.ToVpcPeeringConnectionAccepterAccepterOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterAccepterArgs) ToVpcPeeringConnectionAccepterAccepterOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterAccepterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterAccepterOutput)
}

func (i VpcPeeringConnectionAccepterAccepterArgs) ToVpcPeeringConnectionAccepterAccepterPtrOutput() VpcPeeringConnectionAccepterAccepterPtrOutput {
	return i.ToVpcPeeringConnectionAccepterAccepterPtrOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterAccepterArgs) ToVpcPeeringConnectionAccepterAccepterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterAccepterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterAccepterOutput).ToVpcPeeringConnectionAccepterAccepterPtrOutputWithContext(ctx)
}

// VpcPeeringConnectionAccepterAccepterPtrInput is an input type that accepts VpcPeeringConnectionAccepterAccepterArgs, VpcPeeringConnectionAccepterAccepterPtr and VpcPeeringConnectionAccepterAccepterPtrOutput values.
// You can construct a concrete instance of `VpcPeeringConnectionAccepterAccepterPtrInput` via:
//
//          VpcPeeringConnectionAccepterAccepterArgs{...}
//
//  or:
//
//          nil
type VpcPeeringConnectionAccepterAccepterPtrInput interface {
	pulumi.Input

	ToVpcPeeringConnectionAccepterAccepterPtrOutput() VpcPeeringConnectionAccepterAccepterPtrOutput
	ToVpcPeeringConnectionAccepterAccepterPtrOutputWithContext(context.Context) VpcPeeringConnectionAccepterAccepterPtrOutput
}

type vpcPeeringConnectionAccepterAccepterPtrType VpcPeeringConnectionAccepterAccepterArgs

func VpcPeeringConnectionAccepterAccepterPtr(v *VpcPeeringConnectionAccepterAccepterArgs) VpcPeeringConnectionAccepterAccepterPtrInput {
	return (*vpcPeeringConnectionAccepterAccepterPtrType)(v)
}

func (*vpcPeeringConnectionAccepterAccepterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionAccepterAccepter)(nil)).Elem()
}

func (i *vpcPeeringConnectionAccepterAccepterPtrType) ToVpcPeeringConnectionAccepterAccepterPtrOutput() VpcPeeringConnectionAccepterAccepterPtrOutput {
	return i.ToVpcPeeringConnectionAccepterAccepterPtrOutputWithContext(context.Background())
}

func (i *vpcPeeringConnectionAccepterAccepterPtrType) ToVpcPeeringConnectionAccepterAccepterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterAccepterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterAccepterPtrOutput)
}

type VpcPeeringConnectionAccepterAccepterOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionAccepterAccepterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterAccepter)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterAccepterOutput) ToVpcPeeringConnectionAccepterAccepterOutput() VpcPeeringConnectionAccepterAccepterOutput {
	return o
}

func (o VpcPeeringConnectionAccepterAccepterOutput) ToVpcPeeringConnectionAccepterAccepterOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterAccepterOutput {
	return o
}

func (o VpcPeeringConnectionAccepterAccepterOutput) ToVpcPeeringConnectionAccepterAccepterPtrOutput() VpcPeeringConnectionAccepterAccepterPtrOutput {
	return o.ToVpcPeeringConnectionAccepterAccepterPtrOutputWithContext(context.Background())
}

func (o VpcPeeringConnectionAccepterAccepterOutput) ToVpcPeeringConnectionAccepterAccepterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterAccepterPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterAccepter) *VpcPeeringConnectionAccepterAccepter {
		return &v
	}).(VpcPeeringConnectionAccepterAccepterPtrOutput)
}

// Indicates whether a local ClassicLink connection can communicate
// with the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterAccepterOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterAccepter) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can resolve public DNS hostnames to
// private IP addresses when queried from instances in a peer VPC.
func (o VpcPeeringConnectionAccepterAccepterOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterAccepter) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can communicate with a ClassicLink
// connection in the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterAccepterOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterAccepter) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionAccepterAccepterPtrOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionAccepterAccepterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionAccepterAccepter)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterAccepterPtrOutput) ToVpcPeeringConnectionAccepterAccepterPtrOutput() VpcPeeringConnectionAccepterAccepterPtrOutput {
	return o
}

func (o VpcPeeringConnectionAccepterAccepterPtrOutput) ToVpcPeeringConnectionAccepterAccepterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterAccepterPtrOutput {
	return o
}

func (o VpcPeeringConnectionAccepterAccepterPtrOutput) Elem() VpcPeeringConnectionAccepterAccepterOutput {
	return o.ApplyT(func(v *VpcPeeringConnectionAccepterAccepter) VpcPeeringConnectionAccepterAccepter { return *v }).(VpcPeeringConnectionAccepterAccepterOutput)
}

// Indicates whether a local ClassicLink connection can communicate
// with the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterAccepterPtrOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcPeeringConnectionAccepterAccepter) *bool {
		if v == nil {
			return nil
		}
		return v.AllowClassicLinkToRemoteVpc
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can resolve public DNS hostnames to
// private IP addresses when queried from instances in a peer VPC.
func (o VpcPeeringConnectionAccepterAccepterPtrOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcPeeringConnectionAccepterAccepter) *bool {
		if v == nil {
			return nil
		}
		return v.AllowRemoteVpcDnsResolution
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can communicate with a ClassicLink
// connection in the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterAccepterPtrOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcPeeringConnectionAccepterAccepter) *bool {
		if v == nil {
			return nil
		}
		return v.AllowVpcToRemoteClassicLink
	}).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionAccepterRequester struct {
	// Indicates whether a local ClassicLink connection can communicate
	// with the peer VPC over the VPC Peering Connection.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Indicates whether a local VPC can resolve public DNS hostnames to
	// private IP addresses when queried from instances in a peer VPC.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Indicates whether a local VPC can communicate with a ClassicLink
	// connection in the peer VPC over the VPC Peering Connection.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

// VpcPeeringConnectionAccepterRequesterInput is an input type that accepts VpcPeeringConnectionAccepterRequesterArgs and VpcPeeringConnectionAccepterRequesterOutput values.
// You can construct a concrete instance of `VpcPeeringConnectionAccepterRequesterInput` via:
//
//          VpcPeeringConnectionAccepterRequesterArgs{...}
type VpcPeeringConnectionAccepterRequesterInput interface {
	pulumi.Input

	ToVpcPeeringConnectionAccepterRequesterOutput() VpcPeeringConnectionAccepterRequesterOutput
	ToVpcPeeringConnectionAccepterRequesterOutputWithContext(context.Context) VpcPeeringConnectionAccepterRequesterOutput
}

type VpcPeeringConnectionAccepterRequesterArgs struct {
	// Indicates whether a local ClassicLink connection can communicate
	// with the peer VPC over the VPC Peering Connection.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Indicates whether a local VPC can resolve public DNS hostnames to
	// private IP addresses when queried from instances in a peer VPC.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Indicates whether a local VPC can communicate with a ClassicLink
	// connection in the peer VPC over the VPC Peering Connection.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (VpcPeeringConnectionAccepterRequesterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterRequester)(nil)).Elem()
}

func (i VpcPeeringConnectionAccepterRequesterArgs) ToVpcPeeringConnectionAccepterRequesterOutput() VpcPeeringConnectionAccepterRequesterOutput {
	return i.ToVpcPeeringConnectionAccepterRequesterOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterRequesterArgs) ToVpcPeeringConnectionAccepterRequesterOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterRequesterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterRequesterOutput)
}

func (i VpcPeeringConnectionAccepterRequesterArgs) ToVpcPeeringConnectionAccepterRequesterPtrOutput() VpcPeeringConnectionAccepterRequesterPtrOutput {
	return i.ToVpcPeeringConnectionAccepterRequesterPtrOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterRequesterArgs) ToVpcPeeringConnectionAccepterRequesterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterRequesterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterRequesterOutput).ToVpcPeeringConnectionAccepterRequesterPtrOutputWithContext(ctx)
}

// VpcPeeringConnectionAccepterRequesterPtrInput is an input type that accepts VpcPeeringConnectionAccepterRequesterArgs, VpcPeeringConnectionAccepterRequesterPtr and VpcPeeringConnectionAccepterRequesterPtrOutput values.
// You can construct a concrete instance of `VpcPeeringConnectionAccepterRequesterPtrInput` via:
//
//          VpcPeeringConnectionAccepterRequesterArgs{...}
//
//  or:
//
//          nil
type VpcPeeringConnectionAccepterRequesterPtrInput interface {
	pulumi.Input

	ToVpcPeeringConnectionAccepterRequesterPtrOutput() VpcPeeringConnectionAccepterRequesterPtrOutput
	ToVpcPeeringConnectionAccepterRequesterPtrOutputWithContext(context.Context) VpcPeeringConnectionAccepterRequesterPtrOutput
}

type vpcPeeringConnectionAccepterRequesterPtrType VpcPeeringConnectionAccepterRequesterArgs

func VpcPeeringConnectionAccepterRequesterPtr(v *VpcPeeringConnectionAccepterRequesterArgs) VpcPeeringConnectionAccepterRequesterPtrInput {
	return (*vpcPeeringConnectionAccepterRequesterPtrType)(v)
}

func (*vpcPeeringConnectionAccepterRequesterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionAccepterRequester)(nil)).Elem()
}

func (i *vpcPeeringConnectionAccepterRequesterPtrType) ToVpcPeeringConnectionAccepterRequesterPtrOutput() VpcPeeringConnectionAccepterRequesterPtrOutput {
	return i.ToVpcPeeringConnectionAccepterRequesterPtrOutputWithContext(context.Background())
}

func (i *vpcPeeringConnectionAccepterRequesterPtrType) ToVpcPeeringConnectionAccepterRequesterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterRequesterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterRequesterPtrOutput)
}

type VpcPeeringConnectionAccepterRequesterOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionAccepterRequesterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterRequester)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterRequesterOutput) ToVpcPeeringConnectionAccepterRequesterOutput() VpcPeeringConnectionAccepterRequesterOutput {
	return o
}

func (o VpcPeeringConnectionAccepterRequesterOutput) ToVpcPeeringConnectionAccepterRequesterOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterRequesterOutput {
	return o
}

func (o VpcPeeringConnectionAccepterRequesterOutput) ToVpcPeeringConnectionAccepterRequesterPtrOutput() VpcPeeringConnectionAccepterRequesterPtrOutput {
	return o.ToVpcPeeringConnectionAccepterRequesterPtrOutputWithContext(context.Background())
}

func (o VpcPeeringConnectionAccepterRequesterOutput) ToVpcPeeringConnectionAccepterRequesterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterRequesterPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterRequester) *VpcPeeringConnectionAccepterRequester {
		return &v
	}).(VpcPeeringConnectionAccepterRequesterPtrOutput)
}

// Indicates whether a local ClassicLink connection can communicate
// with the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterRequesterOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterRequester) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can resolve public DNS hostnames to
// private IP addresses when queried from instances in a peer VPC.
func (o VpcPeeringConnectionAccepterRequesterOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterRequester) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can communicate with a ClassicLink
// connection in the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterRequesterOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterRequester) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionAccepterRequesterPtrOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionAccepterRequesterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionAccepterRequester)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterRequesterPtrOutput) ToVpcPeeringConnectionAccepterRequesterPtrOutput() VpcPeeringConnectionAccepterRequesterPtrOutput {
	return o
}

func (o VpcPeeringConnectionAccepterRequesterPtrOutput) ToVpcPeeringConnectionAccepterRequesterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterRequesterPtrOutput {
	return o
}

func (o VpcPeeringConnectionAccepterRequesterPtrOutput) Elem() VpcPeeringConnectionAccepterRequesterOutput {
	return o.ApplyT(func(v *VpcPeeringConnectionAccepterRequester) VpcPeeringConnectionAccepterRequester { return *v }).(VpcPeeringConnectionAccepterRequesterOutput)
}

// Indicates whether a local ClassicLink connection can communicate
// with the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterRequesterPtrOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcPeeringConnectionAccepterRequester) *bool {
		if v == nil {
			return nil
		}
		return v.AllowClassicLinkToRemoteVpc
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can resolve public DNS hostnames to
// private IP addresses when queried from instances in a peer VPC.
func (o VpcPeeringConnectionAccepterRequesterPtrOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcPeeringConnectionAccepterRequester) *bool {
		if v == nil {
			return nil
		}
		return v.AllowRemoteVpcDnsResolution
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can communicate with a ClassicLink
// connection in the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterRequesterPtrOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcPeeringConnectionAccepterRequester) *bool {
		if v == nil {
			return nil
		}
		return v.AllowVpcToRemoteClassicLink
	}).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionRequester struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC. This is
	// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
	// inter-region VPC peering.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

// VpcPeeringConnectionRequesterInput is an input type that accepts VpcPeeringConnectionRequesterArgs and VpcPeeringConnectionRequesterOutput values.
// You can construct a concrete instance of `VpcPeeringConnectionRequesterInput` via:
//
//          VpcPeeringConnectionRequesterArgs{...}
type VpcPeeringConnectionRequesterInput interface {
	pulumi.Input

	ToVpcPeeringConnectionRequesterOutput() VpcPeeringConnectionRequesterOutput
	ToVpcPeeringConnectionRequesterOutputWithContext(context.Context) VpcPeeringConnectionRequesterOutput
}

type VpcPeeringConnectionRequesterArgs struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC. This is
	// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
	// inter-region VPC peering.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (VpcPeeringConnectionRequesterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionRequester)(nil)).Elem()
}

func (i VpcPeeringConnectionRequesterArgs) ToVpcPeeringConnectionRequesterOutput() VpcPeeringConnectionRequesterOutput {
	return i.ToVpcPeeringConnectionRequesterOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionRequesterArgs) ToVpcPeeringConnectionRequesterOutputWithContext(ctx context.Context) VpcPeeringConnectionRequesterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionRequesterOutput)
}

func (i VpcPeeringConnectionRequesterArgs) ToVpcPeeringConnectionRequesterPtrOutput() VpcPeeringConnectionRequesterPtrOutput {
	return i.ToVpcPeeringConnectionRequesterPtrOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionRequesterArgs) ToVpcPeeringConnectionRequesterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionRequesterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionRequesterOutput).ToVpcPeeringConnectionRequesterPtrOutputWithContext(ctx)
}

// VpcPeeringConnectionRequesterPtrInput is an input type that accepts VpcPeeringConnectionRequesterArgs, VpcPeeringConnectionRequesterPtr and VpcPeeringConnectionRequesterPtrOutput values.
// You can construct a concrete instance of `VpcPeeringConnectionRequesterPtrInput` via:
//
//          VpcPeeringConnectionRequesterArgs{...}
//
//  or:
//
//          nil
type VpcPeeringConnectionRequesterPtrInput interface {
	pulumi.Input

	ToVpcPeeringConnectionRequesterPtrOutput() VpcPeeringConnectionRequesterPtrOutput
	ToVpcPeeringConnectionRequesterPtrOutputWithContext(context.Context) VpcPeeringConnectionRequesterPtrOutput
}

type vpcPeeringConnectionRequesterPtrType VpcPeeringConnectionRequesterArgs

func VpcPeeringConnectionRequesterPtr(v *VpcPeeringConnectionRequesterArgs) VpcPeeringConnectionRequesterPtrInput {
	return (*vpcPeeringConnectionRequesterPtrType)(v)
}

func (*vpcPeeringConnectionRequesterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionRequester)(nil)).Elem()
}

func (i *vpcPeeringConnectionRequesterPtrType) ToVpcPeeringConnectionRequesterPtrOutput() VpcPeeringConnectionRequesterPtrOutput {
	return i.ToVpcPeeringConnectionRequesterPtrOutputWithContext(context.Background())
}

func (i *vpcPeeringConnectionRequesterPtrType) ToVpcPeeringConnectionRequesterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionRequesterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionRequesterPtrOutput)
}

type VpcPeeringConnectionRequesterOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionRequesterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionRequester)(nil)).Elem()
}

func (o VpcPeeringConnectionRequesterOutput) ToVpcPeeringConnectionRequesterOutput() VpcPeeringConnectionRequesterOutput {
	return o
}

func (o VpcPeeringConnectionRequesterOutput) ToVpcPeeringConnectionRequesterOutputWithContext(ctx context.Context) VpcPeeringConnectionRequesterOutput {
	return o
}

func (o VpcPeeringConnectionRequesterOutput) ToVpcPeeringConnectionRequesterPtrOutput() VpcPeeringConnectionRequesterPtrOutput {
	return o.ToVpcPeeringConnectionRequesterPtrOutputWithContext(context.Background())
}

func (o VpcPeeringConnectionRequesterOutput) ToVpcPeeringConnectionRequesterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionRequesterPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionRequester) *VpcPeeringConnectionRequester {
		return &v
	}).(VpcPeeringConnectionRequesterPtrOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC.
func (o VpcPeeringConnectionRequesterOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionRequester) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC. This is
// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
// inter-region VPC peering.
func (o VpcPeeringConnectionRequesterOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionRequester) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection.
func (o VpcPeeringConnectionRequesterOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionRequester) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionRequesterPtrOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionRequesterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionRequester)(nil)).Elem()
}

func (o VpcPeeringConnectionRequesterPtrOutput) ToVpcPeeringConnectionRequesterPtrOutput() VpcPeeringConnectionRequesterPtrOutput {
	return o
}

func (o VpcPeeringConnectionRequesterPtrOutput) ToVpcPeeringConnectionRequesterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionRequesterPtrOutput {
	return o
}

func (o VpcPeeringConnectionRequesterPtrOutput) Elem() VpcPeeringConnectionRequesterOutput {
	return o.ApplyT(func(v *VpcPeeringConnectionRequester) VpcPeeringConnectionRequester { return *v }).(VpcPeeringConnectionRequesterOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC.
func (o VpcPeeringConnectionRequesterPtrOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcPeeringConnectionRequester) *bool {
		if v == nil {
			return nil
		}
		return v.AllowClassicLinkToRemoteVpc
	}).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC. This is
// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
// inter-region VPC peering.
func (o VpcPeeringConnectionRequesterPtrOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcPeeringConnectionRequester) *bool {
		if v == nil {
			return nil
		}
		return v.AllowRemoteVpcDnsResolution
	}).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection.
func (o VpcPeeringConnectionRequesterPtrOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcPeeringConnectionRequester) *bool {
		if v == nil {
			return nil
		}
		return v.AllowVpcToRemoteClassicLink
	}).(pulumi.BoolPtrOutput)
}

type VpnConnectionRouteType struct {
	DestinationCidrBlock *string `pulumi:"destinationCidrBlock"`
	Source               *string `pulumi:"source"`
	State                *string `pulumi:"state"`
}

// VpnConnectionRouteTypeInput is an input type that accepts VpnConnectionRouteTypeArgs and VpnConnectionRouteTypeOutput values.
// You can construct a concrete instance of `VpnConnectionRouteTypeInput` via:
//
//          VpnConnectionRouteTypeArgs{...}
type VpnConnectionRouteTypeInput interface {
	pulumi.Input

	ToVpnConnectionRouteTypeOutput() VpnConnectionRouteTypeOutput
	ToVpnConnectionRouteTypeOutputWithContext(context.Context) VpnConnectionRouteTypeOutput
}

type VpnConnectionRouteTypeArgs struct {
	DestinationCidrBlock pulumi.StringPtrInput `pulumi:"destinationCidrBlock"`
	Source               pulumi.StringPtrInput `pulumi:"source"`
	State                pulumi.StringPtrInput `pulumi:"state"`
}

func (VpnConnectionRouteTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionRouteType)(nil)).Elem()
}

func (i VpnConnectionRouteTypeArgs) ToVpnConnectionRouteTypeOutput() VpnConnectionRouteTypeOutput {
	return i.ToVpnConnectionRouteTypeOutputWithContext(context.Background())
}

func (i VpnConnectionRouteTypeArgs) ToVpnConnectionRouteTypeOutputWithContext(ctx context.Context) VpnConnectionRouteTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionRouteTypeOutput)
}

// VpnConnectionRouteTypeArrayInput is an input type that accepts VpnConnectionRouteTypeArray and VpnConnectionRouteTypeArrayOutput values.
// You can construct a concrete instance of `VpnConnectionRouteTypeArrayInput` via:
//
//          VpnConnectionRouteTypeArray{ VpnConnectionRouteTypeArgs{...} }
type VpnConnectionRouteTypeArrayInput interface {
	pulumi.Input

	ToVpnConnectionRouteTypeArrayOutput() VpnConnectionRouteTypeArrayOutput
	ToVpnConnectionRouteTypeArrayOutputWithContext(context.Context) VpnConnectionRouteTypeArrayOutput
}

type VpnConnectionRouteTypeArray []VpnConnectionRouteTypeInput

func (VpnConnectionRouteTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionRouteType)(nil)).Elem()
}

func (i VpnConnectionRouteTypeArray) ToVpnConnectionRouteTypeArrayOutput() VpnConnectionRouteTypeArrayOutput {
	return i.ToVpnConnectionRouteTypeArrayOutputWithContext(context.Background())
}

func (i VpnConnectionRouteTypeArray) ToVpnConnectionRouteTypeArrayOutputWithContext(ctx context.Context) VpnConnectionRouteTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionRouteTypeArrayOutput)
}

type VpnConnectionRouteTypeOutput struct{ *pulumi.OutputState }

func (VpnConnectionRouteTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionRouteType)(nil)).Elem()
}

func (o VpnConnectionRouteTypeOutput) ToVpnConnectionRouteTypeOutput() VpnConnectionRouteTypeOutput {
	return o
}

func (o VpnConnectionRouteTypeOutput) ToVpnConnectionRouteTypeOutputWithContext(ctx context.Context) VpnConnectionRouteTypeOutput {
	return o
}

func (o VpnConnectionRouteTypeOutput) DestinationCidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionRouteType) *string { return v.DestinationCidrBlock }).(pulumi.StringPtrOutput)
}

func (o VpnConnectionRouteTypeOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionRouteType) *string { return v.Source }).(pulumi.StringPtrOutput)
}

func (o VpnConnectionRouteTypeOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionRouteType) *string { return v.State }).(pulumi.StringPtrOutput)
}

type VpnConnectionRouteTypeArrayOutput struct{ *pulumi.OutputState }

func (VpnConnectionRouteTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionRouteType)(nil)).Elem()
}

func (o VpnConnectionRouteTypeArrayOutput) ToVpnConnectionRouteTypeArrayOutput() VpnConnectionRouteTypeArrayOutput {
	return o
}

func (o VpnConnectionRouteTypeArrayOutput) ToVpnConnectionRouteTypeArrayOutputWithContext(ctx context.Context) VpnConnectionRouteTypeArrayOutput {
	return o
}

func (o VpnConnectionRouteTypeArrayOutput) Index(i pulumi.IntInput) VpnConnectionRouteTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnConnectionRouteType {
		return vs[0].([]VpnConnectionRouteType)[vs[1].(int)]
	}).(VpnConnectionRouteTypeOutput)
}

type VpnConnectionVgwTelemetry struct {
	AcceptedRouteCount *int    `pulumi:"acceptedRouteCount"`
	LastStatusChange   *string `pulumi:"lastStatusChange"`
	OutsideIpAddress   *string `pulumi:"outsideIpAddress"`
	Status             *string `pulumi:"status"`
	StatusMessage      *string `pulumi:"statusMessage"`
}

// VpnConnectionVgwTelemetryInput is an input type that accepts VpnConnectionVgwTelemetryArgs and VpnConnectionVgwTelemetryOutput values.
// You can construct a concrete instance of `VpnConnectionVgwTelemetryInput` via:
//
//          VpnConnectionVgwTelemetryArgs{...}
type VpnConnectionVgwTelemetryInput interface {
	pulumi.Input

	ToVpnConnectionVgwTelemetryOutput() VpnConnectionVgwTelemetryOutput
	ToVpnConnectionVgwTelemetryOutputWithContext(context.Context) VpnConnectionVgwTelemetryOutput
}

type VpnConnectionVgwTelemetryArgs struct {
	AcceptedRouteCount pulumi.IntPtrInput    `pulumi:"acceptedRouteCount"`
	LastStatusChange   pulumi.StringPtrInput `pulumi:"lastStatusChange"`
	OutsideIpAddress   pulumi.StringPtrInput `pulumi:"outsideIpAddress"`
	Status             pulumi.StringPtrInput `pulumi:"status"`
	StatusMessage      pulumi.StringPtrInput `pulumi:"statusMessage"`
}

func (VpnConnectionVgwTelemetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionVgwTelemetry)(nil)).Elem()
}

func (i VpnConnectionVgwTelemetryArgs) ToVpnConnectionVgwTelemetryOutput() VpnConnectionVgwTelemetryOutput {
	return i.ToVpnConnectionVgwTelemetryOutputWithContext(context.Background())
}

func (i VpnConnectionVgwTelemetryArgs) ToVpnConnectionVgwTelemetryOutputWithContext(ctx context.Context) VpnConnectionVgwTelemetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionVgwTelemetryOutput)
}

// VpnConnectionVgwTelemetryArrayInput is an input type that accepts VpnConnectionVgwTelemetryArray and VpnConnectionVgwTelemetryArrayOutput values.
// You can construct a concrete instance of `VpnConnectionVgwTelemetryArrayInput` via:
//
//          VpnConnectionVgwTelemetryArray{ VpnConnectionVgwTelemetryArgs{...} }
type VpnConnectionVgwTelemetryArrayInput interface {
	pulumi.Input

	ToVpnConnectionVgwTelemetryArrayOutput() VpnConnectionVgwTelemetryArrayOutput
	ToVpnConnectionVgwTelemetryArrayOutputWithContext(context.Context) VpnConnectionVgwTelemetryArrayOutput
}

type VpnConnectionVgwTelemetryArray []VpnConnectionVgwTelemetryInput

func (VpnConnectionVgwTelemetryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionVgwTelemetry)(nil)).Elem()
}

func (i VpnConnectionVgwTelemetryArray) ToVpnConnectionVgwTelemetryArrayOutput() VpnConnectionVgwTelemetryArrayOutput {
	return i.ToVpnConnectionVgwTelemetryArrayOutputWithContext(context.Background())
}

func (i VpnConnectionVgwTelemetryArray) ToVpnConnectionVgwTelemetryArrayOutputWithContext(ctx context.Context) VpnConnectionVgwTelemetryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionVgwTelemetryArrayOutput)
}

type VpnConnectionVgwTelemetryOutput struct{ *pulumi.OutputState }

func (VpnConnectionVgwTelemetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionVgwTelemetry)(nil)).Elem()
}

func (o VpnConnectionVgwTelemetryOutput) ToVpnConnectionVgwTelemetryOutput() VpnConnectionVgwTelemetryOutput {
	return o
}

func (o VpnConnectionVgwTelemetryOutput) ToVpnConnectionVgwTelemetryOutputWithContext(ctx context.Context) VpnConnectionVgwTelemetryOutput {
	return o
}

func (o VpnConnectionVgwTelemetryOutput) AcceptedRouteCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionVgwTelemetry) *int { return v.AcceptedRouteCount }).(pulumi.IntPtrOutput)
}

func (o VpnConnectionVgwTelemetryOutput) LastStatusChange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionVgwTelemetry) *string { return v.LastStatusChange }).(pulumi.StringPtrOutput)
}

func (o VpnConnectionVgwTelemetryOutput) OutsideIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionVgwTelemetry) *string { return v.OutsideIpAddress }).(pulumi.StringPtrOutput)
}

func (o VpnConnectionVgwTelemetryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionVgwTelemetry) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o VpnConnectionVgwTelemetryOutput) StatusMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionVgwTelemetry) *string { return v.StatusMessage }).(pulumi.StringPtrOutput)
}

type VpnConnectionVgwTelemetryArrayOutput struct{ *pulumi.OutputState }

func (VpnConnectionVgwTelemetryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionVgwTelemetry)(nil)).Elem()
}

func (o VpnConnectionVgwTelemetryArrayOutput) ToVpnConnectionVgwTelemetryArrayOutput() VpnConnectionVgwTelemetryArrayOutput {
	return o
}

func (o VpnConnectionVgwTelemetryArrayOutput) ToVpnConnectionVgwTelemetryArrayOutputWithContext(ctx context.Context) VpnConnectionVgwTelemetryArrayOutput {
	return o
}

func (o VpnConnectionVgwTelemetryArrayOutput) Index(i pulumi.IntInput) VpnConnectionVgwTelemetryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnConnectionVgwTelemetry {
		return vs[0].([]VpnConnectionVgwTelemetry)[vs[1].(int)]
	}).(VpnConnectionVgwTelemetryOutput)
}

type GetCoipPoolFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCoipPools.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A COIP Pool will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetCoipPoolsFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCoipPools.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A COIP Pool will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetCustomerGatewayFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetInstanceCreditSpecification struct {
	CpuCredits string `pulumi:"cpuCredits"`
}

type GetInstanceEbsBlockDevice struct {
	// If the root block device will be deleted on termination.
	DeleteOnTermination bool `pulumi:"deleteOnTermination"`
	// The physical name of the device.
	DeviceName string `pulumi:"deviceName"`
	// If the EBS volume is encrypted.
	Encrypted bool `pulumi:"encrypted"`
	// `0` If the volume is not a provisioned IOPS image, otherwise the supported IOPS count.
	Iops     int    `pulumi:"iops"`
	KmsKeyId string `pulumi:"kmsKeyId"`
	// The ID of the snapshot.
	SnapshotId string `pulumi:"snapshotId"`
	VolumeId   string `pulumi:"volumeId"`
	// The size of the volume, in GiB.
	VolumeSize int `pulumi:"volumeSize"`
	// The type of the volume.
	VolumeType string `pulumi:"volumeType"`
}

type GetInstanceEphemeralBlockDevice struct {
	// The physical name of the device.
	DeviceName string `pulumi:"deviceName"`
	// Whether the specified device included in the device mapping was suppressed or not (Boolean).
	NoDevice *bool `pulumi:"noDevice"`
	// The virtual device name.
	VirtualName *string `pulumi:"virtualName"`
}

type GetInstanceFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetInstanceMetadataOption struct {
	// The state of the metadata service: `enabled`, `disabled`.
	HttpEndpoint string `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests.
	HttpPutResponseHopLimit int `pulumi:"httpPutResponseHopLimit"`
	// If session tokens are required: `optional`, `required`.
	HttpTokens string `pulumi:"httpTokens"`
}

type GetInstanceRootBlockDevice struct {
	// If the root block device will be deleted on termination.
	DeleteOnTermination bool `pulumi:"deleteOnTermination"`
	// The physical name of the device.
	DeviceName string `pulumi:"deviceName"`
	// If the EBS volume is encrypted.
	Encrypted bool `pulumi:"encrypted"`
	// `0` If the volume is not a provisioned IOPS image, otherwise the supported IOPS count.
	Iops     int    `pulumi:"iops"`
	KmsKeyId string `pulumi:"kmsKeyId"`
	VolumeId string `pulumi:"volumeId"`
	// The size of the volume, in GiB.
	VolumeSize int `pulumi:"volumeSize"`
	// The type of the volume.
	VolumeType string `pulumi:"volumeType"`
}

type GetInstanceTypeOfferingFilter struct {
	// Name of the filter. The `location` filter depends on the top-level `locationType` argument and if not specified, defaults to the current region.
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

type GetInstanceTypeOfferingsFilter struct {
	// Name of the filter. The `location` filter depends on the top-level `locationType` argument and if not specified, defaults to the current region.
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

type GetInstancesFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetInternetGatewayAttachment struct {
	// The current state of the attachment between the gateway and the VPC. Present only if a VPC is attached
	State string `pulumi:"state"`
	// The ID of an attached VPC.
	VpcId string `pulumi:"vpcId"`
}

type GetInternetGatewayFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInternetGateways.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// An Internet Gateway will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetLaunchConfigurationEbsBlockDevice struct {
	// Whether the EBS Volume will be deleted on instance termination.
	DeleteOnTermination bool `pulumi:"deleteOnTermination"`
	// The Name of the device.
	DeviceName string `pulumi:"deviceName"`
	// Whether the volume is Encrypted.
	Encrypted bool `pulumi:"encrypted"`
	// The provisioned IOPs of the volume.
	Iops int `pulumi:"iops"`
	// The Snapshot ID of the mount.
	SnapshotId string `pulumi:"snapshotId"`
	// The Size of the volume.
	VolumeSize int `pulumi:"volumeSize"`
	// The Type of the volume.
	VolumeType string `pulumi:"volumeType"`
}

type GetLaunchConfigurationEphemeralBlockDevice struct {
	// The Name of the device.
	DeviceName string `pulumi:"deviceName"`
	// The Virtual Name of the device.
	VirtualName string `pulumi:"virtualName"`
}

type GetLaunchConfigurationRootBlockDevice struct {
	// Whether the EBS Volume will be deleted on instance termination.
	DeleteOnTermination bool `pulumi:"deleteOnTermination"`
	// Whether the volume is Encrypted.
	Encrypted bool `pulumi:"encrypted"`
	// The provisioned IOPs of the volume.
	Iops int `pulumi:"iops"`
	// The Size of the volume.
	VolumeSize int `pulumi:"volumeSize"`
	// The Type of the volume.
	VolumeType string `pulumi:"volumeType"`
}

type GetLaunchTemplateBlockDeviceMapping struct {
	DeviceName  string                                  `pulumi:"deviceName"`
	Ebs         []GetLaunchTemplateBlockDeviceMappingEb `pulumi:"ebs"`
	NoDevice    string                                  `pulumi:"noDevice"`
	VirtualName string                                  `pulumi:"virtualName"`
}

type GetLaunchTemplateBlockDeviceMappingEb struct {
	DeleteOnTermination string `pulumi:"deleteOnTermination"`
	Encrypted           string `pulumi:"encrypted"`
	Iops                int    `pulumi:"iops"`
	KmsKeyId            string `pulumi:"kmsKeyId"`
	SnapshotId          string `pulumi:"snapshotId"`
	VolumeSize          int    `pulumi:"volumeSize"`
	VolumeType          string `pulumi:"volumeType"`
}

type GetLaunchTemplateCreditSpecification struct {
	CpuCredits string `pulumi:"cpuCredits"`
}

type GetLaunchTemplateElasticGpuSpecification struct {
	Type string `pulumi:"type"`
}

type GetLaunchTemplateFilter struct {
	// The name of the filter field. Valid values can be found in the [EC2 DescribeLaunchTemplates API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

type GetLaunchTemplateHibernationOption struct {
	Configured bool `pulumi:"configured"`
}

type GetLaunchTemplateIamInstanceProfile struct {
	// Amazon Resource Name (ARN) of the launch template.
	Arn string `pulumi:"arn"`
	// The name of the filter field. Valid values can be found in the [EC2 DescribeLaunchTemplates API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html).
	Name string `pulumi:"name"`
}

type GetLaunchTemplateInstanceMarketOption struct {
	MarketType  string                                            `pulumi:"marketType"`
	SpotOptions []GetLaunchTemplateInstanceMarketOptionSpotOption `pulumi:"spotOptions"`
}

type GetLaunchTemplateInstanceMarketOptionSpotOption struct {
	BlockDurationMinutes         int    `pulumi:"blockDurationMinutes"`
	InstanceInterruptionBehavior string `pulumi:"instanceInterruptionBehavior"`
	MaxPrice                     string `pulumi:"maxPrice"`
	SpotInstanceType             string `pulumi:"spotInstanceType"`
	ValidUntil                   string `pulumi:"validUntil"`
}

type GetLaunchTemplateMetadataOption struct {
	// The state of the metadata service: `enabled`, `disabled`.
	HttpEndpoint string `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests.
	HttpPutResponseHopLimit int `pulumi:"httpPutResponseHopLimit"`
	// If session tokens are required: `optional`, `required`.
	HttpTokens string `pulumi:"httpTokens"`
}

type GetLaunchTemplateMonitoring struct {
	Enabled bool `pulumi:"enabled"`
}

type GetLaunchTemplateNetworkInterface struct {
	AssociatePublicIpAddress *bool `pulumi:"associatePublicIpAddress"`
	DeleteOnTermination      bool  `pulumi:"deleteOnTermination"`
	// Description of the launch template.
	Description        string   `pulumi:"description"`
	DeviceIndex        int      `pulumi:"deviceIndex"`
	Ipv4AddressCount   int      `pulumi:"ipv4AddressCount"`
	Ipv4Addresses      []string `pulumi:"ipv4Addresses"`
	Ipv6AddressCount   int      `pulumi:"ipv6AddressCount"`
	Ipv6Addresses      []string `pulumi:"ipv6Addresses"`
	NetworkInterfaceId string   `pulumi:"networkInterfaceId"`
	PrivateIpAddress   string   `pulumi:"privateIpAddress"`
	SecurityGroups     []string `pulumi:"securityGroups"`
	SubnetId           string   `pulumi:"subnetId"`
}

type GetLaunchTemplatePlacement struct {
	Affinity         string `pulumi:"affinity"`
	AvailabilityZone string `pulumi:"availabilityZone"`
	GroupName        string `pulumi:"groupName"`
	HostId           string `pulumi:"hostId"`
	PartitionNumber  int    `pulumi:"partitionNumber"`
	SpreadDomain     string `pulumi:"spreadDomain"`
	Tenancy          string `pulumi:"tenancy"`
}

type GetLaunchTemplateTagSpecification struct {
	ResourceType string `pulumi:"resourceType"`
	// A map of tags, each pair of which must exactly match a pair on the desired Launch Template.
	Tags map[string]string `pulumi:"tags"`
}

type GetLocalGatewayFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGateways.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Local Gateway will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetLocalGatewayRouteTableFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayRouteTables.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A local gateway route table will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetLocalGatewayRouteTablesFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayRouteTables.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Local Gateway Route Table will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetLocalGatewayVirtualInterfaceFilter struct {
	// Name of the filter.
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

type GetLocalGatewayVirtualInterfaceGroupFilter struct {
	// Name of the filter.
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

type GetLocalGatewayVirtualInterfaceGroupsFilter struct {
	// Name of the filter.
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

type GetLocalGatewaysFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGateways.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Local Gateway will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetNatGatewayFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNatGateways.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// An Nat Gateway will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetNetworkAclsFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkAcls.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetNetworkInterfaceAssociation struct {
	// The allocation ID.
	AllocationId string `pulumi:"allocationId"`
	// The association ID.
	AssociationId string `pulumi:"associationId"`
	// The ID of the Elastic IP address owner.
	IpOwnerId string `pulumi:"ipOwnerId"`
	// The public DNS name.
	PublicDnsName string `pulumi:"publicDnsName"`
	// The address of the Elastic IP address bound to the network interface.
	PublicIp string `pulumi:"publicIp"`
}

type GetNetworkInterfaceAttachmentType struct {
	AttachmentId    string `pulumi:"attachmentId"`
	DeviceIndex     int    `pulumi:"deviceIndex"`
	InstanceId      string `pulumi:"instanceId"`
	InstanceOwnerId string `pulumi:"instanceOwnerId"`
}

type GetNetworkInterfaceFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetNetworkInterfacesFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfaces.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	Values []string `pulumi:"values"`
}

type GetRouteTableAssociationType struct {
	// The id of an Internet Gateway or Virtual Private Gateway which is connected to the Route Table (not exported if not passed as a parameter).
	GatewayId string `pulumi:"gatewayId"`
	// If the Association due to the Main Route Table.
	Main bool `pulumi:"main"`
	// The Association ID.
	RouteTableAssociationId string `pulumi:"routeTableAssociationId"`
	// The id of the specific Route Table to retrieve.
	RouteTableId string `pulumi:"routeTableId"`
	// The id of a Subnet which is connected to the Route Table (not exported if not passed as a parameter).
	SubnetId string `pulumi:"subnetId"`
}

type GetRouteTableFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Route Table will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetRouteTableRoute struct {
	// The CIDR block of the route.
	CidrBlock string `pulumi:"cidrBlock"`
	// The ID of the Egress Only Internet Gateway.
	EgressOnlyGatewayId string `pulumi:"egressOnlyGatewayId"`
	// The id of an Internet Gateway or Virtual Private Gateway which is connected to the Route Table (not exported if not passed as a parameter).
	GatewayId string `pulumi:"gatewayId"`
	// The EC2 instance ID.
	InstanceId string `pulumi:"instanceId"`
	// The IPv6 CIDR block of the route.
	Ipv6CidrBlock string `pulumi:"ipv6CidrBlock"`
	// The NAT Gateway ID.
	NatGatewayId string `pulumi:"natGatewayId"`
	// The ID of the elastic network interface (eni) to use.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
	// The EC2 Transit Gateway ID.
	TransitGatewayId string `pulumi:"transitGatewayId"`
	// The VPC Peering ID.
	VpcPeeringConnectionId string `pulumi:"vpcPeeringConnectionId"`
}

type GetRouteTablesFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Route Table will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetSecurityGroupFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Security Group will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetSecurityGroupsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetSpotPriceFilter struct {
	// Name of the filter.
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

type GetSubnetFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
	// For example, if matching against tag `Name`, use:
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A subnet will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetSubnetIdsFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
	// For example, if matching against tag `Name`, use:
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// Subnet IDs will be selected if any one of the given values match.
	Values []string `pulumi:"values"`
}

type GetVpcCidrBlockAssociation struct {
	// The association ID for the the IPv4 CIDR block.
	AssociationId string `pulumi:"associationId"`
	// The cidr block of the desired VPC.
	CidrBlock string `pulumi:"cidrBlock"`
	// The current state of the desired VPC.
	// Can be either `"pending"` or `"available"`.
	State string `pulumi:"state"`
}

type GetVpcDhcpOptionsFilter struct {
	// The name of the field to filter.
	Name string `pulumi:"name"`
	// Set of values for filtering.
	Values []string `pulumi:"values"`
}

type GetVpcEndpointDnsEntry struct {
	// The DNS name.
	DnsName string `pulumi:"dnsName"`
	// The ID of the private hosted zone.
	HostedZoneId string `pulumi:"hostedZoneId"`
}

type GetVpcEndpointFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpoints.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC Endpoint will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetVpcEndpointServiceFilter struct {
	// The name of the filter field. Valid values can be found in the [EC2 DescribeVpcEndpointServices API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServices.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

type GetVpcFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetVpcPeeringConnectionFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC Peering Connection will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetVpcsFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetVpnGatewayFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnGateways.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPN Gateway will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

func init() {
	pulumi.RegisterOutputType(AmiCopyEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(AmiCopyEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(AmiCopyEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(AmiCopyEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(AmiEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(AmiEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(AmiEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(AmiEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(AmiFromInstanceEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(AmiFromInstanceEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(AmiFromInstanceEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(AmiFromInstanceEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(DefaultNetworkAclEgressOutput{})
	pulumi.RegisterOutputType(DefaultNetworkAclEgressArrayOutput{})
	pulumi.RegisterOutputType(DefaultNetworkAclIngressOutput{})
	pulumi.RegisterOutputType(DefaultNetworkAclIngressArrayOutput{})
	pulumi.RegisterOutputType(DefaultRouteTableRouteOutput{})
	pulumi.RegisterOutputType(DefaultRouteTableRouteArrayOutput{})
	pulumi.RegisterOutputType(DefaultSecurityGroupEgressOutput{})
	pulumi.RegisterOutputType(DefaultSecurityGroupEgressArrayOutput{})
	pulumi.RegisterOutputType(DefaultSecurityGroupIngressOutput{})
	pulumi.RegisterOutputType(DefaultSecurityGroupIngressArrayOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigPtrOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigLaunchTemplateSpecificationPtrOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigOverrideOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigOverrideArrayOutput{})
	pulumi.RegisterOutputType(FleetOnDemandOptionsOutput{})
	pulumi.RegisterOutputType(FleetOnDemandOptionsPtrOutput{})
	pulumi.RegisterOutputType(FleetSpotOptionsOutput{})
	pulumi.RegisterOutputType(FleetSpotOptionsPtrOutput{})
	pulumi.RegisterOutputType(FleetTargetCapacitySpecificationOutput{})
	pulumi.RegisterOutputType(FleetTargetCapacitySpecificationPtrOutput{})
	pulumi.RegisterOutputType(InstanceCreditSpecificationOutput{})
	pulumi.RegisterOutputType(InstanceCreditSpecificationPtrOutput{})
	pulumi.RegisterOutputType(InstanceEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(InstanceEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(InstanceEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(InstanceEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMetadataOptionsOutput{})
	pulumi.RegisterOutputType(InstanceMetadataOptionsPtrOutput{})
	pulumi.RegisterOutputType(InstanceNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(InstanceNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(InstanceRootBlockDeviceOutput{})
	pulumi.RegisterOutputType(InstanceRootBlockDevicePtrOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationRootBlockDeviceOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationRootBlockDevicePtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateBlockDeviceMappingOutput{})
	pulumi.RegisterOutputType(LaunchTemplateBlockDeviceMappingArrayOutput{})
	pulumi.RegisterOutputType(LaunchTemplateBlockDeviceMappingEbsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateBlockDeviceMappingEbsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCapacityReservationSpecificationOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCapacityReservationSpecificationPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCpuOptionsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCpuOptionsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCreditSpecificationOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCreditSpecificationPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateElasticGpuSpecificationOutput{})
	pulumi.RegisterOutputType(LaunchTemplateElasticGpuSpecificationArrayOutput{})
	pulumi.RegisterOutputType(LaunchTemplateElasticInferenceAcceleratorOutput{})
	pulumi.RegisterOutputType(LaunchTemplateElasticInferenceAcceleratorPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateHibernationOptionsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateHibernationOptionsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateIamInstanceProfileOutput{})
	pulumi.RegisterOutputType(LaunchTemplateIamInstanceProfilePtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceMarketOptionsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceMarketOptionsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceMarketOptionsSpotOptionsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateLicenseSpecificationOutput{})
	pulumi.RegisterOutputType(LaunchTemplateLicenseSpecificationArrayOutput{})
	pulumi.RegisterOutputType(LaunchTemplateMetadataOptionsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateMetadataOptionsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateMonitoringOutput{})
	pulumi.RegisterOutputType(LaunchTemplateMonitoringPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(LaunchTemplateNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(LaunchTemplatePlacementOutput{})
	pulumi.RegisterOutputType(LaunchTemplatePlacementPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateTagSpecificationOutput{})
	pulumi.RegisterOutputType(LaunchTemplateTagSpecificationArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclEgressOutput{})
	pulumi.RegisterOutputType(NetworkAclEgressArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclIngressOutput{})
	pulumi.RegisterOutputType(NetworkAclIngressArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceAttachmentTypeOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceAttachmentTypeArrayOutput{})
	pulumi.RegisterOutputType(PeeringConnectionOptionsAccepterOutput{})
	pulumi.RegisterOutputType(PeeringConnectionOptionsAccepterPtrOutput{})
	pulumi.RegisterOutputType(PeeringConnectionOptionsRequesterOutput{})
	pulumi.RegisterOutputType(PeeringConnectionOptionsRequesterPtrOutput{})
	pulumi.RegisterOutputType(RouteTableRouteOutput{})
	pulumi.RegisterOutputType(RouteTableRouteArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupEgressOutput{})
	pulumi.RegisterOutputType(SecurityGroupEgressArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupIngressOutput{})
	pulumi.RegisterOutputType(SecurityGroupIngressArrayOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationArrayOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchTemplateConfigOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchTemplateConfigArrayOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchTemplateConfigOverrideOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchTemplateConfigOverrideArrayOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestCreditSpecificationOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestCreditSpecificationPtrOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestMetadataOptionsOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestMetadataOptionsPtrOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestRootBlockDeviceOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestRootBlockDevicePtrOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFilterRuleDestinationPortRangeOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFilterRuleDestinationPortRangePtrOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFilterRuleSourcePortRangeOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFilterRuleSourcePortRangePtrOutput{})
	pulumi.RegisterOutputType(VpcEndpointDnsEntryOutput{})
	pulumi.RegisterOutputType(VpcEndpointDnsEntryArrayOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterTypeOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterTypePtrOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterAccepterOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterAccepterPtrOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterRequesterOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterRequesterPtrOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionRequesterOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionRequesterPtrOutput{})
	pulumi.RegisterOutputType(VpnConnectionRouteTypeOutput{})
	pulumi.RegisterOutputType(VpnConnectionRouteTypeArrayOutput{})
	pulumi.RegisterOutputType(VpnConnectionVgwTelemetryOutput{})
	pulumi.RegisterOutputType(VpnConnectionVgwTelemetryArrayOutput{})
	pulumi.RegisterOutputType(GetCoipPoolFilterOutput{})
	pulumi.RegisterOutputType(GetCoipPoolFilterArrayOutput{})
	pulumi.RegisterOutputType(GetCoipPoolsFilterOutput{})
	pulumi.RegisterOutputType(GetCoipPoolsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetCustomerGatewayFilterOutput{})
	pulumi.RegisterOutputType(GetCustomerGatewayFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceCreditSpecificationOutput{})
	pulumi.RegisterOutputType(GetInstanceCreditSpecificationArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(GetInstanceEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(GetInstanceEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceFilterOutput{})
	pulumi.RegisterOutputType(GetInstanceFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceMetadataOptionOutput{})
	pulumi.RegisterOutputType(GetInstanceMetadataOptionArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceRootBlockDeviceOutput{})
	pulumi.RegisterOutputType(GetInstanceRootBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeOfferingFilterOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeOfferingFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeOfferingsFilterOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeOfferingsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesFilterOutput{})
	pulumi.RegisterOutputType(GetInstancesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInternetGatewayAttachmentOutput{})
	pulumi.RegisterOutputType(GetInternetGatewayAttachmentArrayOutput{})
	pulumi.RegisterOutputType(GetInternetGatewayFilterOutput{})
	pulumi.RegisterOutputType(GetInternetGatewayFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchConfigurationEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(GetLaunchConfigurationEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchConfigurationEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(GetLaunchConfigurationEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchConfigurationRootBlockDeviceOutput{})
	pulumi.RegisterOutputType(GetLaunchConfigurationRootBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateBlockDeviceMappingOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateBlockDeviceMappingArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateBlockDeviceMappingEbOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateBlockDeviceMappingEbArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateCreditSpecificationOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateCreditSpecificationArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateElasticGpuSpecificationOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateElasticGpuSpecificationArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateFilterOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateHibernationOptionOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateHibernationOptionArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateIamInstanceProfileOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateIamInstanceProfileArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateInstanceMarketOptionOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateInstanceMarketOptionArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateInstanceMarketOptionSpotOptionOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateMetadataOptionOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateMetadataOptionArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateMonitoringOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateMonitoringArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplatePlacementOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplatePlacementArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateTagSpecificationOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateTagSpecificationArrayOutput{})
	pulumi.RegisterOutputType(GetLocalGatewayFilterOutput{})
	pulumi.RegisterOutputType(GetLocalGatewayFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLocalGatewayRouteTableFilterOutput{})
	pulumi.RegisterOutputType(GetLocalGatewayRouteTableFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLocalGatewayRouteTablesFilterOutput{})
	pulumi.RegisterOutputType(GetLocalGatewayRouteTablesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLocalGatewayVirtualInterfaceFilterOutput{})
	pulumi.RegisterOutputType(GetLocalGatewayVirtualInterfaceFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLocalGatewayVirtualInterfaceGroupFilterOutput{})
	pulumi.RegisterOutputType(GetLocalGatewayVirtualInterfaceGroupFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLocalGatewayVirtualInterfaceGroupsFilterOutput{})
	pulumi.RegisterOutputType(GetLocalGatewayVirtualInterfaceGroupsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLocalGatewaysFilterOutput{})
	pulumi.RegisterOutputType(GetLocalGatewaysFilterArrayOutput{})
	pulumi.RegisterOutputType(GetNatGatewayFilterOutput{})
	pulumi.RegisterOutputType(GetNatGatewayFilterArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkAclsFilterOutput{})
	pulumi.RegisterOutputType(GetNetworkAclsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfaceAssociationOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfaceAssociationArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfaceAttachmentTypeOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfaceAttachmentTypeArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfaceFilterOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfaceFilterArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfacesFilterOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfacesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTableAssociationTypeOutput{})
	pulumi.RegisterOutputType(GetRouteTableAssociationTypeArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTableFilterOutput{})
	pulumi.RegisterOutputType(GetRouteTableFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTableRouteOutput{})
	pulumi.RegisterOutputType(GetRouteTableRouteArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTablesFilterOutput{})
	pulumi.RegisterOutputType(GetRouteTablesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupFilterOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsFilterOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSpotPriceFilterOutput{})
	pulumi.RegisterOutputType(GetSpotPriceFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSubnetFilterOutput{})
	pulumi.RegisterOutputType(GetSubnetFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSubnetIdsFilterOutput{})
	pulumi.RegisterOutputType(GetSubnetIdsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVpcCidrBlockAssociationOutput{})
	pulumi.RegisterOutputType(GetVpcCidrBlockAssociationArrayOutput{})
	pulumi.RegisterOutputType(GetVpcDhcpOptionsFilterOutput{})
	pulumi.RegisterOutputType(GetVpcDhcpOptionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVpcEndpointDnsEntryOutput{})
	pulumi.RegisterOutputType(GetVpcEndpointDnsEntryArrayOutput{})
	pulumi.RegisterOutputType(GetVpcEndpointFilterOutput{})
	pulumi.RegisterOutputType(GetVpcEndpointFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVpcEndpointServiceFilterOutput{})
	pulumi.RegisterOutputType(GetVpcEndpointServiceFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVpcFilterOutput{})
	pulumi.RegisterOutputType(GetVpcFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVpcPeeringConnectionFilterOutput{})
	pulumi.RegisterOutputType(GetVpcPeeringConnectionFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVpcsFilterOutput{})
	pulumi.RegisterOutputType(GetVpcsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVpnGatewayFilterOutput{})
	pulumi.RegisterOutputType(GetVpnGatewayFilterArrayOutput{})
}
