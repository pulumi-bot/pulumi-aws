// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type VpcPeeringConnectionAccepter struct {
	pulumi.CustomResourceState

	AcceptStatus           pulumi.StringOutput                         `pulumi:"acceptStatus"`
	Accepter               VpcPeeringConnectionAccepterAccepterOutput  `pulumi:"accepter"`
	AutoAccept             pulumi.BoolPtrOutput                        `pulumi:"autoAccept"`
	PeerOwnerId            pulumi.StringOutput                         `pulumi:"peerOwnerId"`
	PeerRegion             pulumi.StringOutput                         `pulumi:"peerRegion"`
	PeerVpcId              pulumi.StringOutput                         `pulumi:"peerVpcId"`
	Requester              VpcPeeringConnectionAccepterRequesterOutput `pulumi:"requester"`
	Tags                   pulumi.StringMapOutput                      `pulumi:"tags"`
	VpcId                  pulumi.StringOutput                         `pulumi:"vpcId"`
	VpcPeeringConnectionId pulumi.StringOutput                         `pulumi:"vpcPeeringConnectionId"`
}

// NewVpcPeeringConnectionAccepter registers a new resource with the given unique name, arguments, and options.
func NewVpcPeeringConnectionAccepter(ctx *pulumi.Context,
	name string, args *VpcPeeringConnectionAccepterArgs, opts ...pulumi.ResourceOption) (*VpcPeeringConnectionAccepter, error) {
	if args == nil || args.VpcPeeringConnectionId == nil {
		return nil, errors.New("missing required argument 'VpcPeeringConnectionId'")
	}
	if args == nil {
		args = &VpcPeeringConnectionAccepterArgs{}
	}
	var resource VpcPeeringConnectionAccepter
	err := ctx.RegisterResource("aws:ec2/vpcPeeringConnectionAccepter:VpcPeeringConnectionAccepter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcPeeringConnectionAccepter gets an existing VpcPeeringConnectionAccepter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcPeeringConnectionAccepter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcPeeringConnectionAccepterState, opts ...pulumi.ResourceOption) (*VpcPeeringConnectionAccepter, error) {
	var resource VpcPeeringConnectionAccepter
	err := ctx.ReadResource("aws:ec2/vpcPeeringConnectionAccepter:VpcPeeringConnectionAccepter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcPeeringConnectionAccepter resources.
type vpcPeeringConnectionAccepterState struct {
	AcceptStatus           *string                                `pulumi:"acceptStatus"`
	Accepter               *VpcPeeringConnectionAccepterAccepter  `pulumi:"accepter"`
	AutoAccept             *bool                                  `pulumi:"autoAccept"`
	PeerOwnerId            *string                                `pulumi:"peerOwnerId"`
	PeerRegion             *string                                `pulumi:"peerRegion"`
	PeerVpcId              *string                                `pulumi:"peerVpcId"`
	Requester              *VpcPeeringConnectionAccepterRequester `pulumi:"requester"`
	Tags                   map[string]string                      `pulumi:"tags"`
	VpcId                  *string                                `pulumi:"vpcId"`
	VpcPeeringConnectionId *string                                `pulumi:"vpcPeeringConnectionId"`
}

type VpcPeeringConnectionAccepterState struct {
	AcceptStatus           pulumi.StringPtrInput
	Accepter               VpcPeeringConnectionAccepterAccepterPtrInput
	AutoAccept             pulumi.BoolPtrInput
	PeerOwnerId            pulumi.StringPtrInput
	PeerRegion             pulumi.StringPtrInput
	PeerVpcId              pulumi.StringPtrInput
	Requester              VpcPeeringConnectionAccepterRequesterPtrInput
	Tags                   pulumi.StringMapInput
	VpcId                  pulumi.StringPtrInput
	VpcPeeringConnectionId pulumi.StringPtrInput
}

func (VpcPeeringConnectionAccepterState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcPeeringConnectionAccepterState)(nil)).Elem()
}

type vpcPeeringConnectionAccepterArgs struct {
	Accepter               *VpcPeeringConnectionAccepterAccepter  `pulumi:"accepter"`
	AutoAccept             *bool                                  `pulumi:"autoAccept"`
	Requester              *VpcPeeringConnectionAccepterRequester `pulumi:"requester"`
	Tags                   map[string]string                      `pulumi:"tags"`
	VpcPeeringConnectionId string                                 `pulumi:"vpcPeeringConnectionId"`
}

// The set of arguments for constructing a VpcPeeringConnectionAccepter resource.
type VpcPeeringConnectionAccepterArgs struct {
	Accepter               VpcPeeringConnectionAccepterAccepterPtrInput
	AutoAccept             pulumi.BoolPtrInput
	Requester              VpcPeeringConnectionAccepterRequesterPtrInput
	Tags                   pulumi.StringMapInput
	VpcPeeringConnectionId pulumi.StringInput
}

func (VpcPeeringConnectionAccepterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcPeeringConnectionAccepterArgs)(nil)).Elem()
}
