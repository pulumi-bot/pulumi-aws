// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package PeeringConnectionOptionsAccepter

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type PeeringConnectionOptionsAccepter struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC. This option is not supported for inter-region VPC peering.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection. This option is not supported for inter-region VPC peering.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

type PeeringConnectionOptionsAccepterInput interface {
	pulumi.Input

	ToPeeringConnectionOptionsAccepterOutput() PeeringConnectionOptionsAccepterOutput
	ToPeeringConnectionOptionsAccepterOutputWithContext(context.Context) PeeringConnectionOptionsAccepterOutput
}

type PeeringConnectionOptionsAccepterArgs struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC. This option is not supported for inter-region VPC peering.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection. This option is not supported for inter-region VPC peering.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (PeeringConnectionOptionsAccepterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringConnectionOptionsAccepter)(nil)).Elem()
}

func (i PeeringConnectionOptionsAccepterArgs) ToPeeringConnectionOptionsAccepterOutput() PeeringConnectionOptionsAccepterOutput {
	return i.ToPeeringConnectionOptionsAccepterOutputWithContext(context.Background())
}

func (i PeeringConnectionOptionsAccepterArgs) ToPeeringConnectionOptionsAccepterOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsAccepterOutput)
}

func (i PeeringConnectionOptionsAccepterArgs) ToPeeringConnectionOptionsAccepterPtrOutput() PeeringConnectionOptionsAccepterPtrOutput {
	return i.ToPeeringConnectionOptionsAccepterPtrOutputWithContext(context.Background())
}

func (i PeeringConnectionOptionsAccepterArgs) ToPeeringConnectionOptionsAccepterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsAccepterOutput).ToPeeringConnectionOptionsAccepterPtrOutputWithContext(ctx)
}

type PeeringConnectionOptionsAccepterPtrInput interface {
	pulumi.Input

	ToPeeringConnectionOptionsAccepterPtrOutput() PeeringConnectionOptionsAccepterPtrOutput
	ToPeeringConnectionOptionsAccepterPtrOutputWithContext(context.Context) PeeringConnectionOptionsAccepterPtrOutput
}

type peeringConnectionOptionsAccepterPtrType PeeringConnectionOptionsAccepterArgs

func PeeringConnectionOptionsAccepterPtr(v *PeeringConnectionOptionsAccepterArgs) PeeringConnectionOptionsAccepterPtrInput {	return (*peeringConnectionOptionsAccepterPtrType)(v)
}

func (*peeringConnectionOptionsAccepterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringConnectionOptionsAccepter)(nil)).Elem()
}

func (i *peeringConnectionOptionsAccepterPtrType) ToPeeringConnectionOptionsAccepterPtrOutput() PeeringConnectionOptionsAccepterPtrOutput {
	return i.ToPeeringConnectionOptionsAccepterPtrOutputWithContext(context.Background())
}

func (i *peeringConnectionOptionsAccepterPtrType) ToPeeringConnectionOptionsAccepterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsAccepterPtrOutput)
}

type PeeringConnectionOptionsAccepterOutput struct { *pulumi.OutputState }

func (PeeringConnectionOptionsAccepterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringConnectionOptionsAccepter)(nil)).Elem()
}

func (o PeeringConnectionOptionsAccepterOutput) ToPeeringConnectionOptionsAccepterOutput() PeeringConnectionOptionsAccepterOutput {
	return o
}

func (o PeeringConnectionOptionsAccepterOutput) ToPeeringConnectionOptionsAccepterOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterOutput {
	return o
}

func (o PeeringConnectionOptionsAccepterOutput) ToPeeringConnectionOptionsAccepterPtrOutput() PeeringConnectionOptionsAccepterPtrOutput {
	return o.ToPeeringConnectionOptionsAccepterPtrOutputWithContext(context.Background())
}

func (o PeeringConnectionOptionsAccepterOutput) ToPeeringConnectionOptionsAccepterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsAccepter) *PeeringConnectionOptionsAccepter {
		return &v
	}).(PeeringConnectionOptionsAccepterPtrOutput)
}
// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsAccepterOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v PeeringConnectionOptionsAccepter) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC.
func (o PeeringConnectionOptionsAccepterOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v PeeringConnectionOptionsAccepter) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsAccepterOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v PeeringConnectionOptionsAccepter) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type PeeringConnectionOptionsAccepterPtrOutput struct { *pulumi.OutputState}

func (PeeringConnectionOptionsAccepterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringConnectionOptionsAccepter)(nil)).Elem()
}

func (o PeeringConnectionOptionsAccepterPtrOutput) ToPeeringConnectionOptionsAccepterPtrOutput() PeeringConnectionOptionsAccepterPtrOutput {
	return o
}

func (o PeeringConnectionOptionsAccepterPtrOutput) ToPeeringConnectionOptionsAccepterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterPtrOutput {
	return o
}

func (o PeeringConnectionOptionsAccepterPtrOutput) Elem() PeeringConnectionOptionsAccepterOutput {
	return o.ApplyT(func (v *PeeringConnectionOptionsAccepter) PeeringConnectionOptionsAccepter { return *v }).(PeeringConnectionOptionsAccepterOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsAccepterPtrOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v PeeringConnectionOptionsAccepter) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC.
func (o PeeringConnectionOptionsAccepterPtrOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v PeeringConnectionOptionsAccepter) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsAccepterPtrOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v PeeringConnectionOptionsAccepter) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(PeeringConnectionOptionsAccepterOutput{})
	pulumi.RegisterOutputType(PeeringConnectionOptionsAccepterPtrOutput{})
}
