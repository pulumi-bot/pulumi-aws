// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package FleetSpotOptions

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type FleetSpotOptions struct {
	// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
	AllocationStrategy *string `pulumi:"allocationStrategy"`
	// Behavior when a Spot Instance is interrupted. Valid values: `hibernate`, `stop`, `terminate`. Default: `terminate`.
	InstanceInterruptionBehavior *string `pulumi:"instanceInterruptionBehavior"`
	// Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot `allocationStrategy` is set to `lowestPrice`. Default: `1`.
	InstancePoolsToUseCount *int `pulumi:"instancePoolsToUseCount"`
}

type FleetSpotOptionsInput interface {
	pulumi.Input

	ToFleetSpotOptionsOutput() FleetSpotOptionsOutput
	ToFleetSpotOptionsOutputWithContext(context.Context) FleetSpotOptionsOutput
}

type FleetSpotOptionsArgs struct {
	// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
	AllocationStrategy pulumi.StringPtrInput `pulumi:"allocationStrategy"`
	// Behavior when a Spot Instance is interrupted. Valid values: `hibernate`, `stop`, `terminate`. Default: `terminate`.
	InstanceInterruptionBehavior pulumi.StringPtrInput `pulumi:"instanceInterruptionBehavior"`
	// Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot `allocationStrategy` is set to `lowestPrice`. Default: `1`.
	InstancePoolsToUseCount pulumi.IntPtrInput `pulumi:"instancePoolsToUseCount"`
}

func (FleetSpotOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetSpotOptions)(nil)).Elem()
}

func (i FleetSpotOptionsArgs) ToFleetSpotOptionsOutput() FleetSpotOptionsOutput {
	return i.ToFleetSpotOptionsOutputWithContext(context.Background())
}

func (i FleetSpotOptionsArgs) ToFleetSpotOptionsOutputWithContext(ctx context.Context) FleetSpotOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetSpotOptionsOutput)
}

func (i FleetSpotOptionsArgs) ToFleetSpotOptionsPtrOutput() FleetSpotOptionsPtrOutput {
	return i.ToFleetSpotOptionsPtrOutputWithContext(context.Background())
}

func (i FleetSpotOptionsArgs) ToFleetSpotOptionsPtrOutputWithContext(ctx context.Context) FleetSpotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetSpotOptionsOutput).ToFleetSpotOptionsPtrOutputWithContext(ctx)
}

type FleetSpotOptionsPtrInput interface {
	pulumi.Input

	ToFleetSpotOptionsPtrOutput() FleetSpotOptionsPtrOutput
	ToFleetSpotOptionsPtrOutputWithContext(context.Context) FleetSpotOptionsPtrOutput
}

type fleetSpotOptionsPtrType FleetSpotOptionsArgs

func FleetSpotOptionsPtr(v *FleetSpotOptionsArgs) FleetSpotOptionsPtrInput {	return (*fleetSpotOptionsPtrType)(v)
}

func (*fleetSpotOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetSpotOptions)(nil)).Elem()
}

func (i *fleetSpotOptionsPtrType) ToFleetSpotOptionsPtrOutput() FleetSpotOptionsPtrOutput {
	return i.ToFleetSpotOptionsPtrOutputWithContext(context.Background())
}

func (i *fleetSpotOptionsPtrType) ToFleetSpotOptionsPtrOutputWithContext(ctx context.Context) FleetSpotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetSpotOptionsPtrOutput)
}

type FleetSpotOptionsOutput struct { *pulumi.OutputState }

func (FleetSpotOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetSpotOptions)(nil)).Elem()
}

func (o FleetSpotOptionsOutput) ToFleetSpotOptionsOutput() FleetSpotOptionsOutput {
	return o
}

func (o FleetSpotOptionsOutput) ToFleetSpotOptionsOutputWithContext(ctx context.Context) FleetSpotOptionsOutput {
	return o
}

func (o FleetSpotOptionsOutput) ToFleetSpotOptionsPtrOutput() FleetSpotOptionsPtrOutput {
	return o.ToFleetSpotOptionsPtrOutputWithContext(context.Background())
}

func (o FleetSpotOptionsOutput) ToFleetSpotOptionsPtrOutputWithContext(ctx context.Context) FleetSpotOptionsPtrOutput {
	return o.ApplyT(func(v FleetSpotOptions) *FleetSpotOptions {
		return &v
	}).(FleetSpotOptionsPtrOutput)
}
// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
func (o FleetSpotOptionsOutput) AllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func (v FleetSpotOptions) *string { return v.AllocationStrategy }).(pulumi.StringPtrOutput)
}

// Behavior when a Spot Instance is interrupted. Valid values: `hibernate`, `stop`, `terminate`. Default: `terminate`.
func (o FleetSpotOptionsOutput) InstanceInterruptionBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func (v FleetSpotOptions) *string { return v.InstanceInterruptionBehavior }).(pulumi.StringPtrOutput)
}

// Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot `allocationStrategy` is set to `lowestPrice`. Default: `1`.
func (o FleetSpotOptionsOutput) InstancePoolsToUseCount() pulumi.IntPtrOutput {
	return o.ApplyT(func (v FleetSpotOptions) *int { return v.InstancePoolsToUseCount }).(pulumi.IntPtrOutput)
}

type FleetSpotOptionsPtrOutput struct { *pulumi.OutputState}

func (FleetSpotOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetSpotOptions)(nil)).Elem()
}

func (o FleetSpotOptionsPtrOutput) ToFleetSpotOptionsPtrOutput() FleetSpotOptionsPtrOutput {
	return o
}

func (o FleetSpotOptionsPtrOutput) ToFleetSpotOptionsPtrOutputWithContext(ctx context.Context) FleetSpotOptionsPtrOutput {
	return o
}

func (o FleetSpotOptionsPtrOutput) Elem() FleetSpotOptionsOutput {
	return o.ApplyT(func (v *FleetSpotOptions) FleetSpotOptions { return *v }).(FleetSpotOptionsOutput)
}

// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
func (o FleetSpotOptionsPtrOutput) AllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func (v FleetSpotOptions) *string { return v.AllocationStrategy }).(pulumi.StringPtrOutput)
}

// Behavior when a Spot Instance is interrupted. Valid values: `hibernate`, `stop`, `terminate`. Default: `terminate`.
func (o FleetSpotOptionsPtrOutput) InstanceInterruptionBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func (v FleetSpotOptions) *string { return v.InstanceInterruptionBehavior }).(pulumi.StringPtrOutput)
}

// Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot `allocationStrategy` is set to `lowestPrice`. Default: `1`.
func (o FleetSpotOptionsPtrOutput) InstancePoolsToUseCount() pulumi.IntPtrOutput {
	return o.ApplyT(func (v FleetSpotOptions) *int { return v.InstancePoolsToUseCount }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(FleetSpotOptionsOutput{})
	pulumi.RegisterOutputType(FleetSpotOptionsPtrOutput{})
}
