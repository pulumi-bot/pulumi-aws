// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package getVpcPeeringConnectionFilter

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type GetVpcPeeringConnectionFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC Peering Connection will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

type GetVpcPeeringConnectionFilterInput interface {
	pulumi.Input

	ToGetVpcPeeringConnectionFilterOutput() GetVpcPeeringConnectionFilterOutput
	ToGetVpcPeeringConnectionFilterOutputWithContext(context.Context) GetVpcPeeringConnectionFilterOutput
}

type GetVpcPeeringConnectionFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC Peering Connection will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVpcPeeringConnectionFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcPeeringConnectionFilter)(nil)).Elem()
}

func (i GetVpcPeeringConnectionFilterArgs) ToGetVpcPeeringConnectionFilterOutput() GetVpcPeeringConnectionFilterOutput {
	return i.ToGetVpcPeeringConnectionFilterOutputWithContext(context.Background())
}

func (i GetVpcPeeringConnectionFilterArgs) ToGetVpcPeeringConnectionFilterOutputWithContext(ctx context.Context) GetVpcPeeringConnectionFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcPeeringConnectionFilterOutput)
}

type GetVpcPeeringConnectionFilterArrayInput interface {
	pulumi.Input

	ToGetVpcPeeringConnectionFilterArrayOutput() GetVpcPeeringConnectionFilterArrayOutput
	ToGetVpcPeeringConnectionFilterArrayOutputWithContext(context.Context) GetVpcPeeringConnectionFilterArrayOutput
}

type GetVpcPeeringConnectionFilterArray []GetVpcPeeringConnectionFilterInput

func (GetVpcPeeringConnectionFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcPeeringConnectionFilter)(nil)).Elem()
}

func (i GetVpcPeeringConnectionFilterArray) ToGetVpcPeeringConnectionFilterArrayOutput() GetVpcPeeringConnectionFilterArrayOutput {
	return i.ToGetVpcPeeringConnectionFilterArrayOutputWithContext(context.Background())
}

func (i GetVpcPeeringConnectionFilterArray) ToGetVpcPeeringConnectionFilterArrayOutputWithContext(ctx context.Context) GetVpcPeeringConnectionFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcPeeringConnectionFilterArrayOutput)
}

type GetVpcPeeringConnectionFilterOutput struct { *pulumi.OutputState }

func (GetVpcPeeringConnectionFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcPeeringConnectionFilter)(nil)).Elem()
}

func (o GetVpcPeeringConnectionFilterOutput) ToGetVpcPeeringConnectionFilterOutput() GetVpcPeeringConnectionFilterOutput {
	return o
}

func (o GetVpcPeeringConnectionFilterOutput) ToGetVpcPeeringConnectionFilterOutputWithContext(ctx context.Context) GetVpcPeeringConnectionFilterOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html).
func (o GetVpcPeeringConnectionFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetVpcPeeringConnectionFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A VPC Peering Connection will be selected if any one of the given values matches.
func (o GetVpcPeeringConnectionFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetVpcPeeringConnectionFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVpcPeeringConnectionFilterArrayOutput struct { *pulumi.OutputState}

func (GetVpcPeeringConnectionFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcPeeringConnectionFilter)(nil)).Elem()
}

func (o GetVpcPeeringConnectionFilterArrayOutput) ToGetVpcPeeringConnectionFilterArrayOutput() GetVpcPeeringConnectionFilterArrayOutput {
	return o
}

func (o GetVpcPeeringConnectionFilterArrayOutput) ToGetVpcPeeringConnectionFilterArrayOutputWithContext(ctx context.Context) GetVpcPeeringConnectionFilterArrayOutput {
	return o
}

func (o GetVpcPeeringConnectionFilterArrayOutput) Index(i pulumi.IntInput) GetVpcPeeringConnectionFilterOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetVpcPeeringConnectionFilter {
		return vs[0].([]GetVpcPeeringConnectionFilter)[vs[1].(int)]
	}).(GetVpcPeeringConnectionFilterOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVpcPeeringConnectionFilterOutput{})
	pulumi.RegisterOutputType(GetVpcPeeringConnectionFilterArrayOutput{})
}
