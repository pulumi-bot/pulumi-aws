// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sfn

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type StateMachine struct {
	pulumi.CustomResourceState

	Arn          pulumi.StringOutput    `pulumi:"arn"`
	CreationDate pulumi.StringOutput    `pulumi:"creationDate"`
	Definition   pulumi.StringOutput    `pulumi:"definition"`
	Name         pulumi.StringOutput    `pulumi:"name"`
	RoleArn      pulumi.StringOutput    `pulumi:"roleArn"`
	Status       pulumi.StringOutput    `pulumi:"status"`
	Tags         pulumi.StringMapOutput `pulumi:"tags"`
}

// NewStateMachine registers a new resource with the given unique name, arguments, and options.
func NewStateMachine(ctx *pulumi.Context,
	name string, args *StateMachineArgs, opts ...pulumi.ResourceOption) (*StateMachine, error) {
	if args == nil || args.Definition == nil {
		return nil, errors.New("missing required argument 'Definition'")
	}
	if args == nil || args.RoleArn == nil {
		return nil, errors.New("missing required argument 'RoleArn'")
	}
	if args == nil {
		args = &StateMachineArgs{}
	}
	var resource StateMachine
	err := ctx.RegisterResource("aws:sfn/stateMachine:StateMachine", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStateMachine gets an existing StateMachine resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStateMachine(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StateMachineState, opts ...pulumi.ResourceOption) (*StateMachine, error) {
	var resource StateMachine
	err := ctx.ReadResource("aws:sfn/stateMachine:StateMachine", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StateMachine resources.
type stateMachineState struct {
	Arn          *string           `pulumi:"arn"`
	CreationDate *string           `pulumi:"creationDate"`
	Definition   *string           `pulumi:"definition"`
	Name         *string           `pulumi:"name"`
	RoleArn      *string           `pulumi:"roleArn"`
	Status       *string           `pulumi:"status"`
	Tags         map[string]string `pulumi:"tags"`
}

type StateMachineState struct {
	Arn          pulumi.StringPtrInput
	CreationDate pulumi.StringPtrInput
	Definition   pulumi.StringPtrInput
	Name         pulumi.StringPtrInput
	RoleArn      pulumi.StringPtrInput
	Status       pulumi.StringPtrInput
	Tags         pulumi.StringMapInput
}

func (StateMachineState) ElementType() reflect.Type {
	return reflect.TypeOf((*stateMachineState)(nil)).Elem()
}

type stateMachineArgs struct {
	Definition string            `pulumi:"definition"`
	Name       *string           `pulumi:"name"`
	RoleArn    string            `pulumi:"roleArn"`
	Tags       map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a StateMachine resource.
type StateMachineArgs struct {
	Definition pulumi.StringInput
	Name       pulumi.StringPtrInput
	RoleArn    pulumi.StringInput
	Tags       pulumi.StringMapInput
}

func (StateMachineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*stateMachineArgs)(nil)).Elem()
}
