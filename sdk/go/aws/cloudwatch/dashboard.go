// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudwatch

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Dashboard struct {
	pulumi.CustomResourceState

	DashboardArn  pulumi.StringOutput `pulumi:"dashboardArn"`
	DashboardBody pulumi.StringOutput `pulumi:"dashboardBody"`
	DashboardName pulumi.StringOutput `pulumi:"dashboardName"`
}

// NewDashboard registers a new resource with the given unique name, arguments, and options.
func NewDashboard(ctx *pulumi.Context,
	name string, args *DashboardArgs, opts ...pulumi.ResourceOption) (*Dashboard, error) {
	if args == nil || args.DashboardBody == nil {
		return nil, errors.New("missing required argument 'DashboardBody'")
	}
	if args == nil || args.DashboardName == nil {
		return nil, errors.New("missing required argument 'DashboardName'")
	}
	if args == nil {
		args = &DashboardArgs{}
	}
	var resource Dashboard
	err := ctx.RegisterResource("aws:cloudwatch/dashboard:Dashboard", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDashboard gets an existing Dashboard resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDashboard(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DashboardState, opts ...pulumi.ResourceOption) (*Dashboard, error) {
	var resource Dashboard
	err := ctx.ReadResource("aws:cloudwatch/dashboard:Dashboard", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Dashboard resources.
type dashboardState struct {
	DashboardArn  *string `pulumi:"dashboardArn"`
	DashboardBody *string `pulumi:"dashboardBody"`
	DashboardName *string `pulumi:"dashboardName"`
}

type DashboardState struct {
	DashboardArn  pulumi.StringPtrInput
	DashboardBody pulumi.StringPtrInput
	DashboardName pulumi.StringPtrInput
}

func (DashboardState) ElementType() reflect.Type {
	return reflect.TypeOf((*dashboardState)(nil)).Elem()
}

type dashboardArgs struct {
	DashboardBody string `pulumi:"dashboardBody"`
	DashboardName string `pulumi:"dashboardName"`
}

// The set of arguments for constructing a Dashboard resource.
type DashboardArgs struct {
	DashboardBody pulumi.StringInput
	DashboardName pulumi.StringInput
}

func (DashboardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dashboardArgs)(nil)).Elem()
}
