// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package EventTargetKinesisTarget

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type EventTargetKinesisTarget struct {
	// The JSON path to be extracted from the event and used as the partition key.
	PartitionKeyPath *string `pulumi:"partitionKeyPath"`
}

type EventTargetKinesisTargetInput interface {
	pulumi.Input

	ToEventTargetKinesisTargetOutput() EventTargetKinesisTargetOutput
	ToEventTargetKinesisTargetOutputWithContext(context.Context) EventTargetKinesisTargetOutput
}

type EventTargetKinesisTargetArgs struct {
	// The JSON path to be extracted from the event and used as the partition key.
	PartitionKeyPath pulumi.StringPtrInput `pulumi:"partitionKeyPath"`
}

func (EventTargetKinesisTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetKinesisTarget)(nil)).Elem()
}

func (i EventTargetKinesisTargetArgs) ToEventTargetKinesisTargetOutput() EventTargetKinesisTargetOutput {
	return i.ToEventTargetKinesisTargetOutputWithContext(context.Background())
}

func (i EventTargetKinesisTargetArgs) ToEventTargetKinesisTargetOutputWithContext(ctx context.Context) EventTargetKinesisTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetKinesisTargetOutput)
}

func (i EventTargetKinesisTargetArgs) ToEventTargetKinesisTargetPtrOutput() EventTargetKinesisTargetPtrOutput {
	return i.ToEventTargetKinesisTargetPtrOutputWithContext(context.Background())
}

func (i EventTargetKinesisTargetArgs) ToEventTargetKinesisTargetPtrOutputWithContext(ctx context.Context) EventTargetKinesisTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetKinesisTargetOutput).ToEventTargetKinesisTargetPtrOutputWithContext(ctx)
}

type EventTargetKinesisTargetPtrInput interface {
	pulumi.Input

	ToEventTargetKinesisTargetPtrOutput() EventTargetKinesisTargetPtrOutput
	ToEventTargetKinesisTargetPtrOutputWithContext(context.Context) EventTargetKinesisTargetPtrOutput
}

type eventTargetKinesisTargetPtrType EventTargetKinesisTargetArgs

func EventTargetKinesisTargetPtr(v *EventTargetKinesisTargetArgs) EventTargetKinesisTargetPtrInput {	return (*eventTargetKinesisTargetPtrType)(v)
}

func (*eventTargetKinesisTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTargetKinesisTarget)(nil)).Elem()
}

func (i *eventTargetKinesisTargetPtrType) ToEventTargetKinesisTargetPtrOutput() EventTargetKinesisTargetPtrOutput {
	return i.ToEventTargetKinesisTargetPtrOutputWithContext(context.Background())
}

func (i *eventTargetKinesisTargetPtrType) ToEventTargetKinesisTargetPtrOutputWithContext(ctx context.Context) EventTargetKinesisTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetKinesisTargetPtrOutput)
}

type EventTargetKinesisTargetOutput struct { *pulumi.OutputState }

func (EventTargetKinesisTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetKinesisTarget)(nil)).Elem()
}

func (o EventTargetKinesisTargetOutput) ToEventTargetKinesisTargetOutput() EventTargetKinesisTargetOutput {
	return o
}

func (o EventTargetKinesisTargetOutput) ToEventTargetKinesisTargetOutputWithContext(ctx context.Context) EventTargetKinesisTargetOutput {
	return o
}

func (o EventTargetKinesisTargetOutput) ToEventTargetKinesisTargetPtrOutput() EventTargetKinesisTargetPtrOutput {
	return o.ToEventTargetKinesisTargetPtrOutputWithContext(context.Background())
}

func (o EventTargetKinesisTargetOutput) ToEventTargetKinesisTargetPtrOutputWithContext(ctx context.Context) EventTargetKinesisTargetPtrOutput {
	return o.ApplyT(func(v EventTargetKinesisTarget) *EventTargetKinesisTarget {
		return &v
	}).(EventTargetKinesisTargetPtrOutput)
}
// The JSON path to be extracted from the event and used as the partition key.
func (o EventTargetKinesisTargetOutput) PartitionKeyPath() pulumi.StringPtrOutput {
	return o.ApplyT(func (v EventTargetKinesisTarget) *string { return v.PartitionKeyPath }).(pulumi.StringPtrOutput)
}

type EventTargetKinesisTargetPtrOutput struct { *pulumi.OutputState}

func (EventTargetKinesisTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTargetKinesisTarget)(nil)).Elem()
}

func (o EventTargetKinesisTargetPtrOutput) ToEventTargetKinesisTargetPtrOutput() EventTargetKinesisTargetPtrOutput {
	return o
}

func (o EventTargetKinesisTargetPtrOutput) ToEventTargetKinesisTargetPtrOutputWithContext(ctx context.Context) EventTargetKinesisTargetPtrOutput {
	return o
}

func (o EventTargetKinesisTargetPtrOutput) Elem() EventTargetKinesisTargetOutput {
	return o.ApplyT(func (v *EventTargetKinesisTarget) EventTargetKinesisTarget { return *v }).(EventTargetKinesisTargetOutput)
}

// The JSON path to be extracted from the event and used as the partition key.
func (o EventTargetKinesisTargetPtrOutput) PartitionKeyPath() pulumi.StringPtrOutput {
	return o.ApplyT(func (v EventTargetKinesisTarget) *string { return v.PartitionKeyPath }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(EventTargetKinesisTargetOutput{})
	pulumi.RegisterOutputType(EventTargetKinesisTargetPtrOutput{})
}
