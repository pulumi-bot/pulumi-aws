// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package EventPermissionCondition

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type EventPermissionCondition struct {
	// Key for the condition. Valid values: `aws:PrincipalOrgID`.
	Key string `pulumi:"key"`
	// Type of condition. Value values: `StringEquals`.
	Type string `pulumi:"type"`
	// Value for the key.
	Value string `pulumi:"value"`
}

type EventPermissionConditionInput interface {
	pulumi.Input

	ToEventPermissionConditionOutput() EventPermissionConditionOutput
	ToEventPermissionConditionOutputWithContext(context.Context) EventPermissionConditionOutput
}

type EventPermissionConditionArgs struct {
	// Key for the condition. Valid values: `aws:PrincipalOrgID`.
	Key pulumi.StringInput `pulumi:"key"`
	// Type of condition. Value values: `StringEquals`.
	Type pulumi.StringInput `pulumi:"type"`
	// Value for the key.
	Value pulumi.StringInput `pulumi:"value"`
}

func (EventPermissionConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventPermissionCondition)(nil)).Elem()
}

func (i EventPermissionConditionArgs) ToEventPermissionConditionOutput() EventPermissionConditionOutput {
	return i.ToEventPermissionConditionOutputWithContext(context.Background())
}

func (i EventPermissionConditionArgs) ToEventPermissionConditionOutputWithContext(ctx context.Context) EventPermissionConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventPermissionConditionOutput)
}

func (i EventPermissionConditionArgs) ToEventPermissionConditionPtrOutput() EventPermissionConditionPtrOutput {
	return i.ToEventPermissionConditionPtrOutputWithContext(context.Background())
}

func (i EventPermissionConditionArgs) ToEventPermissionConditionPtrOutputWithContext(ctx context.Context) EventPermissionConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventPermissionConditionOutput).ToEventPermissionConditionPtrOutputWithContext(ctx)
}

type EventPermissionConditionPtrInput interface {
	pulumi.Input

	ToEventPermissionConditionPtrOutput() EventPermissionConditionPtrOutput
	ToEventPermissionConditionPtrOutputWithContext(context.Context) EventPermissionConditionPtrOutput
}

type eventPermissionConditionPtrType EventPermissionConditionArgs

func EventPermissionConditionPtr(v *EventPermissionConditionArgs) EventPermissionConditionPtrInput {	return (*eventPermissionConditionPtrType)(v)
}

func (*eventPermissionConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventPermissionCondition)(nil)).Elem()
}

func (i *eventPermissionConditionPtrType) ToEventPermissionConditionPtrOutput() EventPermissionConditionPtrOutput {
	return i.ToEventPermissionConditionPtrOutputWithContext(context.Background())
}

func (i *eventPermissionConditionPtrType) ToEventPermissionConditionPtrOutputWithContext(ctx context.Context) EventPermissionConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventPermissionConditionPtrOutput)
}

type EventPermissionConditionOutput struct { *pulumi.OutputState }

func (EventPermissionConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventPermissionCondition)(nil)).Elem()
}

func (o EventPermissionConditionOutput) ToEventPermissionConditionOutput() EventPermissionConditionOutput {
	return o
}

func (o EventPermissionConditionOutput) ToEventPermissionConditionOutputWithContext(ctx context.Context) EventPermissionConditionOutput {
	return o
}

func (o EventPermissionConditionOutput) ToEventPermissionConditionPtrOutput() EventPermissionConditionPtrOutput {
	return o.ToEventPermissionConditionPtrOutputWithContext(context.Background())
}

func (o EventPermissionConditionOutput) ToEventPermissionConditionPtrOutputWithContext(ctx context.Context) EventPermissionConditionPtrOutput {
	return o.ApplyT(func(v EventPermissionCondition) *EventPermissionCondition {
		return &v
	}).(EventPermissionConditionPtrOutput)
}
// Key for the condition. Valid values: `aws:PrincipalOrgID`.
func (o EventPermissionConditionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func (v EventPermissionCondition) string { return v.Key }).(pulumi.StringOutput)
}

// Type of condition. Value values: `StringEquals`.
func (o EventPermissionConditionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func (v EventPermissionCondition) string { return v.Type }).(pulumi.StringOutput)
}

// Value for the key.
func (o EventPermissionConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func (v EventPermissionCondition) string { return v.Value }).(pulumi.StringOutput)
}

type EventPermissionConditionPtrOutput struct { *pulumi.OutputState}

func (EventPermissionConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventPermissionCondition)(nil)).Elem()
}

func (o EventPermissionConditionPtrOutput) ToEventPermissionConditionPtrOutput() EventPermissionConditionPtrOutput {
	return o
}

func (o EventPermissionConditionPtrOutput) ToEventPermissionConditionPtrOutputWithContext(ctx context.Context) EventPermissionConditionPtrOutput {
	return o
}

func (o EventPermissionConditionPtrOutput) Elem() EventPermissionConditionOutput {
	return o.ApplyT(func (v *EventPermissionCondition) EventPermissionCondition { return *v }).(EventPermissionConditionOutput)
}

// Key for the condition. Valid values: `aws:PrincipalOrgID`.
func (o EventPermissionConditionPtrOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func (v EventPermissionCondition) string { return v.Key }).(pulumi.StringOutput)
}

// Type of condition. Value values: `StringEquals`.
func (o EventPermissionConditionPtrOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func (v EventPermissionCondition) string { return v.Type }).(pulumi.StringOutput)
}

// Value for the key.
func (o EventPermissionConditionPtrOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func (v EventPermissionCondition) string { return v.Value }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(EventPermissionConditionOutput{})
	pulumi.RegisterOutputType(EventPermissionConditionPtrOutput{})
}
