// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudwatch

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type LogResourcePolicy struct {
	pulumi.CustomResourceState

	PolicyDocument pulumi.StringOutput `pulumi:"policyDocument"`
	PolicyName     pulumi.StringOutput `pulumi:"policyName"`
}

// NewLogResourcePolicy registers a new resource with the given unique name, arguments, and options.
func NewLogResourcePolicy(ctx *pulumi.Context,
	name string, args *LogResourcePolicyArgs, opts ...pulumi.ResourceOption) (*LogResourcePolicy, error) {
	if args == nil || args.PolicyDocument == nil {
		return nil, errors.New("missing required argument 'PolicyDocument'")
	}
	if args == nil || args.PolicyName == nil {
		return nil, errors.New("missing required argument 'PolicyName'")
	}
	if args == nil {
		args = &LogResourcePolicyArgs{}
	}
	var resource LogResourcePolicy
	err := ctx.RegisterResource("aws:cloudwatch/logResourcePolicy:LogResourcePolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogResourcePolicy gets an existing LogResourcePolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogResourcePolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogResourcePolicyState, opts ...pulumi.ResourceOption) (*LogResourcePolicy, error) {
	var resource LogResourcePolicy
	err := ctx.ReadResource("aws:cloudwatch/logResourcePolicy:LogResourcePolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogResourcePolicy resources.
type logResourcePolicyState struct {
	PolicyDocument *string `pulumi:"policyDocument"`
	PolicyName     *string `pulumi:"policyName"`
}

type LogResourcePolicyState struct {
	PolicyDocument pulumi.StringPtrInput
	PolicyName     pulumi.StringPtrInput
}

func (LogResourcePolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*logResourcePolicyState)(nil)).Elem()
}

type logResourcePolicyArgs struct {
	PolicyDocument string `pulumi:"policyDocument"`
	PolicyName     string `pulumi:"policyName"`
}

// The set of arguments for constructing a LogResourcePolicy resource.
type LogResourcePolicyArgs struct {
	PolicyDocument pulumi.StringInput
	PolicyName     pulumi.StringInput
}

func (LogResourcePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logResourcePolicyArgs)(nil)).Elem()
}
