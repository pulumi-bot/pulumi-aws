// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ApplicationAppSource

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ApplicationAppSource struct {
	Password *string `pulumi:"password"`
	// For sources that are version-aware, the revision to use.
	Revision *string `pulumi:"revision"`
	SshKey *string `pulumi:"sshKey"`
	// The type of source to use. For example, "archive".
	Type string `pulumi:"type"`
	// The URL where the app resource can be found.
	Url *string `pulumi:"url"`
	// Username to use when authenticating to the source.
	Username *string `pulumi:"username"`
}

type ApplicationAppSourceInput interface {
	pulumi.Input

	ToApplicationAppSourceOutput() ApplicationAppSourceOutput
	ToApplicationAppSourceOutputWithContext(context.Context) ApplicationAppSourceOutput
}

type ApplicationAppSourceArgs struct {
	Password pulumi.StringPtrInput `pulumi:"password"`
	// For sources that are version-aware, the revision to use.
	Revision pulumi.StringPtrInput `pulumi:"revision"`
	SshKey pulumi.StringPtrInput `pulumi:"sshKey"`
	// The type of source to use. For example, "archive".
	Type pulumi.StringInput `pulumi:"type"`
	// The URL where the app resource can be found.
	Url pulumi.StringPtrInput `pulumi:"url"`
	// Username to use when authenticating to the source.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ApplicationAppSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationAppSource)(nil)).Elem()
}

func (i ApplicationAppSourceArgs) ToApplicationAppSourceOutput() ApplicationAppSourceOutput {
	return i.ToApplicationAppSourceOutputWithContext(context.Background())
}

func (i ApplicationAppSourceArgs) ToApplicationAppSourceOutputWithContext(ctx context.Context) ApplicationAppSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAppSourceOutput)
}

type ApplicationAppSourceArrayInput interface {
	pulumi.Input

	ToApplicationAppSourceArrayOutput() ApplicationAppSourceArrayOutput
	ToApplicationAppSourceArrayOutputWithContext(context.Context) ApplicationAppSourceArrayOutput
}

type ApplicationAppSourceArray []ApplicationAppSourceInput

func (ApplicationAppSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationAppSource)(nil)).Elem()
}

func (i ApplicationAppSourceArray) ToApplicationAppSourceArrayOutput() ApplicationAppSourceArrayOutput {
	return i.ToApplicationAppSourceArrayOutputWithContext(context.Background())
}

func (i ApplicationAppSourceArray) ToApplicationAppSourceArrayOutputWithContext(ctx context.Context) ApplicationAppSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAppSourceArrayOutput)
}

type ApplicationAppSourceOutput struct { *pulumi.OutputState }

func (ApplicationAppSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationAppSource)(nil)).Elem()
}

func (o ApplicationAppSourceOutput) ToApplicationAppSourceOutput() ApplicationAppSourceOutput {
	return o
}

func (o ApplicationAppSourceOutput) ToApplicationAppSourceOutputWithContext(ctx context.Context) ApplicationAppSourceOutput {
	return o
}

func (o ApplicationAppSourceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ApplicationAppSource) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// For sources that are version-aware, the revision to use.
func (o ApplicationAppSourceOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ApplicationAppSource) *string { return v.Revision }).(pulumi.StringPtrOutput)
}

func (o ApplicationAppSourceOutput) SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ApplicationAppSource) *string { return v.SshKey }).(pulumi.StringPtrOutput)
}

// The type of source to use. For example, "archive".
func (o ApplicationAppSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func (v ApplicationAppSource) string { return v.Type }).(pulumi.StringOutput)
}

// The URL where the app resource can be found.
func (o ApplicationAppSourceOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ApplicationAppSource) *string { return v.Url }).(pulumi.StringPtrOutput)
}

// Username to use when authenticating to the source.
func (o ApplicationAppSourceOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ApplicationAppSource) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ApplicationAppSourceArrayOutput struct { *pulumi.OutputState}

func (ApplicationAppSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationAppSource)(nil)).Elem()
}

func (o ApplicationAppSourceArrayOutput) ToApplicationAppSourceArrayOutput() ApplicationAppSourceArrayOutput {
	return o
}

func (o ApplicationAppSourceArrayOutput) ToApplicationAppSourceArrayOutputWithContext(ctx context.Context) ApplicationAppSourceArrayOutput {
	return o
}

func (o ApplicationAppSourceArrayOutput) Index(i pulumi.IntInput) ApplicationAppSourceOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ApplicationAppSource {
		return vs[0].([]ApplicationAppSource)[vs[1].(int)]
	}).(ApplicationAppSourceOutput)
}

func init() {
	pulumi.RegisterOutputType(ApplicationAppSourceOutput{})
	pulumi.RegisterOutputType(ApplicationAppSourceArrayOutput{})
}
