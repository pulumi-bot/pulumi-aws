// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package MysqlLayerEbsVolume

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type MysqlLayerEbsVolume struct {
	Encrypted *bool `pulumi:"encrypted"`
	Iops *int `pulumi:"iops"`
	MountPoint string `pulumi:"mountPoint"`
	NumberOfDisks int `pulumi:"numberOfDisks"`
	RaidLevel *string `pulumi:"raidLevel"`
	Size int `pulumi:"size"`
	Type *string `pulumi:"type"`
}

type MysqlLayerEbsVolumeInput interface {
	pulumi.Input

	ToMysqlLayerEbsVolumeOutput() MysqlLayerEbsVolumeOutput
	ToMysqlLayerEbsVolumeOutputWithContext(context.Context) MysqlLayerEbsVolumeOutput
}

type MysqlLayerEbsVolumeArgs struct {
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	NumberOfDisks pulumi.IntInput `pulumi:"numberOfDisks"`
	RaidLevel pulumi.StringPtrInput `pulumi:"raidLevel"`
	Size pulumi.IntInput `pulumi:"size"`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (MysqlLayerEbsVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlLayerEbsVolume)(nil)).Elem()
}

func (i MysqlLayerEbsVolumeArgs) ToMysqlLayerEbsVolumeOutput() MysqlLayerEbsVolumeOutput {
	return i.ToMysqlLayerEbsVolumeOutputWithContext(context.Background())
}

func (i MysqlLayerEbsVolumeArgs) ToMysqlLayerEbsVolumeOutputWithContext(ctx context.Context) MysqlLayerEbsVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlLayerEbsVolumeOutput)
}

type MysqlLayerEbsVolumeArrayInput interface {
	pulumi.Input

	ToMysqlLayerEbsVolumeArrayOutput() MysqlLayerEbsVolumeArrayOutput
	ToMysqlLayerEbsVolumeArrayOutputWithContext(context.Context) MysqlLayerEbsVolumeArrayOutput
}

type MysqlLayerEbsVolumeArray []MysqlLayerEbsVolumeInput

func (MysqlLayerEbsVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlLayerEbsVolume)(nil)).Elem()
}

func (i MysqlLayerEbsVolumeArray) ToMysqlLayerEbsVolumeArrayOutput() MysqlLayerEbsVolumeArrayOutput {
	return i.ToMysqlLayerEbsVolumeArrayOutputWithContext(context.Background())
}

func (i MysqlLayerEbsVolumeArray) ToMysqlLayerEbsVolumeArrayOutputWithContext(ctx context.Context) MysqlLayerEbsVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MysqlLayerEbsVolumeArrayOutput)
}

type MysqlLayerEbsVolumeOutput struct { *pulumi.OutputState }

func (MysqlLayerEbsVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MysqlLayerEbsVolume)(nil)).Elem()
}

func (o MysqlLayerEbsVolumeOutput) ToMysqlLayerEbsVolumeOutput() MysqlLayerEbsVolumeOutput {
	return o
}

func (o MysqlLayerEbsVolumeOutput) ToMysqlLayerEbsVolumeOutputWithContext(ctx context.Context) MysqlLayerEbsVolumeOutput {
	return o
}

func (o MysqlLayerEbsVolumeOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v MysqlLayerEbsVolume) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o MysqlLayerEbsVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func (v MysqlLayerEbsVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o MysqlLayerEbsVolumeOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func (v MysqlLayerEbsVolume) string { return v.MountPoint }).(pulumi.StringOutput)
}

func (o MysqlLayerEbsVolumeOutput) NumberOfDisks() pulumi.IntOutput {
	return o.ApplyT(func (v MysqlLayerEbsVolume) int { return v.NumberOfDisks }).(pulumi.IntOutput)
}

func (o MysqlLayerEbsVolumeOutput) RaidLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func (v MysqlLayerEbsVolume) *string { return v.RaidLevel }).(pulumi.StringPtrOutput)
}

func (o MysqlLayerEbsVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func (v MysqlLayerEbsVolume) int { return v.Size }).(pulumi.IntOutput)
}

func (o MysqlLayerEbsVolumeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func (v MysqlLayerEbsVolume) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type MysqlLayerEbsVolumeArrayOutput struct { *pulumi.OutputState}

func (MysqlLayerEbsVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MysqlLayerEbsVolume)(nil)).Elem()
}

func (o MysqlLayerEbsVolumeArrayOutput) ToMysqlLayerEbsVolumeArrayOutput() MysqlLayerEbsVolumeArrayOutput {
	return o
}

func (o MysqlLayerEbsVolumeArrayOutput) ToMysqlLayerEbsVolumeArrayOutputWithContext(ctx context.Context) MysqlLayerEbsVolumeArrayOutput {
	return o
}

func (o MysqlLayerEbsVolumeArrayOutput) Index(i pulumi.IntInput) MysqlLayerEbsVolumeOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) MysqlLayerEbsVolume {
		return vs[0].([]MysqlLayerEbsVolume)[vs[1].(int)]
	}).(MysqlLayerEbsVolumeOutput)
}

func init() {
	pulumi.RegisterOutputType(MysqlLayerEbsVolumeOutput{})
	pulumi.RegisterOutputType(MysqlLayerEbsVolumeArrayOutput{})
}
