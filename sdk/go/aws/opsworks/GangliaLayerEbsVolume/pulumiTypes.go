// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package GangliaLayerEbsVolume

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type GangliaLayerEbsVolume struct {
	Encrypted *bool `pulumi:"encrypted"`
	Iops *int `pulumi:"iops"`
	MountPoint string `pulumi:"mountPoint"`
	NumberOfDisks int `pulumi:"numberOfDisks"`
	RaidLevel *string `pulumi:"raidLevel"`
	Size int `pulumi:"size"`
	Type *string `pulumi:"type"`
}

type GangliaLayerEbsVolumeInput interface {
	pulumi.Input

	ToGangliaLayerEbsVolumeOutput() GangliaLayerEbsVolumeOutput
	ToGangliaLayerEbsVolumeOutputWithContext(context.Context) GangliaLayerEbsVolumeOutput
}

type GangliaLayerEbsVolumeArgs struct {
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	NumberOfDisks pulumi.IntInput `pulumi:"numberOfDisks"`
	RaidLevel pulumi.StringPtrInput `pulumi:"raidLevel"`
	Size pulumi.IntInput `pulumi:"size"`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GangliaLayerEbsVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GangliaLayerEbsVolume)(nil)).Elem()
}

func (i GangliaLayerEbsVolumeArgs) ToGangliaLayerEbsVolumeOutput() GangliaLayerEbsVolumeOutput {
	return i.ToGangliaLayerEbsVolumeOutputWithContext(context.Background())
}

func (i GangliaLayerEbsVolumeArgs) ToGangliaLayerEbsVolumeOutputWithContext(ctx context.Context) GangliaLayerEbsVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GangliaLayerEbsVolumeOutput)
}

type GangliaLayerEbsVolumeArrayInput interface {
	pulumi.Input

	ToGangliaLayerEbsVolumeArrayOutput() GangliaLayerEbsVolumeArrayOutput
	ToGangliaLayerEbsVolumeArrayOutputWithContext(context.Context) GangliaLayerEbsVolumeArrayOutput
}

type GangliaLayerEbsVolumeArray []GangliaLayerEbsVolumeInput

func (GangliaLayerEbsVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GangliaLayerEbsVolume)(nil)).Elem()
}

func (i GangliaLayerEbsVolumeArray) ToGangliaLayerEbsVolumeArrayOutput() GangliaLayerEbsVolumeArrayOutput {
	return i.ToGangliaLayerEbsVolumeArrayOutputWithContext(context.Background())
}

func (i GangliaLayerEbsVolumeArray) ToGangliaLayerEbsVolumeArrayOutputWithContext(ctx context.Context) GangliaLayerEbsVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GangliaLayerEbsVolumeArrayOutput)
}

type GangliaLayerEbsVolumeOutput struct { *pulumi.OutputState }

func (GangliaLayerEbsVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GangliaLayerEbsVolume)(nil)).Elem()
}

func (o GangliaLayerEbsVolumeOutput) ToGangliaLayerEbsVolumeOutput() GangliaLayerEbsVolumeOutput {
	return o
}

func (o GangliaLayerEbsVolumeOutput) ToGangliaLayerEbsVolumeOutputWithContext(ctx context.Context) GangliaLayerEbsVolumeOutput {
	return o
}

func (o GangliaLayerEbsVolumeOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v GangliaLayerEbsVolume) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o GangliaLayerEbsVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func (v GangliaLayerEbsVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o GangliaLayerEbsVolumeOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func (v GangliaLayerEbsVolume) string { return v.MountPoint }).(pulumi.StringOutput)
}

func (o GangliaLayerEbsVolumeOutput) NumberOfDisks() pulumi.IntOutput {
	return o.ApplyT(func (v GangliaLayerEbsVolume) int { return v.NumberOfDisks }).(pulumi.IntOutput)
}

func (o GangliaLayerEbsVolumeOutput) RaidLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GangliaLayerEbsVolume) *string { return v.RaidLevel }).(pulumi.StringPtrOutput)
}

func (o GangliaLayerEbsVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func (v GangliaLayerEbsVolume) int { return v.Size }).(pulumi.IntOutput)
}

func (o GangliaLayerEbsVolumeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GangliaLayerEbsVolume) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GangliaLayerEbsVolumeArrayOutput struct { *pulumi.OutputState}

func (GangliaLayerEbsVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GangliaLayerEbsVolume)(nil)).Elem()
}

func (o GangliaLayerEbsVolumeArrayOutput) ToGangliaLayerEbsVolumeArrayOutput() GangliaLayerEbsVolumeArrayOutput {
	return o
}

func (o GangliaLayerEbsVolumeArrayOutput) ToGangliaLayerEbsVolumeArrayOutputWithContext(ctx context.Context) GangliaLayerEbsVolumeArrayOutput {
	return o
}

func (o GangliaLayerEbsVolumeArrayOutput) Index(i pulumi.IntInput) GangliaLayerEbsVolumeOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GangliaLayerEbsVolume {
		return vs[0].([]GangliaLayerEbsVolume)[vs[1].(int)]
	}).(GangliaLayerEbsVolumeOutput)
}

func init() {
	pulumi.RegisterOutputType(GangliaLayerEbsVolumeOutput{})
	pulumi.RegisterOutputType(GangliaLayerEbsVolumeArrayOutput{})
}
