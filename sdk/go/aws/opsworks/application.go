// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package opsworks

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Application struct {
	pulumi.CustomResourceState

	AppSources             ApplicationAppSourceArrayOutput        `pulumi:"appSources"`
	AutoBundleOnDeploy     pulumi.StringPtrOutput                 `pulumi:"autoBundleOnDeploy"`
	AwsFlowRubySettings    pulumi.StringPtrOutput                 `pulumi:"awsFlowRubySettings"`
	DataSourceArn          pulumi.StringPtrOutput                 `pulumi:"dataSourceArn"`
	DataSourceDatabaseName pulumi.StringPtrOutput                 `pulumi:"dataSourceDatabaseName"`
	DataSourceType         pulumi.StringPtrOutput                 `pulumi:"dataSourceType"`
	Description            pulumi.StringPtrOutput                 `pulumi:"description"`
	DocumentRoot           pulumi.StringPtrOutput                 `pulumi:"documentRoot"`
	Domains                pulumi.StringArrayOutput               `pulumi:"domains"`
	EnableSsl              pulumi.BoolPtrOutput                   `pulumi:"enableSsl"`
	Environments           ApplicationEnvironmentArrayOutput      `pulumi:"environments"`
	Name                   pulumi.StringOutput                    `pulumi:"name"`
	RailsEnv               pulumi.StringPtrOutput                 `pulumi:"railsEnv"`
	ShortName              pulumi.StringOutput                    `pulumi:"shortName"`
	SslConfigurations      ApplicationSslConfigurationArrayOutput `pulumi:"sslConfigurations"`
	StackId                pulumi.StringOutput                    `pulumi:"stackId"`
	Type                   pulumi.StringOutput                    `pulumi:"type"`
}

// NewApplication registers a new resource with the given unique name, arguments, and options.
func NewApplication(ctx *pulumi.Context,
	name string, args *ApplicationArgs, opts ...pulumi.ResourceOption) (*Application, error) {
	if args == nil || args.StackId == nil {
		return nil, errors.New("missing required argument 'StackId'")
	}
	if args == nil || args.Type == nil {
		return nil, errors.New("missing required argument 'Type'")
	}
	if args == nil {
		args = &ApplicationArgs{}
	}
	var resource Application
	err := ctx.RegisterResource("aws:opsworks/application:Application", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplication gets an existing Application resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationState, opts ...pulumi.ResourceOption) (*Application, error) {
	var resource Application
	err := ctx.ReadResource("aws:opsworks/application:Application", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Application resources.
type applicationState struct {
	AppSources             []ApplicationAppSource        `pulumi:"appSources"`
	AutoBundleOnDeploy     *string                       `pulumi:"autoBundleOnDeploy"`
	AwsFlowRubySettings    *string                       `pulumi:"awsFlowRubySettings"`
	DataSourceArn          *string                       `pulumi:"dataSourceArn"`
	DataSourceDatabaseName *string                       `pulumi:"dataSourceDatabaseName"`
	DataSourceType         *string                       `pulumi:"dataSourceType"`
	Description            *string                       `pulumi:"description"`
	DocumentRoot           *string                       `pulumi:"documentRoot"`
	Domains                []string                      `pulumi:"domains"`
	EnableSsl              *bool                         `pulumi:"enableSsl"`
	Environments           []ApplicationEnvironment      `pulumi:"environments"`
	Name                   *string                       `pulumi:"name"`
	RailsEnv               *string                       `pulumi:"railsEnv"`
	ShortName              *string                       `pulumi:"shortName"`
	SslConfigurations      []ApplicationSslConfiguration `pulumi:"sslConfigurations"`
	StackId                *string                       `pulumi:"stackId"`
	Type                   *string                       `pulumi:"type"`
}

type ApplicationState struct {
	AppSources             ApplicationAppSourceArrayInput
	AutoBundleOnDeploy     pulumi.StringPtrInput
	AwsFlowRubySettings    pulumi.StringPtrInput
	DataSourceArn          pulumi.StringPtrInput
	DataSourceDatabaseName pulumi.StringPtrInput
	DataSourceType         pulumi.StringPtrInput
	Description            pulumi.StringPtrInput
	DocumentRoot           pulumi.StringPtrInput
	Domains                pulumi.StringArrayInput
	EnableSsl              pulumi.BoolPtrInput
	Environments           ApplicationEnvironmentArrayInput
	Name                   pulumi.StringPtrInput
	RailsEnv               pulumi.StringPtrInput
	ShortName              pulumi.StringPtrInput
	SslConfigurations      ApplicationSslConfigurationArrayInput
	StackId                pulumi.StringPtrInput
	Type                   pulumi.StringPtrInput
}

func (ApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationState)(nil)).Elem()
}

type applicationArgs struct {
	AppSources             []ApplicationAppSource        `pulumi:"appSources"`
	AutoBundleOnDeploy     *string                       `pulumi:"autoBundleOnDeploy"`
	AwsFlowRubySettings    *string                       `pulumi:"awsFlowRubySettings"`
	DataSourceArn          *string                       `pulumi:"dataSourceArn"`
	DataSourceDatabaseName *string                       `pulumi:"dataSourceDatabaseName"`
	DataSourceType         *string                       `pulumi:"dataSourceType"`
	Description            *string                       `pulumi:"description"`
	DocumentRoot           *string                       `pulumi:"documentRoot"`
	Domains                []string                      `pulumi:"domains"`
	EnableSsl              *bool                         `pulumi:"enableSsl"`
	Environments           []ApplicationEnvironment      `pulumi:"environments"`
	Name                   *string                       `pulumi:"name"`
	RailsEnv               *string                       `pulumi:"railsEnv"`
	ShortName              *string                       `pulumi:"shortName"`
	SslConfigurations      []ApplicationSslConfiguration `pulumi:"sslConfigurations"`
	StackId                string                        `pulumi:"stackId"`
	Type                   string                        `pulumi:"type"`
}

// The set of arguments for constructing a Application resource.
type ApplicationArgs struct {
	AppSources             ApplicationAppSourceArrayInput
	AutoBundleOnDeploy     pulumi.StringPtrInput
	AwsFlowRubySettings    pulumi.StringPtrInput
	DataSourceArn          pulumi.StringPtrInput
	DataSourceDatabaseName pulumi.StringPtrInput
	DataSourceType         pulumi.StringPtrInput
	Description            pulumi.StringPtrInput
	DocumentRoot           pulumi.StringPtrInput
	Domains                pulumi.StringArrayInput
	EnableSsl              pulumi.BoolPtrInput
	Environments           ApplicationEnvironmentArrayInput
	Name                   pulumi.StringPtrInput
	RailsEnv               pulumi.StringPtrInput
	ShortName              pulumi.StringPtrInput
	SslConfigurations      ApplicationSslConfigurationArrayInput
	StackId                pulumi.StringInput
	Type                   pulumi.StringInput
}

func (ApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationArgs)(nil)).Elem()
}
