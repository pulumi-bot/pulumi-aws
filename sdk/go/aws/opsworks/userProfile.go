// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package opsworks

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type UserProfile struct {
	pulumi.CustomResourceState

	AllowSelfManagement pulumi.BoolPtrOutput   `pulumi:"allowSelfManagement"`
	SshPublicKey        pulumi.StringPtrOutput `pulumi:"sshPublicKey"`
	SshUsername         pulumi.StringOutput    `pulumi:"sshUsername"`
	UserArn             pulumi.StringOutput    `pulumi:"userArn"`
}

// NewUserProfile registers a new resource with the given unique name, arguments, and options.
func NewUserProfile(ctx *pulumi.Context,
	name string, args *UserProfileArgs, opts ...pulumi.ResourceOption) (*UserProfile, error) {
	if args == nil || args.SshUsername == nil {
		return nil, errors.New("missing required argument 'SshUsername'")
	}
	if args == nil || args.UserArn == nil {
		return nil, errors.New("missing required argument 'UserArn'")
	}
	if args == nil {
		args = &UserProfileArgs{}
	}
	var resource UserProfile
	err := ctx.RegisterResource("aws:opsworks/userProfile:UserProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserProfile gets an existing UserProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserProfileState, opts ...pulumi.ResourceOption) (*UserProfile, error) {
	var resource UserProfile
	err := ctx.ReadResource("aws:opsworks/userProfile:UserProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserProfile resources.
type userProfileState struct {
	AllowSelfManagement *bool   `pulumi:"allowSelfManagement"`
	SshPublicKey        *string `pulumi:"sshPublicKey"`
	SshUsername         *string `pulumi:"sshUsername"`
	UserArn             *string `pulumi:"userArn"`
}

type UserProfileState struct {
	AllowSelfManagement pulumi.BoolPtrInput
	SshPublicKey        pulumi.StringPtrInput
	SshUsername         pulumi.StringPtrInput
	UserArn             pulumi.StringPtrInput
}

func (UserProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*userProfileState)(nil)).Elem()
}

type userProfileArgs struct {
	AllowSelfManagement *bool   `pulumi:"allowSelfManagement"`
	SshPublicKey        *string `pulumi:"sshPublicKey"`
	SshUsername         string  `pulumi:"sshUsername"`
	UserArn             string  `pulumi:"userArn"`
}

// The set of arguments for constructing a UserProfile resource.
type UserProfileArgs struct {
	AllowSelfManagement pulumi.BoolPtrInput
	SshPublicKey        pulumi.StringPtrInput
	SshUsername         pulumi.StringInput
	UserArn             pulumi.StringInput
}

func (UserProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userProfileArgs)(nil)).Elem()
}
