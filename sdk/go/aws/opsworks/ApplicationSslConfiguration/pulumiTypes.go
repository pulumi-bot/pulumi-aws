// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ApplicationSslConfiguration

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ApplicationSslConfiguration struct {
	Certificate string `pulumi:"certificate"`
	Chain *string `pulumi:"chain"`
	PrivateKey string `pulumi:"privateKey"`
}

type ApplicationSslConfigurationInput interface {
	pulumi.Input

	ToApplicationSslConfigurationOutput() ApplicationSslConfigurationOutput
	ToApplicationSslConfigurationOutputWithContext(context.Context) ApplicationSslConfigurationOutput
}

type ApplicationSslConfigurationArgs struct {
	Certificate pulumi.StringInput `pulumi:"certificate"`
	Chain pulumi.StringPtrInput `pulumi:"chain"`
	PrivateKey pulumi.StringInput `pulumi:"privateKey"`
}

func (ApplicationSslConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSslConfiguration)(nil)).Elem()
}

func (i ApplicationSslConfigurationArgs) ToApplicationSslConfigurationOutput() ApplicationSslConfigurationOutput {
	return i.ToApplicationSslConfigurationOutputWithContext(context.Background())
}

func (i ApplicationSslConfigurationArgs) ToApplicationSslConfigurationOutputWithContext(ctx context.Context) ApplicationSslConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSslConfigurationOutput)
}

type ApplicationSslConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationSslConfigurationArrayOutput() ApplicationSslConfigurationArrayOutput
	ToApplicationSslConfigurationArrayOutputWithContext(context.Context) ApplicationSslConfigurationArrayOutput
}

type ApplicationSslConfigurationArray []ApplicationSslConfigurationInput

func (ApplicationSslConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSslConfiguration)(nil)).Elem()
}

func (i ApplicationSslConfigurationArray) ToApplicationSslConfigurationArrayOutput() ApplicationSslConfigurationArrayOutput {
	return i.ToApplicationSslConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationSslConfigurationArray) ToApplicationSslConfigurationArrayOutputWithContext(ctx context.Context) ApplicationSslConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSslConfigurationArrayOutput)
}

type ApplicationSslConfigurationOutput struct { *pulumi.OutputState }

func (ApplicationSslConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSslConfiguration)(nil)).Elem()
}

func (o ApplicationSslConfigurationOutput) ToApplicationSslConfigurationOutput() ApplicationSslConfigurationOutput {
	return o
}

func (o ApplicationSslConfigurationOutput) ToApplicationSslConfigurationOutputWithContext(ctx context.Context) ApplicationSslConfigurationOutput {
	return o
}

func (o ApplicationSslConfigurationOutput) Certificate() pulumi.StringOutput {
	return o.ApplyT(func (v ApplicationSslConfiguration) string { return v.Certificate }).(pulumi.StringOutput)
}

func (o ApplicationSslConfigurationOutput) Chain() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ApplicationSslConfiguration) *string { return v.Chain }).(pulumi.StringPtrOutput)
}

func (o ApplicationSslConfigurationOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func (v ApplicationSslConfiguration) string { return v.PrivateKey }).(pulumi.StringOutput)
}

type ApplicationSslConfigurationArrayOutput struct { *pulumi.OutputState}

func (ApplicationSslConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSslConfiguration)(nil)).Elem()
}

func (o ApplicationSslConfigurationArrayOutput) ToApplicationSslConfigurationArrayOutput() ApplicationSslConfigurationArrayOutput {
	return o
}

func (o ApplicationSslConfigurationArrayOutput) ToApplicationSslConfigurationArrayOutputWithContext(ctx context.Context) ApplicationSslConfigurationArrayOutput {
	return o
}

func (o ApplicationSslConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationSslConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ApplicationSslConfiguration {
		return vs[0].([]ApplicationSslConfiguration)[vs[1].(int)]
	}).(ApplicationSslConfigurationOutput)
}

func init() {
	pulumi.RegisterOutputType(ApplicationSslConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationSslConfigurationArrayOutput{})
}
