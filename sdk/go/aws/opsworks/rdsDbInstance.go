// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package opsworks

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type RdsDbInstance struct {
	pulumi.CustomResourceState

	DbPassword       pulumi.StringOutput `pulumi:"dbPassword"`
	DbUser           pulumi.StringOutput `pulumi:"dbUser"`
	RdsDbInstanceArn pulumi.StringOutput `pulumi:"rdsDbInstanceArn"`
	StackId          pulumi.StringOutput `pulumi:"stackId"`
}

// NewRdsDbInstance registers a new resource with the given unique name, arguments, and options.
func NewRdsDbInstance(ctx *pulumi.Context,
	name string, args *RdsDbInstanceArgs, opts ...pulumi.ResourceOption) (*RdsDbInstance, error) {
	if args == nil || args.DbPassword == nil {
		return nil, errors.New("missing required argument 'DbPassword'")
	}
	if args == nil || args.DbUser == nil {
		return nil, errors.New("missing required argument 'DbUser'")
	}
	if args == nil || args.RdsDbInstanceArn == nil {
		return nil, errors.New("missing required argument 'RdsDbInstanceArn'")
	}
	if args == nil || args.StackId == nil {
		return nil, errors.New("missing required argument 'StackId'")
	}
	if args == nil {
		args = &RdsDbInstanceArgs{}
	}
	var resource RdsDbInstance
	err := ctx.RegisterResource("aws:opsworks/rdsDbInstance:RdsDbInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRdsDbInstance gets an existing RdsDbInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRdsDbInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RdsDbInstanceState, opts ...pulumi.ResourceOption) (*RdsDbInstance, error) {
	var resource RdsDbInstance
	err := ctx.ReadResource("aws:opsworks/rdsDbInstance:RdsDbInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RdsDbInstance resources.
type rdsDbInstanceState struct {
	DbPassword       *string `pulumi:"dbPassword"`
	DbUser           *string `pulumi:"dbUser"`
	RdsDbInstanceArn *string `pulumi:"rdsDbInstanceArn"`
	StackId          *string `pulumi:"stackId"`
}

type RdsDbInstanceState struct {
	DbPassword       pulumi.StringPtrInput
	DbUser           pulumi.StringPtrInput
	RdsDbInstanceArn pulumi.StringPtrInput
	StackId          pulumi.StringPtrInput
}

func (RdsDbInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*rdsDbInstanceState)(nil)).Elem()
}

type rdsDbInstanceArgs struct {
	DbPassword       string `pulumi:"dbPassword"`
	DbUser           string `pulumi:"dbUser"`
	RdsDbInstanceArn string `pulumi:"rdsDbInstanceArn"`
	StackId          string `pulumi:"stackId"`
}

// The set of arguments for constructing a RdsDbInstance resource.
type RdsDbInstanceArgs struct {
	DbPassword       pulumi.StringInput
	DbUser           pulumi.StringInput
	RdsDbInstanceArn pulumi.StringInput
	StackId          pulumi.StringInput
}

func (RdsDbInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*rdsDbInstanceArgs)(nil)).Elem()
}
