// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sns

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type TopicSubscription struct {
	pulumi.CustomResourceState

	Arn                          pulumi.StringOutput    `pulumi:"arn"`
	ConfirmationTimeoutInMinutes pulumi.IntPtrOutput    `pulumi:"confirmationTimeoutInMinutes"`
	DeliveryPolicy               pulumi.StringPtrOutput `pulumi:"deliveryPolicy"`
	Endpoint                     pulumi.StringOutput    `pulumi:"endpoint"`
	EndpointAutoConfirms         pulumi.BoolPtrOutput   `pulumi:"endpointAutoConfirms"`
	FilterPolicy                 pulumi.StringPtrOutput `pulumi:"filterPolicy"`
	Protocol                     pulumi.StringOutput    `pulumi:"protocol"`
	RawMessageDelivery           pulumi.BoolPtrOutput   `pulumi:"rawMessageDelivery"`
	Topic                        pulumi.StringOutput    `pulumi:"topic"`
}

// NewTopicSubscription registers a new resource with the given unique name, arguments, and options.
func NewTopicSubscription(ctx *pulumi.Context,
	name string, args *TopicSubscriptionArgs, opts ...pulumi.ResourceOption) (*TopicSubscription, error) {
	if args == nil || args.Endpoint == nil {
		return nil, errors.New("missing required argument 'Endpoint'")
	}
	if args == nil || args.Protocol == nil {
		return nil, errors.New("missing required argument 'Protocol'")
	}
	if args == nil || args.Topic == nil {
		return nil, errors.New("missing required argument 'Topic'")
	}
	if args == nil {
		args = &TopicSubscriptionArgs{}
	}
	var resource TopicSubscription
	err := ctx.RegisterResource("aws:sns/topicSubscription:TopicSubscription", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTopicSubscription gets an existing TopicSubscription resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTopicSubscription(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TopicSubscriptionState, opts ...pulumi.ResourceOption) (*TopicSubscription, error) {
	var resource TopicSubscription
	err := ctx.ReadResource("aws:sns/topicSubscription:TopicSubscription", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TopicSubscription resources.
type topicSubscriptionState struct {
	Arn                          *string `pulumi:"arn"`
	ConfirmationTimeoutInMinutes *int    `pulumi:"confirmationTimeoutInMinutes"`
	DeliveryPolicy               *string `pulumi:"deliveryPolicy"`
	Endpoint                     *string `pulumi:"endpoint"`
	EndpointAutoConfirms         *bool   `pulumi:"endpointAutoConfirms"`
	FilterPolicy                 *string `pulumi:"filterPolicy"`
	Protocol                     *string `pulumi:"protocol"`
	RawMessageDelivery           *bool   `pulumi:"rawMessageDelivery"`
	Topic                        *string `pulumi:"topic"`
}

type TopicSubscriptionState struct {
	Arn                          pulumi.StringPtrInput
	ConfirmationTimeoutInMinutes pulumi.IntPtrInput
	DeliveryPolicy               pulumi.StringPtrInput
	Endpoint                     pulumi.StringPtrInput
	EndpointAutoConfirms         pulumi.BoolPtrInput
	FilterPolicy                 pulumi.StringPtrInput
	Protocol                     pulumi.StringPtrInput
	RawMessageDelivery           pulumi.BoolPtrInput
	Topic                        pulumi.StringPtrInput
}

func (TopicSubscriptionState) ElementType() reflect.Type {
	return reflect.TypeOf((*topicSubscriptionState)(nil)).Elem()
}

type topicSubscriptionArgs struct {
	ConfirmationTimeoutInMinutes *int        `pulumi:"confirmationTimeoutInMinutes"`
	DeliveryPolicy               *string     `pulumi:"deliveryPolicy"`
	Endpoint                     string      `pulumi:"endpoint"`
	EndpointAutoConfirms         *bool       `pulumi:"endpointAutoConfirms"`
	FilterPolicy                 *string     `pulumi:"filterPolicy"`
	Protocol                     string      `pulumi:"protocol"`
	RawMessageDelivery           *bool       `pulumi:"rawMessageDelivery"`
	Topic                        interface{} `pulumi:"topic"`
}

// The set of arguments for constructing a TopicSubscription resource.
type TopicSubscriptionArgs struct {
	ConfirmationTimeoutInMinutes pulumi.IntPtrInput
	DeliveryPolicy               pulumi.StringPtrInput
	Endpoint                     pulumi.StringInput
	EndpointAutoConfirms         pulumi.BoolPtrInput
	FilterPolicy                 pulumi.StringPtrInput
	Protocol                     pulumi.StringInput
	RawMessageDelivery           pulumi.BoolPtrInput
	Topic                        pulumi.Input
}

func (TopicSubscriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*topicSubscriptionArgs)(nil)).Elem()
}
