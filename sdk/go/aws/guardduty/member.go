// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package guardduty

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Member struct {
	pulumi.CustomResourceState

	AccountId                pulumi.StringOutput    `pulumi:"accountId"`
	DetectorId               pulumi.StringOutput    `pulumi:"detectorId"`
	DisableEmailNotification pulumi.BoolPtrOutput   `pulumi:"disableEmailNotification"`
	Email                    pulumi.StringOutput    `pulumi:"email"`
	InvitationMessage        pulumi.StringPtrOutput `pulumi:"invitationMessage"`
	Invite                   pulumi.BoolPtrOutput   `pulumi:"invite"`
	RelationshipStatus       pulumi.StringOutput    `pulumi:"relationshipStatus"`
}

// NewMember registers a new resource with the given unique name, arguments, and options.
func NewMember(ctx *pulumi.Context,
	name string, args *MemberArgs, opts ...pulumi.ResourceOption) (*Member, error) {
	if args == nil || args.AccountId == nil {
		return nil, errors.New("missing required argument 'AccountId'")
	}
	if args == nil || args.DetectorId == nil {
		return nil, errors.New("missing required argument 'DetectorId'")
	}
	if args == nil || args.Email == nil {
		return nil, errors.New("missing required argument 'Email'")
	}
	if args == nil {
		args = &MemberArgs{}
	}
	var resource Member
	err := ctx.RegisterResource("aws:guardduty/member:Member", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMember gets an existing Member resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MemberState, opts ...pulumi.ResourceOption) (*Member, error) {
	var resource Member
	err := ctx.ReadResource("aws:guardduty/member:Member", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Member resources.
type memberState struct {
	AccountId                *string `pulumi:"accountId"`
	DetectorId               *string `pulumi:"detectorId"`
	DisableEmailNotification *bool   `pulumi:"disableEmailNotification"`
	Email                    *string `pulumi:"email"`
	InvitationMessage        *string `pulumi:"invitationMessage"`
	Invite                   *bool   `pulumi:"invite"`
	RelationshipStatus       *string `pulumi:"relationshipStatus"`
}

type MemberState struct {
	AccountId                pulumi.StringPtrInput
	DetectorId               pulumi.StringPtrInput
	DisableEmailNotification pulumi.BoolPtrInput
	Email                    pulumi.StringPtrInput
	InvitationMessage        pulumi.StringPtrInput
	Invite                   pulumi.BoolPtrInput
	RelationshipStatus       pulumi.StringPtrInput
}

func (MemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*memberState)(nil)).Elem()
}

type memberArgs struct {
	AccountId                string  `pulumi:"accountId"`
	DetectorId               string  `pulumi:"detectorId"`
	DisableEmailNotification *bool   `pulumi:"disableEmailNotification"`
	Email                    string  `pulumi:"email"`
	InvitationMessage        *string `pulumi:"invitationMessage"`
	Invite                   *bool   `pulumi:"invite"`
}

// The set of arguments for constructing a Member resource.
type MemberArgs struct {
	AccountId                pulumi.StringInput
	DetectorId               pulumi.StringInput
	DisableEmailNotification pulumi.BoolPtrInput
	Email                    pulumi.StringInput
	InvitationMessage        pulumi.StringPtrInput
	Invite                   pulumi.BoolPtrInput
}

func (MemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*memberArgs)(nil)).Elem()
}
