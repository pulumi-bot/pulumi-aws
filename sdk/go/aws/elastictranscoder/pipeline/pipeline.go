// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package pipeline

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-aws/elastictranscoder/PipelineContentConfig"
	"https:/github.com/pulumi/pulumi-aws/elastictranscoder/PipelineContentConfigPermission"
	"https:/github.com/pulumi/pulumi-aws/elastictranscoder/PipelineNotifications"
	"https:/github.com/pulumi/pulumi-aws/elastictranscoder/PipelineThumbnailConfig"
	"https:/github.com/pulumi/pulumi-aws/elastictranscoder/PipelineThumbnailConfigPermission"
)

// Provides an Elastic Transcoder pipeline resource.
// 
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/elastictranscoder_pipeline.html.markdown.
type Pipeline struct {
	pulumi.CustomResourceState

	Arn pulumi.StringOutput `pulumi:"arn"`
	// The AWS Key Management Service (AWS KMS) key that you want to use with this pipeline.
	AwsKmsKeyArn pulumi.StringPtrOutput `pulumi:"awsKmsKeyArn"`
	// The ContentConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists. (documented below)
	ContentConfig elastictranscoderPipelineContentConfig.PipelineContentConfigOutput `pulumi:"contentConfig"`
	// The permissions for the `contentConfig` object. (documented below)
	ContentConfigPermissions elastictranscoderPipelineContentConfigPermission.PipelineContentConfigPermissionArrayOutput `pulumi:"contentConfigPermissions"`
	// The Amazon S3 bucket in which you saved the media files that you want to transcode and the graphics that you want to use as watermarks.
	InputBucket pulumi.StringOutput `pulumi:"inputBucket"`
	// The name of the pipeline. Maximum 40 characters
	Name pulumi.StringOutput `pulumi:"name"`
	// The Amazon Simple Notification Service (Amazon SNS) topic that you want to notify to report job status. (documented below)
	Notifications elastictranscoderPipelineNotifications.PipelineNotificationsPtrOutput `pulumi:"notifications"`
	// The Amazon S3 bucket in which you want Elastic Transcoder to save the transcoded files.
	OutputBucket pulumi.StringOutput `pulumi:"outputBucket"`
	// The IAM Amazon Resource Name (ARN) for the role that you want Elastic Transcoder to use to transcode jobs for this pipeline.
	Role pulumi.StringOutput `pulumi:"role"`
	// The ThumbnailConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files. (documented below)
	ThumbnailConfig elastictranscoderPipelineThumbnailConfig.PipelineThumbnailConfigOutput `pulumi:"thumbnailConfig"`
	// The permissions for the `thumbnailConfig` object. (documented below)
	ThumbnailConfigPermissions elastictranscoderPipelineThumbnailConfigPermission.PipelineThumbnailConfigPermissionArrayOutput `pulumi:"thumbnailConfigPermissions"`
}

// NewPipeline registers a new resource with the given unique name, arguments, and options.
func NewPipeline(ctx *pulumi.Context,
	name string, args *PipelineArgs, opts ...pulumi.ResourceOption) (*Pipeline, error) {
	if args == nil || args.InputBucket == nil {
		return nil, errors.New("missing required argument 'InputBucket'")
	}
	if args == nil || args.Role == nil {
		return nil, errors.New("missing required argument 'Role'")
	}
	if args == nil {
		args = &PipelineArgs{}
	}
	var resource Pipeline
	err := ctx.RegisterResource("aws:elastictranscoder/pipeline:Pipeline", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPipeline gets an existing Pipeline resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPipeline(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PipelineState, opts ...pulumi.ResourceOption) (*Pipeline, error) {
	var resource Pipeline
	err := ctx.ReadResource("aws:elastictranscoder/pipeline:Pipeline", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Pipeline resources.
type pipelineState struct {
	Arn *string `pulumi:"arn"`
	// The AWS Key Management Service (AWS KMS) key that you want to use with this pipeline.
	AwsKmsKeyArn *string `pulumi:"awsKmsKeyArn"`
	// The ContentConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists. (documented below)
	ContentConfig *elastictranscoderPipelineContentConfig.PipelineContentConfig `pulumi:"contentConfig"`
	// The permissions for the `contentConfig` object. (documented below)
	ContentConfigPermissions []elastictranscoderPipelineContentConfigPermission.PipelineContentConfigPermission `pulumi:"contentConfigPermissions"`
	// The Amazon S3 bucket in which you saved the media files that you want to transcode and the graphics that you want to use as watermarks.
	InputBucket *string `pulumi:"inputBucket"`
	// The name of the pipeline. Maximum 40 characters
	Name *string `pulumi:"name"`
	// The Amazon Simple Notification Service (Amazon SNS) topic that you want to notify to report job status. (documented below)
	Notifications *elastictranscoderPipelineNotifications.PipelineNotifications `pulumi:"notifications"`
	// The Amazon S3 bucket in which you want Elastic Transcoder to save the transcoded files.
	OutputBucket *string `pulumi:"outputBucket"`
	// The IAM Amazon Resource Name (ARN) for the role that you want Elastic Transcoder to use to transcode jobs for this pipeline.
	Role *string `pulumi:"role"`
	// The ThumbnailConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files. (documented below)
	ThumbnailConfig *elastictranscoderPipelineThumbnailConfig.PipelineThumbnailConfig `pulumi:"thumbnailConfig"`
	// The permissions for the `thumbnailConfig` object. (documented below)
	ThumbnailConfigPermissions []elastictranscoderPipelineThumbnailConfigPermission.PipelineThumbnailConfigPermission `pulumi:"thumbnailConfigPermissions"`
}

type PipelineState struct {
	Arn pulumi.StringPtrInput
	// The AWS Key Management Service (AWS KMS) key that you want to use with this pipeline.
	AwsKmsKeyArn pulumi.StringPtrInput
	// The ContentConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists. (documented below)
	ContentConfig elastictranscoderPipelineContentConfig.PipelineContentConfigPtrInput
	// The permissions for the `contentConfig` object. (documented below)
	ContentConfigPermissions elastictranscoderPipelineContentConfigPermission.PipelineContentConfigPermissionArrayInput
	// The Amazon S3 bucket in which you saved the media files that you want to transcode and the graphics that you want to use as watermarks.
	InputBucket pulumi.StringPtrInput
	// The name of the pipeline. Maximum 40 characters
	Name pulumi.StringPtrInput
	// The Amazon Simple Notification Service (Amazon SNS) topic that you want to notify to report job status. (documented below)
	Notifications elastictranscoderPipelineNotifications.PipelineNotificationsPtrInput
	// The Amazon S3 bucket in which you want Elastic Transcoder to save the transcoded files.
	OutputBucket pulumi.StringPtrInput
	// The IAM Amazon Resource Name (ARN) for the role that you want Elastic Transcoder to use to transcode jobs for this pipeline.
	Role pulumi.StringPtrInput
	// The ThumbnailConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files. (documented below)
	ThumbnailConfig elastictranscoderPipelineThumbnailConfig.PipelineThumbnailConfigPtrInput
	// The permissions for the `thumbnailConfig` object. (documented below)
	ThumbnailConfigPermissions elastictranscoderPipelineThumbnailConfigPermission.PipelineThumbnailConfigPermissionArrayInput
}

func (PipelineState) ElementType() reflect.Type {
	return reflect.TypeOf((*pipelineState)(nil)).Elem()
}

type pipelineArgs struct {
	// The AWS Key Management Service (AWS KMS) key that you want to use with this pipeline.
	AwsKmsKeyArn *string `pulumi:"awsKmsKeyArn"`
	// The ContentConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists. (documented below)
	ContentConfig *elastictranscoderPipelineContentConfig.PipelineContentConfig `pulumi:"contentConfig"`
	// The permissions for the `contentConfig` object. (documented below)
	ContentConfigPermissions []elastictranscoderPipelineContentConfigPermission.PipelineContentConfigPermission `pulumi:"contentConfigPermissions"`
	// The Amazon S3 bucket in which you saved the media files that you want to transcode and the graphics that you want to use as watermarks.
	InputBucket string `pulumi:"inputBucket"`
	// The name of the pipeline. Maximum 40 characters
	Name *string `pulumi:"name"`
	// The Amazon Simple Notification Service (Amazon SNS) topic that you want to notify to report job status. (documented below)
	Notifications *elastictranscoderPipelineNotifications.PipelineNotifications `pulumi:"notifications"`
	// The Amazon S3 bucket in which you want Elastic Transcoder to save the transcoded files.
	OutputBucket *string `pulumi:"outputBucket"`
	// The IAM Amazon Resource Name (ARN) for the role that you want Elastic Transcoder to use to transcode jobs for this pipeline.
	Role string `pulumi:"role"`
	// The ThumbnailConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files. (documented below)
	ThumbnailConfig *elastictranscoderPipelineThumbnailConfig.PipelineThumbnailConfig `pulumi:"thumbnailConfig"`
	// The permissions for the `thumbnailConfig` object. (documented below)
	ThumbnailConfigPermissions []elastictranscoderPipelineThumbnailConfigPermission.PipelineThumbnailConfigPermission `pulumi:"thumbnailConfigPermissions"`
}

// The set of arguments for constructing a Pipeline resource.
type PipelineArgs struct {
	// The AWS Key Management Service (AWS KMS) key that you want to use with this pipeline.
	AwsKmsKeyArn pulumi.StringPtrInput
	// The ContentConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists. (documented below)
	ContentConfig elastictranscoderPipelineContentConfig.PipelineContentConfigPtrInput
	// The permissions for the `contentConfig` object. (documented below)
	ContentConfigPermissions elastictranscoderPipelineContentConfigPermission.PipelineContentConfigPermissionArrayInput
	// The Amazon S3 bucket in which you saved the media files that you want to transcode and the graphics that you want to use as watermarks.
	InputBucket pulumi.StringInput
	// The name of the pipeline. Maximum 40 characters
	Name pulumi.StringPtrInput
	// The Amazon Simple Notification Service (Amazon SNS) topic that you want to notify to report job status. (documented below)
	Notifications elastictranscoderPipelineNotifications.PipelineNotificationsPtrInput
	// The Amazon S3 bucket in which you want Elastic Transcoder to save the transcoded files.
	OutputBucket pulumi.StringPtrInput
	// The IAM Amazon Resource Name (ARN) for the role that you want Elastic Transcoder to use to transcode jobs for this pipeline.
	Role pulumi.StringInput
	// The ThumbnailConfig object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files. (documented below)
	ThumbnailConfig elastictranscoderPipelineThumbnailConfig.PipelineThumbnailConfigPtrInput
	// The permissions for the `thumbnailConfig` object. (documented below)
	ThumbnailConfigPermissions elastictranscoderPipelineThumbnailConfigPermission.PipelineThumbnailConfigPermissionArrayInput
}

func (PipelineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*pipelineArgs)(nil)).Elem()
}

