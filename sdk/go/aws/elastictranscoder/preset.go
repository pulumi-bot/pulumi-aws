// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package elastictranscoder

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Preset struct {
	pulumi.CustomResourceState

	Arn               pulumi.StringOutput              `pulumi:"arn"`
	Audio             PresetAudioPtrOutput             `pulumi:"audio"`
	AudioCodecOptions PresetAudioCodecOptionsPtrOutput `pulumi:"audioCodecOptions"`
	Container         pulumi.StringOutput              `pulumi:"container"`
	Description       pulumi.StringPtrOutput           `pulumi:"description"`
	Name              pulumi.StringOutput              `pulumi:"name"`
	Thumbnails        PresetThumbnailsPtrOutput        `pulumi:"thumbnails"`
	Type              pulumi.StringOutput              `pulumi:"type"`
	Video             PresetVideoPtrOutput             `pulumi:"video"`
	VideoCodecOptions pulumi.StringMapOutput           `pulumi:"videoCodecOptions"`
	VideoWatermarks   PresetVideoWatermarkArrayOutput  `pulumi:"videoWatermarks"`
}

// NewPreset registers a new resource with the given unique name, arguments, and options.
func NewPreset(ctx *pulumi.Context,
	name string, args *PresetArgs, opts ...pulumi.ResourceOption) (*Preset, error) {
	if args == nil || args.Container == nil {
		return nil, errors.New("missing required argument 'Container'")
	}
	if args == nil {
		args = &PresetArgs{}
	}
	var resource Preset
	err := ctx.RegisterResource("aws:elastictranscoder/preset:Preset", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPreset gets an existing Preset resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPreset(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PresetState, opts ...pulumi.ResourceOption) (*Preset, error) {
	var resource Preset
	err := ctx.ReadResource("aws:elastictranscoder/preset:Preset", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Preset resources.
type presetState struct {
	Arn               *string                  `pulumi:"arn"`
	Audio             *PresetAudio             `pulumi:"audio"`
	AudioCodecOptions *PresetAudioCodecOptions `pulumi:"audioCodecOptions"`
	Container         *string                  `pulumi:"container"`
	Description       *string                  `pulumi:"description"`
	Name              *string                  `pulumi:"name"`
	Thumbnails        *PresetThumbnails        `pulumi:"thumbnails"`
	Type              *string                  `pulumi:"type"`
	Video             *PresetVideo             `pulumi:"video"`
	VideoCodecOptions map[string]string        `pulumi:"videoCodecOptions"`
	VideoWatermarks   []PresetVideoWatermark   `pulumi:"videoWatermarks"`
}

type PresetState struct {
	Arn               pulumi.StringPtrInput
	Audio             PresetAudioPtrInput
	AudioCodecOptions PresetAudioCodecOptionsPtrInput
	Container         pulumi.StringPtrInput
	Description       pulumi.StringPtrInput
	Name              pulumi.StringPtrInput
	Thumbnails        PresetThumbnailsPtrInput
	Type              pulumi.StringPtrInput
	Video             PresetVideoPtrInput
	VideoCodecOptions pulumi.StringMapInput
	VideoWatermarks   PresetVideoWatermarkArrayInput
}

func (PresetState) ElementType() reflect.Type {
	return reflect.TypeOf((*presetState)(nil)).Elem()
}

type presetArgs struct {
	Audio             *PresetAudio             `pulumi:"audio"`
	AudioCodecOptions *PresetAudioCodecOptions `pulumi:"audioCodecOptions"`
	Container         string                   `pulumi:"container"`
	Description       *string                  `pulumi:"description"`
	Name              *string                  `pulumi:"name"`
	Thumbnails        *PresetThumbnails        `pulumi:"thumbnails"`
	Type              *string                  `pulumi:"type"`
	Video             *PresetVideo             `pulumi:"video"`
	VideoCodecOptions map[string]string        `pulumi:"videoCodecOptions"`
	VideoWatermarks   []PresetVideoWatermark   `pulumi:"videoWatermarks"`
}

// The set of arguments for constructing a Preset resource.
type PresetArgs struct {
	Audio             PresetAudioPtrInput
	AudioCodecOptions PresetAudioCodecOptionsPtrInput
	Container         pulumi.StringInput
	Description       pulumi.StringPtrInput
	Name              pulumi.StringPtrInput
	Thumbnails        PresetThumbnailsPtrInput
	Type              pulumi.StringPtrInput
	Video             PresetVideoPtrInput
	VideoCodecOptions pulumi.StringMapInput
	VideoWatermarks   PresetVideoWatermarkArrayInput
}

func (PresetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*presetArgs)(nil)).Elem()
}
