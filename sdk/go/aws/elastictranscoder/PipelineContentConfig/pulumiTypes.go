// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package PipelineContentConfig

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type PipelineContentConfig struct {
	// The Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files.
	Bucket *string `pulumi:"bucket"`
	// The Amazon S3 storage class, Standard or ReducedRedundancy, that you want Elastic Transcoder to assign to the thumbnails that it stores in your Amazon S3 bucket.
	StorageClass *string `pulumi:"storageClass"`
}

type PipelineContentConfigInput interface {
	pulumi.Input

	ToPipelineContentConfigOutput() PipelineContentConfigOutput
	ToPipelineContentConfigOutputWithContext(context.Context) PipelineContentConfigOutput
}

type PipelineContentConfigArgs struct {
	// The Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files.
	Bucket pulumi.StringPtrInput `pulumi:"bucket"`
	// The Amazon S3 storage class, Standard or ReducedRedundancy, that you want Elastic Transcoder to assign to the thumbnails that it stores in your Amazon S3 bucket.
	StorageClass pulumi.StringPtrInput `pulumi:"storageClass"`
}

func (PipelineContentConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineContentConfig)(nil)).Elem()
}

func (i PipelineContentConfigArgs) ToPipelineContentConfigOutput() PipelineContentConfigOutput {
	return i.ToPipelineContentConfigOutputWithContext(context.Background())
}

func (i PipelineContentConfigArgs) ToPipelineContentConfigOutputWithContext(ctx context.Context) PipelineContentConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineContentConfigOutput)
}

func (i PipelineContentConfigArgs) ToPipelineContentConfigPtrOutput() PipelineContentConfigPtrOutput {
	return i.ToPipelineContentConfigPtrOutputWithContext(context.Background())
}

func (i PipelineContentConfigArgs) ToPipelineContentConfigPtrOutputWithContext(ctx context.Context) PipelineContentConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineContentConfigOutput).ToPipelineContentConfigPtrOutputWithContext(ctx)
}

type PipelineContentConfigPtrInput interface {
	pulumi.Input

	ToPipelineContentConfigPtrOutput() PipelineContentConfigPtrOutput
	ToPipelineContentConfigPtrOutputWithContext(context.Context) PipelineContentConfigPtrOutput
}

type pipelineContentConfigPtrType PipelineContentConfigArgs

func PipelineContentConfigPtr(v *PipelineContentConfigArgs) PipelineContentConfigPtrInput {	return (*pipelineContentConfigPtrType)(v)
}

func (*pipelineContentConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineContentConfig)(nil)).Elem()
}

func (i *pipelineContentConfigPtrType) ToPipelineContentConfigPtrOutput() PipelineContentConfigPtrOutput {
	return i.ToPipelineContentConfigPtrOutputWithContext(context.Background())
}

func (i *pipelineContentConfigPtrType) ToPipelineContentConfigPtrOutputWithContext(ctx context.Context) PipelineContentConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineContentConfigPtrOutput)
}

type PipelineContentConfigOutput struct { *pulumi.OutputState }

func (PipelineContentConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineContentConfig)(nil)).Elem()
}

func (o PipelineContentConfigOutput) ToPipelineContentConfigOutput() PipelineContentConfigOutput {
	return o
}

func (o PipelineContentConfigOutput) ToPipelineContentConfigOutputWithContext(ctx context.Context) PipelineContentConfigOutput {
	return o
}

func (o PipelineContentConfigOutput) ToPipelineContentConfigPtrOutput() PipelineContentConfigPtrOutput {
	return o.ToPipelineContentConfigPtrOutputWithContext(context.Background())
}

func (o PipelineContentConfigOutput) ToPipelineContentConfigPtrOutputWithContext(ctx context.Context) PipelineContentConfigPtrOutput {
	return o.ApplyT(func(v PipelineContentConfig) *PipelineContentConfig {
		return &v
	}).(PipelineContentConfigPtrOutput)
}
// The Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files.
func (o PipelineContentConfigOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func (v PipelineContentConfig) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// The Amazon S3 storage class, Standard or ReducedRedundancy, that you want Elastic Transcoder to assign to the thumbnails that it stores in your Amazon S3 bucket.
func (o PipelineContentConfigOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func (v PipelineContentConfig) *string { return v.StorageClass }).(pulumi.StringPtrOutput)
}

type PipelineContentConfigPtrOutput struct { *pulumi.OutputState}

func (PipelineContentConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineContentConfig)(nil)).Elem()
}

func (o PipelineContentConfigPtrOutput) ToPipelineContentConfigPtrOutput() PipelineContentConfigPtrOutput {
	return o
}

func (o PipelineContentConfigPtrOutput) ToPipelineContentConfigPtrOutputWithContext(ctx context.Context) PipelineContentConfigPtrOutput {
	return o
}

func (o PipelineContentConfigPtrOutput) Elem() PipelineContentConfigOutput {
	return o.ApplyT(func (v *PipelineContentConfig) PipelineContentConfig { return *v }).(PipelineContentConfigOutput)
}

// The Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files.
func (o PipelineContentConfigPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func (v PipelineContentConfig) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// The Amazon S3 storage class, Standard or ReducedRedundancy, that you want Elastic Transcoder to assign to the thumbnails that it stores in your Amazon S3 bucket.
func (o PipelineContentConfigPtrOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func (v PipelineContentConfig) *string { return v.StorageClass }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(PipelineContentConfigOutput{})
	pulumi.RegisterOutputType(PipelineContentConfigPtrOutput{})
}
