// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package lightsail

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Instance struct {
	pulumi.CustomResourceState

	Arn              pulumi.StringOutput    `pulumi:"arn"`
	AvailabilityZone pulumi.StringOutput    `pulumi:"availabilityZone"`
	BlueprintId      pulumi.StringOutput    `pulumi:"blueprintId"`
	BundleId         pulumi.StringOutput    `pulumi:"bundleId"`
	CpuCount         pulumi.IntOutput       `pulumi:"cpuCount"`
	CreatedAt        pulumi.StringOutput    `pulumi:"createdAt"`
	Ipv6Address      pulumi.StringOutput    `pulumi:"ipv6Address"`
	IsStaticIp       pulumi.BoolOutput      `pulumi:"isStaticIp"`
	KeyPairName      pulumi.StringPtrOutput `pulumi:"keyPairName"`
	Name             pulumi.StringOutput    `pulumi:"name"`
	PrivateIpAddress pulumi.StringOutput    `pulumi:"privateIpAddress"`
	PublicIpAddress  pulumi.StringOutput    `pulumi:"publicIpAddress"`
	RamSize          pulumi.Float64Output   `pulumi:"ramSize"`
	Tags             pulumi.StringMapOutput `pulumi:"tags"`
	UserData         pulumi.StringPtrOutput `pulumi:"userData"`
	Username         pulumi.StringOutput    `pulumi:"username"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil || args.AvailabilityZone == nil {
		return nil, errors.New("missing required argument 'AvailabilityZone'")
	}
	if args == nil || args.BlueprintId == nil {
		return nil, errors.New("missing required argument 'BlueprintId'")
	}
	if args == nil || args.BundleId == nil {
		return nil, errors.New("missing required argument 'BundleId'")
	}
	if args == nil {
		args = &InstanceArgs{}
	}
	var resource Instance
	err := ctx.RegisterResource("aws:lightsail/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("aws:lightsail/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	Arn              *string           `pulumi:"arn"`
	AvailabilityZone *string           `pulumi:"availabilityZone"`
	BlueprintId      *string           `pulumi:"blueprintId"`
	BundleId         *string           `pulumi:"bundleId"`
	CpuCount         *int              `pulumi:"cpuCount"`
	CreatedAt        *string           `pulumi:"createdAt"`
	Ipv6Address      *string           `pulumi:"ipv6Address"`
	IsStaticIp       *bool             `pulumi:"isStaticIp"`
	KeyPairName      *string           `pulumi:"keyPairName"`
	Name             *string           `pulumi:"name"`
	PrivateIpAddress *string           `pulumi:"privateIpAddress"`
	PublicIpAddress  *string           `pulumi:"publicIpAddress"`
	RamSize          *float64          `pulumi:"ramSize"`
	Tags             map[string]string `pulumi:"tags"`
	UserData         *string           `pulumi:"userData"`
	Username         *string           `pulumi:"username"`
}

type InstanceState struct {
	Arn              pulumi.StringPtrInput
	AvailabilityZone pulumi.StringPtrInput
	BlueprintId      pulumi.StringPtrInput
	BundleId         pulumi.StringPtrInput
	CpuCount         pulumi.IntPtrInput
	CreatedAt        pulumi.StringPtrInput
	Ipv6Address      pulumi.StringPtrInput
	IsStaticIp       pulumi.BoolPtrInput
	KeyPairName      pulumi.StringPtrInput
	Name             pulumi.StringPtrInput
	PrivateIpAddress pulumi.StringPtrInput
	PublicIpAddress  pulumi.StringPtrInput
	RamSize          pulumi.Float64PtrInput
	Tags             pulumi.StringMapInput
	UserData         pulumi.StringPtrInput
	Username         pulumi.StringPtrInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	AvailabilityZone string            `pulumi:"availabilityZone"`
	BlueprintId      string            `pulumi:"blueprintId"`
	BundleId         string            `pulumi:"bundleId"`
	KeyPairName      *string           `pulumi:"keyPairName"`
	Name             *string           `pulumi:"name"`
	Tags             map[string]string `pulumi:"tags"`
	UserData         *string           `pulumi:"userData"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	AvailabilityZone pulumi.StringInput
	BlueprintId      pulumi.StringInput
	BundleId         pulumi.StringInput
	KeyPairName      pulumi.StringPtrInput
	Name             pulumi.StringPtrInput
	Tags             pulumi.StringMapInput
	UserData         pulumi.StringPtrInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}
