// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package macie

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type S3BucketAssociation struct {
	pulumi.CustomResourceState

	BucketName         pulumi.StringOutput                         `pulumi:"bucketName"`
	ClassificationType S3BucketAssociationClassificationTypeOutput `pulumi:"classificationType"`
	MemberAccountId    pulumi.StringPtrOutput                      `pulumi:"memberAccountId"`
	Prefix             pulumi.StringPtrOutput                      `pulumi:"prefix"`
}

// NewS3BucketAssociation registers a new resource with the given unique name, arguments, and options.
func NewS3BucketAssociation(ctx *pulumi.Context,
	name string, args *S3BucketAssociationArgs, opts ...pulumi.ResourceOption) (*S3BucketAssociation, error) {
	if args == nil || args.BucketName == nil {
		return nil, errors.New("missing required argument 'BucketName'")
	}
	if args == nil {
		args = &S3BucketAssociationArgs{}
	}
	var resource S3BucketAssociation
	err := ctx.RegisterResource("aws:macie/s3BucketAssociation:S3BucketAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetS3BucketAssociation gets an existing S3BucketAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetS3BucketAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *S3BucketAssociationState, opts ...pulumi.ResourceOption) (*S3BucketAssociation, error) {
	var resource S3BucketAssociation
	err := ctx.ReadResource("aws:macie/s3BucketAssociation:S3BucketAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering S3BucketAssociation resources.
type s3bucketAssociationState struct {
	BucketName         *string                                `pulumi:"bucketName"`
	ClassificationType *S3BucketAssociationClassificationType `pulumi:"classificationType"`
	MemberAccountId    *string                                `pulumi:"memberAccountId"`
	Prefix             *string                                `pulumi:"prefix"`
}

type S3BucketAssociationState struct {
	BucketName         pulumi.StringPtrInput
	ClassificationType S3BucketAssociationClassificationTypePtrInput
	MemberAccountId    pulumi.StringPtrInput
	Prefix             pulumi.StringPtrInput
}

func (S3BucketAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*s3bucketAssociationState)(nil)).Elem()
}

type s3bucketAssociationArgs struct {
	BucketName         string                                 `pulumi:"bucketName"`
	ClassificationType *S3BucketAssociationClassificationType `pulumi:"classificationType"`
	MemberAccountId    *string                                `pulumi:"memberAccountId"`
	Prefix             *string                                `pulumi:"prefix"`
}

// The set of arguments for constructing a S3BucketAssociation resource.
type S3BucketAssociationArgs struct {
	BucketName         pulumi.StringInput
	ClassificationType S3BucketAssociationClassificationTypePtrInput
	MemberAccountId    pulumi.StringPtrInput
	Prefix             pulumi.StringPtrInput
}

func (S3BucketAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*s3bucketAssociationArgs)(nil)).Elem()
}
