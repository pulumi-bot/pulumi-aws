// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package acm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type CertificateDomainValidationOption struct {
	// A domain name for which the certificate should be issued
	DomainName string `pulumi:"domainName"`
	// The name of the DNS record to create to validate the certificate
	ResourceRecordName string `pulumi:"resourceRecordName"`
	// The type of DNS record to create
	ResourceRecordType string `pulumi:"resourceRecordType"`
	// The value the DNS record needs to have
	ResourceRecordValue string `pulumi:"resourceRecordValue"`
}

type CertificateDomainValidationOptionInput interface {
	pulumi.Input

	ToCertificateDomainValidationOptionOutput() CertificateDomainValidationOptionOutput
	ToCertificateDomainValidationOptionOutputWithContext(context.Context) CertificateDomainValidationOptionOutput
}

type CertificateDomainValidationOptionArgs struct {
	// A domain name for which the certificate should be issued
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// The name of the DNS record to create to validate the certificate
	ResourceRecordName pulumi.StringInput `pulumi:"resourceRecordName"`
	// The type of DNS record to create
	ResourceRecordType pulumi.StringInput `pulumi:"resourceRecordType"`
	// The value the DNS record needs to have
	ResourceRecordValue pulumi.StringInput `pulumi:"resourceRecordValue"`
}

func (CertificateDomainValidationOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateDomainValidationOption)(nil)).Elem()
}

func (i CertificateDomainValidationOptionArgs) ToCertificateDomainValidationOptionOutput() CertificateDomainValidationOptionOutput {
	return i.ToCertificateDomainValidationOptionOutputWithContext(context.Background())
}

func (i CertificateDomainValidationOptionArgs) ToCertificateDomainValidationOptionOutputWithContext(ctx context.Context) CertificateDomainValidationOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateDomainValidationOptionOutput)
}

type CertificateDomainValidationOptionArrayInput interface {
	pulumi.Input

	ToCertificateDomainValidationOptionArrayOutput() CertificateDomainValidationOptionArrayOutput
	ToCertificateDomainValidationOptionArrayOutputWithContext(context.Context) CertificateDomainValidationOptionArrayOutput
}

type CertificateDomainValidationOptionArray []CertificateDomainValidationOptionInput

func (CertificateDomainValidationOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateDomainValidationOption)(nil)).Elem()
}

func (i CertificateDomainValidationOptionArray) ToCertificateDomainValidationOptionArrayOutput() CertificateDomainValidationOptionArrayOutput {
	return i.ToCertificateDomainValidationOptionArrayOutputWithContext(context.Background())
}

func (i CertificateDomainValidationOptionArray) ToCertificateDomainValidationOptionArrayOutputWithContext(ctx context.Context) CertificateDomainValidationOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateDomainValidationOptionArrayOutput)
}

type CertificateDomainValidationOptionOutput struct{ *pulumi.OutputState }

func (CertificateDomainValidationOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateDomainValidationOption)(nil)).Elem()
}

func (o CertificateDomainValidationOptionOutput) ToCertificateDomainValidationOptionOutput() CertificateDomainValidationOptionOutput {
	return o
}

func (o CertificateDomainValidationOptionOutput) ToCertificateDomainValidationOptionOutputWithContext(ctx context.Context) CertificateDomainValidationOptionOutput {
	return o
}

// A domain name for which the certificate should be issued
func (o CertificateDomainValidationOptionOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateDomainValidationOption) string { return v.DomainName }).(pulumi.StringOutput)
}

// The name of the DNS record to create to validate the certificate
func (o CertificateDomainValidationOptionOutput) ResourceRecordName() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateDomainValidationOption) string { return v.ResourceRecordName }).(pulumi.StringOutput)
}

// The type of DNS record to create
func (o CertificateDomainValidationOptionOutput) ResourceRecordType() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateDomainValidationOption) string { return v.ResourceRecordType }).(pulumi.StringOutput)
}

// The value the DNS record needs to have
func (o CertificateDomainValidationOptionOutput) ResourceRecordValue() pulumi.StringOutput {
	return o.ApplyT(func(v CertificateDomainValidationOption) string { return v.ResourceRecordValue }).(pulumi.StringOutput)
}

type CertificateDomainValidationOptionArrayOutput struct{ *pulumi.OutputState }

func (CertificateDomainValidationOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateDomainValidationOption)(nil)).Elem()
}

func (o CertificateDomainValidationOptionArrayOutput) ToCertificateDomainValidationOptionArrayOutput() CertificateDomainValidationOptionArrayOutput {
	return o
}

func (o CertificateDomainValidationOptionArrayOutput) ToCertificateDomainValidationOptionArrayOutputWithContext(ctx context.Context) CertificateDomainValidationOptionArrayOutput {
	return o
}

func (o CertificateDomainValidationOptionArrayOutput) Index(i pulumi.IntInput) CertificateDomainValidationOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateDomainValidationOption {
		return vs[0].([]CertificateDomainValidationOption)[vs[1].(int)]
	}).(CertificateDomainValidationOptionOutput)
}

type CertificateDomainValidationOptionState struct {
	// A domain name for which the certificate should be issued
	DomainName *string `pulumi:"domainName"`
	// The name of the DNS record to create to validate the certificate
	ResourceRecordName *string `pulumi:"resourceRecordName"`
	// The type of DNS record to create
	ResourceRecordType *string `pulumi:"resourceRecordType"`
	// The value the DNS record needs to have
	ResourceRecordValue *string `pulumi:"resourceRecordValue"`
}

type CertificateDomainValidationOptionStateInput interface {
	pulumi.Input

	ToCertificateDomainValidationOptionStateOutput() CertificateDomainValidationOptionStateOutput
	ToCertificateDomainValidationOptionStateOutputWithContext(context.Context) CertificateDomainValidationOptionStateOutput
}

type CertificateDomainValidationOptionStateArgs struct {
	// A domain name for which the certificate should be issued
	DomainName pulumi.StringPtrInput `pulumi:"domainName"`
	// The name of the DNS record to create to validate the certificate
	ResourceRecordName pulumi.StringPtrInput `pulumi:"resourceRecordName"`
	// The type of DNS record to create
	ResourceRecordType pulumi.StringPtrInput `pulumi:"resourceRecordType"`
	// The value the DNS record needs to have
	ResourceRecordValue pulumi.StringPtrInput `pulumi:"resourceRecordValue"`
}

func (CertificateDomainValidationOptionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateDomainValidationOptionState)(nil)).Elem()
}

func (i CertificateDomainValidationOptionStateArgs) ToCertificateDomainValidationOptionStateOutput() CertificateDomainValidationOptionStateOutput {
	return i.ToCertificateDomainValidationOptionStateOutputWithContext(context.Background())
}

func (i CertificateDomainValidationOptionStateArgs) ToCertificateDomainValidationOptionStateOutputWithContext(ctx context.Context) CertificateDomainValidationOptionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateDomainValidationOptionStateOutput)
}

type CertificateDomainValidationOptionStateArrayInput interface {
	pulumi.Input

	ToCertificateDomainValidationOptionStateArrayOutput() CertificateDomainValidationOptionStateArrayOutput
	ToCertificateDomainValidationOptionStateArrayOutputWithContext(context.Context) CertificateDomainValidationOptionStateArrayOutput
}

type CertificateDomainValidationOptionStateArray []CertificateDomainValidationOptionStateInput

func (CertificateDomainValidationOptionStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateDomainValidationOptionState)(nil)).Elem()
}

func (i CertificateDomainValidationOptionStateArray) ToCertificateDomainValidationOptionStateArrayOutput() CertificateDomainValidationOptionStateArrayOutput {
	return i.ToCertificateDomainValidationOptionStateArrayOutputWithContext(context.Background())
}

func (i CertificateDomainValidationOptionStateArray) ToCertificateDomainValidationOptionStateArrayOutputWithContext(ctx context.Context) CertificateDomainValidationOptionStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateDomainValidationOptionStateArrayOutput)
}

type CertificateDomainValidationOptionStateOutput struct{ *pulumi.OutputState }

func (CertificateDomainValidationOptionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateDomainValidationOptionState)(nil)).Elem()
}

func (o CertificateDomainValidationOptionStateOutput) ToCertificateDomainValidationOptionStateOutput() CertificateDomainValidationOptionStateOutput {
	return o
}

func (o CertificateDomainValidationOptionStateOutput) ToCertificateDomainValidationOptionStateOutputWithContext(ctx context.Context) CertificateDomainValidationOptionStateOutput {
	return o
}

// A domain name for which the certificate should be issued
func (o CertificateDomainValidationOptionStateOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDomainValidationOptionState) *string { return v.DomainName }).(pulumi.StringPtrOutput)
}

// The name of the DNS record to create to validate the certificate
func (o CertificateDomainValidationOptionStateOutput) ResourceRecordName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDomainValidationOptionState) *string { return v.ResourceRecordName }).(pulumi.StringPtrOutput)
}

// The type of DNS record to create
func (o CertificateDomainValidationOptionStateOutput) ResourceRecordType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDomainValidationOptionState) *string { return v.ResourceRecordType }).(pulumi.StringPtrOutput)
}

// The value the DNS record needs to have
func (o CertificateDomainValidationOptionStateOutput) ResourceRecordValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDomainValidationOptionState) *string { return v.ResourceRecordValue }).(pulumi.StringPtrOutput)
}

type CertificateDomainValidationOptionStateArrayOutput struct{ *pulumi.OutputState }

func (CertificateDomainValidationOptionStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateDomainValidationOptionState)(nil)).Elem()
}

func (o CertificateDomainValidationOptionStateArrayOutput) ToCertificateDomainValidationOptionStateArrayOutput() CertificateDomainValidationOptionStateArrayOutput {
	return o
}

func (o CertificateDomainValidationOptionStateArrayOutput) ToCertificateDomainValidationOptionStateArrayOutputWithContext(ctx context.Context) CertificateDomainValidationOptionStateArrayOutput {
	return o
}

func (o CertificateDomainValidationOptionStateArrayOutput) Index(i pulumi.IntInput) CertificateDomainValidationOptionStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateDomainValidationOptionState {
		return vs[0].([]CertificateDomainValidationOptionState)[vs[1].(int)]
	}).(CertificateDomainValidationOptionStateOutput)
}

type CertificateOptions struct {
	CertificateTransparencyLoggingPreference *string `pulumi:"certificateTransparencyLoggingPreference"`
}

type CertificateOptionsInput interface {
	pulumi.Input

	ToCertificateOptionsOutput() CertificateOptionsOutput
	ToCertificateOptionsOutputWithContext(context.Context) CertificateOptionsOutput
}

type CertificateOptionsArgs struct {
	CertificateTransparencyLoggingPreference pulumi.StringPtrInput `pulumi:"certificateTransparencyLoggingPreference"`
}

func (CertificateOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateOptions)(nil)).Elem()
}

func (i CertificateOptionsArgs) ToCertificateOptionsOutput() CertificateOptionsOutput {
	return i.ToCertificateOptionsOutputWithContext(context.Background())
}

func (i CertificateOptionsArgs) ToCertificateOptionsOutputWithContext(ctx context.Context) CertificateOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateOptionsOutput)
}

func (i CertificateOptionsArgs) ToCertificateOptionsPtrOutput() CertificateOptionsPtrOutput {
	return i.ToCertificateOptionsPtrOutputWithContext(context.Background())
}

func (i CertificateOptionsArgs) ToCertificateOptionsPtrOutputWithContext(ctx context.Context) CertificateOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateOptionsOutput).ToCertificateOptionsPtrOutputWithContext(ctx)
}

type CertificateOptionsPtrInput interface {
	pulumi.Input

	ToCertificateOptionsPtrOutput() CertificateOptionsPtrOutput
	ToCertificateOptionsPtrOutputWithContext(context.Context) CertificateOptionsPtrOutput
}

type certificateOptionsPtrType CertificateOptionsArgs

func CertificateOptionsPtr(v *CertificateOptionsArgs) CertificateOptionsPtrInput {
	return (*certificateOptionsPtrType)(v)
}

func (*certificateOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateOptions)(nil)).Elem()
}

func (i *certificateOptionsPtrType) ToCertificateOptionsPtrOutput() CertificateOptionsPtrOutput {
	return i.ToCertificateOptionsPtrOutputWithContext(context.Background())
}

func (i *certificateOptionsPtrType) ToCertificateOptionsPtrOutputWithContext(ctx context.Context) CertificateOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateOptionsPtrOutput)
}

type CertificateOptionsOutput struct{ *pulumi.OutputState }

func (CertificateOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateOptions)(nil)).Elem()
}

func (o CertificateOptionsOutput) ToCertificateOptionsOutput() CertificateOptionsOutput {
	return o
}

func (o CertificateOptionsOutput) ToCertificateOptionsOutputWithContext(ctx context.Context) CertificateOptionsOutput {
	return o
}

func (o CertificateOptionsOutput) ToCertificateOptionsPtrOutput() CertificateOptionsPtrOutput {
	return o.ToCertificateOptionsPtrOutputWithContext(context.Background())
}

func (o CertificateOptionsOutput) ToCertificateOptionsPtrOutputWithContext(ctx context.Context) CertificateOptionsPtrOutput {
	return o.ApplyT(func(v CertificateOptions) *CertificateOptions {
		return &v
	}).(CertificateOptionsPtrOutput)
}
func (o CertificateOptionsOutput) CertificateTransparencyLoggingPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOptions) *string { return v.CertificateTransparencyLoggingPreference }).(pulumi.StringPtrOutput)
}

type CertificateOptionsPtrOutput struct{ *pulumi.OutputState }

func (CertificateOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateOptions)(nil)).Elem()
}

func (o CertificateOptionsPtrOutput) ToCertificateOptionsPtrOutput() CertificateOptionsPtrOutput {
	return o
}

func (o CertificateOptionsPtrOutput) ToCertificateOptionsPtrOutputWithContext(ctx context.Context) CertificateOptionsPtrOutput {
	return o
}

func (o CertificateOptionsPtrOutput) Elem() CertificateOptionsOutput {
	return o.ApplyT(func(v *CertificateOptions) CertificateOptions { return *v }).(CertificateOptionsOutput)
}

func (o CertificateOptionsPtrOutput) CertificateTransparencyLoggingPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOptions) *string { return v.CertificateTransparencyLoggingPreference }).(pulumi.StringPtrOutput)
}

type CertificateOptionsArgs struct {
	CertificateTransparencyLoggingPreference *string `pulumi:"certificateTransparencyLoggingPreference"`
}

type CertificateOptionsArgsInput interface {
	pulumi.Input

	ToCertificateOptionsArgsOutput() CertificateOptionsArgsOutput
	ToCertificateOptionsArgsOutputWithContext(context.Context) CertificateOptionsArgsOutput
}

type CertificateOptionsArgsArgs struct {
	CertificateTransparencyLoggingPreference pulumi.StringPtrInput `pulumi:"certificateTransparencyLoggingPreference"`
}

func (CertificateOptionsArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateOptionsArgs)(nil)).Elem()
}

func (i CertificateOptionsArgsArgs) ToCertificateOptionsArgsOutput() CertificateOptionsArgsOutput {
	return i.ToCertificateOptionsArgsOutputWithContext(context.Background())
}

func (i CertificateOptionsArgsArgs) ToCertificateOptionsArgsOutputWithContext(ctx context.Context) CertificateOptionsArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateOptionsArgsOutput)
}

func (i CertificateOptionsArgsArgs) ToCertificateOptionsArgsPtrOutput() CertificateOptionsArgsPtrOutput {
	return i.ToCertificateOptionsArgsPtrOutputWithContext(context.Background())
}

func (i CertificateOptionsArgsArgs) ToCertificateOptionsArgsPtrOutputWithContext(ctx context.Context) CertificateOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateOptionsArgsOutput).ToCertificateOptionsArgsPtrOutputWithContext(ctx)
}

type CertificateOptionsArgsPtrInput interface {
	pulumi.Input

	ToCertificateOptionsArgsPtrOutput() CertificateOptionsArgsPtrOutput
	ToCertificateOptionsArgsPtrOutputWithContext(context.Context) CertificateOptionsArgsPtrOutput
}

type certificateOptionsArgsPtrType CertificateOptionsArgsArgs

func CertificateOptionsArgsPtr(v *CertificateOptionsArgsArgs) CertificateOptionsArgsPtrInput {
	return (*certificateOptionsArgsPtrType)(v)
}

func (*certificateOptionsArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateOptionsArgs)(nil)).Elem()
}

func (i *certificateOptionsArgsPtrType) ToCertificateOptionsArgsPtrOutput() CertificateOptionsArgsPtrOutput {
	return i.ToCertificateOptionsArgsPtrOutputWithContext(context.Background())
}

func (i *certificateOptionsArgsPtrType) ToCertificateOptionsArgsPtrOutputWithContext(ctx context.Context) CertificateOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateOptionsArgsPtrOutput)
}

type CertificateOptionsArgsOutput struct{ *pulumi.OutputState }

func (CertificateOptionsArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateOptionsArgs)(nil)).Elem()
}

func (o CertificateOptionsArgsOutput) ToCertificateOptionsArgsOutput() CertificateOptionsArgsOutput {
	return o
}

func (o CertificateOptionsArgsOutput) ToCertificateOptionsArgsOutputWithContext(ctx context.Context) CertificateOptionsArgsOutput {
	return o
}

func (o CertificateOptionsArgsOutput) ToCertificateOptionsArgsPtrOutput() CertificateOptionsArgsPtrOutput {
	return o.ToCertificateOptionsArgsPtrOutputWithContext(context.Background())
}

func (o CertificateOptionsArgsOutput) ToCertificateOptionsArgsPtrOutputWithContext(ctx context.Context) CertificateOptionsArgsPtrOutput {
	return o.ApplyT(func(v CertificateOptionsArgs) *CertificateOptionsArgs {
		return &v
	}).(CertificateOptionsArgsPtrOutput)
}
func (o CertificateOptionsArgsOutput) CertificateTransparencyLoggingPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOptionsArgs) *string { return v.CertificateTransparencyLoggingPreference }).(pulumi.StringPtrOutput)
}

type CertificateOptionsArgsPtrOutput struct{ *pulumi.OutputState }

func (CertificateOptionsArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateOptionsArgs)(nil)).Elem()
}

func (o CertificateOptionsArgsPtrOutput) ToCertificateOptionsArgsPtrOutput() CertificateOptionsArgsPtrOutput {
	return o
}

func (o CertificateOptionsArgsPtrOutput) ToCertificateOptionsArgsPtrOutputWithContext(ctx context.Context) CertificateOptionsArgsPtrOutput {
	return o
}

func (o CertificateOptionsArgsPtrOutput) Elem() CertificateOptionsArgsOutput {
	return o.ApplyT(func(v *CertificateOptionsArgs) CertificateOptionsArgs { return *v }).(CertificateOptionsArgsOutput)
}

func (o CertificateOptionsArgsPtrOutput) CertificateTransparencyLoggingPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOptionsArgs) *string { return v.CertificateTransparencyLoggingPreference }).(pulumi.StringPtrOutput)
}

type CertificateOptionsState struct {
	CertificateTransparencyLoggingPreference *string `pulumi:"certificateTransparencyLoggingPreference"`
}

type CertificateOptionsStateInput interface {
	pulumi.Input

	ToCertificateOptionsStateOutput() CertificateOptionsStateOutput
	ToCertificateOptionsStateOutputWithContext(context.Context) CertificateOptionsStateOutput
}

type CertificateOptionsStateArgs struct {
	CertificateTransparencyLoggingPreference pulumi.StringPtrInput `pulumi:"certificateTransparencyLoggingPreference"`
}

func (CertificateOptionsStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateOptionsState)(nil)).Elem()
}

func (i CertificateOptionsStateArgs) ToCertificateOptionsStateOutput() CertificateOptionsStateOutput {
	return i.ToCertificateOptionsStateOutputWithContext(context.Background())
}

func (i CertificateOptionsStateArgs) ToCertificateOptionsStateOutputWithContext(ctx context.Context) CertificateOptionsStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateOptionsStateOutput)
}

type CertificateOptionsStateOutput struct{ *pulumi.OutputState }

func (CertificateOptionsStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateOptionsState)(nil)).Elem()
}

func (o CertificateOptionsStateOutput) ToCertificateOptionsStateOutput() CertificateOptionsStateOutput {
	return o
}

func (o CertificateOptionsStateOutput) ToCertificateOptionsStateOutputWithContext(ctx context.Context) CertificateOptionsStateOutput {
	return o
}

func (o CertificateOptionsStateOutput) CertificateTransparencyLoggingPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateOptionsState) *string { return v.CertificateTransparencyLoggingPreference }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(CertificateDomainValidationOptionOutput{})
	pulumi.RegisterOutputType(CertificateDomainValidationOptionArrayOutput{})
	pulumi.RegisterOutputType(CertificateDomainValidationOptionStateOutput{})
	pulumi.RegisterOutputType(CertificateDomainValidationOptionStateArrayOutput{})
	pulumi.RegisterOutputType(CertificateOptionsOutput{})
	pulumi.RegisterOutputType(CertificateOptionsPtrOutput{})
	pulumi.RegisterOutputType(CertificateOptionsArgsOutput{})
	pulumi.RegisterOutputType(CertificateOptionsArgsPtrOutput{})
	pulumi.RegisterOutputType(CertificateOptionsStateOutput{})
}
