// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudtrail

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Trail struct {
	pulumi.CustomResourceState

	Arn                        pulumi.StringOutput           `pulumi:"arn"`
	CloudWatchLogsGroupArn     pulumi.StringPtrOutput        `pulumi:"cloudWatchLogsGroupArn"`
	CloudWatchLogsRoleArn      pulumi.StringPtrOutput        `pulumi:"cloudWatchLogsRoleArn"`
	EnableLogFileValidation    pulumi.BoolPtrOutput          `pulumi:"enableLogFileValidation"`
	EnableLogging              pulumi.BoolPtrOutput          `pulumi:"enableLogging"`
	EventSelectors             TrailEventSelectorArrayOutput `pulumi:"eventSelectors"`
	HomeRegion                 pulumi.StringOutput           `pulumi:"homeRegion"`
	IncludeGlobalServiceEvents pulumi.BoolPtrOutput          `pulumi:"includeGlobalServiceEvents"`
	IsMultiRegionTrail         pulumi.BoolPtrOutput          `pulumi:"isMultiRegionTrail"`
	IsOrganizationTrail        pulumi.BoolPtrOutput          `pulumi:"isOrganizationTrail"`
	KmsKeyId                   pulumi.StringPtrOutput        `pulumi:"kmsKeyId"`
	Name                       pulumi.StringOutput           `pulumi:"name"`
	S3BucketName               pulumi.StringOutput           `pulumi:"s3BucketName"`
	S3KeyPrefix                pulumi.StringPtrOutput        `pulumi:"s3KeyPrefix"`
	SnsTopicName               pulumi.StringPtrOutput        `pulumi:"snsTopicName"`
	Tags                       pulumi.StringMapOutput        `pulumi:"tags"`
}

// NewTrail registers a new resource with the given unique name, arguments, and options.
func NewTrail(ctx *pulumi.Context,
	name string, args *TrailArgs, opts ...pulumi.ResourceOption) (*Trail, error) {
	if args == nil || args.S3BucketName == nil {
		return nil, errors.New("missing required argument 'S3BucketName'")
	}
	if args == nil {
		args = &TrailArgs{}
	}
	var resource Trail
	err := ctx.RegisterResource("aws:cloudtrail/trail:Trail", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTrail gets an existing Trail resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTrail(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TrailState, opts ...pulumi.ResourceOption) (*Trail, error) {
	var resource Trail
	err := ctx.ReadResource("aws:cloudtrail/trail:Trail", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Trail resources.
type trailState struct {
	Arn                        *string              `pulumi:"arn"`
	CloudWatchLogsGroupArn     *string              `pulumi:"cloudWatchLogsGroupArn"`
	CloudWatchLogsRoleArn      *string              `pulumi:"cloudWatchLogsRoleArn"`
	EnableLogFileValidation    *bool                `pulumi:"enableLogFileValidation"`
	EnableLogging              *bool                `pulumi:"enableLogging"`
	EventSelectors             []TrailEventSelector `pulumi:"eventSelectors"`
	HomeRegion                 *string              `pulumi:"homeRegion"`
	IncludeGlobalServiceEvents *bool                `pulumi:"includeGlobalServiceEvents"`
	IsMultiRegionTrail         *bool                `pulumi:"isMultiRegionTrail"`
	IsOrganizationTrail        *bool                `pulumi:"isOrganizationTrail"`
	KmsKeyId                   *string              `pulumi:"kmsKeyId"`
	Name                       *string              `pulumi:"name"`
	S3BucketName               *string              `pulumi:"s3BucketName"`
	S3KeyPrefix                *string              `pulumi:"s3KeyPrefix"`
	SnsTopicName               *string              `pulumi:"snsTopicName"`
	Tags                       map[string]string    `pulumi:"tags"`
}

type TrailState struct {
	Arn                        pulumi.StringPtrInput
	CloudWatchLogsGroupArn     pulumi.StringPtrInput
	CloudWatchLogsRoleArn      pulumi.StringPtrInput
	EnableLogFileValidation    pulumi.BoolPtrInput
	EnableLogging              pulumi.BoolPtrInput
	EventSelectors             TrailEventSelectorArrayInput
	HomeRegion                 pulumi.StringPtrInput
	IncludeGlobalServiceEvents pulumi.BoolPtrInput
	IsMultiRegionTrail         pulumi.BoolPtrInput
	IsOrganizationTrail        pulumi.BoolPtrInput
	KmsKeyId                   pulumi.StringPtrInput
	Name                       pulumi.StringPtrInput
	S3BucketName               pulumi.StringPtrInput
	S3KeyPrefix                pulumi.StringPtrInput
	SnsTopicName               pulumi.StringPtrInput
	Tags                       pulumi.StringMapInput
}

func (TrailState) ElementType() reflect.Type {
	return reflect.TypeOf((*trailState)(nil)).Elem()
}

type trailArgs struct {
	CloudWatchLogsGroupArn     *string              `pulumi:"cloudWatchLogsGroupArn"`
	CloudWatchLogsRoleArn      *string              `pulumi:"cloudWatchLogsRoleArn"`
	EnableLogFileValidation    *bool                `pulumi:"enableLogFileValidation"`
	EnableLogging              *bool                `pulumi:"enableLogging"`
	EventSelectors             []TrailEventSelector `pulumi:"eventSelectors"`
	IncludeGlobalServiceEvents *bool                `pulumi:"includeGlobalServiceEvents"`
	IsMultiRegionTrail         *bool                `pulumi:"isMultiRegionTrail"`
	IsOrganizationTrail        *bool                `pulumi:"isOrganizationTrail"`
	KmsKeyId                   *string              `pulumi:"kmsKeyId"`
	Name                       *string              `pulumi:"name"`
	S3BucketName               string               `pulumi:"s3BucketName"`
	S3KeyPrefix                *string              `pulumi:"s3KeyPrefix"`
	SnsTopicName               *string              `pulumi:"snsTopicName"`
	Tags                       map[string]string    `pulumi:"tags"`
}

// The set of arguments for constructing a Trail resource.
type TrailArgs struct {
	CloudWatchLogsGroupArn     pulumi.StringPtrInput
	CloudWatchLogsRoleArn      pulumi.StringPtrInput
	EnableLogFileValidation    pulumi.BoolPtrInput
	EnableLogging              pulumi.BoolPtrInput
	EventSelectors             TrailEventSelectorArrayInput
	IncludeGlobalServiceEvents pulumi.BoolPtrInput
	IsMultiRegionTrail         pulumi.BoolPtrInput
	IsOrganizationTrail        pulumi.BoolPtrInput
	KmsKeyId                   pulumi.StringPtrInput
	Name                       pulumi.StringPtrInput
	S3BucketName               pulumi.StringInput
	S3KeyPrefix                pulumi.StringPtrInput
	SnsTopicName               pulumi.StringPtrInput
	Tags                       pulumi.StringMapInput
}

func (TrailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*trailArgs)(nil)).Elem()
}
