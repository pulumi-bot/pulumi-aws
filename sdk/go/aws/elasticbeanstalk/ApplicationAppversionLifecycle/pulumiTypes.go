// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ApplicationAppversionLifecycle

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ApplicationAppversionLifecycle struct {
	// Set to `true` to delete a version's source bundle from S3 when the application version is deleted.
	DeleteSourceFromS3 *bool `pulumi:"deleteSourceFromS3"`
	// The number of days to retain an application version.
	MaxAgeInDays *int `pulumi:"maxAgeInDays"`
	// The maximum number of application versions to retain.
	MaxCount *int `pulumi:"maxCount"`
	// The ARN of an IAM service role under which the application version is deleted.  Elastic Beanstalk must have permission to assume this role.
	ServiceRole string `pulumi:"serviceRole"`
}

type ApplicationAppversionLifecycleInput interface {
	pulumi.Input

	ToApplicationAppversionLifecycleOutput() ApplicationAppversionLifecycleOutput
	ToApplicationAppversionLifecycleOutputWithContext(context.Context) ApplicationAppversionLifecycleOutput
}

type ApplicationAppversionLifecycleArgs struct {
	// Set to `true` to delete a version's source bundle from S3 when the application version is deleted.
	DeleteSourceFromS3 pulumi.BoolPtrInput `pulumi:"deleteSourceFromS3"`
	// The number of days to retain an application version.
	MaxAgeInDays pulumi.IntPtrInput `pulumi:"maxAgeInDays"`
	// The maximum number of application versions to retain.
	MaxCount pulumi.IntPtrInput `pulumi:"maxCount"`
	// The ARN of an IAM service role under which the application version is deleted.  Elastic Beanstalk must have permission to assume this role.
	ServiceRole pulumi.StringInput `pulumi:"serviceRole"`
}

func (ApplicationAppversionLifecycleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationAppversionLifecycle)(nil)).Elem()
}

func (i ApplicationAppversionLifecycleArgs) ToApplicationAppversionLifecycleOutput() ApplicationAppversionLifecycleOutput {
	return i.ToApplicationAppversionLifecycleOutputWithContext(context.Background())
}

func (i ApplicationAppversionLifecycleArgs) ToApplicationAppversionLifecycleOutputWithContext(ctx context.Context) ApplicationAppversionLifecycleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAppversionLifecycleOutput)
}

func (i ApplicationAppversionLifecycleArgs) ToApplicationAppversionLifecyclePtrOutput() ApplicationAppversionLifecyclePtrOutput {
	return i.ToApplicationAppversionLifecyclePtrOutputWithContext(context.Background())
}

func (i ApplicationAppversionLifecycleArgs) ToApplicationAppversionLifecyclePtrOutputWithContext(ctx context.Context) ApplicationAppversionLifecyclePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAppversionLifecycleOutput).ToApplicationAppversionLifecyclePtrOutputWithContext(ctx)
}

type ApplicationAppversionLifecyclePtrInput interface {
	pulumi.Input

	ToApplicationAppversionLifecyclePtrOutput() ApplicationAppversionLifecyclePtrOutput
	ToApplicationAppversionLifecyclePtrOutputWithContext(context.Context) ApplicationAppversionLifecyclePtrOutput
}

type applicationAppversionLifecyclePtrType ApplicationAppversionLifecycleArgs

func ApplicationAppversionLifecyclePtr(v *ApplicationAppversionLifecycleArgs) ApplicationAppversionLifecyclePtrInput {	return (*applicationAppversionLifecyclePtrType)(v)
}

func (*applicationAppversionLifecyclePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationAppversionLifecycle)(nil)).Elem()
}

func (i *applicationAppversionLifecyclePtrType) ToApplicationAppversionLifecyclePtrOutput() ApplicationAppversionLifecyclePtrOutput {
	return i.ToApplicationAppversionLifecyclePtrOutputWithContext(context.Background())
}

func (i *applicationAppversionLifecyclePtrType) ToApplicationAppversionLifecyclePtrOutputWithContext(ctx context.Context) ApplicationAppversionLifecyclePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAppversionLifecyclePtrOutput)
}

type ApplicationAppversionLifecycleOutput struct { *pulumi.OutputState }

func (ApplicationAppversionLifecycleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationAppversionLifecycle)(nil)).Elem()
}

func (o ApplicationAppversionLifecycleOutput) ToApplicationAppversionLifecycleOutput() ApplicationAppversionLifecycleOutput {
	return o
}

func (o ApplicationAppversionLifecycleOutput) ToApplicationAppversionLifecycleOutputWithContext(ctx context.Context) ApplicationAppversionLifecycleOutput {
	return o
}

func (o ApplicationAppversionLifecycleOutput) ToApplicationAppversionLifecyclePtrOutput() ApplicationAppversionLifecyclePtrOutput {
	return o.ToApplicationAppversionLifecyclePtrOutputWithContext(context.Background())
}

func (o ApplicationAppversionLifecycleOutput) ToApplicationAppversionLifecyclePtrOutputWithContext(ctx context.Context) ApplicationAppversionLifecyclePtrOutput {
	return o.ApplyT(func(v ApplicationAppversionLifecycle) *ApplicationAppversionLifecycle {
		return &v
	}).(ApplicationAppversionLifecyclePtrOutput)
}
// Set to `true` to delete a version's source bundle from S3 when the application version is deleted.
func (o ApplicationAppversionLifecycleOutput) DeleteSourceFromS3() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ApplicationAppversionLifecycle) *bool { return v.DeleteSourceFromS3 }).(pulumi.BoolPtrOutput)
}

// The number of days to retain an application version.
func (o ApplicationAppversionLifecycleOutput) MaxAgeInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ApplicationAppversionLifecycle) *int { return v.MaxAgeInDays }).(pulumi.IntPtrOutput)
}

// The maximum number of application versions to retain.
func (o ApplicationAppversionLifecycleOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ApplicationAppversionLifecycle) *int { return v.MaxCount }).(pulumi.IntPtrOutput)
}

// The ARN of an IAM service role under which the application version is deleted.  Elastic Beanstalk must have permission to assume this role.
func (o ApplicationAppversionLifecycleOutput) ServiceRole() pulumi.StringOutput {
	return o.ApplyT(func (v ApplicationAppversionLifecycle) string { return v.ServiceRole }).(pulumi.StringOutput)
}

type ApplicationAppversionLifecyclePtrOutput struct { *pulumi.OutputState}

func (ApplicationAppversionLifecyclePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationAppversionLifecycle)(nil)).Elem()
}

func (o ApplicationAppversionLifecyclePtrOutput) ToApplicationAppversionLifecyclePtrOutput() ApplicationAppversionLifecyclePtrOutput {
	return o
}

func (o ApplicationAppversionLifecyclePtrOutput) ToApplicationAppversionLifecyclePtrOutputWithContext(ctx context.Context) ApplicationAppversionLifecyclePtrOutput {
	return o
}

func (o ApplicationAppversionLifecyclePtrOutput) Elem() ApplicationAppversionLifecycleOutput {
	return o.ApplyT(func (v *ApplicationAppversionLifecycle) ApplicationAppversionLifecycle { return *v }).(ApplicationAppversionLifecycleOutput)
}

// Set to `true` to delete a version's source bundle from S3 when the application version is deleted.
func (o ApplicationAppversionLifecyclePtrOutput) DeleteSourceFromS3() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ApplicationAppversionLifecycle) *bool { return v.DeleteSourceFromS3 }).(pulumi.BoolPtrOutput)
}

// The number of days to retain an application version.
func (o ApplicationAppversionLifecyclePtrOutput) MaxAgeInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ApplicationAppversionLifecycle) *int { return v.MaxAgeInDays }).(pulumi.IntPtrOutput)
}

// The maximum number of application versions to retain.
func (o ApplicationAppversionLifecyclePtrOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ApplicationAppversionLifecycle) *int { return v.MaxCount }).(pulumi.IntPtrOutput)
}

// The ARN of an IAM service role under which the application version is deleted.  Elastic Beanstalk must have permission to assume this role.
func (o ApplicationAppversionLifecyclePtrOutput) ServiceRole() pulumi.StringOutput {
	return o.ApplyT(func (v ApplicationAppversionLifecycle) string { return v.ServiceRole }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ApplicationAppversionLifecycleOutput{})
	pulumi.RegisterOutputType(ApplicationAppversionLifecyclePtrOutput{})
}
