// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package appmesh

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type VirtualRouter struct {
	pulumi.CustomResourceState

	Arn             pulumi.StringOutput     `pulumi:"arn"`
	CreatedDate     pulumi.StringOutput     `pulumi:"createdDate"`
	LastUpdatedDate pulumi.StringOutput     `pulumi:"lastUpdatedDate"`
	MeshName        pulumi.StringOutput     `pulumi:"meshName"`
	Name            pulumi.StringOutput     `pulumi:"name"`
	Spec            VirtualRouterSpecOutput `pulumi:"spec"`
	Tags            pulumi.StringMapOutput  `pulumi:"tags"`
}

// NewVirtualRouter registers a new resource with the given unique name, arguments, and options.
func NewVirtualRouter(ctx *pulumi.Context,
	name string, args *VirtualRouterArgs, opts ...pulumi.ResourceOption) (*VirtualRouter, error) {
	if args == nil || args.MeshName == nil {
		return nil, errors.New("missing required argument 'MeshName'")
	}
	if args == nil || args.Spec == nil {
		return nil, errors.New("missing required argument 'Spec'")
	}
	if args == nil {
		args = &VirtualRouterArgs{}
	}
	var resource VirtualRouter
	err := ctx.RegisterResource("aws:appmesh/virtualRouter:VirtualRouter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVirtualRouter gets an existing VirtualRouter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVirtualRouter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VirtualRouterState, opts ...pulumi.ResourceOption) (*VirtualRouter, error) {
	var resource VirtualRouter
	err := ctx.ReadResource("aws:appmesh/virtualRouter:VirtualRouter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VirtualRouter resources.
type virtualRouterState struct {
	Arn             *string            `pulumi:"arn"`
	CreatedDate     *string            `pulumi:"createdDate"`
	LastUpdatedDate *string            `pulumi:"lastUpdatedDate"`
	MeshName        *string            `pulumi:"meshName"`
	Name            *string            `pulumi:"name"`
	Spec            *VirtualRouterSpec `pulumi:"spec"`
	Tags            map[string]string  `pulumi:"tags"`
}

type VirtualRouterState struct {
	Arn             pulumi.StringPtrInput
	CreatedDate     pulumi.StringPtrInput
	LastUpdatedDate pulumi.StringPtrInput
	MeshName        pulumi.StringPtrInput
	Name            pulumi.StringPtrInput
	Spec            VirtualRouterSpecPtrInput
	Tags            pulumi.StringMapInput
}

func (VirtualRouterState) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualRouterState)(nil)).Elem()
}

type virtualRouterArgs struct {
	MeshName string            `pulumi:"meshName"`
	Name     *string           `pulumi:"name"`
	Spec     VirtualRouterSpec `pulumi:"spec"`
	Tags     map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a VirtualRouter resource.
type VirtualRouterArgs struct {
	MeshName pulumi.StringInput
	Name     pulumi.StringPtrInput
	Spec     VirtualRouterSpecInput
	Tags     pulumi.StringMapInput
}

func (VirtualRouterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualRouterArgs)(nil)).Elem()
}
