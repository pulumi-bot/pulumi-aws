// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package VirtualNodeSpec

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-aws/appmesh/VirtualNodeSpecBackend"
	"https:/github.com/pulumi/pulumi-aws/appmesh/VirtualNodeSpecBackendVirtualService"
	"https:/github.com/pulumi/pulumi-aws/appmesh/VirtualNodeSpecListener"
	"https:/github.com/pulumi/pulumi-aws/appmesh/VirtualNodeSpecListenerHealthCheck"
	"https:/github.com/pulumi/pulumi-aws/appmesh/VirtualNodeSpecListenerPortMapping"
	"https:/github.com/pulumi/pulumi-aws/appmesh/VirtualNodeSpecLogging"
	"https:/github.com/pulumi/pulumi-aws/appmesh/VirtualNodeSpecLoggingAccessLog"
	"https:/github.com/pulumi/pulumi-aws/appmesh/VirtualNodeSpecLoggingAccessLogFile"
	"https:/github.com/pulumi/pulumi-aws/appmesh/VirtualNodeSpecServiceDiscovery"
	"https:/github.com/pulumi/pulumi-aws/appmesh/VirtualNodeSpecServiceDiscoveryAwsCloudMap"
	"https:/github.com/pulumi/pulumi-aws/appmesh/VirtualNodeSpecServiceDiscoveryDns"
)

type VirtualNodeSpec struct {
	// The backends to which the virtual node is expected to send outbound traffic.
	Backends []appmeshVirtualNodeSpecBackend.VirtualNodeSpecBackend `pulumi:"backends"`
	// The listeners from which the virtual node is expected to receive inbound traffic.
	Listener *appmeshVirtualNodeSpecListener.VirtualNodeSpecListener `pulumi:"listener"`
	// The inbound and outbound access logging information for the virtual node.
	Logging *appmeshVirtualNodeSpecLogging.VirtualNodeSpecLogging `pulumi:"logging"`
	// The service discovery information for the virtual node.
	ServiceDiscovery *appmeshVirtualNodeSpecServiceDiscovery.VirtualNodeSpecServiceDiscovery `pulumi:"serviceDiscovery"`
}

type VirtualNodeSpecInput interface {
	pulumi.Input

	ToVirtualNodeSpecOutput() VirtualNodeSpecOutput
	ToVirtualNodeSpecOutputWithContext(context.Context) VirtualNodeSpecOutput
}

type VirtualNodeSpecArgs struct {
	// The backends to which the virtual node is expected to send outbound traffic.
	Backends appmeshVirtualNodeSpecBackend.VirtualNodeSpecBackendArrayInput `pulumi:"backends"`
	// The listeners from which the virtual node is expected to receive inbound traffic.
	Listener appmeshVirtualNodeSpecListener.VirtualNodeSpecListenerPtrInput `pulumi:"listener"`
	// The inbound and outbound access logging information for the virtual node.
	Logging appmeshVirtualNodeSpecLogging.VirtualNodeSpecLoggingPtrInput `pulumi:"logging"`
	// The service discovery information for the virtual node.
	ServiceDiscovery appmeshVirtualNodeSpecServiceDiscovery.VirtualNodeSpecServiceDiscoveryPtrInput `pulumi:"serviceDiscovery"`
}

func (VirtualNodeSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpec)(nil)).Elem()
}

func (i VirtualNodeSpecArgs) ToVirtualNodeSpecOutput() VirtualNodeSpecOutput {
	return i.ToVirtualNodeSpecOutputWithContext(context.Background())
}

func (i VirtualNodeSpecArgs) ToVirtualNodeSpecOutputWithContext(ctx context.Context) VirtualNodeSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecOutput)
}

func (i VirtualNodeSpecArgs) ToVirtualNodeSpecPtrOutput() VirtualNodeSpecPtrOutput {
	return i.ToVirtualNodeSpecPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecArgs) ToVirtualNodeSpecPtrOutputWithContext(ctx context.Context) VirtualNodeSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecOutput).ToVirtualNodeSpecPtrOutputWithContext(ctx)
}

type VirtualNodeSpecPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecPtrOutput() VirtualNodeSpecPtrOutput
	ToVirtualNodeSpecPtrOutputWithContext(context.Context) VirtualNodeSpecPtrOutput
}

type virtualNodeSpecPtrType VirtualNodeSpecArgs

func VirtualNodeSpecPtr(v *VirtualNodeSpecArgs) VirtualNodeSpecPtrInput {	return (*virtualNodeSpecPtrType)(v)
}

func (*virtualNodeSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpec)(nil)).Elem()
}

func (i *virtualNodeSpecPtrType) ToVirtualNodeSpecPtrOutput() VirtualNodeSpecPtrOutput {
	return i.ToVirtualNodeSpecPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecPtrType) ToVirtualNodeSpecPtrOutputWithContext(ctx context.Context) VirtualNodeSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecPtrOutput)
}

type VirtualNodeSpecOutput struct { *pulumi.OutputState }

func (VirtualNodeSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpec)(nil)).Elem()
}

func (o VirtualNodeSpecOutput) ToVirtualNodeSpecOutput() VirtualNodeSpecOutput {
	return o
}

func (o VirtualNodeSpecOutput) ToVirtualNodeSpecOutputWithContext(ctx context.Context) VirtualNodeSpecOutput {
	return o
}

func (o VirtualNodeSpecOutput) ToVirtualNodeSpecPtrOutput() VirtualNodeSpecPtrOutput {
	return o.ToVirtualNodeSpecPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecOutput) ToVirtualNodeSpecPtrOutputWithContext(ctx context.Context) VirtualNodeSpecPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpec) *VirtualNodeSpec {
		return &v
	}).(VirtualNodeSpecPtrOutput)
}
// The backends to which the virtual node is expected to send outbound traffic.
func (o VirtualNodeSpecOutput) Backends() appmeshVirtualNodeSpecBackend.VirtualNodeSpecBackendArrayOutput {
	return o.ApplyT(func (v VirtualNodeSpec) []appmeshVirtualNodeSpecBackend.VirtualNodeSpecBackend { return v.Backends }).(appmeshVirtualNodeSpecBackend.VirtualNodeSpecBackendArrayOutput)
}

// The listeners from which the virtual node is expected to receive inbound traffic.
func (o VirtualNodeSpecOutput) Listener() appmeshVirtualNodeSpecListener.VirtualNodeSpecListenerPtrOutput {
	return o.ApplyT(func (v VirtualNodeSpec) *appmeshVirtualNodeSpecListener.VirtualNodeSpecListener { return v.Listener }).(appmeshVirtualNodeSpecListener.VirtualNodeSpecListenerPtrOutput)
}

// The inbound and outbound access logging information for the virtual node.
func (o VirtualNodeSpecOutput) Logging() appmeshVirtualNodeSpecLogging.VirtualNodeSpecLoggingPtrOutput {
	return o.ApplyT(func (v VirtualNodeSpec) *appmeshVirtualNodeSpecLogging.VirtualNodeSpecLogging { return v.Logging }).(appmeshVirtualNodeSpecLogging.VirtualNodeSpecLoggingPtrOutput)
}

// The service discovery information for the virtual node.
func (o VirtualNodeSpecOutput) ServiceDiscovery() appmeshVirtualNodeSpecServiceDiscovery.VirtualNodeSpecServiceDiscoveryPtrOutput {
	return o.ApplyT(func (v VirtualNodeSpec) *appmeshVirtualNodeSpecServiceDiscovery.VirtualNodeSpecServiceDiscovery { return v.ServiceDiscovery }).(appmeshVirtualNodeSpecServiceDiscovery.VirtualNodeSpecServiceDiscoveryPtrOutput)
}

type VirtualNodeSpecPtrOutput struct { *pulumi.OutputState}

func (VirtualNodeSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpec)(nil)).Elem()
}

func (o VirtualNodeSpecPtrOutput) ToVirtualNodeSpecPtrOutput() VirtualNodeSpecPtrOutput {
	return o
}

func (o VirtualNodeSpecPtrOutput) ToVirtualNodeSpecPtrOutputWithContext(ctx context.Context) VirtualNodeSpecPtrOutput {
	return o
}

func (o VirtualNodeSpecPtrOutput) Elem() VirtualNodeSpecOutput {
	return o.ApplyT(func (v *VirtualNodeSpec) VirtualNodeSpec { return *v }).(VirtualNodeSpecOutput)
}

// The backends to which the virtual node is expected to send outbound traffic.
func (o VirtualNodeSpecPtrOutput) Backends() appmeshVirtualNodeSpecBackend.VirtualNodeSpecBackendArrayOutput {
	return o.ApplyT(func (v VirtualNodeSpec) []appmeshVirtualNodeSpecBackend.VirtualNodeSpecBackend { return v.Backends }).(appmeshVirtualNodeSpecBackend.VirtualNodeSpecBackendArrayOutput)
}

// The listeners from which the virtual node is expected to receive inbound traffic.
func (o VirtualNodeSpecPtrOutput) Listener() appmeshVirtualNodeSpecListener.VirtualNodeSpecListenerPtrOutput {
	return o.ApplyT(func (v VirtualNodeSpec) *appmeshVirtualNodeSpecListener.VirtualNodeSpecListener { return v.Listener }).(appmeshVirtualNodeSpecListener.VirtualNodeSpecListenerPtrOutput)
}

// The inbound and outbound access logging information for the virtual node.
func (o VirtualNodeSpecPtrOutput) Logging() appmeshVirtualNodeSpecLogging.VirtualNodeSpecLoggingPtrOutput {
	return o.ApplyT(func (v VirtualNodeSpec) *appmeshVirtualNodeSpecLogging.VirtualNodeSpecLogging { return v.Logging }).(appmeshVirtualNodeSpecLogging.VirtualNodeSpecLoggingPtrOutput)
}

// The service discovery information for the virtual node.
func (o VirtualNodeSpecPtrOutput) ServiceDiscovery() appmeshVirtualNodeSpecServiceDiscovery.VirtualNodeSpecServiceDiscoveryPtrOutput {
	return o.ApplyT(func (v VirtualNodeSpec) *appmeshVirtualNodeSpecServiceDiscovery.VirtualNodeSpecServiceDiscovery { return v.ServiceDiscovery }).(appmeshVirtualNodeSpecServiceDiscovery.VirtualNodeSpecServiceDiscoveryPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(VirtualNodeSpecOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecPtrOutput{})
}
