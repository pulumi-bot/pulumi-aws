// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package appmesh

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Mesh struct {
	pulumi.CustomResourceState

	Arn             pulumi.StringOutput    `pulumi:"arn"`
	CreatedDate     pulumi.StringOutput    `pulumi:"createdDate"`
	LastUpdatedDate pulumi.StringOutput    `pulumi:"lastUpdatedDate"`
	Name            pulumi.StringOutput    `pulumi:"name"`
	Spec            MeshSpecPtrOutput      `pulumi:"spec"`
	Tags            pulumi.StringMapOutput `pulumi:"tags"`
}

// NewMesh registers a new resource with the given unique name, arguments, and options.
func NewMesh(ctx *pulumi.Context,
	name string, args *MeshArgs, opts ...pulumi.ResourceOption) (*Mesh, error) {
	if args == nil {
		args = &MeshArgs{}
	}
	var resource Mesh
	err := ctx.RegisterResource("aws:appmesh/mesh:Mesh", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMesh gets an existing Mesh resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMesh(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MeshState, opts ...pulumi.ResourceOption) (*Mesh, error) {
	var resource Mesh
	err := ctx.ReadResource("aws:appmesh/mesh:Mesh", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Mesh resources.
type meshState struct {
	Arn             *string           `pulumi:"arn"`
	CreatedDate     *string           `pulumi:"createdDate"`
	LastUpdatedDate *string           `pulumi:"lastUpdatedDate"`
	Name            *string           `pulumi:"name"`
	Spec            *MeshSpec         `pulumi:"spec"`
	Tags            map[string]string `pulumi:"tags"`
}

type MeshState struct {
	Arn             pulumi.StringPtrInput
	CreatedDate     pulumi.StringPtrInput
	LastUpdatedDate pulumi.StringPtrInput
	Name            pulumi.StringPtrInput
	Spec            MeshSpecPtrInput
	Tags            pulumi.StringMapInput
}

func (MeshState) ElementType() reflect.Type {
	return reflect.TypeOf((*meshState)(nil)).Elem()
}

type meshArgs struct {
	Name *string           `pulumi:"name"`
	Spec *MeshSpec         `pulumi:"spec"`
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Mesh resource.
type MeshArgs struct {
	Name pulumi.StringPtrInput
	Spec MeshSpecPtrInput
	Tags pulumi.StringMapInput
}

func (MeshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*meshArgs)(nil)).Elem()
}
