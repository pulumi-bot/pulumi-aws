// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package appmesh

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type VirtualNode struct {
	pulumi.CustomResourceState

	Arn             pulumi.StringOutput    `pulumi:"arn"`
	CreatedDate     pulumi.StringOutput    `pulumi:"createdDate"`
	LastUpdatedDate pulumi.StringOutput    `pulumi:"lastUpdatedDate"`
	MeshName        pulumi.StringOutput    `pulumi:"meshName"`
	Name            pulumi.StringOutput    `pulumi:"name"`
	Spec            VirtualNodeSpecOutput  `pulumi:"spec"`
	Tags            pulumi.StringMapOutput `pulumi:"tags"`
}

// NewVirtualNode registers a new resource with the given unique name, arguments, and options.
func NewVirtualNode(ctx *pulumi.Context,
	name string, args *VirtualNodeArgs, opts ...pulumi.ResourceOption) (*VirtualNode, error) {
	if args == nil || args.MeshName == nil {
		return nil, errors.New("missing required argument 'MeshName'")
	}
	if args == nil || args.Spec == nil {
		return nil, errors.New("missing required argument 'Spec'")
	}
	if args == nil {
		args = &VirtualNodeArgs{}
	}
	var resource VirtualNode
	err := ctx.RegisterResource("aws:appmesh/virtualNode:VirtualNode", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVirtualNode gets an existing VirtualNode resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVirtualNode(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VirtualNodeState, opts ...pulumi.ResourceOption) (*VirtualNode, error) {
	var resource VirtualNode
	err := ctx.ReadResource("aws:appmesh/virtualNode:VirtualNode", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VirtualNode resources.
type virtualNodeState struct {
	Arn             *string           `pulumi:"arn"`
	CreatedDate     *string           `pulumi:"createdDate"`
	LastUpdatedDate *string           `pulumi:"lastUpdatedDate"`
	MeshName        *string           `pulumi:"meshName"`
	Name            *string           `pulumi:"name"`
	Spec            *VirtualNodeSpec  `pulumi:"spec"`
	Tags            map[string]string `pulumi:"tags"`
}

type VirtualNodeState struct {
	Arn             pulumi.StringPtrInput
	CreatedDate     pulumi.StringPtrInput
	LastUpdatedDate pulumi.StringPtrInput
	MeshName        pulumi.StringPtrInput
	Name            pulumi.StringPtrInput
	Spec            VirtualNodeSpecPtrInput
	Tags            pulumi.StringMapInput
}

func (VirtualNodeState) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualNodeState)(nil)).Elem()
}

type virtualNodeArgs struct {
	MeshName string            `pulumi:"meshName"`
	Name     *string           `pulumi:"name"`
	Spec     VirtualNodeSpec   `pulumi:"spec"`
	Tags     map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a VirtualNode resource.
type VirtualNodeArgs struct {
	MeshName pulumi.StringInput
	Name     pulumi.StringPtrInput
	Spec     VirtualNodeSpecInput
	Tags     pulumi.StringMapInput
}

func (VirtualNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualNodeArgs)(nil)).Elem()
}
