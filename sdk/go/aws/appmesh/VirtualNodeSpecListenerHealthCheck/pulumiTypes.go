// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package VirtualNodeSpecListenerHealthCheck

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type VirtualNodeSpecListenerHealthCheck struct {
	// The number of consecutive successful health checks that must occur before declaring listener healthy.
	// * `intervalMillis`- (Required) The time period in milliseconds between each health check execution.
	HealthyThreshold int `pulumi:"healthyThreshold"`
	IntervalMillis int `pulumi:"intervalMillis"`
	// The destination path for the health check request. This is only required if the specified protocol is `http`.
	Path *string `pulumi:"path"`
	// The destination port for the health check request. This port must match the port defined in the `portMapping` for the listener.
	Port *int `pulumi:"port"`
	// The protocol for the health check request. Valid values are `http` and `tcp`.
	Protocol string `pulumi:"protocol"`
	// The amount of time to wait when receiving a response from the health check, in milliseconds.
	TimeoutMillis int `pulumi:"timeoutMillis"`
	// The number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.
	UnhealthyThreshold int `pulumi:"unhealthyThreshold"`
}

type VirtualNodeSpecListenerHealthCheckInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerHealthCheckOutput() VirtualNodeSpecListenerHealthCheckOutput
	ToVirtualNodeSpecListenerHealthCheckOutputWithContext(context.Context) VirtualNodeSpecListenerHealthCheckOutput
}

type VirtualNodeSpecListenerHealthCheckArgs struct {
	// The number of consecutive successful health checks that must occur before declaring listener healthy.
	// * `intervalMillis`- (Required) The time period in milliseconds between each health check execution.
	HealthyThreshold pulumi.IntInput `pulumi:"healthyThreshold"`
	IntervalMillis pulumi.IntInput `pulumi:"intervalMillis"`
	// The destination path for the health check request. This is only required if the specified protocol is `http`.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The destination port for the health check request. This port must match the port defined in the `portMapping` for the listener.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The protocol for the health check request. Valid values are `http` and `tcp`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The amount of time to wait when receiving a response from the health check, in milliseconds.
	TimeoutMillis pulumi.IntInput `pulumi:"timeoutMillis"`
	// The number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.
	UnhealthyThreshold pulumi.IntInput `pulumi:"unhealthyThreshold"`
}

func (VirtualNodeSpecListenerHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerHealthCheck)(nil)).Elem()
}

func (i VirtualNodeSpecListenerHealthCheckArgs) ToVirtualNodeSpecListenerHealthCheckOutput() VirtualNodeSpecListenerHealthCheckOutput {
	return i.ToVirtualNodeSpecListenerHealthCheckOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerHealthCheckArgs) ToVirtualNodeSpecListenerHealthCheckOutputWithContext(ctx context.Context) VirtualNodeSpecListenerHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerHealthCheckOutput)
}

func (i VirtualNodeSpecListenerHealthCheckArgs) ToVirtualNodeSpecListenerHealthCheckPtrOutput() VirtualNodeSpecListenerHealthCheckPtrOutput {
	return i.ToVirtualNodeSpecListenerHealthCheckPtrOutputWithContext(context.Background())
}

func (i VirtualNodeSpecListenerHealthCheckArgs) ToVirtualNodeSpecListenerHealthCheckPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerHealthCheckOutput).ToVirtualNodeSpecListenerHealthCheckPtrOutputWithContext(ctx)
}

type VirtualNodeSpecListenerHealthCheckPtrInput interface {
	pulumi.Input

	ToVirtualNodeSpecListenerHealthCheckPtrOutput() VirtualNodeSpecListenerHealthCheckPtrOutput
	ToVirtualNodeSpecListenerHealthCheckPtrOutputWithContext(context.Context) VirtualNodeSpecListenerHealthCheckPtrOutput
}

type virtualNodeSpecListenerHealthCheckPtrType VirtualNodeSpecListenerHealthCheckArgs

func VirtualNodeSpecListenerHealthCheckPtr(v *VirtualNodeSpecListenerHealthCheckArgs) VirtualNodeSpecListenerHealthCheckPtrInput {	return (*virtualNodeSpecListenerHealthCheckPtrType)(v)
}

func (*virtualNodeSpecListenerHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerHealthCheck)(nil)).Elem()
}

func (i *virtualNodeSpecListenerHealthCheckPtrType) ToVirtualNodeSpecListenerHealthCheckPtrOutput() VirtualNodeSpecListenerHealthCheckPtrOutput {
	return i.ToVirtualNodeSpecListenerHealthCheckPtrOutputWithContext(context.Background())
}

func (i *virtualNodeSpecListenerHealthCheckPtrType) ToVirtualNodeSpecListenerHealthCheckPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNodeSpecListenerHealthCheckPtrOutput)
}

type VirtualNodeSpecListenerHealthCheckOutput struct { *pulumi.OutputState }

func (VirtualNodeSpecListenerHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNodeSpecListenerHealthCheck)(nil)).Elem()
}

func (o VirtualNodeSpecListenerHealthCheckOutput) ToVirtualNodeSpecListenerHealthCheckOutput() VirtualNodeSpecListenerHealthCheckOutput {
	return o
}

func (o VirtualNodeSpecListenerHealthCheckOutput) ToVirtualNodeSpecListenerHealthCheckOutputWithContext(ctx context.Context) VirtualNodeSpecListenerHealthCheckOutput {
	return o
}

func (o VirtualNodeSpecListenerHealthCheckOutput) ToVirtualNodeSpecListenerHealthCheckPtrOutput() VirtualNodeSpecListenerHealthCheckPtrOutput {
	return o.ToVirtualNodeSpecListenerHealthCheckPtrOutputWithContext(context.Background())
}

func (o VirtualNodeSpecListenerHealthCheckOutput) ToVirtualNodeSpecListenerHealthCheckPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerHealthCheckPtrOutput {
	return o.ApplyT(func(v VirtualNodeSpecListenerHealthCheck) *VirtualNodeSpecListenerHealthCheck {
		return &v
	}).(VirtualNodeSpecListenerHealthCheckPtrOutput)
}
// The number of consecutive successful health checks that must occur before declaring listener healthy.
// * `intervalMillis`- (Required) The time period in milliseconds between each health check execution.
func (o VirtualNodeSpecListenerHealthCheckOutput) HealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func (v VirtualNodeSpecListenerHealthCheck) int { return v.HealthyThreshold }).(pulumi.IntOutput)
}

func (o VirtualNodeSpecListenerHealthCheckOutput) IntervalMillis() pulumi.IntOutput {
	return o.ApplyT(func (v VirtualNodeSpecListenerHealthCheck) int { return v.IntervalMillis }).(pulumi.IntOutput)
}

// The destination path for the health check request. This is only required if the specified protocol is `http`.
func (o VirtualNodeSpecListenerHealthCheckOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func (v VirtualNodeSpecListenerHealthCheck) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The destination port for the health check request. This port must match the port defined in the `portMapping` for the listener.
func (o VirtualNodeSpecListenerHealthCheckOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func (v VirtualNodeSpecListenerHealthCheck) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The protocol for the health check request. Valid values are `http` and `tcp`.
func (o VirtualNodeSpecListenerHealthCheckOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func (v VirtualNodeSpecListenerHealthCheck) string { return v.Protocol }).(pulumi.StringOutput)
}

// The amount of time to wait when receiving a response from the health check, in milliseconds.
func (o VirtualNodeSpecListenerHealthCheckOutput) TimeoutMillis() pulumi.IntOutput {
	return o.ApplyT(func (v VirtualNodeSpecListenerHealthCheck) int { return v.TimeoutMillis }).(pulumi.IntOutput)
}

// The number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.
func (o VirtualNodeSpecListenerHealthCheckOutput) UnhealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func (v VirtualNodeSpecListenerHealthCheck) int { return v.UnhealthyThreshold }).(pulumi.IntOutput)
}

type VirtualNodeSpecListenerHealthCheckPtrOutput struct { *pulumi.OutputState}

func (VirtualNodeSpecListenerHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNodeSpecListenerHealthCheck)(nil)).Elem()
}

func (o VirtualNodeSpecListenerHealthCheckPtrOutput) ToVirtualNodeSpecListenerHealthCheckPtrOutput() VirtualNodeSpecListenerHealthCheckPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerHealthCheckPtrOutput) ToVirtualNodeSpecListenerHealthCheckPtrOutputWithContext(ctx context.Context) VirtualNodeSpecListenerHealthCheckPtrOutput {
	return o
}

func (o VirtualNodeSpecListenerHealthCheckPtrOutput) Elem() VirtualNodeSpecListenerHealthCheckOutput {
	return o.ApplyT(func (v *VirtualNodeSpecListenerHealthCheck) VirtualNodeSpecListenerHealthCheck { return *v }).(VirtualNodeSpecListenerHealthCheckOutput)
}

// The number of consecutive successful health checks that must occur before declaring listener healthy.
// * `intervalMillis`- (Required) The time period in milliseconds between each health check execution.
func (o VirtualNodeSpecListenerHealthCheckPtrOutput) HealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func (v VirtualNodeSpecListenerHealthCheck) int { return v.HealthyThreshold }).(pulumi.IntOutput)
}

func (o VirtualNodeSpecListenerHealthCheckPtrOutput) IntervalMillis() pulumi.IntOutput {
	return o.ApplyT(func (v VirtualNodeSpecListenerHealthCheck) int { return v.IntervalMillis }).(pulumi.IntOutput)
}

// The destination path for the health check request. This is only required if the specified protocol is `http`.
func (o VirtualNodeSpecListenerHealthCheckPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func (v VirtualNodeSpecListenerHealthCheck) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The destination port for the health check request. This port must match the port defined in the `portMapping` for the listener.
func (o VirtualNodeSpecListenerHealthCheckPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func (v VirtualNodeSpecListenerHealthCheck) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The protocol for the health check request. Valid values are `http` and `tcp`.
func (o VirtualNodeSpecListenerHealthCheckPtrOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func (v VirtualNodeSpecListenerHealthCheck) string { return v.Protocol }).(pulumi.StringOutput)
}

// The amount of time to wait when receiving a response from the health check, in milliseconds.
func (o VirtualNodeSpecListenerHealthCheckPtrOutput) TimeoutMillis() pulumi.IntOutput {
	return o.ApplyT(func (v VirtualNodeSpecListenerHealthCheck) int { return v.TimeoutMillis }).(pulumi.IntOutput)
}

// The number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.
func (o VirtualNodeSpecListenerHealthCheckPtrOutput) UnhealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func (v VirtualNodeSpecListenerHealthCheck) int { return v.UnhealthyThreshold }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(VirtualNodeSpecListenerHealthCheckOutput{})
	pulumi.RegisterOutputType(VirtualNodeSpecListenerHealthCheckPtrOutput{})
}
