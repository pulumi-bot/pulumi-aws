// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package appmesh

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type VirtualService struct {
	pulumi.CustomResourceState

	Arn             pulumi.StringOutput      `pulumi:"arn"`
	CreatedDate     pulumi.StringOutput      `pulumi:"createdDate"`
	LastUpdatedDate pulumi.StringOutput      `pulumi:"lastUpdatedDate"`
	MeshName        pulumi.StringOutput      `pulumi:"meshName"`
	Name            pulumi.StringOutput      `pulumi:"name"`
	Spec            VirtualServiceSpecOutput `pulumi:"spec"`
	Tags            pulumi.StringMapOutput   `pulumi:"tags"`
}

// NewVirtualService registers a new resource with the given unique name, arguments, and options.
func NewVirtualService(ctx *pulumi.Context,
	name string, args *VirtualServiceArgs, opts ...pulumi.ResourceOption) (*VirtualService, error) {
	if args == nil || args.MeshName == nil {
		return nil, errors.New("missing required argument 'MeshName'")
	}
	if args == nil || args.Spec == nil {
		return nil, errors.New("missing required argument 'Spec'")
	}
	if args == nil {
		args = &VirtualServiceArgs{}
	}
	var resource VirtualService
	err := ctx.RegisterResource("aws:appmesh/virtualService:VirtualService", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVirtualService gets an existing VirtualService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVirtualService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VirtualServiceState, opts ...pulumi.ResourceOption) (*VirtualService, error) {
	var resource VirtualService
	err := ctx.ReadResource("aws:appmesh/virtualService:VirtualService", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VirtualService resources.
type virtualServiceState struct {
	Arn             *string             `pulumi:"arn"`
	CreatedDate     *string             `pulumi:"createdDate"`
	LastUpdatedDate *string             `pulumi:"lastUpdatedDate"`
	MeshName        *string             `pulumi:"meshName"`
	Name            *string             `pulumi:"name"`
	Spec            *VirtualServiceSpec `pulumi:"spec"`
	Tags            map[string]string   `pulumi:"tags"`
}

type VirtualServiceState struct {
	Arn             pulumi.StringPtrInput
	CreatedDate     pulumi.StringPtrInput
	LastUpdatedDate pulumi.StringPtrInput
	MeshName        pulumi.StringPtrInput
	Name            pulumi.StringPtrInput
	Spec            VirtualServiceSpecPtrInput
	Tags            pulumi.StringMapInput
}

func (VirtualServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualServiceState)(nil)).Elem()
}

type virtualServiceArgs struct {
	MeshName string             `pulumi:"meshName"`
	Name     *string            `pulumi:"name"`
	Spec     VirtualServiceSpec `pulumi:"spec"`
	Tags     map[string]string  `pulumi:"tags"`
}

// The set of arguments for constructing a VirtualService resource.
type VirtualServiceArgs struct {
	MeshName pulumi.StringInput
	Name     pulumi.StringPtrInput
	Spec     VirtualServiceSpecInput
	Tags     pulumi.StringMapInput
}

func (VirtualServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualServiceArgs)(nil)).Elem()
}
