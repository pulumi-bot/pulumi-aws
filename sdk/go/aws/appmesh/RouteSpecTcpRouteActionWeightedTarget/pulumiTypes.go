// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package RouteSpecTcpRouteActionWeightedTarget

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type RouteSpecTcpRouteActionWeightedTarget struct {
	// The virtual node to associate with the weighted target.
	VirtualNode string `pulumi:"virtualNode"`
	// The relative weight of the weighted target. An integer between 0 and 100.
	Weight int `pulumi:"weight"`
}

type RouteSpecTcpRouteActionWeightedTargetInput interface {
	pulumi.Input

	ToRouteSpecTcpRouteActionWeightedTargetOutput() RouteSpecTcpRouteActionWeightedTargetOutput
	ToRouteSpecTcpRouteActionWeightedTargetOutputWithContext(context.Context) RouteSpecTcpRouteActionWeightedTargetOutput
}

type RouteSpecTcpRouteActionWeightedTargetArgs struct {
	// The virtual node to associate with the weighted target.
	VirtualNode pulumi.StringInput `pulumi:"virtualNode"`
	// The relative weight of the weighted target. An integer between 0 and 100.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (RouteSpecTcpRouteActionWeightedTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecTcpRouteActionWeightedTarget)(nil)).Elem()
}

func (i RouteSpecTcpRouteActionWeightedTargetArgs) ToRouteSpecTcpRouteActionWeightedTargetOutput() RouteSpecTcpRouteActionWeightedTargetOutput {
	return i.ToRouteSpecTcpRouteActionWeightedTargetOutputWithContext(context.Background())
}

func (i RouteSpecTcpRouteActionWeightedTargetArgs) ToRouteSpecTcpRouteActionWeightedTargetOutputWithContext(ctx context.Context) RouteSpecTcpRouteActionWeightedTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteActionWeightedTargetOutput)
}

type RouteSpecTcpRouteActionWeightedTargetArrayInput interface {
	pulumi.Input

	ToRouteSpecTcpRouteActionWeightedTargetArrayOutput() RouteSpecTcpRouteActionWeightedTargetArrayOutput
	ToRouteSpecTcpRouteActionWeightedTargetArrayOutputWithContext(context.Context) RouteSpecTcpRouteActionWeightedTargetArrayOutput
}

type RouteSpecTcpRouteActionWeightedTargetArray []RouteSpecTcpRouteActionWeightedTargetInput

func (RouteSpecTcpRouteActionWeightedTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecTcpRouteActionWeightedTarget)(nil)).Elem()
}

func (i RouteSpecTcpRouteActionWeightedTargetArray) ToRouteSpecTcpRouteActionWeightedTargetArrayOutput() RouteSpecTcpRouteActionWeightedTargetArrayOutput {
	return i.ToRouteSpecTcpRouteActionWeightedTargetArrayOutputWithContext(context.Background())
}

func (i RouteSpecTcpRouteActionWeightedTargetArray) ToRouteSpecTcpRouteActionWeightedTargetArrayOutputWithContext(ctx context.Context) RouteSpecTcpRouteActionWeightedTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteSpecTcpRouteActionWeightedTargetArrayOutput)
}

type RouteSpecTcpRouteActionWeightedTargetOutput struct { *pulumi.OutputState }

func (RouteSpecTcpRouteActionWeightedTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteSpecTcpRouteActionWeightedTarget)(nil)).Elem()
}

func (o RouteSpecTcpRouteActionWeightedTargetOutput) ToRouteSpecTcpRouteActionWeightedTargetOutput() RouteSpecTcpRouteActionWeightedTargetOutput {
	return o
}

func (o RouteSpecTcpRouteActionWeightedTargetOutput) ToRouteSpecTcpRouteActionWeightedTargetOutputWithContext(ctx context.Context) RouteSpecTcpRouteActionWeightedTargetOutput {
	return o
}

// The virtual node to associate with the weighted target.
func (o RouteSpecTcpRouteActionWeightedTargetOutput) VirtualNode() pulumi.StringOutput {
	return o.ApplyT(func (v RouteSpecTcpRouteActionWeightedTarget) string { return v.VirtualNode }).(pulumi.StringOutput)
}

// The relative weight of the weighted target. An integer between 0 and 100.
func (o RouteSpecTcpRouteActionWeightedTargetOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func (v RouteSpecTcpRouteActionWeightedTarget) int { return v.Weight }).(pulumi.IntOutput)
}

type RouteSpecTcpRouteActionWeightedTargetArrayOutput struct { *pulumi.OutputState}

func (RouteSpecTcpRouteActionWeightedTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteSpecTcpRouteActionWeightedTarget)(nil)).Elem()
}

func (o RouteSpecTcpRouteActionWeightedTargetArrayOutput) ToRouteSpecTcpRouteActionWeightedTargetArrayOutput() RouteSpecTcpRouteActionWeightedTargetArrayOutput {
	return o
}

func (o RouteSpecTcpRouteActionWeightedTargetArrayOutput) ToRouteSpecTcpRouteActionWeightedTargetArrayOutputWithContext(ctx context.Context) RouteSpecTcpRouteActionWeightedTargetArrayOutput {
	return o
}

func (o RouteSpecTcpRouteActionWeightedTargetArrayOutput) Index(i pulumi.IntInput) RouteSpecTcpRouteActionWeightedTargetOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) RouteSpecTcpRouteActionWeightedTarget {
		return vs[0].([]RouteSpecTcpRouteActionWeightedTarget)[vs[1].(int)]
	}).(RouteSpecTcpRouteActionWeightedTargetOutput)
}

func init() {
	pulumi.RegisterOutputType(RouteSpecTcpRouteActionWeightedTargetOutput{})
	pulumi.RegisterOutputType(RouteSpecTcpRouteActionWeightedTargetArrayOutput{})
}
