// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package DistributionLoggingConfig

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type DistributionLoggingConfig struct {
	// The Amazon S3 bucket to store the access logs in, for
	// example, `myawslogbucket.s3.amazonaws.com`.
	Bucket string `pulumi:"bucket"`
	// Specifies whether you want CloudFront to
	// include cookies in access logs (default: `false`).
	IncludeCookies *bool `pulumi:"includeCookies"`
	// An optional string that you want CloudFront to prefix
	// to the access log filenames for this distribution, for example, `myprefix/`.
	Prefix *string `pulumi:"prefix"`
}

type DistributionLoggingConfigInput interface {
	pulumi.Input

	ToDistributionLoggingConfigOutput() DistributionLoggingConfigOutput
	ToDistributionLoggingConfigOutputWithContext(context.Context) DistributionLoggingConfigOutput
}

type DistributionLoggingConfigArgs struct {
	// The Amazon S3 bucket to store the access logs in, for
	// example, `myawslogbucket.s3.amazonaws.com`.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Specifies whether you want CloudFront to
	// include cookies in access logs (default: `false`).
	IncludeCookies pulumi.BoolPtrInput `pulumi:"includeCookies"`
	// An optional string that you want CloudFront to prefix
	// to the access log filenames for this distribution, for example, `myprefix/`.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (DistributionLoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionLoggingConfig)(nil)).Elem()
}

func (i DistributionLoggingConfigArgs) ToDistributionLoggingConfigOutput() DistributionLoggingConfigOutput {
	return i.ToDistributionLoggingConfigOutputWithContext(context.Background())
}

func (i DistributionLoggingConfigArgs) ToDistributionLoggingConfigOutputWithContext(ctx context.Context) DistributionLoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionLoggingConfigOutput)
}

func (i DistributionLoggingConfigArgs) ToDistributionLoggingConfigPtrOutput() DistributionLoggingConfigPtrOutput {
	return i.ToDistributionLoggingConfigPtrOutputWithContext(context.Background())
}

func (i DistributionLoggingConfigArgs) ToDistributionLoggingConfigPtrOutputWithContext(ctx context.Context) DistributionLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionLoggingConfigOutput).ToDistributionLoggingConfigPtrOutputWithContext(ctx)
}

type DistributionLoggingConfigPtrInput interface {
	pulumi.Input

	ToDistributionLoggingConfigPtrOutput() DistributionLoggingConfigPtrOutput
	ToDistributionLoggingConfigPtrOutputWithContext(context.Context) DistributionLoggingConfigPtrOutput
}

type distributionLoggingConfigPtrType DistributionLoggingConfigArgs

func DistributionLoggingConfigPtr(v *DistributionLoggingConfigArgs) DistributionLoggingConfigPtrInput {	return (*distributionLoggingConfigPtrType)(v)
}

func (*distributionLoggingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionLoggingConfig)(nil)).Elem()
}

func (i *distributionLoggingConfigPtrType) ToDistributionLoggingConfigPtrOutput() DistributionLoggingConfigPtrOutput {
	return i.ToDistributionLoggingConfigPtrOutputWithContext(context.Background())
}

func (i *distributionLoggingConfigPtrType) ToDistributionLoggingConfigPtrOutputWithContext(ctx context.Context) DistributionLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionLoggingConfigPtrOutput)
}

type DistributionLoggingConfigOutput struct { *pulumi.OutputState }

func (DistributionLoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionLoggingConfig)(nil)).Elem()
}

func (o DistributionLoggingConfigOutput) ToDistributionLoggingConfigOutput() DistributionLoggingConfigOutput {
	return o
}

func (o DistributionLoggingConfigOutput) ToDistributionLoggingConfigOutputWithContext(ctx context.Context) DistributionLoggingConfigOutput {
	return o
}

func (o DistributionLoggingConfigOutput) ToDistributionLoggingConfigPtrOutput() DistributionLoggingConfigPtrOutput {
	return o.ToDistributionLoggingConfigPtrOutputWithContext(context.Background())
}

func (o DistributionLoggingConfigOutput) ToDistributionLoggingConfigPtrOutputWithContext(ctx context.Context) DistributionLoggingConfigPtrOutput {
	return o.ApplyT(func(v DistributionLoggingConfig) *DistributionLoggingConfig {
		return &v
	}).(DistributionLoggingConfigPtrOutput)
}
// The Amazon S3 bucket to store the access logs in, for
// example, `myawslogbucket.s3.amazonaws.com`.
func (o DistributionLoggingConfigOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func (v DistributionLoggingConfig) string { return v.Bucket }).(pulumi.StringOutput)
}

// Specifies whether you want CloudFront to
// include cookies in access logs (default: `false`).
func (o DistributionLoggingConfigOutput) IncludeCookies() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v DistributionLoggingConfig) *bool { return v.IncludeCookies }).(pulumi.BoolPtrOutput)
}

// An optional string that you want CloudFront to prefix
// to the access log filenames for this distribution, for example, `myprefix/`.
func (o DistributionLoggingConfigOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func (v DistributionLoggingConfig) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type DistributionLoggingConfigPtrOutput struct { *pulumi.OutputState}

func (DistributionLoggingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionLoggingConfig)(nil)).Elem()
}

func (o DistributionLoggingConfigPtrOutput) ToDistributionLoggingConfigPtrOutput() DistributionLoggingConfigPtrOutput {
	return o
}

func (o DistributionLoggingConfigPtrOutput) ToDistributionLoggingConfigPtrOutputWithContext(ctx context.Context) DistributionLoggingConfigPtrOutput {
	return o
}

func (o DistributionLoggingConfigPtrOutput) Elem() DistributionLoggingConfigOutput {
	return o.ApplyT(func (v *DistributionLoggingConfig) DistributionLoggingConfig { return *v }).(DistributionLoggingConfigOutput)
}

// The Amazon S3 bucket to store the access logs in, for
// example, `myawslogbucket.s3.amazonaws.com`.
func (o DistributionLoggingConfigPtrOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func (v DistributionLoggingConfig) string { return v.Bucket }).(pulumi.StringOutput)
}

// Specifies whether you want CloudFront to
// include cookies in access logs (default: `false`).
func (o DistributionLoggingConfigPtrOutput) IncludeCookies() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v DistributionLoggingConfig) *bool { return v.IncludeCookies }).(pulumi.BoolPtrOutput)
}

// An optional string that you want CloudFront to prefix
// to the access log filenames for this distribution, for example, `myprefix/`.
func (o DistributionLoggingConfigPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func (v DistributionLoggingConfig) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(DistributionLoggingConfigOutput{})
	pulumi.RegisterOutputType(DistributionLoggingConfigPtrOutput{})
}
