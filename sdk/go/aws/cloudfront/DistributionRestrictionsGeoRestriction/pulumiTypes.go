// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package DistributionRestrictionsGeoRestriction

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type DistributionRestrictionsGeoRestriction struct {
	// The [ISO 3166-1-alpha-2 codes][4] for which you
	// want CloudFront either to distribute your content (`whitelist`) or not
	// distribute your content (`blacklist`).
	Locations []string `pulumi:"locations"`
	// The method that you want to use to restrict
	// distribution of your content by country: `none`, `whitelist`, or
	// `blacklist`.
	RestrictionType string `pulumi:"restrictionType"`
}

type DistributionRestrictionsGeoRestrictionInput interface {
	pulumi.Input

	ToDistributionRestrictionsGeoRestrictionOutput() DistributionRestrictionsGeoRestrictionOutput
	ToDistributionRestrictionsGeoRestrictionOutputWithContext(context.Context) DistributionRestrictionsGeoRestrictionOutput
}

type DistributionRestrictionsGeoRestrictionArgs struct {
	// The [ISO 3166-1-alpha-2 codes][4] for which you
	// want CloudFront either to distribute your content (`whitelist`) or not
	// distribute your content (`blacklist`).
	Locations pulumi.StringArrayInput `pulumi:"locations"`
	// The method that you want to use to restrict
	// distribution of your content by country: `none`, `whitelist`, or
	// `blacklist`.
	RestrictionType pulumi.StringInput `pulumi:"restrictionType"`
}

func (DistributionRestrictionsGeoRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionRestrictionsGeoRestriction)(nil)).Elem()
}

func (i DistributionRestrictionsGeoRestrictionArgs) ToDistributionRestrictionsGeoRestrictionOutput() DistributionRestrictionsGeoRestrictionOutput {
	return i.ToDistributionRestrictionsGeoRestrictionOutputWithContext(context.Background())
}

func (i DistributionRestrictionsGeoRestrictionArgs) ToDistributionRestrictionsGeoRestrictionOutputWithContext(ctx context.Context) DistributionRestrictionsGeoRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionRestrictionsGeoRestrictionOutput)
}

type DistributionRestrictionsGeoRestrictionOutput struct { *pulumi.OutputState }

func (DistributionRestrictionsGeoRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionRestrictionsGeoRestriction)(nil)).Elem()
}

func (o DistributionRestrictionsGeoRestrictionOutput) ToDistributionRestrictionsGeoRestrictionOutput() DistributionRestrictionsGeoRestrictionOutput {
	return o
}

func (o DistributionRestrictionsGeoRestrictionOutput) ToDistributionRestrictionsGeoRestrictionOutputWithContext(ctx context.Context) DistributionRestrictionsGeoRestrictionOutput {
	return o
}

// The [ISO 3166-1-alpha-2 codes][4] for which you
// want CloudFront either to distribute your content (`whitelist`) or not
// distribute your content (`blacklist`).
func (o DistributionRestrictionsGeoRestrictionOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func (v DistributionRestrictionsGeoRestriction) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// The method that you want to use to restrict
// distribution of your content by country: `none`, `whitelist`, or
// `blacklist`.
func (o DistributionRestrictionsGeoRestrictionOutput) RestrictionType() pulumi.StringOutput {
	return o.ApplyT(func (v DistributionRestrictionsGeoRestriction) string { return v.RestrictionType }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(DistributionRestrictionsGeoRestrictionOutput{})
}
