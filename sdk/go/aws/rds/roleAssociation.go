// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type RoleAssociation struct {
	pulumi.CustomResourceState

	DbInstanceIdentifier pulumi.StringOutput `pulumi:"dbInstanceIdentifier"`
	FeatureName          pulumi.StringOutput `pulumi:"featureName"`
	RoleArn              pulumi.StringOutput `pulumi:"roleArn"`
}

// NewRoleAssociation registers a new resource with the given unique name, arguments, and options.
func NewRoleAssociation(ctx *pulumi.Context,
	name string, args *RoleAssociationArgs, opts ...pulumi.ResourceOption) (*RoleAssociation, error) {
	if args == nil || args.DbInstanceIdentifier == nil {
		return nil, errors.New("missing required argument 'DbInstanceIdentifier'")
	}
	if args == nil || args.FeatureName == nil {
		return nil, errors.New("missing required argument 'FeatureName'")
	}
	if args == nil || args.RoleArn == nil {
		return nil, errors.New("missing required argument 'RoleArn'")
	}
	if args == nil {
		args = &RoleAssociationArgs{}
	}
	var resource RoleAssociation
	err := ctx.RegisterResource("aws:rds/roleAssociation:RoleAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRoleAssociation gets an existing RoleAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRoleAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RoleAssociationState, opts ...pulumi.ResourceOption) (*RoleAssociation, error) {
	var resource RoleAssociation
	err := ctx.ReadResource("aws:rds/roleAssociation:RoleAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RoleAssociation resources.
type roleAssociationState struct {
	DbInstanceIdentifier *string `pulumi:"dbInstanceIdentifier"`
	FeatureName          *string `pulumi:"featureName"`
	RoleArn              *string `pulumi:"roleArn"`
}

type RoleAssociationState struct {
	DbInstanceIdentifier pulumi.StringPtrInput
	FeatureName          pulumi.StringPtrInput
	RoleArn              pulumi.StringPtrInput
}

func (RoleAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*roleAssociationState)(nil)).Elem()
}

type roleAssociationArgs struct {
	DbInstanceIdentifier string `pulumi:"dbInstanceIdentifier"`
	FeatureName          string `pulumi:"featureName"`
	RoleArn              string `pulumi:"roleArn"`
}

// The set of arguments for constructing a RoleAssociation resource.
type RoleAssociationArgs struct {
	DbInstanceIdentifier pulumi.StringInput
	FeatureName          pulumi.StringInput
	RoleArn              pulumi.StringInput
}

func (RoleAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*roleAssociationArgs)(nil)).Elem()
}
