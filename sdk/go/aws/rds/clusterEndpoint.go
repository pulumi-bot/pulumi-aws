// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ClusterEndpoint struct {
	pulumi.CustomResourceState

	Arn                       pulumi.StringOutput      `pulumi:"arn"`
	ClusterEndpointIdentifier pulumi.StringOutput      `pulumi:"clusterEndpointIdentifier"`
	ClusterIdentifier         pulumi.StringOutput      `pulumi:"clusterIdentifier"`
	CustomEndpointType        pulumi.StringOutput      `pulumi:"customEndpointType"`
	Endpoint                  pulumi.StringOutput      `pulumi:"endpoint"`
	ExcludedMembers           pulumi.StringArrayOutput `pulumi:"excludedMembers"`
	StaticMembers             pulumi.StringArrayOutput `pulumi:"staticMembers"`
	Tags                      pulumi.StringMapOutput   `pulumi:"tags"`
}

// NewClusterEndpoint registers a new resource with the given unique name, arguments, and options.
func NewClusterEndpoint(ctx *pulumi.Context,
	name string, args *ClusterEndpointArgs, opts ...pulumi.ResourceOption) (*ClusterEndpoint, error) {
	if args == nil || args.ClusterEndpointIdentifier == nil {
		return nil, errors.New("missing required argument 'ClusterEndpointIdentifier'")
	}
	if args == nil || args.ClusterIdentifier == nil {
		return nil, errors.New("missing required argument 'ClusterIdentifier'")
	}
	if args == nil || args.CustomEndpointType == nil {
		return nil, errors.New("missing required argument 'CustomEndpointType'")
	}
	if args == nil {
		args = &ClusterEndpointArgs{}
	}
	var resource ClusterEndpoint
	err := ctx.RegisterResource("aws:rds/clusterEndpoint:ClusterEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClusterEndpoint gets an existing ClusterEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterEndpointState, opts ...pulumi.ResourceOption) (*ClusterEndpoint, error) {
	var resource ClusterEndpoint
	err := ctx.ReadResource("aws:rds/clusterEndpoint:ClusterEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClusterEndpoint resources.
type clusterEndpointState struct {
	Arn                       *string           `pulumi:"arn"`
	ClusterEndpointIdentifier *string           `pulumi:"clusterEndpointIdentifier"`
	ClusterIdentifier         *string           `pulumi:"clusterIdentifier"`
	CustomEndpointType        *string           `pulumi:"customEndpointType"`
	Endpoint                  *string           `pulumi:"endpoint"`
	ExcludedMembers           []string          `pulumi:"excludedMembers"`
	StaticMembers             []string          `pulumi:"staticMembers"`
	Tags                      map[string]string `pulumi:"tags"`
}

type ClusterEndpointState struct {
	Arn                       pulumi.StringPtrInput
	ClusterEndpointIdentifier pulumi.StringPtrInput
	ClusterIdentifier         pulumi.StringPtrInput
	CustomEndpointType        pulumi.StringPtrInput
	Endpoint                  pulumi.StringPtrInput
	ExcludedMembers           pulumi.StringArrayInput
	StaticMembers             pulumi.StringArrayInput
	Tags                      pulumi.StringMapInput
}

func (ClusterEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterEndpointState)(nil)).Elem()
}

type clusterEndpointArgs struct {
	ClusterEndpointIdentifier string            `pulumi:"clusterEndpointIdentifier"`
	ClusterIdentifier         string            `pulumi:"clusterIdentifier"`
	CustomEndpointType        string            `pulumi:"customEndpointType"`
	ExcludedMembers           []string          `pulumi:"excludedMembers"`
	StaticMembers             []string          `pulumi:"staticMembers"`
	Tags                      map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ClusterEndpoint resource.
type ClusterEndpointArgs struct {
	ClusterEndpointIdentifier pulumi.StringInput
	ClusterIdentifier         pulumi.StringInput
	CustomEndpointType        pulumi.StringInput
	ExcludedMembers           pulumi.StringArrayInput
	StaticMembers             pulumi.StringArrayInput
	Tags                      pulumi.StringMapInput
}

func (ClusterEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterEndpointArgs)(nil)).Elem()
}
