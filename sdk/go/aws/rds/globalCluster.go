// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type GlobalCluster struct {
	pulumi.CustomResourceState

	Arn                       pulumi.StringOutput                         `pulumi:"arn"`
	DatabaseName              pulumi.StringPtrOutput                      `pulumi:"databaseName"`
	DeletionProtection        pulumi.BoolPtrOutput                        `pulumi:"deletionProtection"`
	Engine                    pulumi.StringOutput                         `pulumi:"engine"`
	EngineVersion             pulumi.StringOutput                         `pulumi:"engineVersion"`
	ForceDestroy              pulumi.BoolPtrOutput                        `pulumi:"forceDestroy"`
	GlobalClusterIdentifier   pulumi.StringOutput                         `pulumi:"globalClusterIdentifier"`
	GlobalClusterMembers      GlobalClusterGlobalClusterMemberArrayOutput `pulumi:"globalClusterMembers"`
	GlobalClusterResourceId   pulumi.StringOutput                         `pulumi:"globalClusterResourceId"`
	SourceDbClusterIdentifier pulumi.StringOutput                         `pulumi:"sourceDbClusterIdentifier"`
	StorageEncrypted          pulumi.BoolPtrOutput                        `pulumi:"storageEncrypted"`
}

// NewGlobalCluster registers a new resource with the given unique name, arguments, and options.
func NewGlobalCluster(ctx *pulumi.Context,
	name string, args *GlobalClusterArgs, opts ...pulumi.ResourceOption) (*GlobalCluster, error) {
	if args == nil || args.GlobalClusterIdentifier == nil {
		return nil, errors.New("missing required argument 'GlobalClusterIdentifier'")
	}
	if args == nil {
		args = &GlobalClusterArgs{}
	}
	var resource GlobalCluster
	err := ctx.RegisterResource("aws:rds/globalCluster:GlobalCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGlobalCluster gets an existing GlobalCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGlobalCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GlobalClusterState, opts ...pulumi.ResourceOption) (*GlobalCluster, error) {
	var resource GlobalCluster
	err := ctx.ReadResource("aws:rds/globalCluster:GlobalCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GlobalCluster resources.
type globalClusterState struct {
	Arn                       *string                            `pulumi:"arn"`
	DatabaseName              *string                            `pulumi:"databaseName"`
	DeletionProtection        *bool                              `pulumi:"deletionProtection"`
	Engine                    *string                            `pulumi:"engine"`
	EngineVersion             *string                            `pulumi:"engineVersion"`
	ForceDestroy              *bool                              `pulumi:"forceDestroy"`
	GlobalClusterIdentifier   *string                            `pulumi:"globalClusterIdentifier"`
	GlobalClusterMembers      []GlobalClusterGlobalClusterMember `pulumi:"globalClusterMembers"`
	GlobalClusterResourceId   *string                            `pulumi:"globalClusterResourceId"`
	SourceDbClusterIdentifier *string                            `pulumi:"sourceDbClusterIdentifier"`
	StorageEncrypted          *bool                              `pulumi:"storageEncrypted"`
}

type GlobalClusterState struct {
	Arn                       pulumi.StringPtrInput
	DatabaseName              pulumi.StringPtrInput
	DeletionProtection        pulumi.BoolPtrInput
	Engine                    pulumi.StringPtrInput
	EngineVersion             pulumi.StringPtrInput
	ForceDestroy              pulumi.BoolPtrInput
	GlobalClusterIdentifier   pulumi.StringPtrInput
	GlobalClusterMembers      GlobalClusterGlobalClusterMemberArrayInput
	GlobalClusterResourceId   pulumi.StringPtrInput
	SourceDbClusterIdentifier pulumi.StringPtrInput
	StorageEncrypted          pulumi.BoolPtrInput
}

func (GlobalClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*globalClusterState)(nil)).Elem()
}

type globalClusterArgs struct {
	DatabaseName              *string `pulumi:"databaseName"`
	DeletionProtection        *bool   `pulumi:"deletionProtection"`
	Engine                    *string `pulumi:"engine"`
	EngineVersion             *string `pulumi:"engineVersion"`
	ForceDestroy              *bool   `pulumi:"forceDestroy"`
	GlobalClusterIdentifier   string  `pulumi:"globalClusterIdentifier"`
	SourceDbClusterIdentifier *string `pulumi:"sourceDbClusterIdentifier"`
	StorageEncrypted          *bool   `pulumi:"storageEncrypted"`
}

// The set of arguments for constructing a GlobalCluster resource.
type GlobalClusterArgs struct {
	DatabaseName              pulumi.StringPtrInput
	DeletionProtection        pulumi.BoolPtrInput
	Engine                    pulumi.StringPtrInput
	EngineVersion             pulumi.StringPtrInput
	ForceDestroy              pulumi.BoolPtrInput
	GlobalClusterIdentifier   pulumi.StringInput
	SourceDbClusterIdentifier pulumi.StringPtrInput
	StorageEncrypted          pulumi.BoolPtrInput
}

func (GlobalClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*globalClusterArgs)(nil)).Elem()
}
