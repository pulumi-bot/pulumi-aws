// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package BucketReplicationConfigurationRule

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-aws/s3/BucketReplicationConfigurationRuleDestination"
	"https:/github.com/pulumi/pulumi-aws/s3/BucketReplicationConfigurationRuleDestinationAccessControlTranslation"
	"https:/github.com/pulumi/pulumi-aws/s3/BucketReplicationConfigurationRuleFilter"
	"https:/github.com/pulumi/pulumi-aws/s3/BucketReplicationConfigurationRuleSourceSelectionCriteria"
	"https:/github.com/pulumi/pulumi-aws/s3/BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjects"
)

type BucketReplicationConfigurationRule struct {
	// Specifies the destination for the rule (documented below).
	Destination s3BucketReplicationConfigurationRuleDestination.BucketReplicationConfigurationRuleDestination `pulumi:"destination"`
	// Filter that identifies subset of objects to which the replication rule applies (documented below).
	Filter *s3BucketReplicationConfigurationRuleFilter.BucketReplicationConfigurationRuleFilter `pulumi:"filter"`
	// Unique identifier for the rule.
	Id *string `pulumi:"id"`
	// Object keyname prefix that identifies subset of objects to which the rule applies.
	Prefix *string `pulumi:"prefix"`
	// The priority associated with the rule.
	Priority *int `pulumi:"priority"`
	// Specifies special object selection criteria (documented below).
	SourceSelectionCriteria *s3BucketReplicationConfigurationRuleSourceSelectionCriteria.BucketReplicationConfigurationRuleSourceSelectionCriteria `pulumi:"sourceSelectionCriteria"`
	// The status of the rule. Either `Enabled` or `Disabled`. The rule is ignored if status is not Enabled.
	Status string `pulumi:"status"`
}

type BucketReplicationConfigurationRuleInput interface {
	pulumi.Input

	ToBucketReplicationConfigurationRuleOutput() BucketReplicationConfigurationRuleOutput
	ToBucketReplicationConfigurationRuleOutputWithContext(context.Context) BucketReplicationConfigurationRuleOutput
}

type BucketReplicationConfigurationRuleArgs struct {
	// Specifies the destination for the rule (documented below).
	Destination s3BucketReplicationConfigurationRuleDestination.BucketReplicationConfigurationRuleDestinationInput `pulumi:"destination"`
	// Filter that identifies subset of objects to which the replication rule applies (documented below).
	Filter s3BucketReplicationConfigurationRuleFilter.BucketReplicationConfigurationRuleFilterPtrInput `pulumi:"filter"`
	// Unique identifier for the rule.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Object keyname prefix that identifies subset of objects to which the rule applies.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The priority associated with the rule.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Specifies special object selection criteria (documented below).
	SourceSelectionCriteria s3BucketReplicationConfigurationRuleSourceSelectionCriteria.BucketReplicationConfigurationRuleSourceSelectionCriteriaPtrInput `pulumi:"sourceSelectionCriteria"`
	// The status of the rule. Either `Enabled` or `Disabled`. The rule is ignored if status is not Enabled.
	Status pulumi.StringInput `pulumi:"status"`
}

func (BucketReplicationConfigurationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationConfigurationRule)(nil)).Elem()
}

func (i BucketReplicationConfigurationRuleArgs) ToBucketReplicationConfigurationRuleOutput() BucketReplicationConfigurationRuleOutput {
	return i.ToBucketReplicationConfigurationRuleOutputWithContext(context.Background())
}

func (i BucketReplicationConfigurationRuleArgs) ToBucketReplicationConfigurationRuleOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigurationRuleOutput)
}

type BucketReplicationConfigurationRuleArrayInput interface {
	pulumi.Input

	ToBucketReplicationConfigurationRuleArrayOutput() BucketReplicationConfigurationRuleArrayOutput
	ToBucketReplicationConfigurationRuleArrayOutputWithContext(context.Context) BucketReplicationConfigurationRuleArrayOutput
}

type BucketReplicationConfigurationRuleArray []BucketReplicationConfigurationRuleInput

func (BucketReplicationConfigurationRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketReplicationConfigurationRule)(nil)).Elem()
}

func (i BucketReplicationConfigurationRuleArray) ToBucketReplicationConfigurationRuleArrayOutput() BucketReplicationConfigurationRuleArrayOutput {
	return i.ToBucketReplicationConfigurationRuleArrayOutputWithContext(context.Background())
}

func (i BucketReplicationConfigurationRuleArray) ToBucketReplicationConfigurationRuleArrayOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigurationRuleArrayOutput)
}

type BucketReplicationConfigurationRuleOutput struct { *pulumi.OutputState }

func (BucketReplicationConfigurationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationConfigurationRule)(nil)).Elem()
}

func (o BucketReplicationConfigurationRuleOutput) ToBucketReplicationConfigurationRuleOutput() BucketReplicationConfigurationRuleOutput {
	return o
}

func (o BucketReplicationConfigurationRuleOutput) ToBucketReplicationConfigurationRuleOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleOutput {
	return o
}

// Specifies the destination for the rule (documented below).
func (o BucketReplicationConfigurationRuleOutput) Destination() s3BucketReplicationConfigurationRuleDestination.BucketReplicationConfigurationRuleDestinationOutput {
	return o.ApplyT(func (v BucketReplicationConfigurationRule) s3BucketReplicationConfigurationRuleDestination.BucketReplicationConfigurationRuleDestination { return v.Destination }).(s3BucketReplicationConfigurationRuleDestination.BucketReplicationConfigurationRuleDestinationOutput)
}

// Filter that identifies subset of objects to which the replication rule applies (documented below).
func (o BucketReplicationConfigurationRuleOutput) Filter() s3BucketReplicationConfigurationRuleFilter.BucketReplicationConfigurationRuleFilterPtrOutput {
	return o.ApplyT(func (v BucketReplicationConfigurationRule) *s3BucketReplicationConfigurationRuleFilter.BucketReplicationConfigurationRuleFilter { return v.Filter }).(s3BucketReplicationConfigurationRuleFilter.BucketReplicationConfigurationRuleFilterPtrOutput)
}

// Unique identifier for the rule.
func (o BucketReplicationConfigurationRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketReplicationConfigurationRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Object keyname prefix that identifies subset of objects to which the rule applies.
func (o BucketReplicationConfigurationRuleOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketReplicationConfigurationRule) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The priority associated with the rule.
func (o BucketReplicationConfigurationRuleOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func (v BucketReplicationConfigurationRule) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Specifies special object selection criteria (documented below).
func (o BucketReplicationConfigurationRuleOutput) SourceSelectionCriteria() s3BucketReplicationConfigurationRuleSourceSelectionCriteria.BucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutput {
	return o.ApplyT(func (v BucketReplicationConfigurationRule) *s3BucketReplicationConfigurationRuleSourceSelectionCriteria.BucketReplicationConfigurationRuleSourceSelectionCriteria { return v.SourceSelectionCriteria }).(s3BucketReplicationConfigurationRuleSourceSelectionCriteria.BucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutput)
}

// The status of the rule. Either `Enabled` or `Disabled`. The rule is ignored if status is not Enabled.
func (o BucketReplicationConfigurationRuleOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func (v BucketReplicationConfigurationRule) string { return v.Status }).(pulumi.StringOutput)
}

type BucketReplicationConfigurationRuleArrayOutput struct { *pulumi.OutputState}

func (BucketReplicationConfigurationRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketReplicationConfigurationRule)(nil)).Elem()
}

func (o BucketReplicationConfigurationRuleArrayOutput) ToBucketReplicationConfigurationRuleArrayOutput() BucketReplicationConfigurationRuleArrayOutput {
	return o
}

func (o BucketReplicationConfigurationRuleArrayOutput) ToBucketReplicationConfigurationRuleArrayOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleArrayOutput {
	return o
}

func (o BucketReplicationConfigurationRuleArrayOutput) Index(i pulumi.IntInput) BucketReplicationConfigurationRuleOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) BucketReplicationConfigurationRule {
		return vs[0].([]BucketReplicationConfigurationRule)[vs[1].(int)]
	}).(BucketReplicationConfigurationRuleOutput)
}

func init() {
	pulumi.RegisterOutputType(BucketReplicationConfigurationRuleOutput{})
	pulumi.RegisterOutputType(BucketReplicationConfigurationRuleArrayOutput{})
}
