// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package InventoryDestinationBucketEncryption

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-aws/s3/InventoryDestinationBucketEncryptionSseKms"
	"https:/github.com/pulumi/pulumi-aws/s3/InventoryDestinationBucketEncryptionSseS3"
)

type InventoryDestinationBucketEncryption struct {
	// Specifies to use server-side encryption with AWS KMS-managed keys to encrypt the inventory file (documented below).
	SseKms *s3InventoryDestinationBucketEncryptionSseKms.InventoryDestinationBucketEncryptionSseKms `pulumi:"sseKms"`
	// Specifies to use server-side encryption with Amazon S3-managed keys (SSE-S3) to encrypt the inventory file.
	SseS3 *s3InventoryDestinationBucketEncryptionSseS3.InventoryDestinationBucketEncryptionSseS3 `pulumi:"sseS3"`
}

type InventoryDestinationBucketEncryptionInput interface {
	pulumi.Input

	ToInventoryDestinationBucketEncryptionOutput() InventoryDestinationBucketEncryptionOutput
	ToInventoryDestinationBucketEncryptionOutputWithContext(context.Context) InventoryDestinationBucketEncryptionOutput
}

type InventoryDestinationBucketEncryptionArgs struct {
	// Specifies to use server-side encryption with AWS KMS-managed keys to encrypt the inventory file (documented below).
	SseKms s3InventoryDestinationBucketEncryptionSseKms.InventoryDestinationBucketEncryptionSseKmsPtrInput `pulumi:"sseKms"`
	// Specifies to use server-side encryption with Amazon S3-managed keys (SSE-S3) to encrypt the inventory file.
	SseS3 s3InventoryDestinationBucketEncryptionSseS3.InventoryDestinationBucketEncryptionSseS3PtrInput `pulumi:"sseS3"`
}

func (InventoryDestinationBucketEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryDestinationBucketEncryption)(nil)).Elem()
}

func (i InventoryDestinationBucketEncryptionArgs) ToInventoryDestinationBucketEncryptionOutput() InventoryDestinationBucketEncryptionOutput {
	return i.ToInventoryDestinationBucketEncryptionOutputWithContext(context.Background())
}

func (i InventoryDestinationBucketEncryptionArgs) ToInventoryDestinationBucketEncryptionOutputWithContext(ctx context.Context) InventoryDestinationBucketEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryDestinationBucketEncryptionOutput)
}

func (i InventoryDestinationBucketEncryptionArgs) ToInventoryDestinationBucketEncryptionPtrOutput() InventoryDestinationBucketEncryptionPtrOutput {
	return i.ToInventoryDestinationBucketEncryptionPtrOutputWithContext(context.Background())
}

func (i InventoryDestinationBucketEncryptionArgs) ToInventoryDestinationBucketEncryptionPtrOutputWithContext(ctx context.Context) InventoryDestinationBucketEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryDestinationBucketEncryptionOutput).ToInventoryDestinationBucketEncryptionPtrOutputWithContext(ctx)
}

type InventoryDestinationBucketEncryptionPtrInput interface {
	pulumi.Input

	ToInventoryDestinationBucketEncryptionPtrOutput() InventoryDestinationBucketEncryptionPtrOutput
	ToInventoryDestinationBucketEncryptionPtrOutputWithContext(context.Context) InventoryDestinationBucketEncryptionPtrOutput
}

type inventoryDestinationBucketEncryptionPtrType InventoryDestinationBucketEncryptionArgs

func InventoryDestinationBucketEncryptionPtr(v *InventoryDestinationBucketEncryptionArgs) InventoryDestinationBucketEncryptionPtrInput {	return (*inventoryDestinationBucketEncryptionPtrType)(v)
}

func (*inventoryDestinationBucketEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryDestinationBucketEncryption)(nil)).Elem()
}

func (i *inventoryDestinationBucketEncryptionPtrType) ToInventoryDestinationBucketEncryptionPtrOutput() InventoryDestinationBucketEncryptionPtrOutput {
	return i.ToInventoryDestinationBucketEncryptionPtrOutputWithContext(context.Background())
}

func (i *inventoryDestinationBucketEncryptionPtrType) ToInventoryDestinationBucketEncryptionPtrOutputWithContext(ctx context.Context) InventoryDestinationBucketEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryDestinationBucketEncryptionPtrOutput)
}

type InventoryDestinationBucketEncryptionOutput struct { *pulumi.OutputState }

func (InventoryDestinationBucketEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryDestinationBucketEncryption)(nil)).Elem()
}

func (o InventoryDestinationBucketEncryptionOutput) ToInventoryDestinationBucketEncryptionOutput() InventoryDestinationBucketEncryptionOutput {
	return o
}

func (o InventoryDestinationBucketEncryptionOutput) ToInventoryDestinationBucketEncryptionOutputWithContext(ctx context.Context) InventoryDestinationBucketEncryptionOutput {
	return o
}

func (o InventoryDestinationBucketEncryptionOutput) ToInventoryDestinationBucketEncryptionPtrOutput() InventoryDestinationBucketEncryptionPtrOutput {
	return o.ToInventoryDestinationBucketEncryptionPtrOutputWithContext(context.Background())
}

func (o InventoryDestinationBucketEncryptionOutput) ToInventoryDestinationBucketEncryptionPtrOutputWithContext(ctx context.Context) InventoryDestinationBucketEncryptionPtrOutput {
	return o.ApplyT(func(v InventoryDestinationBucketEncryption) *InventoryDestinationBucketEncryption {
		return &v
	}).(InventoryDestinationBucketEncryptionPtrOutput)
}
// Specifies to use server-side encryption with AWS KMS-managed keys to encrypt the inventory file (documented below).
func (o InventoryDestinationBucketEncryptionOutput) SseKms() s3InventoryDestinationBucketEncryptionSseKms.InventoryDestinationBucketEncryptionSseKmsPtrOutput {
	return o.ApplyT(func (v InventoryDestinationBucketEncryption) *s3InventoryDestinationBucketEncryptionSseKms.InventoryDestinationBucketEncryptionSseKms { return v.SseKms }).(s3InventoryDestinationBucketEncryptionSseKms.InventoryDestinationBucketEncryptionSseKmsPtrOutput)
}

// Specifies to use server-side encryption with Amazon S3-managed keys (SSE-S3) to encrypt the inventory file.
func (o InventoryDestinationBucketEncryptionOutput) SseS3() s3InventoryDestinationBucketEncryptionSseS3.InventoryDestinationBucketEncryptionSseS3PtrOutput {
	return o.ApplyT(func (v InventoryDestinationBucketEncryption) *s3InventoryDestinationBucketEncryptionSseS3.InventoryDestinationBucketEncryptionSseS3 { return v.SseS3 }).(s3InventoryDestinationBucketEncryptionSseS3.InventoryDestinationBucketEncryptionSseS3PtrOutput)
}

type InventoryDestinationBucketEncryptionPtrOutput struct { *pulumi.OutputState}

func (InventoryDestinationBucketEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryDestinationBucketEncryption)(nil)).Elem()
}

func (o InventoryDestinationBucketEncryptionPtrOutput) ToInventoryDestinationBucketEncryptionPtrOutput() InventoryDestinationBucketEncryptionPtrOutput {
	return o
}

func (o InventoryDestinationBucketEncryptionPtrOutput) ToInventoryDestinationBucketEncryptionPtrOutputWithContext(ctx context.Context) InventoryDestinationBucketEncryptionPtrOutput {
	return o
}

func (o InventoryDestinationBucketEncryptionPtrOutput) Elem() InventoryDestinationBucketEncryptionOutput {
	return o.ApplyT(func (v *InventoryDestinationBucketEncryption) InventoryDestinationBucketEncryption { return *v }).(InventoryDestinationBucketEncryptionOutput)
}

// Specifies to use server-side encryption with AWS KMS-managed keys to encrypt the inventory file (documented below).
func (o InventoryDestinationBucketEncryptionPtrOutput) SseKms() s3InventoryDestinationBucketEncryptionSseKms.InventoryDestinationBucketEncryptionSseKmsPtrOutput {
	return o.ApplyT(func (v InventoryDestinationBucketEncryption) *s3InventoryDestinationBucketEncryptionSseKms.InventoryDestinationBucketEncryptionSseKms { return v.SseKms }).(s3InventoryDestinationBucketEncryptionSseKms.InventoryDestinationBucketEncryptionSseKmsPtrOutput)
}

// Specifies to use server-side encryption with Amazon S3-managed keys (SSE-S3) to encrypt the inventory file.
func (o InventoryDestinationBucketEncryptionPtrOutput) SseS3() s3InventoryDestinationBucketEncryptionSseS3.InventoryDestinationBucketEncryptionSseS3PtrOutput {
	return o.ApplyT(func (v InventoryDestinationBucketEncryption) *s3InventoryDestinationBucketEncryptionSseS3.InventoryDestinationBucketEncryptionSseS3 { return v.SseS3 }).(s3InventoryDestinationBucketEncryptionSseS3.InventoryDestinationBucketEncryptionSseS3PtrOutput)
}

func init() {
	pulumi.RegisterOutputType(InventoryDestinationBucketEncryptionOutput{})
	pulumi.RegisterOutputType(InventoryDestinationBucketEncryptionPtrOutput{})
}
