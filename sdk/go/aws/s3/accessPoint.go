// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AccessPoint struct {
	pulumi.CustomResourceState

	AccountId                      pulumi.StringOutput                                `pulumi:"accountId"`
	Arn                            pulumi.StringOutput                                `pulumi:"arn"`
	Bucket                         pulumi.StringOutput                                `pulumi:"bucket"`
	DomainName                     pulumi.StringOutput                                `pulumi:"domainName"`
	HasPublicAccessPolicy          pulumi.BoolOutput                                  `pulumi:"hasPublicAccessPolicy"`
	Name                           pulumi.StringOutput                                `pulumi:"name"`
	NetworkOrigin                  pulumi.StringOutput                                `pulumi:"networkOrigin"`
	Policy                         pulumi.StringPtrOutput                             `pulumi:"policy"`
	PublicAccessBlockConfiguration AccessPointPublicAccessBlockConfigurationPtrOutput `pulumi:"publicAccessBlockConfiguration"`
	VpcConfiguration               AccessPointVpcConfigurationPtrOutput               `pulumi:"vpcConfiguration"`
}

// NewAccessPoint registers a new resource with the given unique name, arguments, and options.
func NewAccessPoint(ctx *pulumi.Context,
	name string, args *AccessPointArgs, opts ...pulumi.ResourceOption) (*AccessPoint, error) {
	if args == nil || args.Bucket == nil {
		return nil, errors.New("missing required argument 'Bucket'")
	}
	if args == nil {
		args = &AccessPointArgs{}
	}
	var resource AccessPoint
	err := ctx.RegisterResource("aws:s3/accessPoint:AccessPoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessPoint gets an existing AccessPoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessPoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessPointState, opts ...pulumi.ResourceOption) (*AccessPoint, error) {
	var resource AccessPoint
	err := ctx.ReadResource("aws:s3/accessPoint:AccessPoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessPoint resources.
type accessPointState struct {
	AccountId                      *string                                    `pulumi:"accountId"`
	Arn                            *string                                    `pulumi:"arn"`
	Bucket                         *string                                    `pulumi:"bucket"`
	DomainName                     *string                                    `pulumi:"domainName"`
	HasPublicAccessPolicy          *bool                                      `pulumi:"hasPublicAccessPolicy"`
	Name                           *string                                    `pulumi:"name"`
	NetworkOrigin                  *string                                    `pulumi:"networkOrigin"`
	Policy                         *string                                    `pulumi:"policy"`
	PublicAccessBlockConfiguration *AccessPointPublicAccessBlockConfiguration `pulumi:"publicAccessBlockConfiguration"`
	VpcConfiguration               *AccessPointVpcConfiguration               `pulumi:"vpcConfiguration"`
}

type AccessPointState struct {
	AccountId                      pulumi.StringPtrInput
	Arn                            pulumi.StringPtrInput
	Bucket                         pulumi.StringPtrInput
	DomainName                     pulumi.StringPtrInput
	HasPublicAccessPolicy          pulumi.BoolPtrInput
	Name                           pulumi.StringPtrInput
	NetworkOrigin                  pulumi.StringPtrInput
	Policy                         pulumi.StringPtrInput
	PublicAccessBlockConfiguration AccessPointPublicAccessBlockConfigurationPtrInput
	VpcConfiguration               AccessPointVpcConfigurationPtrInput
}

func (AccessPointState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessPointState)(nil)).Elem()
}

type accessPointArgs struct {
	AccountId                      *string                                    `pulumi:"accountId"`
	Bucket                         string                                     `pulumi:"bucket"`
	Name                           *string                                    `pulumi:"name"`
	Policy                         *string                                    `pulumi:"policy"`
	PublicAccessBlockConfiguration *AccessPointPublicAccessBlockConfiguration `pulumi:"publicAccessBlockConfiguration"`
	VpcConfiguration               *AccessPointVpcConfiguration               `pulumi:"vpcConfiguration"`
}

// The set of arguments for constructing a AccessPoint resource.
type AccessPointArgs struct {
	AccountId                      pulumi.StringPtrInput
	Bucket                         pulumi.StringInput
	Name                           pulumi.StringPtrInput
	Policy                         pulumi.StringPtrInput
	PublicAccessBlockConfiguration AccessPointPublicAccessBlockConfigurationPtrInput
	VpcConfiguration               AccessPointVpcConfigurationPtrInput
}

func (AccessPointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessPointArgs)(nil)).Elem()
}
