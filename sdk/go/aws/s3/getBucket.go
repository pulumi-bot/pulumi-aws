// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides details about a specific S3 bucket.
//
// This resource may prove useful when setting up a Route53 record, or an origin for a CloudFront
// Distribution.
//
// ## Example Usage
// ### Route53 Record
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/route53"
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/s3"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		selected, err := s3.LookupBucket(ctx, &s3.LookupBucketArgs{
// 			Bucket: "bucket.test.com",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		opt0 := "test.com."
// 		testZone, err := route53.LookupZone(ctx, &route53.LookupZoneArgs{
// 			Name: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = route53.NewRecord(ctx, "example", &route53.RecordArgs{
// 			ZoneId: pulumi.String(testZone.Id),
// 			Name:   pulumi.String("bucket"),
// 			Type:   pulumi.String("A"),
// 			Aliases: route53.RecordAliasArray{
// 				&route53.RecordAliasArgs{
// 					Name:   pulumi.String(selected.WebsiteDomain),
// 					ZoneId: pulumi.String(selected.HostedZoneId),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// ### CloudFront Origin
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/cloudfront"
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/s3"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		selected, err := s3.LookupBucket(ctx, &s3.LookupBucketArgs{
// 			Bucket: "a-test-bucket",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = cloudfront.NewDistribution(ctx, "test", &cloudfront.DistributionArgs{
// 			Origins: cloudfront.DistributionOriginArray{
// 				&cloudfront.DistributionOriginArgs{
// 					DomainName: pulumi.String(selected.BucketDomainName),
// 					OriginId:   pulumi.String("s3-selected-bucket"),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupBucket(ctx *pulumi.Context, args *LookupBucketArgs, opts ...pulumi.InvokeOption) (*LookupBucketResult, error) {
	var rv LookupBucketResult
	err := ctx.Invoke("aws:s3/getBucket:getBucket", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBucket.
type LookupBucketArgs struct {
	// The name of the bucket
	Bucket string `pulumi:"bucket"`
}

// A collection of values returned by getBucket.
type LookupBucketResult struct {
	// The ARN of the bucket. Will be of format `arn:aws:s3:::bucketname`.
	Arn    string `pulumi:"arn"`
	Bucket string `pulumi:"bucket"`
	// The bucket domain name. Will be of format `bucketname.s3.amazonaws.com`.
	BucketDomainName string `pulumi:"bucketDomainName"`
	// The bucket region-specific domain name. The bucket domain name including the region name, please refer [here](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region) for format. Note: The AWS CloudFront allows specifying S3 region-specific endpoint when creating S3 origin, it will prevent [redirect issues](https://forums.aws.amazon.com/thread.jspa?threadID=216814) from CloudFront to S3 Origin URL.
	BucketRegionalDomainName string `pulumi:"bucketRegionalDomainName"`
	// The [Route 53 Hosted Zone ID](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_website_region_endpoints) for this bucket's region.
	HostedZoneId string `pulumi:"hostedZoneId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The AWS region this bucket resides in.
	Region string `pulumi:"region"`
	// The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string. This is used to create Route 53 alias records.
	WebsiteDomain string `pulumi:"websiteDomain"`
	// The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
	WebsiteEndpoint string `pulumi:"websiteEndpoint"`
}

func LookupBucketApply(ctx *pulumi.Context, args LookupBucketApplyInput, opts ...pulumi.InvokeOption) LookupBucketResultOutput {
	return args.ToLookupBucketApplyOutput().ApplyT(func(v LookupBucketArgs) (LookupBucketResult, error) {
		r, err := LookupBucket(ctx, &v, opts...)
		return *r, err

	}).(LookupBucketResultOutput)
}

// LookupBucketApplyInput is an input type that accepts LookupBucketApplyArgs and LookupBucketApplyOutput values.
// You can construct a concrete instance of `LookupBucketApplyInput` via:
//
//          LookupBucketApplyArgs{...}
type LookupBucketApplyInput interface {
	pulumi.Input

	ToLookupBucketApplyOutput() LookupBucketApplyOutput
	ToLookupBucketApplyOutputWithContext(context.Context) LookupBucketApplyOutput
}

// A collection of arguments for invoking getBucket.
type LookupBucketApplyArgs struct {
	// The name of the bucket
	Bucket pulumi.StringInput `pulumi:"bucket"`
}

func (LookupBucketApplyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBucketArgs)(nil)).Elem()
}

func (i LookupBucketApplyArgs) ToLookupBucketApplyOutput() LookupBucketApplyOutput {
	return i.ToLookupBucketApplyOutputWithContext(context.Background())
}

func (i LookupBucketApplyArgs) ToLookupBucketApplyOutputWithContext(ctx context.Context) LookupBucketApplyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupBucketApplyOutput)
}

// A collection of arguments for invoking getBucket.
type LookupBucketApplyOutput struct{ *pulumi.OutputState }

func (LookupBucketApplyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBucketArgs)(nil)).Elem()
}

func (o LookupBucketApplyOutput) ToLookupBucketApplyOutput() LookupBucketApplyOutput {
	return o
}

func (o LookupBucketApplyOutput) ToLookupBucketApplyOutputWithContext(ctx context.Context) LookupBucketApplyOutput {
	return o
}

// The name of the bucket
func (o LookupBucketApplyOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBucketArgs) string { return v.Bucket }).(pulumi.StringOutput)
}

// A collection of values returned by getBucket.
type LookupBucketResultOutput struct{ *pulumi.OutputState }

func (LookupBucketResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBucketResult)(nil)).Elem()
}

func (o LookupBucketResultOutput) ToLookupBucketResultOutput() LookupBucketResultOutput {
	return o
}

func (o LookupBucketResultOutput) ToLookupBucketResultOutputWithContext(ctx context.Context) LookupBucketResultOutput {
	return o
}

// The ARN of the bucket. Will be of format `arn:aws:s3:::bucketname`.
func (o LookupBucketResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBucketResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupBucketResultOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBucketResult) string { return v.Bucket }).(pulumi.StringOutput)
}

// The bucket domain name. Will be of format `bucketname.s3.amazonaws.com`.
func (o LookupBucketResultOutput) BucketDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBucketResult) string { return v.BucketDomainName }).(pulumi.StringOutput)
}

// The bucket region-specific domain name. The bucket domain name including the region name, please refer [here](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region) for format. Note: The AWS CloudFront allows specifying S3 region-specific endpoint when creating S3 origin, it will prevent [redirect issues](https://forums.aws.amazon.com/thread.jspa?threadID=216814) from CloudFront to S3 Origin URL.
func (o LookupBucketResultOutput) BucketRegionalDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBucketResult) string { return v.BucketRegionalDomainName }).(pulumi.StringOutput)
}

// The [Route 53 Hosted Zone ID](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_website_region_endpoints) for this bucket's region.
func (o LookupBucketResultOutput) HostedZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBucketResult) string { return v.HostedZoneId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupBucketResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBucketResult) string { return v.Id }).(pulumi.StringOutput)
}

// The AWS region this bucket resides in.
func (o LookupBucketResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBucketResult) string { return v.Region }).(pulumi.StringOutput)
}

// The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string. This is used to create Route 53 alias records.
func (o LookupBucketResultOutput) WebsiteDomain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBucketResult) string { return v.WebsiteDomain }).(pulumi.StringOutput)
}

// The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
func (o LookupBucketResultOutput) WebsiteEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBucketResult) string { return v.WebsiteEndpoint }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBucketApplyOutput{})
	pulumi.RegisterOutputType(LookupBucketResultOutput{})
}
