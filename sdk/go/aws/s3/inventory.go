// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Inventory struct {
	pulumi.CustomResourceState

	Bucket                 pulumi.StringOutput        `pulumi:"bucket"`
	Destination            InventoryDestinationOutput `pulumi:"destination"`
	Enabled                pulumi.BoolPtrOutput       `pulumi:"enabled"`
	Filter                 InventoryFilterPtrOutput   `pulumi:"filter"`
	IncludedObjectVersions pulumi.StringOutput        `pulumi:"includedObjectVersions"`
	Name                   pulumi.StringOutput        `pulumi:"name"`
	OptionalFields         pulumi.StringArrayOutput   `pulumi:"optionalFields"`
	Schedule               InventoryScheduleOutput    `pulumi:"schedule"`
}

// NewInventory registers a new resource with the given unique name, arguments, and options.
func NewInventory(ctx *pulumi.Context,
	name string, args *InventoryArgs, opts ...pulumi.ResourceOption) (*Inventory, error) {
	if args == nil || args.Bucket == nil {
		return nil, errors.New("missing required argument 'Bucket'")
	}
	if args == nil || args.Destination == nil {
		return nil, errors.New("missing required argument 'Destination'")
	}
	if args == nil || args.IncludedObjectVersions == nil {
		return nil, errors.New("missing required argument 'IncludedObjectVersions'")
	}
	if args == nil || args.Schedule == nil {
		return nil, errors.New("missing required argument 'Schedule'")
	}
	if args == nil {
		args = &InventoryArgs{}
	}
	var resource Inventory
	err := ctx.RegisterResource("aws:s3/inventory:Inventory", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInventory gets an existing Inventory resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInventory(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InventoryState, opts ...pulumi.ResourceOption) (*Inventory, error) {
	var resource Inventory
	err := ctx.ReadResource("aws:s3/inventory:Inventory", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Inventory resources.
type inventoryState struct {
	Bucket                 *string               `pulumi:"bucket"`
	Destination            *InventoryDestination `pulumi:"destination"`
	Enabled                *bool                 `pulumi:"enabled"`
	Filter                 *InventoryFilter      `pulumi:"filter"`
	IncludedObjectVersions *string               `pulumi:"includedObjectVersions"`
	Name                   *string               `pulumi:"name"`
	OptionalFields         []string              `pulumi:"optionalFields"`
	Schedule               *InventorySchedule    `pulumi:"schedule"`
}

type InventoryState struct {
	Bucket                 pulumi.StringPtrInput
	Destination            InventoryDestinationPtrInput
	Enabled                pulumi.BoolPtrInput
	Filter                 InventoryFilterPtrInput
	IncludedObjectVersions pulumi.StringPtrInput
	Name                   pulumi.StringPtrInput
	OptionalFields         pulumi.StringArrayInput
	Schedule               InventorySchedulePtrInput
}

func (InventoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*inventoryState)(nil)).Elem()
}

type inventoryArgs struct {
	Bucket                 string               `pulumi:"bucket"`
	Destination            InventoryDestination `pulumi:"destination"`
	Enabled                *bool                `pulumi:"enabled"`
	Filter                 *InventoryFilter     `pulumi:"filter"`
	IncludedObjectVersions string               `pulumi:"includedObjectVersions"`
	Name                   *string              `pulumi:"name"`
	OptionalFields         []string             `pulumi:"optionalFields"`
	Schedule               InventorySchedule    `pulumi:"schedule"`
}

// The set of arguments for constructing a Inventory resource.
type InventoryArgs struct {
	Bucket                 pulumi.StringInput
	Destination            InventoryDestinationInput
	Enabled                pulumi.BoolPtrInput
	Filter                 InventoryFilterPtrInput
	IncludedObjectVersions pulumi.StringInput
	Name                   pulumi.StringPtrInput
	OptionalFields         pulumi.StringArrayInput
	Schedule               InventoryScheduleInput
}

func (InventoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*inventoryArgs)(nil)).Elem()
}
