// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Resource struct {
	pulumi.CustomResourceState

	ParentId pulumi.StringOutput `pulumi:"parentId"`
	Path     pulumi.StringOutput `pulumi:"path"`
	PathPart pulumi.StringOutput `pulumi:"pathPart"`
	RestApi  pulumi.StringOutput `pulumi:"restApi"`
}

// NewResource registers a new resource with the given unique name, arguments, and options.
func NewResource(ctx *pulumi.Context,
	name string, args *ResourceArgs, opts ...pulumi.ResourceOption) (*Resource, error) {
	if args == nil || args.ParentId == nil {
		return nil, errors.New("missing required argument 'ParentId'")
	}
	if args == nil || args.PathPart == nil {
		return nil, errors.New("missing required argument 'PathPart'")
	}
	if args == nil || args.RestApi == nil {
		return nil, errors.New("missing required argument 'RestApi'")
	}
	if args == nil {
		args = &ResourceArgs{}
	}
	var resource Resource
	err := ctx.RegisterResource("aws:apigateway/resource:Resource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResource gets an existing Resource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceState, opts ...pulumi.ResourceOption) (*Resource, error) {
	var resource Resource
	err := ctx.ReadResource("aws:apigateway/resource:Resource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Resource resources.
type resourceState struct {
	ParentId *string `pulumi:"parentId"`
	Path     *string `pulumi:"path"`
	PathPart *string `pulumi:"pathPart"`
	RestApi  *string `pulumi:"restApi"`
}

type ResourceState struct {
	ParentId pulumi.StringPtrInput
	Path     pulumi.StringPtrInput
	PathPart pulumi.StringPtrInput
	RestApi  pulumi.StringPtrInput
}

func (ResourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceState)(nil)).Elem()
}

type resourceArgs struct {
	ParentId string      `pulumi:"parentId"`
	PathPart string      `pulumi:"pathPart"`
	RestApi  interface{} `pulumi:"restApi"`
}

// The set of arguments for constructing a Resource resource.
type ResourceArgs struct {
	ParentId pulumi.StringInput
	PathPart pulumi.StringInput
	RestApi  pulumi.Input
}

func (ResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceArgs)(nil)).Elem()
}
