// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Integration struct {
	pulumi.CustomResourceState

	CacheKeyParameters    pulumi.StringArrayOutput `pulumi:"cacheKeyParameters"`
	CacheNamespace        pulumi.StringOutput      `pulumi:"cacheNamespace"`
	ConnectionId          pulumi.StringPtrOutput   `pulumi:"connectionId"`
	ConnectionType        pulumi.StringPtrOutput   `pulumi:"connectionType"`
	ContentHandling       pulumi.StringPtrOutput   `pulumi:"contentHandling"`
	Credentials           pulumi.StringPtrOutput   `pulumi:"credentials"`
	HttpMethod            pulumi.StringOutput      `pulumi:"httpMethod"`
	IntegrationHttpMethod pulumi.StringPtrOutput   `pulumi:"integrationHttpMethod"`
	PassthroughBehavior   pulumi.StringOutput      `pulumi:"passthroughBehavior"`
	RequestParameters     pulumi.StringMapOutput   `pulumi:"requestParameters"`
	RequestTemplates      pulumi.StringMapOutput   `pulumi:"requestTemplates"`
	ResourceId            pulumi.StringOutput      `pulumi:"resourceId"`
	RestApi               pulumi.StringOutput      `pulumi:"restApi"`
	TimeoutMilliseconds   pulumi.IntPtrOutput      `pulumi:"timeoutMilliseconds"`
	Type                  pulumi.StringOutput      `pulumi:"type"`
	Uri                   pulumi.StringPtrOutput   `pulumi:"uri"`
}

// NewIntegration registers a new resource with the given unique name, arguments, and options.
func NewIntegration(ctx *pulumi.Context,
	name string, args *IntegrationArgs, opts ...pulumi.ResourceOption) (*Integration, error) {
	if args == nil || args.HttpMethod == nil {
		return nil, errors.New("missing required argument 'HttpMethod'")
	}
	if args == nil || args.ResourceId == nil {
		return nil, errors.New("missing required argument 'ResourceId'")
	}
	if args == nil || args.RestApi == nil {
		return nil, errors.New("missing required argument 'RestApi'")
	}
	if args == nil || args.Type == nil {
		return nil, errors.New("missing required argument 'Type'")
	}
	if args == nil {
		args = &IntegrationArgs{}
	}
	var resource Integration
	err := ctx.RegisterResource("aws:apigateway/integration:Integration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIntegration gets an existing Integration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIntegration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IntegrationState, opts ...pulumi.ResourceOption) (*Integration, error) {
	var resource Integration
	err := ctx.ReadResource("aws:apigateway/integration:Integration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Integration resources.
type integrationState struct {
	CacheKeyParameters    []string          `pulumi:"cacheKeyParameters"`
	CacheNamespace        *string           `pulumi:"cacheNamespace"`
	ConnectionId          *string           `pulumi:"connectionId"`
	ConnectionType        *string           `pulumi:"connectionType"`
	ContentHandling       *string           `pulumi:"contentHandling"`
	Credentials           *string           `pulumi:"credentials"`
	HttpMethod            *string           `pulumi:"httpMethod"`
	IntegrationHttpMethod *string           `pulumi:"integrationHttpMethod"`
	PassthroughBehavior   *string           `pulumi:"passthroughBehavior"`
	RequestParameters     map[string]string `pulumi:"requestParameters"`
	RequestTemplates      map[string]string `pulumi:"requestTemplates"`
	ResourceId            *string           `pulumi:"resourceId"`
	RestApi               *string           `pulumi:"restApi"`
	TimeoutMilliseconds   *int              `pulumi:"timeoutMilliseconds"`
	Type                  *string           `pulumi:"type"`
	Uri                   *string           `pulumi:"uri"`
}

type IntegrationState struct {
	CacheKeyParameters    pulumi.StringArrayInput
	CacheNamespace        pulumi.StringPtrInput
	ConnectionId          pulumi.StringPtrInput
	ConnectionType        pulumi.StringPtrInput
	ContentHandling       pulumi.StringPtrInput
	Credentials           pulumi.StringPtrInput
	HttpMethod            pulumi.StringPtrInput
	IntegrationHttpMethod pulumi.StringPtrInput
	PassthroughBehavior   pulumi.StringPtrInput
	RequestParameters     pulumi.StringMapInput
	RequestTemplates      pulumi.StringMapInput
	ResourceId            pulumi.StringPtrInput
	RestApi               pulumi.StringPtrInput
	TimeoutMilliseconds   pulumi.IntPtrInput
	Type                  pulumi.StringPtrInput
	Uri                   pulumi.StringPtrInput
}

func (IntegrationState) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationState)(nil)).Elem()
}

type integrationArgs struct {
	CacheKeyParameters    []string          `pulumi:"cacheKeyParameters"`
	CacheNamespace        *string           `pulumi:"cacheNamespace"`
	ConnectionId          *string           `pulumi:"connectionId"`
	ConnectionType        *string           `pulumi:"connectionType"`
	ContentHandling       *string           `pulumi:"contentHandling"`
	Credentials           *string           `pulumi:"credentials"`
	HttpMethod            string            `pulumi:"httpMethod"`
	IntegrationHttpMethod *string           `pulumi:"integrationHttpMethod"`
	PassthroughBehavior   *string           `pulumi:"passthroughBehavior"`
	RequestParameters     map[string]string `pulumi:"requestParameters"`
	RequestTemplates      map[string]string `pulumi:"requestTemplates"`
	ResourceId            string            `pulumi:"resourceId"`
	RestApi               interface{}       `pulumi:"restApi"`
	TimeoutMilliseconds   *int              `pulumi:"timeoutMilliseconds"`
	Type                  string            `pulumi:"type"`
	Uri                   *string           `pulumi:"uri"`
}

// The set of arguments for constructing a Integration resource.
type IntegrationArgs struct {
	CacheKeyParameters    pulumi.StringArrayInput
	CacheNamespace        pulumi.StringPtrInput
	ConnectionId          pulumi.StringPtrInput
	ConnectionType        pulumi.StringPtrInput
	ContentHandling       pulumi.StringPtrInput
	Credentials           pulumi.StringPtrInput
	HttpMethod            pulumi.StringInput
	IntegrationHttpMethod pulumi.StringPtrInput
	PassthroughBehavior   pulumi.StringPtrInput
	RequestParameters     pulumi.StringMapInput
	RequestTemplates      pulumi.StringMapInput
	ResourceId            pulumi.StringInput
	RestApi               pulumi.Input
	TimeoutMilliseconds   pulumi.IntPtrInput
	Type                  pulumi.StringInput
	Uri                   pulumi.StringPtrInput
}

func (IntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationArgs)(nil)).Elem()
}
