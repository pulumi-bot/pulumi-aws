// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type UsagePlanKey struct {
	pulumi.CustomResourceState

	KeyId       pulumi.StringOutput `pulumi:"keyId"`
	KeyType     pulumi.StringOutput `pulumi:"keyType"`
	Name        pulumi.StringOutput `pulumi:"name"`
	UsagePlanId pulumi.StringOutput `pulumi:"usagePlanId"`
	Value       pulumi.StringOutput `pulumi:"value"`
}

// NewUsagePlanKey registers a new resource with the given unique name, arguments, and options.
func NewUsagePlanKey(ctx *pulumi.Context,
	name string, args *UsagePlanKeyArgs, opts ...pulumi.ResourceOption) (*UsagePlanKey, error) {
	if args == nil || args.KeyId == nil {
		return nil, errors.New("missing required argument 'KeyId'")
	}
	if args == nil || args.KeyType == nil {
		return nil, errors.New("missing required argument 'KeyType'")
	}
	if args == nil || args.UsagePlanId == nil {
		return nil, errors.New("missing required argument 'UsagePlanId'")
	}
	if args == nil {
		args = &UsagePlanKeyArgs{}
	}
	var resource UsagePlanKey
	err := ctx.RegisterResource("aws:apigateway/usagePlanKey:UsagePlanKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUsagePlanKey gets an existing UsagePlanKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUsagePlanKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UsagePlanKeyState, opts ...pulumi.ResourceOption) (*UsagePlanKey, error) {
	var resource UsagePlanKey
	err := ctx.ReadResource("aws:apigateway/usagePlanKey:UsagePlanKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UsagePlanKey resources.
type usagePlanKeyState struct {
	KeyId       *string `pulumi:"keyId"`
	KeyType     *string `pulumi:"keyType"`
	Name        *string `pulumi:"name"`
	UsagePlanId *string `pulumi:"usagePlanId"`
	Value       *string `pulumi:"value"`
}

type UsagePlanKeyState struct {
	KeyId       pulumi.StringPtrInput
	KeyType     pulumi.StringPtrInput
	Name        pulumi.StringPtrInput
	UsagePlanId pulumi.StringPtrInput
	Value       pulumi.StringPtrInput
}

func (UsagePlanKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*usagePlanKeyState)(nil)).Elem()
}

type usagePlanKeyArgs struct {
	KeyId       string `pulumi:"keyId"`
	KeyType     string `pulumi:"keyType"`
	UsagePlanId string `pulumi:"usagePlanId"`
}

// The set of arguments for constructing a UsagePlanKey resource.
type UsagePlanKeyArgs struct {
	KeyId       pulumi.StringInput
	KeyType     pulumi.StringInput
	UsagePlanId pulumi.StringInput
}

func (UsagePlanKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*usagePlanKeyArgs)(nil)).Elem()
}
