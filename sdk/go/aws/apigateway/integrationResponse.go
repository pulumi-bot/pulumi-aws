// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type IntegrationResponse struct {
	pulumi.CustomResourceState

	ContentHandling    pulumi.StringPtrOutput `pulumi:"contentHandling"`
	HttpMethod         pulumi.StringOutput    `pulumi:"httpMethod"`
	ResourceId         pulumi.StringOutput    `pulumi:"resourceId"`
	ResponseParameters pulumi.StringMapOutput `pulumi:"responseParameters"`
	ResponseTemplates  pulumi.StringMapOutput `pulumi:"responseTemplates"`
	RestApi            pulumi.StringOutput    `pulumi:"restApi"`
	SelectionPattern   pulumi.StringPtrOutput `pulumi:"selectionPattern"`
	StatusCode         pulumi.StringOutput    `pulumi:"statusCode"`
}

// NewIntegrationResponse registers a new resource with the given unique name, arguments, and options.
func NewIntegrationResponse(ctx *pulumi.Context,
	name string, args *IntegrationResponseArgs, opts ...pulumi.ResourceOption) (*IntegrationResponse, error) {
	if args == nil || args.HttpMethod == nil {
		return nil, errors.New("missing required argument 'HttpMethod'")
	}
	if args == nil || args.ResourceId == nil {
		return nil, errors.New("missing required argument 'ResourceId'")
	}
	if args == nil || args.RestApi == nil {
		return nil, errors.New("missing required argument 'RestApi'")
	}
	if args == nil || args.StatusCode == nil {
		return nil, errors.New("missing required argument 'StatusCode'")
	}
	if args == nil {
		args = &IntegrationResponseArgs{}
	}
	var resource IntegrationResponse
	err := ctx.RegisterResource("aws:apigateway/integrationResponse:IntegrationResponse", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIntegrationResponse gets an existing IntegrationResponse resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIntegrationResponse(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IntegrationResponseState, opts ...pulumi.ResourceOption) (*IntegrationResponse, error) {
	var resource IntegrationResponse
	err := ctx.ReadResource("aws:apigateway/integrationResponse:IntegrationResponse", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IntegrationResponse resources.
type integrationResponseState struct {
	ContentHandling    *string           `pulumi:"contentHandling"`
	HttpMethod         *string           `pulumi:"httpMethod"`
	ResourceId         *string           `pulumi:"resourceId"`
	ResponseParameters map[string]string `pulumi:"responseParameters"`
	ResponseTemplates  map[string]string `pulumi:"responseTemplates"`
	RestApi            *string           `pulumi:"restApi"`
	SelectionPattern   *string           `pulumi:"selectionPattern"`
	StatusCode         *string           `pulumi:"statusCode"`
}

type IntegrationResponseState struct {
	ContentHandling    pulumi.StringPtrInput
	HttpMethod         pulumi.StringPtrInput
	ResourceId         pulumi.StringPtrInput
	ResponseParameters pulumi.StringMapInput
	ResponseTemplates  pulumi.StringMapInput
	RestApi            pulumi.StringPtrInput
	SelectionPattern   pulumi.StringPtrInput
	StatusCode         pulumi.StringPtrInput
}

func (IntegrationResponseState) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationResponseState)(nil)).Elem()
}

type integrationResponseArgs struct {
	ContentHandling    *string           `pulumi:"contentHandling"`
	HttpMethod         string            `pulumi:"httpMethod"`
	ResourceId         string            `pulumi:"resourceId"`
	ResponseParameters map[string]string `pulumi:"responseParameters"`
	ResponseTemplates  map[string]string `pulumi:"responseTemplates"`
	RestApi            interface{}       `pulumi:"restApi"`
	SelectionPattern   *string           `pulumi:"selectionPattern"`
	StatusCode         string            `pulumi:"statusCode"`
}

// The set of arguments for constructing a IntegrationResponse resource.
type IntegrationResponseArgs struct {
	ContentHandling    pulumi.StringPtrInput
	HttpMethod         pulumi.StringInput
	ResourceId         pulumi.StringInput
	ResponseParameters pulumi.StringMapInput
	ResponseTemplates  pulumi.StringMapInput
	RestApi            pulumi.Input
	SelectionPattern   pulumi.StringPtrInput
	StatusCode         pulumi.StringInput
}

func (IntegrationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationResponseArgs)(nil)).Elem()
}
