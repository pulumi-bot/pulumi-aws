// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type DomainName struct {
	pulumi.CustomResourceState

	Arn                     pulumi.StringOutput                   `pulumi:"arn"`
	CertificateArn          pulumi.StringPtrOutput                `pulumi:"certificateArn"`
	CertificateBody         pulumi.StringPtrOutput                `pulumi:"certificateBody"`
	CertificateChain        pulumi.StringPtrOutput                `pulumi:"certificateChain"`
	CertificateName         pulumi.StringPtrOutput                `pulumi:"certificateName"`
	CertificatePrivateKey   pulumi.StringPtrOutput                `pulumi:"certificatePrivateKey"`
	CertificateUploadDate   pulumi.StringOutput                   `pulumi:"certificateUploadDate"`
	CloudfrontDomainName    pulumi.StringOutput                   `pulumi:"cloudfrontDomainName"`
	CloudfrontZoneId        pulumi.StringOutput                   `pulumi:"cloudfrontZoneId"`
	DomainName              pulumi.StringOutput                   `pulumi:"domainName"`
	EndpointConfiguration   DomainNameEndpointConfigurationOutput `pulumi:"endpointConfiguration"`
	RegionalCertificateArn  pulumi.StringPtrOutput                `pulumi:"regionalCertificateArn"`
	RegionalCertificateName pulumi.StringPtrOutput                `pulumi:"regionalCertificateName"`
	RegionalDomainName      pulumi.StringOutput                   `pulumi:"regionalDomainName"`
	RegionalZoneId          pulumi.StringOutput                   `pulumi:"regionalZoneId"`
	SecurityPolicy          pulumi.StringOutput                   `pulumi:"securityPolicy"`
	Tags                    pulumi.StringMapOutput                `pulumi:"tags"`
}

// NewDomainName registers a new resource with the given unique name, arguments, and options.
func NewDomainName(ctx *pulumi.Context,
	name string, args *DomainNameArgs, opts ...pulumi.ResourceOption) (*DomainName, error) {
	if args == nil || args.DomainName == nil {
		return nil, errors.New("missing required argument 'DomainName'")
	}
	if args == nil {
		args = &DomainNameArgs{}
	}
	var resource DomainName
	err := ctx.RegisterResource("aws:apigateway/domainName:DomainName", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainName gets an existing DomainName resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainName(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainNameState, opts ...pulumi.ResourceOption) (*DomainName, error) {
	var resource DomainName
	err := ctx.ReadResource("aws:apigateway/domainName:DomainName", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainName resources.
type domainNameState struct {
	Arn                     *string                          `pulumi:"arn"`
	CertificateArn          *string                          `pulumi:"certificateArn"`
	CertificateBody         *string                          `pulumi:"certificateBody"`
	CertificateChain        *string                          `pulumi:"certificateChain"`
	CertificateName         *string                          `pulumi:"certificateName"`
	CertificatePrivateKey   *string                          `pulumi:"certificatePrivateKey"`
	CertificateUploadDate   *string                          `pulumi:"certificateUploadDate"`
	CloudfrontDomainName    *string                          `pulumi:"cloudfrontDomainName"`
	CloudfrontZoneId        *string                          `pulumi:"cloudfrontZoneId"`
	DomainName              *string                          `pulumi:"domainName"`
	EndpointConfiguration   *DomainNameEndpointConfiguration `pulumi:"endpointConfiguration"`
	RegionalCertificateArn  *string                          `pulumi:"regionalCertificateArn"`
	RegionalCertificateName *string                          `pulumi:"regionalCertificateName"`
	RegionalDomainName      *string                          `pulumi:"regionalDomainName"`
	RegionalZoneId          *string                          `pulumi:"regionalZoneId"`
	SecurityPolicy          *string                          `pulumi:"securityPolicy"`
	Tags                    map[string]string                `pulumi:"tags"`
}

type DomainNameState struct {
	Arn                     pulumi.StringPtrInput
	CertificateArn          pulumi.StringPtrInput
	CertificateBody         pulumi.StringPtrInput
	CertificateChain        pulumi.StringPtrInput
	CertificateName         pulumi.StringPtrInput
	CertificatePrivateKey   pulumi.StringPtrInput
	CertificateUploadDate   pulumi.StringPtrInput
	CloudfrontDomainName    pulumi.StringPtrInput
	CloudfrontZoneId        pulumi.StringPtrInput
	DomainName              pulumi.StringPtrInput
	EndpointConfiguration   DomainNameEndpointConfigurationPtrInput
	RegionalCertificateArn  pulumi.StringPtrInput
	RegionalCertificateName pulumi.StringPtrInput
	RegionalDomainName      pulumi.StringPtrInput
	RegionalZoneId          pulumi.StringPtrInput
	SecurityPolicy          pulumi.StringPtrInput
	Tags                    pulumi.StringMapInput
}

func (DomainNameState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainNameState)(nil)).Elem()
}

type domainNameArgs struct {
	CertificateArn          *string                          `pulumi:"certificateArn"`
	CertificateBody         *string                          `pulumi:"certificateBody"`
	CertificateChain        *string                          `pulumi:"certificateChain"`
	CertificateName         *string                          `pulumi:"certificateName"`
	CertificatePrivateKey   *string                          `pulumi:"certificatePrivateKey"`
	DomainName              string                           `pulumi:"domainName"`
	EndpointConfiguration   *DomainNameEndpointConfiguration `pulumi:"endpointConfiguration"`
	RegionalCertificateArn  *string                          `pulumi:"regionalCertificateArn"`
	RegionalCertificateName *string                          `pulumi:"regionalCertificateName"`
	SecurityPolicy          *string                          `pulumi:"securityPolicy"`
	Tags                    map[string]string                `pulumi:"tags"`
}

// The set of arguments for constructing a DomainName resource.
type DomainNameArgs struct {
	CertificateArn          pulumi.StringPtrInput
	CertificateBody         pulumi.StringPtrInput
	CertificateChain        pulumi.StringPtrInput
	CertificateName         pulumi.StringPtrInput
	CertificatePrivateKey   pulumi.StringPtrInput
	DomainName              pulumi.StringInput
	EndpointConfiguration   DomainNameEndpointConfigurationPtrInput
	RegionalCertificateArn  pulumi.StringPtrInput
	RegionalCertificateName pulumi.StringPtrInput
	SecurityPolicy          pulumi.StringPtrInput
	Tags                    pulumi.StringMapInput
}

func (DomainNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainNameArgs)(nil)).Elem()
}
