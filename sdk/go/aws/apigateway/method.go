// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Method struct {
	pulumi.CustomResourceState

	ApiKeyRequired      pulumi.BoolPtrOutput     `pulumi:"apiKeyRequired"`
	Authorization       pulumi.StringOutput      `pulumi:"authorization"`
	AuthorizationScopes pulumi.StringArrayOutput `pulumi:"authorizationScopes"`
	AuthorizerId        pulumi.StringPtrOutput   `pulumi:"authorizerId"`
	HttpMethod          pulumi.StringOutput      `pulumi:"httpMethod"`
	RequestModels       pulumi.StringMapOutput   `pulumi:"requestModels"`
	RequestParameters   pulumi.BoolMapOutput     `pulumi:"requestParameters"`
	RequestValidatorId  pulumi.StringPtrOutput   `pulumi:"requestValidatorId"`
	ResourceId          pulumi.StringOutput      `pulumi:"resourceId"`
	RestApi             pulumi.StringOutput      `pulumi:"restApi"`
}

// NewMethod registers a new resource with the given unique name, arguments, and options.
func NewMethod(ctx *pulumi.Context,
	name string, args *MethodArgs, opts ...pulumi.ResourceOption) (*Method, error) {
	if args == nil || args.Authorization == nil {
		return nil, errors.New("missing required argument 'Authorization'")
	}
	if args == nil || args.HttpMethod == nil {
		return nil, errors.New("missing required argument 'HttpMethod'")
	}
	if args == nil || args.ResourceId == nil {
		return nil, errors.New("missing required argument 'ResourceId'")
	}
	if args == nil || args.RestApi == nil {
		return nil, errors.New("missing required argument 'RestApi'")
	}
	if args == nil {
		args = &MethodArgs{}
	}
	var resource Method
	err := ctx.RegisterResource("aws:apigateway/method:Method", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMethod gets an existing Method resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMethod(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MethodState, opts ...pulumi.ResourceOption) (*Method, error) {
	var resource Method
	err := ctx.ReadResource("aws:apigateway/method:Method", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Method resources.
type methodState struct {
	ApiKeyRequired      *bool             `pulumi:"apiKeyRequired"`
	Authorization       *string           `pulumi:"authorization"`
	AuthorizationScopes []string          `pulumi:"authorizationScopes"`
	AuthorizerId        *string           `pulumi:"authorizerId"`
	HttpMethod          *string           `pulumi:"httpMethod"`
	RequestModels       map[string]string `pulumi:"requestModels"`
	RequestParameters   map[string]bool   `pulumi:"requestParameters"`
	RequestValidatorId  *string           `pulumi:"requestValidatorId"`
	ResourceId          *string           `pulumi:"resourceId"`
	RestApi             *string           `pulumi:"restApi"`
}

type MethodState struct {
	ApiKeyRequired      pulumi.BoolPtrInput
	Authorization       pulumi.StringPtrInput
	AuthorizationScopes pulumi.StringArrayInput
	AuthorizerId        pulumi.StringPtrInput
	HttpMethod          pulumi.StringPtrInput
	RequestModels       pulumi.StringMapInput
	RequestParameters   pulumi.BoolMapInput
	RequestValidatorId  pulumi.StringPtrInput
	ResourceId          pulumi.StringPtrInput
	RestApi             pulumi.StringPtrInput
}

func (MethodState) ElementType() reflect.Type {
	return reflect.TypeOf((*methodState)(nil)).Elem()
}

type methodArgs struct {
	ApiKeyRequired      *bool             `pulumi:"apiKeyRequired"`
	Authorization       string            `pulumi:"authorization"`
	AuthorizationScopes []string          `pulumi:"authorizationScopes"`
	AuthorizerId        *string           `pulumi:"authorizerId"`
	HttpMethod          string            `pulumi:"httpMethod"`
	RequestModels       map[string]string `pulumi:"requestModels"`
	RequestParameters   map[string]bool   `pulumi:"requestParameters"`
	RequestValidatorId  *string           `pulumi:"requestValidatorId"`
	ResourceId          string            `pulumi:"resourceId"`
	RestApi             interface{}       `pulumi:"restApi"`
}

// The set of arguments for constructing a Method resource.
type MethodArgs struct {
	ApiKeyRequired      pulumi.BoolPtrInput
	Authorization       pulumi.StringInput
	AuthorizationScopes pulumi.StringArrayInput
	AuthorizerId        pulumi.StringPtrInput
	HttpMethod          pulumi.StringInput
	RequestModels       pulumi.StringMapInput
	RequestParameters   pulumi.BoolMapInput
	RequestValidatorId  pulumi.StringPtrInput
	ResourceId          pulumi.StringInput
	RestApi             pulumi.Input
}

func (MethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*methodArgs)(nil)).Elem()
}
