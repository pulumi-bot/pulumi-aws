// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Authorizer struct {
	pulumi.CustomResourceState

	AuthorizerCredentials        pulumi.StringPtrOutput   `pulumi:"authorizerCredentials"`
	AuthorizerResultTtlInSeconds pulumi.IntPtrOutput      `pulumi:"authorizerResultTtlInSeconds"`
	AuthorizerUri                pulumi.StringPtrOutput   `pulumi:"authorizerUri"`
	IdentitySource               pulumi.StringPtrOutput   `pulumi:"identitySource"`
	IdentityValidationExpression pulumi.StringPtrOutput   `pulumi:"identityValidationExpression"`
	Name                         pulumi.StringOutput      `pulumi:"name"`
	ProviderArns                 pulumi.StringArrayOutput `pulumi:"providerArns"`
	RestApi                      pulumi.StringOutput      `pulumi:"restApi"`
	Type                         pulumi.StringPtrOutput   `pulumi:"type"`
}

// NewAuthorizer registers a new resource with the given unique name, arguments, and options.
func NewAuthorizer(ctx *pulumi.Context,
	name string, args *AuthorizerArgs, opts ...pulumi.ResourceOption) (*Authorizer, error) {
	if args == nil || args.RestApi == nil {
		return nil, errors.New("missing required argument 'RestApi'")
	}
	if args == nil {
		args = &AuthorizerArgs{}
	}
	var resource Authorizer
	err := ctx.RegisterResource("aws:apigateway/authorizer:Authorizer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAuthorizer gets an existing Authorizer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAuthorizer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AuthorizerState, opts ...pulumi.ResourceOption) (*Authorizer, error) {
	var resource Authorizer
	err := ctx.ReadResource("aws:apigateway/authorizer:Authorizer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Authorizer resources.
type authorizerState struct {
	AuthorizerCredentials        *string  `pulumi:"authorizerCredentials"`
	AuthorizerResultTtlInSeconds *int     `pulumi:"authorizerResultTtlInSeconds"`
	AuthorizerUri                *string  `pulumi:"authorizerUri"`
	IdentitySource               *string  `pulumi:"identitySource"`
	IdentityValidationExpression *string  `pulumi:"identityValidationExpression"`
	Name                         *string  `pulumi:"name"`
	ProviderArns                 []string `pulumi:"providerArns"`
	RestApi                      *string  `pulumi:"restApi"`
	Type                         *string  `pulumi:"type"`
}

type AuthorizerState struct {
	AuthorizerCredentials        pulumi.StringPtrInput
	AuthorizerResultTtlInSeconds pulumi.IntPtrInput
	AuthorizerUri                pulumi.StringPtrInput
	IdentitySource               pulumi.StringPtrInput
	IdentityValidationExpression pulumi.StringPtrInput
	Name                         pulumi.StringPtrInput
	ProviderArns                 pulumi.StringArrayInput
	RestApi                      pulumi.StringPtrInput
	Type                         pulumi.StringPtrInput
}

func (AuthorizerState) ElementType() reflect.Type {
	return reflect.TypeOf((*authorizerState)(nil)).Elem()
}

type authorizerArgs struct {
	AuthorizerCredentials        *string     `pulumi:"authorizerCredentials"`
	AuthorizerResultTtlInSeconds *int        `pulumi:"authorizerResultTtlInSeconds"`
	AuthorizerUri                *string     `pulumi:"authorizerUri"`
	IdentitySource               *string     `pulumi:"identitySource"`
	IdentityValidationExpression *string     `pulumi:"identityValidationExpression"`
	Name                         *string     `pulumi:"name"`
	ProviderArns                 []string    `pulumi:"providerArns"`
	RestApi                      interface{} `pulumi:"restApi"`
	Type                         *string     `pulumi:"type"`
}

// The set of arguments for constructing a Authorizer resource.
type AuthorizerArgs struct {
	AuthorizerCredentials        pulumi.StringPtrInput
	AuthorizerResultTtlInSeconds pulumi.IntPtrInput
	AuthorizerUri                pulumi.StringPtrInput
	IdentitySource               pulumi.StringPtrInput
	IdentityValidationExpression pulumi.StringPtrInput
	Name                         pulumi.StringPtrInput
	ProviderArns                 pulumi.StringArrayInput
	RestApi                      pulumi.Input
	Type                         pulumi.StringPtrInput
}

func (AuthorizerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*authorizerArgs)(nil)).Elem()
}
