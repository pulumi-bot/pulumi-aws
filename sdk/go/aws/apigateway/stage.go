// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Stage struct {
	pulumi.CustomResourceState

	AccessLogSettings    StageAccessLogSettingsPtrOutput `pulumi:"accessLogSettings"`
	Arn                  pulumi.StringOutput             `pulumi:"arn"`
	CacheClusterEnabled  pulumi.BoolPtrOutput            `pulumi:"cacheClusterEnabled"`
	CacheClusterSize     pulumi.StringPtrOutput          `pulumi:"cacheClusterSize"`
	ClientCertificateId  pulumi.StringPtrOutput          `pulumi:"clientCertificateId"`
	Deployment           pulumi.StringOutput             `pulumi:"deployment"`
	Description          pulumi.StringPtrOutput          `pulumi:"description"`
	DocumentationVersion pulumi.StringPtrOutput          `pulumi:"documentationVersion"`
	ExecutionArn         pulumi.StringOutput             `pulumi:"executionArn"`
	InvokeUrl            pulumi.StringOutput             `pulumi:"invokeUrl"`
	RestApi              pulumi.StringOutput             `pulumi:"restApi"`
	StageName            pulumi.StringOutput             `pulumi:"stageName"`
	Tags                 pulumi.StringMapOutput          `pulumi:"tags"`
	Variables            pulumi.StringMapOutput          `pulumi:"variables"`
	XrayTracingEnabled   pulumi.BoolPtrOutput            `pulumi:"xrayTracingEnabled"`
}

// NewStage registers a new resource with the given unique name, arguments, and options.
func NewStage(ctx *pulumi.Context,
	name string, args *StageArgs, opts ...pulumi.ResourceOption) (*Stage, error) {
	if args == nil || args.Deployment == nil {
		return nil, errors.New("missing required argument 'Deployment'")
	}
	if args == nil || args.RestApi == nil {
		return nil, errors.New("missing required argument 'RestApi'")
	}
	if args == nil || args.StageName == nil {
		return nil, errors.New("missing required argument 'StageName'")
	}
	if args == nil {
		args = &StageArgs{}
	}
	var resource Stage
	err := ctx.RegisterResource("aws:apigateway/stage:Stage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStage gets an existing Stage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StageState, opts ...pulumi.ResourceOption) (*Stage, error) {
	var resource Stage
	err := ctx.ReadResource("aws:apigateway/stage:Stage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Stage resources.
type stageState struct {
	AccessLogSettings    *StageAccessLogSettings `pulumi:"accessLogSettings"`
	Arn                  *string                 `pulumi:"arn"`
	CacheClusterEnabled  *bool                   `pulumi:"cacheClusterEnabled"`
	CacheClusterSize     *string                 `pulumi:"cacheClusterSize"`
	ClientCertificateId  *string                 `pulumi:"clientCertificateId"`
	Deployment           *string                 `pulumi:"deployment"`
	Description          *string                 `pulumi:"description"`
	DocumentationVersion *string                 `pulumi:"documentationVersion"`
	ExecutionArn         *string                 `pulumi:"executionArn"`
	InvokeUrl            *string                 `pulumi:"invokeUrl"`
	RestApi              *string                 `pulumi:"restApi"`
	StageName            *string                 `pulumi:"stageName"`
	Tags                 map[string]string       `pulumi:"tags"`
	Variables            map[string]string       `pulumi:"variables"`
	XrayTracingEnabled   *bool                   `pulumi:"xrayTracingEnabled"`
}

type StageState struct {
	AccessLogSettings    StageAccessLogSettingsPtrInput
	Arn                  pulumi.StringPtrInput
	CacheClusterEnabled  pulumi.BoolPtrInput
	CacheClusterSize     pulumi.StringPtrInput
	ClientCertificateId  pulumi.StringPtrInput
	Deployment           pulumi.StringPtrInput
	Description          pulumi.StringPtrInput
	DocumentationVersion pulumi.StringPtrInput
	ExecutionArn         pulumi.StringPtrInput
	InvokeUrl            pulumi.StringPtrInput
	RestApi              pulumi.StringPtrInput
	StageName            pulumi.StringPtrInput
	Tags                 pulumi.StringMapInput
	Variables            pulumi.StringMapInput
	XrayTracingEnabled   pulumi.BoolPtrInput
}

func (StageState) ElementType() reflect.Type {
	return reflect.TypeOf((*stageState)(nil)).Elem()
}

type stageArgs struct {
	AccessLogSettings    *StageAccessLogSettings `pulumi:"accessLogSettings"`
	CacheClusterEnabled  *bool                   `pulumi:"cacheClusterEnabled"`
	CacheClusterSize     *string                 `pulumi:"cacheClusterSize"`
	ClientCertificateId  *string                 `pulumi:"clientCertificateId"`
	Deployment           interface{}             `pulumi:"deployment"`
	Description          *string                 `pulumi:"description"`
	DocumentationVersion *string                 `pulumi:"documentationVersion"`
	RestApi              interface{}             `pulumi:"restApi"`
	StageName            string                  `pulumi:"stageName"`
	Tags                 map[string]string       `pulumi:"tags"`
	Variables            map[string]string       `pulumi:"variables"`
	XrayTracingEnabled   *bool                   `pulumi:"xrayTracingEnabled"`
}

// The set of arguments for constructing a Stage resource.
type StageArgs struct {
	AccessLogSettings    StageAccessLogSettingsPtrInput
	CacheClusterEnabled  pulumi.BoolPtrInput
	CacheClusterSize     pulumi.StringPtrInput
	ClientCertificateId  pulumi.StringPtrInput
	Deployment           pulumi.Input
	Description          pulumi.StringPtrInput
	DocumentationVersion pulumi.StringPtrInput
	RestApi              pulumi.Input
	StageName            pulumi.StringInput
	Tags                 pulumi.StringMapInput
	Variables            pulumi.StringMapInput
	XrayTracingEnabled   pulumi.BoolPtrInput
}

func (StageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*stageArgs)(nil)).Elem()
}
