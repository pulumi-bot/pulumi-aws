// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package UsagePlanQuotaSettings

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type UsagePlanQuotaSettings struct {
	// The maximum number of requests that can be made in a given time period.
	Limit int `pulumi:"limit"`
	// The number of requests subtracted from the given limit in the initial time period.
	Offset *int `pulumi:"offset"`
	// The time period in which the limit applies. Valid values are "DAY", "WEEK" or "MONTH".
	Period string `pulumi:"period"`
}

type UsagePlanQuotaSettingsInput interface {
	pulumi.Input

	ToUsagePlanQuotaSettingsOutput() UsagePlanQuotaSettingsOutput
	ToUsagePlanQuotaSettingsOutputWithContext(context.Context) UsagePlanQuotaSettingsOutput
}

type UsagePlanQuotaSettingsArgs struct {
	// The maximum number of requests that can be made in a given time period.
	Limit pulumi.IntInput `pulumi:"limit"`
	// The number of requests subtracted from the given limit in the initial time period.
	Offset pulumi.IntPtrInput `pulumi:"offset"`
	// The time period in which the limit applies. Valid values are "DAY", "WEEK" or "MONTH".
	Period pulumi.StringInput `pulumi:"period"`
}

func (UsagePlanQuotaSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UsagePlanQuotaSettings)(nil)).Elem()
}

func (i UsagePlanQuotaSettingsArgs) ToUsagePlanQuotaSettingsOutput() UsagePlanQuotaSettingsOutput {
	return i.ToUsagePlanQuotaSettingsOutputWithContext(context.Background())
}

func (i UsagePlanQuotaSettingsArgs) ToUsagePlanQuotaSettingsOutputWithContext(ctx context.Context) UsagePlanQuotaSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsagePlanQuotaSettingsOutput)
}

func (i UsagePlanQuotaSettingsArgs) ToUsagePlanQuotaSettingsPtrOutput() UsagePlanQuotaSettingsPtrOutput {
	return i.ToUsagePlanQuotaSettingsPtrOutputWithContext(context.Background())
}

func (i UsagePlanQuotaSettingsArgs) ToUsagePlanQuotaSettingsPtrOutputWithContext(ctx context.Context) UsagePlanQuotaSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsagePlanQuotaSettingsOutput).ToUsagePlanQuotaSettingsPtrOutputWithContext(ctx)
}

type UsagePlanQuotaSettingsPtrInput interface {
	pulumi.Input

	ToUsagePlanQuotaSettingsPtrOutput() UsagePlanQuotaSettingsPtrOutput
	ToUsagePlanQuotaSettingsPtrOutputWithContext(context.Context) UsagePlanQuotaSettingsPtrOutput
}

type usagePlanQuotaSettingsPtrType UsagePlanQuotaSettingsArgs

func UsagePlanQuotaSettingsPtr(v *UsagePlanQuotaSettingsArgs) UsagePlanQuotaSettingsPtrInput {	return (*usagePlanQuotaSettingsPtrType)(v)
}

func (*usagePlanQuotaSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UsagePlanQuotaSettings)(nil)).Elem()
}

func (i *usagePlanQuotaSettingsPtrType) ToUsagePlanQuotaSettingsPtrOutput() UsagePlanQuotaSettingsPtrOutput {
	return i.ToUsagePlanQuotaSettingsPtrOutputWithContext(context.Background())
}

func (i *usagePlanQuotaSettingsPtrType) ToUsagePlanQuotaSettingsPtrOutputWithContext(ctx context.Context) UsagePlanQuotaSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsagePlanQuotaSettingsPtrOutput)
}

type UsagePlanQuotaSettingsOutput struct { *pulumi.OutputState }

func (UsagePlanQuotaSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UsagePlanQuotaSettings)(nil)).Elem()
}

func (o UsagePlanQuotaSettingsOutput) ToUsagePlanQuotaSettingsOutput() UsagePlanQuotaSettingsOutput {
	return o
}

func (o UsagePlanQuotaSettingsOutput) ToUsagePlanQuotaSettingsOutputWithContext(ctx context.Context) UsagePlanQuotaSettingsOutput {
	return o
}

func (o UsagePlanQuotaSettingsOutput) ToUsagePlanQuotaSettingsPtrOutput() UsagePlanQuotaSettingsPtrOutput {
	return o.ToUsagePlanQuotaSettingsPtrOutputWithContext(context.Background())
}

func (o UsagePlanQuotaSettingsOutput) ToUsagePlanQuotaSettingsPtrOutputWithContext(ctx context.Context) UsagePlanQuotaSettingsPtrOutput {
	return o.ApplyT(func(v UsagePlanQuotaSettings) *UsagePlanQuotaSettings {
		return &v
	}).(UsagePlanQuotaSettingsPtrOutput)
}
// The maximum number of requests that can be made in a given time period.
func (o UsagePlanQuotaSettingsOutput) Limit() pulumi.IntOutput {
	return o.ApplyT(func (v UsagePlanQuotaSettings) int { return v.Limit }).(pulumi.IntOutput)
}

// The number of requests subtracted from the given limit in the initial time period.
func (o UsagePlanQuotaSettingsOutput) Offset() pulumi.IntPtrOutput {
	return o.ApplyT(func (v UsagePlanQuotaSettings) *int { return v.Offset }).(pulumi.IntPtrOutput)
}

// The time period in which the limit applies. Valid values are "DAY", "WEEK" or "MONTH".
func (o UsagePlanQuotaSettingsOutput) Period() pulumi.StringOutput {
	return o.ApplyT(func (v UsagePlanQuotaSettings) string { return v.Period }).(pulumi.StringOutput)
}

type UsagePlanQuotaSettingsPtrOutput struct { *pulumi.OutputState}

func (UsagePlanQuotaSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UsagePlanQuotaSettings)(nil)).Elem()
}

func (o UsagePlanQuotaSettingsPtrOutput) ToUsagePlanQuotaSettingsPtrOutput() UsagePlanQuotaSettingsPtrOutput {
	return o
}

func (o UsagePlanQuotaSettingsPtrOutput) ToUsagePlanQuotaSettingsPtrOutputWithContext(ctx context.Context) UsagePlanQuotaSettingsPtrOutput {
	return o
}

func (o UsagePlanQuotaSettingsPtrOutput) Elem() UsagePlanQuotaSettingsOutput {
	return o.ApplyT(func (v *UsagePlanQuotaSettings) UsagePlanQuotaSettings { return *v }).(UsagePlanQuotaSettingsOutput)
}

// The maximum number of requests that can be made in a given time period.
func (o UsagePlanQuotaSettingsPtrOutput) Limit() pulumi.IntOutput {
	return o.ApplyT(func (v UsagePlanQuotaSettings) int { return v.Limit }).(pulumi.IntOutput)
}

// The number of requests subtracted from the given limit in the initial time period.
func (o UsagePlanQuotaSettingsPtrOutput) Offset() pulumi.IntPtrOutput {
	return o.ApplyT(func (v UsagePlanQuotaSettings) *int { return v.Offset }).(pulumi.IntPtrOutput)
}

// The time period in which the limit applies. Valid values are "DAY", "WEEK" or "MONTH".
func (o UsagePlanQuotaSettingsPtrOutput) Period() pulumi.StringOutput {
	return o.ApplyT(func (v UsagePlanQuotaSettings) string { return v.Period }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(UsagePlanQuotaSettingsOutput{})
	pulumi.RegisterOutputType(UsagePlanQuotaSettingsPtrOutput{})
}
