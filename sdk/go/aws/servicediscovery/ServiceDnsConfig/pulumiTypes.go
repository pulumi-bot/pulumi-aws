// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ServiceDnsConfig

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-aws/servicediscovery/ServiceDnsConfigDnsRecord"
)

type ServiceDnsConfig struct {
	// An array that contains one DnsRecord object for each resource record set.
	DnsRecords []servicediscoveryServiceDnsConfigDnsRecord.ServiceDnsConfigDnsRecord `pulumi:"dnsRecords"`
	// The ID of the namespace to use for DNS configuration.
	NamespaceId string `pulumi:"namespaceId"`
	// The routing policy that you want to apply to all records that Route 53 creates when you register an instance and specify the service. Valid Values: MULTIVALUE, WEIGHTED
	RoutingPolicy *string `pulumi:"routingPolicy"`
}

type ServiceDnsConfigInput interface {
	pulumi.Input

	ToServiceDnsConfigOutput() ServiceDnsConfigOutput
	ToServiceDnsConfigOutputWithContext(context.Context) ServiceDnsConfigOutput
}

type ServiceDnsConfigArgs struct {
	// An array that contains one DnsRecord object for each resource record set.
	DnsRecords servicediscoveryServiceDnsConfigDnsRecord.ServiceDnsConfigDnsRecordArrayInput `pulumi:"dnsRecords"`
	// The ID of the namespace to use for DNS configuration.
	NamespaceId pulumi.StringInput `pulumi:"namespaceId"`
	// The routing policy that you want to apply to all records that Route 53 creates when you register an instance and specify the service. Valid Values: MULTIVALUE, WEIGHTED
	RoutingPolicy pulumi.StringPtrInput `pulumi:"routingPolicy"`
}

func (ServiceDnsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDnsConfig)(nil)).Elem()
}

func (i ServiceDnsConfigArgs) ToServiceDnsConfigOutput() ServiceDnsConfigOutput {
	return i.ToServiceDnsConfigOutputWithContext(context.Background())
}

func (i ServiceDnsConfigArgs) ToServiceDnsConfigOutputWithContext(ctx context.Context) ServiceDnsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDnsConfigOutput)
}

func (i ServiceDnsConfigArgs) ToServiceDnsConfigPtrOutput() ServiceDnsConfigPtrOutput {
	return i.ToServiceDnsConfigPtrOutputWithContext(context.Background())
}

func (i ServiceDnsConfigArgs) ToServiceDnsConfigPtrOutputWithContext(ctx context.Context) ServiceDnsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDnsConfigOutput).ToServiceDnsConfigPtrOutputWithContext(ctx)
}

type ServiceDnsConfigPtrInput interface {
	pulumi.Input

	ToServiceDnsConfigPtrOutput() ServiceDnsConfigPtrOutput
	ToServiceDnsConfigPtrOutputWithContext(context.Context) ServiceDnsConfigPtrOutput
}

type serviceDnsConfigPtrType ServiceDnsConfigArgs

func ServiceDnsConfigPtr(v *ServiceDnsConfigArgs) ServiceDnsConfigPtrInput {	return (*serviceDnsConfigPtrType)(v)
}

func (*serviceDnsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDnsConfig)(nil)).Elem()
}

func (i *serviceDnsConfigPtrType) ToServiceDnsConfigPtrOutput() ServiceDnsConfigPtrOutput {
	return i.ToServiceDnsConfigPtrOutputWithContext(context.Background())
}

func (i *serviceDnsConfigPtrType) ToServiceDnsConfigPtrOutputWithContext(ctx context.Context) ServiceDnsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDnsConfigPtrOutput)
}

type ServiceDnsConfigOutput struct { *pulumi.OutputState }

func (ServiceDnsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDnsConfig)(nil)).Elem()
}

func (o ServiceDnsConfigOutput) ToServiceDnsConfigOutput() ServiceDnsConfigOutput {
	return o
}

func (o ServiceDnsConfigOutput) ToServiceDnsConfigOutputWithContext(ctx context.Context) ServiceDnsConfigOutput {
	return o
}

func (o ServiceDnsConfigOutput) ToServiceDnsConfigPtrOutput() ServiceDnsConfigPtrOutput {
	return o.ToServiceDnsConfigPtrOutputWithContext(context.Background())
}

func (o ServiceDnsConfigOutput) ToServiceDnsConfigPtrOutputWithContext(ctx context.Context) ServiceDnsConfigPtrOutput {
	return o.ApplyT(func(v ServiceDnsConfig) *ServiceDnsConfig {
		return &v
	}).(ServiceDnsConfigPtrOutput)
}
// An array that contains one DnsRecord object for each resource record set.
func (o ServiceDnsConfigOutput) DnsRecords() servicediscoveryServiceDnsConfigDnsRecord.ServiceDnsConfigDnsRecordArrayOutput {
	return o.ApplyT(func (v ServiceDnsConfig) []servicediscoveryServiceDnsConfigDnsRecord.ServiceDnsConfigDnsRecord { return v.DnsRecords }).(servicediscoveryServiceDnsConfigDnsRecord.ServiceDnsConfigDnsRecordArrayOutput)
}

// The ID of the namespace to use for DNS configuration.
func (o ServiceDnsConfigOutput) NamespaceId() pulumi.StringOutput {
	return o.ApplyT(func (v ServiceDnsConfig) string { return v.NamespaceId }).(pulumi.StringOutput)
}

// The routing policy that you want to apply to all records that Route 53 creates when you register an instance and specify the service. Valid Values: MULTIVALUE, WEIGHTED
func (o ServiceDnsConfigOutput) RoutingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceDnsConfig) *string { return v.RoutingPolicy }).(pulumi.StringPtrOutput)
}

type ServiceDnsConfigPtrOutput struct { *pulumi.OutputState}

func (ServiceDnsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDnsConfig)(nil)).Elem()
}

func (o ServiceDnsConfigPtrOutput) ToServiceDnsConfigPtrOutput() ServiceDnsConfigPtrOutput {
	return o
}

func (o ServiceDnsConfigPtrOutput) ToServiceDnsConfigPtrOutputWithContext(ctx context.Context) ServiceDnsConfigPtrOutput {
	return o
}

func (o ServiceDnsConfigPtrOutput) Elem() ServiceDnsConfigOutput {
	return o.ApplyT(func (v *ServiceDnsConfig) ServiceDnsConfig { return *v }).(ServiceDnsConfigOutput)
}

// An array that contains one DnsRecord object for each resource record set.
func (o ServiceDnsConfigPtrOutput) DnsRecords() servicediscoveryServiceDnsConfigDnsRecord.ServiceDnsConfigDnsRecordArrayOutput {
	return o.ApplyT(func (v ServiceDnsConfig) []servicediscoveryServiceDnsConfigDnsRecord.ServiceDnsConfigDnsRecord { return v.DnsRecords }).(servicediscoveryServiceDnsConfigDnsRecord.ServiceDnsConfigDnsRecordArrayOutput)
}

// The ID of the namespace to use for DNS configuration.
func (o ServiceDnsConfigPtrOutput) NamespaceId() pulumi.StringOutput {
	return o.ApplyT(func (v ServiceDnsConfig) string { return v.NamespaceId }).(pulumi.StringOutput)
}

// The routing policy that you want to apply to all records that Route 53 creates when you register an instance and specify the service. Valid Values: MULTIVALUE, WEIGHTED
func (o ServiceDnsConfigPtrOutput) RoutingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServiceDnsConfig) *string { return v.RoutingPolicy }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ServiceDnsConfigOutput{})
	pulumi.RegisterOutputType(ServiceDnsConfigPtrOutput{})
}
