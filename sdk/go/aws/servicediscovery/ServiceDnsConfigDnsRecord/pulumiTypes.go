// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ServiceDnsConfigDnsRecord

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ServiceDnsConfigDnsRecord struct {
	// The amount of time, in seconds, that you want DNS resolvers to cache the settings for this resource record set.
	Ttl int `pulumi:"ttl"`
	// The type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy. Valid Values: HTTP, HTTPS, TCP
	Type string `pulumi:"type"`
}

type ServiceDnsConfigDnsRecordInput interface {
	pulumi.Input

	ToServiceDnsConfigDnsRecordOutput() ServiceDnsConfigDnsRecordOutput
	ToServiceDnsConfigDnsRecordOutputWithContext(context.Context) ServiceDnsConfigDnsRecordOutput
}

type ServiceDnsConfigDnsRecordArgs struct {
	// The amount of time, in seconds, that you want DNS resolvers to cache the settings for this resource record set.
	Ttl pulumi.IntInput `pulumi:"ttl"`
	// The type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy. Valid Values: HTTP, HTTPS, TCP
	Type pulumi.StringInput `pulumi:"type"`
}

func (ServiceDnsConfigDnsRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDnsConfigDnsRecord)(nil)).Elem()
}

func (i ServiceDnsConfigDnsRecordArgs) ToServiceDnsConfigDnsRecordOutput() ServiceDnsConfigDnsRecordOutput {
	return i.ToServiceDnsConfigDnsRecordOutputWithContext(context.Background())
}

func (i ServiceDnsConfigDnsRecordArgs) ToServiceDnsConfigDnsRecordOutputWithContext(ctx context.Context) ServiceDnsConfigDnsRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDnsConfigDnsRecordOutput)
}

type ServiceDnsConfigDnsRecordArrayInput interface {
	pulumi.Input

	ToServiceDnsConfigDnsRecordArrayOutput() ServiceDnsConfigDnsRecordArrayOutput
	ToServiceDnsConfigDnsRecordArrayOutputWithContext(context.Context) ServiceDnsConfigDnsRecordArrayOutput
}

type ServiceDnsConfigDnsRecordArray []ServiceDnsConfigDnsRecordInput

func (ServiceDnsConfigDnsRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceDnsConfigDnsRecord)(nil)).Elem()
}

func (i ServiceDnsConfigDnsRecordArray) ToServiceDnsConfigDnsRecordArrayOutput() ServiceDnsConfigDnsRecordArrayOutput {
	return i.ToServiceDnsConfigDnsRecordArrayOutputWithContext(context.Background())
}

func (i ServiceDnsConfigDnsRecordArray) ToServiceDnsConfigDnsRecordArrayOutputWithContext(ctx context.Context) ServiceDnsConfigDnsRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDnsConfigDnsRecordArrayOutput)
}

type ServiceDnsConfigDnsRecordOutput struct { *pulumi.OutputState }

func (ServiceDnsConfigDnsRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDnsConfigDnsRecord)(nil)).Elem()
}

func (o ServiceDnsConfigDnsRecordOutput) ToServiceDnsConfigDnsRecordOutput() ServiceDnsConfigDnsRecordOutput {
	return o
}

func (o ServiceDnsConfigDnsRecordOutput) ToServiceDnsConfigDnsRecordOutputWithContext(ctx context.Context) ServiceDnsConfigDnsRecordOutput {
	return o
}

// The amount of time, in seconds, that you want DNS resolvers to cache the settings for this resource record set.
func (o ServiceDnsConfigDnsRecordOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func (v ServiceDnsConfigDnsRecord) int { return v.Ttl }).(pulumi.IntOutput)
}

// The type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy. Valid Values: HTTP, HTTPS, TCP
func (o ServiceDnsConfigDnsRecordOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func (v ServiceDnsConfigDnsRecord) string { return v.Type }).(pulumi.StringOutput)
}

type ServiceDnsConfigDnsRecordArrayOutput struct { *pulumi.OutputState}

func (ServiceDnsConfigDnsRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceDnsConfigDnsRecord)(nil)).Elem()
}

func (o ServiceDnsConfigDnsRecordArrayOutput) ToServiceDnsConfigDnsRecordArrayOutput() ServiceDnsConfigDnsRecordArrayOutput {
	return o
}

func (o ServiceDnsConfigDnsRecordArrayOutput) ToServiceDnsConfigDnsRecordArrayOutputWithContext(ctx context.Context) ServiceDnsConfigDnsRecordArrayOutput {
	return o
}

func (o ServiceDnsConfigDnsRecordArrayOutput) Index(i pulumi.IntInput) ServiceDnsConfigDnsRecordOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ServiceDnsConfigDnsRecord {
		return vs[0].([]ServiceDnsConfigDnsRecord)[vs[1].(int)]
	}).(ServiceDnsConfigDnsRecordOutput)
}

func init() {
	pulumi.RegisterOutputType(ServiceDnsConfigDnsRecordOutput{})
	pulumi.RegisterOutputType(ServiceDnsConfigDnsRecordArrayOutput{})
}
