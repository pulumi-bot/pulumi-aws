// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package elasticloadbalancingv2

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Deprecated: aws.elasticloadbalancingv2.LoadBalancer has been deprecated in favor of aws.lb.LoadBalancer
type LoadBalancer struct {
	pulumi.CustomResourceState

	AccessLogs                   LoadBalancerAccessLogsPtrOutput      `pulumi:"accessLogs"`
	Arn                          pulumi.StringOutput                  `pulumi:"arn"`
	ArnSuffix                    pulumi.StringOutput                  `pulumi:"arnSuffix"`
	DnsName                      pulumi.StringOutput                  `pulumi:"dnsName"`
	DropInvalidHeaderFields      pulumi.BoolPtrOutput                 `pulumi:"dropInvalidHeaderFields"`
	EnableCrossZoneLoadBalancing pulumi.BoolPtrOutput                 `pulumi:"enableCrossZoneLoadBalancing"`
	EnableDeletionProtection     pulumi.BoolPtrOutput                 `pulumi:"enableDeletionProtection"`
	EnableHttp2                  pulumi.BoolPtrOutput                 `pulumi:"enableHttp2"`
	IdleTimeout                  pulumi.IntPtrOutput                  `pulumi:"idleTimeout"`
	Internal                     pulumi.BoolOutput                    `pulumi:"internal"`
	IpAddressType                pulumi.StringOutput                  `pulumi:"ipAddressType"`
	LoadBalancerType             pulumi.StringPtrOutput               `pulumi:"loadBalancerType"`
	Name                         pulumi.StringOutput                  `pulumi:"name"`
	NamePrefix                   pulumi.StringPtrOutput               `pulumi:"namePrefix"`
	SecurityGroups               pulumi.StringArrayOutput             `pulumi:"securityGroups"`
	SubnetMappings               LoadBalancerSubnetMappingArrayOutput `pulumi:"subnetMappings"`
	Subnets                      pulumi.StringArrayOutput             `pulumi:"subnets"`
	Tags                         pulumi.StringMapOutput               `pulumi:"tags"`
	VpcId                        pulumi.StringOutput                  `pulumi:"vpcId"`
	ZoneId                       pulumi.StringOutput                  `pulumi:"zoneId"`
}

// NewLoadBalancer registers a new resource with the given unique name, arguments, and options.
func NewLoadBalancer(ctx *pulumi.Context,
	name string, args *LoadBalancerArgs, opts ...pulumi.ResourceOption) (*LoadBalancer, error) {
	if args == nil {
		args = &LoadBalancerArgs{}
	}
	var resource LoadBalancer
	err := ctx.RegisterResource("aws:elasticloadbalancingv2/loadBalancer:LoadBalancer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoadBalancer gets an existing LoadBalancer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoadBalancer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoadBalancerState, opts ...pulumi.ResourceOption) (*LoadBalancer, error) {
	var resource LoadBalancer
	err := ctx.ReadResource("aws:elasticloadbalancingv2/loadBalancer:LoadBalancer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoadBalancer resources.
type loadBalancerState struct {
	AccessLogs                   *LoadBalancerAccessLogs     `pulumi:"accessLogs"`
	Arn                          *string                     `pulumi:"arn"`
	ArnSuffix                    *string                     `pulumi:"arnSuffix"`
	DnsName                      *string                     `pulumi:"dnsName"`
	DropInvalidHeaderFields      *bool                       `pulumi:"dropInvalidHeaderFields"`
	EnableCrossZoneLoadBalancing *bool                       `pulumi:"enableCrossZoneLoadBalancing"`
	EnableDeletionProtection     *bool                       `pulumi:"enableDeletionProtection"`
	EnableHttp2                  *bool                       `pulumi:"enableHttp2"`
	IdleTimeout                  *int                        `pulumi:"idleTimeout"`
	Internal                     *bool                       `pulumi:"internal"`
	IpAddressType                *string                     `pulumi:"ipAddressType"`
	LoadBalancerType             *string                     `pulumi:"loadBalancerType"`
	Name                         *string                     `pulumi:"name"`
	NamePrefix                   *string                     `pulumi:"namePrefix"`
	SecurityGroups               []string                    `pulumi:"securityGroups"`
	SubnetMappings               []LoadBalancerSubnetMapping `pulumi:"subnetMappings"`
	Subnets                      []string                    `pulumi:"subnets"`
	Tags                         map[string]string           `pulumi:"tags"`
	VpcId                        *string                     `pulumi:"vpcId"`
	ZoneId                       *string                     `pulumi:"zoneId"`
}

type LoadBalancerState struct {
	AccessLogs                   LoadBalancerAccessLogsPtrInput
	Arn                          pulumi.StringPtrInput
	ArnSuffix                    pulumi.StringPtrInput
	DnsName                      pulumi.StringPtrInput
	DropInvalidHeaderFields      pulumi.BoolPtrInput
	EnableCrossZoneLoadBalancing pulumi.BoolPtrInput
	EnableDeletionProtection     pulumi.BoolPtrInput
	EnableHttp2                  pulumi.BoolPtrInput
	IdleTimeout                  pulumi.IntPtrInput
	Internal                     pulumi.BoolPtrInput
	IpAddressType                pulumi.StringPtrInput
	LoadBalancerType             pulumi.StringPtrInput
	Name                         pulumi.StringPtrInput
	NamePrefix                   pulumi.StringPtrInput
	SecurityGroups               pulumi.StringArrayInput
	SubnetMappings               LoadBalancerSubnetMappingArrayInput
	Subnets                      pulumi.StringArrayInput
	Tags                         pulumi.StringMapInput
	VpcId                        pulumi.StringPtrInput
	ZoneId                       pulumi.StringPtrInput
}

func (LoadBalancerState) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancerState)(nil)).Elem()
}

type loadBalancerArgs struct {
	AccessLogs                   *LoadBalancerAccessLogs     `pulumi:"accessLogs"`
	DropInvalidHeaderFields      *bool                       `pulumi:"dropInvalidHeaderFields"`
	EnableCrossZoneLoadBalancing *bool                       `pulumi:"enableCrossZoneLoadBalancing"`
	EnableDeletionProtection     *bool                       `pulumi:"enableDeletionProtection"`
	EnableHttp2                  *bool                       `pulumi:"enableHttp2"`
	IdleTimeout                  *int                        `pulumi:"idleTimeout"`
	Internal                     *bool                       `pulumi:"internal"`
	IpAddressType                *string                     `pulumi:"ipAddressType"`
	LoadBalancerType             *string                     `pulumi:"loadBalancerType"`
	Name                         *string                     `pulumi:"name"`
	NamePrefix                   *string                     `pulumi:"namePrefix"`
	SecurityGroups               []string                    `pulumi:"securityGroups"`
	SubnetMappings               []LoadBalancerSubnetMapping `pulumi:"subnetMappings"`
	Subnets                      []string                    `pulumi:"subnets"`
	Tags                         map[string]string           `pulumi:"tags"`
}

// The set of arguments for constructing a LoadBalancer resource.
type LoadBalancerArgs struct {
	AccessLogs                   LoadBalancerAccessLogsPtrInput
	DropInvalidHeaderFields      pulumi.BoolPtrInput
	EnableCrossZoneLoadBalancing pulumi.BoolPtrInput
	EnableDeletionProtection     pulumi.BoolPtrInput
	EnableHttp2                  pulumi.BoolPtrInput
	IdleTimeout                  pulumi.IntPtrInput
	Internal                     pulumi.BoolPtrInput
	IpAddressType                pulumi.StringPtrInput
	LoadBalancerType             pulumi.StringPtrInput
	Name                         pulumi.StringPtrInput
	NamePrefix                   pulumi.StringPtrInput
	SecurityGroups               pulumi.StringArrayInput
	SubnetMappings               LoadBalancerSubnetMappingArrayInput
	Subnets                      pulumi.StringArrayInput
	Tags                         pulumi.StringMapInput
}

func (LoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancerArgs)(nil)).Elem()
}
