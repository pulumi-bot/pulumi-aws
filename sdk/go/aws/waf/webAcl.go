// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type WebAcl struct {
	pulumi.CustomResourceState

	Arn                  pulumi.StringOutput                 `pulumi:"arn"`
	DefaultAction        WebAclDefaultActionOutput           `pulumi:"defaultAction"`
	LoggingConfiguration WebAclLoggingConfigurationPtrOutput `pulumi:"loggingConfiguration"`
	MetricName           pulumi.StringOutput                 `pulumi:"metricName"`
	Name                 pulumi.StringOutput                 `pulumi:"name"`
	Rules                WebAclRuleArrayOutput               `pulumi:"rules"`
	Tags                 pulumi.StringMapOutput              `pulumi:"tags"`
}

// NewWebAcl registers a new resource with the given unique name, arguments, and options.
func NewWebAcl(ctx *pulumi.Context,
	name string, args *WebAclArgs, opts ...pulumi.ResourceOption) (*WebAcl, error) {
	if args == nil || args.DefaultAction == nil {
		return nil, errors.New("missing required argument 'DefaultAction'")
	}
	if args == nil || args.MetricName == nil {
		return nil, errors.New("missing required argument 'MetricName'")
	}
	if args == nil {
		args = &WebAclArgs{}
	}
	var resource WebAcl
	err := ctx.RegisterResource("aws:waf/webAcl:WebAcl", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebAcl gets an existing WebAcl resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebAcl(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebAclState, opts ...pulumi.ResourceOption) (*WebAcl, error) {
	var resource WebAcl
	err := ctx.ReadResource("aws:waf/webAcl:WebAcl", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebAcl resources.
type webAclState struct {
	Arn                  *string                     `pulumi:"arn"`
	DefaultAction        *WebAclDefaultAction        `pulumi:"defaultAction"`
	LoggingConfiguration *WebAclLoggingConfiguration `pulumi:"loggingConfiguration"`
	MetricName           *string                     `pulumi:"metricName"`
	Name                 *string                     `pulumi:"name"`
	Rules                []WebAclRule                `pulumi:"rules"`
	Tags                 map[string]string           `pulumi:"tags"`
}

type WebAclState struct {
	Arn                  pulumi.StringPtrInput
	DefaultAction        WebAclDefaultActionPtrInput
	LoggingConfiguration WebAclLoggingConfigurationPtrInput
	MetricName           pulumi.StringPtrInput
	Name                 pulumi.StringPtrInput
	Rules                WebAclRuleArrayInput
	Tags                 pulumi.StringMapInput
}

func (WebAclState) ElementType() reflect.Type {
	return reflect.TypeOf((*webAclState)(nil)).Elem()
}

type webAclArgs struct {
	DefaultAction        WebAclDefaultAction         `pulumi:"defaultAction"`
	LoggingConfiguration *WebAclLoggingConfiguration `pulumi:"loggingConfiguration"`
	MetricName           string                      `pulumi:"metricName"`
	Name                 *string                     `pulumi:"name"`
	Rules                []WebAclRule                `pulumi:"rules"`
	Tags                 map[string]string           `pulumi:"tags"`
}

// The set of arguments for constructing a WebAcl resource.
type WebAclArgs struct {
	DefaultAction        WebAclDefaultActionInput
	LoggingConfiguration WebAclLoggingConfigurationPtrInput
	MetricName           pulumi.StringInput
	Name                 pulumi.StringPtrInput
	Rules                WebAclRuleArrayInput
	Tags                 pulumi.StringMapInput
}

func (WebAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webAclArgs)(nil)).Elem()
}
