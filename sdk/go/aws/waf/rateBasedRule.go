// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type RateBasedRule struct {
	pulumi.CustomResourceState

	Arn        pulumi.StringOutput               `pulumi:"arn"`
	MetricName pulumi.StringOutput               `pulumi:"metricName"`
	Name       pulumi.StringOutput               `pulumi:"name"`
	Predicates RateBasedRulePredicateArrayOutput `pulumi:"predicates"`
	RateKey    pulumi.StringOutput               `pulumi:"rateKey"`
	RateLimit  pulumi.IntOutput                  `pulumi:"rateLimit"`
	Tags       pulumi.StringMapOutput            `pulumi:"tags"`
}

// NewRateBasedRule registers a new resource with the given unique name, arguments, and options.
func NewRateBasedRule(ctx *pulumi.Context,
	name string, args *RateBasedRuleArgs, opts ...pulumi.ResourceOption) (*RateBasedRule, error) {
	if args == nil || args.MetricName == nil {
		return nil, errors.New("missing required argument 'MetricName'")
	}
	if args == nil || args.RateKey == nil {
		return nil, errors.New("missing required argument 'RateKey'")
	}
	if args == nil || args.RateLimit == nil {
		return nil, errors.New("missing required argument 'RateLimit'")
	}
	if args == nil {
		args = &RateBasedRuleArgs{}
	}
	var resource RateBasedRule
	err := ctx.RegisterResource("aws:waf/rateBasedRule:RateBasedRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRateBasedRule gets an existing RateBasedRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRateBasedRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RateBasedRuleState, opts ...pulumi.ResourceOption) (*RateBasedRule, error) {
	var resource RateBasedRule
	err := ctx.ReadResource("aws:waf/rateBasedRule:RateBasedRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RateBasedRule resources.
type rateBasedRuleState struct {
	Arn        *string                  `pulumi:"arn"`
	MetricName *string                  `pulumi:"metricName"`
	Name       *string                  `pulumi:"name"`
	Predicates []RateBasedRulePredicate `pulumi:"predicates"`
	RateKey    *string                  `pulumi:"rateKey"`
	RateLimit  *int                     `pulumi:"rateLimit"`
	Tags       map[string]string        `pulumi:"tags"`
}

type RateBasedRuleState struct {
	Arn        pulumi.StringPtrInput
	MetricName pulumi.StringPtrInput
	Name       pulumi.StringPtrInput
	Predicates RateBasedRulePredicateArrayInput
	RateKey    pulumi.StringPtrInput
	RateLimit  pulumi.IntPtrInput
	Tags       pulumi.StringMapInput
}

func (RateBasedRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*rateBasedRuleState)(nil)).Elem()
}

type rateBasedRuleArgs struct {
	MetricName string                   `pulumi:"metricName"`
	Name       *string                  `pulumi:"name"`
	Predicates []RateBasedRulePredicate `pulumi:"predicates"`
	RateKey    string                   `pulumi:"rateKey"`
	RateLimit  int                      `pulumi:"rateLimit"`
	Tags       map[string]string        `pulumi:"tags"`
}

// The set of arguments for constructing a RateBasedRule resource.
type RateBasedRuleArgs struct {
	MetricName pulumi.StringInput
	Name       pulumi.StringPtrInput
	Predicates RateBasedRulePredicateArrayInput
	RateKey    pulumi.StringInput
	RateLimit  pulumi.IntInput
	Tags       pulumi.StringMapInput
}

func (RateBasedRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*rateBasedRuleArgs)(nil)).Elem()
}
