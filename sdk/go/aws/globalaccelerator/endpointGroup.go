// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package globalaccelerator

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type EndpointGroup struct {
	pulumi.CustomResourceState

	EndpointConfigurations     EndpointGroupEndpointConfigurationArrayOutput `pulumi:"endpointConfigurations"`
	EndpointGroupRegion        pulumi.StringOutput                           `pulumi:"endpointGroupRegion"`
	HealthCheckIntervalSeconds pulumi.IntPtrOutput                           `pulumi:"healthCheckIntervalSeconds"`
	HealthCheckPath            pulumi.StringPtrOutput                        `pulumi:"healthCheckPath"`
	HealthCheckPort            pulumi.IntPtrOutput                           `pulumi:"healthCheckPort"`
	HealthCheckProtocol        pulumi.StringPtrOutput                        `pulumi:"healthCheckProtocol"`
	ListenerArn                pulumi.StringOutput                           `pulumi:"listenerArn"`
	ThresholdCount             pulumi.IntPtrOutput                           `pulumi:"thresholdCount"`
	TrafficDialPercentage      pulumi.Float64PtrOutput                       `pulumi:"trafficDialPercentage"`
}

// NewEndpointGroup registers a new resource with the given unique name, arguments, and options.
func NewEndpointGroup(ctx *pulumi.Context,
	name string, args *EndpointGroupArgs, opts ...pulumi.ResourceOption) (*EndpointGroup, error) {
	if args == nil || args.ListenerArn == nil {
		return nil, errors.New("missing required argument 'ListenerArn'")
	}
	if args == nil {
		args = &EndpointGroupArgs{}
	}
	var resource EndpointGroup
	err := ctx.RegisterResource("aws:globalaccelerator/endpointGroup:EndpointGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEndpointGroup gets an existing EndpointGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEndpointGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EndpointGroupState, opts ...pulumi.ResourceOption) (*EndpointGroup, error) {
	var resource EndpointGroup
	err := ctx.ReadResource("aws:globalaccelerator/endpointGroup:EndpointGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EndpointGroup resources.
type endpointGroupState struct {
	EndpointConfigurations     []EndpointGroupEndpointConfiguration `pulumi:"endpointConfigurations"`
	EndpointGroupRegion        *string                              `pulumi:"endpointGroupRegion"`
	HealthCheckIntervalSeconds *int                                 `pulumi:"healthCheckIntervalSeconds"`
	HealthCheckPath            *string                              `pulumi:"healthCheckPath"`
	HealthCheckPort            *int                                 `pulumi:"healthCheckPort"`
	HealthCheckProtocol        *string                              `pulumi:"healthCheckProtocol"`
	ListenerArn                *string                              `pulumi:"listenerArn"`
	ThresholdCount             *int                                 `pulumi:"thresholdCount"`
	TrafficDialPercentage      *float64                             `pulumi:"trafficDialPercentage"`
}

type EndpointGroupState struct {
	EndpointConfigurations     EndpointGroupEndpointConfigurationArrayInput
	EndpointGroupRegion        pulumi.StringPtrInput
	HealthCheckIntervalSeconds pulumi.IntPtrInput
	HealthCheckPath            pulumi.StringPtrInput
	HealthCheckPort            pulumi.IntPtrInput
	HealthCheckProtocol        pulumi.StringPtrInput
	ListenerArn                pulumi.StringPtrInput
	ThresholdCount             pulumi.IntPtrInput
	TrafficDialPercentage      pulumi.Float64PtrInput
}

func (EndpointGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointGroupState)(nil)).Elem()
}

type endpointGroupArgs struct {
	EndpointConfigurations     []EndpointGroupEndpointConfiguration `pulumi:"endpointConfigurations"`
	EndpointGroupRegion        *string                              `pulumi:"endpointGroupRegion"`
	HealthCheckIntervalSeconds *int                                 `pulumi:"healthCheckIntervalSeconds"`
	HealthCheckPath            *string                              `pulumi:"healthCheckPath"`
	HealthCheckPort            *int                                 `pulumi:"healthCheckPort"`
	HealthCheckProtocol        *string                              `pulumi:"healthCheckProtocol"`
	ListenerArn                string                               `pulumi:"listenerArn"`
	ThresholdCount             *int                                 `pulumi:"thresholdCount"`
	TrafficDialPercentage      *float64                             `pulumi:"trafficDialPercentage"`
}

// The set of arguments for constructing a EndpointGroup resource.
type EndpointGroupArgs struct {
	EndpointConfigurations     EndpointGroupEndpointConfigurationArrayInput
	EndpointGroupRegion        pulumi.StringPtrInput
	HealthCheckIntervalSeconds pulumi.IntPtrInput
	HealthCheckPath            pulumi.StringPtrInput
	HealthCheckPort            pulumi.IntPtrInput
	HealthCheckProtocol        pulumi.StringPtrInput
	ListenerArn                pulumi.StringInput
	ThresholdCount             pulumi.IntPtrInput
	TrafficDialPercentage      pulumi.Float64PtrInput
}

func (EndpointGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointGroupArgs)(nil)).Elem()
}
