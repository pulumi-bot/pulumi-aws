// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package storagegateway

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Gateway struct {
	pulumi.CustomResourceState

	ActivationKey              pulumi.StringOutput                        `pulumi:"activationKey"`
	Arn                        pulumi.StringOutput                        `pulumi:"arn"`
	CloudwatchLogGroupArn      pulumi.StringPtrOutput                     `pulumi:"cloudwatchLogGroupArn"`
	GatewayId                  pulumi.StringOutput                        `pulumi:"gatewayId"`
	GatewayIpAddress           pulumi.StringOutput                        `pulumi:"gatewayIpAddress"`
	GatewayName                pulumi.StringOutput                        `pulumi:"gatewayName"`
	GatewayTimezone            pulumi.StringOutput                        `pulumi:"gatewayTimezone"`
	GatewayType                pulumi.StringPtrOutput                     `pulumi:"gatewayType"`
	GatewayVpcEndpoint         pulumi.StringPtrOutput                     `pulumi:"gatewayVpcEndpoint"`
	MediumChangerType          pulumi.StringPtrOutput                     `pulumi:"mediumChangerType"`
	SmbActiveDirectorySettings GatewaySmbActiveDirectorySettingsPtrOutput `pulumi:"smbActiveDirectorySettings"`
	SmbGuestPassword           pulumi.StringPtrOutput                     `pulumi:"smbGuestPassword"`
	Tags                       pulumi.StringMapOutput                     `pulumi:"tags"`
	TapeDriveType              pulumi.StringPtrOutput                     `pulumi:"tapeDriveType"`
}

// NewGateway registers a new resource with the given unique name, arguments, and options.
func NewGateway(ctx *pulumi.Context,
	name string, args *GatewayArgs, opts ...pulumi.ResourceOption) (*Gateway, error) {
	if args == nil || args.GatewayName == nil {
		return nil, errors.New("missing required argument 'GatewayName'")
	}
	if args == nil || args.GatewayTimezone == nil {
		return nil, errors.New("missing required argument 'GatewayTimezone'")
	}
	if args == nil {
		args = &GatewayArgs{}
	}
	var resource Gateway
	err := ctx.RegisterResource("aws:storagegateway/gateway:Gateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGateway gets an existing Gateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GatewayState, opts ...pulumi.ResourceOption) (*Gateway, error) {
	var resource Gateway
	err := ctx.ReadResource("aws:storagegateway/gateway:Gateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Gateway resources.
type gatewayState struct {
	ActivationKey              *string                            `pulumi:"activationKey"`
	Arn                        *string                            `pulumi:"arn"`
	CloudwatchLogGroupArn      *string                            `pulumi:"cloudwatchLogGroupArn"`
	GatewayId                  *string                            `pulumi:"gatewayId"`
	GatewayIpAddress           *string                            `pulumi:"gatewayIpAddress"`
	GatewayName                *string                            `pulumi:"gatewayName"`
	GatewayTimezone            *string                            `pulumi:"gatewayTimezone"`
	GatewayType                *string                            `pulumi:"gatewayType"`
	GatewayVpcEndpoint         *string                            `pulumi:"gatewayVpcEndpoint"`
	MediumChangerType          *string                            `pulumi:"mediumChangerType"`
	SmbActiveDirectorySettings *GatewaySmbActiveDirectorySettings `pulumi:"smbActiveDirectorySettings"`
	SmbGuestPassword           *string                            `pulumi:"smbGuestPassword"`
	Tags                       map[string]string                  `pulumi:"tags"`
	TapeDriveType              *string                            `pulumi:"tapeDriveType"`
}

type GatewayState struct {
	ActivationKey              pulumi.StringPtrInput
	Arn                        pulumi.StringPtrInput
	CloudwatchLogGroupArn      pulumi.StringPtrInput
	GatewayId                  pulumi.StringPtrInput
	GatewayIpAddress           pulumi.StringPtrInput
	GatewayName                pulumi.StringPtrInput
	GatewayTimezone            pulumi.StringPtrInput
	GatewayType                pulumi.StringPtrInput
	GatewayVpcEndpoint         pulumi.StringPtrInput
	MediumChangerType          pulumi.StringPtrInput
	SmbActiveDirectorySettings GatewaySmbActiveDirectorySettingsPtrInput
	SmbGuestPassword           pulumi.StringPtrInput
	Tags                       pulumi.StringMapInput
	TapeDriveType              pulumi.StringPtrInput
}

func (GatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayState)(nil)).Elem()
}

type gatewayArgs struct {
	ActivationKey              *string                            `pulumi:"activationKey"`
	CloudwatchLogGroupArn      *string                            `pulumi:"cloudwatchLogGroupArn"`
	GatewayIpAddress           *string                            `pulumi:"gatewayIpAddress"`
	GatewayName                string                             `pulumi:"gatewayName"`
	GatewayTimezone            string                             `pulumi:"gatewayTimezone"`
	GatewayType                *string                            `pulumi:"gatewayType"`
	GatewayVpcEndpoint         *string                            `pulumi:"gatewayVpcEndpoint"`
	MediumChangerType          *string                            `pulumi:"mediumChangerType"`
	SmbActiveDirectorySettings *GatewaySmbActiveDirectorySettings `pulumi:"smbActiveDirectorySettings"`
	SmbGuestPassword           *string                            `pulumi:"smbGuestPassword"`
	Tags                       map[string]string                  `pulumi:"tags"`
	TapeDriveType              *string                            `pulumi:"tapeDriveType"`
}

// The set of arguments for constructing a Gateway resource.
type GatewayArgs struct {
	ActivationKey              pulumi.StringPtrInput
	CloudwatchLogGroupArn      pulumi.StringPtrInput
	GatewayIpAddress           pulumi.StringPtrInput
	GatewayName                pulumi.StringInput
	GatewayTimezone            pulumi.StringInput
	GatewayType                pulumi.StringPtrInput
	GatewayVpcEndpoint         pulumi.StringPtrInput
	MediumChangerType          pulumi.StringPtrInput
	SmbActiveDirectorySettings GatewaySmbActiveDirectorySettingsPtrInput
	SmbGuestPassword           pulumi.StringPtrInput
	Tags                       pulumi.StringMapInput
	TapeDriveType              pulumi.StringPtrInput
}

func (GatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayArgs)(nil)).Elem()
}
