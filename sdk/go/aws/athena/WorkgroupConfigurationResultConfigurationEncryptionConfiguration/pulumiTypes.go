// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package WorkgroupConfigurationResultConfigurationEncryptionConfiguration

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type WorkgroupConfigurationResultConfigurationEncryptionConfiguration struct {
	// Indicates whether Amazon S3 server-side encryption with Amazon S3-managed keys (SSE-S3), server-side encryption with KMS-managed keys (SSE-KMS), or client-side encryption with KMS-managed keys (CSE-KMS) is used. If a query runs in a workgroup and the workgroup overrides client-side settings, then the workgroup's setting for encryption is used. It specifies whether query results must be encrypted, for all queries that run in this workgroup.
	EncryptionOption *string `pulumi:"encryptionOption"`
	// For SSE-KMS and CSE-KMS, this is the KMS key Amazon Resource Name (ARN).
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
}

type WorkgroupConfigurationResultConfigurationEncryptionConfigurationInput interface {
	pulumi.Input

	ToWorkgroupConfigurationResultConfigurationEncryptionConfigurationOutput() WorkgroupConfigurationResultConfigurationEncryptionConfigurationOutput
	ToWorkgroupConfigurationResultConfigurationEncryptionConfigurationOutputWithContext(context.Context) WorkgroupConfigurationResultConfigurationEncryptionConfigurationOutput
}

type WorkgroupConfigurationResultConfigurationEncryptionConfigurationArgs struct {
	// Indicates whether Amazon S3 server-side encryption with Amazon S3-managed keys (SSE-S3), server-side encryption with KMS-managed keys (SSE-KMS), or client-side encryption with KMS-managed keys (CSE-KMS) is used. If a query runs in a workgroup and the workgroup overrides client-side settings, then the workgroup's setting for encryption is used. It specifies whether query results must be encrypted, for all queries that run in this workgroup.
	EncryptionOption pulumi.StringPtrInput `pulumi:"encryptionOption"`
	// For SSE-KMS and CSE-KMS, this is the KMS key Amazon Resource Name (ARN).
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
}

func (WorkgroupConfigurationResultConfigurationEncryptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkgroupConfigurationResultConfigurationEncryptionConfiguration)(nil)).Elem()
}

func (i WorkgroupConfigurationResultConfigurationEncryptionConfigurationArgs) ToWorkgroupConfigurationResultConfigurationEncryptionConfigurationOutput() WorkgroupConfigurationResultConfigurationEncryptionConfigurationOutput {
	return i.ToWorkgroupConfigurationResultConfigurationEncryptionConfigurationOutputWithContext(context.Background())
}

func (i WorkgroupConfigurationResultConfigurationEncryptionConfigurationArgs) ToWorkgroupConfigurationResultConfigurationEncryptionConfigurationOutputWithContext(ctx context.Context) WorkgroupConfigurationResultConfigurationEncryptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkgroupConfigurationResultConfigurationEncryptionConfigurationOutput)
}

func (i WorkgroupConfigurationResultConfigurationEncryptionConfigurationArgs) ToWorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutput() WorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutput {
	return i.ToWorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (i WorkgroupConfigurationResultConfigurationEncryptionConfigurationArgs) ToWorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutputWithContext(ctx context.Context) WorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkgroupConfigurationResultConfigurationEncryptionConfigurationOutput).ToWorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutputWithContext(ctx)
}

type WorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrInput interface {
	pulumi.Input

	ToWorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutput() WorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutput
	ToWorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutputWithContext(context.Context) WorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutput
}

type workgroupConfigurationResultConfigurationEncryptionConfigurationPtrType WorkgroupConfigurationResultConfigurationEncryptionConfigurationArgs

func WorkgroupConfigurationResultConfigurationEncryptionConfigurationPtr(v *WorkgroupConfigurationResultConfigurationEncryptionConfigurationArgs) WorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrInput {	return (*workgroupConfigurationResultConfigurationEncryptionConfigurationPtrType)(v)
}

func (*workgroupConfigurationResultConfigurationEncryptionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkgroupConfigurationResultConfigurationEncryptionConfiguration)(nil)).Elem()
}

func (i *workgroupConfigurationResultConfigurationEncryptionConfigurationPtrType) ToWorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutput() WorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutput {
	return i.ToWorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (i *workgroupConfigurationResultConfigurationEncryptionConfigurationPtrType) ToWorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutputWithContext(ctx context.Context) WorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutput)
}

type WorkgroupConfigurationResultConfigurationEncryptionConfigurationOutput struct { *pulumi.OutputState }

func (WorkgroupConfigurationResultConfigurationEncryptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkgroupConfigurationResultConfigurationEncryptionConfiguration)(nil)).Elem()
}

func (o WorkgroupConfigurationResultConfigurationEncryptionConfigurationOutput) ToWorkgroupConfigurationResultConfigurationEncryptionConfigurationOutput() WorkgroupConfigurationResultConfigurationEncryptionConfigurationOutput {
	return o
}

func (o WorkgroupConfigurationResultConfigurationEncryptionConfigurationOutput) ToWorkgroupConfigurationResultConfigurationEncryptionConfigurationOutputWithContext(ctx context.Context) WorkgroupConfigurationResultConfigurationEncryptionConfigurationOutput {
	return o
}

func (o WorkgroupConfigurationResultConfigurationEncryptionConfigurationOutput) ToWorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutput() WorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutput {
	return o.ToWorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (o WorkgroupConfigurationResultConfigurationEncryptionConfigurationOutput) ToWorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutputWithContext(ctx context.Context) WorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v WorkgroupConfigurationResultConfigurationEncryptionConfiguration) *WorkgroupConfigurationResultConfigurationEncryptionConfiguration {
		return &v
	}).(WorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutput)
}
// Indicates whether Amazon S3 server-side encryption with Amazon S3-managed keys (SSE-S3), server-side encryption with KMS-managed keys (SSE-KMS), or client-side encryption with KMS-managed keys (CSE-KMS) is used. If a query runs in a workgroup and the workgroup overrides client-side settings, then the workgroup's setting for encryption is used. It specifies whether query results must be encrypted, for all queries that run in this workgroup.
func (o WorkgroupConfigurationResultConfigurationEncryptionConfigurationOutput) EncryptionOption() pulumi.StringPtrOutput {
	return o.ApplyT(func (v WorkgroupConfigurationResultConfigurationEncryptionConfiguration) *string { return v.EncryptionOption }).(pulumi.StringPtrOutput)
}

// For SSE-KMS and CSE-KMS, this is the KMS key Amazon Resource Name (ARN).
func (o WorkgroupConfigurationResultConfigurationEncryptionConfigurationOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func (v WorkgroupConfigurationResultConfigurationEncryptionConfiguration) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

type WorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutput struct { *pulumi.OutputState}

func (WorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkgroupConfigurationResultConfigurationEncryptionConfiguration)(nil)).Elem()
}

func (o WorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutput) ToWorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutput() WorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutput {
	return o
}

func (o WorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutput) ToWorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutputWithContext(ctx context.Context) WorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutput {
	return o
}

func (o WorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutput) Elem() WorkgroupConfigurationResultConfigurationEncryptionConfigurationOutput {
	return o.ApplyT(func (v *WorkgroupConfigurationResultConfigurationEncryptionConfiguration) WorkgroupConfigurationResultConfigurationEncryptionConfiguration { return *v }).(WorkgroupConfigurationResultConfigurationEncryptionConfigurationOutput)
}

// Indicates whether Amazon S3 server-side encryption with Amazon S3-managed keys (SSE-S3), server-side encryption with KMS-managed keys (SSE-KMS), or client-side encryption with KMS-managed keys (CSE-KMS) is used. If a query runs in a workgroup and the workgroup overrides client-side settings, then the workgroup's setting for encryption is used. It specifies whether query results must be encrypted, for all queries that run in this workgroup.
func (o WorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutput) EncryptionOption() pulumi.StringPtrOutput {
	return o.ApplyT(func (v WorkgroupConfigurationResultConfigurationEncryptionConfiguration) *string { return v.EncryptionOption }).(pulumi.StringPtrOutput)
}

// For SSE-KMS and CSE-KMS, this is the KMS key Amazon Resource Name (ARN).
func (o WorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func (v WorkgroupConfigurationResultConfigurationEncryptionConfiguration) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(WorkgroupConfigurationResultConfigurationEncryptionConfigurationOutput{})
	pulumi.RegisterOutputType(WorkgroupConfigurationResultConfigurationEncryptionConfigurationPtrOutput{})
}
