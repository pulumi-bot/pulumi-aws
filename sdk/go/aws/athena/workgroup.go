// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package athena

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Workgroup struct {
	pulumi.CustomResourceState

	Arn           pulumi.StringOutput             `pulumi:"arn"`
	Configuration WorkgroupConfigurationPtrOutput `pulumi:"configuration"`
	Description   pulumi.StringPtrOutput          `pulumi:"description"`
	ForceDestroy  pulumi.BoolPtrOutput            `pulumi:"forceDestroy"`
	Name          pulumi.StringOutput             `pulumi:"name"`
	State         pulumi.StringPtrOutput          `pulumi:"state"`
	Tags          pulumi.StringMapOutput          `pulumi:"tags"`
}

// NewWorkgroup registers a new resource with the given unique name, arguments, and options.
func NewWorkgroup(ctx *pulumi.Context,
	name string, args *WorkgroupArgs, opts ...pulumi.ResourceOption) (*Workgroup, error) {
	if args == nil {
		args = &WorkgroupArgs{}
	}
	var resource Workgroup
	err := ctx.RegisterResource("aws:athena/workgroup:Workgroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkgroup gets an existing Workgroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkgroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkgroupState, opts ...pulumi.ResourceOption) (*Workgroup, error) {
	var resource Workgroup
	err := ctx.ReadResource("aws:athena/workgroup:Workgroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Workgroup resources.
type workgroupState struct {
	Arn           *string                 `pulumi:"arn"`
	Configuration *WorkgroupConfiguration `pulumi:"configuration"`
	Description   *string                 `pulumi:"description"`
	ForceDestroy  *bool                   `pulumi:"forceDestroy"`
	Name          *string                 `pulumi:"name"`
	State         *string                 `pulumi:"state"`
	Tags          map[string]string       `pulumi:"tags"`
}

type WorkgroupState struct {
	Arn           pulumi.StringPtrInput
	Configuration WorkgroupConfigurationPtrInput
	Description   pulumi.StringPtrInput
	ForceDestroy  pulumi.BoolPtrInput
	Name          pulumi.StringPtrInput
	State         pulumi.StringPtrInput
	Tags          pulumi.StringMapInput
}

func (WorkgroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*workgroupState)(nil)).Elem()
}

type workgroupArgs struct {
	Configuration *WorkgroupConfiguration `pulumi:"configuration"`
	Description   *string                 `pulumi:"description"`
	ForceDestroy  *bool                   `pulumi:"forceDestroy"`
	Name          *string                 `pulumi:"name"`
	State         *string                 `pulumi:"state"`
	Tags          map[string]string       `pulumi:"tags"`
}

// The set of arguments for constructing a Workgroup resource.
type WorkgroupArgs struct {
	Configuration WorkgroupConfigurationPtrInput
	Description   pulumi.StringPtrInput
	ForceDestroy  pulumi.BoolPtrInput
	Name          pulumi.StringPtrInput
	State         pulumi.StringPtrInput
	Tags          pulumi.StringMapInput
}

func (WorkgroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workgroupArgs)(nil)).Elem()
}
