// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package dynamodb

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Table struct {
	pulumi.CustomResourceState

	Arn                    pulumi.StringOutput                  `pulumi:"arn"`
	Attributes             TableAttributeArrayOutput            `pulumi:"attributes"`
	BillingMode            pulumi.StringPtrOutput               `pulumi:"billingMode"`
	GlobalSecondaryIndexes TableGlobalSecondaryIndexArrayOutput `pulumi:"globalSecondaryIndexes"`
	HashKey                pulumi.StringOutput                  `pulumi:"hashKey"`
	LocalSecondaryIndexes  TableLocalSecondaryIndexArrayOutput  `pulumi:"localSecondaryIndexes"`
	Name                   pulumi.StringOutput                  `pulumi:"name"`
	PointInTimeRecovery    TablePointInTimeRecoveryOutput       `pulumi:"pointInTimeRecovery"`
	RangeKey               pulumi.StringPtrOutput               `pulumi:"rangeKey"`
	ReadCapacity           pulumi.IntPtrOutput                  `pulumi:"readCapacity"`
	Replicas               TableReplicaArrayOutput              `pulumi:"replicas"`
	ServerSideEncryption   TableServerSideEncryptionOutput      `pulumi:"serverSideEncryption"`
	StreamArn              pulumi.StringOutput                  `pulumi:"streamArn"`
	StreamEnabled          pulumi.BoolPtrOutput                 `pulumi:"streamEnabled"`
	StreamLabel            pulumi.StringOutput                  `pulumi:"streamLabel"`
	StreamViewType         pulumi.StringOutput                  `pulumi:"streamViewType"`
	Tags                   pulumi.StringMapOutput               `pulumi:"tags"`
	Ttl                    TableTtlPtrOutput                    `pulumi:"ttl"`
	WriteCapacity          pulumi.IntPtrOutput                  `pulumi:"writeCapacity"`
}

// NewTable registers a new resource with the given unique name, arguments, and options.
func NewTable(ctx *pulumi.Context,
	name string, args *TableArgs, opts ...pulumi.ResourceOption) (*Table, error) {
	if args == nil || args.Attributes == nil {
		return nil, errors.New("missing required argument 'Attributes'")
	}
	if args == nil || args.HashKey == nil {
		return nil, errors.New("missing required argument 'HashKey'")
	}
	if args == nil {
		args = &TableArgs{}
	}
	var resource Table
	err := ctx.RegisterResource("aws:dynamodb/table:Table", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTable gets an existing Table resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TableState, opts ...pulumi.ResourceOption) (*Table, error) {
	var resource Table
	err := ctx.ReadResource("aws:dynamodb/table:Table", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Table resources.
type tableState struct {
	Arn                    *string                     `pulumi:"arn"`
	Attributes             []TableAttribute            `pulumi:"attributes"`
	BillingMode            *string                     `pulumi:"billingMode"`
	GlobalSecondaryIndexes []TableGlobalSecondaryIndex `pulumi:"globalSecondaryIndexes"`
	HashKey                *string                     `pulumi:"hashKey"`
	LocalSecondaryIndexes  []TableLocalSecondaryIndex  `pulumi:"localSecondaryIndexes"`
	Name                   *string                     `pulumi:"name"`
	PointInTimeRecovery    *TablePointInTimeRecovery   `pulumi:"pointInTimeRecovery"`
	RangeKey               *string                     `pulumi:"rangeKey"`
	ReadCapacity           *int                        `pulumi:"readCapacity"`
	Replicas               []TableReplica              `pulumi:"replicas"`
	ServerSideEncryption   *TableServerSideEncryption  `pulumi:"serverSideEncryption"`
	StreamArn              *string                     `pulumi:"streamArn"`
	StreamEnabled          *bool                       `pulumi:"streamEnabled"`
	StreamLabel            *string                     `pulumi:"streamLabel"`
	StreamViewType         *string                     `pulumi:"streamViewType"`
	Tags                   map[string]string           `pulumi:"tags"`
	Ttl                    *TableTtl                   `pulumi:"ttl"`
	WriteCapacity          *int                        `pulumi:"writeCapacity"`
}

type TableState struct {
	Arn                    pulumi.StringPtrInput
	Attributes             TableAttributeArrayInput
	BillingMode            pulumi.StringPtrInput
	GlobalSecondaryIndexes TableGlobalSecondaryIndexArrayInput
	HashKey                pulumi.StringPtrInput
	LocalSecondaryIndexes  TableLocalSecondaryIndexArrayInput
	Name                   pulumi.StringPtrInput
	PointInTimeRecovery    TablePointInTimeRecoveryPtrInput
	RangeKey               pulumi.StringPtrInput
	ReadCapacity           pulumi.IntPtrInput
	Replicas               TableReplicaArrayInput
	ServerSideEncryption   TableServerSideEncryptionPtrInput
	StreamArn              pulumi.StringPtrInput
	StreamEnabled          pulumi.BoolPtrInput
	StreamLabel            pulumi.StringPtrInput
	StreamViewType         pulumi.StringPtrInput
	Tags                   pulumi.StringMapInput
	Ttl                    TableTtlPtrInput
	WriteCapacity          pulumi.IntPtrInput
}

func (TableState) ElementType() reflect.Type {
	return reflect.TypeOf((*tableState)(nil)).Elem()
}

type tableArgs struct {
	Attributes             []TableAttribute            `pulumi:"attributes"`
	BillingMode            *string                     `pulumi:"billingMode"`
	GlobalSecondaryIndexes []TableGlobalSecondaryIndex `pulumi:"globalSecondaryIndexes"`
	HashKey                string                      `pulumi:"hashKey"`
	LocalSecondaryIndexes  []TableLocalSecondaryIndex  `pulumi:"localSecondaryIndexes"`
	Name                   *string                     `pulumi:"name"`
	PointInTimeRecovery    *TablePointInTimeRecovery   `pulumi:"pointInTimeRecovery"`
	RangeKey               *string                     `pulumi:"rangeKey"`
	ReadCapacity           *int                        `pulumi:"readCapacity"`
	Replicas               []TableReplica              `pulumi:"replicas"`
	ServerSideEncryption   *TableServerSideEncryption  `pulumi:"serverSideEncryption"`
	StreamEnabled          *bool                       `pulumi:"streamEnabled"`
	StreamViewType         *string                     `pulumi:"streamViewType"`
	Tags                   map[string]string           `pulumi:"tags"`
	Ttl                    *TableTtl                   `pulumi:"ttl"`
	WriteCapacity          *int                        `pulumi:"writeCapacity"`
}

// The set of arguments for constructing a Table resource.
type TableArgs struct {
	Attributes             TableAttributeArrayInput
	BillingMode            pulumi.StringPtrInput
	GlobalSecondaryIndexes TableGlobalSecondaryIndexArrayInput
	HashKey                pulumi.StringInput
	LocalSecondaryIndexes  TableLocalSecondaryIndexArrayInput
	Name                   pulumi.StringPtrInput
	PointInTimeRecovery    TablePointInTimeRecoveryPtrInput
	RangeKey               pulumi.StringPtrInput
	ReadCapacity           pulumi.IntPtrInput
	Replicas               TableReplicaArrayInput
	ServerSideEncryption   TableServerSideEncryptionPtrInput
	StreamEnabled          pulumi.BoolPtrInput
	StreamViewType         pulumi.StringPtrInput
	Tags                   pulumi.StringMapInput
	Ttl                    TableTtlPtrInput
	WriteCapacity          pulumi.IntPtrInput
}

func (TableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tableArgs)(nil)).Elem()
}
