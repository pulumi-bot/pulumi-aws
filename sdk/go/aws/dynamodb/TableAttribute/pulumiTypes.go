// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package TableAttribute

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type TableAttribute struct {
	// The name of the index
	Name string `pulumi:"name"`
	// Attribute type, which must be a scalar type: `S`, `N`, or `B` for (S)tring, (N)umber or (B)inary data
	Type string `pulumi:"type"`
}

type TableAttributeInput interface {
	pulumi.Input

	ToTableAttributeOutput() TableAttributeOutput
	ToTableAttributeOutputWithContext(context.Context) TableAttributeOutput
}

type TableAttributeArgs struct {
	// The name of the index
	Name pulumi.StringInput `pulumi:"name"`
	// Attribute type, which must be a scalar type: `S`, `N`, or `B` for (S)tring, (N)umber or (B)inary data
	Type pulumi.StringInput `pulumi:"type"`
}

func (TableAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableAttribute)(nil)).Elem()
}

func (i TableAttributeArgs) ToTableAttributeOutput() TableAttributeOutput {
	return i.ToTableAttributeOutputWithContext(context.Background())
}

func (i TableAttributeArgs) ToTableAttributeOutputWithContext(ctx context.Context) TableAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableAttributeOutput)
}

type TableAttributeArrayInput interface {
	pulumi.Input

	ToTableAttributeArrayOutput() TableAttributeArrayOutput
	ToTableAttributeArrayOutputWithContext(context.Context) TableAttributeArrayOutput
}

type TableAttributeArray []TableAttributeInput

func (TableAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TableAttribute)(nil)).Elem()
}

func (i TableAttributeArray) ToTableAttributeArrayOutput() TableAttributeArrayOutput {
	return i.ToTableAttributeArrayOutputWithContext(context.Background())
}

func (i TableAttributeArray) ToTableAttributeArrayOutputWithContext(ctx context.Context) TableAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableAttributeArrayOutput)
}

type TableAttributeOutput struct { *pulumi.OutputState }

func (TableAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableAttribute)(nil)).Elem()
}

func (o TableAttributeOutput) ToTableAttributeOutput() TableAttributeOutput {
	return o
}

func (o TableAttributeOutput) ToTableAttributeOutputWithContext(ctx context.Context) TableAttributeOutput {
	return o
}

// The name of the index
func (o TableAttributeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v TableAttribute) string { return v.Name }).(pulumi.StringOutput)
}

// Attribute type, which must be a scalar type: `S`, `N`, or `B` for (S)tring, (N)umber or (B)inary data
func (o TableAttributeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func (v TableAttribute) string { return v.Type }).(pulumi.StringOutput)
}

type TableAttributeArrayOutput struct { *pulumi.OutputState}

func (TableAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TableAttribute)(nil)).Elem()
}

func (o TableAttributeArrayOutput) ToTableAttributeArrayOutput() TableAttributeArrayOutput {
	return o
}

func (o TableAttributeArrayOutput) ToTableAttributeArrayOutputWithContext(ctx context.Context) TableAttributeArrayOutput {
	return o
}

func (o TableAttributeArrayOutput) Index(i pulumi.IntInput) TableAttributeOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) TableAttribute {
		return vs[0].([]TableAttribute)[vs[1].(int)]
	}).(TableAttributeOutput)
}

func init() {
	pulumi.RegisterOutputType(TableAttributeOutput{})
	pulumi.RegisterOutputType(TableAttributeArrayOutput{})
}
