// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package TableLocalSecondaryIndex

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type TableLocalSecondaryIndex struct {
	// The name of the index
	Name string `pulumi:"name"`
	// Only required with `INCLUDE` as a
	// projection type; a list of attributes to project into the index. These
	// do not need to be defined as attributes on the table.
	NonKeyAttributes []string `pulumi:"nonKeyAttributes"`
	// One of `ALL`, `INCLUDE` or `KEYS_ONLY`
	// where `ALL` projects every attribute into the index, `KEYS_ONLY`
	// projects just the hash and range key into the index, and `INCLUDE`
	// projects only the keys specified in the _non_key_attributes_
	// parameter.
	ProjectionType string `pulumi:"projectionType"`
	// The name of the range key; must be defined
	RangeKey string `pulumi:"rangeKey"`
}

type TableLocalSecondaryIndexInput interface {
	pulumi.Input

	ToTableLocalSecondaryIndexOutput() TableLocalSecondaryIndexOutput
	ToTableLocalSecondaryIndexOutputWithContext(context.Context) TableLocalSecondaryIndexOutput
}

type TableLocalSecondaryIndexArgs struct {
	// The name of the index
	Name pulumi.StringInput `pulumi:"name"`
	// Only required with `INCLUDE` as a
	// projection type; a list of attributes to project into the index. These
	// do not need to be defined as attributes on the table.
	NonKeyAttributes pulumi.StringArrayInput `pulumi:"nonKeyAttributes"`
	// One of `ALL`, `INCLUDE` or `KEYS_ONLY`
	// where `ALL` projects every attribute into the index, `KEYS_ONLY`
	// projects just the hash and range key into the index, and `INCLUDE`
	// projects only the keys specified in the _non_key_attributes_
	// parameter.
	ProjectionType pulumi.StringInput `pulumi:"projectionType"`
	// The name of the range key; must be defined
	RangeKey pulumi.StringInput `pulumi:"rangeKey"`
}

func (TableLocalSecondaryIndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableLocalSecondaryIndex)(nil)).Elem()
}

func (i TableLocalSecondaryIndexArgs) ToTableLocalSecondaryIndexOutput() TableLocalSecondaryIndexOutput {
	return i.ToTableLocalSecondaryIndexOutputWithContext(context.Background())
}

func (i TableLocalSecondaryIndexArgs) ToTableLocalSecondaryIndexOutputWithContext(ctx context.Context) TableLocalSecondaryIndexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableLocalSecondaryIndexOutput)
}

type TableLocalSecondaryIndexArrayInput interface {
	pulumi.Input

	ToTableLocalSecondaryIndexArrayOutput() TableLocalSecondaryIndexArrayOutput
	ToTableLocalSecondaryIndexArrayOutputWithContext(context.Context) TableLocalSecondaryIndexArrayOutput
}

type TableLocalSecondaryIndexArray []TableLocalSecondaryIndexInput

func (TableLocalSecondaryIndexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TableLocalSecondaryIndex)(nil)).Elem()
}

func (i TableLocalSecondaryIndexArray) ToTableLocalSecondaryIndexArrayOutput() TableLocalSecondaryIndexArrayOutput {
	return i.ToTableLocalSecondaryIndexArrayOutputWithContext(context.Background())
}

func (i TableLocalSecondaryIndexArray) ToTableLocalSecondaryIndexArrayOutputWithContext(ctx context.Context) TableLocalSecondaryIndexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableLocalSecondaryIndexArrayOutput)
}

type TableLocalSecondaryIndexOutput struct { *pulumi.OutputState }

func (TableLocalSecondaryIndexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableLocalSecondaryIndex)(nil)).Elem()
}

func (o TableLocalSecondaryIndexOutput) ToTableLocalSecondaryIndexOutput() TableLocalSecondaryIndexOutput {
	return o
}

func (o TableLocalSecondaryIndexOutput) ToTableLocalSecondaryIndexOutputWithContext(ctx context.Context) TableLocalSecondaryIndexOutput {
	return o
}

// The name of the index
func (o TableLocalSecondaryIndexOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v TableLocalSecondaryIndex) string { return v.Name }).(pulumi.StringOutput)
}

// Only required with `INCLUDE` as a
// projection type; a list of attributes to project into the index. These
// do not need to be defined as attributes on the table.
func (o TableLocalSecondaryIndexOutput) NonKeyAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func (v TableLocalSecondaryIndex) []string { return v.NonKeyAttributes }).(pulumi.StringArrayOutput)
}

// One of `ALL`, `INCLUDE` or `KEYS_ONLY`
// where `ALL` projects every attribute into the index, `KEYS_ONLY`
// projects just the hash and range key into the index, and `INCLUDE`
// projects only the keys specified in the _non_key_attributes_
// parameter.
func (o TableLocalSecondaryIndexOutput) ProjectionType() pulumi.StringOutput {
	return o.ApplyT(func (v TableLocalSecondaryIndex) string { return v.ProjectionType }).(pulumi.StringOutput)
}

// The name of the range key; must be defined
func (o TableLocalSecondaryIndexOutput) RangeKey() pulumi.StringOutput {
	return o.ApplyT(func (v TableLocalSecondaryIndex) string { return v.RangeKey }).(pulumi.StringOutput)
}

type TableLocalSecondaryIndexArrayOutput struct { *pulumi.OutputState}

func (TableLocalSecondaryIndexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TableLocalSecondaryIndex)(nil)).Elem()
}

func (o TableLocalSecondaryIndexArrayOutput) ToTableLocalSecondaryIndexArrayOutput() TableLocalSecondaryIndexArrayOutput {
	return o
}

func (o TableLocalSecondaryIndexArrayOutput) ToTableLocalSecondaryIndexArrayOutputWithContext(ctx context.Context) TableLocalSecondaryIndexArrayOutput {
	return o
}

func (o TableLocalSecondaryIndexArrayOutput) Index(i pulumi.IntInput) TableLocalSecondaryIndexOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) TableLocalSecondaryIndex {
		return vs[0].([]TableLocalSecondaryIndex)[vs[1].(int)]
	}).(TableLocalSecondaryIndexOutput)
}

func init() {
	pulumi.RegisterOutputType(TableLocalSecondaryIndexOutput{})
	pulumi.RegisterOutputType(TableLocalSecondaryIndexArrayOutput{})
}
