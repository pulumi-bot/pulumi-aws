// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package TableServerSideEncryption

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type TableServerSideEncryption struct {
	// Whether to enable point-in-time recovery - note that it can take up to 10 minutes to enable for new tables. If the `pointInTimeRecovery` block is not provided then this defaults to `false`.
	Enabled bool `pulumi:"enabled"`
}

type TableServerSideEncryptionInput interface {
	pulumi.Input

	ToTableServerSideEncryptionOutput() TableServerSideEncryptionOutput
	ToTableServerSideEncryptionOutputWithContext(context.Context) TableServerSideEncryptionOutput
}

type TableServerSideEncryptionArgs struct {
	// Whether to enable point-in-time recovery - note that it can take up to 10 minutes to enable for new tables. If the `pointInTimeRecovery` block is not provided then this defaults to `false`.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (TableServerSideEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableServerSideEncryption)(nil)).Elem()
}

func (i TableServerSideEncryptionArgs) ToTableServerSideEncryptionOutput() TableServerSideEncryptionOutput {
	return i.ToTableServerSideEncryptionOutputWithContext(context.Background())
}

func (i TableServerSideEncryptionArgs) ToTableServerSideEncryptionOutputWithContext(ctx context.Context) TableServerSideEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableServerSideEncryptionOutput)
}

func (i TableServerSideEncryptionArgs) ToTableServerSideEncryptionPtrOutput() TableServerSideEncryptionPtrOutput {
	return i.ToTableServerSideEncryptionPtrOutputWithContext(context.Background())
}

func (i TableServerSideEncryptionArgs) ToTableServerSideEncryptionPtrOutputWithContext(ctx context.Context) TableServerSideEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableServerSideEncryptionOutput).ToTableServerSideEncryptionPtrOutputWithContext(ctx)
}

type TableServerSideEncryptionPtrInput interface {
	pulumi.Input

	ToTableServerSideEncryptionPtrOutput() TableServerSideEncryptionPtrOutput
	ToTableServerSideEncryptionPtrOutputWithContext(context.Context) TableServerSideEncryptionPtrOutput
}

type tableServerSideEncryptionPtrType TableServerSideEncryptionArgs

func TableServerSideEncryptionPtr(v *TableServerSideEncryptionArgs) TableServerSideEncryptionPtrInput {	return (*tableServerSideEncryptionPtrType)(v)
}

func (*tableServerSideEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TableServerSideEncryption)(nil)).Elem()
}

func (i *tableServerSideEncryptionPtrType) ToTableServerSideEncryptionPtrOutput() TableServerSideEncryptionPtrOutput {
	return i.ToTableServerSideEncryptionPtrOutputWithContext(context.Background())
}

func (i *tableServerSideEncryptionPtrType) ToTableServerSideEncryptionPtrOutputWithContext(ctx context.Context) TableServerSideEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableServerSideEncryptionPtrOutput)
}

type TableServerSideEncryptionOutput struct { *pulumi.OutputState }

func (TableServerSideEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableServerSideEncryption)(nil)).Elem()
}

func (o TableServerSideEncryptionOutput) ToTableServerSideEncryptionOutput() TableServerSideEncryptionOutput {
	return o
}

func (o TableServerSideEncryptionOutput) ToTableServerSideEncryptionOutputWithContext(ctx context.Context) TableServerSideEncryptionOutput {
	return o
}

func (o TableServerSideEncryptionOutput) ToTableServerSideEncryptionPtrOutput() TableServerSideEncryptionPtrOutput {
	return o.ToTableServerSideEncryptionPtrOutputWithContext(context.Background())
}

func (o TableServerSideEncryptionOutput) ToTableServerSideEncryptionPtrOutputWithContext(ctx context.Context) TableServerSideEncryptionPtrOutput {
	return o.ApplyT(func(v TableServerSideEncryption) *TableServerSideEncryption {
		return &v
	}).(TableServerSideEncryptionPtrOutput)
}
// Whether to enable point-in-time recovery - note that it can take up to 10 minutes to enable for new tables. If the `pointInTimeRecovery` block is not provided then this defaults to `false`.
func (o TableServerSideEncryptionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func (v TableServerSideEncryption) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type TableServerSideEncryptionPtrOutput struct { *pulumi.OutputState}

func (TableServerSideEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableServerSideEncryption)(nil)).Elem()
}

func (o TableServerSideEncryptionPtrOutput) ToTableServerSideEncryptionPtrOutput() TableServerSideEncryptionPtrOutput {
	return o
}

func (o TableServerSideEncryptionPtrOutput) ToTableServerSideEncryptionPtrOutputWithContext(ctx context.Context) TableServerSideEncryptionPtrOutput {
	return o
}

func (o TableServerSideEncryptionPtrOutput) Elem() TableServerSideEncryptionOutput {
	return o.ApplyT(func (v *TableServerSideEncryption) TableServerSideEncryption { return *v }).(TableServerSideEncryptionOutput)
}

// Whether to enable point-in-time recovery - note that it can take up to 10 minutes to enable for new tables. If the `pointInTimeRecovery` block is not provided then this defaults to `false`.
func (o TableServerSideEncryptionPtrOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func (v TableServerSideEncryption) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(TableServerSideEncryptionOutput{})
	pulumi.RegisterOutputType(TableServerSideEncryptionPtrOutput{})
}
