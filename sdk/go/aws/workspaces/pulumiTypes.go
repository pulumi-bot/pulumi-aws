// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package workspaces

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type DirectorySelfServicePermissions struct {
	ChangeComputeType  *bool `pulumi:"changeComputeType"`
	IncreaseVolumeSize *bool `pulumi:"increaseVolumeSize"`
	RebuildWorkspace   *bool `pulumi:"rebuildWorkspace"`
	RestartWorkspace   *bool `pulumi:"restartWorkspace"`
	SwitchRunningMode  *bool `pulumi:"switchRunningMode"`
}

// DirectorySelfServicePermissionsInput is an input type that accepts DirectorySelfServicePermissionsArgs and DirectorySelfServicePermissionsOutput values.
// You can construct a concrete instance of `DirectorySelfServicePermissionsInput` via:
//
//          DirectorySelfServicePermissionsArgs{...}
type DirectorySelfServicePermissionsInput interface {
	pulumi.Input

	ToDirectorySelfServicePermissionsOutput() DirectorySelfServicePermissionsOutput
	ToDirectorySelfServicePermissionsOutputWithContext(context.Context) DirectorySelfServicePermissionsOutput
}

type DirectorySelfServicePermissionsArgs struct {
	ChangeComputeType  pulumi.BoolPtrInput `pulumi:"changeComputeType"`
	IncreaseVolumeSize pulumi.BoolPtrInput `pulumi:"increaseVolumeSize"`
	RebuildWorkspace   pulumi.BoolPtrInput `pulumi:"rebuildWorkspace"`
	RestartWorkspace   pulumi.BoolPtrInput `pulumi:"restartWorkspace"`
	SwitchRunningMode  pulumi.BoolPtrInput `pulumi:"switchRunningMode"`
}

func (DirectorySelfServicePermissionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectorySelfServicePermissions)(nil)).Elem()
}

func (i DirectorySelfServicePermissionsArgs) ToDirectorySelfServicePermissionsOutput() DirectorySelfServicePermissionsOutput {
	return i.ToDirectorySelfServicePermissionsOutputWithContext(context.Background())
}

func (i DirectorySelfServicePermissionsArgs) ToDirectorySelfServicePermissionsOutputWithContext(ctx context.Context) DirectorySelfServicePermissionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectorySelfServicePermissionsOutput)
}

func (i DirectorySelfServicePermissionsArgs) ToDirectorySelfServicePermissionsPtrOutput() DirectorySelfServicePermissionsPtrOutput {
	return i.ToDirectorySelfServicePermissionsPtrOutputWithContext(context.Background())
}

func (i DirectorySelfServicePermissionsArgs) ToDirectorySelfServicePermissionsPtrOutputWithContext(ctx context.Context) DirectorySelfServicePermissionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectorySelfServicePermissionsOutput).ToDirectorySelfServicePermissionsPtrOutputWithContext(ctx)
}

// DirectorySelfServicePermissionsPtrInput is an input type that accepts DirectorySelfServicePermissionsArgs, DirectorySelfServicePermissionsPtr and DirectorySelfServicePermissionsPtrOutput values.
// You can construct a concrete instance of `DirectorySelfServicePermissionsPtrInput` via:
//
//          DirectorySelfServicePermissionsArgs{...}
//
//  or:
//
//          nil
type DirectorySelfServicePermissionsPtrInput interface {
	pulumi.Input

	ToDirectorySelfServicePermissionsPtrOutput() DirectorySelfServicePermissionsPtrOutput
	ToDirectorySelfServicePermissionsPtrOutputWithContext(context.Context) DirectorySelfServicePermissionsPtrOutput
}

type directorySelfServicePermissionsPtrType DirectorySelfServicePermissionsArgs

func DirectorySelfServicePermissionsPtr(v *DirectorySelfServicePermissionsArgs) DirectorySelfServicePermissionsPtrInput {
	return (*directorySelfServicePermissionsPtrType)(v)
}

func (*directorySelfServicePermissionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectorySelfServicePermissions)(nil)).Elem()
}

func (i *directorySelfServicePermissionsPtrType) ToDirectorySelfServicePermissionsPtrOutput() DirectorySelfServicePermissionsPtrOutput {
	return i.ToDirectorySelfServicePermissionsPtrOutputWithContext(context.Background())
}

func (i *directorySelfServicePermissionsPtrType) ToDirectorySelfServicePermissionsPtrOutputWithContext(ctx context.Context) DirectorySelfServicePermissionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectorySelfServicePermissionsPtrOutput)
}

type DirectorySelfServicePermissionsOutput struct{ *pulumi.OutputState }

func (DirectorySelfServicePermissionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectorySelfServicePermissions)(nil)).Elem()
}

func (o DirectorySelfServicePermissionsOutput) ToDirectorySelfServicePermissionsOutput() DirectorySelfServicePermissionsOutput {
	return o
}

func (o DirectorySelfServicePermissionsOutput) ToDirectorySelfServicePermissionsOutputWithContext(ctx context.Context) DirectorySelfServicePermissionsOutput {
	return o
}

func (o DirectorySelfServicePermissionsOutput) ToDirectorySelfServicePermissionsPtrOutput() DirectorySelfServicePermissionsPtrOutput {
	return o.ToDirectorySelfServicePermissionsPtrOutputWithContext(context.Background())
}

func (o DirectorySelfServicePermissionsOutput) ToDirectorySelfServicePermissionsPtrOutputWithContext(ctx context.Context) DirectorySelfServicePermissionsPtrOutput {
	return o.ApplyT(func(v DirectorySelfServicePermissions) *DirectorySelfServicePermissions {
		return &v
	}).(DirectorySelfServicePermissionsPtrOutput)
}
func (o DirectorySelfServicePermissionsOutput) ChangeComputeType() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectorySelfServicePermissions) *bool { return v.ChangeComputeType }).(pulumi.BoolPtrOutput)
}

func (o DirectorySelfServicePermissionsOutput) IncreaseVolumeSize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectorySelfServicePermissions) *bool { return v.IncreaseVolumeSize }).(pulumi.BoolPtrOutput)
}

func (o DirectorySelfServicePermissionsOutput) RebuildWorkspace() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectorySelfServicePermissions) *bool { return v.RebuildWorkspace }).(pulumi.BoolPtrOutput)
}

func (o DirectorySelfServicePermissionsOutput) RestartWorkspace() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectorySelfServicePermissions) *bool { return v.RestartWorkspace }).(pulumi.BoolPtrOutput)
}

func (o DirectorySelfServicePermissionsOutput) SwitchRunningMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectorySelfServicePermissions) *bool { return v.SwitchRunningMode }).(pulumi.BoolPtrOutput)
}

type DirectorySelfServicePermissionsPtrOutput struct{ *pulumi.OutputState }

func (DirectorySelfServicePermissionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectorySelfServicePermissions)(nil)).Elem()
}

func (o DirectorySelfServicePermissionsPtrOutput) ToDirectorySelfServicePermissionsPtrOutput() DirectorySelfServicePermissionsPtrOutput {
	return o
}

func (o DirectorySelfServicePermissionsPtrOutput) ToDirectorySelfServicePermissionsPtrOutputWithContext(ctx context.Context) DirectorySelfServicePermissionsPtrOutput {
	return o
}

func (o DirectorySelfServicePermissionsPtrOutput) Elem() DirectorySelfServicePermissionsOutput {
	return o.ApplyT(func(v *DirectorySelfServicePermissions) DirectorySelfServicePermissions { return *v }).(DirectorySelfServicePermissionsOutput)
}

func (o DirectorySelfServicePermissionsPtrOutput) ChangeComputeType() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DirectorySelfServicePermissions) *bool {
		if v == nil {
			return nil
		}
		return v.ChangeComputeType
	}).(pulumi.BoolPtrOutput)
}

func (o DirectorySelfServicePermissionsPtrOutput) IncreaseVolumeSize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DirectorySelfServicePermissions) *bool {
		if v == nil {
			return nil
		}
		return v.IncreaseVolumeSize
	}).(pulumi.BoolPtrOutput)
}

func (o DirectorySelfServicePermissionsPtrOutput) RebuildWorkspace() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DirectorySelfServicePermissions) *bool {
		if v == nil {
			return nil
		}
		return v.RebuildWorkspace
	}).(pulumi.BoolPtrOutput)
}

func (o DirectorySelfServicePermissionsPtrOutput) RestartWorkspace() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DirectorySelfServicePermissions) *bool {
		if v == nil {
			return nil
		}
		return v.RestartWorkspace
	}).(pulumi.BoolPtrOutput)
}

func (o DirectorySelfServicePermissionsPtrOutput) SwitchRunningMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DirectorySelfServicePermissions) *bool {
		if v == nil {
			return nil
		}
		return v.SwitchRunningMode
	}).(pulumi.BoolPtrOutput)
}

type IpGroupRule struct {
	Description *string `pulumi:"description"`
	Source      string  `pulumi:"source"`
}

// IpGroupRuleInput is an input type that accepts IpGroupRuleArgs and IpGroupRuleOutput values.
// You can construct a concrete instance of `IpGroupRuleInput` via:
//
//          IpGroupRuleArgs{...}
type IpGroupRuleInput interface {
	pulumi.Input

	ToIpGroupRuleOutput() IpGroupRuleOutput
	ToIpGroupRuleOutputWithContext(context.Context) IpGroupRuleOutput
}

type IpGroupRuleArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Source      pulumi.StringInput    `pulumi:"source"`
}

func (IpGroupRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpGroupRule)(nil)).Elem()
}

func (i IpGroupRuleArgs) ToIpGroupRuleOutput() IpGroupRuleOutput {
	return i.ToIpGroupRuleOutputWithContext(context.Background())
}

func (i IpGroupRuleArgs) ToIpGroupRuleOutputWithContext(ctx context.Context) IpGroupRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpGroupRuleOutput)
}

// IpGroupRuleArrayInput is an input type that accepts IpGroupRuleArray and IpGroupRuleArrayOutput values.
// You can construct a concrete instance of `IpGroupRuleArrayInput` via:
//
//          IpGroupRuleArray{ IpGroupRuleArgs{...} }
type IpGroupRuleArrayInput interface {
	pulumi.Input

	ToIpGroupRuleArrayOutput() IpGroupRuleArrayOutput
	ToIpGroupRuleArrayOutputWithContext(context.Context) IpGroupRuleArrayOutput
}

type IpGroupRuleArray []IpGroupRuleInput

func (IpGroupRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpGroupRule)(nil)).Elem()
}

func (i IpGroupRuleArray) ToIpGroupRuleArrayOutput() IpGroupRuleArrayOutput {
	return i.ToIpGroupRuleArrayOutputWithContext(context.Background())
}

func (i IpGroupRuleArray) ToIpGroupRuleArrayOutputWithContext(ctx context.Context) IpGroupRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpGroupRuleArrayOutput)
}

type IpGroupRuleOutput struct{ *pulumi.OutputState }

func (IpGroupRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpGroupRule)(nil)).Elem()
}

func (o IpGroupRuleOutput) ToIpGroupRuleOutput() IpGroupRuleOutput {
	return o
}

func (o IpGroupRuleOutput) ToIpGroupRuleOutputWithContext(ctx context.Context) IpGroupRuleOutput {
	return o
}

func (o IpGroupRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpGroupRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o IpGroupRuleOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v IpGroupRule) string { return v.Source }).(pulumi.StringOutput)
}

type IpGroupRuleArrayOutput struct{ *pulumi.OutputState }

func (IpGroupRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpGroupRule)(nil)).Elem()
}

func (o IpGroupRuleArrayOutput) ToIpGroupRuleArrayOutput() IpGroupRuleArrayOutput {
	return o
}

func (o IpGroupRuleArrayOutput) ToIpGroupRuleArrayOutputWithContext(ctx context.Context) IpGroupRuleArrayOutput {
	return o
}

func (o IpGroupRuleArrayOutput) Index(i pulumi.IntInput) IpGroupRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpGroupRule {
		return vs[0].([]IpGroupRule)[vs[1].(int)]
	}).(IpGroupRuleOutput)
}

type WorkspaceWorkspaceProperties struct {
	ComputeTypeName                     *string `pulumi:"computeTypeName"`
	RootVolumeSizeGib                   *int    `pulumi:"rootVolumeSizeGib"`
	RunningMode                         *string `pulumi:"runningMode"`
	RunningModeAutoStopTimeoutInMinutes *int    `pulumi:"runningModeAutoStopTimeoutInMinutes"`
	UserVolumeSizeGib                   *int    `pulumi:"userVolumeSizeGib"`
}

// WorkspaceWorkspacePropertiesInput is an input type that accepts WorkspaceWorkspacePropertiesArgs and WorkspaceWorkspacePropertiesOutput values.
// You can construct a concrete instance of `WorkspaceWorkspacePropertiesInput` via:
//
//          WorkspaceWorkspacePropertiesArgs{...}
type WorkspaceWorkspacePropertiesInput interface {
	pulumi.Input

	ToWorkspaceWorkspacePropertiesOutput() WorkspaceWorkspacePropertiesOutput
	ToWorkspaceWorkspacePropertiesOutputWithContext(context.Context) WorkspaceWorkspacePropertiesOutput
}

type WorkspaceWorkspacePropertiesArgs struct {
	ComputeTypeName                     pulumi.StringPtrInput `pulumi:"computeTypeName"`
	RootVolumeSizeGib                   pulumi.IntPtrInput    `pulumi:"rootVolumeSizeGib"`
	RunningMode                         pulumi.StringPtrInput `pulumi:"runningMode"`
	RunningModeAutoStopTimeoutInMinutes pulumi.IntPtrInput    `pulumi:"runningModeAutoStopTimeoutInMinutes"`
	UserVolumeSizeGib                   pulumi.IntPtrInput    `pulumi:"userVolumeSizeGib"`
}

func (WorkspaceWorkspacePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceWorkspaceProperties)(nil)).Elem()
}

func (i WorkspaceWorkspacePropertiesArgs) ToWorkspaceWorkspacePropertiesOutput() WorkspaceWorkspacePropertiesOutput {
	return i.ToWorkspaceWorkspacePropertiesOutputWithContext(context.Background())
}

func (i WorkspaceWorkspacePropertiesArgs) ToWorkspaceWorkspacePropertiesOutputWithContext(ctx context.Context) WorkspaceWorkspacePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceWorkspacePropertiesOutput)
}

func (i WorkspaceWorkspacePropertiesArgs) ToWorkspaceWorkspacePropertiesPtrOutput() WorkspaceWorkspacePropertiesPtrOutput {
	return i.ToWorkspaceWorkspacePropertiesPtrOutputWithContext(context.Background())
}

func (i WorkspaceWorkspacePropertiesArgs) ToWorkspaceWorkspacePropertiesPtrOutputWithContext(ctx context.Context) WorkspaceWorkspacePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceWorkspacePropertiesOutput).ToWorkspaceWorkspacePropertiesPtrOutputWithContext(ctx)
}

// WorkspaceWorkspacePropertiesPtrInput is an input type that accepts WorkspaceWorkspacePropertiesArgs, WorkspaceWorkspacePropertiesPtr and WorkspaceWorkspacePropertiesPtrOutput values.
// You can construct a concrete instance of `WorkspaceWorkspacePropertiesPtrInput` via:
//
//          WorkspaceWorkspacePropertiesArgs{...}
//
//  or:
//
//          nil
type WorkspaceWorkspacePropertiesPtrInput interface {
	pulumi.Input

	ToWorkspaceWorkspacePropertiesPtrOutput() WorkspaceWorkspacePropertiesPtrOutput
	ToWorkspaceWorkspacePropertiesPtrOutputWithContext(context.Context) WorkspaceWorkspacePropertiesPtrOutput
}

type workspaceWorkspacePropertiesPtrType WorkspaceWorkspacePropertiesArgs

func WorkspaceWorkspacePropertiesPtr(v *WorkspaceWorkspacePropertiesArgs) WorkspaceWorkspacePropertiesPtrInput {
	return (*workspaceWorkspacePropertiesPtrType)(v)
}

func (*workspaceWorkspacePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceWorkspaceProperties)(nil)).Elem()
}

func (i *workspaceWorkspacePropertiesPtrType) ToWorkspaceWorkspacePropertiesPtrOutput() WorkspaceWorkspacePropertiesPtrOutput {
	return i.ToWorkspaceWorkspacePropertiesPtrOutputWithContext(context.Background())
}

func (i *workspaceWorkspacePropertiesPtrType) ToWorkspaceWorkspacePropertiesPtrOutputWithContext(ctx context.Context) WorkspaceWorkspacePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceWorkspacePropertiesPtrOutput)
}

type WorkspaceWorkspacePropertiesOutput struct{ *pulumi.OutputState }

func (WorkspaceWorkspacePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceWorkspaceProperties)(nil)).Elem()
}

func (o WorkspaceWorkspacePropertiesOutput) ToWorkspaceWorkspacePropertiesOutput() WorkspaceWorkspacePropertiesOutput {
	return o
}

func (o WorkspaceWorkspacePropertiesOutput) ToWorkspaceWorkspacePropertiesOutputWithContext(ctx context.Context) WorkspaceWorkspacePropertiesOutput {
	return o
}

func (o WorkspaceWorkspacePropertiesOutput) ToWorkspaceWorkspacePropertiesPtrOutput() WorkspaceWorkspacePropertiesPtrOutput {
	return o.ToWorkspaceWorkspacePropertiesPtrOutputWithContext(context.Background())
}

func (o WorkspaceWorkspacePropertiesOutput) ToWorkspaceWorkspacePropertiesPtrOutputWithContext(ctx context.Context) WorkspaceWorkspacePropertiesPtrOutput {
	return o.ApplyT(func(v WorkspaceWorkspaceProperties) *WorkspaceWorkspaceProperties {
		return &v
	}).(WorkspaceWorkspacePropertiesPtrOutput)
}
func (o WorkspaceWorkspacePropertiesOutput) ComputeTypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceWorkspaceProperties) *string { return v.ComputeTypeName }).(pulumi.StringPtrOutput)
}

func (o WorkspaceWorkspacePropertiesOutput) RootVolumeSizeGib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkspaceWorkspaceProperties) *int { return v.RootVolumeSizeGib }).(pulumi.IntPtrOutput)
}

func (o WorkspaceWorkspacePropertiesOutput) RunningMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceWorkspaceProperties) *string { return v.RunningMode }).(pulumi.StringPtrOutput)
}

func (o WorkspaceWorkspacePropertiesOutput) RunningModeAutoStopTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkspaceWorkspaceProperties) *int { return v.RunningModeAutoStopTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

func (o WorkspaceWorkspacePropertiesOutput) UserVolumeSizeGib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkspaceWorkspaceProperties) *int { return v.UserVolumeSizeGib }).(pulumi.IntPtrOutput)
}

type WorkspaceWorkspacePropertiesPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceWorkspacePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceWorkspaceProperties)(nil)).Elem()
}

func (o WorkspaceWorkspacePropertiesPtrOutput) ToWorkspaceWorkspacePropertiesPtrOutput() WorkspaceWorkspacePropertiesPtrOutput {
	return o
}

func (o WorkspaceWorkspacePropertiesPtrOutput) ToWorkspaceWorkspacePropertiesPtrOutputWithContext(ctx context.Context) WorkspaceWorkspacePropertiesPtrOutput {
	return o
}

func (o WorkspaceWorkspacePropertiesPtrOutput) Elem() WorkspaceWorkspacePropertiesOutput {
	return o.ApplyT(func(v *WorkspaceWorkspaceProperties) WorkspaceWorkspaceProperties { return *v }).(WorkspaceWorkspacePropertiesOutput)
}

func (o WorkspaceWorkspacePropertiesPtrOutput) ComputeTypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceWorkspaceProperties) *string {
		if v == nil {
			return nil
		}
		return v.ComputeTypeName
	}).(pulumi.StringPtrOutput)
}

func (o WorkspaceWorkspacePropertiesPtrOutput) RootVolumeSizeGib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkspaceWorkspaceProperties) *int {
		if v == nil {
			return nil
		}
		return v.RootVolumeSizeGib
	}).(pulumi.IntPtrOutput)
}

func (o WorkspaceWorkspacePropertiesPtrOutput) RunningMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceWorkspaceProperties) *string {
		if v == nil {
			return nil
		}
		return v.RunningMode
	}).(pulumi.StringPtrOutput)
}

func (o WorkspaceWorkspacePropertiesPtrOutput) RunningModeAutoStopTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkspaceWorkspaceProperties) *int {
		if v == nil {
			return nil
		}
		return v.RunningModeAutoStopTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

func (o WorkspaceWorkspacePropertiesPtrOutput) UserVolumeSizeGib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkspaceWorkspaceProperties) *int {
		if v == nil {
			return nil
		}
		return v.UserVolumeSizeGib
	}).(pulumi.IntPtrOutput)
}

type GetBundleComputeType struct {
	Name string `pulumi:"name"`
}

// GetBundleComputeTypeInput is an input type that accepts GetBundleComputeTypeArgs and GetBundleComputeTypeOutput values.
// You can construct a concrete instance of `GetBundleComputeTypeInput` via:
//
//          GetBundleComputeTypeArgs{...}
type GetBundleComputeTypeInput interface {
	pulumi.Input

	ToGetBundleComputeTypeOutput() GetBundleComputeTypeOutput
	ToGetBundleComputeTypeOutputWithContext(context.Context) GetBundleComputeTypeOutput
}

type GetBundleComputeTypeArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetBundleComputeTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBundleComputeType)(nil)).Elem()
}

func (i GetBundleComputeTypeArgs) ToGetBundleComputeTypeOutput() GetBundleComputeTypeOutput {
	return i.ToGetBundleComputeTypeOutputWithContext(context.Background())
}

func (i GetBundleComputeTypeArgs) ToGetBundleComputeTypeOutputWithContext(ctx context.Context) GetBundleComputeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBundleComputeTypeOutput)
}

// GetBundleComputeTypeArrayInput is an input type that accepts GetBundleComputeTypeArray and GetBundleComputeTypeArrayOutput values.
// You can construct a concrete instance of `GetBundleComputeTypeArrayInput` via:
//
//          GetBundleComputeTypeArray{ GetBundleComputeTypeArgs{...} }
type GetBundleComputeTypeArrayInput interface {
	pulumi.Input

	ToGetBundleComputeTypeArrayOutput() GetBundleComputeTypeArrayOutput
	ToGetBundleComputeTypeArrayOutputWithContext(context.Context) GetBundleComputeTypeArrayOutput
}

type GetBundleComputeTypeArray []GetBundleComputeTypeInput

func (GetBundleComputeTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBundleComputeType)(nil)).Elem()
}

func (i GetBundleComputeTypeArray) ToGetBundleComputeTypeArrayOutput() GetBundleComputeTypeArrayOutput {
	return i.ToGetBundleComputeTypeArrayOutputWithContext(context.Background())
}

func (i GetBundleComputeTypeArray) ToGetBundleComputeTypeArrayOutputWithContext(ctx context.Context) GetBundleComputeTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBundleComputeTypeArrayOutput)
}

type GetBundleComputeTypeOutput struct{ *pulumi.OutputState }

func (GetBundleComputeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBundleComputeType)(nil)).Elem()
}

func (o GetBundleComputeTypeOutput) ToGetBundleComputeTypeOutput() GetBundleComputeTypeOutput {
	return o
}

func (o GetBundleComputeTypeOutput) ToGetBundleComputeTypeOutputWithContext(ctx context.Context) GetBundleComputeTypeOutput {
	return o
}

func (o GetBundleComputeTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBundleComputeType) string { return v.Name }).(pulumi.StringOutput)
}

type GetBundleComputeTypeArrayOutput struct{ *pulumi.OutputState }

func (GetBundleComputeTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBundleComputeType)(nil)).Elem()
}

func (o GetBundleComputeTypeArrayOutput) ToGetBundleComputeTypeArrayOutput() GetBundleComputeTypeArrayOutput {
	return o
}

func (o GetBundleComputeTypeArrayOutput) ToGetBundleComputeTypeArrayOutputWithContext(ctx context.Context) GetBundleComputeTypeArrayOutput {
	return o
}

func (o GetBundleComputeTypeArrayOutput) Index(i pulumi.IntInput) GetBundleComputeTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBundleComputeType {
		return vs[0].([]GetBundleComputeType)[vs[1].(int)]
	}).(GetBundleComputeTypeOutput)
}

type GetBundleRootStorage struct {
	Capacity string `pulumi:"capacity"`
}

// GetBundleRootStorageInput is an input type that accepts GetBundleRootStorageArgs and GetBundleRootStorageOutput values.
// You can construct a concrete instance of `GetBundleRootStorageInput` via:
//
//          GetBundleRootStorageArgs{...}
type GetBundleRootStorageInput interface {
	pulumi.Input

	ToGetBundleRootStorageOutput() GetBundleRootStorageOutput
	ToGetBundleRootStorageOutputWithContext(context.Context) GetBundleRootStorageOutput
}

type GetBundleRootStorageArgs struct {
	Capacity pulumi.StringInput `pulumi:"capacity"`
}

func (GetBundleRootStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBundleRootStorage)(nil)).Elem()
}

func (i GetBundleRootStorageArgs) ToGetBundleRootStorageOutput() GetBundleRootStorageOutput {
	return i.ToGetBundleRootStorageOutputWithContext(context.Background())
}

func (i GetBundleRootStorageArgs) ToGetBundleRootStorageOutputWithContext(ctx context.Context) GetBundleRootStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBundleRootStorageOutput)
}

// GetBundleRootStorageArrayInput is an input type that accepts GetBundleRootStorageArray and GetBundleRootStorageArrayOutput values.
// You can construct a concrete instance of `GetBundleRootStorageArrayInput` via:
//
//          GetBundleRootStorageArray{ GetBundleRootStorageArgs{...} }
type GetBundleRootStorageArrayInput interface {
	pulumi.Input

	ToGetBundleRootStorageArrayOutput() GetBundleRootStorageArrayOutput
	ToGetBundleRootStorageArrayOutputWithContext(context.Context) GetBundleRootStorageArrayOutput
}

type GetBundleRootStorageArray []GetBundleRootStorageInput

func (GetBundleRootStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBundleRootStorage)(nil)).Elem()
}

func (i GetBundleRootStorageArray) ToGetBundleRootStorageArrayOutput() GetBundleRootStorageArrayOutput {
	return i.ToGetBundleRootStorageArrayOutputWithContext(context.Background())
}

func (i GetBundleRootStorageArray) ToGetBundleRootStorageArrayOutputWithContext(ctx context.Context) GetBundleRootStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBundleRootStorageArrayOutput)
}

type GetBundleRootStorageOutput struct{ *pulumi.OutputState }

func (GetBundleRootStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBundleRootStorage)(nil)).Elem()
}

func (o GetBundleRootStorageOutput) ToGetBundleRootStorageOutput() GetBundleRootStorageOutput {
	return o
}

func (o GetBundleRootStorageOutput) ToGetBundleRootStorageOutputWithContext(ctx context.Context) GetBundleRootStorageOutput {
	return o
}

func (o GetBundleRootStorageOutput) Capacity() pulumi.StringOutput {
	return o.ApplyT(func(v GetBundleRootStorage) string { return v.Capacity }).(pulumi.StringOutput)
}

type GetBundleRootStorageArrayOutput struct{ *pulumi.OutputState }

func (GetBundleRootStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBundleRootStorage)(nil)).Elem()
}

func (o GetBundleRootStorageArrayOutput) ToGetBundleRootStorageArrayOutput() GetBundleRootStorageArrayOutput {
	return o
}

func (o GetBundleRootStorageArrayOutput) ToGetBundleRootStorageArrayOutputWithContext(ctx context.Context) GetBundleRootStorageArrayOutput {
	return o
}

func (o GetBundleRootStorageArrayOutput) Index(i pulumi.IntInput) GetBundleRootStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBundleRootStorage {
		return vs[0].([]GetBundleRootStorage)[vs[1].(int)]
	}).(GetBundleRootStorageOutput)
}

type GetBundleUserStorage struct {
	Capacity string `pulumi:"capacity"`
}

// GetBundleUserStorageInput is an input type that accepts GetBundleUserStorageArgs and GetBundleUserStorageOutput values.
// You can construct a concrete instance of `GetBundleUserStorageInput` via:
//
//          GetBundleUserStorageArgs{...}
type GetBundleUserStorageInput interface {
	pulumi.Input

	ToGetBundleUserStorageOutput() GetBundleUserStorageOutput
	ToGetBundleUserStorageOutputWithContext(context.Context) GetBundleUserStorageOutput
}

type GetBundleUserStorageArgs struct {
	Capacity pulumi.StringInput `pulumi:"capacity"`
}

func (GetBundleUserStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBundleUserStorage)(nil)).Elem()
}

func (i GetBundleUserStorageArgs) ToGetBundleUserStorageOutput() GetBundleUserStorageOutput {
	return i.ToGetBundleUserStorageOutputWithContext(context.Background())
}

func (i GetBundleUserStorageArgs) ToGetBundleUserStorageOutputWithContext(ctx context.Context) GetBundleUserStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBundleUserStorageOutput)
}

// GetBundleUserStorageArrayInput is an input type that accepts GetBundleUserStorageArray and GetBundleUserStorageArrayOutput values.
// You can construct a concrete instance of `GetBundleUserStorageArrayInput` via:
//
//          GetBundleUserStorageArray{ GetBundleUserStorageArgs{...} }
type GetBundleUserStorageArrayInput interface {
	pulumi.Input

	ToGetBundleUserStorageArrayOutput() GetBundleUserStorageArrayOutput
	ToGetBundleUserStorageArrayOutputWithContext(context.Context) GetBundleUserStorageArrayOutput
}

type GetBundleUserStorageArray []GetBundleUserStorageInput

func (GetBundleUserStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBundleUserStorage)(nil)).Elem()
}

func (i GetBundleUserStorageArray) ToGetBundleUserStorageArrayOutput() GetBundleUserStorageArrayOutput {
	return i.ToGetBundleUserStorageArrayOutputWithContext(context.Background())
}

func (i GetBundleUserStorageArray) ToGetBundleUserStorageArrayOutputWithContext(ctx context.Context) GetBundleUserStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBundleUserStorageArrayOutput)
}

type GetBundleUserStorageOutput struct{ *pulumi.OutputState }

func (GetBundleUserStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBundleUserStorage)(nil)).Elem()
}

func (o GetBundleUserStorageOutput) ToGetBundleUserStorageOutput() GetBundleUserStorageOutput {
	return o
}

func (o GetBundleUserStorageOutput) ToGetBundleUserStorageOutputWithContext(ctx context.Context) GetBundleUserStorageOutput {
	return o
}

func (o GetBundleUserStorageOutput) Capacity() pulumi.StringOutput {
	return o.ApplyT(func(v GetBundleUserStorage) string { return v.Capacity }).(pulumi.StringOutput)
}

type GetBundleUserStorageArrayOutput struct{ *pulumi.OutputState }

func (GetBundleUserStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBundleUserStorage)(nil)).Elem()
}

func (o GetBundleUserStorageArrayOutput) ToGetBundleUserStorageArrayOutput() GetBundleUserStorageArrayOutput {
	return o
}

func (o GetBundleUserStorageArrayOutput) ToGetBundleUserStorageArrayOutputWithContext(ctx context.Context) GetBundleUserStorageArrayOutput {
	return o
}

func (o GetBundleUserStorageArrayOutput) Index(i pulumi.IntInput) GetBundleUserStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBundleUserStorage {
		return vs[0].([]GetBundleUserStorage)[vs[1].(int)]
	}).(GetBundleUserStorageOutput)
}

type GetDirectorySelfServicePermission struct {
	ChangeComputeType  bool `pulumi:"changeComputeType"`
	IncreaseVolumeSize bool `pulumi:"increaseVolumeSize"`
	RebuildWorkspace   bool `pulumi:"rebuildWorkspace"`
	RestartWorkspace   bool `pulumi:"restartWorkspace"`
	SwitchRunningMode  bool `pulumi:"switchRunningMode"`
}

// GetDirectorySelfServicePermissionInput is an input type that accepts GetDirectorySelfServicePermissionArgs and GetDirectorySelfServicePermissionOutput values.
// You can construct a concrete instance of `GetDirectorySelfServicePermissionInput` via:
//
//          GetDirectorySelfServicePermissionArgs{...}
type GetDirectorySelfServicePermissionInput interface {
	pulumi.Input

	ToGetDirectorySelfServicePermissionOutput() GetDirectorySelfServicePermissionOutput
	ToGetDirectorySelfServicePermissionOutputWithContext(context.Context) GetDirectorySelfServicePermissionOutput
}

type GetDirectorySelfServicePermissionArgs struct {
	ChangeComputeType  pulumi.BoolInput `pulumi:"changeComputeType"`
	IncreaseVolumeSize pulumi.BoolInput `pulumi:"increaseVolumeSize"`
	RebuildWorkspace   pulumi.BoolInput `pulumi:"rebuildWorkspace"`
	RestartWorkspace   pulumi.BoolInput `pulumi:"restartWorkspace"`
	SwitchRunningMode  pulumi.BoolInput `pulumi:"switchRunningMode"`
}

func (GetDirectorySelfServicePermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectorySelfServicePermission)(nil)).Elem()
}

func (i GetDirectorySelfServicePermissionArgs) ToGetDirectorySelfServicePermissionOutput() GetDirectorySelfServicePermissionOutput {
	return i.ToGetDirectorySelfServicePermissionOutputWithContext(context.Background())
}

func (i GetDirectorySelfServicePermissionArgs) ToGetDirectorySelfServicePermissionOutputWithContext(ctx context.Context) GetDirectorySelfServicePermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectorySelfServicePermissionOutput)
}

// GetDirectorySelfServicePermissionArrayInput is an input type that accepts GetDirectorySelfServicePermissionArray and GetDirectorySelfServicePermissionArrayOutput values.
// You can construct a concrete instance of `GetDirectorySelfServicePermissionArrayInput` via:
//
//          GetDirectorySelfServicePermissionArray{ GetDirectorySelfServicePermissionArgs{...} }
type GetDirectorySelfServicePermissionArrayInput interface {
	pulumi.Input

	ToGetDirectorySelfServicePermissionArrayOutput() GetDirectorySelfServicePermissionArrayOutput
	ToGetDirectorySelfServicePermissionArrayOutputWithContext(context.Context) GetDirectorySelfServicePermissionArrayOutput
}

type GetDirectorySelfServicePermissionArray []GetDirectorySelfServicePermissionInput

func (GetDirectorySelfServicePermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectorySelfServicePermission)(nil)).Elem()
}

func (i GetDirectorySelfServicePermissionArray) ToGetDirectorySelfServicePermissionArrayOutput() GetDirectorySelfServicePermissionArrayOutput {
	return i.ToGetDirectorySelfServicePermissionArrayOutputWithContext(context.Background())
}

func (i GetDirectorySelfServicePermissionArray) ToGetDirectorySelfServicePermissionArrayOutputWithContext(ctx context.Context) GetDirectorySelfServicePermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectorySelfServicePermissionArrayOutput)
}

type GetDirectorySelfServicePermissionOutput struct{ *pulumi.OutputState }

func (GetDirectorySelfServicePermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectorySelfServicePermission)(nil)).Elem()
}

func (o GetDirectorySelfServicePermissionOutput) ToGetDirectorySelfServicePermissionOutput() GetDirectorySelfServicePermissionOutput {
	return o
}

func (o GetDirectorySelfServicePermissionOutput) ToGetDirectorySelfServicePermissionOutputWithContext(ctx context.Context) GetDirectorySelfServicePermissionOutput {
	return o
}

func (o GetDirectorySelfServicePermissionOutput) ChangeComputeType() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDirectorySelfServicePermission) bool { return v.ChangeComputeType }).(pulumi.BoolOutput)
}

func (o GetDirectorySelfServicePermissionOutput) IncreaseVolumeSize() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDirectorySelfServicePermission) bool { return v.IncreaseVolumeSize }).(pulumi.BoolOutput)
}

func (o GetDirectorySelfServicePermissionOutput) RebuildWorkspace() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDirectorySelfServicePermission) bool { return v.RebuildWorkspace }).(pulumi.BoolOutput)
}

func (o GetDirectorySelfServicePermissionOutput) RestartWorkspace() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDirectorySelfServicePermission) bool { return v.RestartWorkspace }).(pulumi.BoolOutput)
}

func (o GetDirectorySelfServicePermissionOutput) SwitchRunningMode() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDirectorySelfServicePermission) bool { return v.SwitchRunningMode }).(pulumi.BoolOutput)
}

type GetDirectorySelfServicePermissionArrayOutput struct{ *pulumi.OutputState }

func (GetDirectorySelfServicePermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectorySelfServicePermission)(nil)).Elem()
}

func (o GetDirectorySelfServicePermissionArrayOutput) ToGetDirectorySelfServicePermissionArrayOutput() GetDirectorySelfServicePermissionArrayOutput {
	return o
}

func (o GetDirectorySelfServicePermissionArrayOutput) ToGetDirectorySelfServicePermissionArrayOutputWithContext(ctx context.Context) GetDirectorySelfServicePermissionArrayOutput {
	return o
}

func (o GetDirectorySelfServicePermissionArrayOutput) Index(i pulumi.IntInput) GetDirectorySelfServicePermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDirectorySelfServicePermission {
		return vs[0].([]GetDirectorySelfServicePermission)[vs[1].(int)]
	}).(GetDirectorySelfServicePermissionOutput)
}

func init() {
	pulumi.RegisterOutputType(DirectorySelfServicePermissionsOutput{})
	pulumi.RegisterOutputType(DirectorySelfServicePermissionsPtrOutput{})
	pulumi.RegisterOutputType(IpGroupRuleOutput{})
	pulumi.RegisterOutputType(IpGroupRuleArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceWorkspacePropertiesOutput{})
	pulumi.RegisterOutputType(WorkspaceWorkspacePropertiesPtrOutput{})
	pulumi.RegisterOutputType(GetBundleComputeTypeOutput{})
	pulumi.RegisterOutputType(GetBundleComputeTypeArrayOutput{})
	pulumi.RegisterOutputType(GetBundleRootStorageOutput{})
	pulumi.RegisterOutputType(GetBundleRootStorageArrayOutput{})
	pulumi.RegisterOutputType(GetBundleUserStorageOutput{})
	pulumi.RegisterOutputType(GetBundleUserStorageArrayOutput{})
	pulumi.RegisterOutputType(GetDirectorySelfServicePermissionOutput{})
	pulumi.RegisterOutputType(GetDirectorySelfServicePermissionArrayOutput{})
}
