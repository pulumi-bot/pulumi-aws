// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package workspaces

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Directory struct {
	pulumi.CustomResourceState

	Alias                    pulumi.StringOutput                   `pulumi:"alias"`
	CustomerUserName         pulumi.StringOutput                   `pulumi:"customerUserName"`
	DirectoryId              pulumi.StringOutput                   `pulumi:"directoryId"`
	DirectoryName            pulumi.StringOutput                   `pulumi:"directoryName"`
	DirectoryType            pulumi.StringOutput                   `pulumi:"directoryType"`
	DnsIpAddresses           pulumi.StringArrayOutput              `pulumi:"dnsIpAddresses"`
	IamRoleId                pulumi.StringOutput                   `pulumi:"iamRoleId"`
	IpGroupIds               pulumi.StringArrayOutput              `pulumi:"ipGroupIds"`
	RegistrationCode         pulumi.StringOutput                   `pulumi:"registrationCode"`
	SelfServicePermissions   DirectorySelfServicePermissionsOutput `pulumi:"selfServicePermissions"`
	SubnetIds                pulumi.StringArrayOutput              `pulumi:"subnetIds"`
	Tags                     pulumi.StringMapOutput                `pulumi:"tags"`
	WorkspaceSecurityGroupId pulumi.StringOutput                   `pulumi:"workspaceSecurityGroupId"`
}

// NewDirectory registers a new resource with the given unique name, arguments, and options.
func NewDirectory(ctx *pulumi.Context,
	name string, args *DirectoryArgs, opts ...pulumi.ResourceOption) (*Directory, error) {
	if args == nil || args.DirectoryId == nil {
		return nil, errors.New("missing required argument 'DirectoryId'")
	}
	if args == nil {
		args = &DirectoryArgs{}
	}
	var resource Directory
	err := ctx.RegisterResource("aws:workspaces/directory:Directory", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDirectory gets an existing Directory resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDirectory(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DirectoryState, opts ...pulumi.ResourceOption) (*Directory, error) {
	var resource Directory
	err := ctx.ReadResource("aws:workspaces/directory:Directory", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Directory resources.
type directoryState struct {
	Alias                    *string                          `pulumi:"alias"`
	CustomerUserName         *string                          `pulumi:"customerUserName"`
	DirectoryId              *string                          `pulumi:"directoryId"`
	DirectoryName            *string                          `pulumi:"directoryName"`
	DirectoryType            *string                          `pulumi:"directoryType"`
	DnsIpAddresses           []string                         `pulumi:"dnsIpAddresses"`
	IamRoleId                *string                          `pulumi:"iamRoleId"`
	IpGroupIds               []string                         `pulumi:"ipGroupIds"`
	RegistrationCode         *string                          `pulumi:"registrationCode"`
	SelfServicePermissions   *DirectorySelfServicePermissions `pulumi:"selfServicePermissions"`
	SubnetIds                []string                         `pulumi:"subnetIds"`
	Tags                     map[string]string                `pulumi:"tags"`
	WorkspaceSecurityGroupId *string                          `pulumi:"workspaceSecurityGroupId"`
}

type DirectoryState struct {
	Alias                    pulumi.StringPtrInput
	CustomerUserName         pulumi.StringPtrInput
	DirectoryId              pulumi.StringPtrInput
	DirectoryName            pulumi.StringPtrInput
	DirectoryType            pulumi.StringPtrInput
	DnsIpAddresses           pulumi.StringArrayInput
	IamRoleId                pulumi.StringPtrInput
	IpGroupIds               pulumi.StringArrayInput
	RegistrationCode         pulumi.StringPtrInput
	SelfServicePermissions   DirectorySelfServicePermissionsPtrInput
	SubnetIds                pulumi.StringArrayInput
	Tags                     pulumi.StringMapInput
	WorkspaceSecurityGroupId pulumi.StringPtrInput
}

func (DirectoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*directoryState)(nil)).Elem()
}

type directoryArgs struct {
	DirectoryId            string                           `pulumi:"directoryId"`
	SelfServicePermissions *DirectorySelfServicePermissions `pulumi:"selfServicePermissions"`
	SubnetIds              []string                         `pulumi:"subnetIds"`
	Tags                   map[string]string                `pulumi:"tags"`
}

// The set of arguments for constructing a Directory resource.
type DirectoryArgs struct {
	DirectoryId            pulumi.StringInput
	SelfServicePermissions DirectorySelfServicePermissionsPtrInput
	SubnetIds              pulumi.StringArrayInput
	Tags                   pulumi.StringMapInput
}

func (DirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*directoryArgs)(nil)).Elem()
}
