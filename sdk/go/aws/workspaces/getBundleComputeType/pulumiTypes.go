// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package getBundleComputeType

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type GetBundleComputeType struct {
	// The name of the compute type.
	Name string `pulumi:"name"`
}

type GetBundleComputeTypeInput interface {
	pulumi.Input

	ToGetBundleComputeTypeOutput() GetBundleComputeTypeOutput
	ToGetBundleComputeTypeOutputWithContext(context.Context) GetBundleComputeTypeOutput
}

type GetBundleComputeTypeArgs struct {
	// The name of the compute type.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetBundleComputeTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBundleComputeType)(nil)).Elem()
}

func (i GetBundleComputeTypeArgs) ToGetBundleComputeTypeOutput() GetBundleComputeTypeOutput {
	return i.ToGetBundleComputeTypeOutputWithContext(context.Background())
}

func (i GetBundleComputeTypeArgs) ToGetBundleComputeTypeOutputWithContext(ctx context.Context) GetBundleComputeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBundleComputeTypeOutput)
}

type GetBundleComputeTypeArrayInput interface {
	pulumi.Input

	ToGetBundleComputeTypeArrayOutput() GetBundleComputeTypeArrayOutput
	ToGetBundleComputeTypeArrayOutputWithContext(context.Context) GetBundleComputeTypeArrayOutput
}

type GetBundleComputeTypeArray []GetBundleComputeTypeInput

func (GetBundleComputeTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBundleComputeType)(nil)).Elem()
}

func (i GetBundleComputeTypeArray) ToGetBundleComputeTypeArrayOutput() GetBundleComputeTypeArrayOutput {
	return i.ToGetBundleComputeTypeArrayOutputWithContext(context.Background())
}

func (i GetBundleComputeTypeArray) ToGetBundleComputeTypeArrayOutputWithContext(ctx context.Context) GetBundleComputeTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBundleComputeTypeArrayOutput)
}

type GetBundleComputeTypeOutput struct { *pulumi.OutputState }

func (GetBundleComputeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBundleComputeType)(nil)).Elem()
}

func (o GetBundleComputeTypeOutput) ToGetBundleComputeTypeOutput() GetBundleComputeTypeOutput {
	return o
}

func (o GetBundleComputeTypeOutput) ToGetBundleComputeTypeOutputWithContext(ctx context.Context) GetBundleComputeTypeOutput {
	return o
}

// The name of the compute type.
func (o GetBundleComputeTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetBundleComputeType) string { return v.Name }).(pulumi.StringOutput)
}

type GetBundleComputeTypeArrayOutput struct { *pulumi.OutputState}

func (GetBundleComputeTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBundleComputeType)(nil)).Elem()
}

func (o GetBundleComputeTypeArrayOutput) ToGetBundleComputeTypeArrayOutput() GetBundleComputeTypeArrayOutput {
	return o
}

func (o GetBundleComputeTypeArrayOutput) ToGetBundleComputeTypeArrayOutputWithContext(ctx context.Context) GetBundleComputeTypeArrayOutput {
	return o
}

func (o GetBundleComputeTypeArrayOutput) Index(i pulumi.IntInput) GetBundleComputeTypeOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetBundleComputeType {
		return vs[0].([]GetBundleComputeType)[vs[1].(int)]
	}).(GetBundleComputeTypeOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBundleComputeTypeOutput{})
	pulumi.RegisterOutputType(GetBundleComputeTypeArrayOutput{})
}
