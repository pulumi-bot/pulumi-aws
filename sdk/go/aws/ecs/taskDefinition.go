// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type TaskDefinition struct {
	pulumi.CustomResourceState

	Arn                     pulumi.StringOutput                           `pulumi:"arn"`
	ContainerDefinitions    pulumi.StringOutput                           `pulumi:"containerDefinitions"`
	Cpu                     pulumi.StringPtrOutput                        `pulumi:"cpu"`
	ExecutionRoleArn        pulumi.StringPtrOutput                        `pulumi:"executionRoleArn"`
	Family                  pulumi.StringOutput                           `pulumi:"family"`
	InferenceAccelerators   TaskDefinitionInferenceAcceleratorArrayOutput `pulumi:"inferenceAccelerators"`
	IpcMode                 pulumi.StringPtrOutput                        `pulumi:"ipcMode"`
	Memory                  pulumi.StringPtrOutput                        `pulumi:"memory"`
	NetworkMode             pulumi.StringOutput                           `pulumi:"networkMode"`
	PidMode                 pulumi.StringPtrOutput                        `pulumi:"pidMode"`
	PlacementConstraints    TaskDefinitionPlacementConstraintArrayOutput  `pulumi:"placementConstraints"`
	ProxyConfiguration      TaskDefinitionProxyConfigurationPtrOutput     `pulumi:"proxyConfiguration"`
	RequiresCompatibilities pulumi.StringArrayOutput                      `pulumi:"requiresCompatibilities"`
	Revision                pulumi.IntOutput                              `pulumi:"revision"`
	Tags                    pulumi.StringMapOutput                        `pulumi:"tags"`
	TaskRoleArn             pulumi.StringPtrOutput                        `pulumi:"taskRoleArn"`
	Volumes                 TaskDefinitionVolumeArrayOutput               `pulumi:"volumes"`
}

// NewTaskDefinition registers a new resource with the given unique name, arguments, and options.
func NewTaskDefinition(ctx *pulumi.Context,
	name string, args *TaskDefinitionArgs, opts ...pulumi.ResourceOption) (*TaskDefinition, error) {
	if args == nil || args.ContainerDefinitions == nil {
		return nil, errors.New("missing required argument 'ContainerDefinitions'")
	}
	if args == nil || args.Family == nil {
		return nil, errors.New("missing required argument 'Family'")
	}
	if args == nil {
		args = &TaskDefinitionArgs{}
	}
	var resource TaskDefinition
	err := ctx.RegisterResource("aws:ecs/taskDefinition:TaskDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTaskDefinition gets an existing TaskDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTaskDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TaskDefinitionState, opts ...pulumi.ResourceOption) (*TaskDefinition, error) {
	var resource TaskDefinition
	err := ctx.ReadResource("aws:ecs/taskDefinition:TaskDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TaskDefinition resources.
type taskDefinitionState struct {
	Arn                     *string                              `pulumi:"arn"`
	ContainerDefinitions    *string                              `pulumi:"containerDefinitions"`
	Cpu                     *string                              `pulumi:"cpu"`
	ExecutionRoleArn        *string                              `pulumi:"executionRoleArn"`
	Family                  *string                              `pulumi:"family"`
	InferenceAccelerators   []TaskDefinitionInferenceAccelerator `pulumi:"inferenceAccelerators"`
	IpcMode                 *string                              `pulumi:"ipcMode"`
	Memory                  *string                              `pulumi:"memory"`
	NetworkMode             *string                              `pulumi:"networkMode"`
	PidMode                 *string                              `pulumi:"pidMode"`
	PlacementConstraints    []TaskDefinitionPlacementConstraint  `pulumi:"placementConstraints"`
	ProxyConfiguration      *TaskDefinitionProxyConfiguration    `pulumi:"proxyConfiguration"`
	RequiresCompatibilities []string                             `pulumi:"requiresCompatibilities"`
	Revision                *int                                 `pulumi:"revision"`
	Tags                    map[string]string                    `pulumi:"tags"`
	TaskRoleArn             *string                              `pulumi:"taskRoleArn"`
	Volumes                 []TaskDefinitionVolume               `pulumi:"volumes"`
}

type TaskDefinitionState struct {
	Arn                     pulumi.StringPtrInput
	ContainerDefinitions    pulumi.StringPtrInput
	Cpu                     pulumi.StringPtrInput
	ExecutionRoleArn        pulumi.StringPtrInput
	Family                  pulumi.StringPtrInput
	InferenceAccelerators   TaskDefinitionInferenceAcceleratorArrayInput
	IpcMode                 pulumi.StringPtrInput
	Memory                  pulumi.StringPtrInput
	NetworkMode             pulumi.StringPtrInput
	PidMode                 pulumi.StringPtrInput
	PlacementConstraints    TaskDefinitionPlacementConstraintArrayInput
	ProxyConfiguration      TaskDefinitionProxyConfigurationPtrInput
	RequiresCompatibilities pulumi.StringArrayInput
	Revision                pulumi.IntPtrInput
	Tags                    pulumi.StringMapInput
	TaskRoleArn             pulumi.StringPtrInput
	Volumes                 TaskDefinitionVolumeArrayInput
}

func (TaskDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*taskDefinitionState)(nil)).Elem()
}

type taskDefinitionArgs struct {
	ContainerDefinitions    string                               `pulumi:"containerDefinitions"`
	Cpu                     *string                              `pulumi:"cpu"`
	ExecutionRoleArn        *string                              `pulumi:"executionRoleArn"`
	Family                  string                               `pulumi:"family"`
	InferenceAccelerators   []TaskDefinitionInferenceAccelerator `pulumi:"inferenceAccelerators"`
	IpcMode                 *string                              `pulumi:"ipcMode"`
	Memory                  *string                              `pulumi:"memory"`
	NetworkMode             *string                              `pulumi:"networkMode"`
	PidMode                 *string                              `pulumi:"pidMode"`
	PlacementConstraints    []TaskDefinitionPlacementConstraint  `pulumi:"placementConstraints"`
	ProxyConfiguration      *TaskDefinitionProxyConfiguration    `pulumi:"proxyConfiguration"`
	RequiresCompatibilities []string                             `pulumi:"requiresCompatibilities"`
	Tags                    map[string]string                    `pulumi:"tags"`
	TaskRoleArn             *string                              `pulumi:"taskRoleArn"`
	Volumes                 []TaskDefinitionVolume               `pulumi:"volumes"`
}

// The set of arguments for constructing a TaskDefinition resource.
type TaskDefinitionArgs struct {
	ContainerDefinitions    pulumi.StringInput
	Cpu                     pulumi.StringPtrInput
	ExecutionRoleArn        pulumi.StringPtrInput
	Family                  pulumi.StringInput
	InferenceAccelerators   TaskDefinitionInferenceAcceleratorArrayInput
	IpcMode                 pulumi.StringPtrInput
	Memory                  pulumi.StringPtrInput
	NetworkMode             pulumi.StringPtrInput
	PidMode                 pulumi.StringPtrInput
	PlacementConstraints    TaskDefinitionPlacementConstraintArrayInput
	ProxyConfiguration      TaskDefinitionProxyConfigurationPtrInput
	RequiresCompatibilities pulumi.StringArrayInput
	Tags                    pulumi.StringMapInput
	TaskRoleArn             pulumi.StringPtrInput
	Volumes                 TaskDefinitionVolumeArrayInput
}

func (TaskDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*taskDefinitionArgs)(nil)).Elem()
}
