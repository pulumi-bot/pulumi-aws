// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package worklink

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Fleet struct {
	pulumi.CustomResourceState

	Arn                        pulumi.StringOutput            `pulumi:"arn"`
	AuditStreamArn             pulumi.StringPtrOutput         `pulumi:"auditStreamArn"`
	CompanyCode                pulumi.StringOutput            `pulumi:"companyCode"`
	CreatedTime                pulumi.StringOutput            `pulumi:"createdTime"`
	DeviceCaCertificate        pulumi.StringPtrOutput         `pulumi:"deviceCaCertificate"`
	DisplayName                pulumi.StringPtrOutput         `pulumi:"displayName"`
	IdentityProvider           FleetIdentityProviderPtrOutput `pulumi:"identityProvider"`
	LastUpdatedTime            pulumi.StringOutput            `pulumi:"lastUpdatedTime"`
	Name                       pulumi.StringOutput            `pulumi:"name"`
	Network                    FleetNetworkPtrOutput          `pulumi:"network"`
	OptimizeForEndUserLocation pulumi.BoolPtrOutput           `pulumi:"optimizeForEndUserLocation"`
}

// NewFleet registers a new resource with the given unique name, arguments, and options.
func NewFleet(ctx *pulumi.Context,
	name string, args *FleetArgs, opts ...pulumi.ResourceOption) (*Fleet, error) {
	if args == nil {
		args = &FleetArgs{}
	}
	var resource Fleet
	err := ctx.RegisterResource("aws:worklink/fleet:Fleet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFleet gets an existing Fleet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFleet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FleetState, opts ...pulumi.ResourceOption) (*Fleet, error) {
	var resource Fleet
	err := ctx.ReadResource("aws:worklink/fleet:Fleet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Fleet resources.
type fleetState struct {
	Arn                        *string                `pulumi:"arn"`
	AuditStreamArn             *string                `pulumi:"auditStreamArn"`
	CompanyCode                *string                `pulumi:"companyCode"`
	CreatedTime                *string                `pulumi:"createdTime"`
	DeviceCaCertificate        *string                `pulumi:"deviceCaCertificate"`
	DisplayName                *string                `pulumi:"displayName"`
	IdentityProvider           *FleetIdentityProvider `pulumi:"identityProvider"`
	LastUpdatedTime            *string                `pulumi:"lastUpdatedTime"`
	Name                       *string                `pulumi:"name"`
	Network                    *FleetNetwork          `pulumi:"network"`
	OptimizeForEndUserLocation *bool                  `pulumi:"optimizeForEndUserLocation"`
}

type FleetState struct {
	Arn                        pulumi.StringPtrInput
	AuditStreamArn             pulumi.StringPtrInput
	CompanyCode                pulumi.StringPtrInput
	CreatedTime                pulumi.StringPtrInput
	DeviceCaCertificate        pulumi.StringPtrInput
	DisplayName                pulumi.StringPtrInput
	IdentityProvider           FleetIdentityProviderPtrInput
	LastUpdatedTime            pulumi.StringPtrInput
	Name                       pulumi.StringPtrInput
	Network                    FleetNetworkPtrInput
	OptimizeForEndUserLocation pulumi.BoolPtrInput
}

func (FleetState) ElementType() reflect.Type {
	return reflect.TypeOf((*fleetState)(nil)).Elem()
}

type fleetArgs struct {
	AuditStreamArn             *string                `pulumi:"auditStreamArn"`
	DeviceCaCertificate        *string                `pulumi:"deviceCaCertificate"`
	DisplayName                *string                `pulumi:"displayName"`
	IdentityProvider           *FleetIdentityProvider `pulumi:"identityProvider"`
	Name                       *string                `pulumi:"name"`
	Network                    *FleetNetwork          `pulumi:"network"`
	OptimizeForEndUserLocation *bool                  `pulumi:"optimizeForEndUserLocation"`
}

// The set of arguments for constructing a Fleet resource.
type FleetArgs struct {
	AuditStreamArn             pulumi.StringPtrInput
	DeviceCaCertificate        pulumi.StringPtrInput
	DisplayName                pulumi.StringPtrInput
	IdentityProvider           FleetIdentityProviderPtrInput
	Name                       pulumi.StringPtrInput
	Network                    FleetNetworkPtrInput
	OptimizeForEndUserLocation pulumi.BoolPtrInput
}

func (FleetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fleetArgs)(nil)).Elem()
}
