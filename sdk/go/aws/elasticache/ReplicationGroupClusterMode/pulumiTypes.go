// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ReplicationGroupClusterMode

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ReplicationGroupClusterMode struct {
	// Specify the number of node groups (shards) for this Redis replication group. Changing this number will trigger an online resizing operation before other settings modifications.
	NumNodeGroups int `pulumi:"numNodeGroups"`
	// Specify the number of replica nodes in each node group. Valid values are 0 to 5. Changing this number will force a new resource.
	ReplicasPerNodeGroup int `pulumi:"replicasPerNodeGroup"`
}

type ReplicationGroupClusterModeInput interface {
	pulumi.Input

	ToReplicationGroupClusterModeOutput() ReplicationGroupClusterModeOutput
	ToReplicationGroupClusterModeOutputWithContext(context.Context) ReplicationGroupClusterModeOutput
}

type ReplicationGroupClusterModeArgs struct {
	// Specify the number of node groups (shards) for this Redis replication group. Changing this number will trigger an online resizing operation before other settings modifications.
	NumNodeGroups pulumi.IntInput `pulumi:"numNodeGroups"`
	// Specify the number of replica nodes in each node group. Valid values are 0 to 5. Changing this number will force a new resource.
	ReplicasPerNodeGroup pulumi.IntInput `pulumi:"replicasPerNodeGroup"`
}

func (ReplicationGroupClusterModeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationGroupClusterMode)(nil)).Elem()
}

func (i ReplicationGroupClusterModeArgs) ToReplicationGroupClusterModeOutput() ReplicationGroupClusterModeOutput {
	return i.ToReplicationGroupClusterModeOutputWithContext(context.Background())
}

func (i ReplicationGroupClusterModeArgs) ToReplicationGroupClusterModeOutputWithContext(ctx context.Context) ReplicationGroupClusterModeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationGroupClusterModeOutput)
}

func (i ReplicationGroupClusterModeArgs) ToReplicationGroupClusterModePtrOutput() ReplicationGroupClusterModePtrOutput {
	return i.ToReplicationGroupClusterModePtrOutputWithContext(context.Background())
}

func (i ReplicationGroupClusterModeArgs) ToReplicationGroupClusterModePtrOutputWithContext(ctx context.Context) ReplicationGroupClusterModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationGroupClusterModeOutput).ToReplicationGroupClusterModePtrOutputWithContext(ctx)
}

type ReplicationGroupClusterModePtrInput interface {
	pulumi.Input

	ToReplicationGroupClusterModePtrOutput() ReplicationGroupClusterModePtrOutput
	ToReplicationGroupClusterModePtrOutputWithContext(context.Context) ReplicationGroupClusterModePtrOutput
}

type replicationGroupClusterModePtrType ReplicationGroupClusterModeArgs

func ReplicationGroupClusterModePtr(v *ReplicationGroupClusterModeArgs) ReplicationGroupClusterModePtrInput {	return (*replicationGroupClusterModePtrType)(v)
}

func (*replicationGroupClusterModePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationGroupClusterMode)(nil)).Elem()
}

func (i *replicationGroupClusterModePtrType) ToReplicationGroupClusterModePtrOutput() ReplicationGroupClusterModePtrOutput {
	return i.ToReplicationGroupClusterModePtrOutputWithContext(context.Background())
}

func (i *replicationGroupClusterModePtrType) ToReplicationGroupClusterModePtrOutputWithContext(ctx context.Context) ReplicationGroupClusterModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationGroupClusterModePtrOutput)
}

type ReplicationGroupClusterModeOutput struct { *pulumi.OutputState }

func (ReplicationGroupClusterModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationGroupClusterMode)(nil)).Elem()
}

func (o ReplicationGroupClusterModeOutput) ToReplicationGroupClusterModeOutput() ReplicationGroupClusterModeOutput {
	return o
}

func (o ReplicationGroupClusterModeOutput) ToReplicationGroupClusterModeOutputWithContext(ctx context.Context) ReplicationGroupClusterModeOutput {
	return o
}

func (o ReplicationGroupClusterModeOutput) ToReplicationGroupClusterModePtrOutput() ReplicationGroupClusterModePtrOutput {
	return o.ToReplicationGroupClusterModePtrOutputWithContext(context.Background())
}

func (o ReplicationGroupClusterModeOutput) ToReplicationGroupClusterModePtrOutputWithContext(ctx context.Context) ReplicationGroupClusterModePtrOutput {
	return o.ApplyT(func(v ReplicationGroupClusterMode) *ReplicationGroupClusterMode {
		return &v
	}).(ReplicationGroupClusterModePtrOutput)
}
// Specify the number of node groups (shards) for this Redis replication group. Changing this number will trigger an online resizing operation before other settings modifications.
func (o ReplicationGroupClusterModeOutput) NumNodeGroups() pulumi.IntOutput {
	return o.ApplyT(func (v ReplicationGroupClusterMode) int { return v.NumNodeGroups }).(pulumi.IntOutput)
}

// Specify the number of replica nodes in each node group. Valid values are 0 to 5. Changing this number will force a new resource.
func (o ReplicationGroupClusterModeOutput) ReplicasPerNodeGroup() pulumi.IntOutput {
	return o.ApplyT(func (v ReplicationGroupClusterMode) int { return v.ReplicasPerNodeGroup }).(pulumi.IntOutput)
}

type ReplicationGroupClusterModePtrOutput struct { *pulumi.OutputState}

func (ReplicationGroupClusterModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationGroupClusterMode)(nil)).Elem()
}

func (o ReplicationGroupClusterModePtrOutput) ToReplicationGroupClusterModePtrOutput() ReplicationGroupClusterModePtrOutput {
	return o
}

func (o ReplicationGroupClusterModePtrOutput) ToReplicationGroupClusterModePtrOutputWithContext(ctx context.Context) ReplicationGroupClusterModePtrOutput {
	return o
}

func (o ReplicationGroupClusterModePtrOutput) Elem() ReplicationGroupClusterModeOutput {
	return o.ApplyT(func (v *ReplicationGroupClusterMode) ReplicationGroupClusterMode { return *v }).(ReplicationGroupClusterModeOutput)
}

// Specify the number of node groups (shards) for this Redis replication group. Changing this number will trigger an online resizing operation before other settings modifications.
func (o ReplicationGroupClusterModePtrOutput) NumNodeGroups() pulumi.IntOutput {
	return o.ApplyT(func (v ReplicationGroupClusterMode) int { return v.NumNodeGroups }).(pulumi.IntOutput)
}

// Specify the number of replica nodes in each node group. Valid values are 0 to 5. Changing this number will force a new resource.
func (o ReplicationGroupClusterModePtrOutput) ReplicasPerNodeGroup() pulumi.IntOutput {
	return o.ApplyT(func (v ReplicationGroupClusterMode) int { return v.ReplicasPerNodeGroup }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(ReplicationGroupClusterModeOutput{})
	pulumi.RegisterOutputType(ReplicationGroupClusterModePtrOutput{})
}
