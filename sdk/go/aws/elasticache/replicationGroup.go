// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package elasticache

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ReplicationGroup struct {
	pulumi.CustomResourceState

	ApplyImmediately             pulumi.BoolOutput                 `pulumi:"applyImmediately"`
	AtRestEncryptionEnabled      pulumi.BoolPtrOutput              `pulumi:"atRestEncryptionEnabled"`
	AuthToken                    pulumi.StringPtrOutput            `pulumi:"authToken"`
	AutoMinorVersionUpgrade      pulumi.BoolPtrOutput              `pulumi:"autoMinorVersionUpgrade"`
	AutomaticFailoverEnabled     pulumi.BoolPtrOutput              `pulumi:"automaticFailoverEnabled"`
	AvailabilityZones            pulumi.StringArrayOutput          `pulumi:"availabilityZones"`
	ClusterMode                  ReplicationGroupClusterModeOutput `pulumi:"clusterMode"`
	ConfigurationEndpointAddress pulumi.StringOutput               `pulumi:"configurationEndpointAddress"`
	Engine                       pulumi.StringPtrOutput            `pulumi:"engine"`
	EngineVersion                pulumi.StringOutput               `pulumi:"engineVersion"`
	KmsKeyId                     pulumi.StringPtrOutput            `pulumi:"kmsKeyId"`
	MaintenanceWindow            pulumi.StringOutput               `pulumi:"maintenanceWindow"`
	MemberClusters               pulumi.StringArrayOutput          `pulumi:"memberClusters"`
	NodeType                     pulumi.StringOutput               `pulumi:"nodeType"`
	NotificationTopicArn         pulumi.StringPtrOutput            `pulumi:"notificationTopicArn"`
	NumberCacheClusters          pulumi.IntOutput                  `pulumi:"numberCacheClusters"`
	ParameterGroupName           pulumi.StringOutput               `pulumi:"parameterGroupName"`
	Port                         pulumi.IntPtrOutput               `pulumi:"port"`
	PrimaryEndpointAddress       pulumi.StringOutput               `pulumi:"primaryEndpointAddress"`
	ReplicationGroupDescription  pulumi.StringOutput               `pulumi:"replicationGroupDescription"`
	ReplicationGroupId           pulumi.StringOutput               `pulumi:"replicationGroupId"`
	SecurityGroupIds             pulumi.StringArrayOutput          `pulumi:"securityGroupIds"`
	SecurityGroupNames           pulumi.StringArrayOutput          `pulumi:"securityGroupNames"`
	SnapshotArns                 pulumi.StringArrayOutput          `pulumi:"snapshotArns"`
	SnapshotName                 pulumi.StringPtrOutput            `pulumi:"snapshotName"`
	SnapshotRetentionLimit       pulumi.IntPtrOutput               `pulumi:"snapshotRetentionLimit"`
	SnapshotWindow               pulumi.StringOutput               `pulumi:"snapshotWindow"`
	SubnetGroupName              pulumi.StringOutput               `pulumi:"subnetGroupName"`
	Tags                         pulumi.StringMapOutput            `pulumi:"tags"`
	TransitEncryptionEnabled     pulumi.BoolPtrOutput              `pulumi:"transitEncryptionEnabled"`
}

// NewReplicationGroup registers a new resource with the given unique name, arguments, and options.
func NewReplicationGroup(ctx *pulumi.Context,
	name string, args *ReplicationGroupArgs, opts ...pulumi.ResourceOption) (*ReplicationGroup, error) {
	if args == nil || args.ReplicationGroupDescription == nil {
		return nil, errors.New("missing required argument 'ReplicationGroupDescription'")
	}
	if args == nil {
		args = &ReplicationGroupArgs{}
	}
	var resource ReplicationGroup
	err := ctx.RegisterResource("aws:elasticache/replicationGroup:ReplicationGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReplicationGroup gets an existing ReplicationGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReplicationGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReplicationGroupState, opts ...pulumi.ResourceOption) (*ReplicationGroup, error) {
	var resource ReplicationGroup
	err := ctx.ReadResource("aws:elasticache/replicationGroup:ReplicationGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReplicationGroup resources.
type replicationGroupState struct {
	ApplyImmediately             *bool                        `pulumi:"applyImmediately"`
	AtRestEncryptionEnabled      *bool                        `pulumi:"atRestEncryptionEnabled"`
	AuthToken                    *string                      `pulumi:"authToken"`
	AutoMinorVersionUpgrade      *bool                        `pulumi:"autoMinorVersionUpgrade"`
	AutomaticFailoverEnabled     *bool                        `pulumi:"automaticFailoverEnabled"`
	AvailabilityZones            []string                     `pulumi:"availabilityZones"`
	ClusterMode                  *ReplicationGroupClusterMode `pulumi:"clusterMode"`
	ConfigurationEndpointAddress *string                      `pulumi:"configurationEndpointAddress"`
	Engine                       *string                      `pulumi:"engine"`
	EngineVersion                *string                      `pulumi:"engineVersion"`
	KmsKeyId                     *string                      `pulumi:"kmsKeyId"`
	MaintenanceWindow            *string                      `pulumi:"maintenanceWindow"`
	MemberClusters               []string                     `pulumi:"memberClusters"`
	NodeType                     *string                      `pulumi:"nodeType"`
	NotificationTopicArn         *string                      `pulumi:"notificationTopicArn"`
	NumberCacheClusters          *int                         `pulumi:"numberCacheClusters"`
	ParameterGroupName           *string                      `pulumi:"parameterGroupName"`
	Port                         *int                         `pulumi:"port"`
	PrimaryEndpointAddress       *string                      `pulumi:"primaryEndpointAddress"`
	ReplicationGroupDescription  *string                      `pulumi:"replicationGroupDescription"`
	ReplicationGroupId           *string                      `pulumi:"replicationGroupId"`
	SecurityGroupIds             []string                     `pulumi:"securityGroupIds"`
	SecurityGroupNames           []string                     `pulumi:"securityGroupNames"`
	SnapshotArns                 []string                     `pulumi:"snapshotArns"`
	SnapshotName                 *string                      `pulumi:"snapshotName"`
	SnapshotRetentionLimit       *int                         `pulumi:"snapshotRetentionLimit"`
	SnapshotWindow               *string                      `pulumi:"snapshotWindow"`
	SubnetGroupName              *string                      `pulumi:"subnetGroupName"`
	Tags                         map[string]string            `pulumi:"tags"`
	TransitEncryptionEnabled     *bool                        `pulumi:"transitEncryptionEnabled"`
}

type ReplicationGroupState struct {
	ApplyImmediately             pulumi.BoolPtrInput
	AtRestEncryptionEnabled      pulumi.BoolPtrInput
	AuthToken                    pulumi.StringPtrInput
	AutoMinorVersionUpgrade      pulumi.BoolPtrInput
	AutomaticFailoverEnabled     pulumi.BoolPtrInput
	AvailabilityZones            pulumi.StringArrayInput
	ClusterMode                  ReplicationGroupClusterModePtrInput
	ConfigurationEndpointAddress pulumi.StringPtrInput
	Engine                       pulumi.StringPtrInput
	EngineVersion                pulumi.StringPtrInput
	KmsKeyId                     pulumi.StringPtrInput
	MaintenanceWindow            pulumi.StringPtrInput
	MemberClusters               pulumi.StringArrayInput
	NodeType                     pulumi.StringPtrInput
	NotificationTopicArn         pulumi.StringPtrInput
	NumberCacheClusters          pulumi.IntPtrInput
	ParameterGroupName           pulumi.StringPtrInput
	Port                         pulumi.IntPtrInput
	PrimaryEndpointAddress       pulumi.StringPtrInput
	ReplicationGroupDescription  pulumi.StringPtrInput
	ReplicationGroupId           pulumi.StringPtrInput
	SecurityGroupIds             pulumi.StringArrayInput
	SecurityGroupNames           pulumi.StringArrayInput
	SnapshotArns                 pulumi.StringArrayInput
	SnapshotName                 pulumi.StringPtrInput
	SnapshotRetentionLimit       pulumi.IntPtrInput
	SnapshotWindow               pulumi.StringPtrInput
	SubnetGroupName              pulumi.StringPtrInput
	Tags                         pulumi.StringMapInput
	TransitEncryptionEnabled     pulumi.BoolPtrInput
}

func (ReplicationGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*replicationGroupState)(nil)).Elem()
}

type replicationGroupArgs struct {
	ApplyImmediately            *bool                        `pulumi:"applyImmediately"`
	AtRestEncryptionEnabled     *bool                        `pulumi:"atRestEncryptionEnabled"`
	AuthToken                   *string                      `pulumi:"authToken"`
	AutoMinorVersionUpgrade     *bool                        `pulumi:"autoMinorVersionUpgrade"`
	AutomaticFailoverEnabled    *bool                        `pulumi:"automaticFailoverEnabled"`
	AvailabilityZones           []string                     `pulumi:"availabilityZones"`
	ClusterMode                 *ReplicationGroupClusterMode `pulumi:"clusterMode"`
	Engine                      *string                      `pulumi:"engine"`
	EngineVersion               *string                      `pulumi:"engineVersion"`
	KmsKeyId                    *string                      `pulumi:"kmsKeyId"`
	MaintenanceWindow           *string                      `pulumi:"maintenanceWindow"`
	NodeType                    *string                      `pulumi:"nodeType"`
	NotificationTopicArn        *string                      `pulumi:"notificationTopicArn"`
	NumberCacheClusters         *int                         `pulumi:"numberCacheClusters"`
	ParameterGroupName          *string                      `pulumi:"parameterGroupName"`
	Port                        *int                         `pulumi:"port"`
	ReplicationGroupDescription string                       `pulumi:"replicationGroupDescription"`
	ReplicationGroupId          *string                      `pulumi:"replicationGroupId"`
	SecurityGroupIds            []string                     `pulumi:"securityGroupIds"`
	SecurityGroupNames          []string                     `pulumi:"securityGroupNames"`
	SnapshotArns                []string                     `pulumi:"snapshotArns"`
	SnapshotName                *string                      `pulumi:"snapshotName"`
	SnapshotRetentionLimit      *int                         `pulumi:"snapshotRetentionLimit"`
	SnapshotWindow              *string                      `pulumi:"snapshotWindow"`
	SubnetGroupName             *string                      `pulumi:"subnetGroupName"`
	Tags                        map[string]string            `pulumi:"tags"`
	TransitEncryptionEnabled    *bool                        `pulumi:"transitEncryptionEnabled"`
}

// The set of arguments for constructing a ReplicationGroup resource.
type ReplicationGroupArgs struct {
	ApplyImmediately            pulumi.BoolPtrInput
	AtRestEncryptionEnabled     pulumi.BoolPtrInput
	AuthToken                   pulumi.StringPtrInput
	AutoMinorVersionUpgrade     pulumi.BoolPtrInput
	AutomaticFailoverEnabled    pulumi.BoolPtrInput
	AvailabilityZones           pulumi.StringArrayInput
	ClusterMode                 ReplicationGroupClusterModePtrInput
	Engine                      pulumi.StringPtrInput
	EngineVersion               pulumi.StringPtrInput
	KmsKeyId                    pulumi.StringPtrInput
	MaintenanceWindow           pulumi.StringPtrInput
	NodeType                    pulumi.StringPtrInput
	NotificationTopicArn        pulumi.StringPtrInput
	NumberCacheClusters         pulumi.IntPtrInput
	ParameterGroupName          pulumi.StringPtrInput
	Port                        pulumi.IntPtrInput
	ReplicationGroupDescription pulumi.StringInput
	ReplicationGroupId          pulumi.StringPtrInput
	SecurityGroupIds            pulumi.StringArrayInput
	SecurityGroupNames          pulumi.StringArrayInput
	SnapshotArns                pulumi.StringArrayInput
	SnapshotName                pulumi.StringPtrInput
	SnapshotRetentionLimit      pulumi.IntPtrInput
	SnapshotWindow              pulumi.StringPtrInput
	SubnetGroupName             pulumi.StringPtrInput
	Tags                        pulumi.StringMapInput
	TransitEncryptionEnabled    pulumi.BoolPtrInput
}

func (ReplicationGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*replicationGroupArgs)(nil)).Elem()
}
