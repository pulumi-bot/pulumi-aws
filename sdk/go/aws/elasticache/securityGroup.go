// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package elasticache

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type SecurityGroup struct {
	pulumi.CustomResourceState

	Description        pulumi.StringOutput      `pulumi:"description"`
	Name               pulumi.StringOutput      `pulumi:"name"`
	SecurityGroupNames pulumi.StringArrayOutput `pulumi:"securityGroupNames"`
}

// NewSecurityGroup registers a new resource with the given unique name, arguments, and options.
func NewSecurityGroup(ctx *pulumi.Context,
	name string, args *SecurityGroupArgs, opts ...pulumi.ResourceOption) (*SecurityGroup, error) {
	if args == nil || args.SecurityGroupNames == nil {
		return nil, errors.New("missing required argument 'SecurityGroupNames'")
	}
	if args == nil {
		args = &SecurityGroupArgs{}
	}
	if args.Description == nil {
		args.Description = pulumi.StringPtr("Managed by Pulumi")
	}
	var resource SecurityGroup
	err := ctx.RegisterResource("aws:elasticache/securityGroup:SecurityGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityGroup gets an existing SecurityGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityGroupState, opts ...pulumi.ResourceOption) (*SecurityGroup, error) {
	var resource SecurityGroup
	err := ctx.ReadResource("aws:elasticache/securityGroup:SecurityGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityGroup resources.
type securityGroupState struct {
	Description        *string  `pulumi:"description"`
	Name               *string  `pulumi:"name"`
	SecurityGroupNames []string `pulumi:"securityGroupNames"`
}

type SecurityGroupState struct {
	Description        pulumi.StringPtrInput
	Name               pulumi.StringPtrInput
	SecurityGroupNames pulumi.StringArrayInput
}

func (SecurityGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGroupState)(nil)).Elem()
}

type securityGroupArgs struct {
	Description        *string  `pulumi:"description"`
	Name               *string  `pulumi:"name"`
	SecurityGroupNames []string `pulumi:"securityGroupNames"`
}

// The set of arguments for constructing a SecurityGroup resource.
type SecurityGroupArgs struct {
	Description        pulumi.StringPtrInput
	Name               pulumi.StringPtrInput
	SecurityGroupNames pulumi.StringArrayInput
}

func (SecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGroupArgs)(nil)).Elem()
}
