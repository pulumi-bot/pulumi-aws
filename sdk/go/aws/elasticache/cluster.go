// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package elasticache

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Cluster struct {
	pulumi.CustomResourceState

	ApplyImmediately           pulumi.BoolOutput           `pulumi:"applyImmediately"`
	Arn                        pulumi.StringOutput         `pulumi:"arn"`
	AvailabilityZone           pulumi.StringOutput         `pulumi:"availabilityZone"`
	AzMode                     pulumi.StringOutput         `pulumi:"azMode"`
	CacheNodes                 ClusterCacheNodeArrayOutput `pulumi:"cacheNodes"`
	ClusterAddress             pulumi.StringOutput         `pulumi:"clusterAddress"`
	ClusterId                  pulumi.StringOutput         `pulumi:"clusterId"`
	ConfigurationEndpoint      pulumi.StringOutput         `pulumi:"configurationEndpoint"`
	Engine                     pulumi.StringOutput         `pulumi:"engine"`
	EngineVersion              pulumi.StringOutput         `pulumi:"engineVersion"`
	MaintenanceWindow          pulumi.StringOutput         `pulumi:"maintenanceWindow"`
	NodeType                   pulumi.StringOutput         `pulumi:"nodeType"`
	NotificationTopicArn       pulumi.StringPtrOutput      `pulumi:"notificationTopicArn"`
	NumCacheNodes              pulumi.IntOutput            `pulumi:"numCacheNodes"`
	ParameterGroupName         pulumi.StringOutput         `pulumi:"parameterGroupName"`
	Port                       pulumi.IntOutput            `pulumi:"port"`
	PreferredAvailabilityZones pulumi.StringArrayOutput    `pulumi:"preferredAvailabilityZones"`
	ReplicationGroupId         pulumi.StringOutput         `pulumi:"replicationGroupId"`
	SecurityGroupIds           pulumi.StringArrayOutput    `pulumi:"securityGroupIds"`
	SecurityGroupNames         pulumi.StringArrayOutput    `pulumi:"securityGroupNames"`
	SnapshotArns               pulumi.StringArrayOutput    `pulumi:"snapshotArns"`
	SnapshotName               pulumi.StringPtrOutput      `pulumi:"snapshotName"`
	SnapshotRetentionLimit     pulumi.IntPtrOutput         `pulumi:"snapshotRetentionLimit"`
	SnapshotWindow             pulumi.StringOutput         `pulumi:"snapshotWindow"`
	SubnetGroupName            pulumi.StringOutput         `pulumi:"subnetGroupName"`
	Tags                       pulumi.StringMapOutput      `pulumi:"tags"`
}

// NewCluster registers a new resource with the given unique name, arguments, and options.
func NewCluster(ctx *pulumi.Context,
	name string, args *ClusterArgs, opts ...pulumi.ResourceOption) (*Cluster, error) {
	if args == nil {
		args = &ClusterArgs{}
	}
	var resource Cluster
	err := ctx.RegisterResource("aws:elasticache/cluster:Cluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCluster gets an existing Cluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterState, opts ...pulumi.ResourceOption) (*Cluster, error) {
	var resource Cluster
	err := ctx.ReadResource("aws:elasticache/cluster:Cluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Cluster resources.
type clusterState struct {
	ApplyImmediately           *bool              `pulumi:"applyImmediately"`
	Arn                        *string            `pulumi:"arn"`
	AvailabilityZone           *string            `pulumi:"availabilityZone"`
	AzMode                     *string            `pulumi:"azMode"`
	CacheNodes                 []ClusterCacheNode `pulumi:"cacheNodes"`
	ClusterAddress             *string            `pulumi:"clusterAddress"`
	ClusterId                  *string            `pulumi:"clusterId"`
	ConfigurationEndpoint      *string            `pulumi:"configurationEndpoint"`
	Engine                     *string            `pulumi:"engine"`
	EngineVersion              *string            `pulumi:"engineVersion"`
	MaintenanceWindow          *string            `pulumi:"maintenanceWindow"`
	NodeType                   *string            `pulumi:"nodeType"`
	NotificationTopicArn       *string            `pulumi:"notificationTopicArn"`
	NumCacheNodes              *int               `pulumi:"numCacheNodes"`
	ParameterGroupName         *string            `pulumi:"parameterGroupName"`
	Port                       *int               `pulumi:"port"`
	PreferredAvailabilityZones []string           `pulumi:"preferredAvailabilityZones"`
	ReplicationGroupId         *string            `pulumi:"replicationGroupId"`
	SecurityGroupIds           []string           `pulumi:"securityGroupIds"`
	SecurityGroupNames         []string           `pulumi:"securityGroupNames"`
	SnapshotArns               []string           `pulumi:"snapshotArns"`
	SnapshotName               *string            `pulumi:"snapshotName"`
	SnapshotRetentionLimit     *int               `pulumi:"snapshotRetentionLimit"`
	SnapshotWindow             *string            `pulumi:"snapshotWindow"`
	SubnetGroupName            *string            `pulumi:"subnetGroupName"`
	Tags                       map[string]string  `pulumi:"tags"`
}

type ClusterState struct {
	ApplyImmediately           pulumi.BoolPtrInput
	Arn                        pulumi.StringPtrInput
	AvailabilityZone           pulumi.StringPtrInput
	AzMode                     pulumi.StringPtrInput
	CacheNodes                 ClusterCacheNodeArrayInput
	ClusterAddress             pulumi.StringPtrInput
	ClusterId                  pulumi.StringPtrInput
	ConfigurationEndpoint      pulumi.StringPtrInput
	Engine                     pulumi.StringPtrInput
	EngineVersion              pulumi.StringPtrInput
	MaintenanceWindow          pulumi.StringPtrInput
	NodeType                   pulumi.StringPtrInput
	NotificationTopicArn       pulumi.StringPtrInput
	NumCacheNodes              pulumi.IntPtrInput
	ParameterGroupName         pulumi.StringPtrInput
	Port                       pulumi.IntPtrInput
	PreferredAvailabilityZones pulumi.StringArrayInput
	ReplicationGroupId         pulumi.StringPtrInput
	SecurityGroupIds           pulumi.StringArrayInput
	SecurityGroupNames         pulumi.StringArrayInput
	SnapshotArns               pulumi.StringArrayInput
	SnapshotName               pulumi.StringPtrInput
	SnapshotRetentionLimit     pulumi.IntPtrInput
	SnapshotWindow             pulumi.StringPtrInput
	SubnetGroupName            pulumi.StringPtrInput
	Tags                       pulumi.StringMapInput
}

func (ClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterState)(nil)).Elem()
}

type clusterArgs struct {
	ApplyImmediately           *bool             `pulumi:"applyImmediately"`
	AvailabilityZone           *string           `pulumi:"availabilityZone"`
	AzMode                     *string           `pulumi:"azMode"`
	ClusterId                  *string           `pulumi:"clusterId"`
	Engine                     *string           `pulumi:"engine"`
	EngineVersion              *string           `pulumi:"engineVersion"`
	MaintenanceWindow          *string           `pulumi:"maintenanceWindow"`
	NodeType                   *string           `pulumi:"nodeType"`
	NotificationTopicArn       *string           `pulumi:"notificationTopicArn"`
	NumCacheNodes              *int              `pulumi:"numCacheNodes"`
	ParameterGroupName         *string           `pulumi:"parameterGroupName"`
	Port                       *int              `pulumi:"port"`
	PreferredAvailabilityZones []string          `pulumi:"preferredAvailabilityZones"`
	ReplicationGroupId         *string           `pulumi:"replicationGroupId"`
	SecurityGroupIds           []string          `pulumi:"securityGroupIds"`
	SecurityGroupNames         []string          `pulumi:"securityGroupNames"`
	SnapshotArns               []string          `pulumi:"snapshotArns"`
	SnapshotName               *string           `pulumi:"snapshotName"`
	SnapshotRetentionLimit     *int              `pulumi:"snapshotRetentionLimit"`
	SnapshotWindow             *string           `pulumi:"snapshotWindow"`
	SubnetGroupName            *string           `pulumi:"subnetGroupName"`
	Tags                       map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Cluster resource.
type ClusterArgs struct {
	ApplyImmediately           pulumi.BoolPtrInput
	AvailabilityZone           pulumi.StringPtrInput
	AzMode                     pulumi.StringPtrInput
	ClusterId                  pulumi.StringPtrInput
	Engine                     pulumi.StringPtrInput
	EngineVersion              pulumi.StringPtrInput
	MaintenanceWindow          pulumi.StringPtrInput
	NodeType                   pulumi.StringPtrInput
	NotificationTopicArn       pulumi.StringPtrInput
	NumCacheNodes              pulumi.IntPtrInput
	ParameterGroupName         pulumi.StringPtrInput
	Port                       pulumi.IntPtrInput
	PreferredAvailabilityZones pulumi.StringArrayInput
	ReplicationGroupId         pulumi.StringPtrInput
	SecurityGroupIds           pulumi.StringArrayInput
	SecurityGroupNames         pulumi.StringArrayInput
	SnapshotArns               pulumi.StringArrayInput
	SnapshotName               pulumi.StringPtrInput
	SnapshotRetentionLimit     pulumi.IntPtrInput
	SnapshotWindow             pulumi.StringPtrInput
	SubnetGroupName            pulumi.StringPtrInput
	Tags                       pulumi.StringMapInput
}

func (ClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterArgs)(nil)).Elem()
}
