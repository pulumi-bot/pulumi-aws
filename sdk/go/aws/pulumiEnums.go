// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aws

import (
	"context"
	"fmt"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A Region represents any valid Amazon region that may be targeted with deployments.
type Region pulumi.String

const (
	AFSouth1     = Region("af-south-1")
	APEast1      = Region("ap-east-1")
	APNortheast1 = Region("ap-northeast-1")
	APNortheast2 = Region("ap-northeast-2")
	APSouth1     = Region("ap-south-1")
	APSoutheast2 = Region("ap-southeast-2")
	APSoutheast1 = Region("ap-southeast-1")
	CACentral    = Region("ca-central-1")
	CNNorth1     = Region("cn-north-1")
	CNNorthwest1 = Region("cn-northwest-1")
	EUCentral1   = Region("eu-central-1")
	EUNorth1     = Region("eu-north-1")
	EUWest1      = Region("eu-west-1")
	EUWest2      = Region("eu-west-2")
	EUWest3      = Region("eu-west-3")
	EUSouth1     = Region("eu-south-1")
	MESouth1     = Region("me-south-1")
	SAEast1      = Region("sa-east-1")
	USGovEast1   = Region("us-gov-east-1")
	USGovWest1   = Region("us-gov-west-1")
	USEast1      = Region("us-east-1")
	USEast2      = Region("us-east-2")
	USWest1      = Region("us-west-1")
	USWest2      = Region("us-west-2")
)

func (Region) possibleValues() map[Region]bool {
	return map[Region]bool{
		AFSouth1:     true,
		APEast1:      true,
		APNortheast1: true,
		APNortheast2: true,
		APSouth1:     true,
		APSoutheast2: true,
		APSoutheast1: true,
		CACentral:    true,
		CNNorth1:     true,
		CNNorthwest1: true,
		EUCentral1:   true,
		EUNorth1:     true,
		EUWest1:      true,
		EUWest2:      true,
		EUWest3:      true,
		EUSouth1:     true,
		MESouth1:     true,
		SAEast1:      true,
		USGovEast1:   true,
		USGovWest1:   true,
		USEast1:      true,
		USEast2:      true,
		USWest1:      true,
		USWest2:      true,
	}
}

func (e Region) Validate() error {
	if !e.possibleValues()[e] {
		return fmt.Errorf("unexpected value: %v", e)
	}
	return nil
}

func (Region) ElementType() reflect.Type {
	return reflect.TypeOf((*pulumi.String)(nil)).Elem()
}

func (e Region) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Region) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Region) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Region) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}
