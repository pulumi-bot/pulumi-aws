// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package batch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Batch Job Queue data source allows access to details of a specific
// job queue within AWS Batch.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/batch"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := batch.LookupJobQueue(ctx, &batch.LookupJobQueueArgs{
// 			Name: "tf-test-batch-job-queue",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupJobQueue(ctx *pulumi.Context, args *LookupJobQueueArgs, opts ...pulumi.InvokeOption) (*LookupJobQueueResult, error) {
	var rv LookupJobQueueResult
	err := ctx.Invoke("aws:batch/getJobQueue:getJobQueue", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getJobQueue.
type LookupJobQueueArgs struct {
	// The name of the job queue.
	Name string `pulumi:"name"`
	// Key-value map of resource tags
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getJobQueue.
type LookupJobQueueResult struct {
	// The ARN of the job queue.
	Arn string `pulumi:"arn"`
	// The compute environments that are attached to the job queue and the order in
	// which job placement is preferred. Compute environments are selected for job placement in ascending order.
	// * `compute_environment_order.#.order` - The order of the compute environment.
	// * `compute_environment_order.#.compute_environment` - The ARN of the compute environment.
	ComputeEnvironmentOrders []GetJobQueueComputeEnvironmentOrder `pulumi:"computeEnvironmentOrders"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
	// The priority of the job queue. Job queues with a higher priority are evaluated first when
	// associated with the same compute environment.
	Priority int `pulumi:"priority"`
	// Describes the ability of the queue to accept new jobs (for example, `ENABLED` or `DISABLED`).
	State string `pulumi:"state"`
	// The current status of the job queue (for example, `CREATING` or `VALID`).
	Status string `pulumi:"status"`
	// A short, human-readable string to provide additional details about the current status
	// of the job queue.
	StatusReason string `pulumi:"statusReason"`
	// Key-value map of resource tags
	Tags map[string]string `pulumi:"tags"`
}

func LookupJobQueueApply(ctx *pulumi.Context, args LookupJobQueueApplyInput, opts ...pulumi.InvokeOption) LookupJobQueueResultOutput {
	return args.ToLookupJobQueueApplyOutput().ApplyT(func(v LookupJobQueueArgs) (LookupJobQueueResult, error) {
		r, err := LookupJobQueue(ctx, &v, opts...)
		return *r, err

	}).(LookupJobQueueResultOutput)
}

// LookupJobQueueApplyInput is an input type that accepts LookupJobQueueApplyArgs and LookupJobQueueApplyOutput values.
// You can construct a concrete instance of `LookupJobQueueApplyInput` via:
//
//          LookupJobQueueApplyArgs{...}
type LookupJobQueueApplyInput interface {
	pulumi.Input

	ToLookupJobQueueApplyOutput() LookupJobQueueApplyOutput
	ToLookupJobQueueApplyOutputWithContext(context.Context) LookupJobQueueApplyOutput
}

// A collection of arguments for invoking getJobQueue.
type LookupJobQueueApplyArgs struct {
	// The name of the job queue.
	Name pulumi.StringInput `pulumi:"name"`
	// Key-value map of resource tags
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupJobQueueApplyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupJobQueueArgs)(nil)).Elem()
}

func (i LookupJobQueueApplyArgs) ToLookupJobQueueApplyOutput() LookupJobQueueApplyOutput {
	return i.ToLookupJobQueueApplyOutputWithContext(context.Background())
}

func (i LookupJobQueueApplyArgs) ToLookupJobQueueApplyOutputWithContext(ctx context.Context) LookupJobQueueApplyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupJobQueueApplyOutput)
}

// A collection of arguments for invoking getJobQueue.
type LookupJobQueueApplyOutput struct{ *pulumi.OutputState }

func (LookupJobQueueApplyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupJobQueueArgs)(nil)).Elem()
}

func (o LookupJobQueueApplyOutput) ToLookupJobQueueApplyOutput() LookupJobQueueApplyOutput {
	return o
}

func (o LookupJobQueueApplyOutput) ToLookupJobQueueApplyOutputWithContext(ctx context.Context) LookupJobQueueApplyOutput {
	return o
}

// The name of the job queue.
func (o LookupJobQueueApplyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobQueueArgs) string { return v.Name }).(pulumi.StringOutput)
}

// Key-value map of resource tags
func (o LookupJobQueueApplyOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupJobQueueArgs) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// A collection of values returned by getJobQueue.
type LookupJobQueueResultOutput struct{ *pulumi.OutputState }

func (LookupJobQueueResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupJobQueueResult)(nil)).Elem()
}

func (o LookupJobQueueResultOutput) ToLookupJobQueueResultOutput() LookupJobQueueResultOutput {
	return o
}

func (o LookupJobQueueResultOutput) ToLookupJobQueueResultOutputWithContext(ctx context.Context) LookupJobQueueResultOutput {
	return o
}

// The ARN of the job queue.
func (o LookupJobQueueResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobQueueResult) string { return v.Arn }).(pulumi.StringOutput)
}

// The compute environments that are attached to the job queue and the order in
// which job placement is preferred. Compute environments are selected for job placement in ascending order.
// * `compute_environment_order.#.order` - The order of the compute environment.
// * `compute_environment_order.#.compute_environment` - The ARN of the compute environment.
func (o LookupJobQueueResultOutput) ComputeEnvironmentOrders() GetJobQueueComputeEnvironmentOrderArrayOutput {
	return o.ApplyT(func(v LookupJobQueueResult) []GetJobQueueComputeEnvironmentOrder { return v.ComputeEnvironmentOrders }).(GetJobQueueComputeEnvironmentOrderArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupJobQueueResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobQueueResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupJobQueueResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobQueueResult) string { return v.Name }).(pulumi.StringOutput)
}

// The priority of the job queue. Job queues with a higher priority are evaluated first when
// associated with the same compute environment.
func (o LookupJobQueueResultOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v LookupJobQueueResult) int { return v.Priority }).(pulumi.IntOutput)
}

// Describes the ability of the queue to accept new jobs (for example, `ENABLED` or `DISABLED`).
func (o LookupJobQueueResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobQueueResult) string { return v.State }).(pulumi.StringOutput)
}

// The current status of the job queue (for example, `CREATING` or `VALID`).
func (o LookupJobQueueResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobQueueResult) string { return v.Status }).(pulumi.StringOutput)
}

// A short, human-readable string to provide additional details about the current status
// of the job queue.
func (o LookupJobQueueResultOutput) StatusReason() pulumi.StringOutput {
	return o.ApplyT(func(v LookupJobQueueResult) string { return v.StatusReason }).(pulumi.StringOutput)
}

// Key-value map of resource tags
func (o LookupJobQueueResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupJobQueueResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupJobQueueApplyOutput{})
	pulumi.RegisterOutputType(LookupJobQueueResultOutput{})
}
