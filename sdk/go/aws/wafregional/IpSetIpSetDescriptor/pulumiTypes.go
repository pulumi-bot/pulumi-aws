// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package IpSetIpSetDescriptor

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type IpSetIpSetDescriptor struct {
	// The string like IPV4 or IPV6.
	Type string `pulumi:"type"`
	// The CIDR notation.
	Value string `pulumi:"value"`
}

type IpSetIpSetDescriptorInput interface {
	pulumi.Input

	ToIpSetIpSetDescriptorOutput() IpSetIpSetDescriptorOutput
	ToIpSetIpSetDescriptorOutputWithContext(context.Context) IpSetIpSetDescriptorOutput
}

type IpSetIpSetDescriptorArgs struct {
	// The string like IPV4 or IPV6.
	Type pulumi.StringInput `pulumi:"type"`
	// The CIDR notation.
	Value pulumi.StringInput `pulumi:"value"`
}

func (IpSetIpSetDescriptorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSetIpSetDescriptor)(nil)).Elem()
}

func (i IpSetIpSetDescriptorArgs) ToIpSetIpSetDescriptorOutput() IpSetIpSetDescriptorOutput {
	return i.ToIpSetIpSetDescriptorOutputWithContext(context.Background())
}

func (i IpSetIpSetDescriptorArgs) ToIpSetIpSetDescriptorOutputWithContext(ctx context.Context) IpSetIpSetDescriptorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSetIpSetDescriptorOutput)
}

type IpSetIpSetDescriptorArrayInput interface {
	pulumi.Input

	ToIpSetIpSetDescriptorArrayOutput() IpSetIpSetDescriptorArrayOutput
	ToIpSetIpSetDescriptorArrayOutputWithContext(context.Context) IpSetIpSetDescriptorArrayOutput
}

type IpSetIpSetDescriptorArray []IpSetIpSetDescriptorInput

func (IpSetIpSetDescriptorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSetIpSetDescriptor)(nil)).Elem()
}

func (i IpSetIpSetDescriptorArray) ToIpSetIpSetDescriptorArrayOutput() IpSetIpSetDescriptorArrayOutput {
	return i.ToIpSetIpSetDescriptorArrayOutputWithContext(context.Background())
}

func (i IpSetIpSetDescriptorArray) ToIpSetIpSetDescriptorArrayOutputWithContext(ctx context.Context) IpSetIpSetDescriptorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpSetIpSetDescriptorArrayOutput)
}

type IpSetIpSetDescriptorOutput struct { *pulumi.OutputState }

func (IpSetIpSetDescriptorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSetIpSetDescriptor)(nil)).Elem()
}

func (o IpSetIpSetDescriptorOutput) ToIpSetIpSetDescriptorOutput() IpSetIpSetDescriptorOutput {
	return o
}

func (o IpSetIpSetDescriptorOutput) ToIpSetIpSetDescriptorOutputWithContext(ctx context.Context) IpSetIpSetDescriptorOutput {
	return o
}

// The string like IPV4 or IPV6.
func (o IpSetIpSetDescriptorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func (v IpSetIpSetDescriptor) string { return v.Type }).(pulumi.StringOutput)
}

// The CIDR notation.
func (o IpSetIpSetDescriptorOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func (v IpSetIpSetDescriptor) string { return v.Value }).(pulumi.StringOutput)
}

type IpSetIpSetDescriptorArrayOutput struct { *pulumi.OutputState}

func (IpSetIpSetDescriptorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpSetIpSetDescriptor)(nil)).Elem()
}

func (o IpSetIpSetDescriptorArrayOutput) ToIpSetIpSetDescriptorArrayOutput() IpSetIpSetDescriptorArrayOutput {
	return o
}

func (o IpSetIpSetDescriptorArrayOutput) ToIpSetIpSetDescriptorArrayOutputWithContext(ctx context.Context) IpSetIpSetDescriptorArrayOutput {
	return o
}

func (o IpSetIpSetDescriptorArrayOutput) Index(i pulumi.IntInput) IpSetIpSetDescriptorOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) IpSetIpSetDescriptor {
		return vs[0].([]IpSetIpSetDescriptor)[vs[1].(int)]
	}).(IpSetIpSetDescriptorOutput)
}

func init() {
	pulumi.RegisterOutputType(IpSetIpSetDescriptorOutput{})
	pulumi.RegisterOutputType(IpSetIpSetDescriptorArrayOutput{})
}
