// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ram

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ResourceShareAccepter struct {
	pulumi.CustomResourceState

	InvitationArn     pulumi.StringOutput      `pulumi:"invitationArn"`
	ReceiverAccountId pulumi.StringOutput      `pulumi:"receiverAccountId"`
	Resources         pulumi.StringArrayOutput `pulumi:"resources"`
	SenderAccountId   pulumi.StringOutput      `pulumi:"senderAccountId"`
	ShareArn          pulumi.StringOutput      `pulumi:"shareArn"`
	ShareId           pulumi.StringOutput      `pulumi:"shareId"`
	ShareName         pulumi.StringOutput      `pulumi:"shareName"`
	Status            pulumi.StringOutput      `pulumi:"status"`
}

// NewResourceShareAccepter registers a new resource with the given unique name, arguments, and options.
func NewResourceShareAccepter(ctx *pulumi.Context,
	name string, args *ResourceShareAccepterArgs, opts ...pulumi.ResourceOption) (*ResourceShareAccepter, error) {
	if args == nil || args.ShareArn == nil {
		return nil, errors.New("missing required argument 'ShareArn'")
	}
	if args == nil {
		args = &ResourceShareAccepterArgs{}
	}
	var resource ResourceShareAccepter
	err := ctx.RegisterResource("aws:ram/resourceShareAccepter:ResourceShareAccepter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourceShareAccepter gets an existing ResourceShareAccepter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourceShareAccepter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceShareAccepterState, opts ...pulumi.ResourceOption) (*ResourceShareAccepter, error) {
	var resource ResourceShareAccepter
	err := ctx.ReadResource("aws:ram/resourceShareAccepter:ResourceShareAccepter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourceShareAccepter resources.
type resourceShareAccepterState struct {
	InvitationArn     *string  `pulumi:"invitationArn"`
	ReceiverAccountId *string  `pulumi:"receiverAccountId"`
	Resources         []string `pulumi:"resources"`
	SenderAccountId   *string  `pulumi:"senderAccountId"`
	ShareArn          *string  `pulumi:"shareArn"`
	ShareId           *string  `pulumi:"shareId"`
	ShareName         *string  `pulumi:"shareName"`
	Status            *string  `pulumi:"status"`
}

type ResourceShareAccepterState struct {
	InvitationArn     pulumi.StringPtrInput
	ReceiverAccountId pulumi.StringPtrInput
	Resources         pulumi.StringArrayInput
	SenderAccountId   pulumi.StringPtrInput
	ShareArn          pulumi.StringPtrInput
	ShareId           pulumi.StringPtrInput
	ShareName         pulumi.StringPtrInput
	Status            pulumi.StringPtrInput
}

func (ResourceShareAccepterState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceShareAccepterState)(nil)).Elem()
}

type resourceShareAccepterArgs struct {
	ShareArn string `pulumi:"shareArn"`
}

// The set of arguments for constructing a ResourceShareAccepter resource.
type ResourceShareAccepterArgs struct {
	ShareArn pulumi.StringInput
}

func (ResourceShareAccepterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceShareAccepterArgs)(nil)).Elem()
}
