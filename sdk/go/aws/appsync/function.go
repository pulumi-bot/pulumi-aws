// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package appsync

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an AppSync Function.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/appsync_function.html.markdown.
type Function struct {
	s *pulumi.ResourceState
}

// NewFunction registers a new resource with the given unique name, arguments, and options.
func NewFunction(ctx *pulumi.Context,
	name string, args *FunctionArgs, opts ...pulumi.ResourceOpt) (*Function, error) {
	if args == nil || args.ApiId == nil {
		return nil, errors.New("missing required argument 'ApiId'")
	}
	if args == nil || args.DataSource == nil {
		return nil, errors.New("missing required argument 'DataSource'")
	}
	if args == nil || args.RequestMappingTemplate == nil {
		return nil, errors.New("missing required argument 'RequestMappingTemplate'")
	}
	if args == nil || args.ResponseMappingTemplate == nil {
		return nil, errors.New("missing required argument 'ResponseMappingTemplate'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["apiId"] = nil
		inputs["dataSource"] = nil
		inputs["description"] = nil
		inputs["functionVersion"] = nil
		inputs["name"] = nil
		inputs["requestMappingTemplate"] = nil
		inputs["responseMappingTemplate"] = nil
	} else {
		inputs["apiId"] = args.ApiId
		inputs["dataSource"] = args.DataSource
		inputs["description"] = args.Description
		inputs["functionVersion"] = args.FunctionVersion
		inputs["name"] = args.Name
		inputs["requestMappingTemplate"] = args.RequestMappingTemplate
		inputs["responseMappingTemplate"] = args.ResponseMappingTemplate
	}
	inputs["arn"] = nil
	inputs["functionId"] = nil
	s, err := ctx.RegisterResource("aws:appsync/function:Function", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Function{s: s}, nil
}

// GetFunction gets an existing Function resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFunction(ctx *pulumi.Context,
	name string, id pulumi.ID, state *FunctionState, opts ...pulumi.ResourceOpt) (*Function, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["apiId"] = state.ApiId
		inputs["arn"] = state.Arn
		inputs["dataSource"] = state.DataSource
		inputs["description"] = state.Description
		inputs["functionId"] = state.FunctionId
		inputs["functionVersion"] = state.FunctionVersion
		inputs["name"] = state.Name
		inputs["requestMappingTemplate"] = state.RequestMappingTemplate
		inputs["responseMappingTemplate"] = state.ResponseMappingTemplate
	}
	s, err := ctx.ReadResource("aws:appsync/function:Function", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Function{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Function) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Function) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The ID of the associated AppSync API.
func (r *Function) ApiId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["apiId"])
}

// The ARN of the Function object.
func (r *Function) Arn() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["arn"])
}

// The Function DataSource name.
func (r *Function) DataSource() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["dataSource"])
}

// The Function description.
func (r *Function) Description() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["description"])
}

// A unique ID representing the Function object.
func (r *Function) FunctionId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["functionId"])
}

// The version of the request mapping template. Currently the supported value is `2018-05-29`.
func (r *Function) FunctionVersion() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["functionVersion"])
}

// The Function name. The function name does not have to be unique.
func (r *Function) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// The Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.
func (r *Function) RequestMappingTemplate() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["requestMappingTemplate"])
}

// The Function response mapping template.
func (r *Function) ResponseMappingTemplate() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["responseMappingTemplate"])
}

// Input properties used for looking up and filtering Function resources.
type FunctionState struct {
	// The ID of the associated AppSync API.
	ApiId interface{}
	// The ARN of the Function object.
	Arn interface{}
	// The Function DataSource name.
	DataSource interface{}
	// The Function description.
	Description interface{}
	// A unique ID representing the Function object.
	FunctionId interface{}
	// The version of the request mapping template. Currently the supported value is `2018-05-29`.
	FunctionVersion interface{}
	// The Function name. The function name does not have to be unique.
	Name interface{}
	// The Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.
	RequestMappingTemplate interface{}
	// The Function response mapping template.
	ResponseMappingTemplate interface{}
}

// The set of arguments for constructing a Function resource.
type FunctionArgs struct {
	// The ID of the associated AppSync API.
	ApiId interface{}
	// The Function DataSource name.
	DataSource interface{}
	// The Function description.
	Description interface{}
	// The version of the request mapping template. Currently the supported value is `2018-05-29`.
	FunctionVersion interface{}
	// The Function name. The function name does not have to be unique.
	Name interface{}
	// The Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.
	RequestMappingTemplate interface{}
	// The Function response mapping template.
	ResponseMappingTemplate interface{}
}
