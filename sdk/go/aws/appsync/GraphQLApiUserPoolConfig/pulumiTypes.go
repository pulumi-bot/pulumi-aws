// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package GraphQLApiUserPoolConfig

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type GraphQLApiUserPoolConfig struct {
	// A regular expression for validating the incoming Amazon Cognito User Pool app client ID.
	AppIdClientRegex *string `pulumi:"appIdClientRegex"`
	// The AWS region in which the user pool was created.
	AwsRegion *string `pulumi:"awsRegion"`
	// The action that you want your GraphQL API to take when a request that uses Amazon Cognito User Pool authentication doesn't match the Amazon Cognito User Pool configuration. Valid: `ALLOW` and `DENY`
	DefaultAction string `pulumi:"defaultAction"`
	// The user pool ID.
	UserPoolId string `pulumi:"userPoolId"`
}

type GraphQLApiUserPoolConfigInput interface {
	pulumi.Input

	ToGraphQLApiUserPoolConfigOutput() GraphQLApiUserPoolConfigOutput
	ToGraphQLApiUserPoolConfigOutputWithContext(context.Context) GraphQLApiUserPoolConfigOutput
}

type GraphQLApiUserPoolConfigArgs struct {
	// A regular expression for validating the incoming Amazon Cognito User Pool app client ID.
	AppIdClientRegex pulumi.StringPtrInput `pulumi:"appIdClientRegex"`
	// The AWS region in which the user pool was created.
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// The action that you want your GraphQL API to take when a request that uses Amazon Cognito User Pool authentication doesn't match the Amazon Cognito User Pool configuration. Valid: `ALLOW` and `DENY`
	DefaultAction pulumi.StringInput `pulumi:"defaultAction"`
	// The user pool ID.
	UserPoolId pulumi.StringInput `pulumi:"userPoolId"`
}

func (GraphQLApiUserPoolConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiUserPoolConfig)(nil)).Elem()
}

func (i GraphQLApiUserPoolConfigArgs) ToGraphQLApiUserPoolConfigOutput() GraphQLApiUserPoolConfigOutput {
	return i.ToGraphQLApiUserPoolConfigOutputWithContext(context.Background())
}

func (i GraphQLApiUserPoolConfigArgs) ToGraphQLApiUserPoolConfigOutputWithContext(ctx context.Context) GraphQLApiUserPoolConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiUserPoolConfigOutput)
}

func (i GraphQLApiUserPoolConfigArgs) ToGraphQLApiUserPoolConfigPtrOutput() GraphQLApiUserPoolConfigPtrOutput {
	return i.ToGraphQLApiUserPoolConfigPtrOutputWithContext(context.Background())
}

func (i GraphQLApiUserPoolConfigArgs) ToGraphQLApiUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQLApiUserPoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiUserPoolConfigOutput).ToGraphQLApiUserPoolConfigPtrOutputWithContext(ctx)
}

type GraphQLApiUserPoolConfigPtrInput interface {
	pulumi.Input

	ToGraphQLApiUserPoolConfigPtrOutput() GraphQLApiUserPoolConfigPtrOutput
	ToGraphQLApiUserPoolConfigPtrOutputWithContext(context.Context) GraphQLApiUserPoolConfigPtrOutput
}

type graphQLApiUserPoolConfigPtrType GraphQLApiUserPoolConfigArgs

func GraphQLApiUserPoolConfigPtr(v *GraphQLApiUserPoolConfigArgs) GraphQLApiUserPoolConfigPtrInput {	return (*graphQLApiUserPoolConfigPtrType)(v)
}

func (*graphQLApiUserPoolConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiUserPoolConfig)(nil)).Elem()
}

func (i *graphQLApiUserPoolConfigPtrType) ToGraphQLApiUserPoolConfigPtrOutput() GraphQLApiUserPoolConfigPtrOutput {
	return i.ToGraphQLApiUserPoolConfigPtrOutputWithContext(context.Background())
}

func (i *graphQLApiUserPoolConfigPtrType) ToGraphQLApiUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQLApiUserPoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiUserPoolConfigPtrOutput)
}

type GraphQLApiUserPoolConfigOutput struct { *pulumi.OutputState }

func (GraphQLApiUserPoolConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiUserPoolConfig)(nil)).Elem()
}

func (o GraphQLApiUserPoolConfigOutput) ToGraphQLApiUserPoolConfigOutput() GraphQLApiUserPoolConfigOutput {
	return o
}

func (o GraphQLApiUserPoolConfigOutput) ToGraphQLApiUserPoolConfigOutputWithContext(ctx context.Context) GraphQLApiUserPoolConfigOutput {
	return o
}

func (o GraphQLApiUserPoolConfigOutput) ToGraphQLApiUserPoolConfigPtrOutput() GraphQLApiUserPoolConfigPtrOutput {
	return o.ToGraphQLApiUserPoolConfigPtrOutputWithContext(context.Background())
}

func (o GraphQLApiUserPoolConfigOutput) ToGraphQLApiUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQLApiUserPoolConfigPtrOutput {
	return o.ApplyT(func(v GraphQLApiUserPoolConfig) *GraphQLApiUserPoolConfig {
		return &v
	}).(GraphQLApiUserPoolConfigPtrOutput)
}
// A regular expression for validating the incoming Amazon Cognito User Pool app client ID.
func (o GraphQLApiUserPoolConfigOutput) AppIdClientRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GraphQLApiUserPoolConfig) *string { return v.AppIdClientRegex }).(pulumi.StringPtrOutput)
}

// The AWS region in which the user pool was created.
func (o GraphQLApiUserPoolConfigOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GraphQLApiUserPoolConfig) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// The action that you want your GraphQL API to take when a request that uses Amazon Cognito User Pool authentication doesn't match the Amazon Cognito User Pool configuration. Valid: `ALLOW` and `DENY`
func (o GraphQLApiUserPoolConfigOutput) DefaultAction() pulumi.StringOutput {
	return o.ApplyT(func (v GraphQLApiUserPoolConfig) string { return v.DefaultAction }).(pulumi.StringOutput)
}

// The user pool ID.
func (o GraphQLApiUserPoolConfigOutput) UserPoolId() pulumi.StringOutput {
	return o.ApplyT(func (v GraphQLApiUserPoolConfig) string { return v.UserPoolId }).(pulumi.StringOutput)
}

type GraphQLApiUserPoolConfigPtrOutput struct { *pulumi.OutputState}

func (GraphQLApiUserPoolConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiUserPoolConfig)(nil)).Elem()
}

func (o GraphQLApiUserPoolConfigPtrOutput) ToGraphQLApiUserPoolConfigPtrOutput() GraphQLApiUserPoolConfigPtrOutput {
	return o
}

func (o GraphQLApiUserPoolConfigPtrOutput) ToGraphQLApiUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQLApiUserPoolConfigPtrOutput {
	return o
}

func (o GraphQLApiUserPoolConfigPtrOutput) Elem() GraphQLApiUserPoolConfigOutput {
	return o.ApplyT(func (v *GraphQLApiUserPoolConfig) GraphQLApiUserPoolConfig { return *v }).(GraphQLApiUserPoolConfigOutput)
}

// A regular expression for validating the incoming Amazon Cognito User Pool app client ID.
func (o GraphQLApiUserPoolConfigPtrOutput) AppIdClientRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GraphQLApiUserPoolConfig) *string { return v.AppIdClientRegex }).(pulumi.StringPtrOutput)
}

// The AWS region in which the user pool was created.
func (o GraphQLApiUserPoolConfigPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GraphQLApiUserPoolConfig) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// The action that you want your GraphQL API to take when a request that uses Amazon Cognito User Pool authentication doesn't match the Amazon Cognito User Pool configuration. Valid: `ALLOW` and `DENY`
func (o GraphQLApiUserPoolConfigPtrOutput) DefaultAction() pulumi.StringOutput {
	return o.ApplyT(func (v GraphQLApiUserPoolConfig) string { return v.DefaultAction }).(pulumi.StringOutput)
}

// The user pool ID.
func (o GraphQLApiUserPoolConfigPtrOutput) UserPoolId() pulumi.StringOutput {
	return o.ApplyT(func (v GraphQLApiUserPoolConfig) string { return v.UserPoolId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GraphQLApiUserPoolConfigOutput{})
	pulumi.RegisterOutputType(GraphQLApiUserPoolConfigPtrOutput{})
}
