// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package DataSourceDynamodbConfig

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type DataSourceDynamodbConfig struct {
	// AWS region of Elasticsearch domain. Defaults to current region.
	Region *string `pulumi:"region"`
	// Name of the DynamoDB table.
	TableName string `pulumi:"tableName"`
	// Set to `true` to use Amazon Cognito credentials with this data source.
	UseCallerCredentials *bool `pulumi:"useCallerCredentials"`
}

type DataSourceDynamodbConfigInput interface {
	pulumi.Input

	ToDataSourceDynamodbConfigOutput() DataSourceDynamodbConfigOutput
	ToDataSourceDynamodbConfigOutputWithContext(context.Context) DataSourceDynamodbConfigOutput
}

type DataSourceDynamodbConfigArgs struct {
	// AWS region of Elasticsearch domain. Defaults to current region.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Name of the DynamoDB table.
	TableName pulumi.StringInput `pulumi:"tableName"`
	// Set to `true` to use Amazon Cognito credentials with this data source.
	UseCallerCredentials pulumi.BoolPtrInput `pulumi:"useCallerCredentials"`
}

func (DataSourceDynamodbConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDynamodbConfig)(nil)).Elem()
}

func (i DataSourceDynamodbConfigArgs) ToDataSourceDynamodbConfigOutput() DataSourceDynamodbConfigOutput {
	return i.ToDataSourceDynamodbConfigOutputWithContext(context.Background())
}

func (i DataSourceDynamodbConfigArgs) ToDataSourceDynamodbConfigOutputWithContext(ctx context.Context) DataSourceDynamodbConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDynamodbConfigOutput)
}

func (i DataSourceDynamodbConfigArgs) ToDataSourceDynamodbConfigPtrOutput() DataSourceDynamodbConfigPtrOutput {
	return i.ToDataSourceDynamodbConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceDynamodbConfigArgs) ToDataSourceDynamodbConfigPtrOutputWithContext(ctx context.Context) DataSourceDynamodbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDynamodbConfigOutput).ToDataSourceDynamodbConfigPtrOutputWithContext(ctx)
}

type DataSourceDynamodbConfigPtrInput interface {
	pulumi.Input

	ToDataSourceDynamodbConfigPtrOutput() DataSourceDynamodbConfigPtrOutput
	ToDataSourceDynamodbConfigPtrOutputWithContext(context.Context) DataSourceDynamodbConfigPtrOutput
}

type dataSourceDynamodbConfigPtrType DataSourceDynamodbConfigArgs

func DataSourceDynamodbConfigPtr(v *DataSourceDynamodbConfigArgs) DataSourceDynamodbConfigPtrInput {	return (*dataSourceDynamodbConfigPtrType)(v)
}

func (*dataSourceDynamodbConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceDynamodbConfig)(nil)).Elem()
}

func (i *dataSourceDynamodbConfigPtrType) ToDataSourceDynamodbConfigPtrOutput() DataSourceDynamodbConfigPtrOutput {
	return i.ToDataSourceDynamodbConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceDynamodbConfigPtrType) ToDataSourceDynamodbConfigPtrOutputWithContext(ctx context.Context) DataSourceDynamodbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDynamodbConfigPtrOutput)
}

type DataSourceDynamodbConfigOutput struct { *pulumi.OutputState }

func (DataSourceDynamodbConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDynamodbConfig)(nil)).Elem()
}

func (o DataSourceDynamodbConfigOutput) ToDataSourceDynamodbConfigOutput() DataSourceDynamodbConfigOutput {
	return o
}

func (o DataSourceDynamodbConfigOutput) ToDataSourceDynamodbConfigOutputWithContext(ctx context.Context) DataSourceDynamodbConfigOutput {
	return o
}

func (o DataSourceDynamodbConfigOutput) ToDataSourceDynamodbConfigPtrOutput() DataSourceDynamodbConfigPtrOutput {
	return o.ToDataSourceDynamodbConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceDynamodbConfigOutput) ToDataSourceDynamodbConfigPtrOutputWithContext(ctx context.Context) DataSourceDynamodbConfigPtrOutput {
	return o.ApplyT(func(v DataSourceDynamodbConfig) *DataSourceDynamodbConfig {
		return &v
	}).(DataSourceDynamodbConfigPtrOutput)
}
// AWS region of Elasticsearch domain. Defaults to current region.
func (o DataSourceDynamodbConfigOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func (v DataSourceDynamodbConfig) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Name of the DynamoDB table.
func (o DataSourceDynamodbConfigOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func (v DataSourceDynamodbConfig) string { return v.TableName }).(pulumi.StringOutput)
}

// Set to `true` to use Amazon Cognito credentials with this data source.
func (o DataSourceDynamodbConfigOutput) UseCallerCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v DataSourceDynamodbConfig) *bool { return v.UseCallerCredentials }).(pulumi.BoolPtrOutput)
}

type DataSourceDynamodbConfigPtrOutput struct { *pulumi.OutputState}

func (DataSourceDynamodbConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceDynamodbConfig)(nil)).Elem()
}

func (o DataSourceDynamodbConfigPtrOutput) ToDataSourceDynamodbConfigPtrOutput() DataSourceDynamodbConfigPtrOutput {
	return o
}

func (o DataSourceDynamodbConfigPtrOutput) ToDataSourceDynamodbConfigPtrOutputWithContext(ctx context.Context) DataSourceDynamodbConfigPtrOutput {
	return o
}

func (o DataSourceDynamodbConfigPtrOutput) Elem() DataSourceDynamodbConfigOutput {
	return o.ApplyT(func (v *DataSourceDynamodbConfig) DataSourceDynamodbConfig { return *v }).(DataSourceDynamodbConfigOutput)
}

// AWS region of Elasticsearch domain. Defaults to current region.
func (o DataSourceDynamodbConfigPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func (v DataSourceDynamodbConfig) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Name of the DynamoDB table.
func (o DataSourceDynamodbConfigPtrOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func (v DataSourceDynamodbConfig) string { return v.TableName }).(pulumi.StringOutput)
}

// Set to `true` to use Amazon Cognito credentials with this data source.
func (o DataSourceDynamodbConfigPtrOutput) UseCallerCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v DataSourceDynamodbConfig) *bool { return v.UseCallerCredentials }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(DataSourceDynamodbConfigOutput{})
	pulumi.RegisterOutputType(DataSourceDynamodbConfigPtrOutput{})
}
