// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package GraphQLApiAdditionalAuthenticationProvider

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-aws/appsync/GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig"
	"https:/github.com/pulumi/pulumi-aws/appsync/GraphQLApiAdditionalAuthenticationProviderUserPoolConfig"
)

type GraphQLApiAdditionalAuthenticationProvider struct {
	// The authentication type. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`
	AuthenticationType string `pulumi:"authenticationType"`
	// Nested argument containing OpenID Connect configuration. Defined below.
	OpenidConnectConfig *appsyncGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig.GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig `pulumi:"openidConnectConfig"`
	// The Amazon Cognito User Pool configuration. Defined below.
	UserPoolConfig *appsyncGraphQLApiAdditionalAuthenticationProviderUserPoolConfig.GraphQLApiAdditionalAuthenticationProviderUserPoolConfig `pulumi:"userPoolConfig"`
}

type GraphQLApiAdditionalAuthenticationProviderInput interface {
	pulumi.Input

	ToGraphQLApiAdditionalAuthenticationProviderOutput() GraphQLApiAdditionalAuthenticationProviderOutput
	ToGraphQLApiAdditionalAuthenticationProviderOutputWithContext(context.Context) GraphQLApiAdditionalAuthenticationProviderOutput
}

type GraphQLApiAdditionalAuthenticationProviderArgs struct {
	// The authentication type. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// Nested argument containing OpenID Connect configuration. Defined below.
	OpenidConnectConfig appsyncGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig.GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrInput `pulumi:"openidConnectConfig"`
	// The Amazon Cognito User Pool configuration. Defined below.
	UserPoolConfig appsyncGraphQLApiAdditionalAuthenticationProviderUserPoolConfig.GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrInput `pulumi:"userPoolConfig"`
}

func (GraphQLApiAdditionalAuthenticationProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProvider)(nil)).Elem()
}

func (i GraphQLApiAdditionalAuthenticationProviderArgs) ToGraphQLApiAdditionalAuthenticationProviderOutput() GraphQLApiAdditionalAuthenticationProviderOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderOutputWithContext(context.Background())
}

func (i GraphQLApiAdditionalAuthenticationProviderArgs) ToGraphQLApiAdditionalAuthenticationProviderOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderOutput)
}

type GraphQLApiAdditionalAuthenticationProviderArrayInput interface {
	pulumi.Input

	ToGraphQLApiAdditionalAuthenticationProviderArrayOutput() GraphQLApiAdditionalAuthenticationProviderArrayOutput
	ToGraphQLApiAdditionalAuthenticationProviderArrayOutputWithContext(context.Context) GraphQLApiAdditionalAuthenticationProviderArrayOutput
}

type GraphQLApiAdditionalAuthenticationProviderArray []GraphQLApiAdditionalAuthenticationProviderInput

func (GraphQLApiAdditionalAuthenticationProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GraphQLApiAdditionalAuthenticationProvider)(nil)).Elem()
}

func (i GraphQLApiAdditionalAuthenticationProviderArray) ToGraphQLApiAdditionalAuthenticationProviderArrayOutput() GraphQLApiAdditionalAuthenticationProviderArrayOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderArrayOutputWithContext(context.Background())
}

func (i GraphQLApiAdditionalAuthenticationProviderArray) ToGraphQLApiAdditionalAuthenticationProviderArrayOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderArrayOutput)
}

type GraphQLApiAdditionalAuthenticationProviderOutput struct { *pulumi.OutputState }

func (GraphQLApiAdditionalAuthenticationProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProvider)(nil)).Elem()
}

func (o GraphQLApiAdditionalAuthenticationProviderOutput) ToGraphQLApiAdditionalAuthenticationProviderOutput() GraphQLApiAdditionalAuthenticationProviderOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderOutput) ToGraphQLApiAdditionalAuthenticationProviderOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderOutput {
	return o
}

// The authentication type. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`
func (o GraphQLApiAdditionalAuthenticationProviderOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func (v GraphQLApiAdditionalAuthenticationProvider) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// Nested argument containing OpenID Connect configuration. Defined below.
func (o GraphQLApiAdditionalAuthenticationProviderOutput) OpenidConnectConfig() appsyncGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig.GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput {
	return o.ApplyT(func (v GraphQLApiAdditionalAuthenticationProvider) *appsyncGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig.GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig { return v.OpenidConnectConfig }).(appsyncGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig.GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput)
}

// The Amazon Cognito User Pool configuration. Defined below.
func (o GraphQLApiAdditionalAuthenticationProviderOutput) UserPoolConfig() appsyncGraphQLApiAdditionalAuthenticationProviderUserPoolConfig.GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput {
	return o.ApplyT(func (v GraphQLApiAdditionalAuthenticationProvider) *appsyncGraphQLApiAdditionalAuthenticationProviderUserPoolConfig.GraphQLApiAdditionalAuthenticationProviderUserPoolConfig { return v.UserPoolConfig }).(appsyncGraphQLApiAdditionalAuthenticationProviderUserPoolConfig.GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput)
}

type GraphQLApiAdditionalAuthenticationProviderArrayOutput struct { *pulumi.OutputState}

func (GraphQLApiAdditionalAuthenticationProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GraphQLApiAdditionalAuthenticationProvider)(nil)).Elem()
}

func (o GraphQLApiAdditionalAuthenticationProviderArrayOutput) ToGraphQLApiAdditionalAuthenticationProviderArrayOutput() GraphQLApiAdditionalAuthenticationProviderArrayOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderArrayOutput) ToGraphQLApiAdditionalAuthenticationProviderArrayOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderArrayOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderArrayOutput) Index(i pulumi.IntInput) GraphQLApiAdditionalAuthenticationProviderOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GraphQLApiAdditionalAuthenticationProvider {
		return vs[0].([]GraphQLApiAdditionalAuthenticationProvider)[vs[1].(int)]
	}).(GraphQLApiAdditionalAuthenticationProviderOutput)
}

func init() {
	pulumi.RegisterOutputType(GraphQLApiAdditionalAuthenticationProviderOutput{})
	pulumi.RegisterOutputType(GraphQLApiAdditionalAuthenticationProviderArrayOutput{})
}
