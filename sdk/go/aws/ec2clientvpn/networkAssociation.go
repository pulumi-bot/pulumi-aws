// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2clientvpn

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type NetworkAssociation struct {
	pulumi.CustomResourceState

	ClientVpnEndpointId pulumi.StringOutput      `pulumi:"clientVpnEndpointId"`
	SecurityGroups      pulumi.StringArrayOutput `pulumi:"securityGroups"`
	Status              pulumi.StringOutput      `pulumi:"status"`
	SubnetId            pulumi.StringOutput      `pulumi:"subnetId"`
	VpcId               pulumi.StringOutput      `pulumi:"vpcId"`
}

// NewNetworkAssociation registers a new resource with the given unique name, arguments, and options.
func NewNetworkAssociation(ctx *pulumi.Context,
	name string, args *NetworkAssociationArgs, opts ...pulumi.ResourceOption) (*NetworkAssociation, error) {
	if args == nil || args.ClientVpnEndpointId == nil {
		return nil, errors.New("missing required argument 'ClientVpnEndpointId'")
	}
	if args == nil || args.SubnetId == nil {
		return nil, errors.New("missing required argument 'SubnetId'")
	}
	if args == nil {
		args = &NetworkAssociationArgs{}
	}
	var resource NetworkAssociation
	err := ctx.RegisterResource("aws:ec2clientvpn/networkAssociation:NetworkAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkAssociation gets an existing NetworkAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkAssociationState, opts ...pulumi.ResourceOption) (*NetworkAssociation, error) {
	var resource NetworkAssociation
	err := ctx.ReadResource("aws:ec2clientvpn/networkAssociation:NetworkAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkAssociation resources.
type networkAssociationState struct {
	ClientVpnEndpointId *string  `pulumi:"clientVpnEndpointId"`
	SecurityGroups      []string `pulumi:"securityGroups"`
	Status              *string  `pulumi:"status"`
	SubnetId            *string  `pulumi:"subnetId"`
	VpcId               *string  `pulumi:"vpcId"`
}

type NetworkAssociationState struct {
	ClientVpnEndpointId pulumi.StringPtrInput
	SecurityGroups      pulumi.StringArrayInput
	Status              pulumi.StringPtrInput
	SubnetId            pulumi.StringPtrInput
	VpcId               pulumi.StringPtrInput
}

func (NetworkAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkAssociationState)(nil)).Elem()
}

type networkAssociationArgs struct {
	ClientVpnEndpointId string `pulumi:"clientVpnEndpointId"`
	SubnetId            string `pulumi:"subnetId"`
}

// The set of arguments for constructing a NetworkAssociation resource.
type NetworkAssociationArgs struct {
	ClientVpnEndpointId pulumi.StringInput
	SubnetId            pulumi.StringInput
}

func (NetworkAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkAssociationArgs)(nil)).Elem()
}
