// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2clientvpn

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AuthorizationRule struct {
	pulumi.CustomResourceState

	AccessGroupId       pulumi.StringPtrOutput `pulumi:"accessGroupId"`
	AuthorizeAllGroups  pulumi.BoolPtrOutput   `pulumi:"authorizeAllGroups"`
	ClientVpnEndpointId pulumi.StringOutput    `pulumi:"clientVpnEndpointId"`
	Description         pulumi.StringPtrOutput `pulumi:"description"`
	TargetNetworkCidr   pulumi.StringOutput    `pulumi:"targetNetworkCidr"`
}

// NewAuthorizationRule registers a new resource with the given unique name, arguments, and options.
func NewAuthorizationRule(ctx *pulumi.Context,
	name string, args *AuthorizationRuleArgs, opts ...pulumi.ResourceOption) (*AuthorizationRule, error) {
	if args == nil || args.ClientVpnEndpointId == nil {
		return nil, errors.New("missing required argument 'ClientVpnEndpointId'")
	}
	if args == nil || args.TargetNetworkCidr == nil {
		return nil, errors.New("missing required argument 'TargetNetworkCidr'")
	}
	if args == nil {
		args = &AuthorizationRuleArgs{}
	}
	var resource AuthorizationRule
	err := ctx.RegisterResource("aws:ec2clientvpn/authorizationRule:AuthorizationRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAuthorizationRule gets an existing AuthorizationRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAuthorizationRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AuthorizationRuleState, opts ...pulumi.ResourceOption) (*AuthorizationRule, error) {
	var resource AuthorizationRule
	err := ctx.ReadResource("aws:ec2clientvpn/authorizationRule:AuthorizationRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AuthorizationRule resources.
type authorizationRuleState struct {
	AccessGroupId       *string `pulumi:"accessGroupId"`
	AuthorizeAllGroups  *bool   `pulumi:"authorizeAllGroups"`
	ClientVpnEndpointId *string `pulumi:"clientVpnEndpointId"`
	Description         *string `pulumi:"description"`
	TargetNetworkCidr   *string `pulumi:"targetNetworkCidr"`
}

type AuthorizationRuleState struct {
	AccessGroupId       pulumi.StringPtrInput
	AuthorizeAllGroups  pulumi.BoolPtrInput
	ClientVpnEndpointId pulumi.StringPtrInput
	Description         pulumi.StringPtrInput
	TargetNetworkCidr   pulumi.StringPtrInput
}

func (AuthorizationRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*authorizationRuleState)(nil)).Elem()
}

type authorizationRuleArgs struct {
	AccessGroupId       *string `pulumi:"accessGroupId"`
	AuthorizeAllGroups  *bool   `pulumi:"authorizeAllGroups"`
	ClientVpnEndpointId string  `pulumi:"clientVpnEndpointId"`
	Description         *string `pulumi:"description"`
	TargetNetworkCidr   string  `pulumi:"targetNetworkCidr"`
}

// The set of arguments for constructing a AuthorizationRule resource.
type AuthorizationRuleArgs struct {
	AccessGroupId       pulumi.StringPtrInput
	AuthorizeAllGroups  pulumi.BoolPtrInput
	ClientVpnEndpointId pulumi.StringInput
	Description         pulumi.StringPtrInput
	TargetNetworkCidr   pulumi.StringInput
}

func (AuthorizationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*authorizationRuleArgs)(nil)).Elem()
}
