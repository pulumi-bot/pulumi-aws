// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2clientvpn

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Route struct {
	pulumi.CustomResourceState

	ClientVpnEndpointId  pulumi.StringOutput    `pulumi:"clientVpnEndpointId"`
	Description          pulumi.StringPtrOutput `pulumi:"description"`
	DestinationCidrBlock pulumi.StringOutput    `pulumi:"destinationCidrBlock"`
	Origin               pulumi.StringOutput    `pulumi:"origin"`
	TargetVpcSubnetId    pulumi.StringOutput    `pulumi:"targetVpcSubnetId"`
	Type                 pulumi.StringOutput    `pulumi:"type"`
}

// NewRoute registers a new resource with the given unique name, arguments, and options.
func NewRoute(ctx *pulumi.Context,
	name string, args *RouteArgs, opts ...pulumi.ResourceOption) (*Route, error) {
	if args == nil || args.ClientVpnEndpointId == nil {
		return nil, errors.New("missing required argument 'ClientVpnEndpointId'")
	}
	if args == nil || args.DestinationCidrBlock == nil {
		return nil, errors.New("missing required argument 'DestinationCidrBlock'")
	}
	if args == nil || args.TargetVpcSubnetId == nil {
		return nil, errors.New("missing required argument 'TargetVpcSubnetId'")
	}
	if args == nil {
		args = &RouteArgs{}
	}
	var resource Route
	err := ctx.RegisterResource("aws:ec2clientvpn/route:Route", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRoute gets an existing Route resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRoute(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouteState, opts ...pulumi.ResourceOption) (*Route, error) {
	var resource Route
	err := ctx.ReadResource("aws:ec2clientvpn/route:Route", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Route resources.
type routeState struct {
	ClientVpnEndpointId  *string `pulumi:"clientVpnEndpointId"`
	Description          *string `pulumi:"description"`
	DestinationCidrBlock *string `pulumi:"destinationCidrBlock"`
	Origin               *string `pulumi:"origin"`
	TargetVpcSubnetId    *string `pulumi:"targetVpcSubnetId"`
	Type                 *string `pulumi:"type"`
}

type RouteState struct {
	ClientVpnEndpointId  pulumi.StringPtrInput
	Description          pulumi.StringPtrInput
	DestinationCidrBlock pulumi.StringPtrInput
	Origin               pulumi.StringPtrInput
	TargetVpcSubnetId    pulumi.StringPtrInput
	Type                 pulumi.StringPtrInput
}

func (RouteState) ElementType() reflect.Type {
	return reflect.TypeOf((*routeState)(nil)).Elem()
}

type routeArgs struct {
	ClientVpnEndpointId  string  `pulumi:"clientVpnEndpointId"`
	Description          *string `pulumi:"description"`
	DestinationCidrBlock string  `pulumi:"destinationCidrBlock"`
	TargetVpcSubnetId    string  `pulumi:"targetVpcSubnetId"`
}

// The set of arguments for constructing a Route resource.
type RouteArgs struct {
	ClientVpnEndpointId  pulumi.StringInput
	Description          pulumi.StringPtrInput
	DestinationCidrBlock pulumi.StringInput
	TargetVpcSubnetId    pulumi.StringInput
}

func (RouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routeArgs)(nil)).Elem()
}
