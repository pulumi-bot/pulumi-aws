// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2clientvpn

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Endpoint struct {
	pulumi.CustomResourceState

	Arn                   pulumi.StringOutput                     `pulumi:"arn"`
	AuthenticationOptions EndpointAuthenticationOptionArrayOutput `pulumi:"authenticationOptions"`
	ClientCidrBlock       pulumi.StringOutput                     `pulumi:"clientCidrBlock"`
	ConnectionLogOptions  EndpointConnectionLogOptionsOutput      `pulumi:"connectionLogOptions"`
	Description           pulumi.StringPtrOutput                  `pulumi:"description"`
	DnsName               pulumi.StringOutput                     `pulumi:"dnsName"`
	DnsServers            pulumi.StringArrayOutput                `pulumi:"dnsServers"`
	ServerCertificateArn  pulumi.StringOutput                     `pulumi:"serverCertificateArn"`
	SplitTunnel           pulumi.BoolPtrOutput                    `pulumi:"splitTunnel"`
	Status                pulumi.StringOutput                     `pulumi:"status"`
	Tags                  pulumi.StringMapOutput                  `pulumi:"tags"`
	TransportProtocol     pulumi.StringPtrOutput                  `pulumi:"transportProtocol"`
}

// NewEndpoint registers a new resource with the given unique name, arguments, and options.
func NewEndpoint(ctx *pulumi.Context,
	name string, args *EndpointArgs, opts ...pulumi.ResourceOption) (*Endpoint, error) {
	if args == nil || args.AuthenticationOptions == nil {
		return nil, errors.New("missing required argument 'AuthenticationOptions'")
	}
	if args == nil || args.ClientCidrBlock == nil {
		return nil, errors.New("missing required argument 'ClientCidrBlock'")
	}
	if args == nil || args.ConnectionLogOptions == nil {
		return nil, errors.New("missing required argument 'ConnectionLogOptions'")
	}
	if args == nil || args.ServerCertificateArn == nil {
		return nil, errors.New("missing required argument 'ServerCertificateArn'")
	}
	if args == nil {
		args = &EndpointArgs{}
	}
	var resource Endpoint
	err := ctx.RegisterResource("aws:ec2clientvpn/endpoint:Endpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEndpoint gets an existing Endpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EndpointState, opts ...pulumi.ResourceOption) (*Endpoint, error) {
	var resource Endpoint
	err := ctx.ReadResource("aws:ec2clientvpn/endpoint:Endpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Endpoint resources.
type endpointState struct {
	Arn                   *string                        `pulumi:"arn"`
	AuthenticationOptions []EndpointAuthenticationOption `pulumi:"authenticationOptions"`
	ClientCidrBlock       *string                        `pulumi:"clientCidrBlock"`
	ConnectionLogOptions  *EndpointConnectionLogOptions  `pulumi:"connectionLogOptions"`
	Description           *string                        `pulumi:"description"`
	DnsName               *string                        `pulumi:"dnsName"`
	DnsServers            []string                       `pulumi:"dnsServers"`
	ServerCertificateArn  *string                        `pulumi:"serverCertificateArn"`
	SplitTunnel           *bool                          `pulumi:"splitTunnel"`
	Status                *string                        `pulumi:"status"`
	Tags                  map[string]string              `pulumi:"tags"`
	TransportProtocol     *string                        `pulumi:"transportProtocol"`
}

type EndpointState struct {
	Arn                   pulumi.StringPtrInput
	AuthenticationOptions EndpointAuthenticationOptionArrayInput
	ClientCidrBlock       pulumi.StringPtrInput
	ConnectionLogOptions  EndpointConnectionLogOptionsPtrInput
	Description           pulumi.StringPtrInput
	DnsName               pulumi.StringPtrInput
	DnsServers            pulumi.StringArrayInput
	ServerCertificateArn  pulumi.StringPtrInput
	SplitTunnel           pulumi.BoolPtrInput
	Status                pulumi.StringPtrInput
	Tags                  pulumi.StringMapInput
	TransportProtocol     pulumi.StringPtrInput
}

func (EndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointState)(nil)).Elem()
}

type endpointArgs struct {
	AuthenticationOptions []EndpointAuthenticationOption `pulumi:"authenticationOptions"`
	ClientCidrBlock       string                         `pulumi:"clientCidrBlock"`
	ConnectionLogOptions  EndpointConnectionLogOptions   `pulumi:"connectionLogOptions"`
	Description           *string                        `pulumi:"description"`
	DnsServers            []string                       `pulumi:"dnsServers"`
	ServerCertificateArn  string                         `pulumi:"serverCertificateArn"`
	SplitTunnel           *bool                          `pulumi:"splitTunnel"`
	Tags                  map[string]string              `pulumi:"tags"`
	TransportProtocol     *string                        `pulumi:"transportProtocol"`
}

// The set of arguments for constructing a Endpoint resource.
type EndpointArgs struct {
	AuthenticationOptions EndpointAuthenticationOptionArrayInput
	ClientCidrBlock       pulumi.StringInput
	ConnectionLogOptions  EndpointConnectionLogOptionsInput
	Description           pulumi.StringPtrInput
	DnsServers            pulumi.StringArrayInput
	ServerCertificateArn  pulumi.StringInput
	SplitTunnel           pulumi.BoolPtrInput
	Tags                  pulumi.StringMapInput
	TransportProtocol     pulumi.StringPtrInput
}

func (EndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointArgs)(nil)).Elem()
}
