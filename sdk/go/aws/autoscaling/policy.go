// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package autoscaling

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Policy struct {
	pulumi.CustomResourceState

	AdjustmentType              pulumi.StringPtrOutput                     `pulumi:"adjustmentType"`
	Arn                         pulumi.StringOutput                        `pulumi:"arn"`
	AutoscalingGroupName        pulumi.StringOutput                        `pulumi:"autoscalingGroupName"`
	Cooldown                    pulumi.IntPtrOutput                        `pulumi:"cooldown"`
	EstimatedInstanceWarmup     pulumi.IntPtrOutput                        `pulumi:"estimatedInstanceWarmup"`
	MetricAggregationType       pulumi.StringOutput                        `pulumi:"metricAggregationType"`
	MinAdjustmentMagnitude      pulumi.IntPtrOutput                        `pulumi:"minAdjustmentMagnitude"`
	Name                        pulumi.StringOutput                        `pulumi:"name"`
	PolicyType                  pulumi.StringPtrOutput                     `pulumi:"policyType"`
	ScalingAdjustment           pulumi.IntPtrOutput                        `pulumi:"scalingAdjustment"`
	StepAdjustments             PolicyStepAdjustmentArrayOutput            `pulumi:"stepAdjustments"`
	TargetTrackingConfiguration PolicyTargetTrackingConfigurationPtrOutput `pulumi:"targetTrackingConfiguration"`
}

// NewPolicy registers a new resource with the given unique name, arguments, and options.
func NewPolicy(ctx *pulumi.Context,
	name string, args *PolicyArgs, opts ...pulumi.ResourceOption) (*Policy, error) {
	if args == nil || args.AutoscalingGroupName == nil {
		return nil, errors.New("missing required argument 'AutoscalingGroupName'")
	}
	if args == nil {
		args = &PolicyArgs{}
	}
	var resource Policy
	err := ctx.RegisterResource("aws:autoscaling/policy:Policy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicy gets an existing Policy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyState, opts ...pulumi.ResourceOption) (*Policy, error) {
	var resource Policy
	err := ctx.ReadResource("aws:autoscaling/policy:Policy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Policy resources.
type policyState struct {
	AdjustmentType              *string                            `pulumi:"adjustmentType"`
	Arn                         *string                            `pulumi:"arn"`
	AutoscalingGroupName        *string                            `pulumi:"autoscalingGroupName"`
	Cooldown                    *int                               `pulumi:"cooldown"`
	EstimatedInstanceWarmup     *int                               `pulumi:"estimatedInstanceWarmup"`
	MetricAggregationType       *string                            `pulumi:"metricAggregationType"`
	MinAdjustmentMagnitude      *int                               `pulumi:"minAdjustmentMagnitude"`
	Name                        *string                            `pulumi:"name"`
	PolicyType                  *string                            `pulumi:"policyType"`
	ScalingAdjustment           *int                               `pulumi:"scalingAdjustment"`
	StepAdjustments             []PolicyStepAdjustment             `pulumi:"stepAdjustments"`
	TargetTrackingConfiguration *PolicyTargetTrackingConfiguration `pulumi:"targetTrackingConfiguration"`
}

type PolicyState struct {
	AdjustmentType              pulumi.StringPtrInput
	Arn                         pulumi.StringPtrInput
	AutoscalingGroupName        pulumi.StringPtrInput
	Cooldown                    pulumi.IntPtrInput
	EstimatedInstanceWarmup     pulumi.IntPtrInput
	MetricAggregationType       pulumi.StringPtrInput
	MinAdjustmentMagnitude      pulumi.IntPtrInput
	Name                        pulumi.StringPtrInput
	PolicyType                  pulumi.StringPtrInput
	ScalingAdjustment           pulumi.IntPtrInput
	StepAdjustments             PolicyStepAdjustmentArrayInput
	TargetTrackingConfiguration PolicyTargetTrackingConfigurationPtrInput
}

func (PolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyState)(nil)).Elem()
}

type policyArgs struct {
	AdjustmentType              *string                            `pulumi:"adjustmentType"`
	AutoscalingGroupName        string                             `pulumi:"autoscalingGroupName"`
	Cooldown                    *int                               `pulumi:"cooldown"`
	EstimatedInstanceWarmup     *int                               `pulumi:"estimatedInstanceWarmup"`
	MetricAggregationType       *string                            `pulumi:"metricAggregationType"`
	MinAdjustmentMagnitude      *int                               `pulumi:"minAdjustmentMagnitude"`
	Name                        *string                            `pulumi:"name"`
	PolicyType                  *string                            `pulumi:"policyType"`
	ScalingAdjustment           *int                               `pulumi:"scalingAdjustment"`
	StepAdjustments             []PolicyStepAdjustment             `pulumi:"stepAdjustments"`
	TargetTrackingConfiguration *PolicyTargetTrackingConfiguration `pulumi:"targetTrackingConfiguration"`
}

// The set of arguments for constructing a Policy resource.
type PolicyArgs struct {
	AdjustmentType              pulumi.StringPtrInput
	AutoscalingGroupName        pulumi.StringInput
	Cooldown                    pulumi.IntPtrInput
	EstimatedInstanceWarmup     pulumi.IntPtrInput
	MetricAggregationType       pulumi.StringPtrInput
	MinAdjustmentMagnitude      pulumi.IntPtrInput
	Name                        pulumi.StringPtrInput
	PolicyType                  pulumi.StringPtrInput
	ScalingAdjustment           pulumi.IntPtrInput
	StepAdjustments             PolicyStepAdjustmentArrayInput
	TargetTrackingConfiguration PolicyTargetTrackingConfigurationPtrInput
}

func (PolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyArgs)(nil)).Elem()
}
