// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package autoscaling

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Schedule struct {
	pulumi.CustomResourceState

	Arn                  pulumi.StringOutput `pulumi:"arn"`
	AutoscalingGroupName pulumi.StringOutput `pulumi:"autoscalingGroupName"`
	DesiredCapacity      pulumi.IntOutput    `pulumi:"desiredCapacity"`
	EndTime              pulumi.StringOutput `pulumi:"endTime"`
	MaxSize              pulumi.IntOutput    `pulumi:"maxSize"`
	MinSize              pulumi.IntOutput    `pulumi:"minSize"`
	Recurrence           pulumi.StringOutput `pulumi:"recurrence"`
	ScheduledActionName  pulumi.StringOutput `pulumi:"scheduledActionName"`
	StartTime            pulumi.StringOutput `pulumi:"startTime"`
}

// NewSchedule registers a new resource with the given unique name, arguments, and options.
func NewSchedule(ctx *pulumi.Context,
	name string, args *ScheduleArgs, opts ...pulumi.ResourceOption) (*Schedule, error) {
	if args == nil || args.AutoscalingGroupName == nil {
		return nil, errors.New("missing required argument 'AutoscalingGroupName'")
	}
	if args == nil || args.ScheduledActionName == nil {
		return nil, errors.New("missing required argument 'ScheduledActionName'")
	}
	if args == nil {
		args = &ScheduleArgs{}
	}
	var resource Schedule
	err := ctx.RegisterResource("aws:autoscaling/schedule:Schedule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSchedule gets an existing Schedule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSchedule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ScheduleState, opts ...pulumi.ResourceOption) (*Schedule, error) {
	var resource Schedule
	err := ctx.ReadResource("aws:autoscaling/schedule:Schedule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Schedule resources.
type scheduleState struct {
	Arn                  *string `pulumi:"arn"`
	AutoscalingGroupName *string `pulumi:"autoscalingGroupName"`
	DesiredCapacity      *int    `pulumi:"desiredCapacity"`
	EndTime              *string `pulumi:"endTime"`
	MaxSize              *int    `pulumi:"maxSize"`
	MinSize              *int    `pulumi:"minSize"`
	Recurrence           *string `pulumi:"recurrence"`
	ScheduledActionName  *string `pulumi:"scheduledActionName"`
	StartTime            *string `pulumi:"startTime"`
}

type ScheduleState struct {
	Arn                  pulumi.StringPtrInput
	AutoscalingGroupName pulumi.StringPtrInput
	DesiredCapacity      pulumi.IntPtrInput
	EndTime              pulumi.StringPtrInput
	MaxSize              pulumi.IntPtrInput
	MinSize              pulumi.IntPtrInput
	Recurrence           pulumi.StringPtrInput
	ScheduledActionName  pulumi.StringPtrInput
	StartTime            pulumi.StringPtrInput
}

func (ScheduleState) ElementType() reflect.Type {
	return reflect.TypeOf((*scheduleState)(nil)).Elem()
}

type scheduleArgs struct {
	AutoscalingGroupName string  `pulumi:"autoscalingGroupName"`
	DesiredCapacity      *int    `pulumi:"desiredCapacity"`
	EndTime              *string `pulumi:"endTime"`
	MaxSize              *int    `pulumi:"maxSize"`
	MinSize              *int    `pulumi:"minSize"`
	Recurrence           *string `pulumi:"recurrence"`
	ScheduledActionName  string  `pulumi:"scheduledActionName"`
	StartTime            *string `pulumi:"startTime"`
}

// The set of arguments for constructing a Schedule resource.
type ScheduleArgs struct {
	AutoscalingGroupName pulumi.StringInput
	DesiredCapacity      pulumi.IntPtrInput
	EndTime              pulumi.StringPtrInput
	MaxSize              pulumi.IntPtrInput
	MinSize              pulumi.IntPtrInput
	Recurrence           pulumi.StringPtrInput
	ScheduledActionName  pulumi.StringInput
	StartTime            pulumi.StringPtrInput
}

func (ScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*scheduleArgs)(nil)).Elem()
}
