// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2transitgateway

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type RouteTablePropagation struct {
	pulumi.CustomResourceState

	ResourceId                 pulumi.StringOutput `pulumi:"resourceId"`
	ResourceType               pulumi.StringOutput `pulumi:"resourceType"`
	TransitGatewayAttachmentId pulumi.StringOutput `pulumi:"transitGatewayAttachmentId"`
	TransitGatewayRouteTableId pulumi.StringOutput `pulumi:"transitGatewayRouteTableId"`
}

// NewRouteTablePropagation registers a new resource with the given unique name, arguments, and options.
func NewRouteTablePropagation(ctx *pulumi.Context,
	name string, args *RouteTablePropagationArgs, opts ...pulumi.ResourceOption) (*RouteTablePropagation, error) {
	if args == nil || args.TransitGatewayAttachmentId == nil {
		return nil, errors.New("missing required argument 'TransitGatewayAttachmentId'")
	}
	if args == nil || args.TransitGatewayRouteTableId == nil {
		return nil, errors.New("missing required argument 'TransitGatewayRouteTableId'")
	}
	if args == nil {
		args = &RouteTablePropagationArgs{}
	}
	var resource RouteTablePropagation
	err := ctx.RegisterResource("aws:ec2transitgateway/routeTablePropagation:RouteTablePropagation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRouteTablePropagation gets an existing RouteTablePropagation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouteTablePropagation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouteTablePropagationState, opts ...pulumi.ResourceOption) (*RouteTablePropagation, error) {
	var resource RouteTablePropagation
	err := ctx.ReadResource("aws:ec2transitgateway/routeTablePropagation:RouteTablePropagation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RouteTablePropagation resources.
type routeTablePropagationState struct {
	ResourceId                 *string `pulumi:"resourceId"`
	ResourceType               *string `pulumi:"resourceType"`
	TransitGatewayAttachmentId *string `pulumi:"transitGatewayAttachmentId"`
	TransitGatewayRouteTableId *string `pulumi:"transitGatewayRouteTableId"`
}

type RouteTablePropagationState struct {
	ResourceId                 pulumi.StringPtrInput
	ResourceType               pulumi.StringPtrInput
	TransitGatewayAttachmentId pulumi.StringPtrInput
	TransitGatewayRouteTableId pulumi.StringPtrInput
}

func (RouteTablePropagationState) ElementType() reflect.Type {
	return reflect.TypeOf((*routeTablePropagationState)(nil)).Elem()
}

type routeTablePropagationArgs struct {
	TransitGatewayAttachmentId string `pulumi:"transitGatewayAttachmentId"`
	TransitGatewayRouteTableId string `pulumi:"transitGatewayRouteTableId"`
}

// The set of arguments for constructing a RouteTablePropagation resource.
type RouteTablePropagationArgs struct {
	TransitGatewayAttachmentId pulumi.StringInput
	TransitGatewayRouteTableId pulumi.StringInput
}

func (RouteTablePropagationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routeTablePropagationArgs)(nil)).Elem()
}
