// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2transitgateway

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type TransitGateway struct {
	pulumi.CustomResourceState

	AmazonSideAsn                  pulumi.IntPtrOutput    `pulumi:"amazonSideAsn"`
	Arn                            pulumi.StringOutput    `pulumi:"arn"`
	AssociationDefaultRouteTableId pulumi.StringOutput    `pulumi:"associationDefaultRouteTableId"`
	AutoAcceptSharedAttachments    pulumi.StringPtrOutput `pulumi:"autoAcceptSharedAttachments"`
	DefaultRouteTableAssociation   pulumi.StringPtrOutput `pulumi:"defaultRouteTableAssociation"`
	DefaultRouteTablePropagation   pulumi.StringPtrOutput `pulumi:"defaultRouteTablePropagation"`
	Description                    pulumi.StringPtrOutput `pulumi:"description"`
	DnsSupport                     pulumi.StringPtrOutput `pulumi:"dnsSupport"`
	OwnerId                        pulumi.StringOutput    `pulumi:"ownerId"`
	PropagationDefaultRouteTableId pulumi.StringOutput    `pulumi:"propagationDefaultRouteTableId"`
	Tags                           pulumi.StringMapOutput `pulumi:"tags"`
	VpnEcmpSupport                 pulumi.StringPtrOutput `pulumi:"vpnEcmpSupport"`
}

// NewTransitGateway registers a new resource with the given unique name, arguments, and options.
func NewTransitGateway(ctx *pulumi.Context,
	name string, args *TransitGatewayArgs, opts ...pulumi.ResourceOption) (*TransitGateway, error) {
	if args == nil {
		args = &TransitGatewayArgs{}
	}
	var resource TransitGateway
	err := ctx.RegisterResource("aws:ec2transitgateway/transitGateway:TransitGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransitGateway gets an existing TransitGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransitGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransitGatewayState, opts ...pulumi.ResourceOption) (*TransitGateway, error) {
	var resource TransitGateway
	err := ctx.ReadResource("aws:ec2transitgateway/transitGateway:TransitGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransitGateway resources.
type transitGatewayState struct {
	AmazonSideAsn                  *int              `pulumi:"amazonSideAsn"`
	Arn                            *string           `pulumi:"arn"`
	AssociationDefaultRouteTableId *string           `pulumi:"associationDefaultRouteTableId"`
	AutoAcceptSharedAttachments    *string           `pulumi:"autoAcceptSharedAttachments"`
	DefaultRouteTableAssociation   *string           `pulumi:"defaultRouteTableAssociation"`
	DefaultRouteTablePropagation   *string           `pulumi:"defaultRouteTablePropagation"`
	Description                    *string           `pulumi:"description"`
	DnsSupport                     *string           `pulumi:"dnsSupport"`
	OwnerId                        *string           `pulumi:"ownerId"`
	PropagationDefaultRouteTableId *string           `pulumi:"propagationDefaultRouteTableId"`
	Tags                           map[string]string `pulumi:"tags"`
	VpnEcmpSupport                 *string           `pulumi:"vpnEcmpSupport"`
}

type TransitGatewayState struct {
	AmazonSideAsn                  pulumi.IntPtrInput
	Arn                            pulumi.StringPtrInput
	AssociationDefaultRouteTableId pulumi.StringPtrInput
	AutoAcceptSharedAttachments    pulumi.StringPtrInput
	DefaultRouteTableAssociation   pulumi.StringPtrInput
	DefaultRouteTablePropagation   pulumi.StringPtrInput
	Description                    pulumi.StringPtrInput
	DnsSupport                     pulumi.StringPtrInput
	OwnerId                        pulumi.StringPtrInput
	PropagationDefaultRouteTableId pulumi.StringPtrInput
	Tags                           pulumi.StringMapInput
	VpnEcmpSupport                 pulumi.StringPtrInput
}

func (TransitGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*transitGatewayState)(nil)).Elem()
}

type transitGatewayArgs struct {
	AmazonSideAsn                *int              `pulumi:"amazonSideAsn"`
	AutoAcceptSharedAttachments  *string           `pulumi:"autoAcceptSharedAttachments"`
	DefaultRouteTableAssociation *string           `pulumi:"defaultRouteTableAssociation"`
	DefaultRouteTablePropagation *string           `pulumi:"defaultRouteTablePropagation"`
	Description                  *string           `pulumi:"description"`
	DnsSupport                   *string           `pulumi:"dnsSupport"`
	Tags                         map[string]string `pulumi:"tags"`
	VpnEcmpSupport               *string           `pulumi:"vpnEcmpSupport"`
}

// The set of arguments for constructing a TransitGateway resource.
type TransitGatewayArgs struct {
	AmazonSideAsn                pulumi.IntPtrInput
	AutoAcceptSharedAttachments  pulumi.StringPtrInput
	DefaultRouteTableAssociation pulumi.StringPtrInput
	DefaultRouteTablePropagation pulumi.StringPtrInput
	Description                  pulumi.StringPtrInput
	DnsSupport                   pulumi.StringPtrInput
	Tags                         pulumi.StringMapInput
	VpnEcmpSupport               pulumi.StringPtrInput
}

func (TransitGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transitGatewayArgs)(nil)).Elem()
}
