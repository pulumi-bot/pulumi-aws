// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2transitgateway

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Route struct {
	pulumi.CustomResourceState

	Blackhole                  pulumi.BoolPtrOutput   `pulumi:"blackhole"`
	DestinationCidrBlock       pulumi.StringOutput    `pulumi:"destinationCidrBlock"`
	TransitGatewayAttachmentId pulumi.StringPtrOutput `pulumi:"transitGatewayAttachmentId"`
	TransitGatewayRouteTableId pulumi.StringOutput    `pulumi:"transitGatewayRouteTableId"`
}

// NewRoute registers a new resource with the given unique name, arguments, and options.
func NewRoute(ctx *pulumi.Context,
	name string, args *RouteArgs, opts ...pulumi.ResourceOption) (*Route, error) {
	if args == nil || args.DestinationCidrBlock == nil {
		return nil, errors.New("missing required argument 'DestinationCidrBlock'")
	}
	if args == nil || args.TransitGatewayRouteTableId == nil {
		return nil, errors.New("missing required argument 'TransitGatewayRouteTableId'")
	}
	if args == nil {
		args = &RouteArgs{}
	}
	var resource Route
	err := ctx.RegisterResource("aws:ec2transitgateway/route:Route", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRoute gets an existing Route resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRoute(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouteState, opts ...pulumi.ResourceOption) (*Route, error) {
	var resource Route
	err := ctx.ReadResource("aws:ec2transitgateway/route:Route", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Route resources.
type routeState struct {
	Blackhole                  *bool   `pulumi:"blackhole"`
	DestinationCidrBlock       *string `pulumi:"destinationCidrBlock"`
	TransitGatewayAttachmentId *string `pulumi:"transitGatewayAttachmentId"`
	TransitGatewayRouteTableId *string `pulumi:"transitGatewayRouteTableId"`
}

type RouteState struct {
	Blackhole                  pulumi.BoolPtrInput
	DestinationCidrBlock       pulumi.StringPtrInput
	TransitGatewayAttachmentId pulumi.StringPtrInput
	TransitGatewayRouteTableId pulumi.StringPtrInput
}

func (RouteState) ElementType() reflect.Type {
	return reflect.TypeOf((*routeState)(nil)).Elem()
}

type routeArgs struct {
	Blackhole                  *bool   `pulumi:"blackhole"`
	DestinationCidrBlock       string  `pulumi:"destinationCidrBlock"`
	TransitGatewayAttachmentId *string `pulumi:"transitGatewayAttachmentId"`
	TransitGatewayRouteTableId string  `pulumi:"transitGatewayRouteTableId"`
}

// The set of arguments for constructing a Route resource.
type RouteArgs struct {
	Blackhole                  pulumi.BoolPtrInput
	DestinationCidrBlock       pulumi.StringInput
	TransitGatewayAttachmentId pulumi.StringPtrInput
	TransitGatewayRouteTableId pulumi.StringInput
}

func (RouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routeArgs)(nil)).Elem()
}
