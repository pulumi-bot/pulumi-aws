// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2transitgateway

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

func LookupTransitGateway(ctx *pulumi.Context, args *LookupTransitGatewayArgs, opts ...pulumi.InvokeOption) (*LookupTransitGatewayResult, error) {
	var rv LookupTransitGatewayResult
	err := ctx.Invoke("aws:ec2transitgateway/getTransitGateway:getTransitGateway", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTransitGateway.
type LookupTransitGatewayArgs struct {
	Filters []GetTransitGatewayFilter `pulumi:"filters"`
	Id      *string                   `pulumi:"id"`
	Tags    map[string]string         `pulumi:"tags"`
}

// A collection of values returned by getTransitGateway.
type LookupTransitGatewayResult struct {
	AmazonSideAsn                  int                       `pulumi:"amazonSideAsn"`
	Arn                            string                    `pulumi:"arn"`
	AssociationDefaultRouteTableId string                    `pulumi:"associationDefaultRouteTableId"`
	AutoAcceptSharedAttachments    string                    `pulumi:"autoAcceptSharedAttachments"`
	DefaultRouteTableAssociation   string                    `pulumi:"defaultRouteTableAssociation"`
	DefaultRouteTablePropagation   string                    `pulumi:"defaultRouteTablePropagation"`
	Description                    string                    `pulumi:"description"`
	DnsSupport                     string                    `pulumi:"dnsSupport"`
	Filters                        []GetTransitGatewayFilter `pulumi:"filters"`
	Id                             *string                   `pulumi:"id"`
	OwnerId                        string                    `pulumi:"ownerId"`
	PropagationDefaultRouteTableId string                    `pulumi:"propagationDefaultRouteTableId"`
	Tags                           map[string]string         `pulumi:"tags"`
	VpnEcmpSupport                 string                    `pulumi:"vpnEcmpSupport"`
}
