// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package backup

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Selection struct {
	pulumi.CustomResourceState

	IamRoleArn    pulumi.StringOutput              `pulumi:"iamRoleArn"`
	Name          pulumi.StringOutput              `pulumi:"name"`
	PlanId        pulumi.StringOutput              `pulumi:"planId"`
	Resources     pulumi.StringArrayOutput         `pulumi:"resources"`
	SelectionTags SelectionSelectionTagArrayOutput `pulumi:"selectionTags"`
}

// NewSelection registers a new resource with the given unique name, arguments, and options.
func NewSelection(ctx *pulumi.Context,
	name string, args *SelectionArgs, opts ...pulumi.ResourceOption) (*Selection, error) {
	if args == nil || args.IamRoleArn == nil {
		return nil, errors.New("missing required argument 'IamRoleArn'")
	}
	if args == nil || args.PlanId == nil {
		return nil, errors.New("missing required argument 'PlanId'")
	}
	if args == nil {
		args = &SelectionArgs{}
	}
	var resource Selection
	err := ctx.RegisterResource("aws:backup/selection:Selection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSelection gets an existing Selection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSelection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SelectionState, opts ...pulumi.ResourceOption) (*Selection, error) {
	var resource Selection
	err := ctx.ReadResource("aws:backup/selection:Selection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Selection resources.
type selectionState struct {
	IamRoleArn    *string                 `pulumi:"iamRoleArn"`
	Name          *string                 `pulumi:"name"`
	PlanId        *string                 `pulumi:"planId"`
	Resources     []string                `pulumi:"resources"`
	SelectionTags []SelectionSelectionTag `pulumi:"selectionTags"`
}

type SelectionState struct {
	IamRoleArn    pulumi.StringPtrInput
	Name          pulumi.StringPtrInput
	PlanId        pulumi.StringPtrInput
	Resources     pulumi.StringArrayInput
	SelectionTags SelectionSelectionTagArrayInput
}

func (SelectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*selectionState)(nil)).Elem()
}

type selectionArgs struct {
	IamRoleArn    string                  `pulumi:"iamRoleArn"`
	Name          *string                 `pulumi:"name"`
	PlanId        string                  `pulumi:"planId"`
	Resources     []string                `pulumi:"resources"`
	SelectionTags []SelectionSelectionTag `pulumi:"selectionTags"`
}

// The set of arguments for constructing a Selection resource.
type SelectionArgs struct {
	IamRoleArn    pulumi.StringInput
	Name          pulumi.StringPtrInput
	PlanId        pulumi.StringInput
	Resources     pulumi.StringArrayInput
	SelectionTags SelectionSelectionTagArrayInput
}

func (SelectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*selectionArgs)(nil)).Elem()
}
