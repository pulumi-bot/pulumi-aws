// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package PlanRuleLifecycle

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type PlanRuleLifecycle struct {
	// Specifies the number of days after creation that a recovery point is moved to cold storage.
	ColdStorageAfter *int `pulumi:"coldStorageAfter"`
	// Specifies the number of days after creation that a recovery point is deleted. Must be 90 days greater than `coldStorageAfter`.
	DeleteAfter *int `pulumi:"deleteAfter"`
}

type PlanRuleLifecycleInput interface {
	pulumi.Input

	ToPlanRuleLifecycleOutput() PlanRuleLifecycleOutput
	ToPlanRuleLifecycleOutputWithContext(context.Context) PlanRuleLifecycleOutput
}

type PlanRuleLifecycleArgs struct {
	// Specifies the number of days after creation that a recovery point is moved to cold storage.
	ColdStorageAfter pulumi.IntPtrInput `pulumi:"coldStorageAfter"`
	// Specifies the number of days after creation that a recovery point is deleted. Must be 90 days greater than `coldStorageAfter`.
	DeleteAfter pulumi.IntPtrInput `pulumi:"deleteAfter"`
}

func (PlanRuleLifecycleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PlanRuleLifecycle)(nil)).Elem()
}

func (i PlanRuleLifecycleArgs) ToPlanRuleLifecycleOutput() PlanRuleLifecycleOutput {
	return i.ToPlanRuleLifecycleOutputWithContext(context.Background())
}

func (i PlanRuleLifecycleArgs) ToPlanRuleLifecycleOutputWithContext(ctx context.Context) PlanRuleLifecycleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanRuleLifecycleOutput)
}

func (i PlanRuleLifecycleArgs) ToPlanRuleLifecyclePtrOutput() PlanRuleLifecyclePtrOutput {
	return i.ToPlanRuleLifecyclePtrOutputWithContext(context.Background())
}

func (i PlanRuleLifecycleArgs) ToPlanRuleLifecyclePtrOutputWithContext(ctx context.Context) PlanRuleLifecyclePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanRuleLifecycleOutput).ToPlanRuleLifecyclePtrOutputWithContext(ctx)
}

type PlanRuleLifecyclePtrInput interface {
	pulumi.Input

	ToPlanRuleLifecyclePtrOutput() PlanRuleLifecyclePtrOutput
	ToPlanRuleLifecyclePtrOutputWithContext(context.Context) PlanRuleLifecyclePtrOutput
}

type planRuleLifecyclePtrType PlanRuleLifecycleArgs

func PlanRuleLifecyclePtr(v *PlanRuleLifecycleArgs) PlanRuleLifecyclePtrInput {	return (*planRuleLifecyclePtrType)(v)
}

func (*planRuleLifecyclePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PlanRuleLifecycle)(nil)).Elem()
}

func (i *planRuleLifecyclePtrType) ToPlanRuleLifecyclePtrOutput() PlanRuleLifecyclePtrOutput {
	return i.ToPlanRuleLifecyclePtrOutputWithContext(context.Background())
}

func (i *planRuleLifecyclePtrType) ToPlanRuleLifecyclePtrOutputWithContext(ctx context.Context) PlanRuleLifecyclePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlanRuleLifecyclePtrOutput)
}

type PlanRuleLifecycleOutput struct { *pulumi.OutputState }

func (PlanRuleLifecycleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlanRuleLifecycle)(nil)).Elem()
}

func (o PlanRuleLifecycleOutput) ToPlanRuleLifecycleOutput() PlanRuleLifecycleOutput {
	return o
}

func (o PlanRuleLifecycleOutput) ToPlanRuleLifecycleOutputWithContext(ctx context.Context) PlanRuleLifecycleOutput {
	return o
}

func (o PlanRuleLifecycleOutput) ToPlanRuleLifecyclePtrOutput() PlanRuleLifecyclePtrOutput {
	return o.ToPlanRuleLifecyclePtrOutputWithContext(context.Background())
}

func (o PlanRuleLifecycleOutput) ToPlanRuleLifecyclePtrOutputWithContext(ctx context.Context) PlanRuleLifecyclePtrOutput {
	return o.ApplyT(func(v PlanRuleLifecycle) *PlanRuleLifecycle {
		return &v
	}).(PlanRuleLifecyclePtrOutput)
}
// Specifies the number of days after creation that a recovery point is moved to cold storage.
func (o PlanRuleLifecycleOutput) ColdStorageAfter() pulumi.IntPtrOutput {
	return o.ApplyT(func (v PlanRuleLifecycle) *int { return v.ColdStorageAfter }).(pulumi.IntPtrOutput)
}

// Specifies the number of days after creation that a recovery point is deleted. Must be 90 days greater than `coldStorageAfter`.
func (o PlanRuleLifecycleOutput) DeleteAfter() pulumi.IntPtrOutput {
	return o.ApplyT(func (v PlanRuleLifecycle) *int { return v.DeleteAfter }).(pulumi.IntPtrOutput)
}

type PlanRuleLifecyclePtrOutput struct { *pulumi.OutputState}

func (PlanRuleLifecyclePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlanRuleLifecycle)(nil)).Elem()
}

func (o PlanRuleLifecyclePtrOutput) ToPlanRuleLifecyclePtrOutput() PlanRuleLifecyclePtrOutput {
	return o
}

func (o PlanRuleLifecyclePtrOutput) ToPlanRuleLifecyclePtrOutputWithContext(ctx context.Context) PlanRuleLifecyclePtrOutput {
	return o
}

func (o PlanRuleLifecyclePtrOutput) Elem() PlanRuleLifecycleOutput {
	return o.ApplyT(func (v *PlanRuleLifecycle) PlanRuleLifecycle { return *v }).(PlanRuleLifecycleOutput)
}

// Specifies the number of days after creation that a recovery point is moved to cold storage.
func (o PlanRuleLifecyclePtrOutput) ColdStorageAfter() pulumi.IntPtrOutput {
	return o.ApplyT(func (v PlanRuleLifecycle) *int { return v.ColdStorageAfter }).(pulumi.IntPtrOutput)
}

// Specifies the number of days after creation that a recovery point is deleted. Must be 90 days greater than `coldStorageAfter`.
func (o PlanRuleLifecyclePtrOutput) DeleteAfter() pulumi.IntPtrOutput {
	return o.ApplyT(func (v PlanRuleLifecycle) *int { return v.DeleteAfter }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(PlanRuleLifecycleOutput{})
	pulumi.RegisterOutputType(PlanRuleLifecyclePtrOutput{})
}
