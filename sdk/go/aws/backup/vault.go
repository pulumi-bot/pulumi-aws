// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package backup

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Vault struct {
	pulumi.CustomResourceState

	Arn            pulumi.StringOutput    `pulumi:"arn"`
	KmsKeyArn      pulumi.StringOutput    `pulumi:"kmsKeyArn"`
	Name           pulumi.StringOutput    `pulumi:"name"`
	RecoveryPoints pulumi.IntOutput       `pulumi:"recoveryPoints"`
	Tags           pulumi.StringMapOutput `pulumi:"tags"`
}

// NewVault registers a new resource with the given unique name, arguments, and options.
func NewVault(ctx *pulumi.Context,
	name string, args *VaultArgs, opts ...pulumi.ResourceOption) (*Vault, error) {
	if args == nil {
		args = &VaultArgs{}
	}
	var resource Vault
	err := ctx.RegisterResource("aws:backup/vault:Vault", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVault gets an existing Vault resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVault(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VaultState, opts ...pulumi.ResourceOption) (*Vault, error) {
	var resource Vault
	err := ctx.ReadResource("aws:backup/vault:Vault", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Vault resources.
type vaultState struct {
	Arn            *string           `pulumi:"arn"`
	KmsKeyArn      *string           `pulumi:"kmsKeyArn"`
	Name           *string           `pulumi:"name"`
	RecoveryPoints *int              `pulumi:"recoveryPoints"`
	Tags           map[string]string `pulumi:"tags"`
}

type VaultState struct {
	Arn            pulumi.StringPtrInput
	KmsKeyArn      pulumi.StringPtrInput
	Name           pulumi.StringPtrInput
	RecoveryPoints pulumi.IntPtrInput
	Tags           pulumi.StringMapInput
}

func (VaultState) ElementType() reflect.Type {
	return reflect.TypeOf((*vaultState)(nil)).Elem()
}

type vaultArgs struct {
	KmsKeyArn *string           `pulumi:"kmsKeyArn"`
	Name      *string           `pulumi:"name"`
	Tags      map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Vault resource.
type VaultArgs struct {
	KmsKeyArn pulumi.StringPtrInput
	Name      pulumi.StringPtrInput
	Tags      pulumi.StringMapInput
}

func (VaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vaultArgs)(nil)).Elem()
}
