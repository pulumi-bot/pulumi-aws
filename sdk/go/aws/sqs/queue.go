// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sqs

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Queue struct {
	pulumi.CustomResourceState

	Arn                          pulumi.StringOutput    `pulumi:"arn"`
	ContentBasedDeduplication    pulumi.BoolPtrOutput   `pulumi:"contentBasedDeduplication"`
	DelaySeconds                 pulumi.IntPtrOutput    `pulumi:"delaySeconds"`
	FifoQueue                    pulumi.BoolPtrOutput   `pulumi:"fifoQueue"`
	KmsDataKeyReusePeriodSeconds pulumi.IntOutput       `pulumi:"kmsDataKeyReusePeriodSeconds"`
	KmsMasterKeyId               pulumi.StringPtrOutput `pulumi:"kmsMasterKeyId"`
	MaxMessageSize               pulumi.IntPtrOutput    `pulumi:"maxMessageSize"`
	MessageRetentionSeconds      pulumi.IntPtrOutput    `pulumi:"messageRetentionSeconds"`
	Name                         pulumi.StringOutput    `pulumi:"name"`
	NamePrefix                   pulumi.StringPtrOutput `pulumi:"namePrefix"`
	Policy                       pulumi.StringOutput    `pulumi:"policy"`
	ReceiveWaitTimeSeconds       pulumi.IntPtrOutput    `pulumi:"receiveWaitTimeSeconds"`
	RedrivePolicy                pulumi.StringPtrOutput `pulumi:"redrivePolicy"`
	Tags                         pulumi.StringMapOutput `pulumi:"tags"`
	VisibilityTimeoutSeconds     pulumi.IntPtrOutput    `pulumi:"visibilityTimeoutSeconds"`
}

// NewQueue registers a new resource with the given unique name, arguments, and options.
func NewQueue(ctx *pulumi.Context,
	name string, args *QueueArgs, opts ...pulumi.ResourceOption) (*Queue, error) {
	if args == nil {
		args = &QueueArgs{}
	}
	var resource Queue
	err := ctx.RegisterResource("aws:sqs/queue:Queue", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetQueue gets an existing Queue resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetQueue(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *QueueState, opts ...pulumi.ResourceOption) (*Queue, error) {
	var resource Queue
	err := ctx.ReadResource("aws:sqs/queue:Queue", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Queue resources.
type queueState struct {
	Arn                          *string           `pulumi:"arn"`
	ContentBasedDeduplication    *bool             `pulumi:"contentBasedDeduplication"`
	DelaySeconds                 *int              `pulumi:"delaySeconds"`
	FifoQueue                    *bool             `pulumi:"fifoQueue"`
	KmsDataKeyReusePeriodSeconds *int              `pulumi:"kmsDataKeyReusePeriodSeconds"`
	KmsMasterKeyId               *string           `pulumi:"kmsMasterKeyId"`
	MaxMessageSize               *int              `pulumi:"maxMessageSize"`
	MessageRetentionSeconds      *int              `pulumi:"messageRetentionSeconds"`
	Name                         *string           `pulumi:"name"`
	NamePrefix                   *string           `pulumi:"namePrefix"`
	Policy                       *string           `pulumi:"policy"`
	ReceiveWaitTimeSeconds       *int              `pulumi:"receiveWaitTimeSeconds"`
	RedrivePolicy                *string           `pulumi:"redrivePolicy"`
	Tags                         map[string]string `pulumi:"tags"`
	VisibilityTimeoutSeconds     *int              `pulumi:"visibilityTimeoutSeconds"`
}

type QueueState struct {
	Arn                          pulumi.StringPtrInput
	ContentBasedDeduplication    pulumi.BoolPtrInput
	DelaySeconds                 pulumi.IntPtrInput
	FifoQueue                    pulumi.BoolPtrInput
	KmsDataKeyReusePeriodSeconds pulumi.IntPtrInput
	KmsMasterKeyId               pulumi.StringPtrInput
	MaxMessageSize               pulumi.IntPtrInput
	MessageRetentionSeconds      pulumi.IntPtrInput
	Name                         pulumi.StringPtrInput
	NamePrefix                   pulumi.StringPtrInput
	Policy                       pulumi.StringPtrInput
	ReceiveWaitTimeSeconds       pulumi.IntPtrInput
	RedrivePolicy                pulumi.StringPtrInput
	Tags                         pulumi.StringMapInput
	VisibilityTimeoutSeconds     pulumi.IntPtrInput
}

func (QueueState) ElementType() reflect.Type {
	return reflect.TypeOf((*queueState)(nil)).Elem()
}

type queueArgs struct {
	ContentBasedDeduplication    *bool             `pulumi:"contentBasedDeduplication"`
	DelaySeconds                 *int              `pulumi:"delaySeconds"`
	FifoQueue                    *bool             `pulumi:"fifoQueue"`
	KmsDataKeyReusePeriodSeconds *int              `pulumi:"kmsDataKeyReusePeriodSeconds"`
	KmsMasterKeyId               *string           `pulumi:"kmsMasterKeyId"`
	MaxMessageSize               *int              `pulumi:"maxMessageSize"`
	MessageRetentionSeconds      *int              `pulumi:"messageRetentionSeconds"`
	Name                         *string           `pulumi:"name"`
	NamePrefix                   *string           `pulumi:"namePrefix"`
	Policy                       *string           `pulumi:"policy"`
	ReceiveWaitTimeSeconds       *int              `pulumi:"receiveWaitTimeSeconds"`
	RedrivePolicy                *string           `pulumi:"redrivePolicy"`
	Tags                         map[string]string `pulumi:"tags"`
	VisibilityTimeoutSeconds     *int              `pulumi:"visibilityTimeoutSeconds"`
}

// The set of arguments for constructing a Queue resource.
type QueueArgs struct {
	ContentBasedDeduplication    pulumi.BoolPtrInput
	DelaySeconds                 pulumi.IntPtrInput
	FifoQueue                    pulumi.BoolPtrInput
	KmsDataKeyReusePeriodSeconds pulumi.IntPtrInput
	KmsMasterKeyId               pulumi.StringPtrInput
	MaxMessageSize               pulumi.IntPtrInput
	MessageRetentionSeconds      pulumi.IntPtrInput
	Name                         pulumi.StringPtrInput
	NamePrefix                   pulumi.StringPtrInput
	Policy                       pulumi.StringPtrInput
	ReceiveWaitTimeSeconds       pulumi.IntPtrInput
	RedrivePolicy                pulumi.StringPtrInput
	Tags                         pulumi.StringMapInput
	VisibilityTimeoutSeconds     pulumi.IntPtrInput
}

func (QueueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*queueArgs)(nil)).Elem()
}
