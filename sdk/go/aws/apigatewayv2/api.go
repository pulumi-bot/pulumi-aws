// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigatewayv2

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Api struct {
	pulumi.CustomResourceState

	ApiEndpoint               pulumi.StringOutput           `pulumi:"apiEndpoint"`
	ApiKeySelectionExpression pulumi.StringPtrOutput        `pulumi:"apiKeySelectionExpression"`
	Arn                       pulumi.StringOutput           `pulumi:"arn"`
	CorsConfiguration         ApiCorsConfigurationPtrOutput `pulumi:"corsConfiguration"`
	CredentialsArn            pulumi.StringPtrOutput        `pulumi:"credentialsArn"`
	Description               pulumi.StringPtrOutput        `pulumi:"description"`
	ExecutionArn              pulumi.StringOutput           `pulumi:"executionArn"`
	Name                      pulumi.StringOutput           `pulumi:"name"`
	ProtocolType              pulumi.StringOutput           `pulumi:"protocolType"`
	RouteKey                  pulumi.StringPtrOutput        `pulumi:"routeKey"`
	RouteSelectionExpression  pulumi.StringPtrOutput        `pulumi:"routeSelectionExpression"`
	Tags                      pulumi.StringMapOutput        `pulumi:"tags"`
	Target                    pulumi.StringPtrOutput        `pulumi:"target"`
	Version                   pulumi.StringPtrOutput        `pulumi:"version"`
}

// NewApi registers a new resource with the given unique name, arguments, and options.
func NewApi(ctx *pulumi.Context,
	name string, args *ApiArgs, opts ...pulumi.ResourceOption) (*Api, error) {
	if args == nil || args.ProtocolType == nil {
		return nil, errors.New("missing required argument 'ProtocolType'")
	}
	if args == nil {
		args = &ApiArgs{}
	}
	var resource Api
	err := ctx.RegisterResource("aws:apigatewayv2/api:Api", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApi gets an existing Api resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApi(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApiState, opts ...pulumi.ResourceOption) (*Api, error) {
	var resource Api
	err := ctx.ReadResource("aws:apigatewayv2/api:Api", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Api resources.
type apiState struct {
	ApiEndpoint               *string               `pulumi:"apiEndpoint"`
	ApiKeySelectionExpression *string               `pulumi:"apiKeySelectionExpression"`
	Arn                       *string               `pulumi:"arn"`
	CorsConfiguration         *ApiCorsConfiguration `pulumi:"corsConfiguration"`
	CredentialsArn            *string               `pulumi:"credentialsArn"`
	Description               *string               `pulumi:"description"`
	ExecutionArn              *string               `pulumi:"executionArn"`
	Name                      *string               `pulumi:"name"`
	ProtocolType              *string               `pulumi:"protocolType"`
	RouteKey                  *string               `pulumi:"routeKey"`
	RouteSelectionExpression  *string               `pulumi:"routeSelectionExpression"`
	Tags                      map[string]string     `pulumi:"tags"`
	Target                    *string               `pulumi:"target"`
	Version                   *string               `pulumi:"version"`
}

type ApiState struct {
	ApiEndpoint               pulumi.StringPtrInput
	ApiKeySelectionExpression pulumi.StringPtrInput
	Arn                       pulumi.StringPtrInput
	CorsConfiguration         ApiCorsConfigurationPtrInput
	CredentialsArn            pulumi.StringPtrInput
	Description               pulumi.StringPtrInput
	ExecutionArn              pulumi.StringPtrInput
	Name                      pulumi.StringPtrInput
	ProtocolType              pulumi.StringPtrInput
	RouteKey                  pulumi.StringPtrInput
	RouteSelectionExpression  pulumi.StringPtrInput
	Tags                      pulumi.StringMapInput
	Target                    pulumi.StringPtrInput
	Version                   pulumi.StringPtrInput
}

func (ApiState) ElementType() reflect.Type {
	return reflect.TypeOf((*apiState)(nil)).Elem()
}

type apiArgs struct {
	ApiKeySelectionExpression *string               `pulumi:"apiKeySelectionExpression"`
	CorsConfiguration         *ApiCorsConfiguration `pulumi:"corsConfiguration"`
	CredentialsArn            *string               `pulumi:"credentialsArn"`
	Description               *string               `pulumi:"description"`
	Name                      *string               `pulumi:"name"`
	ProtocolType              string                `pulumi:"protocolType"`
	RouteKey                  *string               `pulumi:"routeKey"`
	RouteSelectionExpression  *string               `pulumi:"routeSelectionExpression"`
	Tags                      map[string]string     `pulumi:"tags"`
	Target                    *string               `pulumi:"target"`
	Version                   *string               `pulumi:"version"`
}

// The set of arguments for constructing a Api resource.
type ApiArgs struct {
	ApiKeySelectionExpression pulumi.StringPtrInput
	CorsConfiguration         ApiCorsConfigurationPtrInput
	CredentialsArn            pulumi.StringPtrInput
	Description               pulumi.StringPtrInput
	Name                      pulumi.StringPtrInput
	ProtocolType              pulumi.StringInput
	RouteKey                  pulumi.StringPtrInput
	RouteSelectionExpression  pulumi.StringPtrInput
	Tags                      pulumi.StringMapInput
	Target                    pulumi.StringPtrInput
	Version                   pulumi.StringPtrInput
}

func (ApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apiArgs)(nil)).Elem()
}
