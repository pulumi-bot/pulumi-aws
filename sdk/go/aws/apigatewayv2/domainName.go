// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigatewayv2

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type DomainName struct {
	pulumi.CustomResourceState

	ApiMappingSelectionExpression pulumi.StringOutput                     `pulumi:"apiMappingSelectionExpression"`
	Arn                           pulumi.StringOutput                     `pulumi:"arn"`
	DomainName                    pulumi.StringOutput                     `pulumi:"domainName"`
	DomainNameConfiguration       DomainNameDomainNameConfigurationOutput `pulumi:"domainNameConfiguration"`
	Tags                          pulumi.StringMapOutput                  `pulumi:"tags"`
}

// NewDomainName registers a new resource with the given unique name, arguments, and options.
func NewDomainName(ctx *pulumi.Context,
	name string, args *DomainNameArgs, opts ...pulumi.ResourceOption) (*DomainName, error) {
	if args == nil || args.DomainName == nil {
		return nil, errors.New("missing required argument 'DomainName'")
	}
	if args == nil || args.DomainNameConfiguration == nil {
		return nil, errors.New("missing required argument 'DomainNameConfiguration'")
	}
	if args == nil {
		args = &DomainNameArgs{}
	}
	var resource DomainName
	err := ctx.RegisterResource("aws:apigatewayv2/domainName:DomainName", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainName gets an existing DomainName resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainName(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainNameState, opts ...pulumi.ResourceOption) (*DomainName, error) {
	var resource DomainName
	err := ctx.ReadResource("aws:apigatewayv2/domainName:DomainName", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainName resources.
type domainNameState struct {
	ApiMappingSelectionExpression *string                            `pulumi:"apiMappingSelectionExpression"`
	Arn                           *string                            `pulumi:"arn"`
	DomainName                    *string                            `pulumi:"domainName"`
	DomainNameConfiguration       *DomainNameDomainNameConfiguration `pulumi:"domainNameConfiguration"`
	Tags                          map[string]string                  `pulumi:"tags"`
}

type DomainNameState struct {
	ApiMappingSelectionExpression pulumi.StringPtrInput
	Arn                           pulumi.StringPtrInput
	DomainName                    pulumi.StringPtrInput
	DomainNameConfiguration       DomainNameDomainNameConfigurationPtrInput
	Tags                          pulumi.StringMapInput
}

func (DomainNameState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainNameState)(nil)).Elem()
}

type domainNameArgs struct {
	DomainName              string                            `pulumi:"domainName"`
	DomainNameConfiguration DomainNameDomainNameConfiguration `pulumi:"domainNameConfiguration"`
	Tags                    map[string]string                 `pulumi:"tags"`
}

// The set of arguments for constructing a DomainName resource.
type DomainNameArgs struct {
	DomainName              pulumi.StringInput
	DomainNameConfiguration DomainNameDomainNameConfigurationInput
	Tags                    pulumi.StringMapInput
}

func (DomainNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainNameArgs)(nil)).Elem()
}
