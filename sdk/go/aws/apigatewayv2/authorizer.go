// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigatewayv2

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Authorizer struct {
	pulumi.CustomResourceState

	ApiId                    pulumi.StringOutput                 `pulumi:"apiId"`
	AuthorizerCredentialsArn pulumi.StringPtrOutput              `pulumi:"authorizerCredentialsArn"`
	AuthorizerType           pulumi.StringOutput                 `pulumi:"authorizerType"`
	AuthorizerUri            pulumi.StringPtrOutput              `pulumi:"authorizerUri"`
	IdentitySources          pulumi.StringArrayOutput            `pulumi:"identitySources"`
	JwtConfiguration         AuthorizerJwtConfigurationPtrOutput `pulumi:"jwtConfiguration"`
	Name                     pulumi.StringOutput                 `pulumi:"name"`
}

// NewAuthorizer registers a new resource with the given unique name, arguments, and options.
func NewAuthorizer(ctx *pulumi.Context,
	name string, args *AuthorizerArgs, opts ...pulumi.ResourceOption) (*Authorizer, error) {
	if args == nil || args.ApiId == nil {
		return nil, errors.New("missing required argument 'ApiId'")
	}
	if args == nil || args.AuthorizerType == nil {
		return nil, errors.New("missing required argument 'AuthorizerType'")
	}
	if args == nil || args.IdentitySources == nil {
		return nil, errors.New("missing required argument 'IdentitySources'")
	}
	if args == nil {
		args = &AuthorizerArgs{}
	}
	var resource Authorizer
	err := ctx.RegisterResource("aws:apigatewayv2/authorizer:Authorizer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAuthorizer gets an existing Authorizer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAuthorizer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AuthorizerState, opts ...pulumi.ResourceOption) (*Authorizer, error) {
	var resource Authorizer
	err := ctx.ReadResource("aws:apigatewayv2/authorizer:Authorizer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Authorizer resources.
type authorizerState struct {
	ApiId                    *string                     `pulumi:"apiId"`
	AuthorizerCredentialsArn *string                     `pulumi:"authorizerCredentialsArn"`
	AuthorizerType           *string                     `pulumi:"authorizerType"`
	AuthorizerUri            *string                     `pulumi:"authorizerUri"`
	IdentitySources          []string                    `pulumi:"identitySources"`
	JwtConfiguration         *AuthorizerJwtConfiguration `pulumi:"jwtConfiguration"`
	Name                     *string                     `pulumi:"name"`
}

type AuthorizerState struct {
	ApiId                    pulumi.StringPtrInput
	AuthorizerCredentialsArn pulumi.StringPtrInput
	AuthorizerType           pulumi.StringPtrInput
	AuthorizerUri            pulumi.StringPtrInput
	IdentitySources          pulumi.StringArrayInput
	JwtConfiguration         AuthorizerJwtConfigurationPtrInput
	Name                     pulumi.StringPtrInput
}

func (AuthorizerState) ElementType() reflect.Type {
	return reflect.TypeOf((*authorizerState)(nil)).Elem()
}

type authorizerArgs struct {
	ApiId                    string                      `pulumi:"apiId"`
	AuthorizerCredentialsArn *string                     `pulumi:"authorizerCredentialsArn"`
	AuthorizerType           string                      `pulumi:"authorizerType"`
	AuthorizerUri            *string                     `pulumi:"authorizerUri"`
	IdentitySources          []string                    `pulumi:"identitySources"`
	JwtConfiguration         *AuthorizerJwtConfiguration `pulumi:"jwtConfiguration"`
	Name                     *string                     `pulumi:"name"`
}

// The set of arguments for constructing a Authorizer resource.
type AuthorizerArgs struct {
	ApiId                    pulumi.StringInput
	AuthorizerCredentialsArn pulumi.StringPtrInput
	AuthorizerType           pulumi.StringInput
	AuthorizerUri            pulumi.StringPtrInput
	IdentitySources          pulumi.StringArrayInput
	JwtConfiguration         AuthorizerJwtConfigurationPtrInput
	Name                     pulumi.StringPtrInput
}

func (AuthorizerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*authorizerArgs)(nil)).Elem()
}
