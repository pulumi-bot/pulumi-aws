// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigatewayv2

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type RouteResponse struct {
	pulumi.CustomResourceState

	ApiId                    pulumi.StringOutput    `pulumi:"apiId"`
	ModelSelectionExpression pulumi.StringPtrOutput `pulumi:"modelSelectionExpression"`
	ResponseModels           pulumi.StringMapOutput `pulumi:"responseModels"`
	RouteId                  pulumi.StringOutput    `pulumi:"routeId"`
	RouteResponseKey         pulumi.StringOutput    `pulumi:"routeResponseKey"`
}

// NewRouteResponse registers a new resource with the given unique name, arguments, and options.
func NewRouteResponse(ctx *pulumi.Context,
	name string, args *RouteResponseArgs, opts ...pulumi.ResourceOption) (*RouteResponse, error) {
	if args == nil || args.ApiId == nil {
		return nil, errors.New("missing required argument 'ApiId'")
	}
	if args == nil || args.RouteId == nil {
		return nil, errors.New("missing required argument 'RouteId'")
	}
	if args == nil || args.RouteResponseKey == nil {
		return nil, errors.New("missing required argument 'RouteResponseKey'")
	}
	if args == nil {
		args = &RouteResponseArgs{}
	}
	var resource RouteResponse
	err := ctx.RegisterResource("aws:apigatewayv2/routeResponse:RouteResponse", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRouteResponse gets an existing RouteResponse resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouteResponse(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouteResponseState, opts ...pulumi.ResourceOption) (*RouteResponse, error) {
	var resource RouteResponse
	err := ctx.ReadResource("aws:apigatewayv2/routeResponse:RouteResponse", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RouteResponse resources.
type routeResponseState struct {
	ApiId                    *string           `pulumi:"apiId"`
	ModelSelectionExpression *string           `pulumi:"modelSelectionExpression"`
	ResponseModels           map[string]string `pulumi:"responseModels"`
	RouteId                  *string           `pulumi:"routeId"`
	RouteResponseKey         *string           `pulumi:"routeResponseKey"`
}

type RouteResponseState struct {
	ApiId                    pulumi.StringPtrInput
	ModelSelectionExpression pulumi.StringPtrInput
	ResponseModels           pulumi.StringMapInput
	RouteId                  pulumi.StringPtrInput
	RouteResponseKey         pulumi.StringPtrInput
}

func (RouteResponseState) ElementType() reflect.Type {
	return reflect.TypeOf((*routeResponseState)(nil)).Elem()
}

type routeResponseArgs struct {
	ApiId                    string            `pulumi:"apiId"`
	ModelSelectionExpression *string           `pulumi:"modelSelectionExpression"`
	ResponseModels           map[string]string `pulumi:"responseModels"`
	RouteId                  string            `pulumi:"routeId"`
	RouteResponseKey         string            `pulumi:"routeResponseKey"`
}

// The set of arguments for constructing a RouteResponse resource.
type RouteResponseArgs struct {
	ApiId                    pulumi.StringInput
	ModelSelectionExpression pulumi.StringPtrInput
	ResponseModels           pulumi.StringMapInput
	RouteId                  pulumi.StringInput
	RouteResponseKey         pulumi.StringInput
}

func (RouteResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routeResponseArgs)(nil)).Elem()
}
