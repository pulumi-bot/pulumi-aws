// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigatewayv2

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Model struct {
	pulumi.CustomResourceState

	ApiId       pulumi.StringOutput    `pulumi:"apiId"`
	ContentType pulumi.StringOutput    `pulumi:"contentType"`
	Description pulumi.StringPtrOutput `pulumi:"description"`
	Name        pulumi.StringOutput    `pulumi:"name"`
	Schema      pulumi.StringOutput    `pulumi:"schema"`
}

// NewModel registers a new resource with the given unique name, arguments, and options.
func NewModel(ctx *pulumi.Context,
	name string, args *ModelArgs, opts ...pulumi.ResourceOption) (*Model, error) {
	if args == nil || args.ApiId == nil {
		return nil, errors.New("missing required argument 'ApiId'")
	}
	if args == nil || args.ContentType == nil {
		return nil, errors.New("missing required argument 'ContentType'")
	}
	if args == nil || args.Schema == nil {
		return nil, errors.New("missing required argument 'Schema'")
	}
	if args == nil {
		args = &ModelArgs{}
	}
	var resource Model
	err := ctx.RegisterResource("aws:apigatewayv2/model:Model", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetModel gets an existing Model resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetModel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ModelState, opts ...pulumi.ResourceOption) (*Model, error) {
	var resource Model
	err := ctx.ReadResource("aws:apigatewayv2/model:Model", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Model resources.
type modelState struct {
	ApiId       *string `pulumi:"apiId"`
	ContentType *string `pulumi:"contentType"`
	Description *string `pulumi:"description"`
	Name        *string `pulumi:"name"`
	Schema      *string `pulumi:"schema"`
}

type ModelState struct {
	ApiId       pulumi.StringPtrInput
	ContentType pulumi.StringPtrInput
	Description pulumi.StringPtrInput
	Name        pulumi.StringPtrInput
	Schema      pulumi.StringPtrInput
}

func (ModelState) ElementType() reflect.Type {
	return reflect.TypeOf((*modelState)(nil)).Elem()
}

type modelArgs struct {
	ApiId       string  `pulumi:"apiId"`
	ContentType string  `pulumi:"contentType"`
	Description *string `pulumi:"description"`
	Name        *string `pulumi:"name"`
	Schema      string  `pulumi:"schema"`
}

// The set of arguments for constructing a Model resource.
type ModelArgs struct {
	ApiId       pulumi.StringInput
	ContentType pulumi.StringInput
	Description pulumi.StringPtrInput
	Name        pulumi.StringPtrInput
	Schema      pulumi.StringInput
}

func (ModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*modelArgs)(nil)).Elem()
}
