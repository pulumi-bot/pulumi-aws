// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ListenerRuleConditionSourceIp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ListenerRuleConditionSourceIp struct {
	// Query string pairs or values to match. Query String Value blocks documented below. Multiple `values` blocks can be specified, see example above. Maximum size of each string is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '\*' or '?' character in a query string, escape the character with a backslash (\\). Only one pair needs to match for the condition to be satisfied.
	Values []string `pulumi:"values"`
}

type ListenerRuleConditionSourceIpInput interface {
	pulumi.Input

	ToListenerRuleConditionSourceIpOutput() ListenerRuleConditionSourceIpOutput
	ToListenerRuleConditionSourceIpOutputWithContext(context.Context) ListenerRuleConditionSourceIpOutput
}

type ListenerRuleConditionSourceIpArgs struct {
	// Query string pairs or values to match. Query String Value blocks documented below. Multiple `values` blocks can be specified, see example above. Maximum size of each string is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '\*' or '?' character in a query string, escape the character with a backslash (\\). Only one pair needs to match for the condition to be satisfied.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ListenerRuleConditionSourceIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleConditionSourceIp)(nil)).Elem()
}

func (i ListenerRuleConditionSourceIpArgs) ToListenerRuleConditionSourceIpOutput() ListenerRuleConditionSourceIpOutput {
	return i.ToListenerRuleConditionSourceIpOutputWithContext(context.Background())
}

func (i ListenerRuleConditionSourceIpArgs) ToListenerRuleConditionSourceIpOutputWithContext(ctx context.Context) ListenerRuleConditionSourceIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionSourceIpOutput)
}

func (i ListenerRuleConditionSourceIpArgs) ToListenerRuleConditionSourceIpPtrOutput() ListenerRuleConditionSourceIpPtrOutput {
	return i.ToListenerRuleConditionSourceIpPtrOutputWithContext(context.Background())
}

func (i ListenerRuleConditionSourceIpArgs) ToListenerRuleConditionSourceIpPtrOutputWithContext(ctx context.Context) ListenerRuleConditionSourceIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionSourceIpOutput).ToListenerRuleConditionSourceIpPtrOutputWithContext(ctx)
}

type ListenerRuleConditionSourceIpPtrInput interface {
	pulumi.Input

	ToListenerRuleConditionSourceIpPtrOutput() ListenerRuleConditionSourceIpPtrOutput
	ToListenerRuleConditionSourceIpPtrOutputWithContext(context.Context) ListenerRuleConditionSourceIpPtrOutput
}

type listenerRuleConditionSourceIpPtrType ListenerRuleConditionSourceIpArgs

func ListenerRuleConditionSourceIpPtr(v *ListenerRuleConditionSourceIpArgs) ListenerRuleConditionSourceIpPtrInput {	return (*listenerRuleConditionSourceIpPtrType)(v)
}

func (*listenerRuleConditionSourceIpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleConditionSourceIp)(nil)).Elem()
}

func (i *listenerRuleConditionSourceIpPtrType) ToListenerRuleConditionSourceIpPtrOutput() ListenerRuleConditionSourceIpPtrOutput {
	return i.ToListenerRuleConditionSourceIpPtrOutputWithContext(context.Background())
}

func (i *listenerRuleConditionSourceIpPtrType) ToListenerRuleConditionSourceIpPtrOutputWithContext(ctx context.Context) ListenerRuleConditionSourceIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionSourceIpPtrOutput)
}

type ListenerRuleConditionSourceIpOutput struct { *pulumi.OutputState }

func (ListenerRuleConditionSourceIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleConditionSourceIp)(nil)).Elem()
}

func (o ListenerRuleConditionSourceIpOutput) ToListenerRuleConditionSourceIpOutput() ListenerRuleConditionSourceIpOutput {
	return o
}

func (o ListenerRuleConditionSourceIpOutput) ToListenerRuleConditionSourceIpOutputWithContext(ctx context.Context) ListenerRuleConditionSourceIpOutput {
	return o
}

func (o ListenerRuleConditionSourceIpOutput) ToListenerRuleConditionSourceIpPtrOutput() ListenerRuleConditionSourceIpPtrOutput {
	return o.ToListenerRuleConditionSourceIpPtrOutputWithContext(context.Background())
}

func (o ListenerRuleConditionSourceIpOutput) ToListenerRuleConditionSourceIpPtrOutputWithContext(ctx context.Context) ListenerRuleConditionSourceIpPtrOutput {
	return o.ApplyT(func(v ListenerRuleConditionSourceIp) *ListenerRuleConditionSourceIp {
		return &v
	}).(ListenerRuleConditionSourceIpPtrOutput)
}
// Query string pairs or values to match. Query String Value blocks documented below. Multiple `values` blocks can be specified, see example above. Maximum size of each string is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '\*' or '?' character in a query string, escape the character with a backslash (\\). Only one pair needs to match for the condition to be satisfied.
func (o ListenerRuleConditionSourceIpOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ListenerRuleConditionSourceIp) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ListenerRuleConditionSourceIpPtrOutput struct { *pulumi.OutputState}

func (ListenerRuleConditionSourceIpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleConditionSourceIp)(nil)).Elem()
}

func (o ListenerRuleConditionSourceIpPtrOutput) ToListenerRuleConditionSourceIpPtrOutput() ListenerRuleConditionSourceIpPtrOutput {
	return o
}

func (o ListenerRuleConditionSourceIpPtrOutput) ToListenerRuleConditionSourceIpPtrOutputWithContext(ctx context.Context) ListenerRuleConditionSourceIpPtrOutput {
	return o
}

func (o ListenerRuleConditionSourceIpPtrOutput) Elem() ListenerRuleConditionSourceIpOutput {
	return o.ApplyT(func (v *ListenerRuleConditionSourceIp) ListenerRuleConditionSourceIp { return *v }).(ListenerRuleConditionSourceIpOutput)
}

// Query string pairs or values to match. Query String Value blocks documented below. Multiple `values` blocks can be specified, see example above. Maximum size of each string is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '\*' or '?' character in a query string, escape the character with a backslash (\\). Only one pair needs to match for the condition to be satisfied.
func (o ListenerRuleConditionSourceIpPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ListenerRuleConditionSourceIp) []string { return v.Values }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListenerRuleConditionSourceIpOutput{})
	pulumi.RegisterOutputType(ListenerRuleConditionSourceIpPtrOutput{})
}
