// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package redshift

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type SnapshotSchedule struct {
	pulumi.CustomResourceState

	Arn              pulumi.StringOutput      `pulumi:"arn"`
	Definitions      pulumi.StringArrayOutput `pulumi:"definitions"`
	Description      pulumi.StringPtrOutput   `pulumi:"description"`
	ForceDestroy     pulumi.BoolPtrOutput     `pulumi:"forceDestroy"`
	Identifier       pulumi.StringOutput      `pulumi:"identifier"`
	IdentifierPrefix pulumi.StringOutput      `pulumi:"identifierPrefix"`
	Tags             pulumi.StringMapOutput   `pulumi:"tags"`
}

// NewSnapshotSchedule registers a new resource with the given unique name, arguments, and options.
func NewSnapshotSchedule(ctx *pulumi.Context,
	name string, args *SnapshotScheduleArgs, opts ...pulumi.ResourceOption) (*SnapshotSchedule, error) {
	if args == nil || args.Definitions == nil {
		return nil, errors.New("missing required argument 'Definitions'")
	}
	if args == nil {
		args = &SnapshotScheduleArgs{}
	}
	var resource SnapshotSchedule
	err := ctx.RegisterResource("aws:redshift/snapshotSchedule:SnapshotSchedule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSnapshotSchedule gets an existing SnapshotSchedule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSnapshotSchedule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SnapshotScheduleState, opts ...pulumi.ResourceOption) (*SnapshotSchedule, error) {
	var resource SnapshotSchedule
	err := ctx.ReadResource("aws:redshift/snapshotSchedule:SnapshotSchedule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SnapshotSchedule resources.
type snapshotScheduleState struct {
	Arn              *string           `pulumi:"arn"`
	Definitions      []string          `pulumi:"definitions"`
	Description      *string           `pulumi:"description"`
	ForceDestroy     *bool             `pulumi:"forceDestroy"`
	Identifier       *string           `pulumi:"identifier"`
	IdentifierPrefix *string           `pulumi:"identifierPrefix"`
	Tags             map[string]string `pulumi:"tags"`
}

type SnapshotScheduleState struct {
	Arn              pulumi.StringPtrInput
	Definitions      pulumi.StringArrayInput
	Description      pulumi.StringPtrInput
	ForceDestroy     pulumi.BoolPtrInput
	Identifier       pulumi.StringPtrInput
	IdentifierPrefix pulumi.StringPtrInput
	Tags             pulumi.StringMapInput
}

func (SnapshotScheduleState) ElementType() reflect.Type {
	return reflect.TypeOf((*snapshotScheduleState)(nil)).Elem()
}

type snapshotScheduleArgs struct {
	Definitions      []string          `pulumi:"definitions"`
	Description      *string           `pulumi:"description"`
	ForceDestroy     *bool             `pulumi:"forceDestroy"`
	Identifier       *string           `pulumi:"identifier"`
	IdentifierPrefix *string           `pulumi:"identifierPrefix"`
	Tags             map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a SnapshotSchedule resource.
type SnapshotScheduleArgs struct {
	Definitions      pulumi.StringArrayInput
	Description      pulumi.StringPtrInput
	ForceDestroy     pulumi.BoolPtrInput
	Identifier       pulumi.StringPtrInput
	IdentifierPrefix pulumi.StringPtrInput
	Tags             pulumi.StringMapInput
}

func (SnapshotScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*snapshotScheduleArgs)(nil)).Elem()
}
