// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Activation struct {
	pulumi.CustomResourceState

	ActivationCode    pulumi.StringOutput    `pulumi:"activationCode"`
	Description       pulumi.StringPtrOutput `pulumi:"description"`
	ExpirationDate    pulumi.StringOutput    `pulumi:"expirationDate"`
	Expired           pulumi.BoolOutput      `pulumi:"expired"`
	IamRole           pulumi.StringOutput    `pulumi:"iamRole"`
	Name              pulumi.StringOutput    `pulumi:"name"`
	RegistrationCount pulumi.IntOutput       `pulumi:"registrationCount"`
	RegistrationLimit pulumi.IntPtrOutput    `pulumi:"registrationLimit"`
	Tags              pulumi.StringMapOutput `pulumi:"tags"`
}

// NewActivation registers a new resource with the given unique name, arguments, and options.
func NewActivation(ctx *pulumi.Context,
	name string, args *ActivationArgs, opts ...pulumi.ResourceOption) (*Activation, error) {
	if args == nil || args.IamRole == nil {
		return nil, errors.New("missing required argument 'IamRole'")
	}
	if args == nil {
		args = &ActivationArgs{}
	}
	var resource Activation
	err := ctx.RegisterResource("aws:ssm/activation:Activation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetActivation gets an existing Activation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetActivation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ActivationState, opts ...pulumi.ResourceOption) (*Activation, error) {
	var resource Activation
	err := ctx.ReadResource("aws:ssm/activation:Activation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Activation resources.
type activationState struct {
	ActivationCode    *string           `pulumi:"activationCode"`
	Description       *string           `pulumi:"description"`
	ExpirationDate    *string           `pulumi:"expirationDate"`
	Expired           *bool             `pulumi:"expired"`
	IamRole           *string           `pulumi:"iamRole"`
	Name              *string           `pulumi:"name"`
	RegistrationCount *int              `pulumi:"registrationCount"`
	RegistrationLimit *int              `pulumi:"registrationLimit"`
	Tags              map[string]string `pulumi:"tags"`
}

type ActivationState struct {
	ActivationCode    pulumi.StringPtrInput
	Description       pulumi.StringPtrInput
	ExpirationDate    pulumi.StringPtrInput
	Expired           pulumi.BoolPtrInput
	IamRole           pulumi.StringPtrInput
	Name              pulumi.StringPtrInput
	RegistrationCount pulumi.IntPtrInput
	RegistrationLimit pulumi.IntPtrInput
	Tags              pulumi.StringMapInput
}

func (ActivationState) ElementType() reflect.Type {
	return reflect.TypeOf((*activationState)(nil)).Elem()
}

type activationArgs struct {
	Description       *string           `pulumi:"description"`
	ExpirationDate    *string           `pulumi:"expirationDate"`
	IamRole           string            `pulumi:"iamRole"`
	Name              *string           `pulumi:"name"`
	RegistrationLimit *int              `pulumi:"registrationLimit"`
	Tags              map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Activation resource.
type ActivationArgs struct {
	Description       pulumi.StringPtrInput
	ExpirationDate    pulumi.StringPtrInput
	IamRole           pulumi.StringInput
	Name              pulumi.StringPtrInput
	RegistrationLimit pulumi.IntPtrInput
	Tags              pulumi.StringMapInput
}

func (ActivationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*activationArgs)(nil)).Elem()
}
