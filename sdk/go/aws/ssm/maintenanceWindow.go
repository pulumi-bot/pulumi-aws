// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type MaintenanceWindow struct {
	pulumi.CustomResourceState

	AllowUnassociatedTargets pulumi.BoolPtrOutput   `pulumi:"allowUnassociatedTargets"`
	Cutoff                   pulumi.IntOutput       `pulumi:"cutoff"`
	Description              pulumi.StringPtrOutput `pulumi:"description"`
	Duration                 pulumi.IntOutput       `pulumi:"duration"`
	Enabled                  pulumi.BoolPtrOutput   `pulumi:"enabled"`
	EndDate                  pulumi.StringPtrOutput `pulumi:"endDate"`
	Name                     pulumi.StringOutput    `pulumi:"name"`
	Schedule                 pulumi.StringOutput    `pulumi:"schedule"`
	ScheduleTimezone         pulumi.StringPtrOutput `pulumi:"scheduleTimezone"`
	StartDate                pulumi.StringPtrOutput `pulumi:"startDate"`
	Tags                     pulumi.StringMapOutput `pulumi:"tags"`
}

// NewMaintenanceWindow registers a new resource with the given unique name, arguments, and options.
func NewMaintenanceWindow(ctx *pulumi.Context,
	name string, args *MaintenanceWindowArgs, opts ...pulumi.ResourceOption) (*MaintenanceWindow, error) {
	if args == nil || args.Cutoff == nil {
		return nil, errors.New("missing required argument 'Cutoff'")
	}
	if args == nil || args.Duration == nil {
		return nil, errors.New("missing required argument 'Duration'")
	}
	if args == nil || args.Schedule == nil {
		return nil, errors.New("missing required argument 'Schedule'")
	}
	if args == nil {
		args = &MaintenanceWindowArgs{}
	}
	var resource MaintenanceWindow
	err := ctx.RegisterResource("aws:ssm/maintenanceWindow:MaintenanceWindow", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMaintenanceWindow gets an existing MaintenanceWindow resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMaintenanceWindow(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MaintenanceWindowState, opts ...pulumi.ResourceOption) (*MaintenanceWindow, error) {
	var resource MaintenanceWindow
	err := ctx.ReadResource("aws:ssm/maintenanceWindow:MaintenanceWindow", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MaintenanceWindow resources.
type maintenanceWindowState struct {
	AllowUnassociatedTargets *bool             `pulumi:"allowUnassociatedTargets"`
	Cutoff                   *int              `pulumi:"cutoff"`
	Description              *string           `pulumi:"description"`
	Duration                 *int              `pulumi:"duration"`
	Enabled                  *bool             `pulumi:"enabled"`
	EndDate                  *string           `pulumi:"endDate"`
	Name                     *string           `pulumi:"name"`
	Schedule                 *string           `pulumi:"schedule"`
	ScheduleTimezone         *string           `pulumi:"scheduleTimezone"`
	StartDate                *string           `pulumi:"startDate"`
	Tags                     map[string]string `pulumi:"tags"`
}

type MaintenanceWindowState struct {
	AllowUnassociatedTargets pulumi.BoolPtrInput
	Cutoff                   pulumi.IntPtrInput
	Description              pulumi.StringPtrInput
	Duration                 pulumi.IntPtrInput
	Enabled                  pulumi.BoolPtrInput
	EndDate                  pulumi.StringPtrInput
	Name                     pulumi.StringPtrInput
	Schedule                 pulumi.StringPtrInput
	ScheduleTimezone         pulumi.StringPtrInput
	StartDate                pulumi.StringPtrInput
	Tags                     pulumi.StringMapInput
}

func (MaintenanceWindowState) ElementType() reflect.Type {
	return reflect.TypeOf((*maintenanceWindowState)(nil)).Elem()
}

type maintenanceWindowArgs struct {
	AllowUnassociatedTargets *bool             `pulumi:"allowUnassociatedTargets"`
	Cutoff                   int               `pulumi:"cutoff"`
	Description              *string           `pulumi:"description"`
	Duration                 int               `pulumi:"duration"`
	Enabled                  *bool             `pulumi:"enabled"`
	EndDate                  *string           `pulumi:"endDate"`
	Name                     *string           `pulumi:"name"`
	Schedule                 string            `pulumi:"schedule"`
	ScheduleTimezone         *string           `pulumi:"scheduleTimezone"`
	StartDate                *string           `pulumi:"startDate"`
	Tags                     map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a MaintenanceWindow resource.
type MaintenanceWindowArgs struct {
	AllowUnassociatedTargets pulumi.BoolPtrInput
	Cutoff                   pulumi.IntInput
	Description              pulumi.StringPtrInput
	Duration                 pulumi.IntInput
	Enabled                  pulumi.BoolPtrInput
	EndDate                  pulumi.StringPtrInput
	Name                     pulumi.StringPtrInput
	Schedule                 pulumi.StringInput
	ScheduleTimezone         pulumi.StringPtrInput
	StartDate                pulumi.StringPtrInput
	Tags                     pulumi.StringMapInput
}

func (MaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*maintenanceWindowArgs)(nil)).Elem()
}
