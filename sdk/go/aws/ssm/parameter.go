// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Parameter struct {
	pulumi.CustomResourceState

	AllowedPattern pulumi.StringPtrOutput `pulumi:"allowedPattern"`
	Arn            pulumi.StringOutput    `pulumi:"arn"`
	DataType       pulumi.StringOutput    `pulumi:"dataType"`
	Description    pulumi.StringPtrOutput `pulumi:"description"`
	KeyId          pulumi.StringOutput    `pulumi:"keyId"`
	Name           pulumi.StringOutput    `pulumi:"name"`
	Overwrite      pulumi.BoolPtrOutput   `pulumi:"overwrite"`
	Tags           pulumi.StringMapOutput `pulumi:"tags"`
	Tier           pulumi.StringPtrOutput `pulumi:"tier"`
	Type           pulumi.StringOutput    `pulumi:"type"`
	Value          pulumi.StringOutput    `pulumi:"value"`
	Version        pulumi.IntOutput       `pulumi:"version"`
}

// NewParameter registers a new resource with the given unique name, arguments, and options.
func NewParameter(ctx *pulumi.Context,
	name string, args *ParameterArgs, opts ...pulumi.ResourceOption) (*Parameter, error) {
	if args == nil || args.Type == nil {
		return nil, errors.New("missing required argument 'Type'")
	}
	if args == nil || args.Value == nil {
		return nil, errors.New("missing required argument 'Value'")
	}
	if args == nil {
		args = &ParameterArgs{}
	}
	var resource Parameter
	err := ctx.RegisterResource("aws:ssm/parameter:Parameter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetParameter gets an existing Parameter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetParameter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ParameterState, opts ...pulumi.ResourceOption) (*Parameter, error) {
	var resource Parameter
	err := ctx.ReadResource("aws:ssm/parameter:Parameter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Parameter resources.
type parameterState struct {
	AllowedPattern *string           `pulumi:"allowedPattern"`
	Arn            *string           `pulumi:"arn"`
	DataType       *string           `pulumi:"dataType"`
	Description    *string           `pulumi:"description"`
	KeyId          *string           `pulumi:"keyId"`
	Name           *string           `pulumi:"name"`
	Overwrite      *bool             `pulumi:"overwrite"`
	Tags           map[string]string `pulumi:"tags"`
	Tier           *string           `pulumi:"tier"`
	Type           *string           `pulumi:"type"`
	Value          *string           `pulumi:"value"`
	Version        *int              `pulumi:"version"`
}

type ParameterState struct {
	AllowedPattern pulumi.StringPtrInput
	Arn            pulumi.StringPtrInput
	DataType       pulumi.StringPtrInput
	Description    pulumi.StringPtrInput
	KeyId          pulumi.StringPtrInput
	Name           pulumi.StringPtrInput
	Overwrite      pulumi.BoolPtrInput
	Tags           pulumi.StringMapInput
	Tier           pulumi.StringPtrInput
	Type           pulumi.StringPtrInput
	Value          pulumi.StringPtrInput
	Version        pulumi.IntPtrInput
}

func (ParameterState) ElementType() reflect.Type {
	return reflect.TypeOf((*parameterState)(nil)).Elem()
}

type parameterArgs struct {
	AllowedPattern *string           `pulumi:"allowedPattern"`
	Arn            *string           `pulumi:"arn"`
	DataType       *string           `pulumi:"dataType"`
	Description    *string           `pulumi:"description"`
	KeyId          *string           `pulumi:"keyId"`
	Name           *string           `pulumi:"name"`
	Overwrite      *bool             `pulumi:"overwrite"`
	Tags           map[string]string `pulumi:"tags"`
	Tier           *string           `pulumi:"tier"`
	Type           string            `pulumi:"type"`
	Value          string            `pulumi:"value"`
}

// The set of arguments for constructing a Parameter resource.
type ParameterArgs struct {
	AllowedPattern pulumi.StringPtrInput
	Arn            pulumi.StringPtrInput
	DataType       pulumi.StringPtrInput
	Description    pulumi.StringPtrInput
	KeyId          pulumi.StringPtrInput
	Name           pulumi.StringPtrInput
	Overwrite      pulumi.BoolPtrInput
	Tags           pulumi.StringMapInput
	Tier           pulumi.StringPtrInput
	Type           pulumi.StringInput
	Value          pulumi.StringInput
}

func (ParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*parameterArgs)(nil)).Elem()
}
