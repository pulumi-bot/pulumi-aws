// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type MaintenanceWindowTask struct {
	pulumi.CustomResourceState

	Description              pulumi.StringPtrOutput                                 `pulumi:"description"`
	MaxConcurrency           pulumi.StringOutput                                    `pulumi:"maxConcurrency"`
	MaxErrors                pulumi.StringOutput                                    `pulumi:"maxErrors"`
	Name                     pulumi.StringOutput                                    `pulumi:"name"`
	Priority                 pulumi.IntPtrOutput                                    `pulumi:"priority"`
	ServiceRoleArn           pulumi.StringOutput                                    `pulumi:"serviceRoleArn"`
	Targets                  MaintenanceWindowTaskTargetArrayOutput                 `pulumi:"targets"`
	TaskArn                  pulumi.StringOutput                                    `pulumi:"taskArn"`
	TaskInvocationParameters MaintenanceWindowTaskTaskInvocationParametersPtrOutput `pulumi:"taskInvocationParameters"`
	TaskType                 pulumi.StringOutput                                    `pulumi:"taskType"`
	WindowId                 pulumi.StringOutput                                    `pulumi:"windowId"`
}

// NewMaintenanceWindowTask registers a new resource with the given unique name, arguments, and options.
func NewMaintenanceWindowTask(ctx *pulumi.Context,
	name string, args *MaintenanceWindowTaskArgs, opts ...pulumi.ResourceOption) (*MaintenanceWindowTask, error) {
	if args == nil || args.MaxConcurrency == nil {
		return nil, errors.New("missing required argument 'MaxConcurrency'")
	}
	if args == nil || args.MaxErrors == nil {
		return nil, errors.New("missing required argument 'MaxErrors'")
	}
	if args == nil || args.ServiceRoleArn == nil {
		return nil, errors.New("missing required argument 'ServiceRoleArn'")
	}
	if args == nil || args.Targets == nil {
		return nil, errors.New("missing required argument 'Targets'")
	}
	if args == nil || args.TaskArn == nil {
		return nil, errors.New("missing required argument 'TaskArn'")
	}
	if args == nil || args.TaskType == nil {
		return nil, errors.New("missing required argument 'TaskType'")
	}
	if args == nil || args.WindowId == nil {
		return nil, errors.New("missing required argument 'WindowId'")
	}
	if args == nil {
		args = &MaintenanceWindowTaskArgs{}
	}
	var resource MaintenanceWindowTask
	err := ctx.RegisterResource("aws:ssm/maintenanceWindowTask:MaintenanceWindowTask", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMaintenanceWindowTask gets an existing MaintenanceWindowTask resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMaintenanceWindowTask(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MaintenanceWindowTaskState, opts ...pulumi.ResourceOption) (*MaintenanceWindowTask, error) {
	var resource MaintenanceWindowTask
	err := ctx.ReadResource("aws:ssm/maintenanceWindowTask:MaintenanceWindowTask", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MaintenanceWindowTask resources.
type maintenanceWindowTaskState struct {
	Description              *string                                        `pulumi:"description"`
	MaxConcurrency           *string                                        `pulumi:"maxConcurrency"`
	MaxErrors                *string                                        `pulumi:"maxErrors"`
	Name                     *string                                        `pulumi:"name"`
	Priority                 *int                                           `pulumi:"priority"`
	ServiceRoleArn           *string                                        `pulumi:"serviceRoleArn"`
	Targets                  []MaintenanceWindowTaskTarget                  `pulumi:"targets"`
	TaskArn                  *string                                        `pulumi:"taskArn"`
	TaskInvocationParameters *MaintenanceWindowTaskTaskInvocationParameters `pulumi:"taskInvocationParameters"`
	TaskType                 *string                                        `pulumi:"taskType"`
	WindowId                 *string                                        `pulumi:"windowId"`
}

type MaintenanceWindowTaskState struct {
	Description              pulumi.StringPtrInput
	MaxConcurrency           pulumi.StringPtrInput
	MaxErrors                pulumi.StringPtrInput
	Name                     pulumi.StringPtrInput
	Priority                 pulumi.IntPtrInput
	ServiceRoleArn           pulumi.StringPtrInput
	Targets                  MaintenanceWindowTaskTargetArrayInput
	TaskArn                  pulumi.StringPtrInput
	TaskInvocationParameters MaintenanceWindowTaskTaskInvocationParametersPtrInput
	TaskType                 pulumi.StringPtrInput
	WindowId                 pulumi.StringPtrInput
}

func (MaintenanceWindowTaskState) ElementType() reflect.Type {
	return reflect.TypeOf((*maintenanceWindowTaskState)(nil)).Elem()
}

type maintenanceWindowTaskArgs struct {
	Description              *string                                        `pulumi:"description"`
	MaxConcurrency           string                                         `pulumi:"maxConcurrency"`
	MaxErrors                string                                         `pulumi:"maxErrors"`
	Name                     *string                                        `pulumi:"name"`
	Priority                 *int                                           `pulumi:"priority"`
	ServiceRoleArn           string                                         `pulumi:"serviceRoleArn"`
	Targets                  []MaintenanceWindowTaskTarget                  `pulumi:"targets"`
	TaskArn                  string                                         `pulumi:"taskArn"`
	TaskInvocationParameters *MaintenanceWindowTaskTaskInvocationParameters `pulumi:"taskInvocationParameters"`
	TaskType                 string                                         `pulumi:"taskType"`
	WindowId                 string                                         `pulumi:"windowId"`
}

// The set of arguments for constructing a MaintenanceWindowTask resource.
type MaintenanceWindowTaskArgs struct {
	Description              pulumi.StringPtrInput
	MaxConcurrency           pulumi.StringInput
	MaxErrors                pulumi.StringInput
	Name                     pulumi.StringPtrInput
	Priority                 pulumi.IntPtrInput
	ServiceRoleArn           pulumi.StringInput
	Targets                  MaintenanceWindowTaskTargetArrayInput
	TaskArn                  pulumi.StringInput
	TaskInvocationParameters MaintenanceWindowTaskTaskInvocationParametersPtrInput
	TaskType                 pulumi.StringInput
	WindowId                 pulumi.StringInput
}

func (MaintenanceWindowTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*maintenanceWindowTaskArgs)(nil)).Elem()
}
