// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ssm

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Association struct {
	pulumi.CustomResourceState

	AssociationId                 pulumi.StringOutput                `pulumi:"associationId"`
	AssociationName               pulumi.StringPtrOutput             `pulumi:"associationName"`
	AutomationTargetParameterName pulumi.StringPtrOutput             `pulumi:"automationTargetParameterName"`
	ComplianceSeverity            pulumi.StringPtrOutput             `pulumi:"complianceSeverity"`
	DocumentVersion               pulumi.StringOutput                `pulumi:"documentVersion"`
	InstanceId                    pulumi.StringPtrOutput             `pulumi:"instanceId"`
	MaxConcurrency                pulumi.StringPtrOutput             `pulumi:"maxConcurrency"`
	MaxErrors                     pulumi.StringPtrOutput             `pulumi:"maxErrors"`
	Name                          pulumi.StringOutput                `pulumi:"name"`
	OutputLocation                AssociationOutputLocationPtrOutput `pulumi:"outputLocation"`
	Parameters                    pulumi.StringMapOutput             `pulumi:"parameters"`
	ScheduleExpression            pulumi.StringPtrOutput             `pulumi:"scheduleExpression"`
	Targets                       AssociationTargetArrayOutput       `pulumi:"targets"`
}

// NewAssociation registers a new resource with the given unique name, arguments, and options.
func NewAssociation(ctx *pulumi.Context,
	name string, args *AssociationArgs, opts ...pulumi.ResourceOption) (*Association, error) {
	if args == nil {
		args = &AssociationArgs{}
	}
	var resource Association
	err := ctx.RegisterResource("aws:ssm/association:Association", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAssociation gets an existing Association resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AssociationState, opts ...pulumi.ResourceOption) (*Association, error) {
	var resource Association
	err := ctx.ReadResource("aws:ssm/association:Association", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Association resources.
type associationState struct {
	AssociationId                 *string                    `pulumi:"associationId"`
	AssociationName               *string                    `pulumi:"associationName"`
	AutomationTargetParameterName *string                    `pulumi:"automationTargetParameterName"`
	ComplianceSeverity            *string                    `pulumi:"complianceSeverity"`
	DocumentVersion               *string                    `pulumi:"documentVersion"`
	InstanceId                    *string                    `pulumi:"instanceId"`
	MaxConcurrency                *string                    `pulumi:"maxConcurrency"`
	MaxErrors                     *string                    `pulumi:"maxErrors"`
	Name                          *string                    `pulumi:"name"`
	OutputLocation                *AssociationOutputLocation `pulumi:"outputLocation"`
	Parameters                    map[string]string          `pulumi:"parameters"`
	ScheduleExpression            *string                    `pulumi:"scheduleExpression"`
	Targets                       []AssociationTarget        `pulumi:"targets"`
}

type AssociationState struct {
	AssociationId                 pulumi.StringPtrInput
	AssociationName               pulumi.StringPtrInput
	AutomationTargetParameterName pulumi.StringPtrInput
	ComplianceSeverity            pulumi.StringPtrInput
	DocumentVersion               pulumi.StringPtrInput
	InstanceId                    pulumi.StringPtrInput
	MaxConcurrency                pulumi.StringPtrInput
	MaxErrors                     pulumi.StringPtrInput
	Name                          pulumi.StringPtrInput
	OutputLocation                AssociationOutputLocationPtrInput
	Parameters                    pulumi.StringMapInput
	ScheduleExpression            pulumi.StringPtrInput
	Targets                       AssociationTargetArrayInput
}

func (AssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*associationState)(nil)).Elem()
}

type associationArgs struct {
	AssociationName               *string                    `pulumi:"associationName"`
	AutomationTargetParameterName *string                    `pulumi:"automationTargetParameterName"`
	ComplianceSeverity            *string                    `pulumi:"complianceSeverity"`
	DocumentVersion               *string                    `pulumi:"documentVersion"`
	InstanceId                    *string                    `pulumi:"instanceId"`
	MaxConcurrency                *string                    `pulumi:"maxConcurrency"`
	MaxErrors                     *string                    `pulumi:"maxErrors"`
	Name                          *string                    `pulumi:"name"`
	OutputLocation                *AssociationOutputLocation `pulumi:"outputLocation"`
	Parameters                    map[string]string          `pulumi:"parameters"`
	ScheduleExpression            *string                    `pulumi:"scheduleExpression"`
	Targets                       []AssociationTarget        `pulumi:"targets"`
}

// The set of arguments for constructing a Association resource.
type AssociationArgs struct {
	AssociationName               pulumi.StringPtrInput
	AutomationTargetParameterName pulumi.StringPtrInput
	ComplianceSeverity            pulumi.StringPtrInput
	DocumentVersion               pulumi.StringPtrInput
	InstanceId                    pulumi.StringPtrInput
	MaxConcurrency                pulumi.StringPtrInput
	MaxErrors                     pulumi.StringPtrInput
	Name                          pulumi.StringPtrInput
	OutputLocation                AssociationOutputLocationPtrInput
	Parameters                    pulumi.StringMapInput
	ScheduleExpression            pulumi.StringPtrInput
	Targets                       AssociationTargetArrayInput
}

func (AssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*associationArgs)(nil)).Elem()
}
