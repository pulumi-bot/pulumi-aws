// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package signer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information about a Signer Signing Profile.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/signer"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := signer.LookupSigningProfile(ctx, &signer.LookupSigningProfileArgs{
// 			Name: "prod_profile_DdW3Mk1foYL88fajut4mTVFGpuwfd4ACO6ANL0D1uIj7lrn8adK",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupSigningProfile(ctx *pulumi.Context, args *LookupSigningProfileArgs, opts ...pulumi.InvokeOption) (*LookupSigningProfileResult, error) {
	var rv LookupSigningProfileResult
	err := ctx.Invoke("aws:signer/getSigningProfile:getSigningProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSigningProfile.
type LookupSigningProfileArgs struct {
	// The name of the target signing profile.
	Name string `pulumi:"name"`
	// A list of tags associated with the signing profile.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getSigningProfile.
type LookupSigningProfileResult struct {
	// The Amazon Resource Name (ARN) for the signing profile.
	Arn string `pulumi:"arn"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
	// A human-readable name for the signing platform associated with the signing profile.
	PlatformDisplayName string `pulumi:"platformDisplayName"`
	// The ID of the platform that is used by the target signing profile.
	PlatformId string `pulumi:"platformId"`
	// Revocation information for a signing profile.
	RevocationRecords []GetSigningProfileRevocationRecord `pulumi:"revocationRecords"`
	// The validity period for a signing job.
	SignatureValidityPeriods []GetSigningProfileSignatureValidityPeriod `pulumi:"signatureValidityPeriods"`
	// The status of the target signing profile.
	Status string `pulumi:"status"`
	// A list of tags associated with the signing profile.
	Tags map[string]string `pulumi:"tags"`
	// The current version of the signing profile.
	Version string `pulumi:"version"`
	// The signing profile ARN, including the profile version.
	VersionArn string `pulumi:"versionArn"`
}

func LookupSigningProfileApply(ctx *pulumi.Context, args LookupSigningProfileApplyInput, opts ...pulumi.InvokeOption) LookupSigningProfileResultOutput {
	return args.ToLookupSigningProfileApplyOutput().ApplyT(func(v LookupSigningProfileArgs) (LookupSigningProfileResult, error) {
		r, err := LookupSigningProfile(ctx, &v, opts...)
		return *r, err

	}).(LookupSigningProfileResultOutput)
}

// LookupSigningProfileApplyInput is an input type that accepts LookupSigningProfileApplyArgs and LookupSigningProfileApplyOutput values.
// You can construct a concrete instance of `LookupSigningProfileApplyInput` via:
//
//          LookupSigningProfileApplyArgs{...}
type LookupSigningProfileApplyInput interface {
	pulumi.Input

	ToLookupSigningProfileApplyOutput() LookupSigningProfileApplyOutput
	ToLookupSigningProfileApplyOutputWithContext(context.Context) LookupSigningProfileApplyOutput
}

// A collection of arguments for invoking getSigningProfile.
type LookupSigningProfileApplyArgs struct {
	// The name of the target signing profile.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of tags associated with the signing profile.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupSigningProfileApplyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSigningProfileArgs)(nil)).Elem()
}

func (i LookupSigningProfileApplyArgs) ToLookupSigningProfileApplyOutput() LookupSigningProfileApplyOutput {
	return i.ToLookupSigningProfileApplyOutputWithContext(context.Background())
}

func (i LookupSigningProfileApplyArgs) ToLookupSigningProfileApplyOutputWithContext(ctx context.Context) LookupSigningProfileApplyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupSigningProfileApplyOutput)
}

// A collection of arguments for invoking getSigningProfile.
type LookupSigningProfileApplyOutput struct{ *pulumi.OutputState }

func (LookupSigningProfileApplyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSigningProfileArgs)(nil)).Elem()
}

func (o LookupSigningProfileApplyOutput) ToLookupSigningProfileApplyOutput() LookupSigningProfileApplyOutput {
	return o
}

func (o LookupSigningProfileApplyOutput) ToLookupSigningProfileApplyOutputWithContext(ctx context.Context) LookupSigningProfileApplyOutput {
	return o
}

// The name of the target signing profile.
func (o LookupSigningProfileApplyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSigningProfileArgs) string { return v.Name }).(pulumi.StringOutput)
}

// A list of tags associated with the signing profile.
func (o LookupSigningProfileApplyOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSigningProfileArgs) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// A collection of values returned by getSigningProfile.
type LookupSigningProfileResultOutput struct{ *pulumi.OutputState }

func (LookupSigningProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSigningProfileResult)(nil)).Elem()
}

func (o LookupSigningProfileResultOutput) ToLookupSigningProfileResultOutput() LookupSigningProfileResultOutput {
	return o
}

func (o LookupSigningProfileResultOutput) ToLookupSigningProfileResultOutputWithContext(ctx context.Context) LookupSigningProfileResultOutput {
	return o
}

// The Amazon Resource Name (ARN) for the signing profile.
func (o LookupSigningProfileResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSigningProfileResult) string { return v.Arn }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSigningProfileResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSigningProfileResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSigningProfileResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSigningProfileResult) string { return v.Name }).(pulumi.StringOutput)
}

// A human-readable name for the signing platform associated with the signing profile.
func (o LookupSigningProfileResultOutput) PlatformDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSigningProfileResult) string { return v.PlatformDisplayName }).(pulumi.StringOutput)
}

// The ID of the platform that is used by the target signing profile.
func (o LookupSigningProfileResultOutput) PlatformId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSigningProfileResult) string { return v.PlatformId }).(pulumi.StringOutput)
}

// Revocation information for a signing profile.
func (o LookupSigningProfileResultOutput) RevocationRecords() GetSigningProfileRevocationRecordArrayOutput {
	return o.ApplyT(func(v LookupSigningProfileResult) []GetSigningProfileRevocationRecord { return v.RevocationRecords }).(GetSigningProfileRevocationRecordArrayOutput)
}

// The validity period for a signing job.
func (o LookupSigningProfileResultOutput) SignatureValidityPeriods() GetSigningProfileSignatureValidityPeriodArrayOutput {
	return o.ApplyT(func(v LookupSigningProfileResult) []GetSigningProfileSignatureValidityPeriod {
		return v.SignatureValidityPeriods
	}).(GetSigningProfileSignatureValidityPeriodArrayOutput)
}

// The status of the target signing profile.
func (o LookupSigningProfileResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSigningProfileResult) string { return v.Status }).(pulumi.StringOutput)
}

// A list of tags associated with the signing profile.
func (o LookupSigningProfileResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSigningProfileResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The current version of the signing profile.
func (o LookupSigningProfileResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSigningProfileResult) string { return v.Version }).(pulumi.StringOutput)
}

// The signing profile ARN, including the profile version.
func (o LookupSigningProfileResultOutput) VersionArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSigningProfileResult) string { return v.VersionArn }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSigningProfileApplyOutput{})
	pulumi.RegisterOutputType(LookupSigningProfileResultOutput{})
}
