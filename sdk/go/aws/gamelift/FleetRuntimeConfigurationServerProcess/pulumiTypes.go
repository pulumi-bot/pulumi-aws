// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package FleetRuntimeConfigurationServerProcess

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type FleetRuntimeConfigurationServerProcess struct {
	// Number of server processes using this configuration to run concurrently on an instance.
	ConcurrentExecutions int `pulumi:"concurrentExecutions"`
	// Location of the server executable in a game build. All game builds are installed on instances at the root : for Windows instances `C:\game`, and for Linux instances `/local/game`.
	LaunchPath string `pulumi:"launchPath"`
	// Optional list of parameters to pass to the server executable on launch.
	Parameters *string `pulumi:"parameters"`
}

type FleetRuntimeConfigurationServerProcessInput interface {
	pulumi.Input

	ToFleetRuntimeConfigurationServerProcessOutput() FleetRuntimeConfigurationServerProcessOutput
	ToFleetRuntimeConfigurationServerProcessOutputWithContext(context.Context) FleetRuntimeConfigurationServerProcessOutput
}

type FleetRuntimeConfigurationServerProcessArgs struct {
	// Number of server processes using this configuration to run concurrently on an instance.
	ConcurrentExecutions pulumi.IntInput `pulumi:"concurrentExecutions"`
	// Location of the server executable in a game build. All game builds are installed on instances at the root : for Windows instances `C:\game`, and for Linux instances `/local/game`.
	LaunchPath pulumi.StringInput `pulumi:"launchPath"`
	// Optional list of parameters to pass to the server executable on launch.
	Parameters pulumi.StringPtrInput `pulumi:"parameters"`
}

func (FleetRuntimeConfigurationServerProcessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetRuntimeConfigurationServerProcess)(nil)).Elem()
}

func (i FleetRuntimeConfigurationServerProcessArgs) ToFleetRuntimeConfigurationServerProcessOutput() FleetRuntimeConfigurationServerProcessOutput {
	return i.ToFleetRuntimeConfigurationServerProcessOutputWithContext(context.Background())
}

func (i FleetRuntimeConfigurationServerProcessArgs) ToFleetRuntimeConfigurationServerProcessOutputWithContext(ctx context.Context) FleetRuntimeConfigurationServerProcessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetRuntimeConfigurationServerProcessOutput)
}

type FleetRuntimeConfigurationServerProcessArrayInput interface {
	pulumi.Input

	ToFleetRuntimeConfigurationServerProcessArrayOutput() FleetRuntimeConfigurationServerProcessArrayOutput
	ToFleetRuntimeConfigurationServerProcessArrayOutputWithContext(context.Context) FleetRuntimeConfigurationServerProcessArrayOutput
}

type FleetRuntimeConfigurationServerProcessArray []FleetRuntimeConfigurationServerProcessInput

func (FleetRuntimeConfigurationServerProcessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FleetRuntimeConfigurationServerProcess)(nil)).Elem()
}

func (i FleetRuntimeConfigurationServerProcessArray) ToFleetRuntimeConfigurationServerProcessArrayOutput() FleetRuntimeConfigurationServerProcessArrayOutput {
	return i.ToFleetRuntimeConfigurationServerProcessArrayOutputWithContext(context.Background())
}

func (i FleetRuntimeConfigurationServerProcessArray) ToFleetRuntimeConfigurationServerProcessArrayOutputWithContext(ctx context.Context) FleetRuntimeConfigurationServerProcessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetRuntimeConfigurationServerProcessArrayOutput)
}

type FleetRuntimeConfigurationServerProcessOutput struct { *pulumi.OutputState }

func (FleetRuntimeConfigurationServerProcessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetRuntimeConfigurationServerProcess)(nil)).Elem()
}

func (o FleetRuntimeConfigurationServerProcessOutput) ToFleetRuntimeConfigurationServerProcessOutput() FleetRuntimeConfigurationServerProcessOutput {
	return o
}

func (o FleetRuntimeConfigurationServerProcessOutput) ToFleetRuntimeConfigurationServerProcessOutputWithContext(ctx context.Context) FleetRuntimeConfigurationServerProcessOutput {
	return o
}

// Number of server processes using this configuration to run concurrently on an instance.
func (o FleetRuntimeConfigurationServerProcessOutput) ConcurrentExecutions() pulumi.IntOutput {
	return o.ApplyT(func (v FleetRuntimeConfigurationServerProcess) int { return v.ConcurrentExecutions }).(pulumi.IntOutput)
}

// Location of the server executable in a game build. All game builds are installed on instances at the root : for Windows instances `C:\game`, and for Linux instances `/local/game`.
func (o FleetRuntimeConfigurationServerProcessOutput) LaunchPath() pulumi.StringOutput {
	return o.ApplyT(func (v FleetRuntimeConfigurationServerProcess) string { return v.LaunchPath }).(pulumi.StringOutput)
}

// Optional list of parameters to pass to the server executable on launch.
func (o FleetRuntimeConfigurationServerProcessOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func (v FleetRuntimeConfigurationServerProcess) *string { return v.Parameters }).(pulumi.StringPtrOutput)
}

type FleetRuntimeConfigurationServerProcessArrayOutput struct { *pulumi.OutputState}

func (FleetRuntimeConfigurationServerProcessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FleetRuntimeConfigurationServerProcess)(nil)).Elem()
}

func (o FleetRuntimeConfigurationServerProcessArrayOutput) ToFleetRuntimeConfigurationServerProcessArrayOutput() FleetRuntimeConfigurationServerProcessArrayOutput {
	return o
}

func (o FleetRuntimeConfigurationServerProcessArrayOutput) ToFleetRuntimeConfigurationServerProcessArrayOutputWithContext(ctx context.Context) FleetRuntimeConfigurationServerProcessArrayOutput {
	return o
}

func (o FleetRuntimeConfigurationServerProcessArrayOutput) Index(i pulumi.IntInput) FleetRuntimeConfigurationServerProcessOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) FleetRuntimeConfigurationServerProcess {
		return vs[0].([]FleetRuntimeConfigurationServerProcess)[vs[1].(int)]
	}).(FleetRuntimeConfigurationServerProcessOutput)
}

func init() {
	pulumi.RegisterOutputType(FleetRuntimeConfigurationServerProcessOutput{})
	pulumi.RegisterOutputType(FleetRuntimeConfigurationServerProcessArrayOutput{})
}
