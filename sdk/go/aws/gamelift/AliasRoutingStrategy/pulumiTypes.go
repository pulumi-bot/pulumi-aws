// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package AliasRoutingStrategy

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type AliasRoutingStrategy struct {
	// ID of the Gamelift Fleet to point the alias to.
	FleetId *string `pulumi:"fleetId"`
	// Message text to be used with the `TERMINAL` routing strategy.
	Message *string `pulumi:"message"`
	// Type of routing strategy. e.g. `SIMPLE` or `TERMINAL`
	Type string `pulumi:"type"`
}

type AliasRoutingStrategyInput interface {
	pulumi.Input

	ToAliasRoutingStrategyOutput() AliasRoutingStrategyOutput
	ToAliasRoutingStrategyOutputWithContext(context.Context) AliasRoutingStrategyOutput
}

type AliasRoutingStrategyArgs struct {
	// ID of the Gamelift Fleet to point the alias to.
	FleetId pulumi.StringPtrInput `pulumi:"fleetId"`
	// Message text to be used with the `TERMINAL` routing strategy.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Type of routing strategy. e.g. `SIMPLE` or `TERMINAL`
	Type pulumi.StringInput `pulumi:"type"`
}

func (AliasRoutingStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AliasRoutingStrategy)(nil)).Elem()
}

func (i AliasRoutingStrategyArgs) ToAliasRoutingStrategyOutput() AliasRoutingStrategyOutput {
	return i.ToAliasRoutingStrategyOutputWithContext(context.Background())
}

func (i AliasRoutingStrategyArgs) ToAliasRoutingStrategyOutputWithContext(ctx context.Context) AliasRoutingStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AliasRoutingStrategyOutput)
}

func (i AliasRoutingStrategyArgs) ToAliasRoutingStrategyPtrOutput() AliasRoutingStrategyPtrOutput {
	return i.ToAliasRoutingStrategyPtrOutputWithContext(context.Background())
}

func (i AliasRoutingStrategyArgs) ToAliasRoutingStrategyPtrOutputWithContext(ctx context.Context) AliasRoutingStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AliasRoutingStrategyOutput).ToAliasRoutingStrategyPtrOutputWithContext(ctx)
}

type AliasRoutingStrategyPtrInput interface {
	pulumi.Input

	ToAliasRoutingStrategyPtrOutput() AliasRoutingStrategyPtrOutput
	ToAliasRoutingStrategyPtrOutputWithContext(context.Context) AliasRoutingStrategyPtrOutput
}

type aliasRoutingStrategyPtrType AliasRoutingStrategyArgs

func AliasRoutingStrategyPtr(v *AliasRoutingStrategyArgs) AliasRoutingStrategyPtrInput {	return (*aliasRoutingStrategyPtrType)(v)
}

func (*aliasRoutingStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AliasRoutingStrategy)(nil)).Elem()
}

func (i *aliasRoutingStrategyPtrType) ToAliasRoutingStrategyPtrOutput() AliasRoutingStrategyPtrOutput {
	return i.ToAliasRoutingStrategyPtrOutputWithContext(context.Background())
}

func (i *aliasRoutingStrategyPtrType) ToAliasRoutingStrategyPtrOutputWithContext(ctx context.Context) AliasRoutingStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AliasRoutingStrategyPtrOutput)
}

type AliasRoutingStrategyOutput struct { *pulumi.OutputState }

func (AliasRoutingStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AliasRoutingStrategy)(nil)).Elem()
}

func (o AliasRoutingStrategyOutput) ToAliasRoutingStrategyOutput() AliasRoutingStrategyOutput {
	return o
}

func (o AliasRoutingStrategyOutput) ToAliasRoutingStrategyOutputWithContext(ctx context.Context) AliasRoutingStrategyOutput {
	return o
}

func (o AliasRoutingStrategyOutput) ToAliasRoutingStrategyPtrOutput() AliasRoutingStrategyPtrOutput {
	return o.ToAliasRoutingStrategyPtrOutputWithContext(context.Background())
}

func (o AliasRoutingStrategyOutput) ToAliasRoutingStrategyPtrOutputWithContext(ctx context.Context) AliasRoutingStrategyPtrOutput {
	return o.ApplyT(func(v AliasRoutingStrategy) *AliasRoutingStrategy {
		return &v
	}).(AliasRoutingStrategyPtrOutput)
}
// ID of the Gamelift Fleet to point the alias to.
func (o AliasRoutingStrategyOutput) FleetId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v AliasRoutingStrategy) *string { return v.FleetId }).(pulumi.StringPtrOutput)
}

// Message text to be used with the `TERMINAL` routing strategy.
func (o AliasRoutingStrategyOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func (v AliasRoutingStrategy) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Type of routing strategy. e.g. `SIMPLE` or `TERMINAL`
func (o AliasRoutingStrategyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func (v AliasRoutingStrategy) string { return v.Type }).(pulumi.StringOutput)
}

type AliasRoutingStrategyPtrOutput struct { *pulumi.OutputState}

func (AliasRoutingStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AliasRoutingStrategy)(nil)).Elem()
}

func (o AliasRoutingStrategyPtrOutput) ToAliasRoutingStrategyPtrOutput() AliasRoutingStrategyPtrOutput {
	return o
}

func (o AliasRoutingStrategyPtrOutput) ToAliasRoutingStrategyPtrOutputWithContext(ctx context.Context) AliasRoutingStrategyPtrOutput {
	return o
}

func (o AliasRoutingStrategyPtrOutput) Elem() AliasRoutingStrategyOutput {
	return o.ApplyT(func (v *AliasRoutingStrategy) AliasRoutingStrategy { return *v }).(AliasRoutingStrategyOutput)
}

// ID of the Gamelift Fleet to point the alias to.
func (o AliasRoutingStrategyPtrOutput) FleetId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v AliasRoutingStrategy) *string { return v.FleetId }).(pulumi.StringPtrOutput)
}

// Message text to be used with the `TERMINAL` routing strategy.
func (o AliasRoutingStrategyPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func (v AliasRoutingStrategy) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Type of routing strategy. e.g. `SIMPLE` or `TERMINAL`
func (o AliasRoutingStrategyPtrOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func (v AliasRoutingStrategy) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(AliasRoutingStrategyOutput{})
	pulumi.RegisterOutputType(AliasRoutingStrategyPtrOutput{})
}
