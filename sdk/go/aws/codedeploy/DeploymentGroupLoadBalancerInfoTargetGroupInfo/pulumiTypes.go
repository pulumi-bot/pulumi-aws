// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package DeploymentGroupLoadBalancerInfoTargetGroupInfo

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type DeploymentGroupLoadBalancerInfoTargetGroupInfo struct {
	// Name of the target group.
	Name *string `pulumi:"name"`
}

type DeploymentGroupLoadBalancerInfoTargetGroupInfoInput interface {
	pulumi.Input

	ToDeploymentGroupLoadBalancerInfoTargetGroupInfoOutput() DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput
	ToDeploymentGroupLoadBalancerInfoTargetGroupInfoOutputWithContext(context.Context) DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput
}

type DeploymentGroupLoadBalancerInfoTargetGroupInfoArgs struct {
	// Name of the target group.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (DeploymentGroupLoadBalancerInfoTargetGroupInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupLoadBalancerInfoTargetGroupInfo)(nil)).Elem()
}

func (i DeploymentGroupLoadBalancerInfoTargetGroupInfoArgs) ToDeploymentGroupLoadBalancerInfoTargetGroupInfoOutput() DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput {
	return i.ToDeploymentGroupLoadBalancerInfoTargetGroupInfoOutputWithContext(context.Background())
}

func (i DeploymentGroupLoadBalancerInfoTargetGroupInfoArgs) ToDeploymentGroupLoadBalancerInfoTargetGroupInfoOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput)
}

type DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayInput interface {
	pulumi.Input

	ToDeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput() DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput
	ToDeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutputWithContext(context.Context) DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput
}

type DeploymentGroupLoadBalancerInfoTargetGroupInfoArray []DeploymentGroupLoadBalancerInfoTargetGroupInfoInput

func (DeploymentGroupLoadBalancerInfoTargetGroupInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentGroupLoadBalancerInfoTargetGroupInfo)(nil)).Elem()
}

func (i DeploymentGroupLoadBalancerInfoTargetGroupInfoArray) ToDeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput() DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput {
	return i.ToDeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutputWithContext(context.Background())
}

func (i DeploymentGroupLoadBalancerInfoTargetGroupInfoArray) ToDeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput)
}

type DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput struct { *pulumi.OutputState }

func (DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupLoadBalancerInfoTargetGroupInfo)(nil)).Elem()
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput) ToDeploymentGroupLoadBalancerInfoTargetGroupInfoOutput() DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput {
	return o
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput) ToDeploymentGroupLoadBalancerInfoTargetGroupInfoOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput {
	return o
}

// Name of the target group.
func (o DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v DeploymentGroupLoadBalancerInfoTargetGroupInfo) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput struct { *pulumi.OutputState}

func (DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentGroupLoadBalancerInfoTargetGroupInfo)(nil)).Elem()
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput) ToDeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput() DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput {
	return o
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput) ToDeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput {
	return o
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput) Index(i pulumi.IntInput) DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) DeploymentGroupLoadBalancerInfoTargetGroupInfo {
		return vs[0].([]DeploymentGroupLoadBalancerInfoTargetGroupInfo)[vs[1].(int)]
	}).(DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput)
}

func init() {
	pulumi.RegisterOutputType(DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput{})
	pulumi.RegisterOutputType(DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput{})
}
