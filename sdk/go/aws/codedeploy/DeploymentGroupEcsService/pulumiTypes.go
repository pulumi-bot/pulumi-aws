// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package DeploymentGroupEcsService

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type DeploymentGroupEcsService struct {
	// The name of the ECS cluster.
	ClusterName string `pulumi:"clusterName"`
	// The name of the ECS service.
	ServiceName string `pulumi:"serviceName"`
}

type DeploymentGroupEcsServiceInput interface {
	pulumi.Input

	ToDeploymentGroupEcsServiceOutput() DeploymentGroupEcsServiceOutput
	ToDeploymentGroupEcsServiceOutputWithContext(context.Context) DeploymentGroupEcsServiceOutput
}

type DeploymentGroupEcsServiceArgs struct {
	// The name of the ECS cluster.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// The name of the ECS service.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (DeploymentGroupEcsServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupEcsService)(nil)).Elem()
}

func (i DeploymentGroupEcsServiceArgs) ToDeploymentGroupEcsServiceOutput() DeploymentGroupEcsServiceOutput {
	return i.ToDeploymentGroupEcsServiceOutputWithContext(context.Background())
}

func (i DeploymentGroupEcsServiceArgs) ToDeploymentGroupEcsServiceOutputWithContext(ctx context.Context) DeploymentGroupEcsServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupEcsServiceOutput)
}

func (i DeploymentGroupEcsServiceArgs) ToDeploymentGroupEcsServicePtrOutput() DeploymentGroupEcsServicePtrOutput {
	return i.ToDeploymentGroupEcsServicePtrOutputWithContext(context.Background())
}

func (i DeploymentGroupEcsServiceArgs) ToDeploymentGroupEcsServicePtrOutputWithContext(ctx context.Context) DeploymentGroupEcsServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupEcsServiceOutput).ToDeploymentGroupEcsServicePtrOutputWithContext(ctx)
}

type DeploymentGroupEcsServicePtrInput interface {
	pulumi.Input

	ToDeploymentGroupEcsServicePtrOutput() DeploymentGroupEcsServicePtrOutput
	ToDeploymentGroupEcsServicePtrOutputWithContext(context.Context) DeploymentGroupEcsServicePtrOutput
}

type deploymentGroupEcsServicePtrType DeploymentGroupEcsServiceArgs

func DeploymentGroupEcsServicePtr(v *DeploymentGroupEcsServiceArgs) DeploymentGroupEcsServicePtrInput {	return (*deploymentGroupEcsServicePtrType)(v)
}

func (*deploymentGroupEcsServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentGroupEcsService)(nil)).Elem()
}

func (i *deploymentGroupEcsServicePtrType) ToDeploymentGroupEcsServicePtrOutput() DeploymentGroupEcsServicePtrOutput {
	return i.ToDeploymentGroupEcsServicePtrOutputWithContext(context.Background())
}

func (i *deploymentGroupEcsServicePtrType) ToDeploymentGroupEcsServicePtrOutputWithContext(ctx context.Context) DeploymentGroupEcsServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupEcsServicePtrOutput)
}

type DeploymentGroupEcsServiceOutput struct { *pulumi.OutputState }

func (DeploymentGroupEcsServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupEcsService)(nil)).Elem()
}

func (o DeploymentGroupEcsServiceOutput) ToDeploymentGroupEcsServiceOutput() DeploymentGroupEcsServiceOutput {
	return o
}

func (o DeploymentGroupEcsServiceOutput) ToDeploymentGroupEcsServiceOutputWithContext(ctx context.Context) DeploymentGroupEcsServiceOutput {
	return o
}

func (o DeploymentGroupEcsServiceOutput) ToDeploymentGroupEcsServicePtrOutput() DeploymentGroupEcsServicePtrOutput {
	return o.ToDeploymentGroupEcsServicePtrOutputWithContext(context.Background())
}

func (o DeploymentGroupEcsServiceOutput) ToDeploymentGroupEcsServicePtrOutputWithContext(ctx context.Context) DeploymentGroupEcsServicePtrOutput {
	return o.ApplyT(func(v DeploymentGroupEcsService) *DeploymentGroupEcsService {
		return &v
	}).(DeploymentGroupEcsServicePtrOutput)
}
// The name of the ECS cluster.
func (o DeploymentGroupEcsServiceOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func (v DeploymentGroupEcsService) string { return v.ClusterName }).(pulumi.StringOutput)
}

// The name of the ECS service.
func (o DeploymentGroupEcsServiceOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func (v DeploymentGroupEcsService) string { return v.ServiceName }).(pulumi.StringOutput)
}

type DeploymentGroupEcsServicePtrOutput struct { *pulumi.OutputState}

func (DeploymentGroupEcsServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentGroupEcsService)(nil)).Elem()
}

func (o DeploymentGroupEcsServicePtrOutput) ToDeploymentGroupEcsServicePtrOutput() DeploymentGroupEcsServicePtrOutput {
	return o
}

func (o DeploymentGroupEcsServicePtrOutput) ToDeploymentGroupEcsServicePtrOutputWithContext(ctx context.Context) DeploymentGroupEcsServicePtrOutput {
	return o
}

func (o DeploymentGroupEcsServicePtrOutput) Elem() DeploymentGroupEcsServiceOutput {
	return o.ApplyT(func (v *DeploymentGroupEcsService) DeploymentGroupEcsService { return *v }).(DeploymentGroupEcsServiceOutput)
}

// The name of the ECS cluster.
func (o DeploymentGroupEcsServicePtrOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func (v DeploymentGroupEcsService) string { return v.ClusterName }).(pulumi.StringOutput)
}

// The name of the ECS service.
func (o DeploymentGroupEcsServicePtrOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func (v DeploymentGroupEcsService) string { return v.ServiceName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(DeploymentGroupEcsServiceOutput{})
	pulumi.RegisterOutputType(DeploymentGroupEcsServicePtrOutput{})
}
