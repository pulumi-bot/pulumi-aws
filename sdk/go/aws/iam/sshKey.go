// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type SshKey struct {
	pulumi.CustomResourceState

	Encoding       pulumi.StringOutput `pulumi:"encoding"`
	Fingerprint    pulumi.StringOutput `pulumi:"fingerprint"`
	PublicKey      pulumi.StringOutput `pulumi:"publicKey"`
	SshPublicKeyId pulumi.StringOutput `pulumi:"sshPublicKeyId"`
	Status         pulumi.StringOutput `pulumi:"status"`
	Username       pulumi.StringOutput `pulumi:"username"`
}

// NewSshKey registers a new resource with the given unique name, arguments, and options.
func NewSshKey(ctx *pulumi.Context,
	name string, args *SshKeyArgs, opts ...pulumi.ResourceOption) (*SshKey, error) {
	if args == nil || args.Encoding == nil {
		return nil, errors.New("missing required argument 'Encoding'")
	}
	if args == nil || args.PublicKey == nil {
		return nil, errors.New("missing required argument 'PublicKey'")
	}
	if args == nil || args.Username == nil {
		return nil, errors.New("missing required argument 'Username'")
	}
	if args == nil {
		args = &SshKeyArgs{}
	}
	var resource SshKey
	err := ctx.RegisterResource("aws:iam/sshKey:SshKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSshKey gets an existing SshKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSshKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SshKeyState, opts ...pulumi.ResourceOption) (*SshKey, error) {
	var resource SshKey
	err := ctx.ReadResource("aws:iam/sshKey:SshKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SshKey resources.
type sshKeyState struct {
	Encoding       *string `pulumi:"encoding"`
	Fingerprint    *string `pulumi:"fingerprint"`
	PublicKey      *string `pulumi:"publicKey"`
	SshPublicKeyId *string `pulumi:"sshPublicKeyId"`
	Status         *string `pulumi:"status"`
	Username       *string `pulumi:"username"`
}

type SshKeyState struct {
	Encoding       pulumi.StringPtrInput
	Fingerprint    pulumi.StringPtrInput
	PublicKey      pulumi.StringPtrInput
	SshPublicKeyId pulumi.StringPtrInput
	Status         pulumi.StringPtrInput
	Username       pulumi.StringPtrInput
}

func (SshKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*sshKeyState)(nil)).Elem()
}

type sshKeyArgs struct {
	Encoding  string  `pulumi:"encoding"`
	PublicKey string  `pulumi:"publicKey"`
	Status    *string `pulumi:"status"`
	Username  string  `pulumi:"username"`
}

// The set of arguments for constructing a SshKey resource.
type SshKeyArgs struct {
	Encoding  pulumi.StringInput
	PublicKey pulumi.StringInput
	Status    pulumi.StringPtrInput
	Username  pulumi.StringInput
}

func (SshKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sshKeyArgs)(nil)).Elem()
}
