// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type User struct {
	pulumi.CustomResourceState

	Arn pulumi.StringOutput `pulumi:"arn"`
	// Delete user even if it has non-Terraform-managed IAM access keys, login profile or MFA devices
	ForceDestroy        pulumi.BoolPtrOutput   `pulumi:"forceDestroy"`
	Name                pulumi.StringOutput    `pulumi:"name"`
	Path                pulumi.StringPtrOutput `pulumi:"path"`
	PermissionsBoundary pulumi.StringPtrOutput `pulumi:"permissionsBoundary"`
	Tags                pulumi.StringMapOutput `pulumi:"tags"`
	UniqueId            pulumi.StringOutput    `pulumi:"uniqueId"`
}

// NewUser registers a new resource with the given unique name, arguments, and options.
func NewUser(ctx *pulumi.Context,
	name string, args *UserArgs, opts ...pulumi.ResourceOption) (*User, error) {
	if args == nil {
		args = &UserArgs{}
	}
	var resource User
	err := ctx.RegisterResource("aws:iam/user:User", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUser gets an existing User resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserState, opts ...pulumi.ResourceOption) (*User, error) {
	var resource User
	err := ctx.ReadResource("aws:iam/user:User", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering User resources.
type userState struct {
	Arn *string `pulumi:"arn"`
	// Delete user even if it has non-Terraform-managed IAM access keys, login profile or MFA devices
	ForceDestroy        *bool             `pulumi:"forceDestroy"`
	Name                *string           `pulumi:"name"`
	Path                *string           `pulumi:"path"`
	PermissionsBoundary *string           `pulumi:"permissionsBoundary"`
	Tags                map[string]string `pulumi:"tags"`
	UniqueId            *string           `pulumi:"uniqueId"`
}

type UserState struct {
	Arn pulumi.StringPtrInput
	// Delete user even if it has non-Terraform-managed IAM access keys, login profile or MFA devices
	ForceDestroy        pulumi.BoolPtrInput
	Name                pulumi.StringPtrInput
	Path                pulumi.StringPtrInput
	PermissionsBoundary pulumi.StringPtrInput
	Tags                pulumi.StringMapInput
	UniqueId            pulumi.StringPtrInput
}

func (UserState) ElementType() reflect.Type {
	return reflect.TypeOf((*userState)(nil)).Elem()
}

type userArgs struct {
	// Delete user even if it has non-Terraform-managed IAM access keys, login profile or MFA devices
	ForceDestroy        *bool             `pulumi:"forceDestroy"`
	Name                *string           `pulumi:"name"`
	Path                *string           `pulumi:"path"`
	PermissionsBoundary *string           `pulumi:"permissionsBoundary"`
	Tags                map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a User resource.
type UserArgs struct {
	// Delete user even if it has non-Terraform-managed IAM access keys, login profile or MFA devices
	ForceDestroy        pulumi.BoolPtrInput
	Name                pulumi.StringPtrInput
	Path                pulumi.StringPtrInput
	PermissionsBoundary pulumi.StringPtrInput
	Tags                pulumi.StringMapInput
}

func (UserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userArgs)(nil)).Elem()
}
