// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package getPolicyDocumentStatementCondition

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type GetPolicyDocumentStatementCondition struct {
	// The name of the
	// [IAM condition operator](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition_operators.html)
	// to evaluate.
	Test string `pulumi:"test"`
	// The values to evaluate the condition against. If multiple
	// values are provided, the condition matches if at least one of them applies.
	// (That is, the tests are combined with the "OR" boolean operation.)
	Values []string `pulumi:"values"`
	// The name of a
	// [Context Variable](http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements.html#AvailableKeys)
	// to apply the condition to. Context variables may either be standard AWS
	// variables starting with `aws:`, or service-specific variables prefixed with
	// the service name.
	Variable string `pulumi:"variable"`
}

type GetPolicyDocumentStatementConditionInput interface {
	pulumi.Input

	ToGetPolicyDocumentStatementConditionOutput() GetPolicyDocumentStatementConditionOutput
	ToGetPolicyDocumentStatementConditionOutputWithContext(context.Context) GetPolicyDocumentStatementConditionOutput
}

type GetPolicyDocumentStatementConditionArgs struct {
	// The name of the
	// [IAM condition operator](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition_operators.html)
	// to evaluate.
	Test pulumi.StringInput `pulumi:"test"`
	// The values to evaluate the condition against. If multiple
	// values are provided, the condition matches if at least one of them applies.
	// (That is, the tests are combined with the "OR" boolean operation.)
	Values pulumi.StringArrayInput `pulumi:"values"`
	// The name of a
	// [Context Variable](http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements.html#AvailableKeys)
	// to apply the condition to. Context variables may either be standard AWS
	// variables starting with `aws:`, or service-specific variables prefixed with
	// the service name.
	Variable pulumi.StringInput `pulumi:"variable"`
}

func (GetPolicyDocumentStatementConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDocumentStatementCondition)(nil)).Elem()
}

func (i GetPolicyDocumentStatementConditionArgs) ToGetPolicyDocumentStatementConditionOutput() GetPolicyDocumentStatementConditionOutput {
	return i.ToGetPolicyDocumentStatementConditionOutputWithContext(context.Background())
}

func (i GetPolicyDocumentStatementConditionArgs) ToGetPolicyDocumentStatementConditionOutputWithContext(ctx context.Context) GetPolicyDocumentStatementConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDocumentStatementConditionOutput)
}

type GetPolicyDocumentStatementConditionArrayInput interface {
	pulumi.Input

	ToGetPolicyDocumentStatementConditionArrayOutput() GetPolicyDocumentStatementConditionArrayOutput
	ToGetPolicyDocumentStatementConditionArrayOutputWithContext(context.Context) GetPolicyDocumentStatementConditionArrayOutput
}

type GetPolicyDocumentStatementConditionArray []GetPolicyDocumentStatementConditionInput

func (GetPolicyDocumentStatementConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyDocumentStatementCondition)(nil)).Elem()
}

func (i GetPolicyDocumentStatementConditionArray) ToGetPolicyDocumentStatementConditionArrayOutput() GetPolicyDocumentStatementConditionArrayOutput {
	return i.ToGetPolicyDocumentStatementConditionArrayOutputWithContext(context.Background())
}

func (i GetPolicyDocumentStatementConditionArray) ToGetPolicyDocumentStatementConditionArrayOutputWithContext(ctx context.Context) GetPolicyDocumentStatementConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDocumentStatementConditionArrayOutput)
}

type GetPolicyDocumentStatementConditionOutput struct { *pulumi.OutputState }

func (GetPolicyDocumentStatementConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDocumentStatementCondition)(nil)).Elem()
}

func (o GetPolicyDocumentStatementConditionOutput) ToGetPolicyDocumentStatementConditionOutput() GetPolicyDocumentStatementConditionOutput {
	return o
}

func (o GetPolicyDocumentStatementConditionOutput) ToGetPolicyDocumentStatementConditionOutputWithContext(ctx context.Context) GetPolicyDocumentStatementConditionOutput {
	return o
}

// The name of the
// [IAM condition operator](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition_operators.html)
// to evaluate.
func (o GetPolicyDocumentStatementConditionOutput) Test() pulumi.StringOutput {
	return o.ApplyT(func (v GetPolicyDocumentStatementCondition) string { return v.Test }).(pulumi.StringOutput)
}

// The values to evaluate the condition against. If multiple
// values are provided, the condition matches if at least one of them applies.
// (That is, the tests are combined with the "OR" boolean operation.)
func (o GetPolicyDocumentStatementConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetPolicyDocumentStatementCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

// The name of a
// [Context Variable](http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements.html#AvailableKeys)
// to apply the condition to. Context variables may either be standard AWS
// variables starting with `aws:`, or service-specific variables prefixed with
// the service name.
func (o GetPolicyDocumentStatementConditionOutput) Variable() pulumi.StringOutput {
	return o.ApplyT(func (v GetPolicyDocumentStatementCondition) string { return v.Variable }).(pulumi.StringOutput)
}

type GetPolicyDocumentStatementConditionArrayOutput struct { *pulumi.OutputState}

func (GetPolicyDocumentStatementConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyDocumentStatementCondition)(nil)).Elem()
}

func (o GetPolicyDocumentStatementConditionArrayOutput) ToGetPolicyDocumentStatementConditionArrayOutput() GetPolicyDocumentStatementConditionArrayOutput {
	return o
}

func (o GetPolicyDocumentStatementConditionArrayOutput) ToGetPolicyDocumentStatementConditionArrayOutputWithContext(ctx context.Context) GetPolicyDocumentStatementConditionArrayOutput {
	return o
}

func (o GetPolicyDocumentStatementConditionArrayOutput) Index(i pulumi.IntInput) GetPolicyDocumentStatementConditionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetPolicyDocumentStatementCondition {
		return vs[0].([]GetPolicyDocumentStatementCondition)[vs[1].(int)]
	}).(GetPolicyDocumentStatementConditionOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPolicyDocumentStatementConditionOutput{})
	pulumi.RegisterOutputType(GetPolicyDocumentStatementConditionArrayOutput{})
}
