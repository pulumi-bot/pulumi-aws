// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Policy struct {
	pulumi.CustomResourceState

	Arn         pulumi.StringOutput    `pulumi:"arn"`
	Description pulumi.StringPtrOutput `pulumi:"description"`
	Name        pulumi.StringOutput    `pulumi:"name"`
	NamePrefix  pulumi.StringPtrOutput `pulumi:"namePrefix"`
	Path        pulumi.StringPtrOutput `pulumi:"path"`
	Policy      pulumi.StringOutput    `pulumi:"policy"`
}

// NewPolicy registers a new resource with the given unique name, arguments, and options.
func NewPolicy(ctx *pulumi.Context,
	name string, args *PolicyArgs, opts ...pulumi.ResourceOption) (*Policy, error) {
	if args == nil || args.Policy == nil {
		return nil, errors.New("missing required argument 'Policy'")
	}
	if args == nil {
		args = &PolicyArgs{}
	}
	var resource Policy
	err := ctx.RegisterResource("aws:iam/policy:Policy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicy gets an existing Policy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyState, opts ...pulumi.ResourceOption) (*Policy, error) {
	var resource Policy
	err := ctx.ReadResource("aws:iam/policy:Policy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Policy resources.
type policyState struct {
	Arn         *string `pulumi:"arn"`
	Description *string `pulumi:"description"`
	Name        *string `pulumi:"name"`
	NamePrefix  *string `pulumi:"namePrefix"`
	Path        *string `pulumi:"path"`
	Policy      *string `pulumi:"policy"`
}

type PolicyState struct {
	Arn         pulumi.StringPtrInput
	Description pulumi.StringPtrInput
	Name        pulumi.StringPtrInput
	NamePrefix  pulumi.StringPtrInput
	Path        pulumi.StringPtrInput
	Policy      pulumi.StringPtrInput
}

func (PolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyState)(nil)).Elem()
}

type policyArgs struct {
	Description *string     `pulumi:"description"`
	Name        *string     `pulumi:"name"`
	NamePrefix  *string     `pulumi:"namePrefix"`
	Path        *string     `pulumi:"path"`
	Policy      interface{} `pulumi:"policy"`
}

// The set of arguments for constructing a Policy resource.
type PolicyArgs struct {
	Description pulumi.StringPtrInput
	Name        pulumi.StringPtrInput
	NamePrefix  pulumi.StringPtrInput
	Path        pulumi.StringPtrInput
	Policy      pulumi.Input
}

func (PolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyArgs)(nil)).Elem()
}
