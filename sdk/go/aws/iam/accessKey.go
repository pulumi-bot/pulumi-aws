// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AccessKey struct {
	pulumi.CustomResourceState

	EncryptedSecret   pulumi.StringOutput    `pulumi:"encryptedSecret"`
	KeyFingerprint    pulumi.StringOutput    `pulumi:"keyFingerprint"`
	PgpKey            pulumi.StringPtrOutput `pulumi:"pgpKey"`
	Secret            pulumi.StringOutput    `pulumi:"secret"`
	SesSmtpPasswordV4 pulumi.StringOutput    `pulumi:"sesSmtpPasswordV4"`
	Status            pulumi.StringOutput    `pulumi:"status"`
	User              pulumi.StringOutput    `pulumi:"user"`
}

// NewAccessKey registers a new resource with the given unique name, arguments, and options.
func NewAccessKey(ctx *pulumi.Context,
	name string, args *AccessKeyArgs, opts ...pulumi.ResourceOption) (*AccessKey, error) {
	if args == nil || args.User == nil {
		return nil, errors.New("missing required argument 'User'")
	}
	if args == nil {
		args = &AccessKeyArgs{}
	}
	var resource AccessKey
	err := ctx.RegisterResource("aws:iam/accessKey:AccessKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessKey gets an existing AccessKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessKeyState, opts ...pulumi.ResourceOption) (*AccessKey, error) {
	var resource AccessKey
	err := ctx.ReadResource("aws:iam/accessKey:AccessKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessKey resources.
type accessKeyState struct {
	EncryptedSecret   *string `pulumi:"encryptedSecret"`
	KeyFingerprint    *string `pulumi:"keyFingerprint"`
	PgpKey            *string `pulumi:"pgpKey"`
	Secret            *string `pulumi:"secret"`
	SesSmtpPasswordV4 *string `pulumi:"sesSmtpPasswordV4"`
	Status            *string `pulumi:"status"`
	User              *string `pulumi:"user"`
}

type AccessKeyState struct {
	EncryptedSecret   pulumi.StringPtrInput
	KeyFingerprint    pulumi.StringPtrInput
	PgpKey            pulumi.StringPtrInput
	Secret            pulumi.StringPtrInput
	SesSmtpPasswordV4 pulumi.StringPtrInput
	Status            pulumi.StringPtrInput
	User              pulumi.StringPtrInput
}

func (AccessKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessKeyState)(nil)).Elem()
}

type accessKeyArgs struct {
	PgpKey *string `pulumi:"pgpKey"`
	Status *string `pulumi:"status"`
	User   string  `pulumi:"user"`
}

// The set of arguments for constructing a AccessKey resource.
type AccessKeyArgs struct {
	PgpKey pulumi.StringPtrInput
	Status pulumi.StringPtrInput
	User   pulumi.StringInput
}

func (AccessKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessKeyArgs)(nil)).Elem()
}
