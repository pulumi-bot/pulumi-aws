// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AccountPasswordPolicy struct {
	pulumi.CustomResourceState

	AllowUsersToChangePassword pulumi.BoolPtrOutput `pulumi:"allowUsersToChangePassword"`
	ExpirePasswords            pulumi.BoolOutput    `pulumi:"expirePasswords"`
	HardExpiry                 pulumi.BoolOutput    `pulumi:"hardExpiry"`
	MaxPasswordAge             pulumi.IntOutput     `pulumi:"maxPasswordAge"`
	MinimumPasswordLength      pulumi.IntPtrOutput  `pulumi:"minimumPasswordLength"`
	PasswordReusePrevention    pulumi.IntOutput     `pulumi:"passwordReusePrevention"`
	RequireLowercaseCharacters pulumi.BoolOutput    `pulumi:"requireLowercaseCharacters"`
	RequireNumbers             pulumi.BoolOutput    `pulumi:"requireNumbers"`
	RequireSymbols             pulumi.BoolOutput    `pulumi:"requireSymbols"`
	RequireUppercaseCharacters pulumi.BoolOutput    `pulumi:"requireUppercaseCharacters"`
}

// NewAccountPasswordPolicy registers a new resource with the given unique name, arguments, and options.
func NewAccountPasswordPolicy(ctx *pulumi.Context,
	name string, args *AccountPasswordPolicyArgs, opts ...pulumi.ResourceOption) (*AccountPasswordPolicy, error) {
	if args == nil {
		args = &AccountPasswordPolicyArgs{}
	}
	var resource AccountPasswordPolicy
	err := ctx.RegisterResource("aws:iam/accountPasswordPolicy:AccountPasswordPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountPasswordPolicy gets an existing AccountPasswordPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountPasswordPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountPasswordPolicyState, opts ...pulumi.ResourceOption) (*AccountPasswordPolicy, error) {
	var resource AccountPasswordPolicy
	err := ctx.ReadResource("aws:iam/accountPasswordPolicy:AccountPasswordPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountPasswordPolicy resources.
type accountPasswordPolicyState struct {
	AllowUsersToChangePassword *bool `pulumi:"allowUsersToChangePassword"`
	ExpirePasswords            *bool `pulumi:"expirePasswords"`
	HardExpiry                 *bool `pulumi:"hardExpiry"`
	MaxPasswordAge             *int  `pulumi:"maxPasswordAge"`
	MinimumPasswordLength      *int  `pulumi:"minimumPasswordLength"`
	PasswordReusePrevention    *int  `pulumi:"passwordReusePrevention"`
	RequireLowercaseCharacters *bool `pulumi:"requireLowercaseCharacters"`
	RequireNumbers             *bool `pulumi:"requireNumbers"`
	RequireSymbols             *bool `pulumi:"requireSymbols"`
	RequireUppercaseCharacters *bool `pulumi:"requireUppercaseCharacters"`
}

type AccountPasswordPolicyState struct {
	AllowUsersToChangePassword pulumi.BoolPtrInput
	ExpirePasswords            pulumi.BoolPtrInput
	HardExpiry                 pulumi.BoolPtrInput
	MaxPasswordAge             pulumi.IntPtrInput
	MinimumPasswordLength      pulumi.IntPtrInput
	PasswordReusePrevention    pulumi.IntPtrInput
	RequireLowercaseCharacters pulumi.BoolPtrInput
	RequireNumbers             pulumi.BoolPtrInput
	RequireSymbols             pulumi.BoolPtrInput
	RequireUppercaseCharacters pulumi.BoolPtrInput
}

func (AccountPasswordPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountPasswordPolicyState)(nil)).Elem()
}

type accountPasswordPolicyArgs struct {
	AllowUsersToChangePassword *bool `pulumi:"allowUsersToChangePassword"`
	HardExpiry                 *bool `pulumi:"hardExpiry"`
	MaxPasswordAge             *int  `pulumi:"maxPasswordAge"`
	MinimumPasswordLength      *int  `pulumi:"minimumPasswordLength"`
	PasswordReusePrevention    *int  `pulumi:"passwordReusePrevention"`
	RequireLowercaseCharacters *bool `pulumi:"requireLowercaseCharacters"`
	RequireNumbers             *bool `pulumi:"requireNumbers"`
	RequireSymbols             *bool `pulumi:"requireSymbols"`
	RequireUppercaseCharacters *bool `pulumi:"requireUppercaseCharacters"`
}

// The set of arguments for constructing a AccountPasswordPolicy resource.
type AccountPasswordPolicyArgs struct {
	AllowUsersToChangePassword pulumi.BoolPtrInput
	HardExpiry                 pulumi.BoolPtrInput
	MaxPasswordAge             pulumi.IntPtrInput
	MinimumPasswordLength      pulumi.IntPtrInput
	PasswordReusePrevention    pulumi.IntPtrInput
	RequireLowercaseCharacters pulumi.BoolPtrInput
	RequireNumbers             pulumi.BoolPtrInput
	RequireSymbols             pulumi.BoolPtrInput
	RequireUppercaseCharacters pulumi.BoolPtrInput
}

func (AccountPasswordPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountPasswordPolicyArgs)(nil)).Elem()
}
