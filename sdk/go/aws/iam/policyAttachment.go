// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type PolicyAttachment struct {
	pulumi.CustomResourceState

	Groups    pulumi.StringArrayOutput `pulumi:"groups"`
	Name      pulumi.StringOutput      `pulumi:"name"`
	PolicyArn pulumi.StringOutput      `pulumi:"policyArn"`
	Roles     pulumi.StringArrayOutput `pulumi:"roles"`
	Users     pulumi.StringArrayOutput `pulumi:"users"`
}

// NewPolicyAttachment registers a new resource with the given unique name, arguments, and options.
func NewPolicyAttachment(ctx *pulumi.Context,
	name string, args *PolicyAttachmentArgs, opts ...pulumi.ResourceOption) (*PolicyAttachment, error) {
	if args == nil || args.PolicyArn == nil {
		return nil, errors.New("missing required argument 'PolicyArn'")
	}
	if args == nil {
		args = &PolicyAttachmentArgs{}
	}
	var resource PolicyAttachment
	err := ctx.RegisterResource("aws:iam/policyAttachment:PolicyAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicyAttachment gets an existing PolicyAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicyAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyAttachmentState, opts ...pulumi.ResourceOption) (*PolicyAttachment, error) {
	var resource PolicyAttachment
	err := ctx.ReadResource("aws:iam/policyAttachment:PolicyAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PolicyAttachment resources.
type policyAttachmentState struct {
	Groups    []string `pulumi:"groups"`
	Name      *string  `pulumi:"name"`
	PolicyArn *string  `pulumi:"policyArn"`
	Roles     []string `pulumi:"roles"`
	Users     []string `pulumi:"users"`
}

type PolicyAttachmentState struct {
	Groups    pulumi.StringArrayInput
	Name      pulumi.StringPtrInput
	PolicyArn pulumi.StringPtrInput
	Roles     pulumi.StringArrayInput
	Users     pulumi.StringArrayInput
}

func (PolicyAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyAttachmentState)(nil)).Elem()
}

type policyAttachmentArgs struct {
	Groups    []interface{} `pulumi:"groups"`
	Name      *string       `pulumi:"name"`
	PolicyArn string        `pulumi:"policyArn"`
	Roles     []interface{} `pulumi:"roles"`
	Users     []interface{} `pulumi:"users"`
}

// The set of arguments for constructing a PolicyAttachment resource.
type PolicyAttachmentArgs struct {
	Groups    pulumi.ArrayInput
	Name      pulumi.StringPtrInput
	PolicyArn pulumi.StringInput
	Roles     pulumi.ArrayInput
	Users     pulumi.ArrayInput
}

func (PolicyAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyAttachmentArgs)(nil)).Elem()
}
