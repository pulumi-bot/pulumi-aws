// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions struct {
	// Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs struct {
	// Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrInput {	return (*firehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput struct { *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions) *FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}
// Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions) *string { return v.LogGroupName }).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions) *string { return v.LogStreamName }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput struct { *pulumi.OutputState}

func (FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func (v *FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions { return *v }).(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput)
}

// Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions) *string { return v.LogGroupName }).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions) *string { return v.LogStreamName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput{})
}
