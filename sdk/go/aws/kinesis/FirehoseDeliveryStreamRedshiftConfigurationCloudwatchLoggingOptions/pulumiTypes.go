// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions struct {
	// Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

type FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs struct {
	// Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrInput {	return (*firehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput struct { *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions) *FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput)
}
// Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions) *string { return v.LogGroupName }).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions) *string { return v.LogStreamName }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput struct { *pulumi.OutputState}

func (FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func (v *FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions { return *v }).(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput)
}

// Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions) *string { return v.LogGroupName }).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions) *string { return v.LogStreamName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsPtrOutput{})
}
