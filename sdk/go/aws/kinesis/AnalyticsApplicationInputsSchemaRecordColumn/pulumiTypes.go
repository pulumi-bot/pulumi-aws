// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package AnalyticsApplicationInputsSchemaRecordColumn

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type AnalyticsApplicationInputsSchemaRecordColumn struct {
	Mapping *string `pulumi:"mapping"`
	// Name of the Kinesis Analytics Application.
	Name string `pulumi:"name"`
	SqlType string `pulumi:"sqlType"`
}

type AnalyticsApplicationInputsSchemaRecordColumnInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordColumnOutput() AnalyticsApplicationInputsSchemaRecordColumnOutput
	ToAnalyticsApplicationInputsSchemaRecordColumnOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordColumnOutput
}

type AnalyticsApplicationInputsSchemaRecordColumnArgs struct {
	Mapping pulumi.StringPtrInput `pulumi:"mapping"`
	// Name of the Kinesis Analytics Application.
	Name pulumi.StringInput `pulumi:"name"`
	SqlType pulumi.StringInput `pulumi:"sqlType"`
}

func (AnalyticsApplicationInputsSchemaRecordColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordColumn)(nil)).Elem()
}

func (i AnalyticsApplicationInputsSchemaRecordColumnArgs) ToAnalyticsApplicationInputsSchemaRecordColumnOutput() AnalyticsApplicationInputsSchemaRecordColumnOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordColumnOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordColumnArgs) ToAnalyticsApplicationInputsSchemaRecordColumnOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordColumnOutput)
}

type AnalyticsApplicationInputsSchemaRecordColumnArrayInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordColumnArrayOutput() AnalyticsApplicationInputsSchemaRecordColumnArrayOutput
	ToAnalyticsApplicationInputsSchemaRecordColumnArrayOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordColumnArrayOutput
}

type AnalyticsApplicationInputsSchemaRecordColumnArray []AnalyticsApplicationInputsSchemaRecordColumnInput

func (AnalyticsApplicationInputsSchemaRecordColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationInputsSchemaRecordColumn)(nil)).Elem()
}

func (i AnalyticsApplicationInputsSchemaRecordColumnArray) ToAnalyticsApplicationInputsSchemaRecordColumnArrayOutput() AnalyticsApplicationInputsSchemaRecordColumnArrayOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordColumnArrayOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordColumnArray) ToAnalyticsApplicationInputsSchemaRecordColumnArrayOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordColumnArrayOutput)
}

type AnalyticsApplicationInputsSchemaRecordColumnOutput struct { *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordColumn)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordColumnOutput) ToAnalyticsApplicationInputsSchemaRecordColumnOutput() AnalyticsApplicationInputsSchemaRecordColumnOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordColumnOutput) ToAnalyticsApplicationInputsSchemaRecordColumnOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordColumnOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordColumnOutput) Mapping() pulumi.StringPtrOutput {
	return o.ApplyT(func (v AnalyticsApplicationInputsSchemaRecordColumn) *string { return v.Mapping }).(pulumi.StringPtrOutput)
}

// Name of the Kinesis Analytics Application.
func (o AnalyticsApplicationInputsSchemaRecordColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v AnalyticsApplicationInputsSchemaRecordColumn) string { return v.Name }).(pulumi.StringOutput)
}

func (o AnalyticsApplicationInputsSchemaRecordColumnOutput) SqlType() pulumi.StringOutput {
	return o.ApplyT(func (v AnalyticsApplicationInputsSchemaRecordColumn) string { return v.SqlType }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsSchemaRecordColumnArrayOutput struct { *pulumi.OutputState}

func (AnalyticsApplicationInputsSchemaRecordColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationInputsSchemaRecordColumn)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordColumnArrayOutput) ToAnalyticsApplicationInputsSchemaRecordColumnArrayOutput() AnalyticsApplicationInputsSchemaRecordColumnArrayOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordColumnArrayOutput) ToAnalyticsApplicationInputsSchemaRecordColumnArrayOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordColumnArrayOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordColumnArrayOutput) Index(i pulumi.IntInput) AnalyticsApplicationInputsSchemaRecordColumnOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) AnalyticsApplicationInputsSchemaRecordColumn {
		return vs[0].([]AnalyticsApplicationInputsSchemaRecordColumn)[vs[1].(int)]
	}).(AnalyticsApplicationInputsSchemaRecordColumnOutput)
}

func init() {
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordColumnOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordColumnArrayOutput{})
}
