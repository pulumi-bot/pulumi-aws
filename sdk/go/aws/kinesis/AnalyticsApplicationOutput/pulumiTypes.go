// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package AnalyticsApplicationOutput

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-aws/kinesis/AnalyticsApplicationOutputKinesisFirehose"
	"https:/github.com/pulumi/pulumi-aws/kinesis/AnalyticsApplicationOutputKinesisStream"
	"https:/github.com/pulumi/pulumi-aws/kinesis/AnalyticsApplicationOutputLambda"
	"https:/github.com/pulumi/pulumi-aws/kinesis/AnalyticsApplicationOutputSchema"
)

type AnalyticsApplicationOutput struct {
	// The ARN of the Kinesis Analytics Application.
	Id *string `pulumi:"id"`
	KinesisFirehose *kinesisAnalyticsApplicationOutputKinesisFirehose.AnalyticsApplicationOutputKinesisFirehose `pulumi:"kinesisFirehose"`
	KinesisStream *kinesisAnalyticsApplicationOutputKinesisStream.AnalyticsApplicationOutputKinesisStream `pulumi:"kinesisStream"`
	Lambda *kinesisAnalyticsApplicationOutputLambda.AnalyticsApplicationOutputLambda `pulumi:"lambda"`
	// Name of the Kinesis Analytics Application.
	Name string `pulumi:"name"`
	Schema kinesisAnalyticsApplicationOutputSchema.AnalyticsApplicationOutputSchema `pulumi:"schema"`
}

type AnalyticsApplicationOutputInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputOutput() AnalyticsApplicationOutputOutput
	ToAnalyticsApplicationOutputOutputWithContext(context.Context) AnalyticsApplicationOutputOutput
}

type AnalyticsApplicationOutputArgs struct {
	// The ARN of the Kinesis Analytics Application.
	Id pulumi.StringPtrInput `pulumi:"id"`
	KinesisFirehose kinesisAnalyticsApplicationOutputKinesisFirehose.AnalyticsApplicationOutputKinesisFirehosePtrInput `pulumi:"kinesisFirehose"`
	KinesisStream kinesisAnalyticsApplicationOutputKinesisStream.AnalyticsApplicationOutputKinesisStreamPtrInput `pulumi:"kinesisStream"`
	Lambda kinesisAnalyticsApplicationOutputLambda.AnalyticsApplicationOutputLambdaPtrInput `pulumi:"lambda"`
	// Name of the Kinesis Analytics Application.
	Name pulumi.StringInput `pulumi:"name"`
	Schema kinesisAnalyticsApplicationOutputSchema.AnalyticsApplicationOutputSchemaInput `pulumi:"schema"`
}

func (AnalyticsApplicationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutput)(nil)).Elem()
}

func (i AnalyticsApplicationOutputArgs) ToAnalyticsApplicationOutputOutput() AnalyticsApplicationOutputOutput {
	return i.ToAnalyticsApplicationOutputOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputArgs) ToAnalyticsApplicationOutputOutputWithContext(ctx context.Context) AnalyticsApplicationOutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputOutput)
}

type AnalyticsApplicationOutputArrayInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputArrayOutput() AnalyticsApplicationOutputArrayOutput
	ToAnalyticsApplicationOutputArrayOutputWithContext(context.Context) AnalyticsApplicationOutputArrayOutput
}

type AnalyticsApplicationOutputArray []AnalyticsApplicationOutputInput

func (AnalyticsApplicationOutputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationOutput)(nil)).Elem()
}

func (i AnalyticsApplicationOutputArray) ToAnalyticsApplicationOutputArrayOutput() AnalyticsApplicationOutputArrayOutput {
	return i.ToAnalyticsApplicationOutputArrayOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputArray) ToAnalyticsApplicationOutputArrayOutputWithContext(ctx context.Context) AnalyticsApplicationOutputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputArrayOutput)
}

type AnalyticsApplicationOutputOutput struct { *pulumi.OutputState }

func (AnalyticsApplicationOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutput)(nil)).Elem()
}

func (o AnalyticsApplicationOutputOutput) ToAnalyticsApplicationOutputOutput() AnalyticsApplicationOutputOutput {
	return o
}

func (o AnalyticsApplicationOutputOutput) ToAnalyticsApplicationOutputOutputWithContext(ctx context.Context) AnalyticsApplicationOutputOutput {
	return o
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationOutputOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v AnalyticsApplicationOutput) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o AnalyticsApplicationOutputOutput) KinesisFirehose() kinesisAnalyticsApplicationOutputKinesisFirehose.AnalyticsApplicationOutputKinesisFirehosePtrOutput {
	return o.ApplyT(func (v AnalyticsApplicationOutput) *kinesisAnalyticsApplicationOutputKinesisFirehose.AnalyticsApplicationOutputKinesisFirehose { return v.KinesisFirehose }).(kinesisAnalyticsApplicationOutputKinesisFirehose.AnalyticsApplicationOutputKinesisFirehosePtrOutput)
}

func (o AnalyticsApplicationOutputOutput) KinesisStream() kinesisAnalyticsApplicationOutputKinesisStream.AnalyticsApplicationOutputKinesisStreamPtrOutput {
	return o.ApplyT(func (v AnalyticsApplicationOutput) *kinesisAnalyticsApplicationOutputKinesisStream.AnalyticsApplicationOutputKinesisStream { return v.KinesisStream }).(kinesisAnalyticsApplicationOutputKinesisStream.AnalyticsApplicationOutputKinesisStreamPtrOutput)
}

func (o AnalyticsApplicationOutputOutput) Lambda() kinesisAnalyticsApplicationOutputLambda.AnalyticsApplicationOutputLambdaPtrOutput {
	return o.ApplyT(func (v AnalyticsApplicationOutput) *kinesisAnalyticsApplicationOutputLambda.AnalyticsApplicationOutputLambda { return v.Lambda }).(kinesisAnalyticsApplicationOutputLambda.AnalyticsApplicationOutputLambdaPtrOutput)
}

// Name of the Kinesis Analytics Application.
func (o AnalyticsApplicationOutputOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v AnalyticsApplicationOutput) string { return v.Name }).(pulumi.StringOutput)
}

func (o AnalyticsApplicationOutputOutput) Schema() kinesisAnalyticsApplicationOutputSchema.AnalyticsApplicationOutputSchemaOutput {
	return o.ApplyT(func (v AnalyticsApplicationOutput) kinesisAnalyticsApplicationOutputSchema.AnalyticsApplicationOutputSchema { return v.Schema }).(kinesisAnalyticsApplicationOutputSchema.AnalyticsApplicationOutputSchemaOutput)
}

type AnalyticsApplicationOutputArrayOutput struct { *pulumi.OutputState}

func (AnalyticsApplicationOutputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationOutput)(nil)).Elem()
}

func (o AnalyticsApplicationOutputArrayOutput) ToAnalyticsApplicationOutputArrayOutput() AnalyticsApplicationOutputArrayOutput {
	return o
}

func (o AnalyticsApplicationOutputArrayOutput) ToAnalyticsApplicationOutputArrayOutputWithContext(ctx context.Context) AnalyticsApplicationOutputArrayOutput {
	return o
}

func (o AnalyticsApplicationOutputArrayOutput) Index(i pulumi.IntInput) AnalyticsApplicationOutputOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) AnalyticsApplicationOutput {
		return vs[0].([]AnalyticsApplicationOutput)[vs[1].(int)]
	}).(AnalyticsApplicationOutputOutput)
}

func init() {
	pulumi.RegisterOutputType(AnalyticsApplicationOutputOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputArrayOutput{})
}
