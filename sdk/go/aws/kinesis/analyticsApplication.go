// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kinesis

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AnalyticsApplication struct {
	pulumi.CustomResourceState

	Arn                      pulumi.StringOutput                                   `pulumi:"arn"`
	CloudwatchLoggingOptions AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput `pulumi:"cloudwatchLoggingOptions"`
	Code                     pulumi.StringPtrOutput                                `pulumi:"code"`
	CreateTimestamp          pulumi.StringOutput                                   `pulumi:"createTimestamp"`
	Description              pulumi.StringPtrOutput                                `pulumi:"description"`
	Inputs                   AnalyticsApplicationInputsPtrOutput                   `pulumi:"inputs"`
	LastUpdateTimestamp      pulumi.StringOutput                                   `pulumi:"lastUpdateTimestamp"`
	Name                     pulumi.StringOutput                                   `pulumi:"name"`
	Outputs                  AnalyticsApplicationOutputArrayOutput                 `pulumi:"outputs"`
	ReferenceDataSources     AnalyticsApplicationReferenceDataSourcesPtrOutput     `pulumi:"referenceDataSources"`
	Status                   pulumi.StringOutput                                   `pulumi:"status"`
	Tags                     pulumi.StringMapOutput                                `pulumi:"tags"`
	Version                  pulumi.IntOutput                                      `pulumi:"version"`
}

// NewAnalyticsApplication registers a new resource with the given unique name, arguments, and options.
func NewAnalyticsApplication(ctx *pulumi.Context,
	name string, args *AnalyticsApplicationArgs, opts ...pulumi.ResourceOption) (*AnalyticsApplication, error) {
	if args == nil {
		args = &AnalyticsApplicationArgs{}
	}
	var resource AnalyticsApplication
	err := ctx.RegisterResource("aws:kinesis/analyticsApplication:AnalyticsApplication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAnalyticsApplication gets an existing AnalyticsApplication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAnalyticsApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AnalyticsApplicationState, opts ...pulumi.ResourceOption) (*AnalyticsApplication, error) {
	var resource AnalyticsApplication
	err := ctx.ReadResource("aws:kinesis/analyticsApplication:AnalyticsApplication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AnalyticsApplication resources.
type analyticsApplicationState struct {
	Arn                      *string                                       `pulumi:"arn"`
	CloudwatchLoggingOptions *AnalyticsApplicationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	Code                     *string                                       `pulumi:"code"`
	CreateTimestamp          *string                                       `pulumi:"createTimestamp"`
	Description              *string                                       `pulumi:"description"`
	Inputs                   *AnalyticsApplicationInputs                   `pulumi:"inputs"`
	LastUpdateTimestamp      *string                                       `pulumi:"lastUpdateTimestamp"`
	Name                     *string                                       `pulumi:"name"`
	Outputs                  []AnalyticsApplicationOutput                  `pulumi:"outputs"`
	ReferenceDataSources     *AnalyticsApplicationReferenceDataSources     `pulumi:"referenceDataSources"`
	Status                   *string                                       `pulumi:"status"`
	Tags                     map[string]string                             `pulumi:"tags"`
	Version                  *int                                          `pulumi:"version"`
}

type AnalyticsApplicationState struct {
	Arn                      pulumi.StringPtrInput
	CloudwatchLoggingOptions AnalyticsApplicationCloudwatchLoggingOptionsPtrInput
	Code                     pulumi.StringPtrInput
	CreateTimestamp          pulumi.StringPtrInput
	Description              pulumi.StringPtrInput
	Inputs                   AnalyticsApplicationInputsPtrInput
	LastUpdateTimestamp      pulumi.StringPtrInput
	Name                     pulumi.StringPtrInput
	Outputs                  AnalyticsApplicationOutputArrayInput
	ReferenceDataSources     AnalyticsApplicationReferenceDataSourcesPtrInput
	Status                   pulumi.StringPtrInput
	Tags                     pulumi.StringMapInput
	Version                  pulumi.IntPtrInput
}

func (AnalyticsApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*analyticsApplicationState)(nil)).Elem()
}

type analyticsApplicationArgs struct {
	CloudwatchLoggingOptions *AnalyticsApplicationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	Code                     *string                                       `pulumi:"code"`
	Description              *string                                       `pulumi:"description"`
	Inputs                   *AnalyticsApplicationInputs                   `pulumi:"inputs"`
	Name                     *string                                       `pulumi:"name"`
	Outputs                  []AnalyticsApplicationOutput                  `pulumi:"outputs"`
	ReferenceDataSources     *AnalyticsApplicationReferenceDataSources     `pulumi:"referenceDataSources"`
	Tags                     map[string]string                             `pulumi:"tags"`
}

// The set of arguments for constructing a AnalyticsApplication resource.
type AnalyticsApplicationArgs struct {
	CloudwatchLoggingOptions AnalyticsApplicationCloudwatchLoggingOptionsPtrInput
	Code                     pulumi.StringPtrInput
	Description              pulumi.StringPtrInput
	Inputs                   AnalyticsApplicationInputsPtrInput
	Name                     pulumi.StringPtrInput
	Outputs                  AnalyticsApplicationOutputArrayInput
	ReferenceDataSources     AnalyticsApplicationReferenceDataSourcesPtrInput
	Tags                     pulumi.StringMapInput
}

func (AnalyticsApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*analyticsApplicationArgs)(nil)).Elem()
}
