// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kinesis

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type AnalyticsApplicationCloudwatchLoggingOptions struct {
	// The ARN of the Kinesis Analytics Application.
	Id string `pulumi:"id"`
	// The ARN of the CloudWatch Log Stream.
	LogStreamArn string `pulumi:"logStreamArn"`
	// The ARN of the IAM Role used to send application messages.
	RoleArn string `pulumi:"roleArn"`
}

type AnalyticsApplicationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToAnalyticsApplicationCloudwatchLoggingOptionsOutput() AnalyticsApplicationCloudwatchLoggingOptionsOutput
	ToAnalyticsApplicationCloudwatchLoggingOptionsOutputWithContext(context.Context) AnalyticsApplicationCloudwatchLoggingOptionsOutput
}

type AnalyticsApplicationCloudwatchLoggingOptionsArgs struct {
	// The ARN of the Kinesis Analytics Application.
	Id pulumi.StringInput `pulumi:"id"`
	// The ARN of the CloudWatch Log Stream.
	LogStreamArn pulumi.StringInput `pulumi:"logStreamArn"`
	// The ARN of the IAM Role used to send application messages.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i AnalyticsApplicationCloudwatchLoggingOptionsArgs) ToAnalyticsApplicationCloudwatchLoggingOptionsOutput() AnalyticsApplicationCloudwatchLoggingOptionsOutput {
	return i.ToAnalyticsApplicationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationCloudwatchLoggingOptionsArgs) ToAnalyticsApplicationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationCloudwatchLoggingOptionsOutput)
}

func (i AnalyticsApplicationCloudwatchLoggingOptionsArgs) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutput() AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return i.ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationCloudwatchLoggingOptionsArgs) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationCloudwatchLoggingOptionsOutput).ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

type AnalyticsApplicationCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutput() AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput
	ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput
}

type analyticsApplicationCloudwatchLoggingOptionsPtrType AnalyticsApplicationCloudwatchLoggingOptionsArgs

func AnalyticsApplicationCloudwatchLoggingOptionsPtr(v *AnalyticsApplicationCloudwatchLoggingOptionsArgs) AnalyticsApplicationCloudwatchLoggingOptionsPtrInput {
	return (*analyticsApplicationCloudwatchLoggingOptionsPtrType)(v)
}

func (*analyticsApplicationCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *analyticsApplicationCloudwatchLoggingOptionsPtrType) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutput() AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return i.ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationCloudwatchLoggingOptionsPtrType) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput)
}

type AnalyticsApplicationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsOutput() AnalyticsApplicationCloudwatchLoggingOptionsOutput {
	return o
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsOutput {
	return o
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutput() AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return o.ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationCloudwatchLoggingOptions) *AnalyticsApplicationCloudwatchLoggingOptions {
		return &v
	}).(AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput)
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationCloudwatchLoggingOptionsOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationCloudwatchLoggingOptions) string { return v.Id }).(pulumi.StringOutput)
}

// The ARN of the CloudWatch Log Stream.
func (o AnalyticsApplicationCloudwatchLoggingOptionsOutput) LogStreamArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationCloudwatchLoggingOptions) string { return v.LogStreamArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to send application messages.
func (o AnalyticsApplicationCloudwatchLoggingOptionsOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationCloudwatchLoggingOptions) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutput() AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput) Elem() AnalyticsApplicationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *AnalyticsApplicationCloudwatchLoggingOptions) AnalyticsApplicationCloudwatchLoggingOptions {
		return *v
	}).(AnalyticsApplicationCloudwatchLoggingOptionsOutput)
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationCloudwatchLoggingOptions) string { return v.Id }).(pulumi.StringOutput)
}

// The ARN of the CloudWatch Log Stream.
func (o AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput) LogStreamArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationCloudwatchLoggingOptions) string { return v.LogStreamArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to send application messages.
func (o AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationCloudwatchLoggingOptions) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationCloudwatchLoggingOptionsArgs struct {
	// The ARN of the Kinesis Analytics Application.
	Id *string `pulumi:"id"`
	// The ARN of the CloudWatch Log Stream.
	LogStreamArn string `pulumi:"logStreamArn"`
	// The ARN of the IAM Role used to send application messages.
	RoleArn string `pulumi:"roleArn"`
}

type AnalyticsApplicationCloudwatchLoggingOptionsArgsInput interface {
	pulumi.Input

	ToAnalyticsApplicationCloudwatchLoggingOptionsArgsOutput() AnalyticsApplicationCloudwatchLoggingOptionsArgsOutput
	ToAnalyticsApplicationCloudwatchLoggingOptionsArgsOutputWithContext(context.Context) AnalyticsApplicationCloudwatchLoggingOptionsArgsOutput
}

type AnalyticsApplicationCloudwatchLoggingOptionsArgsArgs struct {
	// The ARN of the Kinesis Analytics Application.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The ARN of the CloudWatch Log Stream.
	LogStreamArn pulumi.StringInput `pulumi:"logStreamArn"`
	// The ARN of the IAM Role used to send application messages.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationCloudwatchLoggingOptionsArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (i AnalyticsApplicationCloudwatchLoggingOptionsArgsArgs) ToAnalyticsApplicationCloudwatchLoggingOptionsArgsOutput() AnalyticsApplicationCloudwatchLoggingOptionsArgsOutput {
	return i.ToAnalyticsApplicationCloudwatchLoggingOptionsArgsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationCloudwatchLoggingOptionsArgsArgs) ToAnalyticsApplicationCloudwatchLoggingOptionsArgsOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationCloudwatchLoggingOptionsArgsOutput)
}

func (i AnalyticsApplicationCloudwatchLoggingOptionsArgsArgs) ToAnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutput() AnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutput {
	return i.ToAnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationCloudwatchLoggingOptionsArgsArgs) ToAnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationCloudwatchLoggingOptionsArgsOutput).ToAnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx)
}

type AnalyticsApplicationCloudwatchLoggingOptionsArgsPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutput() AnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutput
	ToAnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Context) AnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutput
}

type analyticsApplicationCloudwatchLoggingOptionsArgsPtrType AnalyticsApplicationCloudwatchLoggingOptionsArgsArgs

func AnalyticsApplicationCloudwatchLoggingOptionsArgsPtr(v *AnalyticsApplicationCloudwatchLoggingOptionsArgsArgs) AnalyticsApplicationCloudwatchLoggingOptionsArgsPtrInput {
	return (*analyticsApplicationCloudwatchLoggingOptionsArgsPtrType)(v)
}

func (*analyticsApplicationCloudwatchLoggingOptionsArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (i *analyticsApplicationCloudwatchLoggingOptionsArgsPtrType) ToAnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutput() AnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutput {
	return i.ToAnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationCloudwatchLoggingOptionsArgsPtrType) ToAnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutput)
}

type AnalyticsApplicationCloudwatchLoggingOptionsArgsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationCloudwatchLoggingOptionsArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsArgsOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsArgsOutput() AnalyticsApplicationCloudwatchLoggingOptionsArgsOutput {
	return o
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsArgsOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsArgsOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsArgsOutput {
	return o
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsArgsOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutput() AnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutput {
	return o.ToAnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsArgsOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationCloudwatchLoggingOptionsArgs) *AnalyticsApplicationCloudwatchLoggingOptionsArgs {
		return &v
	}).(AnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutput)
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationCloudwatchLoggingOptionsArgsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationCloudwatchLoggingOptionsArgs) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The ARN of the CloudWatch Log Stream.
func (o AnalyticsApplicationCloudwatchLoggingOptionsArgsOutput) LogStreamArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationCloudwatchLoggingOptionsArgs) string { return v.LogStreamArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to send application messages.
func (o AnalyticsApplicationCloudwatchLoggingOptionsArgsOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationCloudwatchLoggingOptionsArgs) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutput() AnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutput) Elem() AnalyticsApplicationCloudwatchLoggingOptionsArgsOutput {
	return o.ApplyT(func(v *AnalyticsApplicationCloudwatchLoggingOptionsArgs) AnalyticsApplicationCloudwatchLoggingOptionsArgs {
		return *v
	}).(AnalyticsApplicationCloudwatchLoggingOptionsArgsOutput)
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationCloudwatchLoggingOptionsArgs) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The ARN of the CloudWatch Log Stream.
func (o AnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutput) LogStreamArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationCloudwatchLoggingOptionsArgs) string { return v.LogStreamArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to send application messages.
func (o AnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationCloudwatchLoggingOptionsArgs) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationCloudwatchLoggingOptionsState struct {
	// The ARN of the Kinesis Analytics Application.
	Id *string `pulumi:"id"`
	// The ARN of the CloudWatch Log Stream.
	LogStreamArn string `pulumi:"logStreamArn"`
	// The ARN of the IAM Role used to send application messages.
	RoleArn string `pulumi:"roleArn"`
}

type AnalyticsApplicationCloudwatchLoggingOptionsStateInput interface {
	pulumi.Input

	ToAnalyticsApplicationCloudwatchLoggingOptionsStateOutput() AnalyticsApplicationCloudwatchLoggingOptionsStateOutput
	ToAnalyticsApplicationCloudwatchLoggingOptionsStateOutputWithContext(context.Context) AnalyticsApplicationCloudwatchLoggingOptionsStateOutput
}

type AnalyticsApplicationCloudwatchLoggingOptionsStateArgs struct {
	// The ARN of the Kinesis Analytics Application.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The ARN of the CloudWatch Log Stream.
	LogStreamArn pulumi.StringInput `pulumi:"logStreamArn"`
	// The ARN of the IAM Role used to send application messages.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationCloudwatchLoggingOptionsStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationCloudwatchLoggingOptionsState)(nil)).Elem()
}

func (i AnalyticsApplicationCloudwatchLoggingOptionsStateArgs) ToAnalyticsApplicationCloudwatchLoggingOptionsStateOutput() AnalyticsApplicationCloudwatchLoggingOptionsStateOutput {
	return i.ToAnalyticsApplicationCloudwatchLoggingOptionsStateOutputWithContext(context.Background())
}

func (i AnalyticsApplicationCloudwatchLoggingOptionsStateArgs) ToAnalyticsApplicationCloudwatchLoggingOptionsStateOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationCloudwatchLoggingOptionsStateOutput)
}

type AnalyticsApplicationCloudwatchLoggingOptionsStateOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationCloudwatchLoggingOptionsStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationCloudwatchLoggingOptionsState)(nil)).Elem()
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsStateOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsStateOutput() AnalyticsApplicationCloudwatchLoggingOptionsStateOutput {
	return o
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsStateOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsStateOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsStateOutput {
	return o
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationCloudwatchLoggingOptionsStateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationCloudwatchLoggingOptionsState) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The ARN of the CloudWatch Log Stream.
func (o AnalyticsApplicationCloudwatchLoggingOptionsStateOutput) LogStreamArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationCloudwatchLoggingOptionsState) string { return v.LogStreamArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to send application messages.
func (o AnalyticsApplicationCloudwatchLoggingOptionsStateOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationCloudwatchLoggingOptionsState) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputs struct {
	// The ARN of the Kinesis Analytics Application.
	Id string `pulumi:"id"`
	// The Kinesis Firehose configuration for the streaming source. Conflicts with `kinesisStream`.
	// See Kinesis Firehose below for more details.
	KinesisFirehose *AnalyticsApplicationInputsKinesisFirehose `pulumi:"kinesisFirehose"`
	// The Kinesis Stream configuration for the streaming source. Conflicts with `kinesisFirehose`.
	// See Kinesis Stream below for more details.
	KinesisStream *AnalyticsApplicationInputsKinesisStream `pulumi:"kinesisStream"`
	// The Name Prefix to use when creating an in-application stream.
	NamePrefix string `pulumi:"namePrefix"`
	// The number of Parallel in-application streams to create.
	// See Parallelism below for more details.
	Parallelism *AnalyticsApplicationInputsParallelism `pulumi:"parallelism"`
	// The Processing Configuration to transform records as they are received from the stream.
	// See Processing Configuration below for more details.
	ProcessingConfiguration *AnalyticsApplicationInputsProcessingConfiguration `pulumi:"processingConfiguration"`
	// The Schema format of the data in the streaming source. See Source Schema below for more details.
	Schema                         AnalyticsApplicationInputsSchema                          `pulumi:"schema"`
	StartingPositionConfigurations []AnalyticsApplicationInputsStartingPositionConfiguration `pulumi:"startingPositionConfigurations"`
	StreamNames                    []string                                                  `pulumi:"streamNames"`
}

type AnalyticsApplicationInputsInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsOutput() AnalyticsApplicationInputsOutput
	ToAnalyticsApplicationInputsOutputWithContext(context.Context) AnalyticsApplicationInputsOutput
}

type AnalyticsApplicationInputsArgs struct {
	// The ARN of the Kinesis Analytics Application.
	Id pulumi.StringInput `pulumi:"id"`
	// The Kinesis Firehose configuration for the streaming source. Conflicts with `kinesisStream`.
	// See Kinesis Firehose below for more details.
	KinesisFirehose AnalyticsApplicationInputsKinesisFirehosePtrInput `pulumi:"kinesisFirehose"`
	// The Kinesis Stream configuration for the streaming source. Conflicts with `kinesisFirehose`.
	// See Kinesis Stream below for more details.
	KinesisStream AnalyticsApplicationInputsKinesisStreamPtrInput `pulumi:"kinesisStream"`
	// The Name Prefix to use when creating an in-application stream.
	NamePrefix pulumi.StringInput `pulumi:"namePrefix"`
	// The number of Parallel in-application streams to create.
	// See Parallelism below for more details.
	Parallelism AnalyticsApplicationInputsParallelismPtrInput `pulumi:"parallelism"`
	// The Processing Configuration to transform records as they are received from the stream.
	// See Processing Configuration below for more details.
	ProcessingConfiguration AnalyticsApplicationInputsProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// The Schema format of the data in the streaming source. See Source Schema below for more details.
	Schema                         AnalyticsApplicationInputsSchemaInput                             `pulumi:"schema"`
	StartingPositionConfigurations AnalyticsApplicationInputsStartingPositionConfigurationArrayInput `pulumi:"startingPositionConfigurations"`
	StreamNames                    pulumi.StringArrayInput                                           `pulumi:"streamNames"`
}

func (AnalyticsApplicationInputsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputs)(nil)).Elem()
}

func (i AnalyticsApplicationInputsArgs) ToAnalyticsApplicationInputsOutput() AnalyticsApplicationInputsOutput {
	return i.ToAnalyticsApplicationInputsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsArgs) ToAnalyticsApplicationInputsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsOutput)
}

func (i AnalyticsApplicationInputsArgs) ToAnalyticsApplicationInputsPtrOutput() AnalyticsApplicationInputsPtrOutput {
	return i.ToAnalyticsApplicationInputsPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsArgs) ToAnalyticsApplicationInputsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsOutput).ToAnalyticsApplicationInputsPtrOutputWithContext(ctx)
}

type AnalyticsApplicationInputsPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsPtrOutput() AnalyticsApplicationInputsPtrOutput
	ToAnalyticsApplicationInputsPtrOutputWithContext(context.Context) AnalyticsApplicationInputsPtrOutput
}

type analyticsApplicationInputsPtrType AnalyticsApplicationInputsArgs

func AnalyticsApplicationInputsPtr(v *AnalyticsApplicationInputsArgs) AnalyticsApplicationInputsPtrInput {
	return (*analyticsApplicationInputsPtrType)(v)
}

func (*analyticsApplicationInputsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputs)(nil)).Elem()
}

func (i *analyticsApplicationInputsPtrType) ToAnalyticsApplicationInputsPtrOutput() AnalyticsApplicationInputsPtrOutput {
	return i.ToAnalyticsApplicationInputsPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsPtrType) ToAnalyticsApplicationInputsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsPtrOutput)
}

type AnalyticsApplicationInputsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputs)(nil)).Elem()
}

func (o AnalyticsApplicationInputsOutput) ToAnalyticsApplicationInputsOutput() AnalyticsApplicationInputsOutput {
	return o
}

func (o AnalyticsApplicationInputsOutput) ToAnalyticsApplicationInputsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsOutput {
	return o
}

func (o AnalyticsApplicationInputsOutput) ToAnalyticsApplicationInputsPtrOutput() AnalyticsApplicationInputsPtrOutput {
	return o.ToAnalyticsApplicationInputsPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsOutput) ToAnalyticsApplicationInputsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) *AnalyticsApplicationInputs {
		return &v
	}).(AnalyticsApplicationInputsPtrOutput)
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationInputsOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) string { return v.Id }).(pulumi.StringOutput)
}

// The Kinesis Firehose configuration for the streaming source. Conflicts with `kinesisStream`.
// See Kinesis Firehose below for more details.
func (o AnalyticsApplicationInputsOutput) KinesisFirehose() AnalyticsApplicationInputsKinesisFirehosePtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) *AnalyticsApplicationInputsKinesisFirehose {
		return v.KinesisFirehose
	}).(AnalyticsApplicationInputsKinesisFirehosePtrOutput)
}

// The Kinesis Stream configuration for the streaming source. Conflicts with `kinesisFirehose`.
// See Kinesis Stream below for more details.
func (o AnalyticsApplicationInputsOutput) KinesisStream() AnalyticsApplicationInputsKinesisStreamPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) *AnalyticsApplicationInputsKinesisStream { return v.KinesisStream }).(AnalyticsApplicationInputsKinesisStreamPtrOutput)
}

// The Name Prefix to use when creating an in-application stream.
func (o AnalyticsApplicationInputsOutput) NamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) string { return v.NamePrefix }).(pulumi.StringOutput)
}

// The number of Parallel in-application streams to create.
// See Parallelism below for more details.
func (o AnalyticsApplicationInputsOutput) Parallelism() AnalyticsApplicationInputsParallelismPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) *AnalyticsApplicationInputsParallelism { return v.Parallelism }).(AnalyticsApplicationInputsParallelismPtrOutput)
}

// The Processing Configuration to transform records as they are received from the stream.
// See Processing Configuration below for more details.
func (o AnalyticsApplicationInputsOutput) ProcessingConfiguration() AnalyticsApplicationInputsProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) *AnalyticsApplicationInputsProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(AnalyticsApplicationInputsProcessingConfigurationPtrOutput)
}

// The Schema format of the data in the streaming source. See Source Schema below for more details.
func (o AnalyticsApplicationInputsOutput) Schema() AnalyticsApplicationInputsSchemaOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) AnalyticsApplicationInputsSchema { return v.Schema }).(AnalyticsApplicationInputsSchemaOutput)
}

func (o AnalyticsApplicationInputsOutput) StartingPositionConfigurations() AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) []AnalyticsApplicationInputsStartingPositionConfiguration {
		return v.StartingPositionConfigurations
	}).(AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput)
}

func (o AnalyticsApplicationInputsOutput) StreamNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) []string { return v.StreamNames }).(pulumi.StringArrayOutput)
}

type AnalyticsApplicationInputsPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputs)(nil)).Elem()
}

func (o AnalyticsApplicationInputsPtrOutput) ToAnalyticsApplicationInputsPtrOutput() AnalyticsApplicationInputsPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsPtrOutput) ToAnalyticsApplicationInputsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsPtrOutput) Elem() AnalyticsApplicationInputsOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputs) AnalyticsApplicationInputs { return *v }).(AnalyticsApplicationInputsOutput)
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationInputsPtrOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) string { return v.Id }).(pulumi.StringOutput)
}

// The Kinesis Firehose configuration for the streaming source. Conflicts with `kinesisStream`.
// See Kinesis Firehose below for more details.
func (o AnalyticsApplicationInputsPtrOutput) KinesisFirehose() AnalyticsApplicationInputsKinesisFirehosePtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) *AnalyticsApplicationInputsKinesisFirehose {
		return v.KinesisFirehose
	}).(AnalyticsApplicationInputsKinesisFirehosePtrOutput)
}

// The Kinesis Stream configuration for the streaming source. Conflicts with `kinesisFirehose`.
// See Kinesis Stream below for more details.
func (o AnalyticsApplicationInputsPtrOutput) KinesisStream() AnalyticsApplicationInputsKinesisStreamPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) *AnalyticsApplicationInputsKinesisStream { return v.KinesisStream }).(AnalyticsApplicationInputsKinesisStreamPtrOutput)
}

// The Name Prefix to use when creating an in-application stream.
func (o AnalyticsApplicationInputsPtrOutput) NamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) string { return v.NamePrefix }).(pulumi.StringOutput)
}

// The number of Parallel in-application streams to create.
// See Parallelism below for more details.
func (o AnalyticsApplicationInputsPtrOutput) Parallelism() AnalyticsApplicationInputsParallelismPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) *AnalyticsApplicationInputsParallelism { return v.Parallelism }).(AnalyticsApplicationInputsParallelismPtrOutput)
}

// The Processing Configuration to transform records as they are received from the stream.
// See Processing Configuration below for more details.
func (o AnalyticsApplicationInputsPtrOutput) ProcessingConfiguration() AnalyticsApplicationInputsProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) *AnalyticsApplicationInputsProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(AnalyticsApplicationInputsProcessingConfigurationPtrOutput)
}

// The Schema format of the data in the streaming source. See Source Schema below for more details.
func (o AnalyticsApplicationInputsPtrOutput) Schema() AnalyticsApplicationInputsSchemaOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) AnalyticsApplicationInputsSchema { return v.Schema }).(AnalyticsApplicationInputsSchemaOutput)
}

func (o AnalyticsApplicationInputsPtrOutput) StartingPositionConfigurations() AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) []AnalyticsApplicationInputsStartingPositionConfiguration {
		return v.StartingPositionConfigurations
	}).(AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput)
}

func (o AnalyticsApplicationInputsPtrOutput) StreamNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputs) []string { return v.StreamNames }).(pulumi.StringArrayOutput)
}

type AnalyticsApplicationInputsArgs struct {
	// The ARN of the Kinesis Analytics Application.
	Id *string `pulumi:"id"`
	// The Kinesis Firehose configuration for the streaming source. Conflicts with `kinesisStream`.
	// See Kinesis Firehose below for more details.
	KinesisFirehose *AnalyticsApplicationInputsKinesisFirehoseArgs `pulumi:"kinesisFirehose"`
	// The Kinesis Stream configuration for the streaming source. Conflicts with `kinesisFirehose`.
	// See Kinesis Stream below for more details.
	KinesisStream *AnalyticsApplicationInputsKinesisStreamArgs `pulumi:"kinesisStream"`
	// The Name Prefix to use when creating an in-application stream.
	NamePrefix string `pulumi:"namePrefix"`
	// The number of Parallel in-application streams to create.
	// See Parallelism below for more details.
	Parallelism *AnalyticsApplicationInputsParallelismArgs `pulumi:"parallelism"`
	// The Processing Configuration to transform records as they are received from the stream.
	// See Processing Configuration below for more details.
	ProcessingConfiguration *AnalyticsApplicationInputsProcessingConfigurationArgs `pulumi:"processingConfiguration"`
	// The Schema format of the data in the streaming source. See Source Schema below for more details.
	Schema                         AnalyticsApplicationInputsSchemaArgs                          `pulumi:"schema"`
	StartingPositionConfigurations []AnalyticsApplicationInputsStartingPositionConfigurationArgs `pulumi:"startingPositionConfigurations"`
	StreamNames                    []string                                                      `pulumi:"streamNames"`
}

type AnalyticsApplicationInputsArgsInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsArgsOutput() AnalyticsApplicationInputsArgsOutput
	ToAnalyticsApplicationInputsArgsOutputWithContext(context.Context) AnalyticsApplicationInputsArgsOutput
}

type AnalyticsApplicationInputsArgsArgs struct {
	// The ARN of the Kinesis Analytics Application.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Kinesis Firehose configuration for the streaming source. Conflicts with `kinesisStream`.
	// See Kinesis Firehose below for more details.
	KinesisFirehose AnalyticsApplicationInputsKinesisFirehoseArgsPtrInput `pulumi:"kinesisFirehose"`
	// The Kinesis Stream configuration for the streaming source. Conflicts with `kinesisFirehose`.
	// See Kinesis Stream below for more details.
	KinesisStream AnalyticsApplicationInputsKinesisStreamArgsPtrInput `pulumi:"kinesisStream"`
	// The Name Prefix to use when creating an in-application stream.
	NamePrefix pulumi.StringInput `pulumi:"namePrefix"`
	// The number of Parallel in-application streams to create.
	// See Parallelism below for more details.
	Parallelism AnalyticsApplicationInputsParallelismArgsPtrInput `pulumi:"parallelism"`
	// The Processing Configuration to transform records as they are received from the stream.
	// See Processing Configuration below for more details.
	ProcessingConfiguration AnalyticsApplicationInputsProcessingConfigurationArgsPtrInput `pulumi:"processingConfiguration"`
	// The Schema format of the data in the streaming source. See Source Schema below for more details.
	Schema                         AnalyticsApplicationInputsSchemaArgsInput                             `pulumi:"schema"`
	StartingPositionConfigurations AnalyticsApplicationInputsStartingPositionConfigurationArgsArrayInput `pulumi:"startingPositionConfigurations"`
	StreamNames                    pulumi.StringArrayInput                                               `pulumi:"streamNames"`
}

func (AnalyticsApplicationInputsArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsArgs)(nil)).Elem()
}

func (i AnalyticsApplicationInputsArgsArgs) ToAnalyticsApplicationInputsArgsOutput() AnalyticsApplicationInputsArgsOutput {
	return i.ToAnalyticsApplicationInputsArgsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsArgsArgs) ToAnalyticsApplicationInputsArgsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsArgsOutput)
}

func (i AnalyticsApplicationInputsArgsArgs) ToAnalyticsApplicationInputsArgsPtrOutput() AnalyticsApplicationInputsArgsPtrOutput {
	return i.ToAnalyticsApplicationInputsArgsPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsArgsArgs) ToAnalyticsApplicationInputsArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsArgsOutput).ToAnalyticsApplicationInputsArgsPtrOutputWithContext(ctx)
}

type AnalyticsApplicationInputsArgsPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsArgsPtrOutput() AnalyticsApplicationInputsArgsPtrOutput
	ToAnalyticsApplicationInputsArgsPtrOutputWithContext(context.Context) AnalyticsApplicationInputsArgsPtrOutput
}

type analyticsApplicationInputsArgsPtrType AnalyticsApplicationInputsArgsArgs

func AnalyticsApplicationInputsArgsPtr(v *AnalyticsApplicationInputsArgsArgs) AnalyticsApplicationInputsArgsPtrInput {
	return (*analyticsApplicationInputsArgsPtrType)(v)
}

func (*analyticsApplicationInputsArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsArgs)(nil)).Elem()
}

func (i *analyticsApplicationInputsArgsPtrType) ToAnalyticsApplicationInputsArgsPtrOutput() AnalyticsApplicationInputsArgsPtrOutput {
	return i.ToAnalyticsApplicationInputsArgsPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsArgsPtrType) ToAnalyticsApplicationInputsArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsArgsPtrOutput)
}

type AnalyticsApplicationInputsArgsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsArgs)(nil)).Elem()
}

func (o AnalyticsApplicationInputsArgsOutput) ToAnalyticsApplicationInputsArgsOutput() AnalyticsApplicationInputsArgsOutput {
	return o
}

func (o AnalyticsApplicationInputsArgsOutput) ToAnalyticsApplicationInputsArgsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsArgsOutput {
	return o
}

func (o AnalyticsApplicationInputsArgsOutput) ToAnalyticsApplicationInputsArgsPtrOutput() AnalyticsApplicationInputsArgsPtrOutput {
	return o.ToAnalyticsApplicationInputsArgsPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsArgsOutput) ToAnalyticsApplicationInputsArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsArgs) *AnalyticsApplicationInputsArgs {
		return &v
	}).(AnalyticsApplicationInputsArgsPtrOutput)
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationInputsArgsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsArgs) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Kinesis Firehose configuration for the streaming source. Conflicts with `kinesisStream`.
// See Kinesis Firehose below for more details.
func (o AnalyticsApplicationInputsArgsOutput) KinesisFirehose() AnalyticsApplicationInputsKinesisFirehoseArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsArgs) *AnalyticsApplicationInputsKinesisFirehoseArgs {
		return v.KinesisFirehose
	}).(AnalyticsApplicationInputsKinesisFirehoseArgsPtrOutput)
}

// The Kinesis Stream configuration for the streaming source. Conflicts with `kinesisFirehose`.
// See Kinesis Stream below for more details.
func (o AnalyticsApplicationInputsArgsOutput) KinesisStream() AnalyticsApplicationInputsKinesisStreamArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsArgs) *AnalyticsApplicationInputsKinesisStreamArgs {
		return v.KinesisStream
	}).(AnalyticsApplicationInputsKinesisStreamArgsPtrOutput)
}

// The Name Prefix to use when creating an in-application stream.
func (o AnalyticsApplicationInputsArgsOutput) NamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsArgs) string { return v.NamePrefix }).(pulumi.StringOutput)
}

// The number of Parallel in-application streams to create.
// See Parallelism below for more details.
func (o AnalyticsApplicationInputsArgsOutput) Parallelism() AnalyticsApplicationInputsParallelismArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsArgs) *AnalyticsApplicationInputsParallelismArgs {
		return v.Parallelism
	}).(AnalyticsApplicationInputsParallelismArgsPtrOutput)
}

// The Processing Configuration to transform records as they are received from the stream.
// See Processing Configuration below for more details.
func (o AnalyticsApplicationInputsArgsOutput) ProcessingConfiguration() AnalyticsApplicationInputsProcessingConfigurationArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsArgs) *AnalyticsApplicationInputsProcessingConfigurationArgs {
		return v.ProcessingConfiguration
	}).(AnalyticsApplicationInputsProcessingConfigurationArgsPtrOutput)
}

// The Schema format of the data in the streaming source. See Source Schema below for more details.
func (o AnalyticsApplicationInputsArgsOutput) Schema() AnalyticsApplicationInputsSchemaArgsOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsArgs) AnalyticsApplicationInputsSchemaArgs { return v.Schema }).(AnalyticsApplicationInputsSchemaArgsOutput)
}

func (o AnalyticsApplicationInputsArgsOutput) StartingPositionConfigurations() AnalyticsApplicationInputsStartingPositionConfigurationArgsArrayOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsArgs) []AnalyticsApplicationInputsStartingPositionConfigurationArgs {
		return v.StartingPositionConfigurations
	}).(AnalyticsApplicationInputsStartingPositionConfigurationArgsArrayOutput)
}

func (o AnalyticsApplicationInputsArgsOutput) StreamNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsArgs) []string { return v.StreamNames }).(pulumi.StringArrayOutput)
}

type AnalyticsApplicationInputsArgsPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsArgs)(nil)).Elem()
}

func (o AnalyticsApplicationInputsArgsPtrOutput) ToAnalyticsApplicationInputsArgsPtrOutput() AnalyticsApplicationInputsArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsArgsPtrOutput) ToAnalyticsApplicationInputsArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsArgsPtrOutput) Elem() AnalyticsApplicationInputsArgsOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsArgs) AnalyticsApplicationInputsArgs { return *v }).(AnalyticsApplicationInputsArgsOutput)
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationInputsArgsPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsArgs) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Kinesis Firehose configuration for the streaming source. Conflicts with `kinesisStream`.
// See Kinesis Firehose below for more details.
func (o AnalyticsApplicationInputsArgsPtrOutput) KinesisFirehose() AnalyticsApplicationInputsKinesisFirehoseArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsArgs) *AnalyticsApplicationInputsKinesisFirehoseArgs {
		return v.KinesisFirehose
	}).(AnalyticsApplicationInputsKinesisFirehoseArgsPtrOutput)
}

// The Kinesis Stream configuration for the streaming source. Conflicts with `kinesisFirehose`.
// See Kinesis Stream below for more details.
func (o AnalyticsApplicationInputsArgsPtrOutput) KinesisStream() AnalyticsApplicationInputsKinesisStreamArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsArgs) *AnalyticsApplicationInputsKinesisStreamArgs {
		return v.KinesisStream
	}).(AnalyticsApplicationInputsKinesisStreamArgsPtrOutput)
}

// The Name Prefix to use when creating an in-application stream.
func (o AnalyticsApplicationInputsArgsPtrOutput) NamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsArgs) string { return v.NamePrefix }).(pulumi.StringOutput)
}

// The number of Parallel in-application streams to create.
// See Parallelism below for more details.
func (o AnalyticsApplicationInputsArgsPtrOutput) Parallelism() AnalyticsApplicationInputsParallelismArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsArgs) *AnalyticsApplicationInputsParallelismArgs {
		return v.Parallelism
	}).(AnalyticsApplicationInputsParallelismArgsPtrOutput)
}

// The Processing Configuration to transform records as they are received from the stream.
// See Processing Configuration below for more details.
func (o AnalyticsApplicationInputsArgsPtrOutput) ProcessingConfiguration() AnalyticsApplicationInputsProcessingConfigurationArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsArgs) *AnalyticsApplicationInputsProcessingConfigurationArgs {
		return v.ProcessingConfiguration
	}).(AnalyticsApplicationInputsProcessingConfigurationArgsPtrOutput)
}

// The Schema format of the data in the streaming source. See Source Schema below for more details.
func (o AnalyticsApplicationInputsArgsPtrOutput) Schema() AnalyticsApplicationInputsSchemaArgsOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsArgs) AnalyticsApplicationInputsSchemaArgs { return v.Schema }).(AnalyticsApplicationInputsSchemaArgsOutput)
}

func (o AnalyticsApplicationInputsArgsPtrOutput) StartingPositionConfigurations() AnalyticsApplicationInputsStartingPositionConfigurationArgsArrayOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsArgs) []AnalyticsApplicationInputsStartingPositionConfigurationArgs {
		return v.StartingPositionConfigurations
	}).(AnalyticsApplicationInputsStartingPositionConfigurationArgsArrayOutput)
}

func (o AnalyticsApplicationInputsArgsPtrOutput) StreamNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsArgs) []string { return v.StreamNames }).(pulumi.StringArrayOutput)
}

type AnalyticsApplicationInputsKinesisFirehose struct {
	// The ARN of the Kinesis Firehose delivery stream.
	ResourceArn string `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn string `pulumi:"roleArn"`
}

type AnalyticsApplicationInputsKinesisFirehoseInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsKinesisFirehoseOutput() AnalyticsApplicationInputsKinesisFirehoseOutput
	ToAnalyticsApplicationInputsKinesisFirehoseOutputWithContext(context.Context) AnalyticsApplicationInputsKinesisFirehoseOutput
}

type AnalyticsApplicationInputsKinesisFirehoseArgs struct {
	// The ARN of the Kinesis Firehose delivery stream.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationInputsKinesisFirehoseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsKinesisFirehose)(nil)).Elem()
}

func (i AnalyticsApplicationInputsKinesisFirehoseArgs) ToAnalyticsApplicationInputsKinesisFirehoseOutput() AnalyticsApplicationInputsKinesisFirehoseOutput {
	return i.ToAnalyticsApplicationInputsKinesisFirehoseOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsKinesisFirehoseArgs) ToAnalyticsApplicationInputsKinesisFirehoseOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisFirehoseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsKinesisFirehoseOutput)
}

func (i AnalyticsApplicationInputsKinesisFirehoseArgs) ToAnalyticsApplicationInputsKinesisFirehosePtrOutput() AnalyticsApplicationInputsKinesisFirehosePtrOutput {
	return i.ToAnalyticsApplicationInputsKinesisFirehosePtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsKinesisFirehoseArgs) ToAnalyticsApplicationInputsKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsKinesisFirehoseOutput).ToAnalyticsApplicationInputsKinesisFirehosePtrOutputWithContext(ctx)
}

type AnalyticsApplicationInputsKinesisFirehosePtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsKinesisFirehosePtrOutput() AnalyticsApplicationInputsKinesisFirehosePtrOutput
	ToAnalyticsApplicationInputsKinesisFirehosePtrOutputWithContext(context.Context) AnalyticsApplicationInputsKinesisFirehosePtrOutput
}

type analyticsApplicationInputsKinesisFirehosePtrType AnalyticsApplicationInputsKinesisFirehoseArgs

func AnalyticsApplicationInputsKinesisFirehosePtr(v *AnalyticsApplicationInputsKinesisFirehoseArgs) AnalyticsApplicationInputsKinesisFirehosePtrInput {
	return (*analyticsApplicationInputsKinesisFirehosePtrType)(v)
}

func (*analyticsApplicationInputsKinesisFirehosePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsKinesisFirehose)(nil)).Elem()
}

func (i *analyticsApplicationInputsKinesisFirehosePtrType) ToAnalyticsApplicationInputsKinesisFirehosePtrOutput() AnalyticsApplicationInputsKinesisFirehosePtrOutput {
	return i.ToAnalyticsApplicationInputsKinesisFirehosePtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsKinesisFirehosePtrType) ToAnalyticsApplicationInputsKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsKinesisFirehosePtrOutput)
}

type AnalyticsApplicationInputsKinesisFirehoseOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsKinesisFirehoseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsKinesisFirehose)(nil)).Elem()
}

func (o AnalyticsApplicationInputsKinesisFirehoseOutput) ToAnalyticsApplicationInputsKinesisFirehoseOutput() AnalyticsApplicationInputsKinesisFirehoseOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisFirehoseOutput) ToAnalyticsApplicationInputsKinesisFirehoseOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisFirehoseOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisFirehoseOutput) ToAnalyticsApplicationInputsKinesisFirehosePtrOutput() AnalyticsApplicationInputsKinesisFirehosePtrOutput {
	return o.ToAnalyticsApplicationInputsKinesisFirehosePtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsKinesisFirehoseOutput) ToAnalyticsApplicationInputsKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisFirehosePtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisFirehose) *AnalyticsApplicationInputsKinesisFirehose {
		return &v
	}).(AnalyticsApplicationInputsKinesisFirehosePtrOutput)
}

// The ARN of the Kinesis Firehose delivery stream.
func (o AnalyticsApplicationInputsKinesisFirehoseOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisFirehose) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationInputsKinesisFirehoseOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisFirehose) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsKinesisFirehosePtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsKinesisFirehosePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsKinesisFirehose)(nil)).Elem()
}

func (o AnalyticsApplicationInputsKinesisFirehosePtrOutput) ToAnalyticsApplicationInputsKinesisFirehosePtrOutput() AnalyticsApplicationInputsKinesisFirehosePtrOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisFirehosePtrOutput) ToAnalyticsApplicationInputsKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisFirehosePtrOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisFirehosePtrOutput) Elem() AnalyticsApplicationInputsKinesisFirehoseOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsKinesisFirehose) AnalyticsApplicationInputsKinesisFirehose {
		return *v
	}).(AnalyticsApplicationInputsKinesisFirehoseOutput)
}

// The ARN of the Kinesis Firehose delivery stream.
func (o AnalyticsApplicationInputsKinesisFirehosePtrOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisFirehose) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationInputsKinesisFirehosePtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisFirehose) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsKinesisFirehoseArgs struct {
	// The ARN of the Kinesis Firehose delivery stream.
	ResourceArn string `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn string `pulumi:"roleArn"`
}

type AnalyticsApplicationInputsKinesisFirehoseArgsInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsKinesisFirehoseArgsOutput() AnalyticsApplicationInputsKinesisFirehoseArgsOutput
	ToAnalyticsApplicationInputsKinesisFirehoseArgsOutputWithContext(context.Context) AnalyticsApplicationInputsKinesisFirehoseArgsOutput
}

type AnalyticsApplicationInputsKinesisFirehoseArgsArgs struct {
	// The ARN of the Kinesis Firehose delivery stream.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationInputsKinesisFirehoseArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsKinesisFirehoseArgs)(nil)).Elem()
}

func (i AnalyticsApplicationInputsKinesisFirehoseArgsArgs) ToAnalyticsApplicationInputsKinesisFirehoseArgsOutput() AnalyticsApplicationInputsKinesisFirehoseArgsOutput {
	return i.ToAnalyticsApplicationInputsKinesisFirehoseArgsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsKinesisFirehoseArgsArgs) ToAnalyticsApplicationInputsKinesisFirehoseArgsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisFirehoseArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsKinesisFirehoseArgsOutput)
}

func (i AnalyticsApplicationInputsKinesisFirehoseArgsArgs) ToAnalyticsApplicationInputsKinesisFirehoseArgsPtrOutput() AnalyticsApplicationInputsKinesisFirehoseArgsPtrOutput {
	return i.ToAnalyticsApplicationInputsKinesisFirehoseArgsPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsKinesisFirehoseArgsArgs) ToAnalyticsApplicationInputsKinesisFirehoseArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisFirehoseArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsKinesisFirehoseArgsOutput).ToAnalyticsApplicationInputsKinesisFirehoseArgsPtrOutputWithContext(ctx)
}

type AnalyticsApplicationInputsKinesisFirehoseArgsPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsKinesisFirehoseArgsPtrOutput() AnalyticsApplicationInputsKinesisFirehoseArgsPtrOutput
	ToAnalyticsApplicationInputsKinesisFirehoseArgsPtrOutputWithContext(context.Context) AnalyticsApplicationInputsKinesisFirehoseArgsPtrOutput
}

type analyticsApplicationInputsKinesisFirehoseArgsPtrType AnalyticsApplicationInputsKinesisFirehoseArgsArgs

func AnalyticsApplicationInputsKinesisFirehoseArgsPtr(v *AnalyticsApplicationInputsKinesisFirehoseArgsArgs) AnalyticsApplicationInputsKinesisFirehoseArgsPtrInput {
	return (*analyticsApplicationInputsKinesisFirehoseArgsPtrType)(v)
}

func (*analyticsApplicationInputsKinesisFirehoseArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsKinesisFirehoseArgs)(nil)).Elem()
}

func (i *analyticsApplicationInputsKinesisFirehoseArgsPtrType) ToAnalyticsApplicationInputsKinesisFirehoseArgsPtrOutput() AnalyticsApplicationInputsKinesisFirehoseArgsPtrOutput {
	return i.ToAnalyticsApplicationInputsKinesisFirehoseArgsPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsKinesisFirehoseArgsPtrType) ToAnalyticsApplicationInputsKinesisFirehoseArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisFirehoseArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsKinesisFirehoseArgsPtrOutput)
}

type AnalyticsApplicationInputsKinesisFirehoseArgsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsKinesisFirehoseArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsKinesisFirehoseArgs)(nil)).Elem()
}

func (o AnalyticsApplicationInputsKinesisFirehoseArgsOutput) ToAnalyticsApplicationInputsKinesisFirehoseArgsOutput() AnalyticsApplicationInputsKinesisFirehoseArgsOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisFirehoseArgsOutput) ToAnalyticsApplicationInputsKinesisFirehoseArgsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisFirehoseArgsOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisFirehoseArgsOutput) ToAnalyticsApplicationInputsKinesisFirehoseArgsPtrOutput() AnalyticsApplicationInputsKinesisFirehoseArgsPtrOutput {
	return o.ToAnalyticsApplicationInputsKinesisFirehoseArgsPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsKinesisFirehoseArgsOutput) ToAnalyticsApplicationInputsKinesisFirehoseArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisFirehoseArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisFirehoseArgs) *AnalyticsApplicationInputsKinesisFirehoseArgs {
		return &v
	}).(AnalyticsApplicationInputsKinesisFirehoseArgsPtrOutput)
}

// The ARN of the Kinesis Firehose delivery stream.
func (o AnalyticsApplicationInputsKinesisFirehoseArgsOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisFirehoseArgs) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationInputsKinesisFirehoseArgsOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisFirehoseArgs) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsKinesisFirehoseArgsPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsKinesisFirehoseArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsKinesisFirehoseArgs)(nil)).Elem()
}

func (o AnalyticsApplicationInputsKinesisFirehoseArgsPtrOutput) ToAnalyticsApplicationInputsKinesisFirehoseArgsPtrOutput() AnalyticsApplicationInputsKinesisFirehoseArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisFirehoseArgsPtrOutput) ToAnalyticsApplicationInputsKinesisFirehoseArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisFirehoseArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisFirehoseArgsPtrOutput) Elem() AnalyticsApplicationInputsKinesisFirehoseArgsOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsKinesisFirehoseArgs) AnalyticsApplicationInputsKinesisFirehoseArgs {
		return *v
	}).(AnalyticsApplicationInputsKinesisFirehoseArgsOutput)
}

// The ARN of the Kinesis Firehose delivery stream.
func (o AnalyticsApplicationInputsKinesisFirehoseArgsPtrOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisFirehoseArgs) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationInputsKinesisFirehoseArgsPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisFirehoseArgs) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsKinesisStream struct {
	// The ARN of the Kinesis Stream.
	ResourceArn string `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn string `pulumi:"roleArn"`
}

type AnalyticsApplicationInputsKinesisStreamInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsKinesisStreamOutput() AnalyticsApplicationInputsKinesisStreamOutput
	ToAnalyticsApplicationInputsKinesisStreamOutputWithContext(context.Context) AnalyticsApplicationInputsKinesisStreamOutput
}

type AnalyticsApplicationInputsKinesisStreamArgs struct {
	// The ARN of the Kinesis Stream.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationInputsKinesisStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsKinesisStream)(nil)).Elem()
}

func (i AnalyticsApplicationInputsKinesisStreamArgs) ToAnalyticsApplicationInputsKinesisStreamOutput() AnalyticsApplicationInputsKinesisStreamOutput {
	return i.ToAnalyticsApplicationInputsKinesisStreamOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsKinesisStreamArgs) ToAnalyticsApplicationInputsKinesisStreamOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsKinesisStreamOutput)
}

func (i AnalyticsApplicationInputsKinesisStreamArgs) ToAnalyticsApplicationInputsKinesisStreamPtrOutput() AnalyticsApplicationInputsKinesisStreamPtrOutput {
	return i.ToAnalyticsApplicationInputsKinesisStreamPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsKinesisStreamArgs) ToAnalyticsApplicationInputsKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisStreamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsKinesisStreamOutput).ToAnalyticsApplicationInputsKinesisStreamPtrOutputWithContext(ctx)
}

type AnalyticsApplicationInputsKinesisStreamPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsKinesisStreamPtrOutput() AnalyticsApplicationInputsKinesisStreamPtrOutput
	ToAnalyticsApplicationInputsKinesisStreamPtrOutputWithContext(context.Context) AnalyticsApplicationInputsKinesisStreamPtrOutput
}

type analyticsApplicationInputsKinesisStreamPtrType AnalyticsApplicationInputsKinesisStreamArgs

func AnalyticsApplicationInputsKinesisStreamPtr(v *AnalyticsApplicationInputsKinesisStreamArgs) AnalyticsApplicationInputsKinesisStreamPtrInput {
	return (*analyticsApplicationInputsKinesisStreamPtrType)(v)
}

func (*analyticsApplicationInputsKinesisStreamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsKinesisStream)(nil)).Elem()
}

func (i *analyticsApplicationInputsKinesisStreamPtrType) ToAnalyticsApplicationInputsKinesisStreamPtrOutput() AnalyticsApplicationInputsKinesisStreamPtrOutput {
	return i.ToAnalyticsApplicationInputsKinesisStreamPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsKinesisStreamPtrType) ToAnalyticsApplicationInputsKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisStreamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsKinesisStreamPtrOutput)
}

type AnalyticsApplicationInputsKinesisStreamOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsKinesisStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsKinesisStream)(nil)).Elem()
}

func (o AnalyticsApplicationInputsKinesisStreamOutput) ToAnalyticsApplicationInputsKinesisStreamOutput() AnalyticsApplicationInputsKinesisStreamOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisStreamOutput) ToAnalyticsApplicationInputsKinesisStreamOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisStreamOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisStreamOutput) ToAnalyticsApplicationInputsKinesisStreamPtrOutput() AnalyticsApplicationInputsKinesisStreamPtrOutput {
	return o.ToAnalyticsApplicationInputsKinesisStreamPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsKinesisStreamOutput) ToAnalyticsApplicationInputsKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisStreamPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisStream) *AnalyticsApplicationInputsKinesisStream {
		return &v
	}).(AnalyticsApplicationInputsKinesisStreamPtrOutput)
}

// The ARN of the Kinesis Stream.
func (o AnalyticsApplicationInputsKinesisStreamOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisStream) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationInputsKinesisStreamOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisStream) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsKinesisStreamPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsKinesisStreamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsKinesisStream)(nil)).Elem()
}

func (o AnalyticsApplicationInputsKinesisStreamPtrOutput) ToAnalyticsApplicationInputsKinesisStreamPtrOutput() AnalyticsApplicationInputsKinesisStreamPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisStreamPtrOutput) ToAnalyticsApplicationInputsKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisStreamPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisStreamPtrOutput) Elem() AnalyticsApplicationInputsKinesisStreamOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsKinesisStream) AnalyticsApplicationInputsKinesisStream { return *v }).(AnalyticsApplicationInputsKinesisStreamOutput)
}

// The ARN of the Kinesis Stream.
func (o AnalyticsApplicationInputsKinesisStreamPtrOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisStream) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationInputsKinesisStreamPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisStream) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsKinesisStreamArgs struct {
	// The ARN of the Kinesis Stream.
	ResourceArn string `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn string `pulumi:"roleArn"`
}

type AnalyticsApplicationInputsKinesisStreamArgsInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsKinesisStreamArgsOutput() AnalyticsApplicationInputsKinesisStreamArgsOutput
	ToAnalyticsApplicationInputsKinesisStreamArgsOutputWithContext(context.Context) AnalyticsApplicationInputsKinesisStreamArgsOutput
}

type AnalyticsApplicationInputsKinesisStreamArgsArgs struct {
	// The ARN of the Kinesis Stream.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationInputsKinesisStreamArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsKinesisStreamArgs)(nil)).Elem()
}

func (i AnalyticsApplicationInputsKinesisStreamArgsArgs) ToAnalyticsApplicationInputsKinesisStreamArgsOutput() AnalyticsApplicationInputsKinesisStreamArgsOutput {
	return i.ToAnalyticsApplicationInputsKinesisStreamArgsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsKinesisStreamArgsArgs) ToAnalyticsApplicationInputsKinesisStreamArgsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisStreamArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsKinesisStreamArgsOutput)
}

func (i AnalyticsApplicationInputsKinesisStreamArgsArgs) ToAnalyticsApplicationInputsKinesisStreamArgsPtrOutput() AnalyticsApplicationInputsKinesisStreamArgsPtrOutput {
	return i.ToAnalyticsApplicationInputsKinesisStreamArgsPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsKinesisStreamArgsArgs) ToAnalyticsApplicationInputsKinesisStreamArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisStreamArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsKinesisStreamArgsOutput).ToAnalyticsApplicationInputsKinesisStreamArgsPtrOutputWithContext(ctx)
}

type AnalyticsApplicationInputsKinesisStreamArgsPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsKinesisStreamArgsPtrOutput() AnalyticsApplicationInputsKinesisStreamArgsPtrOutput
	ToAnalyticsApplicationInputsKinesisStreamArgsPtrOutputWithContext(context.Context) AnalyticsApplicationInputsKinesisStreamArgsPtrOutput
}

type analyticsApplicationInputsKinesisStreamArgsPtrType AnalyticsApplicationInputsKinesisStreamArgsArgs

func AnalyticsApplicationInputsKinesisStreamArgsPtr(v *AnalyticsApplicationInputsKinesisStreamArgsArgs) AnalyticsApplicationInputsKinesisStreamArgsPtrInput {
	return (*analyticsApplicationInputsKinesisStreamArgsPtrType)(v)
}

func (*analyticsApplicationInputsKinesisStreamArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsKinesisStreamArgs)(nil)).Elem()
}

func (i *analyticsApplicationInputsKinesisStreamArgsPtrType) ToAnalyticsApplicationInputsKinesisStreamArgsPtrOutput() AnalyticsApplicationInputsKinesisStreamArgsPtrOutput {
	return i.ToAnalyticsApplicationInputsKinesisStreamArgsPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsKinesisStreamArgsPtrType) ToAnalyticsApplicationInputsKinesisStreamArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisStreamArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsKinesisStreamArgsPtrOutput)
}

type AnalyticsApplicationInputsKinesisStreamArgsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsKinesisStreamArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsKinesisStreamArgs)(nil)).Elem()
}

func (o AnalyticsApplicationInputsKinesisStreamArgsOutput) ToAnalyticsApplicationInputsKinesisStreamArgsOutput() AnalyticsApplicationInputsKinesisStreamArgsOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisStreamArgsOutput) ToAnalyticsApplicationInputsKinesisStreamArgsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisStreamArgsOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisStreamArgsOutput) ToAnalyticsApplicationInputsKinesisStreamArgsPtrOutput() AnalyticsApplicationInputsKinesisStreamArgsPtrOutput {
	return o.ToAnalyticsApplicationInputsKinesisStreamArgsPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsKinesisStreamArgsOutput) ToAnalyticsApplicationInputsKinesisStreamArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisStreamArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisStreamArgs) *AnalyticsApplicationInputsKinesisStreamArgs {
		return &v
	}).(AnalyticsApplicationInputsKinesisStreamArgsPtrOutput)
}

// The ARN of the Kinesis Stream.
func (o AnalyticsApplicationInputsKinesisStreamArgsOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisStreamArgs) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationInputsKinesisStreamArgsOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisStreamArgs) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsKinesisStreamArgsPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsKinesisStreamArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsKinesisStreamArgs)(nil)).Elem()
}

func (o AnalyticsApplicationInputsKinesisStreamArgsPtrOutput) ToAnalyticsApplicationInputsKinesisStreamArgsPtrOutput() AnalyticsApplicationInputsKinesisStreamArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisStreamArgsPtrOutput) ToAnalyticsApplicationInputsKinesisStreamArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsKinesisStreamArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsKinesisStreamArgsPtrOutput) Elem() AnalyticsApplicationInputsKinesisStreamArgsOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsKinesisStreamArgs) AnalyticsApplicationInputsKinesisStreamArgs {
		return *v
	}).(AnalyticsApplicationInputsKinesisStreamArgsOutput)
}

// The ARN of the Kinesis Stream.
func (o AnalyticsApplicationInputsKinesisStreamArgsPtrOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisStreamArgs) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationInputsKinesisStreamArgsPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsKinesisStreamArgs) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsParallelism struct {
	// The Count of streams.
	Count int `pulumi:"count"`
}

type AnalyticsApplicationInputsParallelismInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsParallelismOutput() AnalyticsApplicationInputsParallelismOutput
	ToAnalyticsApplicationInputsParallelismOutputWithContext(context.Context) AnalyticsApplicationInputsParallelismOutput
}

type AnalyticsApplicationInputsParallelismArgs struct {
	// The Count of streams.
	Count pulumi.IntInput `pulumi:"count"`
}

func (AnalyticsApplicationInputsParallelismArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsParallelism)(nil)).Elem()
}

func (i AnalyticsApplicationInputsParallelismArgs) ToAnalyticsApplicationInputsParallelismOutput() AnalyticsApplicationInputsParallelismOutput {
	return i.ToAnalyticsApplicationInputsParallelismOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsParallelismArgs) ToAnalyticsApplicationInputsParallelismOutputWithContext(ctx context.Context) AnalyticsApplicationInputsParallelismOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsParallelismOutput)
}

func (i AnalyticsApplicationInputsParallelismArgs) ToAnalyticsApplicationInputsParallelismPtrOutput() AnalyticsApplicationInputsParallelismPtrOutput {
	return i.ToAnalyticsApplicationInputsParallelismPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsParallelismArgs) ToAnalyticsApplicationInputsParallelismPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsParallelismPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsParallelismOutput).ToAnalyticsApplicationInputsParallelismPtrOutputWithContext(ctx)
}

type AnalyticsApplicationInputsParallelismPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsParallelismPtrOutput() AnalyticsApplicationInputsParallelismPtrOutput
	ToAnalyticsApplicationInputsParallelismPtrOutputWithContext(context.Context) AnalyticsApplicationInputsParallelismPtrOutput
}

type analyticsApplicationInputsParallelismPtrType AnalyticsApplicationInputsParallelismArgs

func AnalyticsApplicationInputsParallelismPtr(v *AnalyticsApplicationInputsParallelismArgs) AnalyticsApplicationInputsParallelismPtrInput {
	return (*analyticsApplicationInputsParallelismPtrType)(v)
}

func (*analyticsApplicationInputsParallelismPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsParallelism)(nil)).Elem()
}

func (i *analyticsApplicationInputsParallelismPtrType) ToAnalyticsApplicationInputsParallelismPtrOutput() AnalyticsApplicationInputsParallelismPtrOutput {
	return i.ToAnalyticsApplicationInputsParallelismPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsParallelismPtrType) ToAnalyticsApplicationInputsParallelismPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsParallelismPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsParallelismPtrOutput)
}

type AnalyticsApplicationInputsParallelismOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsParallelismOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsParallelism)(nil)).Elem()
}

func (o AnalyticsApplicationInputsParallelismOutput) ToAnalyticsApplicationInputsParallelismOutput() AnalyticsApplicationInputsParallelismOutput {
	return o
}

func (o AnalyticsApplicationInputsParallelismOutput) ToAnalyticsApplicationInputsParallelismOutputWithContext(ctx context.Context) AnalyticsApplicationInputsParallelismOutput {
	return o
}

func (o AnalyticsApplicationInputsParallelismOutput) ToAnalyticsApplicationInputsParallelismPtrOutput() AnalyticsApplicationInputsParallelismPtrOutput {
	return o.ToAnalyticsApplicationInputsParallelismPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsParallelismOutput) ToAnalyticsApplicationInputsParallelismPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsParallelismPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsParallelism) *AnalyticsApplicationInputsParallelism {
		return &v
	}).(AnalyticsApplicationInputsParallelismPtrOutput)
}

// The Count of streams.
func (o AnalyticsApplicationInputsParallelismOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsParallelism) int { return v.Count }).(pulumi.IntOutput)
}

type AnalyticsApplicationInputsParallelismPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsParallelismPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsParallelism)(nil)).Elem()
}

func (o AnalyticsApplicationInputsParallelismPtrOutput) ToAnalyticsApplicationInputsParallelismPtrOutput() AnalyticsApplicationInputsParallelismPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsParallelismPtrOutput) ToAnalyticsApplicationInputsParallelismPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsParallelismPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsParallelismPtrOutput) Elem() AnalyticsApplicationInputsParallelismOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsParallelism) AnalyticsApplicationInputsParallelism { return *v }).(AnalyticsApplicationInputsParallelismOutput)
}

// The Count of streams.
func (o AnalyticsApplicationInputsParallelismPtrOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsParallelism) int { return v.Count }).(pulumi.IntOutput)
}

type AnalyticsApplicationInputsParallelismArgs struct {
	// The Count of streams.
	Count int `pulumi:"count"`
}

type AnalyticsApplicationInputsParallelismArgsInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsParallelismArgsOutput() AnalyticsApplicationInputsParallelismArgsOutput
	ToAnalyticsApplicationInputsParallelismArgsOutputWithContext(context.Context) AnalyticsApplicationInputsParallelismArgsOutput
}

type AnalyticsApplicationInputsParallelismArgsArgs struct {
	// The Count of streams.
	Count pulumi.IntInput `pulumi:"count"`
}

func (AnalyticsApplicationInputsParallelismArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsParallelismArgs)(nil)).Elem()
}

func (i AnalyticsApplicationInputsParallelismArgsArgs) ToAnalyticsApplicationInputsParallelismArgsOutput() AnalyticsApplicationInputsParallelismArgsOutput {
	return i.ToAnalyticsApplicationInputsParallelismArgsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsParallelismArgsArgs) ToAnalyticsApplicationInputsParallelismArgsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsParallelismArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsParallelismArgsOutput)
}

func (i AnalyticsApplicationInputsParallelismArgsArgs) ToAnalyticsApplicationInputsParallelismArgsPtrOutput() AnalyticsApplicationInputsParallelismArgsPtrOutput {
	return i.ToAnalyticsApplicationInputsParallelismArgsPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsParallelismArgsArgs) ToAnalyticsApplicationInputsParallelismArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsParallelismArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsParallelismArgsOutput).ToAnalyticsApplicationInputsParallelismArgsPtrOutputWithContext(ctx)
}

type AnalyticsApplicationInputsParallelismArgsPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsParallelismArgsPtrOutput() AnalyticsApplicationInputsParallelismArgsPtrOutput
	ToAnalyticsApplicationInputsParallelismArgsPtrOutputWithContext(context.Context) AnalyticsApplicationInputsParallelismArgsPtrOutput
}

type analyticsApplicationInputsParallelismArgsPtrType AnalyticsApplicationInputsParallelismArgsArgs

func AnalyticsApplicationInputsParallelismArgsPtr(v *AnalyticsApplicationInputsParallelismArgsArgs) AnalyticsApplicationInputsParallelismArgsPtrInput {
	return (*analyticsApplicationInputsParallelismArgsPtrType)(v)
}

func (*analyticsApplicationInputsParallelismArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsParallelismArgs)(nil)).Elem()
}

func (i *analyticsApplicationInputsParallelismArgsPtrType) ToAnalyticsApplicationInputsParallelismArgsPtrOutput() AnalyticsApplicationInputsParallelismArgsPtrOutput {
	return i.ToAnalyticsApplicationInputsParallelismArgsPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsParallelismArgsPtrType) ToAnalyticsApplicationInputsParallelismArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsParallelismArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsParallelismArgsPtrOutput)
}

type AnalyticsApplicationInputsParallelismArgsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsParallelismArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsParallelismArgs)(nil)).Elem()
}

func (o AnalyticsApplicationInputsParallelismArgsOutput) ToAnalyticsApplicationInputsParallelismArgsOutput() AnalyticsApplicationInputsParallelismArgsOutput {
	return o
}

func (o AnalyticsApplicationInputsParallelismArgsOutput) ToAnalyticsApplicationInputsParallelismArgsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsParallelismArgsOutput {
	return o
}

func (o AnalyticsApplicationInputsParallelismArgsOutput) ToAnalyticsApplicationInputsParallelismArgsPtrOutput() AnalyticsApplicationInputsParallelismArgsPtrOutput {
	return o.ToAnalyticsApplicationInputsParallelismArgsPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsParallelismArgsOutput) ToAnalyticsApplicationInputsParallelismArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsParallelismArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsParallelismArgs) *AnalyticsApplicationInputsParallelismArgs {
		return &v
	}).(AnalyticsApplicationInputsParallelismArgsPtrOutput)
}

// The Count of streams.
func (o AnalyticsApplicationInputsParallelismArgsOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsParallelismArgs) int { return v.Count }).(pulumi.IntOutput)
}

type AnalyticsApplicationInputsParallelismArgsPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsParallelismArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsParallelismArgs)(nil)).Elem()
}

func (o AnalyticsApplicationInputsParallelismArgsPtrOutput) ToAnalyticsApplicationInputsParallelismArgsPtrOutput() AnalyticsApplicationInputsParallelismArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsParallelismArgsPtrOutput) ToAnalyticsApplicationInputsParallelismArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsParallelismArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsParallelismArgsPtrOutput) Elem() AnalyticsApplicationInputsParallelismArgsOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsParallelismArgs) AnalyticsApplicationInputsParallelismArgs {
		return *v
	}).(AnalyticsApplicationInputsParallelismArgsOutput)
}

// The Count of streams.
func (o AnalyticsApplicationInputsParallelismArgsPtrOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsParallelismArgs) int { return v.Count }).(pulumi.IntOutput)
}

type AnalyticsApplicationInputsProcessingConfiguration struct {
	// The Lambda function configuration. See Lambda below for more details.
	Lambda AnalyticsApplicationInputsProcessingConfigurationLambda `pulumi:"lambda"`
}

type AnalyticsApplicationInputsProcessingConfigurationInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsProcessingConfigurationOutput() AnalyticsApplicationInputsProcessingConfigurationOutput
	ToAnalyticsApplicationInputsProcessingConfigurationOutputWithContext(context.Context) AnalyticsApplicationInputsProcessingConfigurationOutput
}

type AnalyticsApplicationInputsProcessingConfigurationArgs struct {
	// The Lambda function configuration. See Lambda below for more details.
	Lambda AnalyticsApplicationInputsProcessingConfigurationLambdaInput `pulumi:"lambda"`
}

func (AnalyticsApplicationInputsProcessingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsProcessingConfiguration)(nil)).Elem()
}

func (i AnalyticsApplicationInputsProcessingConfigurationArgs) ToAnalyticsApplicationInputsProcessingConfigurationOutput() AnalyticsApplicationInputsProcessingConfigurationOutput {
	return i.ToAnalyticsApplicationInputsProcessingConfigurationOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsProcessingConfigurationArgs) ToAnalyticsApplicationInputsProcessingConfigurationOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsProcessingConfigurationOutput)
}

func (i AnalyticsApplicationInputsProcessingConfigurationArgs) ToAnalyticsApplicationInputsProcessingConfigurationPtrOutput() AnalyticsApplicationInputsProcessingConfigurationPtrOutput {
	return i.ToAnalyticsApplicationInputsProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsProcessingConfigurationArgs) ToAnalyticsApplicationInputsProcessingConfigurationPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsProcessingConfigurationOutput).ToAnalyticsApplicationInputsProcessingConfigurationPtrOutputWithContext(ctx)
}

type AnalyticsApplicationInputsProcessingConfigurationPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsProcessingConfigurationPtrOutput() AnalyticsApplicationInputsProcessingConfigurationPtrOutput
	ToAnalyticsApplicationInputsProcessingConfigurationPtrOutputWithContext(context.Context) AnalyticsApplicationInputsProcessingConfigurationPtrOutput
}

type analyticsApplicationInputsProcessingConfigurationPtrType AnalyticsApplicationInputsProcessingConfigurationArgs

func AnalyticsApplicationInputsProcessingConfigurationPtr(v *AnalyticsApplicationInputsProcessingConfigurationArgs) AnalyticsApplicationInputsProcessingConfigurationPtrInput {
	return (*analyticsApplicationInputsProcessingConfigurationPtrType)(v)
}

func (*analyticsApplicationInputsProcessingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsProcessingConfiguration)(nil)).Elem()
}

func (i *analyticsApplicationInputsProcessingConfigurationPtrType) ToAnalyticsApplicationInputsProcessingConfigurationPtrOutput() AnalyticsApplicationInputsProcessingConfigurationPtrOutput {
	return i.ToAnalyticsApplicationInputsProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsProcessingConfigurationPtrType) ToAnalyticsApplicationInputsProcessingConfigurationPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsProcessingConfigurationPtrOutput)
}

type AnalyticsApplicationInputsProcessingConfigurationOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsProcessingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsProcessingConfiguration)(nil)).Elem()
}

func (o AnalyticsApplicationInputsProcessingConfigurationOutput) ToAnalyticsApplicationInputsProcessingConfigurationOutput() AnalyticsApplicationInputsProcessingConfigurationOutput {
	return o
}

func (o AnalyticsApplicationInputsProcessingConfigurationOutput) ToAnalyticsApplicationInputsProcessingConfigurationOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationOutput {
	return o
}

func (o AnalyticsApplicationInputsProcessingConfigurationOutput) ToAnalyticsApplicationInputsProcessingConfigurationPtrOutput() AnalyticsApplicationInputsProcessingConfigurationPtrOutput {
	return o.ToAnalyticsApplicationInputsProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsProcessingConfigurationOutput) ToAnalyticsApplicationInputsProcessingConfigurationPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsProcessingConfiguration) *AnalyticsApplicationInputsProcessingConfiguration {
		return &v
	}).(AnalyticsApplicationInputsProcessingConfigurationPtrOutput)
}

// The Lambda function configuration. See Lambda below for more details.
func (o AnalyticsApplicationInputsProcessingConfigurationOutput) Lambda() AnalyticsApplicationInputsProcessingConfigurationLambdaOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsProcessingConfiguration) AnalyticsApplicationInputsProcessingConfigurationLambda {
		return v.Lambda
	}).(AnalyticsApplicationInputsProcessingConfigurationLambdaOutput)
}

type AnalyticsApplicationInputsProcessingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsProcessingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsProcessingConfiguration)(nil)).Elem()
}

func (o AnalyticsApplicationInputsProcessingConfigurationPtrOutput) ToAnalyticsApplicationInputsProcessingConfigurationPtrOutput() AnalyticsApplicationInputsProcessingConfigurationPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsProcessingConfigurationPtrOutput) ToAnalyticsApplicationInputsProcessingConfigurationPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsProcessingConfigurationPtrOutput) Elem() AnalyticsApplicationInputsProcessingConfigurationOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsProcessingConfiguration) AnalyticsApplicationInputsProcessingConfiguration {
		return *v
	}).(AnalyticsApplicationInputsProcessingConfigurationOutput)
}

// The Lambda function configuration. See Lambda below for more details.
func (o AnalyticsApplicationInputsProcessingConfigurationPtrOutput) Lambda() AnalyticsApplicationInputsProcessingConfigurationLambdaOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsProcessingConfiguration) AnalyticsApplicationInputsProcessingConfigurationLambda {
		return v.Lambda
	}).(AnalyticsApplicationInputsProcessingConfigurationLambdaOutput)
}

type AnalyticsApplicationInputsProcessingConfigurationArgs struct {
	// The Lambda function configuration. See Lambda below for more details.
	Lambda AnalyticsApplicationInputsProcessingConfigurationLambdaArgs `pulumi:"lambda"`
}

type AnalyticsApplicationInputsProcessingConfigurationArgsInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsProcessingConfigurationArgsOutput() AnalyticsApplicationInputsProcessingConfigurationArgsOutput
	ToAnalyticsApplicationInputsProcessingConfigurationArgsOutputWithContext(context.Context) AnalyticsApplicationInputsProcessingConfigurationArgsOutput
}

type AnalyticsApplicationInputsProcessingConfigurationArgsArgs struct {
	// The Lambda function configuration. See Lambda below for more details.
	Lambda AnalyticsApplicationInputsProcessingConfigurationLambdaArgsInput `pulumi:"lambda"`
}

func (AnalyticsApplicationInputsProcessingConfigurationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsProcessingConfigurationArgs)(nil)).Elem()
}

func (i AnalyticsApplicationInputsProcessingConfigurationArgsArgs) ToAnalyticsApplicationInputsProcessingConfigurationArgsOutput() AnalyticsApplicationInputsProcessingConfigurationArgsOutput {
	return i.ToAnalyticsApplicationInputsProcessingConfigurationArgsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsProcessingConfigurationArgsArgs) ToAnalyticsApplicationInputsProcessingConfigurationArgsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsProcessingConfigurationArgsOutput)
}

func (i AnalyticsApplicationInputsProcessingConfigurationArgsArgs) ToAnalyticsApplicationInputsProcessingConfigurationArgsPtrOutput() AnalyticsApplicationInputsProcessingConfigurationArgsPtrOutput {
	return i.ToAnalyticsApplicationInputsProcessingConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsProcessingConfigurationArgsArgs) ToAnalyticsApplicationInputsProcessingConfigurationArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsProcessingConfigurationArgsOutput).ToAnalyticsApplicationInputsProcessingConfigurationArgsPtrOutputWithContext(ctx)
}

type AnalyticsApplicationInputsProcessingConfigurationArgsPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsProcessingConfigurationArgsPtrOutput() AnalyticsApplicationInputsProcessingConfigurationArgsPtrOutput
	ToAnalyticsApplicationInputsProcessingConfigurationArgsPtrOutputWithContext(context.Context) AnalyticsApplicationInputsProcessingConfigurationArgsPtrOutput
}

type analyticsApplicationInputsProcessingConfigurationArgsPtrType AnalyticsApplicationInputsProcessingConfigurationArgsArgs

func AnalyticsApplicationInputsProcessingConfigurationArgsPtr(v *AnalyticsApplicationInputsProcessingConfigurationArgsArgs) AnalyticsApplicationInputsProcessingConfigurationArgsPtrInput {
	return (*analyticsApplicationInputsProcessingConfigurationArgsPtrType)(v)
}

func (*analyticsApplicationInputsProcessingConfigurationArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsProcessingConfigurationArgs)(nil)).Elem()
}

func (i *analyticsApplicationInputsProcessingConfigurationArgsPtrType) ToAnalyticsApplicationInputsProcessingConfigurationArgsPtrOutput() AnalyticsApplicationInputsProcessingConfigurationArgsPtrOutput {
	return i.ToAnalyticsApplicationInputsProcessingConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsProcessingConfigurationArgsPtrType) ToAnalyticsApplicationInputsProcessingConfigurationArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsProcessingConfigurationArgsPtrOutput)
}

type AnalyticsApplicationInputsProcessingConfigurationArgsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsProcessingConfigurationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsProcessingConfigurationArgs)(nil)).Elem()
}

func (o AnalyticsApplicationInputsProcessingConfigurationArgsOutput) ToAnalyticsApplicationInputsProcessingConfigurationArgsOutput() AnalyticsApplicationInputsProcessingConfigurationArgsOutput {
	return o
}

func (o AnalyticsApplicationInputsProcessingConfigurationArgsOutput) ToAnalyticsApplicationInputsProcessingConfigurationArgsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationArgsOutput {
	return o
}

func (o AnalyticsApplicationInputsProcessingConfigurationArgsOutput) ToAnalyticsApplicationInputsProcessingConfigurationArgsPtrOutput() AnalyticsApplicationInputsProcessingConfigurationArgsPtrOutput {
	return o.ToAnalyticsApplicationInputsProcessingConfigurationArgsPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsProcessingConfigurationArgsOutput) ToAnalyticsApplicationInputsProcessingConfigurationArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsProcessingConfigurationArgs) *AnalyticsApplicationInputsProcessingConfigurationArgs {
		return &v
	}).(AnalyticsApplicationInputsProcessingConfigurationArgsPtrOutput)
}

// The Lambda function configuration. See Lambda below for more details.
func (o AnalyticsApplicationInputsProcessingConfigurationArgsOutput) Lambda() AnalyticsApplicationInputsProcessingConfigurationLambdaArgsOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsProcessingConfigurationArgs) AnalyticsApplicationInputsProcessingConfigurationLambdaArgs {
		return v.Lambda
	}).(AnalyticsApplicationInputsProcessingConfigurationLambdaArgsOutput)
}

type AnalyticsApplicationInputsProcessingConfigurationArgsPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsProcessingConfigurationArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsProcessingConfigurationArgs)(nil)).Elem()
}

func (o AnalyticsApplicationInputsProcessingConfigurationArgsPtrOutput) ToAnalyticsApplicationInputsProcessingConfigurationArgsPtrOutput() AnalyticsApplicationInputsProcessingConfigurationArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsProcessingConfigurationArgsPtrOutput) ToAnalyticsApplicationInputsProcessingConfigurationArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsProcessingConfigurationArgsPtrOutput) Elem() AnalyticsApplicationInputsProcessingConfigurationArgsOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsProcessingConfigurationArgs) AnalyticsApplicationInputsProcessingConfigurationArgs {
		return *v
	}).(AnalyticsApplicationInputsProcessingConfigurationArgsOutput)
}

// The Lambda function configuration. See Lambda below for more details.
func (o AnalyticsApplicationInputsProcessingConfigurationArgsPtrOutput) Lambda() AnalyticsApplicationInputsProcessingConfigurationLambdaArgsOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsProcessingConfigurationArgs) AnalyticsApplicationInputsProcessingConfigurationLambdaArgs {
		return v.Lambda
	}).(AnalyticsApplicationInputsProcessingConfigurationLambdaArgsOutput)
}

type AnalyticsApplicationInputsProcessingConfigurationLambda struct {
	// The ARN of the Lambda function.
	ResourceArn string `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the Lambda function.
	RoleArn string `pulumi:"roleArn"`
}

type AnalyticsApplicationInputsProcessingConfigurationLambdaInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsProcessingConfigurationLambdaOutput() AnalyticsApplicationInputsProcessingConfigurationLambdaOutput
	ToAnalyticsApplicationInputsProcessingConfigurationLambdaOutputWithContext(context.Context) AnalyticsApplicationInputsProcessingConfigurationLambdaOutput
}

type AnalyticsApplicationInputsProcessingConfigurationLambdaArgs struct {
	// The ARN of the Lambda function.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the Lambda function.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationInputsProcessingConfigurationLambdaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsProcessingConfigurationLambda)(nil)).Elem()
}

func (i AnalyticsApplicationInputsProcessingConfigurationLambdaArgs) ToAnalyticsApplicationInputsProcessingConfigurationLambdaOutput() AnalyticsApplicationInputsProcessingConfigurationLambdaOutput {
	return i.ToAnalyticsApplicationInputsProcessingConfigurationLambdaOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsProcessingConfigurationLambdaArgs) ToAnalyticsApplicationInputsProcessingConfigurationLambdaOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationLambdaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsProcessingConfigurationLambdaOutput)
}

type AnalyticsApplicationInputsProcessingConfigurationLambdaOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsProcessingConfigurationLambdaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsProcessingConfigurationLambda)(nil)).Elem()
}

func (o AnalyticsApplicationInputsProcessingConfigurationLambdaOutput) ToAnalyticsApplicationInputsProcessingConfigurationLambdaOutput() AnalyticsApplicationInputsProcessingConfigurationLambdaOutput {
	return o
}

func (o AnalyticsApplicationInputsProcessingConfigurationLambdaOutput) ToAnalyticsApplicationInputsProcessingConfigurationLambdaOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationLambdaOutput {
	return o
}

// The ARN of the Lambda function.
func (o AnalyticsApplicationInputsProcessingConfigurationLambdaOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsProcessingConfigurationLambda) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the Lambda function.
func (o AnalyticsApplicationInputsProcessingConfigurationLambdaOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsProcessingConfigurationLambda) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsProcessingConfigurationLambdaArgs struct {
	// The ARN of the Lambda function.
	ResourceArn string `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the Lambda function.
	RoleArn string `pulumi:"roleArn"`
}

type AnalyticsApplicationInputsProcessingConfigurationLambdaArgsInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsProcessingConfigurationLambdaArgsOutput() AnalyticsApplicationInputsProcessingConfigurationLambdaArgsOutput
	ToAnalyticsApplicationInputsProcessingConfigurationLambdaArgsOutputWithContext(context.Context) AnalyticsApplicationInputsProcessingConfigurationLambdaArgsOutput
}

type AnalyticsApplicationInputsProcessingConfigurationLambdaArgsArgs struct {
	// The ARN of the Lambda function.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the Lambda function.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationInputsProcessingConfigurationLambdaArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsProcessingConfigurationLambdaArgs)(nil)).Elem()
}

func (i AnalyticsApplicationInputsProcessingConfigurationLambdaArgsArgs) ToAnalyticsApplicationInputsProcessingConfigurationLambdaArgsOutput() AnalyticsApplicationInputsProcessingConfigurationLambdaArgsOutput {
	return i.ToAnalyticsApplicationInputsProcessingConfigurationLambdaArgsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsProcessingConfigurationLambdaArgsArgs) ToAnalyticsApplicationInputsProcessingConfigurationLambdaArgsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationLambdaArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsProcessingConfigurationLambdaArgsOutput)
}

type AnalyticsApplicationInputsProcessingConfigurationLambdaArgsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsProcessingConfigurationLambdaArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsProcessingConfigurationLambdaArgs)(nil)).Elem()
}

func (o AnalyticsApplicationInputsProcessingConfigurationLambdaArgsOutput) ToAnalyticsApplicationInputsProcessingConfigurationLambdaArgsOutput() AnalyticsApplicationInputsProcessingConfigurationLambdaArgsOutput {
	return o
}

func (o AnalyticsApplicationInputsProcessingConfigurationLambdaArgsOutput) ToAnalyticsApplicationInputsProcessingConfigurationLambdaArgsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsProcessingConfigurationLambdaArgsOutput {
	return o
}

// The ARN of the Lambda function.
func (o AnalyticsApplicationInputsProcessingConfigurationLambdaArgsOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsProcessingConfigurationLambdaArgs) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the Lambda function.
func (o AnalyticsApplicationInputsProcessingConfigurationLambdaArgsOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsProcessingConfigurationLambdaArgs) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsSchema struct {
	// The Record Column mapping for the streaming source data element.
	// See Record Columns below for more details.
	RecordColumns []AnalyticsApplicationInputsSchemaRecordColumn `pulumi:"recordColumns"`
	// The Encoding of the record in the streaming source.
	RecordEncoding *string `pulumi:"recordEncoding"`
	// The Record Format and mapping information to schematize a record.
	// See Record Format below for more details.
	RecordFormat AnalyticsApplicationInputsSchemaRecordFormat `pulumi:"recordFormat"`
}

type AnalyticsApplicationInputsSchemaInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaOutput() AnalyticsApplicationInputsSchemaOutput
	ToAnalyticsApplicationInputsSchemaOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaOutput
}

type AnalyticsApplicationInputsSchemaArgs struct {
	// The Record Column mapping for the streaming source data element.
	// See Record Columns below for more details.
	RecordColumns AnalyticsApplicationInputsSchemaRecordColumnArrayInput `pulumi:"recordColumns"`
	// The Encoding of the record in the streaming source.
	RecordEncoding pulumi.StringPtrInput `pulumi:"recordEncoding"`
	// The Record Format and mapping information to schematize a record.
	// See Record Format below for more details.
	RecordFormat AnalyticsApplicationInputsSchemaRecordFormatInput `pulumi:"recordFormat"`
}

func (AnalyticsApplicationInputsSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchema)(nil)).Elem()
}

func (i AnalyticsApplicationInputsSchemaArgs) ToAnalyticsApplicationInputsSchemaOutput() AnalyticsApplicationInputsSchemaOutput {
	return i.ToAnalyticsApplicationInputsSchemaOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaArgs) ToAnalyticsApplicationInputsSchemaOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaOutput)
}

type AnalyticsApplicationInputsSchemaOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchema)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaOutput) ToAnalyticsApplicationInputsSchemaOutput() AnalyticsApplicationInputsSchemaOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaOutput) ToAnalyticsApplicationInputsSchemaOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaOutput {
	return o
}

// The Record Column mapping for the streaming source data element.
// See Record Columns below for more details.
func (o AnalyticsApplicationInputsSchemaOutput) RecordColumns() AnalyticsApplicationInputsSchemaRecordColumnArrayOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchema) []AnalyticsApplicationInputsSchemaRecordColumn {
		return v.RecordColumns
	}).(AnalyticsApplicationInputsSchemaRecordColumnArrayOutput)
}

// The Encoding of the record in the streaming source.
func (o AnalyticsApplicationInputsSchemaOutput) RecordEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchema) *string { return v.RecordEncoding }).(pulumi.StringPtrOutput)
}

// The Record Format and mapping information to schematize a record.
// See Record Format below for more details.
func (o AnalyticsApplicationInputsSchemaOutput) RecordFormat() AnalyticsApplicationInputsSchemaRecordFormatOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchema) AnalyticsApplicationInputsSchemaRecordFormat {
		return v.RecordFormat
	}).(AnalyticsApplicationInputsSchemaRecordFormatOutput)
}

type AnalyticsApplicationInputsSchemaArgs struct {
	// The Record Column mapping for the streaming source data element.
	// See Record Columns below for more details.
	RecordColumns []AnalyticsApplicationInputsSchemaRecordColumnArgs `pulumi:"recordColumns"`
	// The Encoding of the record in the streaming source.
	RecordEncoding *string `pulumi:"recordEncoding"`
	// The Record Format and mapping information to schematize a record.
	// See Record Format below for more details.
	RecordFormat AnalyticsApplicationInputsSchemaRecordFormatArgs `pulumi:"recordFormat"`
}

type AnalyticsApplicationInputsSchemaArgsInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaArgsOutput() AnalyticsApplicationInputsSchemaArgsOutput
	ToAnalyticsApplicationInputsSchemaArgsOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaArgsOutput
}

type AnalyticsApplicationInputsSchemaArgsArgs struct {
	// The Record Column mapping for the streaming source data element.
	// See Record Columns below for more details.
	RecordColumns AnalyticsApplicationInputsSchemaRecordColumnArgsArrayInput `pulumi:"recordColumns"`
	// The Encoding of the record in the streaming source.
	RecordEncoding pulumi.StringPtrInput `pulumi:"recordEncoding"`
	// The Record Format and mapping information to schematize a record.
	// See Record Format below for more details.
	RecordFormat AnalyticsApplicationInputsSchemaRecordFormatArgsInput `pulumi:"recordFormat"`
}

func (AnalyticsApplicationInputsSchemaArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaArgs)(nil)).Elem()
}

func (i AnalyticsApplicationInputsSchemaArgsArgs) ToAnalyticsApplicationInputsSchemaArgsOutput() AnalyticsApplicationInputsSchemaArgsOutput {
	return i.ToAnalyticsApplicationInputsSchemaArgsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaArgsArgs) ToAnalyticsApplicationInputsSchemaArgsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaArgsOutput)
}

type AnalyticsApplicationInputsSchemaArgsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaArgs)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaArgsOutput) ToAnalyticsApplicationInputsSchemaArgsOutput() AnalyticsApplicationInputsSchemaArgsOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaArgsOutput) ToAnalyticsApplicationInputsSchemaArgsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaArgsOutput {
	return o
}

// The Record Column mapping for the streaming source data element.
// See Record Columns below for more details.
func (o AnalyticsApplicationInputsSchemaArgsOutput) RecordColumns() AnalyticsApplicationInputsSchemaRecordColumnArgsArrayOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaArgs) []AnalyticsApplicationInputsSchemaRecordColumnArgs {
		return v.RecordColumns
	}).(AnalyticsApplicationInputsSchemaRecordColumnArgsArrayOutput)
}

// The Encoding of the record in the streaming source.
func (o AnalyticsApplicationInputsSchemaArgsOutput) RecordEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaArgs) *string { return v.RecordEncoding }).(pulumi.StringPtrOutput)
}

// The Record Format and mapping information to schematize a record.
// See Record Format below for more details.
func (o AnalyticsApplicationInputsSchemaArgsOutput) RecordFormat() AnalyticsApplicationInputsSchemaRecordFormatArgsOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaArgs) AnalyticsApplicationInputsSchemaRecordFormatArgs {
		return v.RecordFormat
	}).(AnalyticsApplicationInputsSchemaRecordFormatArgsOutput)
}

type AnalyticsApplicationInputsSchemaRecordColumn struct {
	// The Mapping reference to the data element.
	Mapping *string `pulumi:"mapping"`
	// Name of the column.
	Name string `pulumi:"name"`
	// The SQL Type of the column.
	SqlType string `pulumi:"sqlType"`
}

type AnalyticsApplicationInputsSchemaRecordColumnInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordColumnOutput() AnalyticsApplicationInputsSchemaRecordColumnOutput
	ToAnalyticsApplicationInputsSchemaRecordColumnOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordColumnOutput
}

type AnalyticsApplicationInputsSchemaRecordColumnArgs struct {
	// The Mapping reference to the data element.
	Mapping pulumi.StringPtrInput `pulumi:"mapping"`
	// Name of the column.
	Name pulumi.StringInput `pulumi:"name"`
	// The SQL Type of the column.
	SqlType pulumi.StringInput `pulumi:"sqlType"`
}

func (AnalyticsApplicationInputsSchemaRecordColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordColumn)(nil)).Elem()
}

func (i AnalyticsApplicationInputsSchemaRecordColumnArgs) ToAnalyticsApplicationInputsSchemaRecordColumnOutput() AnalyticsApplicationInputsSchemaRecordColumnOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordColumnOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordColumnArgs) ToAnalyticsApplicationInputsSchemaRecordColumnOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordColumnOutput)
}

type AnalyticsApplicationInputsSchemaRecordColumnArrayInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordColumnArrayOutput() AnalyticsApplicationInputsSchemaRecordColumnArrayOutput
	ToAnalyticsApplicationInputsSchemaRecordColumnArrayOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordColumnArrayOutput
}

type AnalyticsApplicationInputsSchemaRecordColumnArray []AnalyticsApplicationInputsSchemaRecordColumnInput

func (AnalyticsApplicationInputsSchemaRecordColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationInputsSchemaRecordColumn)(nil)).Elem()
}

func (i AnalyticsApplicationInputsSchemaRecordColumnArray) ToAnalyticsApplicationInputsSchemaRecordColumnArrayOutput() AnalyticsApplicationInputsSchemaRecordColumnArrayOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordColumnArrayOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordColumnArray) ToAnalyticsApplicationInputsSchemaRecordColumnArrayOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordColumnArrayOutput)
}

type AnalyticsApplicationInputsSchemaRecordColumnOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordColumn)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordColumnOutput) ToAnalyticsApplicationInputsSchemaRecordColumnOutput() AnalyticsApplicationInputsSchemaRecordColumnOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordColumnOutput) ToAnalyticsApplicationInputsSchemaRecordColumnOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordColumnOutput {
	return o
}

// The Mapping reference to the data element.
func (o AnalyticsApplicationInputsSchemaRecordColumnOutput) Mapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordColumn) *string { return v.Mapping }).(pulumi.StringPtrOutput)
}

// Name of the column.
func (o AnalyticsApplicationInputsSchemaRecordColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordColumn) string { return v.Name }).(pulumi.StringOutput)
}

// The SQL Type of the column.
func (o AnalyticsApplicationInputsSchemaRecordColumnOutput) SqlType() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordColumn) string { return v.SqlType }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsSchemaRecordColumnArrayOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationInputsSchemaRecordColumn)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordColumnArrayOutput) ToAnalyticsApplicationInputsSchemaRecordColumnArrayOutput() AnalyticsApplicationInputsSchemaRecordColumnArrayOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordColumnArrayOutput) ToAnalyticsApplicationInputsSchemaRecordColumnArrayOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordColumnArrayOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordColumnArrayOutput) Index(i pulumi.IntInput) AnalyticsApplicationInputsSchemaRecordColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalyticsApplicationInputsSchemaRecordColumn {
		return vs[0].([]AnalyticsApplicationInputsSchemaRecordColumn)[vs[1].(int)]
	}).(AnalyticsApplicationInputsSchemaRecordColumnOutput)
}

type AnalyticsApplicationInputsSchemaRecordColumnArgs struct {
	// The Mapping reference to the data element.
	Mapping *string `pulumi:"mapping"`
	// Name of the column.
	Name string `pulumi:"name"`
	// The SQL Type of the column.
	SqlType string `pulumi:"sqlType"`
}

type AnalyticsApplicationInputsSchemaRecordColumnArgsInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordColumnArgsOutput() AnalyticsApplicationInputsSchemaRecordColumnArgsOutput
	ToAnalyticsApplicationInputsSchemaRecordColumnArgsOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordColumnArgsOutput
}

type AnalyticsApplicationInputsSchemaRecordColumnArgsArgs struct {
	// The Mapping reference to the data element.
	Mapping pulumi.StringPtrInput `pulumi:"mapping"`
	// Name of the column.
	Name pulumi.StringInput `pulumi:"name"`
	// The SQL Type of the column.
	SqlType pulumi.StringInput `pulumi:"sqlType"`
}

func (AnalyticsApplicationInputsSchemaRecordColumnArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordColumnArgs)(nil)).Elem()
}

func (i AnalyticsApplicationInputsSchemaRecordColumnArgsArgs) ToAnalyticsApplicationInputsSchemaRecordColumnArgsOutput() AnalyticsApplicationInputsSchemaRecordColumnArgsOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordColumnArgsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordColumnArgsArgs) ToAnalyticsApplicationInputsSchemaRecordColumnArgsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordColumnArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordColumnArgsOutput)
}

type AnalyticsApplicationInputsSchemaRecordColumnArgsArrayInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordColumnArgsArrayOutput() AnalyticsApplicationInputsSchemaRecordColumnArgsArrayOutput
	ToAnalyticsApplicationInputsSchemaRecordColumnArgsArrayOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordColumnArgsArrayOutput
}

type AnalyticsApplicationInputsSchemaRecordColumnArgsArray []AnalyticsApplicationInputsSchemaRecordColumnArgsInput

func (AnalyticsApplicationInputsSchemaRecordColumnArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationInputsSchemaRecordColumnArgs)(nil)).Elem()
}

func (i AnalyticsApplicationInputsSchemaRecordColumnArgsArray) ToAnalyticsApplicationInputsSchemaRecordColumnArgsArrayOutput() AnalyticsApplicationInputsSchemaRecordColumnArgsArrayOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordColumnArgsArrayOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordColumnArgsArray) ToAnalyticsApplicationInputsSchemaRecordColumnArgsArrayOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordColumnArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordColumnArgsArrayOutput)
}

type AnalyticsApplicationInputsSchemaRecordColumnArgsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordColumnArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordColumnArgs)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordColumnArgsOutput) ToAnalyticsApplicationInputsSchemaRecordColumnArgsOutput() AnalyticsApplicationInputsSchemaRecordColumnArgsOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordColumnArgsOutput) ToAnalyticsApplicationInputsSchemaRecordColumnArgsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordColumnArgsOutput {
	return o
}

// The Mapping reference to the data element.
func (o AnalyticsApplicationInputsSchemaRecordColumnArgsOutput) Mapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordColumnArgs) *string { return v.Mapping }).(pulumi.StringPtrOutput)
}

// Name of the column.
func (o AnalyticsApplicationInputsSchemaRecordColumnArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordColumnArgs) string { return v.Name }).(pulumi.StringOutput)
}

// The SQL Type of the column.
func (o AnalyticsApplicationInputsSchemaRecordColumnArgsOutput) SqlType() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordColumnArgs) string { return v.SqlType }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsSchemaRecordColumnArgsArrayOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordColumnArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationInputsSchemaRecordColumnArgs)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordColumnArgsArrayOutput) ToAnalyticsApplicationInputsSchemaRecordColumnArgsArrayOutput() AnalyticsApplicationInputsSchemaRecordColumnArgsArrayOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordColumnArgsArrayOutput) ToAnalyticsApplicationInputsSchemaRecordColumnArgsArrayOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordColumnArgsArrayOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordColumnArgsArrayOutput) Index(i pulumi.IntInput) AnalyticsApplicationInputsSchemaRecordColumnArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalyticsApplicationInputsSchemaRecordColumnArgs {
		return vs[0].([]AnalyticsApplicationInputsSchemaRecordColumnArgs)[vs[1].(int)]
	}).(AnalyticsApplicationInputsSchemaRecordColumnArgsOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormat struct {
	// The Mapping Information for the record format.
	// See Mapping Parameters below for more details.
	MappingParameters *AnalyticsApplicationInputsSchemaRecordFormatMappingParameters `pulumi:"mappingParameters"`
	// The type of Record Format. Can be `CSV` or `JSON`.
	RecordFormatType string `pulumi:"recordFormatType"`
}

type AnalyticsApplicationInputsSchemaRecordFormatInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordFormatOutput() AnalyticsApplicationInputsSchemaRecordFormatOutput
	ToAnalyticsApplicationInputsSchemaRecordFormatOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordFormatOutput
}

type AnalyticsApplicationInputsSchemaRecordFormatArgs struct {
	// The Mapping Information for the record format.
	// See Mapping Parameters below for more details.
	MappingParameters AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrInput `pulumi:"mappingParameters"`
	// The type of Record Format. Can be `CSV` or `JSON`.
	RecordFormatType pulumi.StringInput `pulumi:"recordFormatType"`
}

func (AnalyticsApplicationInputsSchemaRecordFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormat)(nil)).Elem()
}

func (i AnalyticsApplicationInputsSchemaRecordFormatArgs) ToAnalyticsApplicationInputsSchemaRecordFormatOutput() AnalyticsApplicationInputsSchemaRecordFormatOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordFormatArgs) ToAnalyticsApplicationInputsSchemaRecordFormatOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormat)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordFormatOutput) ToAnalyticsApplicationInputsSchemaRecordFormatOutput() AnalyticsApplicationInputsSchemaRecordFormatOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatOutput) ToAnalyticsApplicationInputsSchemaRecordFormatOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatOutput {
	return o
}

// The Mapping Information for the record format.
// See Mapping Parameters below for more details.
func (o AnalyticsApplicationInputsSchemaRecordFormatOutput) MappingParameters() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormat) *AnalyticsApplicationInputsSchemaRecordFormatMappingParameters {
		return v.MappingParameters
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput)
}

// The type of Record Format. Can be `CSV` or `JSON`.
func (o AnalyticsApplicationInputsSchemaRecordFormatOutput) RecordFormatType() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormat) string { return v.RecordFormatType }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatArgs struct {
	// The Mapping Information for the record format.
	// See Mapping Parameters below for more details.
	MappingParameters *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs `pulumi:"mappingParameters"`
	// The type of Record Format. Can be `CSV` or `JSON`.
	RecordFormatType *string `pulumi:"recordFormatType"`
}

type AnalyticsApplicationInputsSchemaRecordFormatArgsInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordFormatArgsOutput() AnalyticsApplicationInputsSchemaRecordFormatArgsOutput
	ToAnalyticsApplicationInputsSchemaRecordFormatArgsOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordFormatArgsOutput
}

type AnalyticsApplicationInputsSchemaRecordFormatArgsArgs struct {
	// The Mapping Information for the record format.
	// See Mapping Parameters below for more details.
	MappingParameters AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrInput `pulumi:"mappingParameters"`
	// The type of Record Format. Can be `CSV` or `JSON`.
	RecordFormatType pulumi.StringPtrInput `pulumi:"recordFormatType"`
}

func (AnalyticsApplicationInputsSchemaRecordFormatArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatArgs)(nil)).Elem()
}

func (i AnalyticsApplicationInputsSchemaRecordFormatArgsArgs) ToAnalyticsApplicationInputsSchemaRecordFormatArgsOutput() AnalyticsApplicationInputsSchemaRecordFormatArgsOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatArgsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordFormatArgsArgs) ToAnalyticsApplicationInputsSchemaRecordFormatArgsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatArgsOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatArgsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordFormatArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatArgs)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordFormatArgsOutput) ToAnalyticsApplicationInputsSchemaRecordFormatArgsOutput() AnalyticsApplicationInputsSchemaRecordFormatArgsOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatArgsOutput) ToAnalyticsApplicationInputsSchemaRecordFormatArgsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatArgsOutput {
	return o
}

// The Mapping Information for the record format.
// See Mapping Parameters below for more details.
func (o AnalyticsApplicationInputsSchemaRecordFormatArgsOutput) MappingParameters() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatArgs) *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs {
		return v.MappingParameters
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutput)
}

// The type of Record Format. Can be `CSV` or `JSON`.
func (o AnalyticsApplicationInputsSchemaRecordFormatArgsOutput) RecordFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatArgs) *string { return v.RecordFormatType }).(pulumi.StringPtrOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParameters struct {
	// Mapping information when the record format uses delimiters.
	// See CSV Mapping Parameters below for more details.
	Csv *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv `pulumi:"csv"`
	// Mapping information when JSON is the record format on the streaming source.
	// See JSON Mapping Parameters below for more details.
	Json *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson `pulumi:"json"`
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput
	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs struct {
	// Mapping information when the record format uses delimiters.
	// See CSV Mapping Parameters below for more details.
	Csv AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrInput `pulumi:"csv"`
	// Mapping information when JSON is the record format on the streaming source.
	// See JSON Mapping Parameters below for more details.
	Json AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrInput `pulumi:"json"`
}

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput)
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput).ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput
	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput
}

type analyticsApplicationInputsSchemaRecordFormatMappingParametersPtrType AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs

func AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtr(v *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrInput {
	return (*analyticsApplicationInputsSchemaRecordFormatMappingParametersPtrType)(v)
}

func (*analyticsApplicationInputsSchemaRecordFormatMappingParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (i *analyticsApplicationInputsSchemaRecordFormatMappingParametersPtrType) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsSchemaRecordFormatMappingParametersPtrType) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput {
	return o.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParameters) *AnalyticsApplicationInputsSchemaRecordFormatMappingParameters {
		return &v
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput)
}

// Mapping information when the record format uses delimiters.
// See CSV Mapping Parameters below for more details.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput) Csv() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParameters) *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv {
		return v.Csv
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput)
}

// Mapping information when JSON is the record format on the streaming source.
// See JSON Mapping Parameters below for more details.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput) Json() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParameters) *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson {
		return v.Json
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput) Elem() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsSchemaRecordFormatMappingParameters) AnalyticsApplicationInputsSchemaRecordFormatMappingParameters {
		return *v
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput)
}

// Mapping information when the record format uses delimiters.
// See CSV Mapping Parameters below for more details.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput) Csv() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParameters) *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv {
		return v.Csv
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput)
}

// Mapping information when JSON is the record format on the streaming source.
// See JSON Mapping Parameters below for more details.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput) Json() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParameters) *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson {
		return v.Json
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs struct {
	// Mapping information when the record format uses delimiters.
	// See CSV Mapping Parameters below for more details.
	Csv *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs `pulumi:"csv"`
	// Mapping information when JSON is the record format on the streaming source.
	// See JSON Mapping Parameters below for more details.
	Json *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs `pulumi:"json"`
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsOutput
	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsOutput
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsArgs struct {
	// Mapping information when the record format uses delimiters.
	// See CSV Mapping Parameters below for more details.
	Csv AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrInput `pulumi:"csv"`
	// Mapping information when JSON is the record format on the streaming source.
	// See JSON Mapping Parameters below for more details.
	Json AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrInput `pulumi:"json"`
}

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs)(nil)).Elem()
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsOutput)
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsOutput).ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutputWithContext(ctx)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutput
	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutput
}

type analyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrType AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsArgs

func AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtr(v *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsArgs) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrInput {
	return (*analyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrType)(v)
}

func (*analyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs)(nil)).Elem()
}

func (i *analyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrType) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrType) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutput {
	return o.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs) *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs {
		return &v
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutput)
}

// Mapping information when the record format uses delimiters.
// See CSV Mapping Parameters below for more details.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsOutput) Csv() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs) *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs {
		return v.Csv
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutput)
}

// Mapping information when JSON is the record format on the streaming source.
// See JSON Mapping Parameters below for more details.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsOutput) Json() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs) *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs {
		return v.Json
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutput) Elem() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs {
		return *v
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsOutput)
}

// Mapping information when the record format uses delimiters.
// See CSV Mapping Parameters below for more details.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutput) Csv() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs) *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs {
		return v.Csv
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutput)
}

// Mapping information when JSON is the record format on the streaming source.
// See JSON Mapping Parameters below for more details.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutput) Json() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgs) *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs {
		return v.Json
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv struct {
	// The Column Delimiter.
	RecordColumnDelimiter string `pulumi:"recordColumnDelimiter"`
	// The Row Delimiter.
	RecordRowDelimiter string `pulumi:"recordRowDelimiter"`
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput
	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs struct {
	// The Column Delimiter.
	RecordColumnDelimiter pulumi.StringInput `pulumi:"recordColumnDelimiter"`
	// The Row Delimiter.
	RecordRowDelimiter pulumi.StringInput `pulumi:"recordRowDelimiter"`
}

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput)
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput).ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput
	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput
}

type analyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrType AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs

func AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtr(v *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrInput {
	return (*analyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrType)(v)
}

func (*analyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (i *analyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrType) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrType) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv) *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv {
		return &v
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput)
}

// The Column Delimiter.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput) RecordColumnDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv) string {
		return v.RecordColumnDelimiter
	}).(pulumi.StringOutput)
}

// The Row Delimiter.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput) RecordRowDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv) string {
		return v.RecordRowDelimiter
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput) Elem() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv {
		return *v
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput)
}

// The Column Delimiter.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput) RecordColumnDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv) string {
		return v.RecordColumnDelimiter
	}).(pulumi.StringOutput)
}

// The Row Delimiter.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput) RecordRowDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv) string {
		return v.RecordRowDelimiter
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs struct {
	// The Column Delimiter.
	RecordColumnDelimiter string `pulumi:"recordColumnDelimiter"`
	// The Row Delimiter.
	RecordRowDelimiter string `pulumi:"recordRowDelimiter"`
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsOutput
	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsOutput
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsArgs struct {
	// The Column Delimiter.
	RecordColumnDelimiter pulumi.StringInput `pulumi:"recordColumnDelimiter"`
	// The Row Delimiter.
	RecordRowDelimiter pulumi.StringInput `pulumi:"recordRowDelimiter"`
}

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs)(nil)).Elem()
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsOutput)
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsOutput).ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutputWithContext(ctx)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutput
	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutput
}

type analyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrType AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsArgs

func AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtr(v *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsArgs) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrInput {
	return (*analyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrType)(v)
}

func (*analyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs)(nil)).Elem()
}

func (i *analyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrType) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrType) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutput {
	return o.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs) *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs {
		return &v
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutput)
}

// The Column Delimiter.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsOutput) RecordColumnDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs) string {
		return v.RecordColumnDelimiter
	}).(pulumi.StringOutput)
}

// The Row Delimiter.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsOutput) RecordRowDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs) string {
		return v.RecordRowDelimiter
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutput) Elem() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs {
		return *v
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsOutput)
}

// The Column Delimiter.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutput) RecordColumnDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs) string {
		return v.RecordColumnDelimiter
	}).(pulumi.StringOutput)
}

// The Row Delimiter.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutput) RecordRowDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgs) string {
		return v.RecordRowDelimiter
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson struct {
	// Path to the top-level parent that contains the records.
	RecordRowPath string `pulumi:"recordRowPath"`
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput
	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs struct {
	// Path to the top-level parent that contains the records.
	RecordRowPath pulumi.StringInput `pulumi:"recordRowPath"`
}

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput)
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput).ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput
	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput
}

type analyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrType AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs

func AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtr(v *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrInput {
	return (*analyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrType)(v)
}

func (*analyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (i *analyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrType) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrType) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson) *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson {
		return &v
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput)
}

// Path to the top-level parent that contains the records.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput) RecordRowPath() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson) string {
		return v.RecordRowPath
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput) Elem() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson {
		return *v
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput)
}

// Path to the top-level parent that contains the records.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput) RecordRowPath() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson) string {
		return v.RecordRowPath
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs struct {
	// Path to the top-level parent that contains the records.
	RecordRowPath string `pulumi:"recordRowPath"`
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsOutput
	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsOutput
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsArgs struct {
	// Path to the top-level parent that contains the records.
	RecordRowPath pulumi.StringInput `pulumi:"recordRowPath"`
}

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs)(nil)).Elem()
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsOutput)
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsArgs) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsOutput).ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutputWithContext(ctx)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutput
	ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutputWithContext(context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutput
}

type analyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrType AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsArgs

func AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtr(v *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsArgs) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrInput {
	return (*analyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrType)(v)
}

func (*analyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs)(nil)).Elem()
}

func (i *analyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrType) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutput {
	return i.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrType) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutput {
	return o.ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs) *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs {
		return &v
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutput)
}

// Path to the top-level parent that contains the records.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsOutput) RecordRowPath() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs) string {
		return v.RecordRowPath
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs)(nil)).Elem()
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutput() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutput) ToAnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutput) Elem() AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs) AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs {
		return *v
	}).(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsOutput)
}

// Path to the top-level parent that contains the records.
func (o AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutput) RecordRowPath() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgs) string {
		return v.RecordRowPath
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsStartingPositionConfiguration struct {
	StartingPosition string `pulumi:"startingPosition"`
}

type AnalyticsApplicationInputsStartingPositionConfigurationInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsStartingPositionConfigurationOutput() AnalyticsApplicationInputsStartingPositionConfigurationOutput
	ToAnalyticsApplicationInputsStartingPositionConfigurationOutputWithContext(context.Context) AnalyticsApplicationInputsStartingPositionConfigurationOutput
}

type AnalyticsApplicationInputsStartingPositionConfigurationArgs struct {
	StartingPosition pulumi.StringInput `pulumi:"startingPosition"`
}

func (AnalyticsApplicationInputsStartingPositionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStartingPositionConfiguration)(nil)).Elem()
}

func (i AnalyticsApplicationInputsStartingPositionConfigurationArgs) ToAnalyticsApplicationInputsStartingPositionConfigurationOutput() AnalyticsApplicationInputsStartingPositionConfigurationOutput {
	return i.ToAnalyticsApplicationInputsStartingPositionConfigurationOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsStartingPositionConfigurationArgs) ToAnalyticsApplicationInputsStartingPositionConfigurationOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStartingPositionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStartingPositionConfigurationOutput)
}

type AnalyticsApplicationInputsStartingPositionConfigurationArrayInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsStartingPositionConfigurationArrayOutput() AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput
	ToAnalyticsApplicationInputsStartingPositionConfigurationArrayOutputWithContext(context.Context) AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput
}

type AnalyticsApplicationInputsStartingPositionConfigurationArray []AnalyticsApplicationInputsStartingPositionConfigurationInput

func (AnalyticsApplicationInputsStartingPositionConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationInputsStartingPositionConfiguration)(nil)).Elem()
}

func (i AnalyticsApplicationInputsStartingPositionConfigurationArray) ToAnalyticsApplicationInputsStartingPositionConfigurationArrayOutput() AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput {
	return i.ToAnalyticsApplicationInputsStartingPositionConfigurationArrayOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsStartingPositionConfigurationArray) ToAnalyticsApplicationInputsStartingPositionConfigurationArrayOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput)
}

type AnalyticsApplicationInputsStartingPositionConfigurationOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsStartingPositionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStartingPositionConfiguration)(nil)).Elem()
}

func (o AnalyticsApplicationInputsStartingPositionConfigurationOutput) ToAnalyticsApplicationInputsStartingPositionConfigurationOutput() AnalyticsApplicationInputsStartingPositionConfigurationOutput {
	return o
}

func (o AnalyticsApplicationInputsStartingPositionConfigurationOutput) ToAnalyticsApplicationInputsStartingPositionConfigurationOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStartingPositionConfigurationOutput {
	return o
}

func (o AnalyticsApplicationInputsStartingPositionConfigurationOutput) StartingPosition() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStartingPositionConfiguration) string { return v.StartingPosition }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationInputsStartingPositionConfiguration)(nil)).Elem()
}

func (o AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput) ToAnalyticsApplicationInputsStartingPositionConfigurationArrayOutput() AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput {
	return o
}

func (o AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput) ToAnalyticsApplicationInputsStartingPositionConfigurationArrayOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput {
	return o
}

func (o AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput) Index(i pulumi.IntInput) AnalyticsApplicationInputsStartingPositionConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalyticsApplicationInputsStartingPositionConfiguration {
		return vs[0].([]AnalyticsApplicationInputsStartingPositionConfiguration)[vs[1].(int)]
	}).(AnalyticsApplicationInputsStartingPositionConfigurationOutput)
}

type AnalyticsApplicationInputsStartingPositionConfigurationArgs struct {
	StartingPosition *string `pulumi:"startingPosition"`
}

type AnalyticsApplicationInputsStartingPositionConfigurationArgsInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsStartingPositionConfigurationArgsOutput() AnalyticsApplicationInputsStartingPositionConfigurationArgsOutput
	ToAnalyticsApplicationInputsStartingPositionConfigurationArgsOutputWithContext(context.Context) AnalyticsApplicationInputsStartingPositionConfigurationArgsOutput
}

type AnalyticsApplicationInputsStartingPositionConfigurationArgsArgs struct {
	StartingPosition pulumi.StringPtrInput `pulumi:"startingPosition"`
}

func (AnalyticsApplicationInputsStartingPositionConfigurationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStartingPositionConfigurationArgs)(nil)).Elem()
}

func (i AnalyticsApplicationInputsStartingPositionConfigurationArgsArgs) ToAnalyticsApplicationInputsStartingPositionConfigurationArgsOutput() AnalyticsApplicationInputsStartingPositionConfigurationArgsOutput {
	return i.ToAnalyticsApplicationInputsStartingPositionConfigurationArgsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsStartingPositionConfigurationArgsArgs) ToAnalyticsApplicationInputsStartingPositionConfigurationArgsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStartingPositionConfigurationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStartingPositionConfigurationArgsOutput)
}

type AnalyticsApplicationInputsStartingPositionConfigurationArgsArrayInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsStartingPositionConfigurationArgsArrayOutput() AnalyticsApplicationInputsStartingPositionConfigurationArgsArrayOutput
	ToAnalyticsApplicationInputsStartingPositionConfigurationArgsArrayOutputWithContext(context.Context) AnalyticsApplicationInputsStartingPositionConfigurationArgsArrayOutput
}

type AnalyticsApplicationInputsStartingPositionConfigurationArgsArray []AnalyticsApplicationInputsStartingPositionConfigurationArgsInput

func (AnalyticsApplicationInputsStartingPositionConfigurationArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationInputsStartingPositionConfigurationArgs)(nil)).Elem()
}

func (i AnalyticsApplicationInputsStartingPositionConfigurationArgsArray) ToAnalyticsApplicationInputsStartingPositionConfigurationArgsArrayOutput() AnalyticsApplicationInputsStartingPositionConfigurationArgsArrayOutput {
	return i.ToAnalyticsApplicationInputsStartingPositionConfigurationArgsArrayOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsStartingPositionConfigurationArgsArray) ToAnalyticsApplicationInputsStartingPositionConfigurationArgsArrayOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStartingPositionConfigurationArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStartingPositionConfigurationArgsArrayOutput)
}

type AnalyticsApplicationInputsStartingPositionConfigurationArgsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsStartingPositionConfigurationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStartingPositionConfigurationArgs)(nil)).Elem()
}

func (o AnalyticsApplicationInputsStartingPositionConfigurationArgsOutput) ToAnalyticsApplicationInputsStartingPositionConfigurationArgsOutput() AnalyticsApplicationInputsStartingPositionConfigurationArgsOutput {
	return o
}

func (o AnalyticsApplicationInputsStartingPositionConfigurationArgsOutput) ToAnalyticsApplicationInputsStartingPositionConfigurationArgsOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStartingPositionConfigurationArgsOutput {
	return o
}

func (o AnalyticsApplicationInputsStartingPositionConfigurationArgsOutput) StartingPosition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStartingPositionConfigurationArgs) *string {
		return v.StartingPosition
	}).(pulumi.StringPtrOutput)
}

type AnalyticsApplicationInputsStartingPositionConfigurationArgsArrayOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsStartingPositionConfigurationArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationInputsStartingPositionConfigurationArgs)(nil)).Elem()
}

func (o AnalyticsApplicationInputsStartingPositionConfigurationArgsArrayOutput) ToAnalyticsApplicationInputsStartingPositionConfigurationArgsArrayOutput() AnalyticsApplicationInputsStartingPositionConfigurationArgsArrayOutput {
	return o
}

func (o AnalyticsApplicationInputsStartingPositionConfigurationArgsArrayOutput) ToAnalyticsApplicationInputsStartingPositionConfigurationArgsArrayOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStartingPositionConfigurationArgsArrayOutput {
	return o
}

func (o AnalyticsApplicationInputsStartingPositionConfigurationArgsArrayOutput) Index(i pulumi.IntInput) AnalyticsApplicationInputsStartingPositionConfigurationArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalyticsApplicationInputsStartingPositionConfigurationArgs {
		return vs[0].([]AnalyticsApplicationInputsStartingPositionConfigurationArgs)[vs[1].(int)]
	}).(AnalyticsApplicationInputsStartingPositionConfigurationArgsOutput)
}

type AnalyticsApplicationInputsState struct {
	// The ARN of the Kinesis Analytics Application.
	Id *string `pulumi:"id"`
	// The Kinesis Firehose configuration for the streaming source. Conflicts with `kinesisStream`.
	// See Kinesis Firehose below for more details.
	KinesisFirehose *AnalyticsApplicationInputsStateKinesisFirehose `pulumi:"kinesisFirehose"`
	// The Kinesis Stream configuration for the streaming source. Conflicts with `kinesisFirehose`.
	// See Kinesis Stream below for more details.
	KinesisStream *AnalyticsApplicationInputsStateKinesisStream `pulumi:"kinesisStream"`
	// The Name Prefix to use when creating an in-application stream.
	NamePrefix string `pulumi:"namePrefix"`
	// The number of Parallel in-application streams to create.
	// See Parallelism below for more details.
	Parallelism *AnalyticsApplicationInputsStateParallelism `pulumi:"parallelism"`
	// The Processing Configuration to transform records as they are received from the stream.
	// See Processing Configuration below for more details.
	ProcessingConfiguration *AnalyticsApplicationInputsStateProcessingConfiguration `pulumi:"processingConfiguration"`
	// The Schema format of the data in the streaming source. See Source Schema below for more details.
	Schema                         AnalyticsApplicationInputsStateSchema                          `pulumi:"schema"`
	StartingPositionConfigurations []AnalyticsApplicationInputsStateStartingPositionConfiguration `pulumi:"startingPositionConfigurations"`
	StreamNames                    []string                                                       `pulumi:"streamNames"`
}

type AnalyticsApplicationInputsStateInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsStateOutput() AnalyticsApplicationInputsStateOutput
	ToAnalyticsApplicationInputsStateOutputWithContext(context.Context) AnalyticsApplicationInputsStateOutput
}

type AnalyticsApplicationInputsStateArgs struct {
	// The ARN of the Kinesis Analytics Application.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Kinesis Firehose configuration for the streaming source. Conflicts with `kinesisStream`.
	// See Kinesis Firehose below for more details.
	KinesisFirehose AnalyticsApplicationInputsStateKinesisFirehosePtrInput `pulumi:"kinesisFirehose"`
	// The Kinesis Stream configuration for the streaming source. Conflicts with `kinesisFirehose`.
	// See Kinesis Stream below for more details.
	KinesisStream AnalyticsApplicationInputsStateKinesisStreamPtrInput `pulumi:"kinesisStream"`
	// The Name Prefix to use when creating an in-application stream.
	NamePrefix pulumi.StringInput `pulumi:"namePrefix"`
	// The number of Parallel in-application streams to create.
	// See Parallelism below for more details.
	Parallelism AnalyticsApplicationInputsStateParallelismPtrInput `pulumi:"parallelism"`
	// The Processing Configuration to transform records as they are received from the stream.
	// See Processing Configuration below for more details.
	ProcessingConfiguration AnalyticsApplicationInputsStateProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// The Schema format of the data in the streaming source. See Source Schema below for more details.
	Schema                         AnalyticsApplicationInputsStateSchemaInput                             `pulumi:"schema"`
	StartingPositionConfigurations AnalyticsApplicationInputsStateStartingPositionConfigurationArrayInput `pulumi:"startingPositionConfigurations"`
	StreamNames                    pulumi.StringArrayInput                                                `pulumi:"streamNames"`
}

func (AnalyticsApplicationInputsStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsState)(nil)).Elem()
}

func (i AnalyticsApplicationInputsStateArgs) ToAnalyticsApplicationInputsStateOutput() AnalyticsApplicationInputsStateOutput {
	return i.ToAnalyticsApplicationInputsStateOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsStateArgs) ToAnalyticsApplicationInputsStateOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStateOutput)
}

type AnalyticsApplicationInputsStateOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsState)(nil)).Elem()
}

func (o AnalyticsApplicationInputsStateOutput) ToAnalyticsApplicationInputsStateOutput() AnalyticsApplicationInputsStateOutput {
	return o
}

func (o AnalyticsApplicationInputsStateOutput) ToAnalyticsApplicationInputsStateOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateOutput {
	return o
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationInputsStateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsState) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Kinesis Firehose configuration for the streaming source. Conflicts with `kinesisStream`.
// See Kinesis Firehose below for more details.
func (o AnalyticsApplicationInputsStateOutput) KinesisFirehose() AnalyticsApplicationInputsStateKinesisFirehosePtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsState) *AnalyticsApplicationInputsStateKinesisFirehose {
		return v.KinesisFirehose
	}).(AnalyticsApplicationInputsStateKinesisFirehosePtrOutput)
}

// The Kinesis Stream configuration for the streaming source. Conflicts with `kinesisFirehose`.
// See Kinesis Stream below for more details.
func (o AnalyticsApplicationInputsStateOutput) KinesisStream() AnalyticsApplicationInputsStateKinesisStreamPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsState) *AnalyticsApplicationInputsStateKinesisStream {
		return v.KinesisStream
	}).(AnalyticsApplicationInputsStateKinesisStreamPtrOutput)
}

// The Name Prefix to use when creating an in-application stream.
func (o AnalyticsApplicationInputsStateOutput) NamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsState) string { return v.NamePrefix }).(pulumi.StringOutput)
}

// The number of Parallel in-application streams to create.
// See Parallelism below for more details.
func (o AnalyticsApplicationInputsStateOutput) Parallelism() AnalyticsApplicationInputsStateParallelismPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsState) *AnalyticsApplicationInputsStateParallelism {
		return v.Parallelism
	}).(AnalyticsApplicationInputsStateParallelismPtrOutput)
}

// The Processing Configuration to transform records as they are received from the stream.
// See Processing Configuration below for more details.
func (o AnalyticsApplicationInputsStateOutput) ProcessingConfiguration() AnalyticsApplicationInputsStateProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsState) *AnalyticsApplicationInputsStateProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(AnalyticsApplicationInputsStateProcessingConfigurationPtrOutput)
}

// The Schema format of the data in the streaming source. See Source Schema below for more details.
func (o AnalyticsApplicationInputsStateOutput) Schema() AnalyticsApplicationInputsStateSchemaOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsState) AnalyticsApplicationInputsStateSchema { return v.Schema }).(AnalyticsApplicationInputsStateSchemaOutput)
}

func (o AnalyticsApplicationInputsStateOutput) StartingPositionConfigurations() AnalyticsApplicationInputsStateStartingPositionConfigurationArrayOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsState) []AnalyticsApplicationInputsStateStartingPositionConfiguration {
		return v.StartingPositionConfigurations
	}).(AnalyticsApplicationInputsStateStartingPositionConfigurationArrayOutput)
}

func (o AnalyticsApplicationInputsStateOutput) StreamNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsState) []string { return v.StreamNames }).(pulumi.StringArrayOutput)
}

type AnalyticsApplicationInputsStateKinesisFirehose struct {
	// The ARN of the Kinesis Firehose delivery stream.
	ResourceArn string `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn string `pulumi:"roleArn"`
}

type AnalyticsApplicationInputsStateKinesisFirehoseInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsStateKinesisFirehoseOutput() AnalyticsApplicationInputsStateKinesisFirehoseOutput
	ToAnalyticsApplicationInputsStateKinesisFirehoseOutputWithContext(context.Context) AnalyticsApplicationInputsStateKinesisFirehoseOutput
}

type AnalyticsApplicationInputsStateKinesisFirehoseArgs struct {
	// The ARN of the Kinesis Firehose delivery stream.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationInputsStateKinesisFirehoseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStateKinesisFirehose)(nil)).Elem()
}

func (i AnalyticsApplicationInputsStateKinesisFirehoseArgs) ToAnalyticsApplicationInputsStateKinesisFirehoseOutput() AnalyticsApplicationInputsStateKinesisFirehoseOutput {
	return i.ToAnalyticsApplicationInputsStateKinesisFirehoseOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsStateKinesisFirehoseArgs) ToAnalyticsApplicationInputsStateKinesisFirehoseOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateKinesisFirehoseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStateKinesisFirehoseOutput)
}

func (i AnalyticsApplicationInputsStateKinesisFirehoseArgs) ToAnalyticsApplicationInputsStateKinesisFirehosePtrOutput() AnalyticsApplicationInputsStateKinesisFirehosePtrOutput {
	return i.ToAnalyticsApplicationInputsStateKinesisFirehosePtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsStateKinesisFirehoseArgs) ToAnalyticsApplicationInputsStateKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateKinesisFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStateKinesisFirehoseOutput).ToAnalyticsApplicationInputsStateKinesisFirehosePtrOutputWithContext(ctx)
}

type AnalyticsApplicationInputsStateKinesisFirehosePtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsStateKinesisFirehosePtrOutput() AnalyticsApplicationInputsStateKinesisFirehosePtrOutput
	ToAnalyticsApplicationInputsStateKinesisFirehosePtrOutputWithContext(context.Context) AnalyticsApplicationInputsStateKinesisFirehosePtrOutput
}

type analyticsApplicationInputsStateKinesisFirehosePtrType AnalyticsApplicationInputsStateKinesisFirehoseArgs

func AnalyticsApplicationInputsStateKinesisFirehosePtr(v *AnalyticsApplicationInputsStateKinesisFirehoseArgs) AnalyticsApplicationInputsStateKinesisFirehosePtrInput {
	return (*analyticsApplicationInputsStateKinesisFirehosePtrType)(v)
}

func (*analyticsApplicationInputsStateKinesisFirehosePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsStateKinesisFirehose)(nil)).Elem()
}

func (i *analyticsApplicationInputsStateKinesisFirehosePtrType) ToAnalyticsApplicationInputsStateKinesisFirehosePtrOutput() AnalyticsApplicationInputsStateKinesisFirehosePtrOutput {
	return i.ToAnalyticsApplicationInputsStateKinesisFirehosePtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsStateKinesisFirehosePtrType) ToAnalyticsApplicationInputsStateKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateKinesisFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStateKinesisFirehosePtrOutput)
}

type AnalyticsApplicationInputsStateKinesisFirehoseOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsStateKinesisFirehoseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStateKinesisFirehose)(nil)).Elem()
}

func (o AnalyticsApplicationInputsStateKinesisFirehoseOutput) ToAnalyticsApplicationInputsStateKinesisFirehoseOutput() AnalyticsApplicationInputsStateKinesisFirehoseOutput {
	return o
}

func (o AnalyticsApplicationInputsStateKinesisFirehoseOutput) ToAnalyticsApplicationInputsStateKinesisFirehoseOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateKinesisFirehoseOutput {
	return o
}

func (o AnalyticsApplicationInputsStateKinesisFirehoseOutput) ToAnalyticsApplicationInputsStateKinesisFirehosePtrOutput() AnalyticsApplicationInputsStateKinesisFirehosePtrOutput {
	return o.ToAnalyticsApplicationInputsStateKinesisFirehosePtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsStateKinesisFirehoseOutput) ToAnalyticsApplicationInputsStateKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateKinesisFirehosePtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateKinesisFirehose) *AnalyticsApplicationInputsStateKinesisFirehose {
		return &v
	}).(AnalyticsApplicationInputsStateKinesisFirehosePtrOutput)
}

// The ARN of the Kinesis Firehose delivery stream.
func (o AnalyticsApplicationInputsStateKinesisFirehoseOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateKinesisFirehose) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationInputsStateKinesisFirehoseOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateKinesisFirehose) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsStateKinesisFirehosePtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsStateKinesisFirehosePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsStateKinesisFirehose)(nil)).Elem()
}

func (o AnalyticsApplicationInputsStateKinesisFirehosePtrOutput) ToAnalyticsApplicationInputsStateKinesisFirehosePtrOutput() AnalyticsApplicationInputsStateKinesisFirehosePtrOutput {
	return o
}

func (o AnalyticsApplicationInputsStateKinesisFirehosePtrOutput) ToAnalyticsApplicationInputsStateKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateKinesisFirehosePtrOutput {
	return o
}

func (o AnalyticsApplicationInputsStateKinesisFirehosePtrOutput) Elem() AnalyticsApplicationInputsStateKinesisFirehoseOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsStateKinesisFirehose) AnalyticsApplicationInputsStateKinesisFirehose {
		return *v
	}).(AnalyticsApplicationInputsStateKinesisFirehoseOutput)
}

// The ARN of the Kinesis Firehose delivery stream.
func (o AnalyticsApplicationInputsStateKinesisFirehosePtrOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateKinesisFirehose) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationInputsStateKinesisFirehosePtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateKinesisFirehose) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsStateKinesisStream struct {
	// The ARN of the Kinesis Stream.
	ResourceArn string `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn string `pulumi:"roleArn"`
}

type AnalyticsApplicationInputsStateKinesisStreamInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsStateKinesisStreamOutput() AnalyticsApplicationInputsStateKinesisStreamOutput
	ToAnalyticsApplicationInputsStateKinesisStreamOutputWithContext(context.Context) AnalyticsApplicationInputsStateKinesisStreamOutput
}

type AnalyticsApplicationInputsStateKinesisStreamArgs struct {
	// The ARN of the Kinesis Stream.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationInputsStateKinesisStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStateKinesisStream)(nil)).Elem()
}

func (i AnalyticsApplicationInputsStateKinesisStreamArgs) ToAnalyticsApplicationInputsStateKinesisStreamOutput() AnalyticsApplicationInputsStateKinesisStreamOutput {
	return i.ToAnalyticsApplicationInputsStateKinesisStreamOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsStateKinesisStreamArgs) ToAnalyticsApplicationInputsStateKinesisStreamOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateKinesisStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStateKinesisStreamOutput)
}

func (i AnalyticsApplicationInputsStateKinesisStreamArgs) ToAnalyticsApplicationInputsStateKinesisStreamPtrOutput() AnalyticsApplicationInputsStateKinesisStreamPtrOutput {
	return i.ToAnalyticsApplicationInputsStateKinesisStreamPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsStateKinesisStreamArgs) ToAnalyticsApplicationInputsStateKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateKinesisStreamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStateKinesisStreamOutput).ToAnalyticsApplicationInputsStateKinesisStreamPtrOutputWithContext(ctx)
}

type AnalyticsApplicationInputsStateKinesisStreamPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsStateKinesisStreamPtrOutput() AnalyticsApplicationInputsStateKinesisStreamPtrOutput
	ToAnalyticsApplicationInputsStateKinesisStreamPtrOutputWithContext(context.Context) AnalyticsApplicationInputsStateKinesisStreamPtrOutput
}

type analyticsApplicationInputsStateKinesisStreamPtrType AnalyticsApplicationInputsStateKinesisStreamArgs

func AnalyticsApplicationInputsStateKinesisStreamPtr(v *AnalyticsApplicationInputsStateKinesisStreamArgs) AnalyticsApplicationInputsStateKinesisStreamPtrInput {
	return (*analyticsApplicationInputsStateKinesisStreamPtrType)(v)
}

func (*analyticsApplicationInputsStateKinesisStreamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsStateKinesisStream)(nil)).Elem()
}

func (i *analyticsApplicationInputsStateKinesisStreamPtrType) ToAnalyticsApplicationInputsStateKinesisStreamPtrOutput() AnalyticsApplicationInputsStateKinesisStreamPtrOutput {
	return i.ToAnalyticsApplicationInputsStateKinesisStreamPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsStateKinesisStreamPtrType) ToAnalyticsApplicationInputsStateKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateKinesisStreamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStateKinesisStreamPtrOutput)
}

type AnalyticsApplicationInputsStateKinesisStreamOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsStateKinesisStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStateKinesisStream)(nil)).Elem()
}

func (o AnalyticsApplicationInputsStateKinesisStreamOutput) ToAnalyticsApplicationInputsStateKinesisStreamOutput() AnalyticsApplicationInputsStateKinesisStreamOutput {
	return o
}

func (o AnalyticsApplicationInputsStateKinesisStreamOutput) ToAnalyticsApplicationInputsStateKinesisStreamOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateKinesisStreamOutput {
	return o
}

func (o AnalyticsApplicationInputsStateKinesisStreamOutput) ToAnalyticsApplicationInputsStateKinesisStreamPtrOutput() AnalyticsApplicationInputsStateKinesisStreamPtrOutput {
	return o.ToAnalyticsApplicationInputsStateKinesisStreamPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsStateKinesisStreamOutput) ToAnalyticsApplicationInputsStateKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateKinesisStreamPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateKinesisStream) *AnalyticsApplicationInputsStateKinesisStream {
		return &v
	}).(AnalyticsApplicationInputsStateKinesisStreamPtrOutput)
}

// The ARN of the Kinesis Stream.
func (o AnalyticsApplicationInputsStateKinesisStreamOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateKinesisStream) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationInputsStateKinesisStreamOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateKinesisStream) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsStateKinesisStreamPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsStateKinesisStreamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsStateKinesisStream)(nil)).Elem()
}

func (o AnalyticsApplicationInputsStateKinesisStreamPtrOutput) ToAnalyticsApplicationInputsStateKinesisStreamPtrOutput() AnalyticsApplicationInputsStateKinesisStreamPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsStateKinesisStreamPtrOutput) ToAnalyticsApplicationInputsStateKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateKinesisStreamPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsStateKinesisStreamPtrOutput) Elem() AnalyticsApplicationInputsStateKinesisStreamOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsStateKinesisStream) AnalyticsApplicationInputsStateKinesisStream {
		return *v
	}).(AnalyticsApplicationInputsStateKinesisStreamOutput)
}

// The ARN of the Kinesis Stream.
func (o AnalyticsApplicationInputsStateKinesisStreamPtrOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateKinesisStream) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationInputsStateKinesisStreamPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateKinesisStream) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsStateParallelism struct {
	// The Count of streams.
	Count int `pulumi:"count"`
}

type AnalyticsApplicationInputsStateParallelismInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsStateParallelismOutput() AnalyticsApplicationInputsStateParallelismOutput
	ToAnalyticsApplicationInputsStateParallelismOutputWithContext(context.Context) AnalyticsApplicationInputsStateParallelismOutput
}

type AnalyticsApplicationInputsStateParallelismArgs struct {
	// The Count of streams.
	Count pulumi.IntInput `pulumi:"count"`
}

func (AnalyticsApplicationInputsStateParallelismArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStateParallelism)(nil)).Elem()
}

func (i AnalyticsApplicationInputsStateParallelismArgs) ToAnalyticsApplicationInputsStateParallelismOutput() AnalyticsApplicationInputsStateParallelismOutput {
	return i.ToAnalyticsApplicationInputsStateParallelismOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsStateParallelismArgs) ToAnalyticsApplicationInputsStateParallelismOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateParallelismOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStateParallelismOutput)
}

func (i AnalyticsApplicationInputsStateParallelismArgs) ToAnalyticsApplicationInputsStateParallelismPtrOutput() AnalyticsApplicationInputsStateParallelismPtrOutput {
	return i.ToAnalyticsApplicationInputsStateParallelismPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsStateParallelismArgs) ToAnalyticsApplicationInputsStateParallelismPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateParallelismPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStateParallelismOutput).ToAnalyticsApplicationInputsStateParallelismPtrOutputWithContext(ctx)
}

type AnalyticsApplicationInputsStateParallelismPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsStateParallelismPtrOutput() AnalyticsApplicationInputsStateParallelismPtrOutput
	ToAnalyticsApplicationInputsStateParallelismPtrOutputWithContext(context.Context) AnalyticsApplicationInputsStateParallelismPtrOutput
}

type analyticsApplicationInputsStateParallelismPtrType AnalyticsApplicationInputsStateParallelismArgs

func AnalyticsApplicationInputsStateParallelismPtr(v *AnalyticsApplicationInputsStateParallelismArgs) AnalyticsApplicationInputsStateParallelismPtrInput {
	return (*analyticsApplicationInputsStateParallelismPtrType)(v)
}

func (*analyticsApplicationInputsStateParallelismPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsStateParallelism)(nil)).Elem()
}

func (i *analyticsApplicationInputsStateParallelismPtrType) ToAnalyticsApplicationInputsStateParallelismPtrOutput() AnalyticsApplicationInputsStateParallelismPtrOutput {
	return i.ToAnalyticsApplicationInputsStateParallelismPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsStateParallelismPtrType) ToAnalyticsApplicationInputsStateParallelismPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateParallelismPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStateParallelismPtrOutput)
}

type AnalyticsApplicationInputsStateParallelismOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsStateParallelismOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStateParallelism)(nil)).Elem()
}

func (o AnalyticsApplicationInputsStateParallelismOutput) ToAnalyticsApplicationInputsStateParallelismOutput() AnalyticsApplicationInputsStateParallelismOutput {
	return o
}

func (o AnalyticsApplicationInputsStateParallelismOutput) ToAnalyticsApplicationInputsStateParallelismOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateParallelismOutput {
	return o
}

func (o AnalyticsApplicationInputsStateParallelismOutput) ToAnalyticsApplicationInputsStateParallelismPtrOutput() AnalyticsApplicationInputsStateParallelismPtrOutput {
	return o.ToAnalyticsApplicationInputsStateParallelismPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsStateParallelismOutput) ToAnalyticsApplicationInputsStateParallelismPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateParallelismPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateParallelism) *AnalyticsApplicationInputsStateParallelism {
		return &v
	}).(AnalyticsApplicationInputsStateParallelismPtrOutput)
}

// The Count of streams.
func (o AnalyticsApplicationInputsStateParallelismOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateParallelism) int { return v.Count }).(pulumi.IntOutput)
}

type AnalyticsApplicationInputsStateParallelismPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsStateParallelismPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsStateParallelism)(nil)).Elem()
}

func (o AnalyticsApplicationInputsStateParallelismPtrOutput) ToAnalyticsApplicationInputsStateParallelismPtrOutput() AnalyticsApplicationInputsStateParallelismPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsStateParallelismPtrOutput) ToAnalyticsApplicationInputsStateParallelismPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateParallelismPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsStateParallelismPtrOutput) Elem() AnalyticsApplicationInputsStateParallelismOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsStateParallelism) AnalyticsApplicationInputsStateParallelism {
		return *v
	}).(AnalyticsApplicationInputsStateParallelismOutput)
}

// The Count of streams.
func (o AnalyticsApplicationInputsStateParallelismPtrOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateParallelism) int { return v.Count }).(pulumi.IntOutput)
}

type AnalyticsApplicationInputsStateProcessingConfiguration struct {
	// The Lambda function configuration. See Lambda below for more details.
	Lambda AnalyticsApplicationInputsStateProcessingConfigurationLambda `pulumi:"lambda"`
}

type AnalyticsApplicationInputsStateProcessingConfigurationInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsStateProcessingConfigurationOutput() AnalyticsApplicationInputsStateProcessingConfigurationOutput
	ToAnalyticsApplicationInputsStateProcessingConfigurationOutputWithContext(context.Context) AnalyticsApplicationInputsStateProcessingConfigurationOutput
}

type AnalyticsApplicationInputsStateProcessingConfigurationArgs struct {
	// The Lambda function configuration. See Lambda below for more details.
	Lambda AnalyticsApplicationInputsStateProcessingConfigurationLambdaInput `pulumi:"lambda"`
}

func (AnalyticsApplicationInputsStateProcessingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStateProcessingConfiguration)(nil)).Elem()
}

func (i AnalyticsApplicationInputsStateProcessingConfigurationArgs) ToAnalyticsApplicationInputsStateProcessingConfigurationOutput() AnalyticsApplicationInputsStateProcessingConfigurationOutput {
	return i.ToAnalyticsApplicationInputsStateProcessingConfigurationOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsStateProcessingConfigurationArgs) ToAnalyticsApplicationInputsStateProcessingConfigurationOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateProcessingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStateProcessingConfigurationOutput)
}

func (i AnalyticsApplicationInputsStateProcessingConfigurationArgs) ToAnalyticsApplicationInputsStateProcessingConfigurationPtrOutput() AnalyticsApplicationInputsStateProcessingConfigurationPtrOutput {
	return i.ToAnalyticsApplicationInputsStateProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsStateProcessingConfigurationArgs) ToAnalyticsApplicationInputsStateProcessingConfigurationPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStateProcessingConfigurationOutput).ToAnalyticsApplicationInputsStateProcessingConfigurationPtrOutputWithContext(ctx)
}

type AnalyticsApplicationInputsStateProcessingConfigurationPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsStateProcessingConfigurationPtrOutput() AnalyticsApplicationInputsStateProcessingConfigurationPtrOutput
	ToAnalyticsApplicationInputsStateProcessingConfigurationPtrOutputWithContext(context.Context) AnalyticsApplicationInputsStateProcessingConfigurationPtrOutput
}

type analyticsApplicationInputsStateProcessingConfigurationPtrType AnalyticsApplicationInputsStateProcessingConfigurationArgs

func AnalyticsApplicationInputsStateProcessingConfigurationPtr(v *AnalyticsApplicationInputsStateProcessingConfigurationArgs) AnalyticsApplicationInputsStateProcessingConfigurationPtrInput {
	return (*analyticsApplicationInputsStateProcessingConfigurationPtrType)(v)
}

func (*analyticsApplicationInputsStateProcessingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsStateProcessingConfiguration)(nil)).Elem()
}

func (i *analyticsApplicationInputsStateProcessingConfigurationPtrType) ToAnalyticsApplicationInputsStateProcessingConfigurationPtrOutput() AnalyticsApplicationInputsStateProcessingConfigurationPtrOutput {
	return i.ToAnalyticsApplicationInputsStateProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsStateProcessingConfigurationPtrType) ToAnalyticsApplicationInputsStateProcessingConfigurationPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStateProcessingConfigurationPtrOutput)
}

type AnalyticsApplicationInputsStateProcessingConfigurationOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsStateProcessingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStateProcessingConfiguration)(nil)).Elem()
}

func (o AnalyticsApplicationInputsStateProcessingConfigurationOutput) ToAnalyticsApplicationInputsStateProcessingConfigurationOutput() AnalyticsApplicationInputsStateProcessingConfigurationOutput {
	return o
}

func (o AnalyticsApplicationInputsStateProcessingConfigurationOutput) ToAnalyticsApplicationInputsStateProcessingConfigurationOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateProcessingConfigurationOutput {
	return o
}

func (o AnalyticsApplicationInputsStateProcessingConfigurationOutput) ToAnalyticsApplicationInputsStateProcessingConfigurationPtrOutput() AnalyticsApplicationInputsStateProcessingConfigurationPtrOutput {
	return o.ToAnalyticsApplicationInputsStateProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsStateProcessingConfigurationOutput) ToAnalyticsApplicationInputsStateProcessingConfigurationPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateProcessingConfiguration) *AnalyticsApplicationInputsStateProcessingConfiguration {
		return &v
	}).(AnalyticsApplicationInputsStateProcessingConfigurationPtrOutput)
}

// The Lambda function configuration. See Lambda below for more details.
func (o AnalyticsApplicationInputsStateProcessingConfigurationOutput) Lambda() AnalyticsApplicationInputsStateProcessingConfigurationLambdaOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateProcessingConfiguration) AnalyticsApplicationInputsStateProcessingConfigurationLambda {
		return v.Lambda
	}).(AnalyticsApplicationInputsStateProcessingConfigurationLambdaOutput)
}

type AnalyticsApplicationInputsStateProcessingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsStateProcessingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsStateProcessingConfiguration)(nil)).Elem()
}

func (o AnalyticsApplicationInputsStateProcessingConfigurationPtrOutput) ToAnalyticsApplicationInputsStateProcessingConfigurationPtrOutput() AnalyticsApplicationInputsStateProcessingConfigurationPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsStateProcessingConfigurationPtrOutput) ToAnalyticsApplicationInputsStateProcessingConfigurationPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateProcessingConfigurationPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsStateProcessingConfigurationPtrOutput) Elem() AnalyticsApplicationInputsStateProcessingConfigurationOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsStateProcessingConfiguration) AnalyticsApplicationInputsStateProcessingConfiguration {
		return *v
	}).(AnalyticsApplicationInputsStateProcessingConfigurationOutput)
}

// The Lambda function configuration. See Lambda below for more details.
func (o AnalyticsApplicationInputsStateProcessingConfigurationPtrOutput) Lambda() AnalyticsApplicationInputsStateProcessingConfigurationLambdaOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateProcessingConfiguration) AnalyticsApplicationInputsStateProcessingConfigurationLambda {
		return v.Lambda
	}).(AnalyticsApplicationInputsStateProcessingConfigurationLambdaOutput)
}

type AnalyticsApplicationInputsStateProcessingConfigurationLambda struct {
	// The ARN of the Lambda function.
	ResourceArn string `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the Lambda function.
	RoleArn string `pulumi:"roleArn"`
}

type AnalyticsApplicationInputsStateProcessingConfigurationLambdaInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsStateProcessingConfigurationLambdaOutput() AnalyticsApplicationInputsStateProcessingConfigurationLambdaOutput
	ToAnalyticsApplicationInputsStateProcessingConfigurationLambdaOutputWithContext(context.Context) AnalyticsApplicationInputsStateProcessingConfigurationLambdaOutput
}

type AnalyticsApplicationInputsStateProcessingConfigurationLambdaArgs struct {
	// The ARN of the Lambda function.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the Lambda function.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationInputsStateProcessingConfigurationLambdaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStateProcessingConfigurationLambda)(nil)).Elem()
}

func (i AnalyticsApplicationInputsStateProcessingConfigurationLambdaArgs) ToAnalyticsApplicationInputsStateProcessingConfigurationLambdaOutput() AnalyticsApplicationInputsStateProcessingConfigurationLambdaOutput {
	return i.ToAnalyticsApplicationInputsStateProcessingConfigurationLambdaOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsStateProcessingConfigurationLambdaArgs) ToAnalyticsApplicationInputsStateProcessingConfigurationLambdaOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateProcessingConfigurationLambdaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStateProcessingConfigurationLambdaOutput)
}

type AnalyticsApplicationInputsStateProcessingConfigurationLambdaOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsStateProcessingConfigurationLambdaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStateProcessingConfigurationLambda)(nil)).Elem()
}

func (o AnalyticsApplicationInputsStateProcessingConfigurationLambdaOutput) ToAnalyticsApplicationInputsStateProcessingConfigurationLambdaOutput() AnalyticsApplicationInputsStateProcessingConfigurationLambdaOutput {
	return o
}

func (o AnalyticsApplicationInputsStateProcessingConfigurationLambdaOutput) ToAnalyticsApplicationInputsStateProcessingConfigurationLambdaOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateProcessingConfigurationLambdaOutput {
	return o
}

// The ARN of the Lambda function.
func (o AnalyticsApplicationInputsStateProcessingConfigurationLambdaOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateProcessingConfigurationLambda) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the Lambda function.
func (o AnalyticsApplicationInputsStateProcessingConfigurationLambdaOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateProcessingConfigurationLambda) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsStateSchema struct {
	// The Record Column mapping for the streaming source data element.
	// See Record Columns below for more details.
	RecordColumns []AnalyticsApplicationInputsStateSchemaRecordColumn `pulumi:"recordColumns"`
	// The Encoding of the record in the streaming source.
	RecordEncoding *string `pulumi:"recordEncoding"`
	// The Record Format and mapping information to schematize a record.
	// See Record Format below for more details.
	RecordFormat AnalyticsApplicationInputsStateSchemaRecordFormat `pulumi:"recordFormat"`
}

type AnalyticsApplicationInputsStateSchemaInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsStateSchemaOutput() AnalyticsApplicationInputsStateSchemaOutput
	ToAnalyticsApplicationInputsStateSchemaOutputWithContext(context.Context) AnalyticsApplicationInputsStateSchemaOutput
}

type AnalyticsApplicationInputsStateSchemaArgs struct {
	// The Record Column mapping for the streaming source data element.
	// See Record Columns below for more details.
	RecordColumns AnalyticsApplicationInputsStateSchemaRecordColumnArrayInput `pulumi:"recordColumns"`
	// The Encoding of the record in the streaming source.
	RecordEncoding pulumi.StringPtrInput `pulumi:"recordEncoding"`
	// The Record Format and mapping information to schematize a record.
	// See Record Format below for more details.
	RecordFormat AnalyticsApplicationInputsStateSchemaRecordFormatInput `pulumi:"recordFormat"`
}

func (AnalyticsApplicationInputsStateSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStateSchema)(nil)).Elem()
}

func (i AnalyticsApplicationInputsStateSchemaArgs) ToAnalyticsApplicationInputsStateSchemaOutput() AnalyticsApplicationInputsStateSchemaOutput {
	return i.ToAnalyticsApplicationInputsStateSchemaOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsStateSchemaArgs) ToAnalyticsApplicationInputsStateSchemaOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStateSchemaOutput)
}

type AnalyticsApplicationInputsStateSchemaOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsStateSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStateSchema)(nil)).Elem()
}

func (o AnalyticsApplicationInputsStateSchemaOutput) ToAnalyticsApplicationInputsStateSchemaOutput() AnalyticsApplicationInputsStateSchemaOutput {
	return o
}

func (o AnalyticsApplicationInputsStateSchemaOutput) ToAnalyticsApplicationInputsStateSchemaOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateSchemaOutput {
	return o
}

// The Record Column mapping for the streaming source data element.
// See Record Columns below for more details.
func (o AnalyticsApplicationInputsStateSchemaOutput) RecordColumns() AnalyticsApplicationInputsStateSchemaRecordColumnArrayOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateSchema) []AnalyticsApplicationInputsStateSchemaRecordColumn {
		return v.RecordColumns
	}).(AnalyticsApplicationInputsStateSchemaRecordColumnArrayOutput)
}

// The Encoding of the record in the streaming source.
func (o AnalyticsApplicationInputsStateSchemaOutput) RecordEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateSchema) *string { return v.RecordEncoding }).(pulumi.StringPtrOutput)
}

// The Record Format and mapping information to schematize a record.
// See Record Format below for more details.
func (o AnalyticsApplicationInputsStateSchemaOutput) RecordFormat() AnalyticsApplicationInputsStateSchemaRecordFormatOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateSchema) AnalyticsApplicationInputsStateSchemaRecordFormat {
		return v.RecordFormat
	}).(AnalyticsApplicationInputsStateSchemaRecordFormatOutput)
}

type AnalyticsApplicationInputsStateSchemaRecordColumn struct {
	// The Mapping reference to the data element.
	Mapping *string `pulumi:"mapping"`
	// Name of the column.
	Name string `pulumi:"name"`
	// The SQL Type of the column.
	SqlType string `pulumi:"sqlType"`
}

type AnalyticsApplicationInputsStateSchemaRecordColumnInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsStateSchemaRecordColumnOutput() AnalyticsApplicationInputsStateSchemaRecordColumnOutput
	ToAnalyticsApplicationInputsStateSchemaRecordColumnOutputWithContext(context.Context) AnalyticsApplicationInputsStateSchemaRecordColumnOutput
}

type AnalyticsApplicationInputsStateSchemaRecordColumnArgs struct {
	// The Mapping reference to the data element.
	Mapping pulumi.StringPtrInput `pulumi:"mapping"`
	// Name of the column.
	Name pulumi.StringInput `pulumi:"name"`
	// The SQL Type of the column.
	SqlType pulumi.StringInput `pulumi:"sqlType"`
}

func (AnalyticsApplicationInputsStateSchemaRecordColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStateSchemaRecordColumn)(nil)).Elem()
}

func (i AnalyticsApplicationInputsStateSchemaRecordColumnArgs) ToAnalyticsApplicationInputsStateSchemaRecordColumnOutput() AnalyticsApplicationInputsStateSchemaRecordColumnOutput {
	return i.ToAnalyticsApplicationInputsStateSchemaRecordColumnOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsStateSchemaRecordColumnArgs) ToAnalyticsApplicationInputsStateSchemaRecordColumnOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateSchemaRecordColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStateSchemaRecordColumnOutput)
}

type AnalyticsApplicationInputsStateSchemaRecordColumnArrayInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsStateSchemaRecordColumnArrayOutput() AnalyticsApplicationInputsStateSchemaRecordColumnArrayOutput
	ToAnalyticsApplicationInputsStateSchemaRecordColumnArrayOutputWithContext(context.Context) AnalyticsApplicationInputsStateSchemaRecordColumnArrayOutput
}

type AnalyticsApplicationInputsStateSchemaRecordColumnArray []AnalyticsApplicationInputsStateSchemaRecordColumnInput

func (AnalyticsApplicationInputsStateSchemaRecordColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationInputsStateSchemaRecordColumn)(nil)).Elem()
}

func (i AnalyticsApplicationInputsStateSchemaRecordColumnArray) ToAnalyticsApplicationInputsStateSchemaRecordColumnArrayOutput() AnalyticsApplicationInputsStateSchemaRecordColumnArrayOutput {
	return i.ToAnalyticsApplicationInputsStateSchemaRecordColumnArrayOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsStateSchemaRecordColumnArray) ToAnalyticsApplicationInputsStateSchemaRecordColumnArrayOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateSchemaRecordColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStateSchemaRecordColumnArrayOutput)
}

type AnalyticsApplicationInputsStateSchemaRecordColumnOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsStateSchemaRecordColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStateSchemaRecordColumn)(nil)).Elem()
}

func (o AnalyticsApplicationInputsStateSchemaRecordColumnOutput) ToAnalyticsApplicationInputsStateSchemaRecordColumnOutput() AnalyticsApplicationInputsStateSchemaRecordColumnOutput {
	return o
}

func (o AnalyticsApplicationInputsStateSchemaRecordColumnOutput) ToAnalyticsApplicationInputsStateSchemaRecordColumnOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateSchemaRecordColumnOutput {
	return o
}

// The Mapping reference to the data element.
func (o AnalyticsApplicationInputsStateSchemaRecordColumnOutput) Mapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateSchemaRecordColumn) *string { return v.Mapping }).(pulumi.StringPtrOutput)
}

// Name of the column.
func (o AnalyticsApplicationInputsStateSchemaRecordColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateSchemaRecordColumn) string { return v.Name }).(pulumi.StringOutput)
}

// The SQL Type of the column.
func (o AnalyticsApplicationInputsStateSchemaRecordColumnOutput) SqlType() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateSchemaRecordColumn) string { return v.SqlType }).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsStateSchemaRecordColumnArrayOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsStateSchemaRecordColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationInputsStateSchemaRecordColumn)(nil)).Elem()
}

func (o AnalyticsApplicationInputsStateSchemaRecordColumnArrayOutput) ToAnalyticsApplicationInputsStateSchemaRecordColumnArrayOutput() AnalyticsApplicationInputsStateSchemaRecordColumnArrayOutput {
	return o
}

func (o AnalyticsApplicationInputsStateSchemaRecordColumnArrayOutput) ToAnalyticsApplicationInputsStateSchemaRecordColumnArrayOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateSchemaRecordColumnArrayOutput {
	return o
}

func (o AnalyticsApplicationInputsStateSchemaRecordColumnArrayOutput) Index(i pulumi.IntInput) AnalyticsApplicationInputsStateSchemaRecordColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalyticsApplicationInputsStateSchemaRecordColumn {
		return vs[0].([]AnalyticsApplicationInputsStateSchemaRecordColumn)[vs[1].(int)]
	}).(AnalyticsApplicationInputsStateSchemaRecordColumnOutput)
}

type AnalyticsApplicationInputsStateSchemaRecordFormat struct {
	// The Mapping Information for the record format.
	// See Mapping Parameters below for more details.
	MappingParameters *AnalyticsApplicationInputsStateSchemaRecordFormatMappingParameters `pulumi:"mappingParameters"`
	// The type of Record Format. Can be `CSV` or `JSON`.
	RecordFormatType *string `pulumi:"recordFormatType"`
}

type AnalyticsApplicationInputsStateSchemaRecordFormatInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsStateSchemaRecordFormatOutput() AnalyticsApplicationInputsStateSchemaRecordFormatOutput
	ToAnalyticsApplicationInputsStateSchemaRecordFormatOutputWithContext(context.Context) AnalyticsApplicationInputsStateSchemaRecordFormatOutput
}

type AnalyticsApplicationInputsStateSchemaRecordFormatArgs struct {
	// The Mapping Information for the record format.
	// See Mapping Parameters below for more details.
	MappingParameters AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrInput `pulumi:"mappingParameters"`
	// The type of Record Format. Can be `CSV` or `JSON`.
	RecordFormatType pulumi.StringPtrInput `pulumi:"recordFormatType"`
}

func (AnalyticsApplicationInputsStateSchemaRecordFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStateSchemaRecordFormat)(nil)).Elem()
}

func (i AnalyticsApplicationInputsStateSchemaRecordFormatArgs) ToAnalyticsApplicationInputsStateSchemaRecordFormatOutput() AnalyticsApplicationInputsStateSchemaRecordFormatOutput {
	return i.ToAnalyticsApplicationInputsStateSchemaRecordFormatOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsStateSchemaRecordFormatArgs) ToAnalyticsApplicationInputsStateSchemaRecordFormatOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateSchemaRecordFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStateSchemaRecordFormatOutput)
}

type AnalyticsApplicationInputsStateSchemaRecordFormatOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsStateSchemaRecordFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStateSchemaRecordFormat)(nil)).Elem()
}

func (o AnalyticsApplicationInputsStateSchemaRecordFormatOutput) ToAnalyticsApplicationInputsStateSchemaRecordFormatOutput() AnalyticsApplicationInputsStateSchemaRecordFormatOutput {
	return o
}

func (o AnalyticsApplicationInputsStateSchemaRecordFormatOutput) ToAnalyticsApplicationInputsStateSchemaRecordFormatOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateSchemaRecordFormatOutput {
	return o
}

// The Mapping Information for the record format.
// See Mapping Parameters below for more details.
func (o AnalyticsApplicationInputsStateSchemaRecordFormatOutput) MappingParameters() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateSchemaRecordFormat) *AnalyticsApplicationInputsStateSchemaRecordFormatMappingParameters {
		return v.MappingParameters
	}).(AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutput)
}

// The type of Record Format. Can be `CSV` or `JSON`.
func (o AnalyticsApplicationInputsStateSchemaRecordFormatOutput) RecordFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateSchemaRecordFormat) *string { return v.RecordFormatType }).(pulumi.StringPtrOutput)
}

type AnalyticsApplicationInputsStateSchemaRecordFormatMappingParameters struct {
	// Mapping information when the record format uses delimiters.
	// See CSV Mapping Parameters below for more details.
	Csv *AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsv `pulumi:"csv"`
	// Mapping information when JSON is the record format on the streaming source.
	// See JSON Mapping Parameters below for more details.
	Json *AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJson `pulumi:"json"`
}

type AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersOutput() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersOutput
	ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersOutputWithContext(context.Context) AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersOutput
}

type AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersArgs struct {
	// Mapping information when the record format uses delimiters.
	// See CSV Mapping Parameters below for more details.
	Csv AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrInput `pulumi:"csv"`
	// Mapping information when JSON is the record format on the streaming source.
	// See JSON Mapping Parameters below for more details.
	Json AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrInput `pulumi:"json"`
}

func (AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStateSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (i AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersOutput() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersOutput {
	return i.ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersOutput)
}

func (i AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutput {
	return i.ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersOutput).ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx)
}

type AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutput
	ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Context) AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutput
}

type analyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrType AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersArgs

func AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtr(v *AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersArgs) AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrInput {
	return (*analyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrType)(v)
}

func (*analyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsStateSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (i *analyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrType) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutput {
	return i.ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrType) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutput)
}

type AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStateSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersOutput() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersOutput {
	return o
}

func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersOutput {
	return o
}

func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutput {
	return o.ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateSchemaRecordFormatMappingParameters) *AnalyticsApplicationInputsStateSchemaRecordFormatMappingParameters {
		return &v
	}).(AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutput)
}

// Mapping information when the record format uses delimiters.
// See CSV Mapping Parameters below for more details.
func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersOutput) Csv() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateSchemaRecordFormatMappingParameters) *AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsv {
		return v.Csv
	}).(AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutput)
}

// Mapping information when JSON is the record format on the streaming source.
// See JSON Mapping Parameters below for more details.
func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersOutput) Json() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateSchemaRecordFormatMappingParameters) *AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJson {
		return v.Json
	}).(AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutput)
}

type AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsStateSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutput) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutput) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutput) Elem() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsStateSchemaRecordFormatMappingParameters) AnalyticsApplicationInputsStateSchemaRecordFormatMappingParameters {
		return *v
	}).(AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersOutput)
}

// Mapping information when the record format uses delimiters.
// See CSV Mapping Parameters below for more details.
func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutput) Csv() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateSchemaRecordFormatMappingParameters) *AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsv {
		return v.Csv
	}).(AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutput)
}

// Mapping information when JSON is the record format on the streaming source.
// See JSON Mapping Parameters below for more details.
func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutput) Json() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateSchemaRecordFormatMappingParameters) *AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJson {
		return v.Json
	}).(AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutput)
}

type AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsv struct {
	// The Column Delimiter.
	RecordColumnDelimiter string `pulumi:"recordColumnDelimiter"`
	// The Row Delimiter.
	RecordRowDelimiter string `pulumi:"recordRowDelimiter"`
}

type AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvOutput() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvOutput
	ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvOutputWithContext(context.Context) AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvOutput
}

type AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvArgs struct {
	// The Column Delimiter.
	RecordColumnDelimiter pulumi.StringInput `pulumi:"recordColumnDelimiter"`
	// The Row Delimiter.
	RecordRowDelimiter pulumi.StringInput `pulumi:"recordRowDelimiter"`
}

func (AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (i AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvOutput() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvOutput {
	return i.ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvOutput)
}

func (i AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutput {
	return i.ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvOutput).ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx)
}

type AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutput
	ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Context) AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutput
}

type analyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrType AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvArgs

func AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtr(v *AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvArgs) AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrInput {
	return (*analyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrType)(v)
}

func (*analyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (i *analyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrType) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutput {
	return i.ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrType) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutput)
}

type AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvOutput() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvOutput {
	return o
}

func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvOutput {
	return o
}

func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsv) *AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsv {
		return &v
	}).(AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutput)
}

// The Column Delimiter.
func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvOutput) RecordColumnDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsv) string {
		return v.RecordColumnDelimiter
	}).(pulumi.StringOutput)
}

// The Row Delimiter.
func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvOutput) RecordRowDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsv) string {
		return v.RecordRowDelimiter
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutput) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutput) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutput) Elem() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsv) AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsv {
		return *v
	}).(AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvOutput)
}

// The Column Delimiter.
func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutput) RecordColumnDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsv) string {
		return v.RecordColumnDelimiter
	}).(pulumi.StringOutput)
}

// The Row Delimiter.
func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutput) RecordRowDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsv) string {
		return v.RecordRowDelimiter
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJson struct {
	// Path to the top-level parent that contains the records.
	RecordRowPath string `pulumi:"recordRowPath"`
}

type AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonOutput() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonOutput
	ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonOutputWithContext(context.Context) AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonOutput
}

type AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonArgs struct {
	// Path to the top-level parent that contains the records.
	RecordRowPath pulumi.StringInput `pulumi:"recordRowPath"`
}

func (AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (i AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonOutput() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonOutput {
	return i.ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonOutput)
}

func (i AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutput {
	return i.ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonOutput).ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx)
}

type AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutput
	ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Context) AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutput
}

type analyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrType AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonArgs

func AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtr(v *AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonArgs) AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrInput {
	return (*analyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrType)(v)
}

func (*analyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (i *analyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrType) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutput {
	return i.ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrType) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutput)
}

type AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonOutput() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonOutput {
	return o
}

func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonOutput {
	return o
}

func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJson) *AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJson {
		return &v
	}).(AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutput)
}

// Path to the top-level parent that contains the records.
func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonOutput) RecordRowPath() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJson) string {
		return v.RecordRowPath
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutput) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutput) ToAnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o
}

func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutput) Elem() AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonOutput {
	return o.ApplyT(func(v *AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJson) AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJson {
		return *v
	}).(AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonOutput)
}

// Path to the top-level parent that contains the records.
func (o AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutput) RecordRowPath() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJson) string {
		return v.RecordRowPath
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationInputsStateStartingPositionConfiguration struct {
	StartingPosition *string `pulumi:"startingPosition"`
}

type AnalyticsApplicationInputsStateStartingPositionConfigurationInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsStateStartingPositionConfigurationOutput() AnalyticsApplicationInputsStateStartingPositionConfigurationOutput
	ToAnalyticsApplicationInputsStateStartingPositionConfigurationOutputWithContext(context.Context) AnalyticsApplicationInputsStateStartingPositionConfigurationOutput
}

type AnalyticsApplicationInputsStateStartingPositionConfigurationArgs struct {
	StartingPosition pulumi.StringPtrInput `pulumi:"startingPosition"`
}

func (AnalyticsApplicationInputsStateStartingPositionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStateStartingPositionConfiguration)(nil)).Elem()
}

func (i AnalyticsApplicationInputsStateStartingPositionConfigurationArgs) ToAnalyticsApplicationInputsStateStartingPositionConfigurationOutput() AnalyticsApplicationInputsStateStartingPositionConfigurationOutput {
	return i.ToAnalyticsApplicationInputsStateStartingPositionConfigurationOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsStateStartingPositionConfigurationArgs) ToAnalyticsApplicationInputsStateStartingPositionConfigurationOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateStartingPositionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStateStartingPositionConfigurationOutput)
}

type AnalyticsApplicationInputsStateStartingPositionConfigurationArrayInput interface {
	pulumi.Input

	ToAnalyticsApplicationInputsStateStartingPositionConfigurationArrayOutput() AnalyticsApplicationInputsStateStartingPositionConfigurationArrayOutput
	ToAnalyticsApplicationInputsStateStartingPositionConfigurationArrayOutputWithContext(context.Context) AnalyticsApplicationInputsStateStartingPositionConfigurationArrayOutput
}

type AnalyticsApplicationInputsStateStartingPositionConfigurationArray []AnalyticsApplicationInputsStateStartingPositionConfigurationInput

func (AnalyticsApplicationInputsStateStartingPositionConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationInputsStateStartingPositionConfiguration)(nil)).Elem()
}

func (i AnalyticsApplicationInputsStateStartingPositionConfigurationArray) ToAnalyticsApplicationInputsStateStartingPositionConfigurationArrayOutput() AnalyticsApplicationInputsStateStartingPositionConfigurationArrayOutput {
	return i.ToAnalyticsApplicationInputsStateStartingPositionConfigurationArrayOutputWithContext(context.Background())
}

func (i AnalyticsApplicationInputsStateStartingPositionConfigurationArray) ToAnalyticsApplicationInputsStateStartingPositionConfigurationArrayOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateStartingPositionConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationInputsStateStartingPositionConfigurationArrayOutput)
}

type AnalyticsApplicationInputsStateStartingPositionConfigurationOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsStateStartingPositionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationInputsStateStartingPositionConfiguration)(nil)).Elem()
}

func (o AnalyticsApplicationInputsStateStartingPositionConfigurationOutput) ToAnalyticsApplicationInputsStateStartingPositionConfigurationOutput() AnalyticsApplicationInputsStateStartingPositionConfigurationOutput {
	return o
}

func (o AnalyticsApplicationInputsStateStartingPositionConfigurationOutput) ToAnalyticsApplicationInputsStateStartingPositionConfigurationOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateStartingPositionConfigurationOutput {
	return o
}

func (o AnalyticsApplicationInputsStateStartingPositionConfigurationOutput) StartingPosition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationInputsStateStartingPositionConfiguration) *string {
		return v.StartingPosition
	}).(pulumi.StringPtrOutput)
}

type AnalyticsApplicationInputsStateStartingPositionConfigurationArrayOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationInputsStateStartingPositionConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationInputsStateStartingPositionConfiguration)(nil)).Elem()
}

func (o AnalyticsApplicationInputsStateStartingPositionConfigurationArrayOutput) ToAnalyticsApplicationInputsStateStartingPositionConfigurationArrayOutput() AnalyticsApplicationInputsStateStartingPositionConfigurationArrayOutput {
	return o
}

func (o AnalyticsApplicationInputsStateStartingPositionConfigurationArrayOutput) ToAnalyticsApplicationInputsStateStartingPositionConfigurationArrayOutputWithContext(ctx context.Context) AnalyticsApplicationInputsStateStartingPositionConfigurationArrayOutput {
	return o
}

func (o AnalyticsApplicationInputsStateStartingPositionConfigurationArrayOutput) Index(i pulumi.IntInput) AnalyticsApplicationInputsStateStartingPositionConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalyticsApplicationInputsStateStartingPositionConfiguration {
		return vs[0].([]AnalyticsApplicationInputsStateStartingPositionConfiguration)[vs[1].(int)]
	}).(AnalyticsApplicationInputsStateStartingPositionConfigurationOutput)
}

type AnalyticsApplicationOutput struct {
	// The ARN of the Kinesis Analytics Application.
	Id string `pulumi:"id"`
	// The Kinesis Firehose configuration for the destination stream. Conflicts with `kinesisStream`.
	// See Kinesis Firehose below for more details.
	KinesisFirehose *AnalyticsApplicationOutputKinesisFirehose `pulumi:"kinesisFirehose"`
	// The Kinesis Stream configuration for the destination stream. Conflicts with `kinesisFirehose`.
	// See Kinesis Stream below for more details.
	KinesisStream *AnalyticsApplicationOutputKinesisStream `pulumi:"kinesisStream"`
	// The Lambda function destination. See Lambda below for more details.
	Lambda *AnalyticsApplicationOutputLambda `pulumi:"lambda"`
	// The Name of the in-application stream.
	Name string `pulumi:"name"`
	// The Schema format of the data written to the destination. See Destination Schema below for more details.
	Schema AnalyticsApplicationOutputSchema `pulumi:"schema"`
}

type AnalyticsApplicationOutputInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputOutput() AnalyticsApplicationOutputOutput
	ToAnalyticsApplicationOutputOutputWithContext(context.Context) AnalyticsApplicationOutputOutput
}

type AnalyticsApplicationOutputArgs struct {
	// The ARN of the Kinesis Analytics Application.
	Id pulumi.StringInput `pulumi:"id"`
	// The Kinesis Firehose configuration for the destination stream. Conflicts with `kinesisStream`.
	// See Kinesis Firehose below for more details.
	KinesisFirehose AnalyticsApplicationOutputKinesisFirehosePtrInput `pulumi:"kinesisFirehose"`
	// The Kinesis Stream configuration for the destination stream. Conflicts with `kinesisFirehose`.
	// See Kinesis Stream below for more details.
	KinesisStream AnalyticsApplicationOutputKinesisStreamPtrInput `pulumi:"kinesisStream"`
	// The Lambda function destination. See Lambda below for more details.
	Lambda AnalyticsApplicationOutputLambdaPtrInput `pulumi:"lambda"`
	// The Name of the in-application stream.
	Name pulumi.StringInput `pulumi:"name"`
	// The Schema format of the data written to the destination. See Destination Schema below for more details.
	Schema AnalyticsApplicationOutputSchemaInput `pulumi:"schema"`
}

func (AnalyticsApplicationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutput)(nil)).Elem()
}

func (i AnalyticsApplicationOutputArgs) ToAnalyticsApplicationOutputOutput() AnalyticsApplicationOutputOutput {
	return i.ToAnalyticsApplicationOutputOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputArgs) ToAnalyticsApplicationOutputOutputWithContext(ctx context.Context) AnalyticsApplicationOutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputOutput)
}

type AnalyticsApplicationOutputArrayInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputArrayOutput() AnalyticsApplicationOutputArrayOutput
	ToAnalyticsApplicationOutputArrayOutputWithContext(context.Context) AnalyticsApplicationOutputArrayOutput
}

type AnalyticsApplicationOutputArray []AnalyticsApplicationOutputInput

func (AnalyticsApplicationOutputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationOutput)(nil)).Elem()
}

func (i AnalyticsApplicationOutputArray) ToAnalyticsApplicationOutputArrayOutput() AnalyticsApplicationOutputArrayOutput {
	return i.ToAnalyticsApplicationOutputArrayOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputArray) ToAnalyticsApplicationOutputArrayOutputWithContext(ctx context.Context) AnalyticsApplicationOutputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputArrayOutput)
}

type AnalyticsApplicationOutputOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutput)(nil)).Elem()
}

func (o AnalyticsApplicationOutputOutput) ToAnalyticsApplicationOutputOutput() AnalyticsApplicationOutputOutput {
	return o
}

func (o AnalyticsApplicationOutputOutput) ToAnalyticsApplicationOutputOutputWithContext(ctx context.Context) AnalyticsApplicationOutputOutput {
	return o
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationOutputOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutput) string { return v.Id }).(pulumi.StringOutput)
}

// The Kinesis Firehose configuration for the destination stream. Conflicts with `kinesisStream`.
// See Kinesis Firehose below for more details.
func (o AnalyticsApplicationOutputOutput) KinesisFirehose() AnalyticsApplicationOutputKinesisFirehosePtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutput) *AnalyticsApplicationOutputKinesisFirehose {
		return v.KinesisFirehose
	}).(AnalyticsApplicationOutputKinesisFirehosePtrOutput)
}

// The Kinesis Stream configuration for the destination stream. Conflicts with `kinesisFirehose`.
// See Kinesis Stream below for more details.
func (o AnalyticsApplicationOutputOutput) KinesisStream() AnalyticsApplicationOutputKinesisStreamPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutput) *AnalyticsApplicationOutputKinesisStream { return v.KinesisStream }).(AnalyticsApplicationOutputKinesisStreamPtrOutput)
}

// The Lambda function destination. See Lambda below for more details.
func (o AnalyticsApplicationOutputOutput) Lambda() AnalyticsApplicationOutputLambdaPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutput) *AnalyticsApplicationOutputLambda { return v.Lambda }).(AnalyticsApplicationOutputLambdaPtrOutput)
}

// The Name of the in-application stream.
func (o AnalyticsApplicationOutputOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutput) string { return v.Name }).(pulumi.StringOutput)
}

// The Schema format of the data written to the destination. See Destination Schema below for more details.
func (o AnalyticsApplicationOutputOutput) Schema() AnalyticsApplicationOutputSchemaOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutput) AnalyticsApplicationOutputSchema { return v.Schema }).(AnalyticsApplicationOutputSchemaOutput)
}

type AnalyticsApplicationOutputArrayOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationOutput)(nil)).Elem()
}

func (o AnalyticsApplicationOutputArrayOutput) ToAnalyticsApplicationOutputArrayOutput() AnalyticsApplicationOutputArrayOutput {
	return o
}

func (o AnalyticsApplicationOutputArrayOutput) ToAnalyticsApplicationOutputArrayOutputWithContext(ctx context.Context) AnalyticsApplicationOutputArrayOutput {
	return o
}

func (o AnalyticsApplicationOutputArrayOutput) Index(i pulumi.IntInput) AnalyticsApplicationOutputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalyticsApplicationOutput {
		return vs[0].([]AnalyticsApplicationOutput)[vs[1].(int)]
	}).(AnalyticsApplicationOutputOutput)
}

type AnalyticsApplicationOutputArgs struct {
	// The ARN of the Kinesis Analytics Application.
	Id *string `pulumi:"id"`
	// The Kinesis Firehose configuration for the destination stream. Conflicts with `kinesisStream`.
	// See Kinesis Firehose below for more details.
	KinesisFirehose *AnalyticsApplicationOutputKinesisFirehoseArgs `pulumi:"kinesisFirehose"`
	// The Kinesis Stream configuration for the destination stream. Conflicts with `kinesisFirehose`.
	// See Kinesis Stream below for more details.
	KinesisStream *AnalyticsApplicationOutputKinesisStreamArgs `pulumi:"kinesisStream"`
	// The Lambda function destination. See Lambda below for more details.
	Lambda *AnalyticsApplicationOutputLambdaArgs `pulumi:"lambda"`
	// The Name of the in-application stream.
	Name string `pulumi:"name"`
	// The Schema format of the data written to the destination. See Destination Schema below for more details.
	Schema AnalyticsApplicationOutputSchemaArgs `pulumi:"schema"`
}

type AnalyticsApplicationOutputArgsInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputArgsOutput() AnalyticsApplicationOutputArgsOutput
	ToAnalyticsApplicationOutputArgsOutputWithContext(context.Context) AnalyticsApplicationOutputArgsOutput
}

type AnalyticsApplicationOutputArgsArgs struct {
	// The ARN of the Kinesis Analytics Application.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Kinesis Firehose configuration for the destination stream. Conflicts with `kinesisStream`.
	// See Kinesis Firehose below for more details.
	KinesisFirehose AnalyticsApplicationOutputKinesisFirehoseArgsPtrInput `pulumi:"kinesisFirehose"`
	// The Kinesis Stream configuration for the destination stream. Conflicts with `kinesisFirehose`.
	// See Kinesis Stream below for more details.
	KinesisStream AnalyticsApplicationOutputKinesisStreamArgsPtrInput `pulumi:"kinesisStream"`
	// The Lambda function destination. See Lambda below for more details.
	Lambda AnalyticsApplicationOutputLambdaArgsPtrInput `pulumi:"lambda"`
	// The Name of the in-application stream.
	Name pulumi.StringInput `pulumi:"name"`
	// The Schema format of the data written to the destination. See Destination Schema below for more details.
	Schema AnalyticsApplicationOutputSchemaArgsInput `pulumi:"schema"`
}

func (AnalyticsApplicationOutputArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputArgs)(nil)).Elem()
}

func (i AnalyticsApplicationOutputArgsArgs) ToAnalyticsApplicationOutputArgsOutput() AnalyticsApplicationOutputArgsOutput {
	return i.ToAnalyticsApplicationOutputArgsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputArgsArgs) ToAnalyticsApplicationOutputArgsOutputWithContext(ctx context.Context) AnalyticsApplicationOutputArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputArgsOutput)
}

type AnalyticsApplicationOutputArgsArrayInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputArgsArrayOutput() AnalyticsApplicationOutputArgsArrayOutput
	ToAnalyticsApplicationOutputArgsArrayOutputWithContext(context.Context) AnalyticsApplicationOutputArgsArrayOutput
}

type AnalyticsApplicationOutputArgsArray []AnalyticsApplicationOutputArgsInput

func (AnalyticsApplicationOutputArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationOutputArgs)(nil)).Elem()
}

func (i AnalyticsApplicationOutputArgsArray) ToAnalyticsApplicationOutputArgsArrayOutput() AnalyticsApplicationOutputArgsArrayOutput {
	return i.ToAnalyticsApplicationOutputArgsArrayOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputArgsArray) ToAnalyticsApplicationOutputArgsArrayOutputWithContext(ctx context.Context) AnalyticsApplicationOutputArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputArgsArrayOutput)
}

type AnalyticsApplicationOutputArgsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputArgs)(nil)).Elem()
}

func (o AnalyticsApplicationOutputArgsOutput) ToAnalyticsApplicationOutputArgsOutput() AnalyticsApplicationOutputArgsOutput {
	return o
}

func (o AnalyticsApplicationOutputArgsOutput) ToAnalyticsApplicationOutputArgsOutputWithContext(ctx context.Context) AnalyticsApplicationOutputArgsOutput {
	return o
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationOutputArgsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputArgs) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Kinesis Firehose configuration for the destination stream. Conflicts with `kinesisStream`.
// See Kinesis Firehose below for more details.
func (o AnalyticsApplicationOutputArgsOutput) KinesisFirehose() AnalyticsApplicationOutputKinesisFirehoseArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputArgs) *AnalyticsApplicationOutputKinesisFirehoseArgs {
		return v.KinesisFirehose
	}).(AnalyticsApplicationOutputKinesisFirehoseArgsPtrOutput)
}

// The Kinesis Stream configuration for the destination stream. Conflicts with `kinesisFirehose`.
// See Kinesis Stream below for more details.
func (o AnalyticsApplicationOutputArgsOutput) KinesisStream() AnalyticsApplicationOutputKinesisStreamArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputArgs) *AnalyticsApplicationOutputKinesisStreamArgs {
		return v.KinesisStream
	}).(AnalyticsApplicationOutputKinesisStreamArgsPtrOutput)
}

// The Lambda function destination. See Lambda below for more details.
func (o AnalyticsApplicationOutputArgsOutput) Lambda() AnalyticsApplicationOutputLambdaArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputArgs) *AnalyticsApplicationOutputLambdaArgs { return v.Lambda }).(AnalyticsApplicationOutputLambdaArgsPtrOutput)
}

// The Name of the in-application stream.
func (o AnalyticsApplicationOutputArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputArgs) string { return v.Name }).(pulumi.StringOutput)
}

// The Schema format of the data written to the destination. See Destination Schema below for more details.
func (o AnalyticsApplicationOutputArgsOutput) Schema() AnalyticsApplicationOutputSchemaArgsOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputArgs) AnalyticsApplicationOutputSchemaArgs { return v.Schema }).(AnalyticsApplicationOutputSchemaArgsOutput)
}

type AnalyticsApplicationOutputArgsArrayOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationOutputArgs)(nil)).Elem()
}

func (o AnalyticsApplicationOutputArgsArrayOutput) ToAnalyticsApplicationOutputArgsArrayOutput() AnalyticsApplicationOutputArgsArrayOutput {
	return o
}

func (o AnalyticsApplicationOutputArgsArrayOutput) ToAnalyticsApplicationOutputArgsArrayOutputWithContext(ctx context.Context) AnalyticsApplicationOutputArgsArrayOutput {
	return o
}

func (o AnalyticsApplicationOutputArgsArrayOutput) Index(i pulumi.IntInput) AnalyticsApplicationOutputArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalyticsApplicationOutputArgs {
		return vs[0].([]AnalyticsApplicationOutputArgs)[vs[1].(int)]
	}).(AnalyticsApplicationOutputArgsOutput)
}

type AnalyticsApplicationOutputKinesisFirehose struct {
	// The ARN of the Kinesis Firehose delivery stream.
	ResourceArn string `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn string `pulumi:"roleArn"`
}

type AnalyticsApplicationOutputKinesisFirehoseInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputKinesisFirehoseOutput() AnalyticsApplicationOutputKinesisFirehoseOutput
	ToAnalyticsApplicationOutputKinesisFirehoseOutputWithContext(context.Context) AnalyticsApplicationOutputKinesisFirehoseOutput
}

type AnalyticsApplicationOutputKinesisFirehoseArgs struct {
	// The ARN of the Kinesis Firehose delivery stream.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationOutputKinesisFirehoseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputKinesisFirehose)(nil)).Elem()
}

func (i AnalyticsApplicationOutputKinesisFirehoseArgs) ToAnalyticsApplicationOutputKinesisFirehoseOutput() AnalyticsApplicationOutputKinesisFirehoseOutput {
	return i.ToAnalyticsApplicationOutputKinesisFirehoseOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputKinesisFirehoseArgs) ToAnalyticsApplicationOutputKinesisFirehoseOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisFirehoseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputKinesisFirehoseOutput)
}

func (i AnalyticsApplicationOutputKinesisFirehoseArgs) ToAnalyticsApplicationOutputKinesisFirehosePtrOutput() AnalyticsApplicationOutputKinesisFirehosePtrOutput {
	return i.ToAnalyticsApplicationOutputKinesisFirehosePtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputKinesisFirehoseArgs) ToAnalyticsApplicationOutputKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputKinesisFirehoseOutput).ToAnalyticsApplicationOutputKinesisFirehosePtrOutputWithContext(ctx)
}

type AnalyticsApplicationOutputKinesisFirehosePtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputKinesisFirehosePtrOutput() AnalyticsApplicationOutputKinesisFirehosePtrOutput
	ToAnalyticsApplicationOutputKinesisFirehosePtrOutputWithContext(context.Context) AnalyticsApplicationOutputKinesisFirehosePtrOutput
}

type analyticsApplicationOutputKinesisFirehosePtrType AnalyticsApplicationOutputKinesisFirehoseArgs

func AnalyticsApplicationOutputKinesisFirehosePtr(v *AnalyticsApplicationOutputKinesisFirehoseArgs) AnalyticsApplicationOutputKinesisFirehosePtrInput {
	return (*analyticsApplicationOutputKinesisFirehosePtrType)(v)
}

func (*analyticsApplicationOutputKinesisFirehosePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationOutputKinesisFirehose)(nil)).Elem()
}

func (i *analyticsApplicationOutputKinesisFirehosePtrType) ToAnalyticsApplicationOutputKinesisFirehosePtrOutput() AnalyticsApplicationOutputKinesisFirehosePtrOutput {
	return i.ToAnalyticsApplicationOutputKinesisFirehosePtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationOutputKinesisFirehosePtrType) ToAnalyticsApplicationOutputKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputKinesisFirehosePtrOutput)
}

type AnalyticsApplicationOutputKinesisFirehoseOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputKinesisFirehoseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputKinesisFirehose)(nil)).Elem()
}

func (o AnalyticsApplicationOutputKinesisFirehoseOutput) ToAnalyticsApplicationOutputKinesisFirehoseOutput() AnalyticsApplicationOutputKinesisFirehoseOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisFirehoseOutput) ToAnalyticsApplicationOutputKinesisFirehoseOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisFirehoseOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisFirehoseOutput) ToAnalyticsApplicationOutputKinesisFirehosePtrOutput() AnalyticsApplicationOutputKinesisFirehosePtrOutput {
	return o.ToAnalyticsApplicationOutputKinesisFirehosePtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationOutputKinesisFirehoseOutput) ToAnalyticsApplicationOutputKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisFirehosePtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisFirehose) *AnalyticsApplicationOutputKinesisFirehose {
		return &v
	}).(AnalyticsApplicationOutputKinesisFirehosePtrOutput)
}

// The ARN of the Kinesis Firehose delivery stream.
func (o AnalyticsApplicationOutputKinesisFirehoseOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisFirehose) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationOutputKinesisFirehoseOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisFirehose) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationOutputKinesisFirehosePtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputKinesisFirehosePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationOutputKinesisFirehose)(nil)).Elem()
}

func (o AnalyticsApplicationOutputKinesisFirehosePtrOutput) ToAnalyticsApplicationOutputKinesisFirehosePtrOutput() AnalyticsApplicationOutputKinesisFirehosePtrOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisFirehosePtrOutput) ToAnalyticsApplicationOutputKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisFirehosePtrOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisFirehosePtrOutput) Elem() AnalyticsApplicationOutputKinesisFirehoseOutput {
	return o.ApplyT(func(v *AnalyticsApplicationOutputKinesisFirehose) AnalyticsApplicationOutputKinesisFirehose {
		return *v
	}).(AnalyticsApplicationOutputKinesisFirehoseOutput)
}

// The ARN of the Kinesis Firehose delivery stream.
func (o AnalyticsApplicationOutputKinesisFirehosePtrOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisFirehose) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationOutputKinesisFirehosePtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisFirehose) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationOutputKinesisFirehoseArgs struct {
	// The ARN of the Kinesis Firehose delivery stream.
	ResourceArn string `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn string `pulumi:"roleArn"`
}

type AnalyticsApplicationOutputKinesisFirehoseArgsInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputKinesisFirehoseArgsOutput() AnalyticsApplicationOutputKinesisFirehoseArgsOutput
	ToAnalyticsApplicationOutputKinesisFirehoseArgsOutputWithContext(context.Context) AnalyticsApplicationOutputKinesisFirehoseArgsOutput
}

type AnalyticsApplicationOutputKinesisFirehoseArgsArgs struct {
	// The ARN of the Kinesis Firehose delivery stream.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationOutputKinesisFirehoseArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputKinesisFirehoseArgs)(nil)).Elem()
}

func (i AnalyticsApplicationOutputKinesisFirehoseArgsArgs) ToAnalyticsApplicationOutputKinesisFirehoseArgsOutput() AnalyticsApplicationOutputKinesisFirehoseArgsOutput {
	return i.ToAnalyticsApplicationOutputKinesisFirehoseArgsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputKinesisFirehoseArgsArgs) ToAnalyticsApplicationOutputKinesisFirehoseArgsOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisFirehoseArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputKinesisFirehoseArgsOutput)
}

func (i AnalyticsApplicationOutputKinesisFirehoseArgsArgs) ToAnalyticsApplicationOutputKinesisFirehoseArgsPtrOutput() AnalyticsApplicationOutputKinesisFirehoseArgsPtrOutput {
	return i.ToAnalyticsApplicationOutputKinesisFirehoseArgsPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputKinesisFirehoseArgsArgs) ToAnalyticsApplicationOutputKinesisFirehoseArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisFirehoseArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputKinesisFirehoseArgsOutput).ToAnalyticsApplicationOutputKinesisFirehoseArgsPtrOutputWithContext(ctx)
}

type AnalyticsApplicationOutputKinesisFirehoseArgsPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputKinesisFirehoseArgsPtrOutput() AnalyticsApplicationOutputKinesisFirehoseArgsPtrOutput
	ToAnalyticsApplicationOutputKinesisFirehoseArgsPtrOutputWithContext(context.Context) AnalyticsApplicationOutputKinesisFirehoseArgsPtrOutput
}

type analyticsApplicationOutputKinesisFirehoseArgsPtrType AnalyticsApplicationOutputKinesisFirehoseArgsArgs

func AnalyticsApplicationOutputKinesisFirehoseArgsPtr(v *AnalyticsApplicationOutputKinesisFirehoseArgsArgs) AnalyticsApplicationOutputKinesisFirehoseArgsPtrInput {
	return (*analyticsApplicationOutputKinesisFirehoseArgsPtrType)(v)
}

func (*analyticsApplicationOutputKinesisFirehoseArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationOutputKinesisFirehoseArgs)(nil)).Elem()
}

func (i *analyticsApplicationOutputKinesisFirehoseArgsPtrType) ToAnalyticsApplicationOutputKinesisFirehoseArgsPtrOutput() AnalyticsApplicationOutputKinesisFirehoseArgsPtrOutput {
	return i.ToAnalyticsApplicationOutputKinesisFirehoseArgsPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationOutputKinesisFirehoseArgsPtrType) ToAnalyticsApplicationOutputKinesisFirehoseArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisFirehoseArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputKinesisFirehoseArgsPtrOutput)
}

type AnalyticsApplicationOutputKinesisFirehoseArgsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputKinesisFirehoseArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputKinesisFirehoseArgs)(nil)).Elem()
}

func (o AnalyticsApplicationOutputKinesisFirehoseArgsOutput) ToAnalyticsApplicationOutputKinesisFirehoseArgsOutput() AnalyticsApplicationOutputKinesisFirehoseArgsOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisFirehoseArgsOutput) ToAnalyticsApplicationOutputKinesisFirehoseArgsOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisFirehoseArgsOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisFirehoseArgsOutput) ToAnalyticsApplicationOutputKinesisFirehoseArgsPtrOutput() AnalyticsApplicationOutputKinesisFirehoseArgsPtrOutput {
	return o.ToAnalyticsApplicationOutputKinesisFirehoseArgsPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationOutputKinesisFirehoseArgsOutput) ToAnalyticsApplicationOutputKinesisFirehoseArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisFirehoseArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisFirehoseArgs) *AnalyticsApplicationOutputKinesisFirehoseArgs {
		return &v
	}).(AnalyticsApplicationOutputKinesisFirehoseArgsPtrOutput)
}

// The ARN of the Kinesis Firehose delivery stream.
func (o AnalyticsApplicationOutputKinesisFirehoseArgsOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisFirehoseArgs) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationOutputKinesisFirehoseArgsOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisFirehoseArgs) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationOutputKinesisFirehoseArgsPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputKinesisFirehoseArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationOutputKinesisFirehoseArgs)(nil)).Elem()
}

func (o AnalyticsApplicationOutputKinesisFirehoseArgsPtrOutput) ToAnalyticsApplicationOutputKinesisFirehoseArgsPtrOutput() AnalyticsApplicationOutputKinesisFirehoseArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisFirehoseArgsPtrOutput) ToAnalyticsApplicationOutputKinesisFirehoseArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisFirehoseArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisFirehoseArgsPtrOutput) Elem() AnalyticsApplicationOutputKinesisFirehoseArgsOutput {
	return o.ApplyT(func(v *AnalyticsApplicationOutputKinesisFirehoseArgs) AnalyticsApplicationOutputKinesisFirehoseArgs {
		return *v
	}).(AnalyticsApplicationOutputKinesisFirehoseArgsOutput)
}

// The ARN of the Kinesis Firehose delivery stream.
func (o AnalyticsApplicationOutputKinesisFirehoseArgsPtrOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisFirehoseArgs) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationOutputKinesisFirehoseArgsPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisFirehoseArgs) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationOutputKinesisStream struct {
	// The ARN of the Kinesis Stream.
	ResourceArn string `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn string `pulumi:"roleArn"`
}

type AnalyticsApplicationOutputKinesisStreamInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputKinesisStreamOutput() AnalyticsApplicationOutputKinesisStreamOutput
	ToAnalyticsApplicationOutputKinesisStreamOutputWithContext(context.Context) AnalyticsApplicationOutputKinesisStreamOutput
}

type AnalyticsApplicationOutputKinesisStreamArgs struct {
	// The ARN of the Kinesis Stream.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationOutputKinesisStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputKinesisStream)(nil)).Elem()
}

func (i AnalyticsApplicationOutputKinesisStreamArgs) ToAnalyticsApplicationOutputKinesisStreamOutput() AnalyticsApplicationOutputKinesisStreamOutput {
	return i.ToAnalyticsApplicationOutputKinesisStreamOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputKinesisStreamArgs) ToAnalyticsApplicationOutputKinesisStreamOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputKinesisStreamOutput)
}

func (i AnalyticsApplicationOutputKinesisStreamArgs) ToAnalyticsApplicationOutputKinesisStreamPtrOutput() AnalyticsApplicationOutputKinesisStreamPtrOutput {
	return i.ToAnalyticsApplicationOutputKinesisStreamPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputKinesisStreamArgs) ToAnalyticsApplicationOutputKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisStreamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputKinesisStreamOutput).ToAnalyticsApplicationOutputKinesisStreamPtrOutputWithContext(ctx)
}

type AnalyticsApplicationOutputKinesisStreamPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputKinesisStreamPtrOutput() AnalyticsApplicationOutputKinesisStreamPtrOutput
	ToAnalyticsApplicationOutputKinesisStreamPtrOutputWithContext(context.Context) AnalyticsApplicationOutputKinesisStreamPtrOutput
}

type analyticsApplicationOutputKinesisStreamPtrType AnalyticsApplicationOutputKinesisStreamArgs

func AnalyticsApplicationOutputKinesisStreamPtr(v *AnalyticsApplicationOutputKinesisStreamArgs) AnalyticsApplicationOutputKinesisStreamPtrInput {
	return (*analyticsApplicationOutputKinesisStreamPtrType)(v)
}

func (*analyticsApplicationOutputKinesisStreamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationOutputKinesisStream)(nil)).Elem()
}

func (i *analyticsApplicationOutputKinesisStreamPtrType) ToAnalyticsApplicationOutputKinesisStreamPtrOutput() AnalyticsApplicationOutputKinesisStreamPtrOutput {
	return i.ToAnalyticsApplicationOutputKinesisStreamPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationOutputKinesisStreamPtrType) ToAnalyticsApplicationOutputKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisStreamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputKinesisStreamPtrOutput)
}

type AnalyticsApplicationOutputKinesisStreamOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputKinesisStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputKinesisStream)(nil)).Elem()
}

func (o AnalyticsApplicationOutputKinesisStreamOutput) ToAnalyticsApplicationOutputKinesisStreamOutput() AnalyticsApplicationOutputKinesisStreamOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisStreamOutput) ToAnalyticsApplicationOutputKinesisStreamOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisStreamOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisStreamOutput) ToAnalyticsApplicationOutputKinesisStreamPtrOutput() AnalyticsApplicationOutputKinesisStreamPtrOutput {
	return o.ToAnalyticsApplicationOutputKinesisStreamPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationOutputKinesisStreamOutput) ToAnalyticsApplicationOutputKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisStreamPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisStream) *AnalyticsApplicationOutputKinesisStream {
		return &v
	}).(AnalyticsApplicationOutputKinesisStreamPtrOutput)
}

// The ARN of the Kinesis Stream.
func (o AnalyticsApplicationOutputKinesisStreamOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisStream) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationOutputKinesisStreamOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisStream) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationOutputKinesisStreamPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputKinesisStreamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationOutputKinesisStream)(nil)).Elem()
}

func (o AnalyticsApplicationOutputKinesisStreamPtrOutput) ToAnalyticsApplicationOutputKinesisStreamPtrOutput() AnalyticsApplicationOutputKinesisStreamPtrOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisStreamPtrOutput) ToAnalyticsApplicationOutputKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisStreamPtrOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisStreamPtrOutput) Elem() AnalyticsApplicationOutputKinesisStreamOutput {
	return o.ApplyT(func(v *AnalyticsApplicationOutputKinesisStream) AnalyticsApplicationOutputKinesisStream { return *v }).(AnalyticsApplicationOutputKinesisStreamOutput)
}

// The ARN of the Kinesis Stream.
func (o AnalyticsApplicationOutputKinesisStreamPtrOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisStream) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationOutputKinesisStreamPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisStream) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationOutputKinesisStreamArgs struct {
	// The ARN of the Kinesis Stream.
	ResourceArn string `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn string `pulumi:"roleArn"`
}

type AnalyticsApplicationOutputKinesisStreamArgsInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputKinesisStreamArgsOutput() AnalyticsApplicationOutputKinesisStreamArgsOutput
	ToAnalyticsApplicationOutputKinesisStreamArgsOutputWithContext(context.Context) AnalyticsApplicationOutputKinesisStreamArgsOutput
}

type AnalyticsApplicationOutputKinesisStreamArgsArgs struct {
	// The ARN of the Kinesis Stream.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationOutputKinesisStreamArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputKinesisStreamArgs)(nil)).Elem()
}

func (i AnalyticsApplicationOutputKinesisStreamArgsArgs) ToAnalyticsApplicationOutputKinesisStreamArgsOutput() AnalyticsApplicationOutputKinesisStreamArgsOutput {
	return i.ToAnalyticsApplicationOutputKinesisStreamArgsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputKinesisStreamArgsArgs) ToAnalyticsApplicationOutputKinesisStreamArgsOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisStreamArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputKinesisStreamArgsOutput)
}

func (i AnalyticsApplicationOutputKinesisStreamArgsArgs) ToAnalyticsApplicationOutputKinesisStreamArgsPtrOutput() AnalyticsApplicationOutputKinesisStreamArgsPtrOutput {
	return i.ToAnalyticsApplicationOutputKinesisStreamArgsPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputKinesisStreamArgsArgs) ToAnalyticsApplicationOutputKinesisStreamArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisStreamArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputKinesisStreamArgsOutput).ToAnalyticsApplicationOutputKinesisStreamArgsPtrOutputWithContext(ctx)
}

type AnalyticsApplicationOutputKinesisStreamArgsPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputKinesisStreamArgsPtrOutput() AnalyticsApplicationOutputKinesisStreamArgsPtrOutput
	ToAnalyticsApplicationOutputKinesisStreamArgsPtrOutputWithContext(context.Context) AnalyticsApplicationOutputKinesisStreamArgsPtrOutput
}

type analyticsApplicationOutputKinesisStreamArgsPtrType AnalyticsApplicationOutputKinesisStreamArgsArgs

func AnalyticsApplicationOutputKinesisStreamArgsPtr(v *AnalyticsApplicationOutputKinesisStreamArgsArgs) AnalyticsApplicationOutputKinesisStreamArgsPtrInput {
	return (*analyticsApplicationOutputKinesisStreamArgsPtrType)(v)
}

func (*analyticsApplicationOutputKinesisStreamArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationOutputKinesisStreamArgs)(nil)).Elem()
}

func (i *analyticsApplicationOutputKinesisStreamArgsPtrType) ToAnalyticsApplicationOutputKinesisStreamArgsPtrOutput() AnalyticsApplicationOutputKinesisStreamArgsPtrOutput {
	return i.ToAnalyticsApplicationOutputKinesisStreamArgsPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationOutputKinesisStreamArgsPtrType) ToAnalyticsApplicationOutputKinesisStreamArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisStreamArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputKinesisStreamArgsPtrOutput)
}

type AnalyticsApplicationOutputKinesisStreamArgsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputKinesisStreamArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputKinesisStreamArgs)(nil)).Elem()
}

func (o AnalyticsApplicationOutputKinesisStreamArgsOutput) ToAnalyticsApplicationOutputKinesisStreamArgsOutput() AnalyticsApplicationOutputKinesisStreamArgsOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisStreamArgsOutput) ToAnalyticsApplicationOutputKinesisStreamArgsOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisStreamArgsOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisStreamArgsOutput) ToAnalyticsApplicationOutputKinesisStreamArgsPtrOutput() AnalyticsApplicationOutputKinesisStreamArgsPtrOutput {
	return o.ToAnalyticsApplicationOutputKinesisStreamArgsPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationOutputKinesisStreamArgsOutput) ToAnalyticsApplicationOutputKinesisStreamArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisStreamArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisStreamArgs) *AnalyticsApplicationOutputKinesisStreamArgs {
		return &v
	}).(AnalyticsApplicationOutputKinesisStreamArgsPtrOutput)
}

// The ARN of the Kinesis Stream.
func (o AnalyticsApplicationOutputKinesisStreamArgsOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisStreamArgs) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationOutputKinesisStreamArgsOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisStreamArgs) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationOutputKinesisStreamArgsPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputKinesisStreamArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationOutputKinesisStreamArgs)(nil)).Elem()
}

func (o AnalyticsApplicationOutputKinesisStreamArgsPtrOutput) ToAnalyticsApplicationOutputKinesisStreamArgsPtrOutput() AnalyticsApplicationOutputKinesisStreamArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisStreamArgsPtrOutput) ToAnalyticsApplicationOutputKinesisStreamArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputKinesisStreamArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationOutputKinesisStreamArgsPtrOutput) Elem() AnalyticsApplicationOutputKinesisStreamArgsOutput {
	return o.ApplyT(func(v *AnalyticsApplicationOutputKinesisStreamArgs) AnalyticsApplicationOutputKinesisStreamArgs {
		return *v
	}).(AnalyticsApplicationOutputKinesisStreamArgsOutput)
}

// The ARN of the Kinesis Stream.
func (o AnalyticsApplicationOutputKinesisStreamArgsPtrOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisStreamArgs) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationOutputKinesisStreamArgsPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputKinesisStreamArgs) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationOutputLambda struct {
	// The ARN of the Lambda function.
	ResourceArn string `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the Lambda function.
	RoleArn string `pulumi:"roleArn"`
}

type AnalyticsApplicationOutputLambdaInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputLambdaOutput() AnalyticsApplicationOutputLambdaOutput
	ToAnalyticsApplicationOutputLambdaOutputWithContext(context.Context) AnalyticsApplicationOutputLambdaOutput
}

type AnalyticsApplicationOutputLambdaArgs struct {
	// The ARN of the Lambda function.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the Lambda function.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationOutputLambdaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputLambda)(nil)).Elem()
}

func (i AnalyticsApplicationOutputLambdaArgs) ToAnalyticsApplicationOutputLambdaOutput() AnalyticsApplicationOutputLambdaOutput {
	return i.ToAnalyticsApplicationOutputLambdaOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputLambdaArgs) ToAnalyticsApplicationOutputLambdaOutputWithContext(ctx context.Context) AnalyticsApplicationOutputLambdaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputLambdaOutput)
}

func (i AnalyticsApplicationOutputLambdaArgs) ToAnalyticsApplicationOutputLambdaPtrOutput() AnalyticsApplicationOutputLambdaPtrOutput {
	return i.ToAnalyticsApplicationOutputLambdaPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputLambdaArgs) ToAnalyticsApplicationOutputLambdaPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputLambdaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputLambdaOutput).ToAnalyticsApplicationOutputLambdaPtrOutputWithContext(ctx)
}

type AnalyticsApplicationOutputLambdaPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputLambdaPtrOutput() AnalyticsApplicationOutputLambdaPtrOutput
	ToAnalyticsApplicationOutputLambdaPtrOutputWithContext(context.Context) AnalyticsApplicationOutputLambdaPtrOutput
}

type analyticsApplicationOutputLambdaPtrType AnalyticsApplicationOutputLambdaArgs

func AnalyticsApplicationOutputLambdaPtr(v *AnalyticsApplicationOutputLambdaArgs) AnalyticsApplicationOutputLambdaPtrInput {
	return (*analyticsApplicationOutputLambdaPtrType)(v)
}

func (*analyticsApplicationOutputLambdaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationOutputLambda)(nil)).Elem()
}

func (i *analyticsApplicationOutputLambdaPtrType) ToAnalyticsApplicationOutputLambdaPtrOutput() AnalyticsApplicationOutputLambdaPtrOutput {
	return i.ToAnalyticsApplicationOutputLambdaPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationOutputLambdaPtrType) ToAnalyticsApplicationOutputLambdaPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputLambdaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputLambdaPtrOutput)
}

type AnalyticsApplicationOutputLambdaOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputLambdaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputLambda)(nil)).Elem()
}

func (o AnalyticsApplicationOutputLambdaOutput) ToAnalyticsApplicationOutputLambdaOutput() AnalyticsApplicationOutputLambdaOutput {
	return o
}

func (o AnalyticsApplicationOutputLambdaOutput) ToAnalyticsApplicationOutputLambdaOutputWithContext(ctx context.Context) AnalyticsApplicationOutputLambdaOutput {
	return o
}

func (o AnalyticsApplicationOutputLambdaOutput) ToAnalyticsApplicationOutputLambdaPtrOutput() AnalyticsApplicationOutputLambdaPtrOutput {
	return o.ToAnalyticsApplicationOutputLambdaPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationOutputLambdaOutput) ToAnalyticsApplicationOutputLambdaPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputLambdaPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputLambda) *AnalyticsApplicationOutputLambda {
		return &v
	}).(AnalyticsApplicationOutputLambdaPtrOutput)
}

// The ARN of the Lambda function.
func (o AnalyticsApplicationOutputLambdaOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputLambda) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the Lambda function.
func (o AnalyticsApplicationOutputLambdaOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputLambda) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationOutputLambdaPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputLambdaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationOutputLambda)(nil)).Elem()
}

func (o AnalyticsApplicationOutputLambdaPtrOutput) ToAnalyticsApplicationOutputLambdaPtrOutput() AnalyticsApplicationOutputLambdaPtrOutput {
	return o
}

func (o AnalyticsApplicationOutputLambdaPtrOutput) ToAnalyticsApplicationOutputLambdaPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputLambdaPtrOutput {
	return o
}

func (o AnalyticsApplicationOutputLambdaPtrOutput) Elem() AnalyticsApplicationOutputLambdaOutput {
	return o.ApplyT(func(v *AnalyticsApplicationOutputLambda) AnalyticsApplicationOutputLambda { return *v }).(AnalyticsApplicationOutputLambdaOutput)
}

// The ARN of the Lambda function.
func (o AnalyticsApplicationOutputLambdaPtrOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputLambda) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the Lambda function.
func (o AnalyticsApplicationOutputLambdaPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputLambda) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationOutputLambdaArgs struct {
	// The ARN of the Lambda function.
	ResourceArn string `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the Lambda function.
	RoleArn string `pulumi:"roleArn"`
}

type AnalyticsApplicationOutputLambdaArgsInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputLambdaArgsOutput() AnalyticsApplicationOutputLambdaArgsOutput
	ToAnalyticsApplicationOutputLambdaArgsOutputWithContext(context.Context) AnalyticsApplicationOutputLambdaArgsOutput
}

type AnalyticsApplicationOutputLambdaArgsArgs struct {
	// The ARN of the Lambda function.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the Lambda function.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationOutputLambdaArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputLambdaArgs)(nil)).Elem()
}

func (i AnalyticsApplicationOutputLambdaArgsArgs) ToAnalyticsApplicationOutputLambdaArgsOutput() AnalyticsApplicationOutputLambdaArgsOutput {
	return i.ToAnalyticsApplicationOutputLambdaArgsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputLambdaArgsArgs) ToAnalyticsApplicationOutputLambdaArgsOutputWithContext(ctx context.Context) AnalyticsApplicationOutputLambdaArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputLambdaArgsOutput)
}

func (i AnalyticsApplicationOutputLambdaArgsArgs) ToAnalyticsApplicationOutputLambdaArgsPtrOutput() AnalyticsApplicationOutputLambdaArgsPtrOutput {
	return i.ToAnalyticsApplicationOutputLambdaArgsPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputLambdaArgsArgs) ToAnalyticsApplicationOutputLambdaArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputLambdaArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputLambdaArgsOutput).ToAnalyticsApplicationOutputLambdaArgsPtrOutputWithContext(ctx)
}

type AnalyticsApplicationOutputLambdaArgsPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputLambdaArgsPtrOutput() AnalyticsApplicationOutputLambdaArgsPtrOutput
	ToAnalyticsApplicationOutputLambdaArgsPtrOutputWithContext(context.Context) AnalyticsApplicationOutputLambdaArgsPtrOutput
}

type analyticsApplicationOutputLambdaArgsPtrType AnalyticsApplicationOutputLambdaArgsArgs

func AnalyticsApplicationOutputLambdaArgsPtr(v *AnalyticsApplicationOutputLambdaArgsArgs) AnalyticsApplicationOutputLambdaArgsPtrInput {
	return (*analyticsApplicationOutputLambdaArgsPtrType)(v)
}

func (*analyticsApplicationOutputLambdaArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationOutputLambdaArgs)(nil)).Elem()
}

func (i *analyticsApplicationOutputLambdaArgsPtrType) ToAnalyticsApplicationOutputLambdaArgsPtrOutput() AnalyticsApplicationOutputLambdaArgsPtrOutput {
	return i.ToAnalyticsApplicationOutputLambdaArgsPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationOutputLambdaArgsPtrType) ToAnalyticsApplicationOutputLambdaArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputLambdaArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputLambdaArgsPtrOutput)
}

type AnalyticsApplicationOutputLambdaArgsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputLambdaArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputLambdaArgs)(nil)).Elem()
}

func (o AnalyticsApplicationOutputLambdaArgsOutput) ToAnalyticsApplicationOutputLambdaArgsOutput() AnalyticsApplicationOutputLambdaArgsOutput {
	return o
}

func (o AnalyticsApplicationOutputLambdaArgsOutput) ToAnalyticsApplicationOutputLambdaArgsOutputWithContext(ctx context.Context) AnalyticsApplicationOutputLambdaArgsOutput {
	return o
}

func (o AnalyticsApplicationOutputLambdaArgsOutput) ToAnalyticsApplicationOutputLambdaArgsPtrOutput() AnalyticsApplicationOutputLambdaArgsPtrOutput {
	return o.ToAnalyticsApplicationOutputLambdaArgsPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationOutputLambdaArgsOutput) ToAnalyticsApplicationOutputLambdaArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputLambdaArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputLambdaArgs) *AnalyticsApplicationOutputLambdaArgs {
		return &v
	}).(AnalyticsApplicationOutputLambdaArgsPtrOutput)
}

// The ARN of the Lambda function.
func (o AnalyticsApplicationOutputLambdaArgsOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputLambdaArgs) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the Lambda function.
func (o AnalyticsApplicationOutputLambdaArgsOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputLambdaArgs) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationOutputLambdaArgsPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputLambdaArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationOutputLambdaArgs)(nil)).Elem()
}

func (o AnalyticsApplicationOutputLambdaArgsPtrOutput) ToAnalyticsApplicationOutputLambdaArgsPtrOutput() AnalyticsApplicationOutputLambdaArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationOutputLambdaArgsPtrOutput) ToAnalyticsApplicationOutputLambdaArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputLambdaArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationOutputLambdaArgsPtrOutput) Elem() AnalyticsApplicationOutputLambdaArgsOutput {
	return o.ApplyT(func(v *AnalyticsApplicationOutputLambdaArgs) AnalyticsApplicationOutputLambdaArgs { return *v }).(AnalyticsApplicationOutputLambdaArgsOutput)
}

// The ARN of the Lambda function.
func (o AnalyticsApplicationOutputLambdaArgsPtrOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputLambdaArgs) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the Lambda function.
func (o AnalyticsApplicationOutputLambdaArgsPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputLambdaArgs) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationOutputSchema struct {
	// The Format Type of the records on the output stream. Can be `CSV` or `JSON`.
	RecordFormatType *string `pulumi:"recordFormatType"`
}

type AnalyticsApplicationOutputSchemaInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputSchemaOutput() AnalyticsApplicationOutputSchemaOutput
	ToAnalyticsApplicationOutputSchemaOutputWithContext(context.Context) AnalyticsApplicationOutputSchemaOutput
}

type AnalyticsApplicationOutputSchemaArgs struct {
	// The Format Type of the records on the output stream. Can be `CSV` or `JSON`.
	RecordFormatType pulumi.StringPtrInput `pulumi:"recordFormatType"`
}

func (AnalyticsApplicationOutputSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputSchema)(nil)).Elem()
}

func (i AnalyticsApplicationOutputSchemaArgs) ToAnalyticsApplicationOutputSchemaOutput() AnalyticsApplicationOutputSchemaOutput {
	return i.ToAnalyticsApplicationOutputSchemaOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputSchemaArgs) ToAnalyticsApplicationOutputSchemaOutputWithContext(ctx context.Context) AnalyticsApplicationOutputSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputSchemaOutput)
}

type AnalyticsApplicationOutputSchemaOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputSchema)(nil)).Elem()
}

func (o AnalyticsApplicationOutputSchemaOutput) ToAnalyticsApplicationOutputSchemaOutput() AnalyticsApplicationOutputSchemaOutput {
	return o
}

func (o AnalyticsApplicationOutputSchemaOutput) ToAnalyticsApplicationOutputSchemaOutputWithContext(ctx context.Context) AnalyticsApplicationOutputSchemaOutput {
	return o
}

// The Format Type of the records on the output stream. Can be `CSV` or `JSON`.
func (o AnalyticsApplicationOutputSchemaOutput) RecordFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputSchema) *string { return v.RecordFormatType }).(pulumi.StringPtrOutput)
}

type AnalyticsApplicationOutputSchemaArgs struct {
	// The Format Type of the records on the output stream. Can be `CSV` or `JSON`.
	RecordFormatType *string `pulumi:"recordFormatType"`
}

type AnalyticsApplicationOutputSchemaArgsInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputSchemaArgsOutput() AnalyticsApplicationOutputSchemaArgsOutput
	ToAnalyticsApplicationOutputSchemaArgsOutputWithContext(context.Context) AnalyticsApplicationOutputSchemaArgsOutput
}

type AnalyticsApplicationOutputSchemaArgsArgs struct {
	// The Format Type of the records on the output stream. Can be `CSV` or `JSON`.
	RecordFormatType pulumi.StringPtrInput `pulumi:"recordFormatType"`
}

func (AnalyticsApplicationOutputSchemaArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputSchemaArgs)(nil)).Elem()
}

func (i AnalyticsApplicationOutputSchemaArgsArgs) ToAnalyticsApplicationOutputSchemaArgsOutput() AnalyticsApplicationOutputSchemaArgsOutput {
	return i.ToAnalyticsApplicationOutputSchemaArgsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputSchemaArgsArgs) ToAnalyticsApplicationOutputSchemaArgsOutputWithContext(ctx context.Context) AnalyticsApplicationOutputSchemaArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputSchemaArgsOutput)
}

type AnalyticsApplicationOutputSchemaArgsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputSchemaArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputSchemaArgs)(nil)).Elem()
}

func (o AnalyticsApplicationOutputSchemaArgsOutput) ToAnalyticsApplicationOutputSchemaArgsOutput() AnalyticsApplicationOutputSchemaArgsOutput {
	return o
}

func (o AnalyticsApplicationOutputSchemaArgsOutput) ToAnalyticsApplicationOutputSchemaArgsOutputWithContext(ctx context.Context) AnalyticsApplicationOutputSchemaArgsOutput {
	return o
}

// The Format Type of the records on the output stream. Can be `CSV` or `JSON`.
func (o AnalyticsApplicationOutputSchemaArgsOutput) RecordFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputSchemaArgs) *string { return v.RecordFormatType }).(pulumi.StringPtrOutput)
}

type AnalyticsApplicationOutputState struct {
	// The ARN of the Kinesis Analytics Application.
	Id *string `pulumi:"id"`
	// The Kinesis Firehose configuration for the destination stream. Conflicts with `kinesisStream`.
	// See Kinesis Firehose below for more details.
	KinesisFirehose *AnalyticsApplicationOutputStateKinesisFirehose `pulumi:"kinesisFirehose"`
	// The Kinesis Stream configuration for the destination stream. Conflicts with `kinesisFirehose`.
	// See Kinesis Stream below for more details.
	KinesisStream *AnalyticsApplicationOutputStateKinesisStream `pulumi:"kinesisStream"`
	// The Lambda function destination. See Lambda below for more details.
	Lambda *AnalyticsApplicationOutputStateLambda `pulumi:"lambda"`
	// The Name of the in-application stream.
	Name string `pulumi:"name"`
	// The Schema format of the data written to the destination. See Destination Schema below for more details.
	Schema AnalyticsApplicationOutputStateSchema `pulumi:"schema"`
}

type AnalyticsApplicationOutputStateInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputStateOutput() AnalyticsApplicationOutputStateOutput
	ToAnalyticsApplicationOutputStateOutputWithContext(context.Context) AnalyticsApplicationOutputStateOutput
}

type AnalyticsApplicationOutputStateArgs struct {
	// The ARN of the Kinesis Analytics Application.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Kinesis Firehose configuration for the destination stream. Conflicts with `kinesisStream`.
	// See Kinesis Firehose below for more details.
	KinesisFirehose AnalyticsApplicationOutputStateKinesisFirehosePtrInput `pulumi:"kinesisFirehose"`
	// The Kinesis Stream configuration for the destination stream. Conflicts with `kinesisFirehose`.
	// See Kinesis Stream below for more details.
	KinesisStream AnalyticsApplicationOutputStateKinesisStreamPtrInput `pulumi:"kinesisStream"`
	// The Lambda function destination. See Lambda below for more details.
	Lambda AnalyticsApplicationOutputStateLambdaPtrInput `pulumi:"lambda"`
	// The Name of the in-application stream.
	Name pulumi.StringInput `pulumi:"name"`
	// The Schema format of the data written to the destination. See Destination Schema below for more details.
	Schema AnalyticsApplicationOutputStateSchemaInput `pulumi:"schema"`
}

func (AnalyticsApplicationOutputStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputState)(nil)).Elem()
}

func (i AnalyticsApplicationOutputStateArgs) ToAnalyticsApplicationOutputStateOutput() AnalyticsApplicationOutputStateOutput {
	return i.ToAnalyticsApplicationOutputStateOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputStateArgs) ToAnalyticsApplicationOutputStateOutputWithContext(ctx context.Context) AnalyticsApplicationOutputStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputStateOutput)
}

type AnalyticsApplicationOutputStateArrayInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputStateArrayOutput() AnalyticsApplicationOutputStateArrayOutput
	ToAnalyticsApplicationOutputStateArrayOutputWithContext(context.Context) AnalyticsApplicationOutputStateArrayOutput
}

type AnalyticsApplicationOutputStateArray []AnalyticsApplicationOutputStateInput

func (AnalyticsApplicationOutputStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationOutputState)(nil)).Elem()
}

func (i AnalyticsApplicationOutputStateArray) ToAnalyticsApplicationOutputStateArrayOutput() AnalyticsApplicationOutputStateArrayOutput {
	return i.ToAnalyticsApplicationOutputStateArrayOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputStateArray) ToAnalyticsApplicationOutputStateArrayOutputWithContext(ctx context.Context) AnalyticsApplicationOutputStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputStateArrayOutput)
}

type AnalyticsApplicationOutputStateOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputState)(nil)).Elem()
}

func (o AnalyticsApplicationOutputStateOutput) ToAnalyticsApplicationOutputStateOutput() AnalyticsApplicationOutputStateOutput {
	return o
}

func (o AnalyticsApplicationOutputStateOutput) ToAnalyticsApplicationOutputStateOutputWithContext(ctx context.Context) AnalyticsApplicationOutputStateOutput {
	return o
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationOutputStateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputState) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Kinesis Firehose configuration for the destination stream. Conflicts with `kinesisStream`.
// See Kinesis Firehose below for more details.
func (o AnalyticsApplicationOutputStateOutput) KinesisFirehose() AnalyticsApplicationOutputStateKinesisFirehosePtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputState) *AnalyticsApplicationOutputStateKinesisFirehose {
		return v.KinesisFirehose
	}).(AnalyticsApplicationOutputStateKinesisFirehosePtrOutput)
}

// The Kinesis Stream configuration for the destination stream. Conflicts with `kinesisFirehose`.
// See Kinesis Stream below for more details.
func (o AnalyticsApplicationOutputStateOutput) KinesisStream() AnalyticsApplicationOutputStateKinesisStreamPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputState) *AnalyticsApplicationOutputStateKinesisStream {
		return v.KinesisStream
	}).(AnalyticsApplicationOutputStateKinesisStreamPtrOutput)
}

// The Lambda function destination. See Lambda below for more details.
func (o AnalyticsApplicationOutputStateOutput) Lambda() AnalyticsApplicationOutputStateLambdaPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputState) *AnalyticsApplicationOutputStateLambda { return v.Lambda }).(AnalyticsApplicationOutputStateLambdaPtrOutput)
}

// The Name of the in-application stream.
func (o AnalyticsApplicationOutputStateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputState) string { return v.Name }).(pulumi.StringOutput)
}

// The Schema format of the data written to the destination. See Destination Schema below for more details.
func (o AnalyticsApplicationOutputStateOutput) Schema() AnalyticsApplicationOutputStateSchemaOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputState) AnalyticsApplicationOutputStateSchema { return v.Schema }).(AnalyticsApplicationOutputStateSchemaOutput)
}

type AnalyticsApplicationOutputStateArrayOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationOutputState)(nil)).Elem()
}

func (o AnalyticsApplicationOutputStateArrayOutput) ToAnalyticsApplicationOutputStateArrayOutput() AnalyticsApplicationOutputStateArrayOutput {
	return o
}

func (o AnalyticsApplicationOutputStateArrayOutput) ToAnalyticsApplicationOutputStateArrayOutputWithContext(ctx context.Context) AnalyticsApplicationOutputStateArrayOutput {
	return o
}

func (o AnalyticsApplicationOutputStateArrayOutput) Index(i pulumi.IntInput) AnalyticsApplicationOutputStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalyticsApplicationOutputState {
		return vs[0].([]AnalyticsApplicationOutputState)[vs[1].(int)]
	}).(AnalyticsApplicationOutputStateOutput)
}

type AnalyticsApplicationOutputStateKinesisFirehose struct {
	// The ARN of the Kinesis Firehose delivery stream.
	ResourceArn string `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn string `pulumi:"roleArn"`
}

type AnalyticsApplicationOutputStateKinesisFirehoseInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputStateKinesisFirehoseOutput() AnalyticsApplicationOutputStateKinesisFirehoseOutput
	ToAnalyticsApplicationOutputStateKinesisFirehoseOutputWithContext(context.Context) AnalyticsApplicationOutputStateKinesisFirehoseOutput
}

type AnalyticsApplicationOutputStateKinesisFirehoseArgs struct {
	// The ARN of the Kinesis Firehose delivery stream.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationOutputStateKinesisFirehoseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputStateKinesisFirehose)(nil)).Elem()
}

func (i AnalyticsApplicationOutputStateKinesisFirehoseArgs) ToAnalyticsApplicationOutputStateKinesisFirehoseOutput() AnalyticsApplicationOutputStateKinesisFirehoseOutput {
	return i.ToAnalyticsApplicationOutputStateKinesisFirehoseOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputStateKinesisFirehoseArgs) ToAnalyticsApplicationOutputStateKinesisFirehoseOutputWithContext(ctx context.Context) AnalyticsApplicationOutputStateKinesisFirehoseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputStateKinesisFirehoseOutput)
}

func (i AnalyticsApplicationOutputStateKinesisFirehoseArgs) ToAnalyticsApplicationOutputStateKinesisFirehosePtrOutput() AnalyticsApplicationOutputStateKinesisFirehosePtrOutput {
	return i.ToAnalyticsApplicationOutputStateKinesisFirehosePtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputStateKinesisFirehoseArgs) ToAnalyticsApplicationOutputStateKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputStateKinesisFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputStateKinesisFirehoseOutput).ToAnalyticsApplicationOutputStateKinesisFirehosePtrOutputWithContext(ctx)
}

type AnalyticsApplicationOutputStateKinesisFirehosePtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputStateKinesisFirehosePtrOutput() AnalyticsApplicationOutputStateKinesisFirehosePtrOutput
	ToAnalyticsApplicationOutputStateKinesisFirehosePtrOutputWithContext(context.Context) AnalyticsApplicationOutputStateKinesisFirehosePtrOutput
}

type analyticsApplicationOutputStateKinesisFirehosePtrType AnalyticsApplicationOutputStateKinesisFirehoseArgs

func AnalyticsApplicationOutputStateKinesisFirehosePtr(v *AnalyticsApplicationOutputStateKinesisFirehoseArgs) AnalyticsApplicationOutputStateKinesisFirehosePtrInput {
	return (*analyticsApplicationOutputStateKinesisFirehosePtrType)(v)
}

func (*analyticsApplicationOutputStateKinesisFirehosePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationOutputStateKinesisFirehose)(nil)).Elem()
}

func (i *analyticsApplicationOutputStateKinesisFirehosePtrType) ToAnalyticsApplicationOutputStateKinesisFirehosePtrOutput() AnalyticsApplicationOutputStateKinesisFirehosePtrOutput {
	return i.ToAnalyticsApplicationOutputStateKinesisFirehosePtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationOutputStateKinesisFirehosePtrType) ToAnalyticsApplicationOutputStateKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputStateKinesisFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputStateKinesisFirehosePtrOutput)
}

type AnalyticsApplicationOutputStateKinesisFirehoseOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputStateKinesisFirehoseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputStateKinesisFirehose)(nil)).Elem()
}

func (o AnalyticsApplicationOutputStateKinesisFirehoseOutput) ToAnalyticsApplicationOutputStateKinesisFirehoseOutput() AnalyticsApplicationOutputStateKinesisFirehoseOutput {
	return o
}

func (o AnalyticsApplicationOutputStateKinesisFirehoseOutput) ToAnalyticsApplicationOutputStateKinesisFirehoseOutputWithContext(ctx context.Context) AnalyticsApplicationOutputStateKinesisFirehoseOutput {
	return o
}

func (o AnalyticsApplicationOutputStateKinesisFirehoseOutput) ToAnalyticsApplicationOutputStateKinesisFirehosePtrOutput() AnalyticsApplicationOutputStateKinesisFirehosePtrOutput {
	return o.ToAnalyticsApplicationOutputStateKinesisFirehosePtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationOutputStateKinesisFirehoseOutput) ToAnalyticsApplicationOutputStateKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputStateKinesisFirehosePtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputStateKinesisFirehose) *AnalyticsApplicationOutputStateKinesisFirehose {
		return &v
	}).(AnalyticsApplicationOutputStateKinesisFirehosePtrOutput)
}

// The ARN of the Kinesis Firehose delivery stream.
func (o AnalyticsApplicationOutputStateKinesisFirehoseOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputStateKinesisFirehose) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationOutputStateKinesisFirehoseOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputStateKinesisFirehose) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationOutputStateKinesisFirehosePtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputStateKinesisFirehosePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationOutputStateKinesisFirehose)(nil)).Elem()
}

func (o AnalyticsApplicationOutputStateKinesisFirehosePtrOutput) ToAnalyticsApplicationOutputStateKinesisFirehosePtrOutput() AnalyticsApplicationOutputStateKinesisFirehosePtrOutput {
	return o
}

func (o AnalyticsApplicationOutputStateKinesisFirehosePtrOutput) ToAnalyticsApplicationOutputStateKinesisFirehosePtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputStateKinesisFirehosePtrOutput {
	return o
}

func (o AnalyticsApplicationOutputStateKinesisFirehosePtrOutput) Elem() AnalyticsApplicationOutputStateKinesisFirehoseOutput {
	return o.ApplyT(func(v *AnalyticsApplicationOutputStateKinesisFirehose) AnalyticsApplicationOutputStateKinesisFirehose {
		return *v
	}).(AnalyticsApplicationOutputStateKinesisFirehoseOutput)
}

// The ARN of the Kinesis Firehose delivery stream.
func (o AnalyticsApplicationOutputStateKinesisFirehosePtrOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputStateKinesisFirehose) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationOutputStateKinesisFirehosePtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputStateKinesisFirehose) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationOutputStateKinesisStream struct {
	// The ARN of the Kinesis Stream.
	ResourceArn string `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn string `pulumi:"roleArn"`
}

type AnalyticsApplicationOutputStateKinesisStreamInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputStateKinesisStreamOutput() AnalyticsApplicationOutputStateKinesisStreamOutput
	ToAnalyticsApplicationOutputStateKinesisStreamOutputWithContext(context.Context) AnalyticsApplicationOutputStateKinesisStreamOutput
}

type AnalyticsApplicationOutputStateKinesisStreamArgs struct {
	// The ARN of the Kinesis Stream.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the stream.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationOutputStateKinesisStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputStateKinesisStream)(nil)).Elem()
}

func (i AnalyticsApplicationOutputStateKinesisStreamArgs) ToAnalyticsApplicationOutputStateKinesisStreamOutput() AnalyticsApplicationOutputStateKinesisStreamOutput {
	return i.ToAnalyticsApplicationOutputStateKinesisStreamOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputStateKinesisStreamArgs) ToAnalyticsApplicationOutputStateKinesisStreamOutputWithContext(ctx context.Context) AnalyticsApplicationOutputStateKinesisStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputStateKinesisStreamOutput)
}

func (i AnalyticsApplicationOutputStateKinesisStreamArgs) ToAnalyticsApplicationOutputStateKinesisStreamPtrOutput() AnalyticsApplicationOutputStateKinesisStreamPtrOutput {
	return i.ToAnalyticsApplicationOutputStateKinesisStreamPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputStateKinesisStreamArgs) ToAnalyticsApplicationOutputStateKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputStateKinesisStreamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputStateKinesisStreamOutput).ToAnalyticsApplicationOutputStateKinesisStreamPtrOutputWithContext(ctx)
}

type AnalyticsApplicationOutputStateKinesisStreamPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputStateKinesisStreamPtrOutput() AnalyticsApplicationOutputStateKinesisStreamPtrOutput
	ToAnalyticsApplicationOutputStateKinesisStreamPtrOutputWithContext(context.Context) AnalyticsApplicationOutputStateKinesisStreamPtrOutput
}

type analyticsApplicationOutputStateKinesisStreamPtrType AnalyticsApplicationOutputStateKinesisStreamArgs

func AnalyticsApplicationOutputStateKinesisStreamPtr(v *AnalyticsApplicationOutputStateKinesisStreamArgs) AnalyticsApplicationOutputStateKinesisStreamPtrInput {
	return (*analyticsApplicationOutputStateKinesisStreamPtrType)(v)
}

func (*analyticsApplicationOutputStateKinesisStreamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationOutputStateKinesisStream)(nil)).Elem()
}

func (i *analyticsApplicationOutputStateKinesisStreamPtrType) ToAnalyticsApplicationOutputStateKinesisStreamPtrOutput() AnalyticsApplicationOutputStateKinesisStreamPtrOutput {
	return i.ToAnalyticsApplicationOutputStateKinesisStreamPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationOutputStateKinesisStreamPtrType) ToAnalyticsApplicationOutputStateKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputStateKinesisStreamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputStateKinesisStreamPtrOutput)
}

type AnalyticsApplicationOutputStateKinesisStreamOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputStateKinesisStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputStateKinesisStream)(nil)).Elem()
}

func (o AnalyticsApplicationOutputStateKinesisStreamOutput) ToAnalyticsApplicationOutputStateKinesisStreamOutput() AnalyticsApplicationOutputStateKinesisStreamOutput {
	return o
}

func (o AnalyticsApplicationOutputStateKinesisStreamOutput) ToAnalyticsApplicationOutputStateKinesisStreamOutputWithContext(ctx context.Context) AnalyticsApplicationOutputStateKinesisStreamOutput {
	return o
}

func (o AnalyticsApplicationOutputStateKinesisStreamOutput) ToAnalyticsApplicationOutputStateKinesisStreamPtrOutput() AnalyticsApplicationOutputStateKinesisStreamPtrOutput {
	return o.ToAnalyticsApplicationOutputStateKinesisStreamPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationOutputStateKinesisStreamOutput) ToAnalyticsApplicationOutputStateKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputStateKinesisStreamPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputStateKinesisStream) *AnalyticsApplicationOutputStateKinesisStream {
		return &v
	}).(AnalyticsApplicationOutputStateKinesisStreamPtrOutput)
}

// The ARN of the Kinesis Stream.
func (o AnalyticsApplicationOutputStateKinesisStreamOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputStateKinesisStream) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationOutputStateKinesisStreamOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputStateKinesisStream) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationOutputStateKinesisStreamPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputStateKinesisStreamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationOutputStateKinesisStream)(nil)).Elem()
}

func (o AnalyticsApplicationOutputStateKinesisStreamPtrOutput) ToAnalyticsApplicationOutputStateKinesisStreamPtrOutput() AnalyticsApplicationOutputStateKinesisStreamPtrOutput {
	return o
}

func (o AnalyticsApplicationOutputStateKinesisStreamPtrOutput) ToAnalyticsApplicationOutputStateKinesisStreamPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputStateKinesisStreamPtrOutput {
	return o
}

func (o AnalyticsApplicationOutputStateKinesisStreamPtrOutput) Elem() AnalyticsApplicationOutputStateKinesisStreamOutput {
	return o.ApplyT(func(v *AnalyticsApplicationOutputStateKinesisStream) AnalyticsApplicationOutputStateKinesisStream {
		return *v
	}).(AnalyticsApplicationOutputStateKinesisStreamOutput)
}

// The ARN of the Kinesis Stream.
func (o AnalyticsApplicationOutputStateKinesisStreamPtrOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputStateKinesisStream) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the stream.
func (o AnalyticsApplicationOutputStateKinesisStreamPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputStateKinesisStream) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationOutputStateLambda struct {
	// The ARN of the Lambda function.
	ResourceArn string `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the Lambda function.
	RoleArn string `pulumi:"roleArn"`
}

type AnalyticsApplicationOutputStateLambdaInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputStateLambdaOutput() AnalyticsApplicationOutputStateLambdaOutput
	ToAnalyticsApplicationOutputStateLambdaOutputWithContext(context.Context) AnalyticsApplicationOutputStateLambdaOutput
}

type AnalyticsApplicationOutputStateLambdaArgs struct {
	// The ARN of the Lambda function.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The ARN of the IAM Role used to access the Lambda function.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationOutputStateLambdaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputStateLambda)(nil)).Elem()
}

func (i AnalyticsApplicationOutputStateLambdaArgs) ToAnalyticsApplicationOutputStateLambdaOutput() AnalyticsApplicationOutputStateLambdaOutput {
	return i.ToAnalyticsApplicationOutputStateLambdaOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputStateLambdaArgs) ToAnalyticsApplicationOutputStateLambdaOutputWithContext(ctx context.Context) AnalyticsApplicationOutputStateLambdaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputStateLambdaOutput)
}

func (i AnalyticsApplicationOutputStateLambdaArgs) ToAnalyticsApplicationOutputStateLambdaPtrOutput() AnalyticsApplicationOutputStateLambdaPtrOutput {
	return i.ToAnalyticsApplicationOutputStateLambdaPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputStateLambdaArgs) ToAnalyticsApplicationOutputStateLambdaPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputStateLambdaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputStateLambdaOutput).ToAnalyticsApplicationOutputStateLambdaPtrOutputWithContext(ctx)
}

type AnalyticsApplicationOutputStateLambdaPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputStateLambdaPtrOutput() AnalyticsApplicationOutputStateLambdaPtrOutput
	ToAnalyticsApplicationOutputStateLambdaPtrOutputWithContext(context.Context) AnalyticsApplicationOutputStateLambdaPtrOutput
}

type analyticsApplicationOutputStateLambdaPtrType AnalyticsApplicationOutputStateLambdaArgs

func AnalyticsApplicationOutputStateLambdaPtr(v *AnalyticsApplicationOutputStateLambdaArgs) AnalyticsApplicationOutputStateLambdaPtrInput {
	return (*analyticsApplicationOutputStateLambdaPtrType)(v)
}

func (*analyticsApplicationOutputStateLambdaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationOutputStateLambda)(nil)).Elem()
}

func (i *analyticsApplicationOutputStateLambdaPtrType) ToAnalyticsApplicationOutputStateLambdaPtrOutput() AnalyticsApplicationOutputStateLambdaPtrOutput {
	return i.ToAnalyticsApplicationOutputStateLambdaPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationOutputStateLambdaPtrType) ToAnalyticsApplicationOutputStateLambdaPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputStateLambdaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputStateLambdaPtrOutput)
}

type AnalyticsApplicationOutputStateLambdaOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputStateLambdaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputStateLambda)(nil)).Elem()
}

func (o AnalyticsApplicationOutputStateLambdaOutput) ToAnalyticsApplicationOutputStateLambdaOutput() AnalyticsApplicationOutputStateLambdaOutput {
	return o
}

func (o AnalyticsApplicationOutputStateLambdaOutput) ToAnalyticsApplicationOutputStateLambdaOutputWithContext(ctx context.Context) AnalyticsApplicationOutputStateLambdaOutput {
	return o
}

func (o AnalyticsApplicationOutputStateLambdaOutput) ToAnalyticsApplicationOutputStateLambdaPtrOutput() AnalyticsApplicationOutputStateLambdaPtrOutput {
	return o.ToAnalyticsApplicationOutputStateLambdaPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationOutputStateLambdaOutput) ToAnalyticsApplicationOutputStateLambdaPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputStateLambdaPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputStateLambda) *AnalyticsApplicationOutputStateLambda {
		return &v
	}).(AnalyticsApplicationOutputStateLambdaPtrOutput)
}

// The ARN of the Lambda function.
func (o AnalyticsApplicationOutputStateLambdaOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputStateLambda) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the Lambda function.
func (o AnalyticsApplicationOutputStateLambdaOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputStateLambda) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationOutputStateLambdaPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputStateLambdaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationOutputStateLambda)(nil)).Elem()
}

func (o AnalyticsApplicationOutputStateLambdaPtrOutput) ToAnalyticsApplicationOutputStateLambdaPtrOutput() AnalyticsApplicationOutputStateLambdaPtrOutput {
	return o
}

func (o AnalyticsApplicationOutputStateLambdaPtrOutput) ToAnalyticsApplicationOutputStateLambdaPtrOutputWithContext(ctx context.Context) AnalyticsApplicationOutputStateLambdaPtrOutput {
	return o
}

func (o AnalyticsApplicationOutputStateLambdaPtrOutput) Elem() AnalyticsApplicationOutputStateLambdaOutput {
	return o.ApplyT(func(v *AnalyticsApplicationOutputStateLambda) AnalyticsApplicationOutputStateLambda { return *v }).(AnalyticsApplicationOutputStateLambdaOutput)
}

// The ARN of the Lambda function.
func (o AnalyticsApplicationOutputStateLambdaPtrOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputStateLambda) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to access the Lambda function.
func (o AnalyticsApplicationOutputStateLambdaPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputStateLambda) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationOutputStateSchema struct {
	// The Format Type of the records on the output stream. Can be `CSV` or `JSON`.
	RecordFormatType *string `pulumi:"recordFormatType"`
}

type AnalyticsApplicationOutputStateSchemaInput interface {
	pulumi.Input

	ToAnalyticsApplicationOutputStateSchemaOutput() AnalyticsApplicationOutputStateSchemaOutput
	ToAnalyticsApplicationOutputStateSchemaOutputWithContext(context.Context) AnalyticsApplicationOutputStateSchemaOutput
}

type AnalyticsApplicationOutputStateSchemaArgs struct {
	// The Format Type of the records on the output stream. Can be `CSV` or `JSON`.
	RecordFormatType pulumi.StringPtrInput `pulumi:"recordFormatType"`
}

func (AnalyticsApplicationOutputStateSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputStateSchema)(nil)).Elem()
}

func (i AnalyticsApplicationOutputStateSchemaArgs) ToAnalyticsApplicationOutputStateSchemaOutput() AnalyticsApplicationOutputStateSchemaOutput {
	return i.ToAnalyticsApplicationOutputStateSchemaOutputWithContext(context.Background())
}

func (i AnalyticsApplicationOutputStateSchemaArgs) ToAnalyticsApplicationOutputStateSchemaOutputWithContext(ctx context.Context) AnalyticsApplicationOutputStateSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationOutputStateSchemaOutput)
}

type AnalyticsApplicationOutputStateSchemaOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationOutputStateSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationOutputStateSchema)(nil)).Elem()
}

func (o AnalyticsApplicationOutputStateSchemaOutput) ToAnalyticsApplicationOutputStateSchemaOutput() AnalyticsApplicationOutputStateSchemaOutput {
	return o
}

func (o AnalyticsApplicationOutputStateSchemaOutput) ToAnalyticsApplicationOutputStateSchemaOutputWithContext(ctx context.Context) AnalyticsApplicationOutputStateSchemaOutput {
	return o
}

// The Format Type of the records on the output stream. Can be `CSV` or `JSON`.
func (o AnalyticsApplicationOutputStateSchemaOutput) RecordFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationOutputStateSchema) *string { return v.RecordFormatType }).(pulumi.StringPtrOutput)
}

type AnalyticsApplicationReferenceDataSources struct {
	// The ARN of the Kinesis Analytics Application.
	Id string `pulumi:"id"`
	// The S3 configuration for the reference data source. See S3 Reference below for more details.
	S3 AnalyticsApplicationReferenceDataSourcesS3 `pulumi:"s3"`
	// The Schema format of the data in the streaming source. See Source Schema below for more details.
	Schema AnalyticsApplicationReferenceDataSourcesSchema `pulumi:"schema"`
	// The in-application Table Name.
	TableName string `pulumi:"tableName"`
}

type AnalyticsApplicationReferenceDataSourcesInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesOutput() AnalyticsApplicationReferenceDataSourcesOutput
	ToAnalyticsApplicationReferenceDataSourcesOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesOutput
}

type AnalyticsApplicationReferenceDataSourcesArgs struct {
	// The ARN of the Kinesis Analytics Application.
	Id pulumi.StringInput `pulumi:"id"`
	// The S3 configuration for the reference data source. See S3 Reference below for more details.
	S3 AnalyticsApplicationReferenceDataSourcesS3Input `pulumi:"s3"`
	// The Schema format of the data in the streaming source. See Source Schema below for more details.
	Schema AnalyticsApplicationReferenceDataSourcesSchemaInput `pulumi:"schema"`
	// The in-application Table Name.
	TableName pulumi.StringInput `pulumi:"tableName"`
}

func (AnalyticsApplicationReferenceDataSourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSources)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesArgs) ToAnalyticsApplicationReferenceDataSourcesOutput() AnalyticsApplicationReferenceDataSourcesOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesArgs) ToAnalyticsApplicationReferenceDataSourcesOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesOutput)
}

func (i AnalyticsApplicationReferenceDataSourcesArgs) ToAnalyticsApplicationReferenceDataSourcesPtrOutput() AnalyticsApplicationReferenceDataSourcesPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesArgs) ToAnalyticsApplicationReferenceDataSourcesPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesOutput).ToAnalyticsApplicationReferenceDataSourcesPtrOutputWithContext(ctx)
}

type AnalyticsApplicationReferenceDataSourcesPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesPtrOutput() AnalyticsApplicationReferenceDataSourcesPtrOutput
	ToAnalyticsApplicationReferenceDataSourcesPtrOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesPtrOutput
}

type analyticsApplicationReferenceDataSourcesPtrType AnalyticsApplicationReferenceDataSourcesArgs

func AnalyticsApplicationReferenceDataSourcesPtr(v *AnalyticsApplicationReferenceDataSourcesArgs) AnalyticsApplicationReferenceDataSourcesPtrInput {
	return (*analyticsApplicationReferenceDataSourcesPtrType)(v)
}

func (*analyticsApplicationReferenceDataSourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSources)(nil)).Elem()
}

func (i *analyticsApplicationReferenceDataSourcesPtrType) ToAnalyticsApplicationReferenceDataSourcesPtrOutput() AnalyticsApplicationReferenceDataSourcesPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationReferenceDataSourcesPtrType) ToAnalyticsApplicationReferenceDataSourcesPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSources)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesOutput) ToAnalyticsApplicationReferenceDataSourcesOutput() AnalyticsApplicationReferenceDataSourcesOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesOutput) ToAnalyticsApplicationReferenceDataSourcesOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesOutput) ToAnalyticsApplicationReferenceDataSourcesPtrOutput() AnalyticsApplicationReferenceDataSourcesPtrOutput {
	return o.ToAnalyticsApplicationReferenceDataSourcesPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationReferenceDataSourcesOutput) ToAnalyticsApplicationReferenceDataSourcesPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSources) *AnalyticsApplicationReferenceDataSources {
		return &v
	}).(AnalyticsApplicationReferenceDataSourcesPtrOutput)
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationReferenceDataSourcesOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSources) string { return v.Id }).(pulumi.StringOutput)
}

// The S3 configuration for the reference data source. See S3 Reference below for more details.
func (o AnalyticsApplicationReferenceDataSourcesOutput) S3() AnalyticsApplicationReferenceDataSourcesS3Output {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSources) AnalyticsApplicationReferenceDataSourcesS3 {
		return v.S3
	}).(AnalyticsApplicationReferenceDataSourcesS3Output)
}

// The Schema format of the data in the streaming source. See Source Schema below for more details.
func (o AnalyticsApplicationReferenceDataSourcesOutput) Schema() AnalyticsApplicationReferenceDataSourcesSchemaOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSources) AnalyticsApplicationReferenceDataSourcesSchema {
		return v.Schema
	}).(AnalyticsApplicationReferenceDataSourcesSchemaOutput)
}

// The in-application Table Name.
func (o AnalyticsApplicationReferenceDataSourcesOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSources) string { return v.TableName }).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSources)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesPtrOutput) ToAnalyticsApplicationReferenceDataSourcesPtrOutput() AnalyticsApplicationReferenceDataSourcesPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesPtrOutput) ToAnalyticsApplicationReferenceDataSourcesPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesPtrOutput) Elem() AnalyticsApplicationReferenceDataSourcesOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSources) AnalyticsApplicationReferenceDataSources { return *v }).(AnalyticsApplicationReferenceDataSourcesOutput)
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationReferenceDataSourcesPtrOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSources) string { return v.Id }).(pulumi.StringOutput)
}

// The S3 configuration for the reference data source. See S3 Reference below for more details.
func (o AnalyticsApplicationReferenceDataSourcesPtrOutput) S3() AnalyticsApplicationReferenceDataSourcesS3Output {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSources) AnalyticsApplicationReferenceDataSourcesS3 {
		return v.S3
	}).(AnalyticsApplicationReferenceDataSourcesS3Output)
}

// The Schema format of the data in the streaming source. See Source Schema below for more details.
func (o AnalyticsApplicationReferenceDataSourcesPtrOutput) Schema() AnalyticsApplicationReferenceDataSourcesSchemaOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSources) AnalyticsApplicationReferenceDataSourcesSchema {
		return v.Schema
	}).(AnalyticsApplicationReferenceDataSourcesSchemaOutput)
}

// The in-application Table Name.
func (o AnalyticsApplicationReferenceDataSourcesPtrOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSources) string { return v.TableName }).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesArgs struct {
	// The ARN of the Kinesis Analytics Application.
	Id *string `pulumi:"id"`
	// The S3 configuration for the reference data source. See S3 Reference below for more details.
	S3 AnalyticsApplicationReferenceDataSourcesS3Args `pulumi:"s3"`
	// The Schema format of the data in the streaming source. See Source Schema below for more details.
	Schema AnalyticsApplicationReferenceDataSourcesSchemaArgs `pulumi:"schema"`
	// The in-application Table Name.
	TableName string `pulumi:"tableName"`
}

type AnalyticsApplicationReferenceDataSourcesArgsInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesArgsOutput() AnalyticsApplicationReferenceDataSourcesArgsOutput
	ToAnalyticsApplicationReferenceDataSourcesArgsOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesArgsOutput
}

type AnalyticsApplicationReferenceDataSourcesArgsArgs struct {
	// The ARN of the Kinesis Analytics Application.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The S3 configuration for the reference data source. See S3 Reference below for more details.
	S3 AnalyticsApplicationReferenceDataSourcesS3ArgsInput `pulumi:"s3"`
	// The Schema format of the data in the streaming source. See Source Schema below for more details.
	Schema AnalyticsApplicationReferenceDataSourcesSchemaArgsInput `pulumi:"schema"`
	// The in-application Table Name.
	TableName pulumi.StringInput `pulumi:"tableName"`
}

func (AnalyticsApplicationReferenceDataSourcesArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesArgs)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesArgsArgs) ToAnalyticsApplicationReferenceDataSourcesArgsOutput() AnalyticsApplicationReferenceDataSourcesArgsOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesArgsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesArgsArgs) ToAnalyticsApplicationReferenceDataSourcesArgsOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesArgsOutput)
}

func (i AnalyticsApplicationReferenceDataSourcesArgsArgs) ToAnalyticsApplicationReferenceDataSourcesArgsPtrOutput() AnalyticsApplicationReferenceDataSourcesArgsPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesArgsPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesArgsArgs) ToAnalyticsApplicationReferenceDataSourcesArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesArgsOutput).ToAnalyticsApplicationReferenceDataSourcesArgsPtrOutputWithContext(ctx)
}

type AnalyticsApplicationReferenceDataSourcesArgsPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesArgsPtrOutput() AnalyticsApplicationReferenceDataSourcesArgsPtrOutput
	ToAnalyticsApplicationReferenceDataSourcesArgsPtrOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesArgsPtrOutput
}

type analyticsApplicationReferenceDataSourcesArgsPtrType AnalyticsApplicationReferenceDataSourcesArgsArgs

func AnalyticsApplicationReferenceDataSourcesArgsPtr(v *AnalyticsApplicationReferenceDataSourcesArgsArgs) AnalyticsApplicationReferenceDataSourcesArgsPtrInput {
	return (*analyticsApplicationReferenceDataSourcesArgsPtrType)(v)
}

func (*analyticsApplicationReferenceDataSourcesArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesArgs)(nil)).Elem()
}

func (i *analyticsApplicationReferenceDataSourcesArgsPtrType) ToAnalyticsApplicationReferenceDataSourcesArgsPtrOutput() AnalyticsApplicationReferenceDataSourcesArgsPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesArgsPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationReferenceDataSourcesArgsPtrType) ToAnalyticsApplicationReferenceDataSourcesArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesArgsPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesArgsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesArgs)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesArgsOutput) ToAnalyticsApplicationReferenceDataSourcesArgsOutput() AnalyticsApplicationReferenceDataSourcesArgsOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesArgsOutput) ToAnalyticsApplicationReferenceDataSourcesArgsOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesArgsOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesArgsOutput) ToAnalyticsApplicationReferenceDataSourcesArgsPtrOutput() AnalyticsApplicationReferenceDataSourcesArgsPtrOutput {
	return o.ToAnalyticsApplicationReferenceDataSourcesArgsPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationReferenceDataSourcesArgsOutput) ToAnalyticsApplicationReferenceDataSourcesArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesArgs) *AnalyticsApplicationReferenceDataSourcesArgs {
		return &v
	}).(AnalyticsApplicationReferenceDataSourcesArgsPtrOutput)
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationReferenceDataSourcesArgsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesArgs) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The S3 configuration for the reference data source. See S3 Reference below for more details.
func (o AnalyticsApplicationReferenceDataSourcesArgsOutput) S3() AnalyticsApplicationReferenceDataSourcesS3ArgsOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesArgs) AnalyticsApplicationReferenceDataSourcesS3Args {
		return v.S3
	}).(AnalyticsApplicationReferenceDataSourcesS3ArgsOutput)
}

// The Schema format of the data in the streaming source. See Source Schema below for more details.
func (o AnalyticsApplicationReferenceDataSourcesArgsOutput) Schema() AnalyticsApplicationReferenceDataSourcesSchemaArgsOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesArgs) AnalyticsApplicationReferenceDataSourcesSchemaArgs {
		return v.Schema
	}).(AnalyticsApplicationReferenceDataSourcesSchemaArgsOutput)
}

// The in-application Table Name.
func (o AnalyticsApplicationReferenceDataSourcesArgsOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesArgs) string { return v.TableName }).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesArgsPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesArgs)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesArgsPtrOutput) ToAnalyticsApplicationReferenceDataSourcesArgsPtrOutput() AnalyticsApplicationReferenceDataSourcesArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesArgsPtrOutput) ToAnalyticsApplicationReferenceDataSourcesArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesArgsPtrOutput) Elem() AnalyticsApplicationReferenceDataSourcesArgsOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesArgs) AnalyticsApplicationReferenceDataSourcesArgs {
		return *v
	}).(AnalyticsApplicationReferenceDataSourcesArgsOutput)
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationReferenceDataSourcesArgsPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesArgs) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The S3 configuration for the reference data source. See S3 Reference below for more details.
func (o AnalyticsApplicationReferenceDataSourcesArgsPtrOutput) S3() AnalyticsApplicationReferenceDataSourcesS3ArgsOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesArgs) AnalyticsApplicationReferenceDataSourcesS3Args {
		return v.S3
	}).(AnalyticsApplicationReferenceDataSourcesS3ArgsOutput)
}

// The Schema format of the data in the streaming source. See Source Schema below for more details.
func (o AnalyticsApplicationReferenceDataSourcesArgsPtrOutput) Schema() AnalyticsApplicationReferenceDataSourcesSchemaArgsOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesArgs) AnalyticsApplicationReferenceDataSourcesSchemaArgs {
		return v.Schema
	}).(AnalyticsApplicationReferenceDataSourcesSchemaArgsOutput)
}

// The in-application Table Name.
func (o AnalyticsApplicationReferenceDataSourcesArgsPtrOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesArgs) string { return v.TableName }).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesS3 struct {
	// The S3 Bucket ARN.
	BucketArn string `pulumi:"bucketArn"`
	// The File Key name containing reference data.
	FileKey string `pulumi:"fileKey"`
	// The ARN of the IAM Role used to send application messages.
	RoleArn string `pulumi:"roleArn"`
}

type AnalyticsApplicationReferenceDataSourcesS3Input interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesS3Output() AnalyticsApplicationReferenceDataSourcesS3Output
	ToAnalyticsApplicationReferenceDataSourcesS3OutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesS3Output
}

type AnalyticsApplicationReferenceDataSourcesS3Args struct {
	// The S3 Bucket ARN.
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// The File Key name containing reference data.
	FileKey pulumi.StringInput `pulumi:"fileKey"`
	// The ARN of the IAM Role used to send application messages.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationReferenceDataSourcesS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesS3)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesS3Args) ToAnalyticsApplicationReferenceDataSourcesS3Output() AnalyticsApplicationReferenceDataSourcesS3Output {
	return i.ToAnalyticsApplicationReferenceDataSourcesS3OutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesS3Args) ToAnalyticsApplicationReferenceDataSourcesS3OutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesS3Output)
}

type AnalyticsApplicationReferenceDataSourcesS3Output struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesS3)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesS3Output) ToAnalyticsApplicationReferenceDataSourcesS3Output() AnalyticsApplicationReferenceDataSourcesS3Output {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesS3Output) ToAnalyticsApplicationReferenceDataSourcesS3OutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesS3Output {
	return o
}

// The S3 Bucket ARN.
func (o AnalyticsApplicationReferenceDataSourcesS3Output) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesS3) string { return v.BucketArn }).(pulumi.StringOutput)
}

// The File Key name containing reference data.
func (o AnalyticsApplicationReferenceDataSourcesS3Output) FileKey() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesS3) string { return v.FileKey }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to send application messages.
func (o AnalyticsApplicationReferenceDataSourcesS3Output) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesS3) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesS3Args struct {
	// The S3 Bucket ARN.
	BucketArn string `pulumi:"bucketArn"`
	// The File Key name containing reference data.
	FileKey string `pulumi:"fileKey"`
	// The ARN of the IAM Role used to send application messages.
	RoleArn string `pulumi:"roleArn"`
}

type AnalyticsApplicationReferenceDataSourcesS3ArgsInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesS3ArgsOutput() AnalyticsApplicationReferenceDataSourcesS3ArgsOutput
	ToAnalyticsApplicationReferenceDataSourcesS3ArgsOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesS3ArgsOutput
}

type AnalyticsApplicationReferenceDataSourcesS3ArgsArgs struct {
	// The S3 Bucket ARN.
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// The File Key name containing reference data.
	FileKey pulumi.StringInput `pulumi:"fileKey"`
	// The ARN of the IAM Role used to send application messages.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationReferenceDataSourcesS3ArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesS3Args)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesS3ArgsArgs) ToAnalyticsApplicationReferenceDataSourcesS3ArgsOutput() AnalyticsApplicationReferenceDataSourcesS3ArgsOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesS3ArgsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesS3ArgsArgs) ToAnalyticsApplicationReferenceDataSourcesS3ArgsOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesS3ArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesS3ArgsOutput)
}

type AnalyticsApplicationReferenceDataSourcesS3ArgsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesS3ArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesS3Args)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesS3ArgsOutput) ToAnalyticsApplicationReferenceDataSourcesS3ArgsOutput() AnalyticsApplicationReferenceDataSourcesS3ArgsOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesS3ArgsOutput) ToAnalyticsApplicationReferenceDataSourcesS3ArgsOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesS3ArgsOutput {
	return o
}

// The S3 Bucket ARN.
func (o AnalyticsApplicationReferenceDataSourcesS3ArgsOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesS3Args) string { return v.BucketArn }).(pulumi.StringOutput)
}

// The File Key name containing reference data.
func (o AnalyticsApplicationReferenceDataSourcesS3ArgsOutput) FileKey() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesS3Args) string { return v.FileKey }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to send application messages.
func (o AnalyticsApplicationReferenceDataSourcesS3ArgsOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesS3Args) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchema struct {
	// The Record Column mapping for the streaming source data element.
	// See Record Columns below for more details.
	RecordColumns []AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn `pulumi:"recordColumns"`
	// The Encoding of the record in the streaming source.
	RecordEncoding *string `pulumi:"recordEncoding"`
	// The Record Format and mapping information to schematize a record.
	// See Record Format below for more details.
	RecordFormat AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat `pulumi:"recordFormat"`
}

type AnalyticsApplicationReferenceDataSourcesSchemaInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaOutput() AnalyticsApplicationReferenceDataSourcesSchemaOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaOutput
}

type AnalyticsApplicationReferenceDataSourcesSchemaArgs struct {
	// The Record Column mapping for the streaming source data element.
	// See Record Columns below for more details.
	RecordColumns AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayInput `pulumi:"recordColumns"`
	// The Encoding of the record in the streaming source.
	RecordEncoding pulumi.StringPtrInput `pulumi:"recordEncoding"`
	// The Record Format and mapping information to schematize a record.
	// See Record Format below for more details.
	RecordFormat AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatInput `pulumi:"recordFormat"`
}

func (AnalyticsApplicationReferenceDataSourcesSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchema)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaOutput() AnalyticsApplicationReferenceDataSourcesSchemaOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchema)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaOutput() AnalyticsApplicationReferenceDataSourcesSchemaOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaOutput {
	return o
}

// The Record Column mapping for the streaming source data element.
// See Record Columns below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaOutput) RecordColumns() AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchema) []AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn {
		return v.RecordColumns
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput)
}

// The Encoding of the record in the streaming source.
func (o AnalyticsApplicationReferenceDataSourcesSchemaOutput) RecordEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchema) *string { return v.RecordEncoding }).(pulumi.StringPtrOutput)
}

// The Record Format and mapping information to schematize a record.
// See Record Format below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaOutput) RecordFormat() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchema) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat {
		return v.RecordFormat
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaArgs struct {
	// The Record Column mapping for the streaming source data element.
	// See Record Columns below for more details.
	RecordColumns []AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs `pulumi:"recordColumns"`
	// The Encoding of the record in the streaming source.
	RecordEncoding *string `pulumi:"recordEncoding"`
	// The Record Format and mapping information to schematize a record.
	// See Record Format below for more details.
	RecordFormat AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs `pulumi:"recordFormat"`
}

type AnalyticsApplicationReferenceDataSourcesSchemaArgsInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaArgsOutput() AnalyticsApplicationReferenceDataSourcesSchemaArgsOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaArgsOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaArgsOutput
}

type AnalyticsApplicationReferenceDataSourcesSchemaArgsArgs struct {
	// The Record Column mapping for the streaming source data element.
	// See Record Columns below for more details.
	RecordColumns AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArrayInput `pulumi:"recordColumns"`
	// The Encoding of the record in the streaming source.
	RecordEncoding pulumi.StringPtrInput `pulumi:"recordEncoding"`
	// The Record Format and mapping information to schematize a record.
	// See Record Format below for more details.
	RecordFormat AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgsInput `pulumi:"recordFormat"`
}

func (AnalyticsApplicationReferenceDataSourcesSchemaArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaArgs)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaArgsArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaArgsOutput() AnalyticsApplicationReferenceDataSourcesSchemaArgsOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaArgsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaArgsArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaArgsOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaArgsOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaArgsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaArgs)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaArgsOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaArgsOutput() AnalyticsApplicationReferenceDataSourcesSchemaArgsOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaArgsOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaArgsOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaArgsOutput {
	return o
}

// The Record Column mapping for the streaming source data element.
// See Record Columns below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaArgsOutput) RecordColumns() AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArrayOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaArgs) []AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs {
		return v.RecordColumns
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArrayOutput)
}

// The Encoding of the record in the streaming source.
func (o AnalyticsApplicationReferenceDataSourcesSchemaArgsOutput) RecordEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaArgs) *string { return v.RecordEncoding }).(pulumi.StringPtrOutput)
}

// The Record Format and mapping information to schematize a record.
// See Record Format below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaArgsOutput) RecordFormat() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgsOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaArgs) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs {
		return v.RecordFormat
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgsOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn struct {
	// The Mapping reference to the data element.
	Mapping *string `pulumi:"mapping"`
	// Name of the column.
	Name string `pulumi:"name"`
	// The SQL Type of the column.
	SqlType string `pulumi:"sqlType"`
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs struct {
	// The Mapping reference to the data element.
	Mapping pulumi.StringPtrInput `pulumi:"mapping"`
	// Name of the column.
	Name pulumi.StringInput `pulumi:"name"`
	// The SQL Type of the column.
	SqlType pulumi.StringInput `pulumi:"sqlType"`
}

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArray []AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnInput

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArray) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArray) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput {
	return o
}

// The Mapping reference to the data element.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput) Mapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn) *string { return v.Mapping }).(pulumi.StringPtrOutput)
}

// Name of the column.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn) string { return v.Name }).(pulumi.StringOutput)
}

// The SQL Type of the column.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput) SqlType() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn) string { return v.SqlType }).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput) Index(i pulumi.IntInput) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn {
		return vs[0].([]AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn)[vs[1].(int)]
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs struct {
	// The Mapping reference to the data element.
	Mapping *string `pulumi:"mapping"`
	// Name of the column.
	Name string `pulumi:"name"`
	// The SQL Type of the column.
	SqlType string `pulumi:"sqlType"`
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsOutput
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArgs struct {
	// The Mapping reference to the data element.
	Mapping pulumi.StringPtrInput `pulumi:"mapping"`
	// Name of the column.
	Name pulumi.StringInput `pulumi:"name"`
	// The SQL Type of the column.
	SqlType pulumi.StringInput `pulumi:"sqlType"`
}

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArrayInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArrayOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArrayOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArrayOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArrayOutput
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArray []AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsInput

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArray) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArrayOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArrayOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArrayOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArray) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArrayOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArrayOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsOutput {
	return o
}

// The Mapping reference to the data element.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsOutput) Mapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs) *string { return v.Mapping }).(pulumi.StringPtrOutput)
}

// Name of the column.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs) string { return v.Name }).(pulumi.StringOutput)
}

// The SQL Type of the column.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsOutput) SqlType() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs) string { return v.SqlType }).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArrayOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArrayOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArrayOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArrayOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArrayOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArrayOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArrayOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArrayOutput) Index(i pulumi.IntInput) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs {
		return vs[0].([]AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgs)[vs[1].(int)]
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat struct {
	// The Mapping Information for the record format.
	// See Mapping Parameters below for more details.
	MappingParameters *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters `pulumi:"mappingParameters"`
	// The type of Record Format. Can be `CSV` or `JSON`.
	RecordFormatType string `pulumi:"recordFormatType"`
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs struct {
	// The Mapping Information for the record format.
	// See Mapping Parameters below for more details.
	MappingParameters AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrInput `pulumi:"mappingParameters"`
	// The type of Record Format. Can be `CSV` or `JSON`.
	RecordFormatType pulumi.StringInput `pulumi:"recordFormatType"`
}

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput {
	return o
}

// The Mapping Information for the record format.
// See Mapping Parameters below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput) MappingParameters() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters {
		return v.MappingParameters
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput)
}

// The type of Record Format. Can be `CSV` or `JSON`.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput) RecordFormatType() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat) string { return v.RecordFormatType }).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs struct {
	// The Mapping Information for the record format.
	// See Mapping Parameters below for more details.
	MappingParameters *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs `pulumi:"mappingParameters"`
	// The type of Record Format. Can be `CSV` or `JSON`.
	RecordFormatType *string `pulumi:"recordFormatType"`
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgsInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgsOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgsOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgsOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgsOutput
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgsArgs struct {
	// The Mapping Information for the record format.
	// See Mapping Parameters below for more details.
	MappingParameters AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrInput `pulumi:"mappingParameters"`
	// The type of Record Format. Can be `CSV` or `JSON`.
	RecordFormatType pulumi.StringPtrInput `pulumi:"recordFormatType"`
}

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgsArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgsOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgsOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgsArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgsOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgsOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgsOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgsOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgsOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgsOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgsOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgsOutput {
	return o
}

// The Mapping Information for the record format.
// See Mapping Parameters below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgsOutput) MappingParameters() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs {
		return v.MappingParameters
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutput)
}

// The type of Record Format. Can be `CSV` or `JSON`.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgsOutput) RecordFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgs) *string {
		return v.RecordFormatType
	}).(pulumi.StringPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters struct {
	// Mapping information when the record format uses delimiters.
	// See CSV Mapping Parameters below for more details.
	Csv *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv `pulumi:"csv"`
	// Mapping information when JSON is the record format on the streaming source.
	// See JSON Mapping Parameters below for more details.
	Json *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson `pulumi:"json"`
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs struct {
	// Mapping information when the record format uses delimiters.
	// See CSV Mapping Parameters below for more details.
	Csv AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrInput `pulumi:"csv"`
	// Mapping information when JSON is the record format on the streaming source.
	// See JSON Mapping Parameters below for more details.
	Json AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrInput `pulumi:"json"`
}

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput)
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput).ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput
}

type analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrType AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs

func AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtr(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrInput {
	return (*analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrType)(v)
}

func (*analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (i *analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrType) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrType) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput {
	return o.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters {
		return &v
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput)
}

// Mapping information when the record format uses delimiters.
// See CSV Mapping Parameters below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput) Csv() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv {
		return v.Csv
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput)
}

// Mapping information when JSON is the record format on the streaming source.
// See JSON Mapping Parameters below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput) Json() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson {
		return v.Json
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput) Elem() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters {
		return *v
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput)
}

// Mapping information when the record format uses delimiters.
// See CSV Mapping Parameters below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput) Csv() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv {
		return v.Csv
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput)
}

// Mapping information when JSON is the record format on the streaming source.
// See JSON Mapping Parameters below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput) Json() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson {
		return v.Json
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs struct {
	// Mapping information when the record format uses delimiters.
	// See CSV Mapping Parameters below for more details.
	Csv *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs `pulumi:"csv"`
	// Mapping information when JSON is the record format on the streaming source.
	// See JSON Mapping Parameters below for more details.
	Json *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs `pulumi:"json"`
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsOutput
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsArgs struct {
	// Mapping information when the record format uses delimiters.
	// See CSV Mapping Parameters below for more details.
	Csv AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrInput `pulumi:"csv"`
	// Mapping information when JSON is the record format on the streaming source.
	// See JSON Mapping Parameters below for more details.
	Json AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrInput `pulumi:"json"`
}

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsOutput)
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsOutput).ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutputWithContext(ctx)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutput
}

type analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrType AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsArgs

func AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtr(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsArgs) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrInput {
	return (*analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrType)(v)
}

func (*analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs)(nil)).Elem()
}

func (i *analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrType) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrType) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutput {
	return o.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs {
		return &v
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutput)
}

// Mapping information when the record format uses delimiters.
// See CSV Mapping Parameters below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsOutput) Csv() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs {
		return v.Csv
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutput)
}

// Mapping information when JSON is the record format on the streaming source.
// See JSON Mapping Parameters below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsOutput) Json() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs {
		return v.Json
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutput) Elem() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs {
		return *v
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsOutput)
}

// Mapping information when the record format uses delimiters.
// See CSV Mapping Parameters below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutput) Csv() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs {
		return v.Csv
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutput)
}

// Mapping information when JSON is the record format on the streaming source.
// See JSON Mapping Parameters below for more details.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutput) Json() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgs) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs {
		return v.Json
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv struct {
	// The Column Delimiter.
	RecordColumnDelimiter string `pulumi:"recordColumnDelimiter"`
	// The Row Delimiter.
	RecordRowDelimiter string `pulumi:"recordRowDelimiter"`
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs struct {
	// The Column Delimiter.
	RecordColumnDelimiter pulumi.StringInput `pulumi:"recordColumnDelimiter"`
	// The Row Delimiter.
	RecordRowDelimiter pulumi.StringInput `pulumi:"recordRowDelimiter"`
}

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput)
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput).ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput
}

type analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrType AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs

func AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtr(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrInput {
	return (*analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrType)(v)
}

func (*analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (i *analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrType) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrType) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv {
		return &v
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput)
}

// The Column Delimiter.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput) RecordColumnDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv) string {
		return v.RecordColumnDelimiter
	}).(pulumi.StringOutput)
}

// The Row Delimiter.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput) RecordRowDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv) string {
		return v.RecordRowDelimiter
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput) Elem() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv {
		return *v
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput)
}

// The Column Delimiter.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput) RecordColumnDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv) string {
		return v.RecordColumnDelimiter
	}).(pulumi.StringOutput)
}

// The Row Delimiter.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput) RecordRowDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv) string {
		return v.RecordRowDelimiter
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs struct {
	// The Column Delimiter.
	RecordColumnDelimiter string `pulumi:"recordColumnDelimiter"`
	// The Row Delimiter.
	RecordRowDelimiter string `pulumi:"recordRowDelimiter"`
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsOutput
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsArgs struct {
	// The Column Delimiter.
	RecordColumnDelimiter pulumi.StringInput `pulumi:"recordColumnDelimiter"`
	// The Row Delimiter.
	RecordRowDelimiter pulumi.StringInput `pulumi:"recordRowDelimiter"`
}

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsOutput)
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsOutput).ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutputWithContext(ctx)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutput
}

type analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrType AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsArgs

func AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtr(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsArgs) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrInput {
	return (*analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrType)(v)
}

func (*analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs)(nil)).Elem()
}

func (i *analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrType) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrType) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutput {
	return o.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs {
		return &v
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutput)
}

// The Column Delimiter.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsOutput) RecordColumnDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs) string {
		return v.RecordColumnDelimiter
	}).(pulumi.StringOutput)
}

// The Row Delimiter.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsOutput) RecordRowDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs) string {
		return v.RecordRowDelimiter
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutput) Elem() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs {
		return *v
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsOutput)
}

// The Column Delimiter.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutput) RecordColumnDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs) string {
		return v.RecordColumnDelimiter
	}).(pulumi.StringOutput)
}

// The Row Delimiter.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutput) RecordRowDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgs) string {
		return v.RecordRowDelimiter
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson struct {
	// Path to the top-level parent that contains the records.
	RecordRowPath string `pulumi:"recordRowPath"`
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs struct {
	// Path to the top-level parent that contains the records.
	RecordRowPath pulumi.StringInput `pulumi:"recordRowPath"`
}

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput)
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput).ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput
}

type analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrType AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs

func AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtr(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrInput {
	return (*analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrType)(v)
}

func (*analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (i *analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrType) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrType) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson {
		return &v
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput)
}

// Path to the top-level parent that contains the records.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput) RecordRowPath() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson) string {
		return v.RecordRowPath
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput) Elem() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson {
		return *v
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput)
}

// Path to the top-level parent that contains the records.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput) RecordRowPath() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson) string {
		return v.RecordRowPath
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs struct {
	// Path to the top-level parent that contains the records.
	RecordRowPath string `pulumi:"recordRowPath"`
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsOutput
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsArgs struct {
	// Path to the top-level parent that contains the records.
	RecordRowPath pulumi.StringInput `pulumi:"recordRowPath"`
}

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsOutput)
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsArgs) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsOutput).ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutputWithContext(ctx)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutput
	ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutput
}

type analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrType AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsArgs

func AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtr(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsArgs) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrInput {
	return (*analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrType)(v)
}

func (*analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs)(nil)).Elem()
}

func (i *analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrType) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrType) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutput {
	return o.ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs) *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs {
		return &v
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutput)
}

// Path to the top-level parent that contains the records.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsOutput) RecordRowPath() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs) string {
		return v.RecordRowPath
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutput() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutput) ToAnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutput) Elem() AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs) AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs {
		return *v
	}).(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsOutput)
}

// Path to the top-level parent that contains the records.
func (o AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutput) RecordRowPath() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgs) string {
		return v.RecordRowPath
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesState struct {
	// The ARN of the Kinesis Analytics Application.
	Id *string `pulumi:"id"`
	// The S3 configuration for the reference data source. See S3 Reference below for more details.
	S3 AnalyticsApplicationReferenceDataSourcesStateS3 `pulumi:"s3"`
	// The Schema format of the data in the streaming source. See Source Schema below for more details.
	Schema AnalyticsApplicationReferenceDataSourcesStateSchema `pulumi:"schema"`
	// The in-application Table Name.
	TableName string `pulumi:"tableName"`
}

type AnalyticsApplicationReferenceDataSourcesStateInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesStateOutput() AnalyticsApplicationReferenceDataSourcesStateOutput
	ToAnalyticsApplicationReferenceDataSourcesStateOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesStateOutput
}

type AnalyticsApplicationReferenceDataSourcesStateArgs struct {
	// The ARN of the Kinesis Analytics Application.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The S3 configuration for the reference data source. See S3 Reference below for more details.
	S3 AnalyticsApplicationReferenceDataSourcesStateS3Input `pulumi:"s3"`
	// The Schema format of the data in the streaming source. See Source Schema below for more details.
	Schema AnalyticsApplicationReferenceDataSourcesStateSchemaInput `pulumi:"schema"`
	// The in-application Table Name.
	TableName pulumi.StringInput `pulumi:"tableName"`
}

func (AnalyticsApplicationReferenceDataSourcesStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesState)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesStateArgs) ToAnalyticsApplicationReferenceDataSourcesStateOutput() AnalyticsApplicationReferenceDataSourcesStateOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesStateOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesStateArgs) ToAnalyticsApplicationReferenceDataSourcesStateOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesStateOutput)
}

type AnalyticsApplicationReferenceDataSourcesStateOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesState)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesStateOutput) ToAnalyticsApplicationReferenceDataSourcesStateOutput() AnalyticsApplicationReferenceDataSourcesStateOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesStateOutput) ToAnalyticsApplicationReferenceDataSourcesStateOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesStateOutput {
	return o
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationReferenceDataSourcesStateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesState) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The S3 configuration for the reference data source. See S3 Reference below for more details.
func (o AnalyticsApplicationReferenceDataSourcesStateOutput) S3() AnalyticsApplicationReferenceDataSourcesStateS3Output {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesState) AnalyticsApplicationReferenceDataSourcesStateS3 {
		return v.S3
	}).(AnalyticsApplicationReferenceDataSourcesStateS3Output)
}

// The Schema format of the data in the streaming source. See Source Schema below for more details.
func (o AnalyticsApplicationReferenceDataSourcesStateOutput) Schema() AnalyticsApplicationReferenceDataSourcesStateSchemaOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesState) AnalyticsApplicationReferenceDataSourcesStateSchema {
		return v.Schema
	}).(AnalyticsApplicationReferenceDataSourcesStateSchemaOutput)
}

// The in-application Table Name.
func (o AnalyticsApplicationReferenceDataSourcesStateOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesState) string { return v.TableName }).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesStateS3 struct {
	// The S3 Bucket ARN.
	BucketArn string `pulumi:"bucketArn"`
	// The File Key name containing reference data.
	FileKey string `pulumi:"fileKey"`
	// The ARN of the IAM Role used to send application messages.
	RoleArn string `pulumi:"roleArn"`
}

type AnalyticsApplicationReferenceDataSourcesStateS3Input interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesStateS3Output() AnalyticsApplicationReferenceDataSourcesStateS3Output
	ToAnalyticsApplicationReferenceDataSourcesStateS3OutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesStateS3Output
}

type AnalyticsApplicationReferenceDataSourcesStateS3Args struct {
	// The S3 Bucket ARN.
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// The File Key name containing reference data.
	FileKey pulumi.StringInput `pulumi:"fileKey"`
	// The ARN of the IAM Role used to send application messages.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationReferenceDataSourcesStateS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesStateS3)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesStateS3Args) ToAnalyticsApplicationReferenceDataSourcesStateS3Output() AnalyticsApplicationReferenceDataSourcesStateS3Output {
	return i.ToAnalyticsApplicationReferenceDataSourcesStateS3OutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesStateS3Args) ToAnalyticsApplicationReferenceDataSourcesStateS3OutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesStateS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesStateS3Output)
}

type AnalyticsApplicationReferenceDataSourcesStateS3Output struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesStateS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesStateS3)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesStateS3Output) ToAnalyticsApplicationReferenceDataSourcesStateS3Output() AnalyticsApplicationReferenceDataSourcesStateS3Output {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesStateS3Output) ToAnalyticsApplicationReferenceDataSourcesStateS3OutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesStateS3Output {
	return o
}

// The S3 Bucket ARN.
func (o AnalyticsApplicationReferenceDataSourcesStateS3Output) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesStateS3) string { return v.BucketArn }).(pulumi.StringOutput)
}

// The File Key name containing reference data.
func (o AnalyticsApplicationReferenceDataSourcesStateS3Output) FileKey() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesStateS3) string { return v.FileKey }).(pulumi.StringOutput)
}

// The ARN of the IAM Role used to send application messages.
func (o AnalyticsApplicationReferenceDataSourcesStateS3Output) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesStateS3) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesStateSchema struct {
	// The Record Column mapping for the streaming source data element.
	// See Record Columns below for more details.
	RecordColumns []AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumn `pulumi:"recordColumns"`
	// The Encoding of the record in the streaming source.
	RecordEncoding *string `pulumi:"recordEncoding"`
	// The Record Format and mapping information to schematize a record.
	// See Record Format below for more details.
	RecordFormat AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormat `pulumi:"recordFormat"`
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesStateSchemaOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaOutput
	ToAnalyticsApplicationReferenceDataSourcesStateSchemaOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaOutput
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaArgs struct {
	// The Record Column mapping for the streaming source data element.
	// See Record Columns below for more details.
	RecordColumns AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArrayInput `pulumi:"recordColumns"`
	// The Encoding of the record in the streaming source.
	RecordEncoding pulumi.StringPtrInput `pulumi:"recordEncoding"`
	// The Record Format and mapping information to schematize a record.
	// See Record Format below for more details.
	RecordFormat AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatInput `pulumi:"recordFormat"`
}

func (AnalyticsApplicationReferenceDataSourcesStateSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesStateSchema)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesStateSchemaArgs) ToAnalyticsApplicationReferenceDataSourcesStateSchemaOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesStateSchemaOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesStateSchemaArgs) ToAnalyticsApplicationReferenceDataSourcesStateSchemaOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesStateSchemaOutput)
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesStateSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesStateSchema)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesStateSchemaOutput) ToAnalyticsApplicationReferenceDataSourcesStateSchemaOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesStateSchemaOutput) ToAnalyticsApplicationReferenceDataSourcesStateSchemaOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaOutput {
	return o
}

// The Record Column mapping for the streaming source data element.
// See Record Columns below for more details.
func (o AnalyticsApplicationReferenceDataSourcesStateSchemaOutput) RecordColumns() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArrayOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesStateSchema) []AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumn {
		return v.RecordColumns
	}).(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArrayOutput)
}

// The Encoding of the record in the streaming source.
func (o AnalyticsApplicationReferenceDataSourcesStateSchemaOutput) RecordEncoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesStateSchema) *string { return v.RecordEncoding }).(pulumi.StringPtrOutput)
}

// The Record Format and mapping information to schematize a record.
// See Record Format below for more details.
func (o AnalyticsApplicationReferenceDataSourcesStateSchemaOutput) RecordFormat() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesStateSchema) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormat {
		return v.RecordFormat
	}).(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatOutput)
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumn struct {
	// The Mapping reference to the data element.
	Mapping *string `pulumi:"mapping"`
	// Name of the column.
	Name string `pulumi:"name"`
	// The SQL Type of the column.
	SqlType string `pulumi:"sqlType"`
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnOutput
	ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnOutput
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArgs struct {
	// The Mapping reference to the data element.
	Mapping pulumi.StringPtrInput `pulumi:"mapping"`
	// Name of the column.
	Name pulumi.StringInput `pulumi:"name"`
	// The SQL Type of the column.
	SqlType pulumi.StringInput `pulumi:"sqlType"`
}

func (AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumn)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArgs) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArgs) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnOutput)
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArrayInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArrayOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArrayOutput
	ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArrayOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArrayOutput
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArray []AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnInput

func (AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumn)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArray) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArrayOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArrayOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArrayOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArray) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArrayOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArrayOutput)
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumn)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnOutput) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnOutput) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnOutput {
	return o
}

// The Mapping reference to the data element.
func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnOutput) Mapping() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumn) *string { return v.Mapping }).(pulumi.StringPtrOutput)
}

// Name of the column.
func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumn) string { return v.Name }).(pulumi.StringOutput)
}

// The SQL Type of the column.
func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnOutput) SqlType() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumn) string { return v.SqlType }).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArrayOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumn)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArrayOutput) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArrayOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArrayOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArrayOutput) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArrayOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArrayOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArrayOutput) Index(i pulumi.IntInput) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumn {
		return vs[0].([]AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumn)[vs[1].(int)]
	}).(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnOutput)
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormat struct {
	// The Mapping Information for the record format.
	// See Mapping Parameters below for more details.
	MappingParameters *AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParameters `pulumi:"mappingParameters"`
	// The type of Record Format. Can be `CSV` or `JSON`.
	RecordFormatType *string `pulumi:"recordFormatType"`
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatOutput
	ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatOutput
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatArgs struct {
	// The Mapping Information for the record format.
	// See Mapping Parameters below for more details.
	MappingParameters AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrInput `pulumi:"mappingParameters"`
	// The type of Record Format. Can be `CSV` or `JSON`.
	RecordFormatType pulumi.StringPtrInput `pulumi:"recordFormatType"`
}

func (AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormat)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatArgs) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatArgs) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatOutput)
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormat)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatOutput) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatOutput) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatOutput {
	return o
}

// The Mapping Information for the record format.
// See Mapping Parameters below for more details.
func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatOutput) MappingParameters() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormat) *AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParameters {
		return v.MappingParameters
	}).(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutput)
}

// The type of Record Format. Can be `CSV` or `JSON`.
func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatOutput) RecordFormatType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormat) *string {
		return v.RecordFormatType
	}).(pulumi.StringPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParameters struct {
	// Mapping information when the record format uses delimiters.
	// See CSV Mapping Parameters below for more details.
	Csv *AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsv `pulumi:"csv"`
	// Mapping information when JSON is the record format on the streaming source.
	// See JSON Mapping Parameters below for more details.
	Json *AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJson `pulumi:"json"`
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersOutput
	ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersOutput
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersArgs struct {
	// Mapping information when the record format uses delimiters.
	// See CSV Mapping Parameters below for more details.
	Csv AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrInput `pulumi:"csv"`
	// Mapping information when JSON is the record format on the streaming source.
	// See JSON Mapping Parameters below for more details.
	Json AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrInput `pulumi:"json"`
}

func (AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersOutput)
}

func (i AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersArgs) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersOutput).ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx)
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutput
	ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutput
}

type analyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrType AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersArgs

func AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtr(v *AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersArgs) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrInput {
	return (*analyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrType)(v)
}

func (*analyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (i *analyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrType) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrType) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutput {
	return o.ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersOutput) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParameters) *AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParameters {
		return &v
	}).(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutput)
}

// Mapping information when the record format uses delimiters.
// See CSV Mapping Parameters below for more details.
func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersOutput) Csv() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParameters) *AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsv {
		return v.Csv
	}).(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutput)
}

// Mapping information when JSON is the record format on the streaming source.
// See JSON Mapping Parameters below for more details.
func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersOutput) Json() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParameters) *AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJson {
		return v.Json
	}).(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParameters)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutput) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutput) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutput) Elem() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParameters) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParameters {
		return *v
	}).(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersOutput)
}

// Mapping information when the record format uses delimiters.
// See CSV Mapping Parameters below for more details.
func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutput) Csv() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParameters) *AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsv {
		return v.Csv
	}).(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutput)
}

// Mapping information when JSON is the record format on the streaming source.
// See JSON Mapping Parameters below for more details.
func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutput) Json() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParameters) *AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJson {
		return v.Json
	}).(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsv struct {
	// The Column Delimiter.
	RecordColumnDelimiter string `pulumi:"recordColumnDelimiter"`
	// The Row Delimiter.
	RecordRowDelimiter string `pulumi:"recordRowDelimiter"`
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvOutput
	ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvOutput
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvArgs struct {
	// The Column Delimiter.
	RecordColumnDelimiter pulumi.StringInput `pulumi:"recordColumnDelimiter"`
	// The Row Delimiter.
	RecordRowDelimiter pulumi.StringInput `pulumi:"recordRowDelimiter"`
}

func (AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvOutput)
}

func (i AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvArgs) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvOutput).ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx)
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutput
	ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutput
}

type analyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrType AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvArgs

func AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtr(v *AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvArgs) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrInput {
	return (*analyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrType)(v)
}

func (*analyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (i *analyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrType) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrType) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvOutput) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsv) *AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsv {
		return &v
	}).(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutput)
}

// The Column Delimiter.
func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvOutput) RecordColumnDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsv) string {
		return v.RecordColumnDelimiter
	}).(pulumi.StringOutput)
}

// The Row Delimiter.
func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvOutput) RecordRowDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsv) string {
		return v.RecordRowDelimiter
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsv)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutput) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutput) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutput) Elem() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsv) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsv {
		return *v
	}).(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvOutput)
}

// The Column Delimiter.
func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutput) RecordColumnDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsv) string {
		return v.RecordColumnDelimiter
	}).(pulumi.StringOutput)
}

// The Row Delimiter.
func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutput) RecordRowDelimiter() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsv) string {
		return v.RecordRowDelimiter
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJson struct {
	// Path to the top-level parent that contains the records.
	RecordRowPath string `pulumi:"recordRowPath"`
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonOutput
	ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonOutput
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonArgs struct {
	// Path to the top-level parent that contains the records.
	RecordRowPath pulumi.StringInput `pulumi:"recordRowPath"`
}

func (AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (i AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonOutput)
}

func (i AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonArgs) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonOutput).ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx)
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutput
	ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutput
}

type analyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrType AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonArgs

func AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtr(v *AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonArgs) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrInput {
	return (*analyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrType)(v)
}

func (*analyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (i *analyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrType) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutput {
	return i.ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrType) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutput)
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonOutput) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJson) *AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJson {
		return &v
	}).(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutput)
}

// Path to the top-level parent that contains the records.
func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonOutput) RecordRowPath() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJson) string {
		return v.RecordRowPath
	}).(pulumi.StringOutput)
}

type AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutput struct{ *pulumi.OutputState }

func (AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJson)(nil)).Elem()
}

func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutput) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutput() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutput) ToAnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutputWithContext(ctx context.Context) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutput {
	return o
}

func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutput) Elem() AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonOutput {
	return o.ApplyT(func(v *AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJson) AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJson {
		return *v
	}).(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonOutput)
}

// Path to the top-level parent that contains the records.
func (o AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutput) RecordRowPath() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJson) string {
		return v.RecordRowPath
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamElasticsearchConfiguration struct {
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval *int `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize *int `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The ARN of the Amazon ES domain.  The IAM role must have permission for `DescribeElasticsearchDomain`, `DescribeElasticsearchDomains`, and `DescribeElasticsearchDomainConfig` after assuming `RoleARN`.  The pattern needs to be `arn:.*`.
	DomainArn string `pulumi:"domainArn"`
	// The Elasticsearch index name.
	IndexName string `pulumi:"indexName"`
	// The Elasticsearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are `NoRotation`, `OneHour`, `OneDay`, `OneWeek`, and `OneMonth`.  The default value is `OneDay`.
	IndexRotationPeriod *string `pulumi:"indexRotationPeriod"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration *FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration `pulumi:"processingConfiguration"`
	// After an initial failure to deliver to Amazon Elasticsearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
	RetryDuration *int `pulumi:"retryDuration"`
	// The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The pattern needs to be `arn:.*`.
	RoleArn string `pulumi:"roleArn"`
	// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
	S3BackupMode *string `pulumi:"s3BackupMode"`
	// The Elasticsearch type name with maximum length of 100 characters.
	TypeName *string `pulumi:"typeName"`
}

type FirehoseDeliveryStreamElasticsearchConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationOutput() FirehoseDeliveryStreamElasticsearchConfigurationOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationArgs struct {
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval pulumi.IntPtrInput `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize pulumi.IntPtrInput `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsInput `pulumi:"cloudwatchLoggingOptions"`
	// The ARN of the Amazon ES domain.  The IAM role must have permission for `DescribeElasticsearchDomain`, `DescribeElasticsearchDomains`, and `DescribeElasticsearchDomainConfig` after assuming `RoleARN`.  The pattern needs to be `arn:.*`.
	DomainArn pulumi.StringInput `pulumi:"domainArn"`
	// The Elasticsearch index name.
	IndexName pulumi.StringInput `pulumi:"indexName"`
	// The Elasticsearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are `NoRotation`, `OneHour`, `OneDay`, `OneWeek`, and `OneMonth`.  The default value is `OneDay`.
	IndexRotationPeriod pulumi.StringPtrInput `pulumi:"indexRotationPeriod"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// After an initial failure to deliver to Amazon Elasticsearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
	RetryDuration pulumi.IntPtrInput `pulumi:"retryDuration"`
	// The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The pattern needs to be `arn:.*`.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
	S3BackupMode pulumi.StringPtrInput `pulumi:"s3BackupMode"`
	// The Elasticsearch type name with maximum length of 100 characters.
	TypeName pulumi.StringPtrInput `pulumi:"typeName"`
}

func (FirehoseDeliveryStreamElasticsearchConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationOutput() FirehoseDeliveryStreamElasticsearchConfigurationOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationOutput)
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationOutput).ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamElasticsearchConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput
}

type firehoseDeliveryStreamElasticsearchConfigurationPtrType FirehoseDeliveryStreamElasticsearchConfigurationArgs

func FirehoseDeliveryStreamElasticsearchConfigurationPtr(v *FirehoseDeliveryStreamElasticsearchConfigurationArgs) FirehoseDeliveryStreamElasticsearchConfigurationPtrInput {
	return (*firehoseDeliveryStreamElasticsearchConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamElasticsearchConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationOutput() FirehoseDeliveryStreamElasticsearchConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *FirehoseDeliveryStreamElasticsearchConfiguration {
		return &v
	}).(FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput)
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *int { return v.BufferingInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *int { return v.BufferingSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput)
}

// The ARN of the Amazon ES domain.  The IAM role must have permission for `DescribeElasticsearchDomain`, `DescribeElasticsearchDomains`, and `DescribeElasticsearchDomainConfig` after assuming `RoleARN`.  The pattern needs to be `arn:.*`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) DomainArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) string { return v.DomainArn }).(pulumi.StringOutput)
}

// The Elasticsearch index name.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) IndexName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) string { return v.IndexName }).(pulumi.StringOutput)
}

// The Elasticsearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are `NoRotation`, `OneHour`, `OneDay`, `OneWeek`, and `OneMonth`.  The default value is `OneDay`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) IndexRotationPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *string { return v.IndexRotationPeriod }).(pulumi.StringPtrOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) ProcessingConfiguration() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput)
}

// After an initial failure to deliver to Amazon Elasticsearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *int { return v.RetryDuration }).(pulumi.IntPtrOutput)
}

// The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The pattern needs to be `arn:.*`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

// The Elasticsearch type name with maximum length of 100 characters.
func (o FirehoseDeliveryStreamElasticsearchConfigurationOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *string { return v.TypeName }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) Elem() FirehoseDeliveryStreamElasticsearchConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfiguration) FirehoseDeliveryStreamElasticsearchConfiguration {
		return *v
	}).(FirehoseDeliveryStreamElasticsearchConfigurationOutput)
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *int { return v.BufferingInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *int { return v.BufferingSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput)
}

// The ARN of the Amazon ES domain.  The IAM role must have permission for `DescribeElasticsearchDomain`, `DescribeElasticsearchDomains`, and `DescribeElasticsearchDomainConfig` after assuming `RoleARN`.  The pattern needs to be `arn:.*`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) DomainArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) string { return v.DomainArn }).(pulumi.StringOutput)
}

// The Elasticsearch index name.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) IndexName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) string { return v.IndexName }).(pulumi.StringOutput)
}

// The Elasticsearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are `NoRotation`, `OneHour`, `OneDay`, `OneWeek`, and `OneMonth`.  The default value is `OneDay`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) IndexRotationPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *string { return v.IndexRotationPeriod }).(pulumi.StringPtrOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) ProcessingConfiguration() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput)
}

// After an initial failure to deliver to Amazon Elasticsearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *int { return v.RetryDuration }).(pulumi.IntPtrOutput)
}

// The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The pattern needs to be `arn:.*`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

// The Elasticsearch type name with maximum length of 100 characters.
func (o FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfiguration) *string { return v.TypeName }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationArgs struct {
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval *int `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize *int `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs `pulumi:"cloudwatchLoggingOptions"`
	// The ARN of the Amazon ES domain.  The IAM role must have permission for `DescribeElasticsearchDomain`, `DescribeElasticsearchDomains`, and `DescribeElasticsearchDomainConfig` after assuming `RoleARN`.  The pattern needs to be `arn:.*`.
	DomainArn string `pulumi:"domainArn"`
	// The Elasticsearch index name.
	IndexName string `pulumi:"indexName"`
	// The Elasticsearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are `NoRotation`, `OneHour`, `OneDay`, `OneWeek`, and `OneMonth`.  The default value is `OneDay`.
	IndexRotationPeriod *string `pulumi:"indexRotationPeriod"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration *FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs `pulumi:"processingConfiguration"`
	// After an initial failure to deliver to Amazon Elasticsearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
	RetryDuration *int `pulumi:"retryDuration"`
	// The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The pattern needs to be `arn:.*`.
	RoleArn string `pulumi:"roleArn"`
	// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
	S3BackupMode *string `pulumi:"s3BackupMode"`
	// The Elasticsearch type name with maximum length of 100 characters.
	TypeName *string `pulumi:"typeName"`
}

type FirehoseDeliveryStreamElasticsearchConfigurationArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationArgsOutput() FirehoseDeliveryStreamElasticsearchConfigurationArgsOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationArgsOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationArgsOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationArgsArgs struct {
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval pulumi.IntPtrInput `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize pulumi.IntPtrInput `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The ARN of the Amazon ES domain.  The IAM role must have permission for `DescribeElasticsearchDomain`, `DescribeElasticsearchDomains`, and `DescribeElasticsearchDomainConfig` after assuming `RoleARN`.  The pattern needs to be `arn:.*`.
	DomainArn pulumi.StringInput `pulumi:"domainArn"`
	// The Elasticsearch index name.
	IndexName pulumi.StringInput `pulumi:"indexName"`
	// The Elasticsearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are `NoRotation`, `OneHour`, `OneDay`, `OneWeek`, and `OneMonth`.  The default value is `OneDay`.
	IndexRotationPeriod pulumi.StringPtrInput `pulumi:"indexRotationPeriod"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrInput `pulumi:"processingConfiguration"`
	// After an initial failure to deliver to Amazon Elasticsearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
	RetryDuration pulumi.IntPtrInput `pulumi:"retryDuration"`
	// The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The pattern needs to be `arn:.*`.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
	S3BackupMode pulumi.StringPtrInput `pulumi:"s3BackupMode"`
	// The Elasticsearch type name with maximum length of 100 characters.
	TypeName pulumi.StringPtrInput `pulumi:"typeName"`
}

func (FirehoseDeliveryStreamElasticsearchConfigurationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationArgsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationArgsOutput() FirehoseDeliveryStreamElasticsearchConfigurationArgsOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationArgsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationArgsOutput)
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationArgsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationArgsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationArgsOutput).ToFirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput
}

type firehoseDeliveryStreamElasticsearchConfigurationArgsPtrType FirehoseDeliveryStreamElasticsearchConfigurationArgsArgs

func FirehoseDeliveryStreamElasticsearchConfigurationArgsPtr(v *FirehoseDeliveryStreamElasticsearchConfigurationArgsArgs) FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrInput {
	return (*firehoseDeliveryStreamElasticsearchConfigurationArgsPtrType)(v)
}

func (*firehoseDeliveryStreamElasticsearchConfigurationArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfigurationArgs)(nil)).Elem()
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationArgsPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationArgsPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationArgsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationArgsOutput() FirehoseDeliveryStreamElasticsearchConfigurationArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationArgsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationArgsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput {
	return o.ToFirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationArgsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationArgs) *FirehoseDeliveryStreamElasticsearchConfigurationArgs {
		return &v
	}).(FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput)
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamElasticsearchConfigurationArgsOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationArgs) *int { return v.BufferingInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamElasticsearchConfigurationArgsOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationArgs) *int { return v.BufferingSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamElasticsearchConfigurationArgsOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationArgs) *FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutput)
}

// The ARN of the Amazon ES domain.  The IAM role must have permission for `DescribeElasticsearchDomain`, `DescribeElasticsearchDomains`, and `DescribeElasticsearchDomainConfig` after assuming `RoleARN`.  The pattern needs to be `arn:.*`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationArgsOutput) DomainArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationArgs) string { return v.DomainArn }).(pulumi.StringOutput)
}

// The Elasticsearch index name.
func (o FirehoseDeliveryStreamElasticsearchConfigurationArgsOutput) IndexName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationArgs) string { return v.IndexName }).(pulumi.StringOutput)
}

// The Elasticsearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are `NoRotation`, `OneHour`, `OneDay`, `OneWeek`, and `OneMonth`.  The default value is `OneDay`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationArgsOutput) IndexRotationPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationArgs) *string { return v.IndexRotationPeriod }).(pulumi.StringPtrOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamElasticsearchConfigurationArgsOutput) ProcessingConfiguration() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationArgs) *FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutput)
}

// After an initial failure to deliver to Amazon Elasticsearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
func (o FirehoseDeliveryStreamElasticsearchConfigurationArgsOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationArgs) *int { return v.RetryDuration }).(pulumi.IntPtrOutput)
}

// The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The pattern needs to be `arn:.*`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationArgsOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationArgs) string { return v.RoleArn }).(pulumi.StringOutput)
}

// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationArgsOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationArgs) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

// The Elasticsearch type name with maximum length of 100 characters.
func (o FirehoseDeliveryStreamElasticsearchConfigurationArgsOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationArgs) *string { return v.TypeName }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfigurationArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput) Elem() FirehoseDeliveryStreamElasticsearchConfigurationArgsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationArgs) FirehoseDeliveryStreamElasticsearchConfigurationArgs {
		return *v
	}).(FirehoseDeliveryStreamElasticsearchConfigurationArgsOutput)
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationArgs) *int { return v.BufferingInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationArgs) *int { return v.BufferingSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationArgs) *FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutput)
}

// The ARN of the Amazon ES domain.  The IAM role must have permission for `DescribeElasticsearchDomain`, `DescribeElasticsearchDomains`, and `DescribeElasticsearchDomainConfig` after assuming `RoleARN`.  The pattern needs to be `arn:.*`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput) DomainArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationArgs) string { return v.DomainArn }).(pulumi.StringOutput)
}

// The Elasticsearch index name.
func (o FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput) IndexName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationArgs) string { return v.IndexName }).(pulumi.StringOutput)
}

// The Elasticsearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are `NoRotation`, `OneHour`, `OneDay`, `OneWeek`, and `OneMonth`.  The default value is `OneDay`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput) IndexRotationPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationArgs) *string { return v.IndexRotationPeriod }).(pulumi.StringPtrOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput) ProcessingConfiguration() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationArgs) *FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutput)
}

// After an initial failure to deliver to Amazon Elasticsearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
func (o FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationArgs) *int { return v.RetryDuration }).(pulumi.IntPtrOutput)
}

// The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The pattern needs to be `arn:.*`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationArgs) string { return v.RoleArn }).(pulumi.StringOutput)
}

// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationArgs) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

// The Elasticsearch type name with maximum length of 100 characters.
func (o FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationArgs) *string { return v.TypeName }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

type FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

type FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsOutput() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsOutput() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsOutput)
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsOutput).ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutput
}

type firehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrType FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsArgs

func FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtr(v *FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsArgs) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrInput {
	return (*firehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrType)(v)
}

func (*firehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsOutput() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o.ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs) *FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs {
		return &v
	}).(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutput) Elem() FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs {
		return *v
	}).(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgs) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration struct {
	// Enables or disables data processing.
	Enabled *bool `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors []FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor `pulumi:"processors"`
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs struct {
	// Enables or disables data processing.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayInput `pulumi:"processors"`
}

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput)
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput).ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput
}

type firehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrType FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs

func FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtr(v *FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrInput {
	return (*firehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration) *FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration {
		return &v
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput) Processors() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration) []FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput) Elem() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration {
		return *v
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput) Processors() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration) []FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs struct {
	// Enables or disables data processing.
	Enabled *bool `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors []FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs `pulumi:"processors"`
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsArgs struct {
	// Enables or disables data processing.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArrayInput `pulumi:"processors"`
}

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsOutput)
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsOutput).ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutput
}

type firehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrType FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsArgs

func FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtr(v *FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsArgs) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrInput {
	return (*firehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrType)(v)
}

func (*firehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs)(nil)).Elem()
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutput {
	return o.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs) *FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs {
		return &v
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsOutput) Processors() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs) []FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs {
		return v.Processors
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArrayOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutput) Elem() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs {
		return *v
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutput) Processors() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgs) []FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs {
		return v.Processors
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArrayOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor struct {
	// Array of processor parameters. More details are given below
	Parameters []FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type string `pulumi:"type"`
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs struct {
	// Array of processor parameters. More details are given below
	Parameters FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayInput `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type pulumi.StringInput `pulumi:"type"`
}

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArray []FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorInput

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput {
	return o
}

// Array of processor parameters. More details are given below
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput) Parameters() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor) []FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter {
		return v.Parameters
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput)
}

// The type of processor. Valid Values: `Lambda`
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor {
		return vs[0].([]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor)[vs[1].(int)]
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs struct {
	// Array of processor parameters. More details are given below
	Parameters []FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type string `pulumi:"type"`
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArgs struct {
	// Array of processor parameters. More details are given below
	Parameters FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArrayInput `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type pulumi.StringInput `pulumi:"type"`
}

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArrayOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArrayOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArrayOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArrayOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArray []FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsInput

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArray) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArrayOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArrayOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArray) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArrayOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsOutput {
	return o
}

// Array of processor parameters. More details are given below
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsOutput) Parameters() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs) []FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs {
		return v.Parameters
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput)
}

// The type of processor. Valid Values: `Lambda`
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArrayOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArrayOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArrayOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs {
		return vs[0].([]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgs)[vs[1].(int)]
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName string `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue string `pulumi:"parameterValue"`
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName pulumi.StringInput `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArray []FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterInput

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput {
	return o
}

// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter) string {
		return v.ParameterName
	}).(pulumi.StringOutput)
}

// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter) string {
		return v.ParameterValue
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter {
		return vs[0].([]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter)[vs[1].(int)]
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName string `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue string `pulumi:"parameterValue"`
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArgs struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName pulumi.StringInput `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArrayOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArray []FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsInput

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArray) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArray) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsOutput {
	return o
}

// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs) string {
		return v.ParameterName
	}).(pulumi.StringOutput)
}

// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs) string {
		return v.ParameterValue
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput() FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs {
		return vs[0].([]FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgs)[vs[1].(int)]
	}).(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationState struct {
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval *int `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize *int `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The ARN of the Amazon ES domain.  The IAM role must have permission for `DescribeElasticsearchDomain`, `DescribeElasticsearchDomains`, and `DescribeElasticsearchDomainConfig` after assuming `RoleARN`.  The pattern needs to be `arn:.*`.
	DomainArn string `pulumi:"domainArn"`
	// The Elasticsearch index name.
	IndexName string `pulumi:"indexName"`
	// The Elasticsearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are `NoRotation`, `OneHour`, `OneDay`, `OneWeek`, and `OneMonth`.  The default value is `OneDay`.
	IndexRotationPeriod *string `pulumi:"indexRotationPeriod"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration *FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfiguration `pulumi:"processingConfiguration"`
	// After an initial failure to deliver to Amazon Elasticsearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
	RetryDuration *int `pulumi:"retryDuration"`
	// The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The pattern needs to be `arn:.*`.
	RoleArn string `pulumi:"roleArn"`
	// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
	S3BackupMode *string `pulumi:"s3BackupMode"`
	// The Elasticsearch type name with maximum length of 100 characters.
	TypeName *string `pulumi:"typeName"`
}

type FirehoseDeliveryStreamElasticsearchConfigurationStateInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationStateOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationStateOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationStateArgs struct {
	// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
	BufferingInterval pulumi.IntPtrInput `pulumi:"bufferingInterval"`
	// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
	BufferingSize pulumi.IntPtrInput `pulumi:"bufferingSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The ARN of the Amazon ES domain.  The IAM role must have permission for `DescribeElasticsearchDomain`, `DescribeElasticsearchDomains`, and `DescribeElasticsearchDomainConfig` after assuming `RoleARN`.  The pattern needs to be `arn:.*`.
	DomainArn pulumi.StringInput `pulumi:"domainArn"`
	// The Elasticsearch index name.
	IndexName pulumi.StringInput `pulumi:"indexName"`
	// The Elasticsearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are `NoRotation`, `OneHour`, `OneDay`, `OneWeek`, and `OneMonth`.  The default value is `OneDay`.
	IndexRotationPeriod pulumi.StringPtrInput `pulumi:"indexRotationPeriod"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// After an initial failure to deliver to Amazon Elasticsearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
	RetryDuration pulumi.IntPtrInput `pulumi:"retryDuration"`
	// The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The pattern needs to be `arn:.*`.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
	S3BackupMode pulumi.StringPtrInput `pulumi:"s3BackupMode"`
	// The Elasticsearch type name with maximum length of 100 characters.
	TypeName pulumi.StringPtrInput `pulumi:"typeName"`
}

func (FirehoseDeliveryStreamElasticsearchConfigurationStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationState)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationStateArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationStateOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationStateOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationStateArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationStateOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationStateOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationStateOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationState)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationStateOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationStateOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationStateOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationStateOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateOutput {
	return o
}

// Buffer incoming data for the specified period of time, in seconds between 60 to 900, before delivering it to the destination.  The default value is 300s.
func (o FirehoseDeliveryStreamElasticsearchConfigurationStateOutput) BufferingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationState) *int { return v.BufferingInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
func (o FirehoseDeliveryStreamElasticsearchConfigurationStateOutput) BufferingSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationState) *int { return v.BufferingSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamElasticsearchConfigurationStateOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationState) *FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutput)
}

// The ARN of the Amazon ES domain.  The IAM role must have permission for `DescribeElasticsearchDomain`, `DescribeElasticsearchDomains`, and `DescribeElasticsearchDomainConfig` after assuming `RoleARN`.  The pattern needs to be `arn:.*`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationStateOutput) DomainArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationState) string { return v.DomainArn }).(pulumi.StringOutput)
}

// The Elasticsearch index name.
func (o FirehoseDeliveryStreamElasticsearchConfigurationStateOutput) IndexName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationState) string { return v.IndexName }).(pulumi.StringOutput)
}

// The Elasticsearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are `NoRotation`, `OneHour`, `OneDay`, `OneWeek`, and `OneMonth`.  The default value is `OneDay`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationStateOutput) IndexRotationPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationState) *string { return v.IndexRotationPeriod }).(pulumi.StringPtrOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamElasticsearchConfigurationStateOutput) ProcessingConfiguration() FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationState) *FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutput)
}

// After an initial failure to deliver to Amazon Elasticsearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
func (o FirehoseDeliveryStreamElasticsearchConfigurationStateOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationState) *int { return v.RetryDuration }).(pulumi.IntPtrOutput)
}

// The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The pattern needs to be `arn:.*`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationStateOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationState) string { return v.RoleArn }).(pulumi.StringOutput)
}

// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationStateOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationState) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

// The Elasticsearch type name with maximum length of 100 characters.
func (o FirehoseDeliveryStreamElasticsearchConfigurationStateOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationState) *string { return v.TypeName }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

type FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrInput {
	return (*firehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptions) *FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptions) FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptions {
		return *v
	}).(FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfiguration struct {
	// Enables or disables data processing.
	Enabled *bool `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors []FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessor `pulumi:"processors"`
}

type FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationArgs struct {
	// Enables or disables data processing.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArrayInput `pulumi:"processors"`
}

func (FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationOutput)
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationOutput).ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutput
}

type firehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrType FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationArgs

func FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtr(v *FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationArgs) FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrInput {
	return (*firehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrType) ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfiguration) *FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfiguration {
		return &v
	}).(FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfiguration) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationOutput) Processors() FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfiguration) []FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutput) Elem() FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfiguration) FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfiguration {
		return *v
	}).(FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfiguration) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutput) Processors() FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfiguration) []FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessor struct {
	// Array of processor parameters. More details are given below
	Parameters []FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameter `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type string `pulumi:"type"`
}

type FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArgs struct {
	// Array of processor parameters. More details are given below
	Parameters FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArrayInput `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type pulumi.StringInput `pulumi:"type"`
}

func (FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArrayOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArrayOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArrayOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArray []FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorInput

func (FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArrayOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorOutput {
	return o
}

// Array of processor parameters. More details are given below
func (o FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorOutput) Parameters() FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessor) []FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameter {
		return v.Parameters
	}).(FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArrayOutput)
}

// The type of processor. Valid Values: `Lambda`
func (o FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessor) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessor {
		return vs[0].([]FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessor)[vs[1].(int)]
	}).(FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameter struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName string `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue string `pulumi:"parameterValue"`
}

type FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArgs struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName pulumi.StringInput `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArrayOutput
	ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArrayOutput
}

type FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArray []FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterInput

func (FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArrayOutput {
	return i.ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArrayOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterOutput {
	return o
}

// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
func (o FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameter) string {
		return v.ParameterName
	}).(pulumi.StringOutput)
}

// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
func (o FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameter) string {
		return v.ParameterValue
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameter {
		return vs[0].([]FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameter)[vs[1].(int)]
	}).(FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterOutput)
}

type FirehoseDeliveryStreamExtendedS3Configuration struct {
	// The ARN of the S3 bucket
	BucketArn string `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval *int `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize *int `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat *string `pulumi:"compressionFormat"`
	// Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. More details given below.
	DataFormatConversionConfiguration *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration `pulumi:"dataFormatConversionConfiguration"`
	// Prefix added to failed records before writing them to S3. This prefix appears immediately following the bucket name.
	ErrorOutputPrefix *string `pulumi:"errorOutputPrefix"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix *string `pulumi:"prefix"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration *FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration `pulumi:"processingConfiguration"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn string `pulumi:"roleArn"`
	// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
	S3BackupConfiguration *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration `pulumi:"s3BackupConfiguration"`
	// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
	S3BackupMode *string `pulumi:"s3BackupMode"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationArgs struct {
	// The ARN of the S3 bucket
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval pulumi.IntPtrInput `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize pulumi.IntPtrInput `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsInput `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat pulumi.StringPtrInput `pulumi:"compressionFormat"`
	// Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. More details given below.
	DataFormatConversionConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrInput `pulumi:"dataFormatConversionConfiguration"`
	// Prefix added to failed records before writing them to S3. This prefix appears immediately following the bucket name.
	ErrorOutputPrefix pulumi.StringPtrInput `pulumi:"errorOutputPrefix"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
	S3BackupConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrInput `pulumi:"s3BackupConfiguration"`
	// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
	S3BackupMode pulumi.StringPtrInput `pulumi:"s3BackupMode"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3Configuration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationPtrType FirehoseDeliveryStreamExtendedS3ConfigurationArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3Configuration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3Configuration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *FirehoseDeliveryStreamExtendedS3Configuration {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *int { return v.BufferInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *int { return v.BufferSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.CompressionFormat }).(pulumi.StringPtrOutput)
}

// Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. More details given below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) DataFormatConversionConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration {
		return v.DataFormatConversionConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput)
}

// Prefix added to failed records before writing them to S3. This prefix appears immediately following the bucket name.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.ErrorOutputPrefix }).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) ProcessingConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) S3BackupConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration {
		return v.S3BackupConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput)
}

// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3Configuration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3Configuration) FirehoseDeliveryStreamExtendedS3Configuration {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *int { return v.BufferInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *int { return v.BufferSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.CompressionFormat }).(pulumi.StringPtrOutput)
}

// Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. More details given below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) DataFormatConversionConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration {
		return v.DataFormatConversionConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput)
}

// Prefix added to failed records before writing them to S3. This prefix appears immediately following the bucket name.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.ErrorOutputPrefix }).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) ProcessingConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) S3BackupConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration {
		return v.S3BackupConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput)
}

// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationArgs struct {
	// The ARN of the S3 bucket
	BucketArn string `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval *int `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize *int `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat *string `pulumi:"compressionFormat"`
	// Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. More details given below.
	DataFormatConversionConfiguration *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs `pulumi:"dataFormatConversionConfiguration"`
	// Prefix added to failed records before writing them to S3. This prefix appears immediately following the bucket name.
	ErrorOutputPrefix *string `pulumi:"errorOutputPrefix"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix *string `pulumi:"prefix"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration *FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs `pulumi:"processingConfiguration"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn string `pulumi:"roleArn"`
	// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
	S3BackupConfiguration *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs `pulumi:"s3BackupConfiguration"`
	// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
	S3BackupMode *string `pulumi:"s3BackupMode"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationArgsOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationArgsArgs struct {
	// The ARN of the S3 bucket
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval pulumi.IntPtrInput `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize pulumi.IntPtrInput `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat pulumi.StringPtrInput `pulumi:"compressionFormat"`
	// Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. More details given below.
	DataFormatConversionConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrInput `pulumi:"dataFormatConversionConfiguration"`
	// Prefix added to failed records before writing them to S3. This prefix appears immediately following the bucket name.
	ErrorOutputPrefix pulumi.StringPtrInput `pulumi:"errorOutputPrefix"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrInput `pulumi:"processingConfiguration"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
	S3BackupConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrInput `pulumi:"s3BackupConfiguration"`
	// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
	S3BackupMode pulumi.StringPtrInput `pulumi:"s3BackupMode"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationArgsPtrType FirehoseDeliveryStreamExtendedS3ConfigurationArgsArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationArgsArgs) FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationArgsPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationArgs)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationArgsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationArgsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationArgs) *FirehoseDeliveryStreamExtendedS3ConfigurationArgs {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationArgs) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationArgs) *int { return v.BufferInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationArgs) *int { return v.BufferSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationArgs) *FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationArgs) *string { return v.CompressionFormat }).(pulumi.StringPtrOutput)
}

// Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. More details given below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput) DataFormatConversionConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationArgs) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs {
		return v.DataFormatConversionConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput)
}

// Prefix added to failed records before writing them to S3. This prefix appears immediately following the bucket name.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationArgs) *string { return v.ErrorOutputPrefix }).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationArgs) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationArgs) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput) ProcessingConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationArgs) *FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationArgs) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput) S3BackupConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationArgs) *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs {
		return v.S3BackupConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput)
}

// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationArgs) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationArgs {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationArgs) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationArgs) *int { return v.BufferInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationArgs) *int { return v.BufferSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationArgs) *FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationArgs) *string { return v.CompressionFormat }).(pulumi.StringPtrOutput)
}

// Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. More details given below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput) DataFormatConversionConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationArgs) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs {
		return v.DataFormatConversionConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput)
}

// Prefix added to failed records before writing them to S3. This prefix appears immediately following the bucket name.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationArgs) *string { return v.ErrorOutputPrefix }).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationArgs) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationArgs) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput) ProcessingConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationArgs) *FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationArgs) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput) S3BackupConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationArgs) *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs {
		return v.S3BackupConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput)
}

// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationArgs) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrType FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsArgs) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs) *FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgs) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration struct {
	// Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
	Enabled *bool `pulumi:"enabled"`
	// Nested argument that specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. More details below.
	InputFormatConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration `pulumi:"inputFormatConfiguration"`
	// Nested argument that specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. More details below.
	OutputFormatConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration `pulumi:"outputFormatConfiguration"`
	// Nested argument that specifies the AWS Glue Data Catalog table that contains the column information. More details below.
	SchemaConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration `pulumi:"schemaConfiguration"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs struct {
	// Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Nested argument that specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. More details below.
	InputFormatConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationInput `pulumi:"inputFormatConfiguration"`
	// Nested argument that specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. More details below.
	OutputFormatConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationInput `pulumi:"outputFormatConfiguration"`
	// Nested argument that specifies the AWS Glue Data Catalog table that contains the column information. More details below.
	SchemaConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationInput `pulumi:"schemaConfiguration"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrType FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput)
}

// Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Nested argument that specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput) InputFormatConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration {
		return v.InputFormatConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput)
}

// Nested argument that specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput) OutputFormatConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration {
		return v.OutputFormatConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput)
}

// Nested argument that specifies the AWS Glue Data Catalog table that contains the column information. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput) SchemaConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration {
		return v.SchemaConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput)
}

// Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Nested argument that specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput) InputFormatConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration {
		return v.InputFormatConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput)
}

// Nested argument that specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput) OutputFormatConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration {
		return v.OutputFormatConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput)
}

// Nested argument that specifies the AWS Glue Data Catalog table that contains the column information. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput) SchemaConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration {
		return v.SchemaConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs struct {
	// Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
	Enabled *bool `pulumi:"enabled"`
	// Nested argument that specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. More details below.
	InputFormatConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs `pulumi:"inputFormatConfiguration"`
	// Nested argument that specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. More details below.
	OutputFormatConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs `pulumi:"outputFormatConfiguration"`
	// Nested argument that specifies the AWS Glue Data Catalog table that contains the column information. More details below.
	SchemaConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs `pulumi:"schemaConfiguration"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsArgs struct {
	// Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Nested argument that specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. More details below.
	InputFormatConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgsInput `pulumi:"inputFormatConfiguration"`
	// Nested argument that specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. More details below.
	OutputFormatConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgsInput `pulumi:"outputFormatConfiguration"`
	// Nested argument that specifies the AWS Glue Data Catalog table that contains the column information. More details below.
	SchemaConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsInput `pulumi:"schemaConfiguration"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrType FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput)
}

// Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Nested argument that specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsOutput) InputFormatConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgsOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs {
		return v.InputFormatConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgsOutput)
}

// Nested argument that specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsOutput) OutputFormatConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgsOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs {
		return v.OutputFormatConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgsOutput)
}

// Nested argument that specifies the AWS Glue Data Catalog table that contains the column information. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsOutput) SchemaConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs {
		return v.SchemaConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsOutput)
}

// Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Nested argument that specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput) InputFormatConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgsOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs {
		return v.InputFormatConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgsOutput)
}

// Nested argument that specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput) OutputFormatConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgsOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs {
		return v.OutputFormatConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgsOutput)
}

// Nested argument that specifies the AWS Glue Data Catalog table that contains the column information. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput) SchemaConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs {
		return v.SchemaConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration struct {
	// Nested argument that specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe or the OpenX JSON SerDe. More details below.
	Deserializer FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer `pulumi:"deserializer"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs struct {
	// Nested argument that specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe or the OpenX JSON SerDe. More details below.
	Deserializer FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerInput `pulumi:"deserializer"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput {
	return o
}

// Nested argument that specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe or the OpenX JSON SerDe. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput) Deserializer() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer {
		return v.Deserializer
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs struct {
	// Nested argument that specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe or the OpenX JSON SerDe. More details below.
	Deserializer FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs `pulumi:"deserializer"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgsOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgsOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgsOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgsArgs struct {
	// Nested argument that specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe or the OpenX JSON SerDe. More details below.
	Deserializer FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgsInput `pulumi:"deserializer"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgsOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgsOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgsOutput {
	return o
}

// Nested argument that specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe or the OpenX JSON SerDe. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgsOutput) Deserializer() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgsOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs {
		return v.Deserializer
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgsOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer struct {
	// Nested argument that specifies the native Hive / HCatalog JsonSerDe. More details below.
	HiveJsonSerDe *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe `pulumi:"hiveJsonSerDe"`
	// Nested argument that specifies the OpenX SerDe. More details below.
	OpenXJsonSerDe *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe `pulumi:"openXJsonSerDe"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs struct {
	// Nested argument that specifies the native Hive / HCatalog JsonSerDe. More details below.
	HiveJsonSerDe FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrInput `pulumi:"hiveJsonSerDe"`
	// Nested argument that specifies the OpenX SerDe. More details below.
	OpenXJsonSerDe FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrInput `pulumi:"openXJsonSerDe"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput {
	return o
}

// Nested argument that specifies the native Hive / HCatalog JsonSerDe. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput) HiveJsonSerDe() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe {
		return v.HiveJsonSerDe
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput)
}

// Nested argument that specifies the OpenX SerDe. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput) OpenXJsonSerDe() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe {
		return v.OpenXJsonSerDe
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs struct {
	// Nested argument that specifies the native Hive / HCatalog JsonSerDe. More details below.
	HiveJsonSerDe *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs `pulumi:"hiveJsonSerDe"`
	// Nested argument that specifies the OpenX SerDe. More details below.
	OpenXJsonSerDe *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs `pulumi:"openXJsonSerDe"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgsOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgsOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgsOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgsArgs struct {
	// Nested argument that specifies the native Hive / HCatalog JsonSerDe. More details below.
	HiveJsonSerDe FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrInput `pulumi:"hiveJsonSerDe"`
	// Nested argument that specifies the OpenX SerDe. More details below.
	OpenXJsonSerDe FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrInput `pulumi:"openXJsonSerDe"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgsOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgsOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgsOutput {
	return o
}

// Nested argument that specifies the native Hive / HCatalog JsonSerDe. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgsOutput) HiveJsonSerDe() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs {
		return v.HiveJsonSerDe
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutput)
}

// Nested argument that specifies the OpenX SerDe. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgsOutput) OpenXJsonSerDe() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs {
		return v.OpenXJsonSerDe
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe struct {
	// A list of how you want Kinesis Data Firehose to parse the date and time stamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see [Class DateTimeFormat](https://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html). You can also use the special value millis to parse time stamps in epoch milliseconds. If you don't specify a format, Kinesis Data Firehose uses java.sql.Timestamp::valueOf by default.
	TimestampFormats []string `pulumi:"timestampFormats"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs struct {
	// A list of how you want Kinesis Data Firehose to parse the date and time stamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see [Class DateTimeFormat](https://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html). You can also use the special value millis to parse time stamps in epoch milliseconds. If you don't specify a format, Kinesis Data Firehose uses java.sql.Timestamp::valueOf by default.
	TimestampFormats pulumi.StringArrayInput `pulumi:"timestampFormats"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrType FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput)
}

// A list of how you want Kinesis Data Firehose to parse the date and time stamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see [Class DateTimeFormat](https://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html). You can also use the special value millis to parse time stamps in epoch milliseconds. If you don't specify a format, Kinesis Data Firehose uses java.sql.Timestamp::valueOf by default.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput) TimestampFormats() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe) []string {
		return v.TimestampFormats
	}).(pulumi.StringArrayOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput)
}

// A list of how you want Kinesis Data Firehose to parse the date and time stamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see [Class DateTimeFormat](https://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html). You can also use the special value millis to parse time stamps in epoch milliseconds. If you don't specify a format, Kinesis Data Firehose uses java.sql.Timestamp::valueOf by default.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput) TimestampFormats() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe) []string {
		return v.TimestampFormats
	}).(pulumi.StringArrayOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs struct {
	// A list of how you want Kinesis Data Firehose to parse the date and time stamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see [Class DateTimeFormat](https://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html). You can also use the special value millis to parse time stamps in epoch milliseconds. If you don't specify a format, Kinesis Data Firehose uses java.sql.Timestamp::valueOf by default.
	TimestampFormats []string `pulumi:"timestampFormats"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsArgs struct {
	// A list of how you want Kinesis Data Firehose to parse the date and time stamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see [Class DateTimeFormat](https://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html). You can also use the special value millis to parse time stamps in epoch milliseconds. If you don't specify a format, Kinesis Data Firehose uses java.sql.Timestamp::valueOf by default.
	TimestampFormats pulumi.StringArrayInput `pulumi:"timestampFormats"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrType FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutput)
}

// A list of how you want Kinesis Data Firehose to parse the date and time stamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see [Class DateTimeFormat](https://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html). You can also use the special value millis to parse time stamps in epoch milliseconds. If you don't specify a format, Kinesis Data Firehose uses java.sql.Timestamp::valueOf by default.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsOutput) TimestampFormats() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs) []string {
		return v.TimestampFormats
	}).(pulumi.StringArrayOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsOutput)
}

// A list of how you want Kinesis Data Firehose to parse the date and time stamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see [Class DateTimeFormat](https://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html). You can also use the special value millis to parse time stamps in epoch milliseconds. If you don't specify a format, Kinesis Data Firehose uses java.sql.Timestamp::valueOf by default.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutput) TimestampFormats() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs) []string {
		return v.TimestampFormats
	}).(pulumi.StringArrayOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe struct {
	// When set to true, which is the default, Kinesis Data Firehose converts JSON keys to lowercase before deserializing them.
	CaseInsensitive *bool `pulumi:"caseInsensitive"`
	// A map of column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, timestamp is a Hive keyword. If you have a JSON key named timestamp, set this parameter to `{ ts = "timestamp" }` to map this key to a column named ts.
	ColumnToJsonKeyMappings map[string]string `pulumi:"columnToJsonKeyMappings"`
	// When set to `true`, specifies that the names of the keys include dots and that you want Kinesis Data Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is "a.b", you can define the column name to be "aB" when using this option. Defaults to `false`.
	ConvertDotsInJsonKeysToUnderscores *bool `pulumi:"convertDotsInJsonKeysToUnderscores"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs struct {
	// When set to true, which is the default, Kinesis Data Firehose converts JSON keys to lowercase before deserializing them.
	CaseInsensitive pulumi.BoolPtrInput `pulumi:"caseInsensitive"`
	// A map of column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, timestamp is a Hive keyword. If you have a JSON key named timestamp, set this parameter to `{ ts = "timestamp" }` to map this key to a column named ts.
	ColumnToJsonKeyMappings pulumi.StringMapInput `pulumi:"columnToJsonKeyMappings"`
	// When set to `true`, specifies that the names of the keys include dots and that you want Kinesis Data Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is "a.b", you can define the column name to be "aB" when using this option. Defaults to `false`.
	ConvertDotsInJsonKeysToUnderscores pulumi.BoolPtrInput `pulumi:"convertDotsInJsonKeysToUnderscores"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrType FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput)
}

// When set to true, which is the default, Kinesis Data Firehose converts JSON keys to lowercase before deserializing them.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) CaseInsensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) *bool {
		return v.CaseInsensitive
	}).(pulumi.BoolPtrOutput)
}

// A map of column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, timestamp is a Hive keyword. If you have a JSON key named timestamp, set this parameter to `{ ts = "timestamp" }` to map this key to a column named ts.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) ColumnToJsonKeyMappings() pulumi.StringMapOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) map[string]string {
		return v.ColumnToJsonKeyMappings
	}).(pulumi.StringMapOutput)
}

// When set to `true`, specifies that the names of the keys include dots and that you want Kinesis Data Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is "a.b", you can define the column name to be "aB" when using this option. Defaults to `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) ConvertDotsInJsonKeysToUnderscores() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) *bool {
		return v.ConvertDotsInJsonKeysToUnderscores
	}).(pulumi.BoolPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput)
}

// When set to true, which is the default, Kinesis Data Firehose converts JSON keys to lowercase before deserializing them.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput) CaseInsensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) *bool {
		return v.CaseInsensitive
	}).(pulumi.BoolPtrOutput)
}

// A map of column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, timestamp is a Hive keyword. If you have a JSON key named timestamp, set this parameter to `{ ts = "timestamp" }` to map this key to a column named ts.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput) ColumnToJsonKeyMappings() pulumi.StringMapOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) map[string]string {
		return v.ColumnToJsonKeyMappings
	}).(pulumi.StringMapOutput)
}

// When set to `true`, specifies that the names of the keys include dots and that you want Kinesis Data Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is "a.b", you can define the column name to be "aB" when using this option. Defaults to `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput) ConvertDotsInJsonKeysToUnderscores() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) *bool {
		return v.ConvertDotsInJsonKeysToUnderscores
	}).(pulumi.BoolPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs struct {
	// When set to true, which is the default, Kinesis Data Firehose converts JSON keys to lowercase before deserializing them.
	CaseInsensitive *bool `pulumi:"caseInsensitive"`
	// A map of column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, timestamp is a Hive keyword. If you have a JSON key named timestamp, set this parameter to `{ ts = "timestamp" }` to map this key to a column named ts.
	ColumnToJsonKeyMappings map[string]string `pulumi:"columnToJsonKeyMappings"`
	// When set to `true`, specifies that the names of the keys include dots and that you want Kinesis Data Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is "a.b", you can define the column name to be "aB" when using this option. Defaults to `false`.
	ConvertDotsInJsonKeysToUnderscores *bool `pulumi:"convertDotsInJsonKeysToUnderscores"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsArgs struct {
	// When set to true, which is the default, Kinesis Data Firehose converts JSON keys to lowercase before deserializing them.
	CaseInsensitive pulumi.BoolPtrInput `pulumi:"caseInsensitive"`
	// A map of column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, timestamp is a Hive keyword. If you have a JSON key named timestamp, set this parameter to `{ ts = "timestamp" }` to map this key to a column named ts.
	ColumnToJsonKeyMappings pulumi.StringMapInput `pulumi:"columnToJsonKeyMappings"`
	// When set to `true`, specifies that the names of the keys include dots and that you want Kinesis Data Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is "a.b", you can define the column name to be "aB" when using this option. Defaults to `false`.
	ConvertDotsInJsonKeysToUnderscores pulumi.BoolPtrInput `pulumi:"convertDotsInJsonKeysToUnderscores"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrType FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutput)
}

// When set to true, which is the default, Kinesis Data Firehose converts JSON keys to lowercase before deserializing them.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsOutput) CaseInsensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) *bool {
		return v.CaseInsensitive
	}).(pulumi.BoolPtrOutput)
}

// A map of column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, timestamp is a Hive keyword. If you have a JSON key named timestamp, set this parameter to `{ ts = "timestamp" }` to map this key to a column named ts.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsOutput) ColumnToJsonKeyMappings() pulumi.StringMapOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) map[string]string {
		return v.ColumnToJsonKeyMappings
	}).(pulumi.StringMapOutput)
}

// When set to `true`, specifies that the names of the keys include dots and that you want Kinesis Data Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is "a.b", you can define the column name to be "aB" when using this option. Defaults to `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsOutput) ConvertDotsInJsonKeysToUnderscores() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) *bool {
		return v.ConvertDotsInJsonKeysToUnderscores
	}).(pulumi.BoolPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsOutput)
}

// When set to true, which is the default, Kinesis Data Firehose converts JSON keys to lowercase before deserializing them.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutput) CaseInsensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) *bool {
		return v.CaseInsensitive
	}).(pulumi.BoolPtrOutput)
}

// A map of column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, timestamp is a Hive keyword. If you have a JSON key named timestamp, set this parameter to `{ ts = "timestamp" }` to map this key to a column named ts.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutput) ColumnToJsonKeyMappings() pulumi.StringMapOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) map[string]string {
		return v.ColumnToJsonKeyMappings
	}).(pulumi.StringMapOutput)
}

// When set to `true`, specifies that the names of the keys include dots and that you want Kinesis Data Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is "a.b", you can define the column name to be "aB" when using this option. Defaults to `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutput) ConvertDotsInJsonKeysToUnderscores() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) *bool {
		return v.ConvertDotsInJsonKeysToUnderscores
	}).(pulumi.BoolPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration struct {
	// Nested argument that specifies which serializer to use. You can choose either the ORC SerDe or the Parquet SerDe. More details below.
	Serializer FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer `pulumi:"serializer"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs struct {
	// Nested argument that specifies which serializer to use. You can choose either the ORC SerDe or the Parquet SerDe. More details below.
	Serializer FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerInput `pulumi:"serializer"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput {
	return o
}

// Nested argument that specifies which serializer to use. You can choose either the ORC SerDe or the Parquet SerDe. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput) Serializer() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer {
		return v.Serializer
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs struct {
	// Nested argument that specifies which serializer to use. You can choose either the ORC SerDe or the Parquet SerDe. More details below.
	Serializer FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs `pulumi:"serializer"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgsOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgsOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgsOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgsArgs struct {
	// Nested argument that specifies which serializer to use. You can choose either the ORC SerDe or the Parquet SerDe. More details below.
	Serializer FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgsInput `pulumi:"serializer"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgsOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgsOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgsOutput {
	return o
}

// Nested argument that specifies which serializer to use. You can choose either the ORC SerDe or the Parquet SerDe. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgsOutput) Serializer() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgsOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs {
		return v.Serializer
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgsOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer struct {
	// Nested argument that specifies converting data to the ORC format before storing it in Amazon S3. For more information, see [Apache ORC](https://orc.apache.org/docs/). More details below.
	OrcSerDe *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe `pulumi:"orcSerDe"`
	// Nested argument that specifies converting data to the Parquet format before storing it in Amazon S3. For more information, see [Apache Parquet](https://parquet.apache.org/documentation/latest/). More details below.
	ParquetSerDe *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe `pulumi:"parquetSerDe"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs struct {
	// Nested argument that specifies converting data to the ORC format before storing it in Amazon S3. For more information, see [Apache ORC](https://orc.apache.org/docs/). More details below.
	OrcSerDe FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrInput `pulumi:"orcSerDe"`
	// Nested argument that specifies converting data to the Parquet format before storing it in Amazon S3. For more information, see [Apache Parquet](https://parquet.apache.org/documentation/latest/). More details below.
	ParquetSerDe FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrInput `pulumi:"parquetSerDe"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput {
	return o
}

// Nested argument that specifies converting data to the ORC format before storing it in Amazon S3. For more information, see [Apache ORC](https://orc.apache.org/docs/). More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput) OrcSerDe() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe {
		return v.OrcSerDe
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput)
}

// Nested argument that specifies converting data to the Parquet format before storing it in Amazon S3. For more information, see [Apache Parquet](https://parquet.apache.org/documentation/latest/). More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput) ParquetSerDe() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe {
		return v.ParquetSerDe
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs struct {
	// Nested argument that specifies converting data to the ORC format before storing it in Amazon S3. For more information, see [Apache ORC](https://orc.apache.org/docs/). More details below.
	OrcSerDe *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs `pulumi:"orcSerDe"`
	// Nested argument that specifies converting data to the Parquet format before storing it in Amazon S3. For more information, see [Apache Parquet](https://parquet.apache.org/documentation/latest/). More details below.
	ParquetSerDe *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs `pulumi:"parquetSerDe"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgsOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgsOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgsOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgsArgs struct {
	// Nested argument that specifies converting data to the ORC format before storing it in Amazon S3. For more information, see [Apache ORC](https://orc.apache.org/docs/). More details below.
	OrcSerDe FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrInput `pulumi:"orcSerDe"`
	// Nested argument that specifies converting data to the Parquet format before storing it in Amazon S3. For more information, see [Apache Parquet](https://parquet.apache.org/documentation/latest/). More details below.
	ParquetSerDe FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrInput `pulumi:"parquetSerDe"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgsOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgsOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgsOutput {
	return o
}

// Nested argument that specifies converting data to the ORC format before storing it in Amazon S3. For more information, see [Apache ORC](https://orc.apache.org/docs/). More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgsOutput) OrcSerDe() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs {
		return v.OrcSerDe
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput)
}

// Nested argument that specifies converting data to the Parquet format before storing it in Amazon S3. For more information, see [Apache Parquet](https://parquet.apache.org/documentation/latest/). More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgsOutput) ParquetSerDe() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs {
		return v.ParquetSerDe
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe struct {
	// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
	BlockSizeBytes *int `pulumi:"blockSizeBytes"`
	// A list of column names for which you want Kinesis Data Firehose to create bloom filters.
	BloomFilterColumns []string `pulumi:"bloomFilterColumns"`
	// The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is `0.05`, the minimum is `0`, and the maximum is `1`.
	BloomFilterFalsePositiveProbability *float64 `pulumi:"bloomFilterFalsePositiveProbability"`
	// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
	Compression *string `pulumi:"compression"`
	// A float that represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to `1`.
	DictionaryKeyThreshold *float64 `pulumi:"dictionaryKeyThreshold"`
	// Set this to `true` to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `false`.
	EnablePadding *bool `pulumi:"enablePadding"`
	// The version of the file to write. The possible values are `V0_11` and `V0_12`. The default is `V0_12`.
	FormatVersion *string `pulumi:"formatVersion"`
	// A float between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is `0.05`, which means 5 percent of stripe size. For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task. Kinesis Data Firehose ignores this parameter when `enablePadding` is `false`.
	PaddingTolerance *float64 `pulumi:"paddingTolerance"`
	// The number of rows between index entries. The default is `10000` and the minimum is `1000`.
	RowIndexStride *int `pulumi:"rowIndexStride"`
	// The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.
	StripeSizeBytes *int `pulumi:"stripeSizeBytes"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs struct {
	// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
	BlockSizeBytes pulumi.IntPtrInput `pulumi:"blockSizeBytes"`
	// A list of column names for which you want Kinesis Data Firehose to create bloom filters.
	BloomFilterColumns pulumi.StringArrayInput `pulumi:"bloomFilterColumns"`
	// The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is `0.05`, the minimum is `0`, and the maximum is `1`.
	BloomFilterFalsePositiveProbability pulumi.Float64PtrInput `pulumi:"bloomFilterFalsePositiveProbability"`
	// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
	Compression pulumi.StringPtrInput `pulumi:"compression"`
	// A float that represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to `1`.
	DictionaryKeyThreshold pulumi.Float64PtrInput `pulumi:"dictionaryKeyThreshold"`
	// Set this to `true` to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `false`.
	EnablePadding pulumi.BoolPtrInput `pulumi:"enablePadding"`
	// The version of the file to write. The possible values are `V0_11` and `V0_12`. The default is `V0_12`.
	FormatVersion pulumi.StringPtrInput `pulumi:"formatVersion"`
	// A float between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is `0.05`, which means 5 percent of stripe size. For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task. Kinesis Data Firehose ignores this parameter when `enablePadding` is `false`.
	PaddingTolerance pulumi.Float64PtrInput `pulumi:"paddingTolerance"`
	// The number of rows between index entries. The default is `10000` and the minimum is `1000`.
	RowIndexStride pulumi.IntPtrInput `pulumi:"rowIndexStride"`
	// The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.
	StripeSizeBytes pulumi.IntPtrInput `pulumi:"stripeSizeBytes"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrType FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput)
}

// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) BlockSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *int {
		return v.BlockSizeBytes
	}).(pulumi.IntPtrOutput)
}

// A list of column names for which you want Kinesis Data Firehose to create bloom filters.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) BloomFilterColumns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) []string {
		return v.BloomFilterColumns
	}).(pulumi.StringArrayOutput)
}

// The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is `0.05`, the minimum is `0`, and the maximum is `1`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) BloomFilterFalsePositiveProbability() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *float64 {
		return v.BloomFilterFalsePositiveProbability
	}).(pulumi.Float64PtrOutput)
}

// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *string {
		return v.Compression
	}).(pulumi.StringPtrOutput)
}

// A float that represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to `1`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) DictionaryKeyThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *float64 {
		return v.DictionaryKeyThreshold
	}).(pulumi.Float64PtrOutput)
}

// Set this to `true` to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) EnablePadding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *bool {
		return v.EnablePadding
	}).(pulumi.BoolPtrOutput)
}

// The version of the file to write. The possible values are `V0_11` and `V0_12`. The default is `V0_12`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) FormatVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *string {
		return v.FormatVersion
	}).(pulumi.StringPtrOutput)
}

// A float between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is `0.05`, which means 5 percent of stripe size. For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task. Kinesis Data Firehose ignores this parameter when `enablePadding` is `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) PaddingTolerance() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *float64 {
		return v.PaddingTolerance
	}).(pulumi.Float64PtrOutput)
}

// The number of rows between index entries. The default is `10000` and the minimum is `1000`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) RowIndexStride() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *int {
		return v.RowIndexStride
	}).(pulumi.IntPtrOutput)
}

// The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) StripeSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *int {
		return v.StripeSizeBytes
	}).(pulumi.IntPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput)
}

// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) BlockSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *int {
		return v.BlockSizeBytes
	}).(pulumi.IntPtrOutput)
}

// A list of column names for which you want Kinesis Data Firehose to create bloom filters.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) BloomFilterColumns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) []string {
		return v.BloomFilterColumns
	}).(pulumi.StringArrayOutput)
}

// The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is `0.05`, the minimum is `0`, and the maximum is `1`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) BloomFilterFalsePositiveProbability() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *float64 {
		return v.BloomFilterFalsePositiveProbability
	}).(pulumi.Float64PtrOutput)
}

// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *string {
		return v.Compression
	}).(pulumi.StringPtrOutput)
}

// A float that represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to `1`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) DictionaryKeyThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *float64 {
		return v.DictionaryKeyThreshold
	}).(pulumi.Float64PtrOutput)
}

// Set this to `true` to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) EnablePadding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *bool {
		return v.EnablePadding
	}).(pulumi.BoolPtrOutput)
}

// The version of the file to write. The possible values are `V0_11` and `V0_12`. The default is `V0_12`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) FormatVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *string {
		return v.FormatVersion
	}).(pulumi.StringPtrOutput)
}

// A float between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is `0.05`, which means 5 percent of stripe size. For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task. Kinesis Data Firehose ignores this parameter when `enablePadding` is `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) PaddingTolerance() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *float64 {
		return v.PaddingTolerance
	}).(pulumi.Float64PtrOutput)
}

// The number of rows between index entries. The default is `10000` and the minimum is `1000`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) RowIndexStride() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *int {
		return v.RowIndexStride
	}).(pulumi.IntPtrOutput)
}

// The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) StripeSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *int {
		return v.StripeSizeBytes
	}).(pulumi.IntPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs struct {
	// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
	BlockSizeBytes *int `pulumi:"blockSizeBytes"`
	// A list of column names for which you want Kinesis Data Firehose to create bloom filters.
	BloomFilterColumns []string `pulumi:"bloomFilterColumns"`
	// The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is `0.05`, the minimum is `0`, and the maximum is `1`.
	BloomFilterFalsePositiveProbability *float64 `pulumi:"bloomFilterFalsePositiveProbability"`
	// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
	Compression *string `pulumi:"compression"`
	// A float that represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to `1`.
	DictionaryKeyThreshold *float64 `pulumi:"dictionaryKeyThreshold"`
	// Set this to `true` to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `false`.
	EnablePadding *bool `pulumi:"enablePadding"`
	// The version of the file to write. The possible values are `V0_11` and `V0_12`. The default is `V0_12`.
	FormatVersion *string `pulumi:"formatVersion"`
	// A float between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is `0.05`, which means 5 percent of stripe size. For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task. Kinesis Data Firehose ignores this parameter when `enablePadding` is `false`.
	PaddingTolerance *float64 `pulumi:"paddingTolerance"`
	// The number of rows between index entries. The default is `10000` and the minimum is `1000`.
	RowIndexStride *int `pulumi:"rowIndexStride"`
	// The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.
	StripeSizeBytes *int `pulumi:"stripeSizeBytes"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsArgs struct {
	// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
	BlockSizeBytes pulumi.IntPtrInput `pulumi:"blockSizeBytes"`
	// A list of column names for which you want Kinesis Data Firehose to create bloom filters.
	BloomFilterColumns pulumi.StringArrayInput `pulumi:"bloomFilterColumns"`
	// The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is `0.05`, the minimum is `0`, and the maximum is `1`.
	BloomFilterFalsePositiveProbability pulumi.Float64PtrInput `pulumi:"bloomFilterFalsePositiveProbability"`
	// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
	Compression pulumi.StringPtrInput `pulumi:"compression"`
	// A float that represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to `1`.
	DictionaryKeyThreshold pulumi.Float64PtrInput `pulumi:"dictionaryKeyThreshold"`
	// Set this to `true` to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `false`.
	EnablePadding pulumi.BoolPtrInput `pulumi:"enablePadding"`
	// The version of the file to write. The possible values are `V0_11` and `V0_12`. The default is `V0_12`.
	FormatVersion pulumi.StringPtrInput `pulumi:"formatVersion"`
	// A float between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is `0.05`, which means 5 percent of stripe size. For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task. Kinesis Data Firehose ignores this parameter when `enablePadding` is `false`.
	PaddingTolerance pulumi.Float64PtrInput `pulumi:"paddingTolerance"`
	// The number of rows between index entries. The default is `10000` and the minimum is `1000`.
	RowIndexStride pulumi.IntPtrInput `pulumi:"rowIndexStride"`
	// The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.
	StripeSizeBytes pulumi.IntPtrInput `pulumi:"stripeSizeBytes"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrType FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput)
}

// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutput) BlockSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) *int {
		return v.BlockSizeBytes
	}).(pulumi.IntPtrOutput)
}

// A list of column names for which you want Kinesis Data Firehose to create bloom filters.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutput) BloomFilterColumns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) []string {
		return v.BloomFilterColumns
	}).(pulumi.StringArrayOutput)
}

// The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is `0.05`, the minimum is `0`, and the maximum is `1`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutput) BloomFilterFalsePositiveProbability() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) *float64 {
		return v.BloomFilterFalsePositiveProbability
	}).(pulumi.Float64PtrOutput)
}

// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) *string {
		return v.Compression
	}).(pulumi.StringPtrOutput)
}

// A float that represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to `1`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutput) DictionaryKeyThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) *float64 {
		return v.DictionaryKeyThreshold
	}).(pulumi.Float64PtrOutput)
}

// Set this to `true` to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutput) EnablePadding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) *bool {
		return v.EnablePadding
	}).(pulumi.BoolPtrOutput)
}

// The version of the file to write. The possible values are `V0_11` and `V0_12`. The default is `V0_12`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutput) FormatVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) *string {
		return v.FormatVersion
	}).(pulumi.StringPtrOutput)
}

// A float between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is `0.05`, which means 5 percent of stripe size. For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task. Kinesis Data Firehose ignores this parameter when `enablePadding` is `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutput) PaddingTolerance() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) *float64 {
		return v.PaddingTolerance
	}).(pulumi.Float64PtrOutput)
}

// The number of rows between index entries. The default is `10000` and the minimum is `1000`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutput) RowIndexStride() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) *int {
		return v.RowIndexStride
	}).(pulumi.IntPtrOutput)
}

// The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutput) StripeSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) *int {
		return v.StripeSizeBytes
	}).(pulumi.IntPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutput)
}

// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput) BlockSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) *int {
		return v.BlockSizeBytes
	}).(pulumi.IntPtrOutput)
}

// A list of column names for which you want Kinesis Data Firehose to create bloom filters.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput) BloomFilterColumns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) []string {
		return v.BloomFilterColumns
	}).(pulumi.StringArrayOutput)
}

// The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is `0.05`, the minimum is `0`, and the maximum is `1`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput) BloomFilterFalsePositiveProbability() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) *float64 {
		return v.BloomFilterFalsePositiveProbability
	}).(pulumi.Float64PtrOutput)
}

// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) *string {
		return v.Compression
	}).(pulumi.StringPtrOutput)
}

// A float that represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to `1`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput) DictionaryKeyThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) *float64 {
		return v.DictionaryKeyThreshold
	}).(pulumi.Float64PtrOutput)
}

// Set this to `true` to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput) EnablePadding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) *bool {
		return v.EnablePadding
	}).(pulumi.BoolPtrOutput)
}

// The version of the file to write. The possible values are `V0_11` and `V0_12`. The default is `V0_12`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput) FormatVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) *string {
		return v.FormatVersion
	}).(pulumi.StringPtrOutput)
}

// A float between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is `0.05`, which means 5 percent of stripe size. For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task. Kinesis Data Firehose ignores this parameter when `enablePadding` is `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput) PaddingTolerance() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) *float64 {
		return v.PaddingTolerance
	}).(pulumi.Float64PtrOutput)
}

// The number of rows between index entries. The default is `10000` and the minimum is `1000`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput) RowIndexStride() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) *int {
		return v.RowIndexStride
	}).(pulumi.IntPtrOutput)
}

// The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput) StripeSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) *int {
		return v.StripeSizeBytes
	}).(pulumi.IntPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe struct {
	// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
	BlockSizeBytes *int `pulumi:"blockSizeBytes"`
	// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
	Compression *string `pulumi:"compression"`
	// Indicates whether to enable dictionary compression.
	EnableDictionaryCompression *bool `pulumi:"enableDictionaryCompression"`
	// The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `0`.
	MaxPaddingBytes *int `pulumi:"maxPaddingBytes"`
	// The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.
	PageSizeBytes *int `pulumi:"pageSizeBytes"`
	// Indicates the version of row format to output. The possible values are `V1` and `V2`. The default is `V1`.
	WriterVersion *string `pulumi:"writerVersion"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs struct {
	// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
	BlockSizeBytes pulumi.IntPtrInput `pulumi:"blockSizeBytes"`
	// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
	Compression pulumi.StringPtrInput `pulumi:"compression"`
	// Indicates whether to enable dictionary compression.
	EnableDictionaryCompression pulumi.BoolPtrInput `pulumi:"enableDictionaryCompression"`
	// The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `0`.
	MaxPaddingBytes pulumi.IntPtrInput `pulumi:"maxPaddingBytes"`
	// The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.
	PageSizeBytes pulumi.IntPtrInput `pulumi:"pageSizeBytes"`
	// Indicates the version of row format to output. The possible values are `V1` and `V2`. The default is `V1`.
	WriterVersion pulumi.StringPtrInput `pulumi:"writerVersion"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrType FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput)
}

// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) BlockSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *int {
		return v.BlockSizeBytes
	}).(pulumi.IntPtrOutput)
}

// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *string {
		return v.Compression
	}).(pulumi.StringPtrOutput)
}

// Indicates whether to enable dictionary compression.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) EnableDictionaryCompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *bool {
		return v.EnableDictionaryCompression
	}).(pulumi.BoolPtrOutput)
}

// The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `0`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) MaxPaddingBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *int {
		return v.MaxPaddingBytes
	}).(pulumi.IntPtrOutput)
}

// The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) PageSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *int {
		return v.PageSizeBytes
	}).(pulumi.IntPtrOutput)
}

// Indicates the version of row format to output. The possible values are `V1` and `V2`. The default is `V1`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) WriterVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *string {
		return v.WriterVersion
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput)
}

// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) BlockSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *int {
		return v.BlockSizeBytes
	}).(pulumi.IntPtrOutput)
}

// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *string {
		return v.Compression
	}).(pulumi.StringPtrOutput)
}

// Indicates whether to enable dictionary compression.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) EnableDictionaryCompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *bool {
		return v.EnableDictionaryCompression
	}).(pulumi.BoolPtrOutput)
}

// The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `0`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) MaxPaddingBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *int {
		return v.MaxPaddingBytes
	}).(pulumi.IntPtrOutput)
}

// The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) PageSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *int {
		return v.PageSizeBytes
	}).(pulumi.IntPtrOutput)
}

// Indicates the version of row format to output. The possible values are `V1` and `V2`. The default is `V1`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) WriterVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *string {
		return v.WriterVersion
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs struct {
	// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
	BlockSizeBytes *int `pulumi:"blockSizeBytes"`
	// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
	Compression *string `pulumi:"compression"`
	// Indicates whether to enable dictionary compression.
	EnableDictionaryCompression *bool `pulumi:"enableDictionaryCompression"`
	// The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `0`.
	MaxPaddingBytes *int `pulumi:"maxPaddingBytes"`
	// The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.
	PageSizeBytes *int `pulumi:"pageSizeBytes"`
	// Indicates the version of row format to output. The possible values are `V1` and `V2`. The default is `V1`.
	WriterVersion *string `pulumi:"writerVersion"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsArgs struct {
	// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
	BlockSizeBytes pulumi.IntPtrInput `pulumi:"blockSizeBytes"`
	// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
	Compression pulumi.StringPtrInput `pulumi:"compression"`
	// Indicates whether to enable dictionary compression.
	EnableDictionaryCompression pulumi.BoolPtrInput `pulumi:"enableDictionaryCompression"`
	// The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `0`.
	MaxPaddingBytes pulumi.IntPtrInput `pulumi:"maxPaddingBytes"`
	// The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.
	PageSizeBytes pulumi.IntPtrInput `pulumi:"pageSizeBytes"`
	// Indicates the version of row format to output. The possible values are `V1` and `V2`. The default is `V1`.
	WriterVersion pulumi.StringPtrInput `pulumi:"writerVersion"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrType FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput)
}

// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsOutput) BlockSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) *int {
		return v.BlockSizeBytes
	}).(pulumi.IntPtrOutput)
}

// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) *string {
		return v.Compression
	}).(pulumi.StringPtrOutput)
}

// Indicates whether to enable dictionary compression.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsOutput) EnableDictionaryCompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) *bool {
		return v.EnableDictionaryCompression
	}).(pulumi.BoolPtrOutput)
}

// The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `0`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsOutput) MaxPaddingBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) *int {
		return v.MaxPaddingBytes
	}).(pulumi.IntPtrOutput)
}

// The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsOutput) PageSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) *int {
		return v.PageSizeBytes
	}).(pulumi.IntPtrOutput)
}

// Indicates the version of row format to output. The possible values are `V1` and `V2`. The default is `V1`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsOutput) WriterVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) *string {
		return v.WriterVersion
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsOutput)
}

// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput) BlockSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) *int {
		return v.BlockSizeBytes
	}).(pulumi.IntPtrOutput)
}

// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) *string {
		return v.Compression
	}).(pulumi.StringPtrOutput)
}

// Indicates whether to enable dictionary compression.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput) EnableDictionaryCompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) *bool {
		return v.EnableDictionaryCompression
	}).(pulumi.BoolPtrOutput)
}

// The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `0`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput) MaxPaddingBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) *int {
		return v.MaxPaddingBytes
	}).(pulumi.IntPtrOutput)
}

// The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput) PageSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) *int {
		return v.PageSizeBytes
	}).(pulumi.IntPtrOutput)
}

// Indicates the version of row format to output. The possible values are `V1` and `V2`. The default is `V1`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput) WriterVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) *string {
		return v.WriterVersion
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration struct {
	// The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID is used by default.
	CatalogId string `pulumi:"catalogId"`
	// Specifies the name of the AWS Glue database that contains the schema for the output data.
	DatabaseName string `pulumi:"databaseName"`
	// If you don't specify an AWS Region, the default is the current region.
	Region string `pulumi:"region"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn string `pulumi:"roleArn"`
	// Specifies the AWS Glue table that contains the column information that constitutes your data schema.
	TableName string `pulumi:"tableName"`
	// Specifies the table version for the output data schema. Defaults to `LATEST`.
	VersionId *string `pulumi:"versionId"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs struct {
	// The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID is used by default.
	CatalogId pulumi.StringInput `pulumi:"catalogId"`
	// Specifies the name of the AWS Glue database that contains the schema for the output data.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// If you don't specify an AWS Region, the default is the current region.
	Region pulumi.StringInput `pulumi:"region"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// Specifies the AWS Glue table that contains the column information that constitutes your data schema.
	TableName pulumi.StringInput `pulumi:"tableName"`
	// Specifies the table version for the output data schema. Defaults to `LATEST`.
	VersionId pulumi.StringPtrInput `pulumi:"versionId"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput {
	return o
}

// The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID is used by default.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput) CatalogId() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration) string {
		return v.CatalogId
	}).(pulumi.StringOutput)
}

// Specifies the name of the AWS Glue database that contains the schema for the output data.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration) string {
		return v.DatabaseName
	}).(pulumi.StringOutput)
}

// If you don't specify an AWS Region, the default is the current region.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration) string {
		return v.Region
	}).(pulumi.StringOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration) string {
		return v.RoleArn
	}).(pulumi.StringOutput)
}

// Specifies the AWS Glue table that contains the column information that constitutes your data schema.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration) string {
		return v.TableName
	}).(pulumi.StringOutput)
}

// Specifies the table version for the output data schema. Defaults to `LATEST`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput) VersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration) *string {
		return v.VersionId
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs struct {
	// The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID is used by default.
	CatalogId *string `pulumi:"catalogId"`
	// Specifies the name of the AWS Glue database that contains the schema for the output data.
	DatabaseName string `pulumi:"databaseName"`
	// If you don't specify an AWS Region, the default is the current region.
	Region *string `pulumi:"region"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn string `pulumi:"roleArn"`
	// Specifies the AWS Glue table that contains the column information that constitutes your data schema.
	TableName string `pulumi:"tableName"`
	// Specifies the table version for the output data schema. Defaults to `LATEST`.
	VersionId *string `pulumi:"versionId"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsArgs struct {
	// The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID is used by default.
	CatalogId pulumi.StringPtrInput `pulumi:"catalogId"`
	// Specifies the name of the AWS Glue database that contains the schema for the output data.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// If you don't specify an AWS Region, the default is the current region.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// Specifies the AWS Glue table that contains the column information that constitutes your data schema.
	TableName pulumi.StringInput `pulumi:"tableName"`
	// Specifies the table version for the output data schema. Defaults to `LATEST`.
	VersionId pulumi.StringPtrInput `pulumi:"versionId"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsOutput {
	return o
}

// The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID is used by default.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsOutput) CatalogId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs) *string {
		return v.CatalogId
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of the AWS Glue database that contains the schema for the output data.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs) string {
		return v.DatabaseName
	}).(pulumi.StringOutput)
}

// If you don't specify an AWS Region, the default is the current region.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs) *string {
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs) string {
		return v.RoleArn
	}).(pulumi.StringOutput)
}

// Specifies the AWS Glue table that contains the column information that constitutes your data schema.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs) string {
		return v.TableName
	}).(pulumi.StringOutput)
}

// Specifies the table version for the output data schema. Defaults to `LATEST`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsOutput) VersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgs) *string {
		return v.VersionId
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration struct {
	// Enables or disables data processing.
	Enabled *bool `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors []FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor `pulumi:"processors"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs struct {
	// Enables or disables data processing.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayInput `pulumi:"processors"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrType FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration) *FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput) Processors() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration) []FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput) Processors() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration) []FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs struct {
	// Enables or disables data processing.
	Enabled *bool `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors []FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs `pulumi:"processors"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsArgs struct {
	// Enables or disables data processing.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArrayInput `pulumi:"processors"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrType FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsArgs) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs) *FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsOutput) Processors() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs) []FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs {
		return v.Processors
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArrayOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutput) Processors() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgs) []FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs {
		return v.Processors
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArrayOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor struct {
	// Array of processor parameters. More details are given below
	Parameters []FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type string `pulumi:"type"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs struct {
	// Array of processor parameters. More details are given below
	Parameters FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayInput `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type pulumi.StringInput `pulumi:"type"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArray []FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorInput

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput {
	return o
}

// Array of processor parameters. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput) Parameters() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor) []FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter {
		return v.Parameters
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput)
}

// The type of processor. Valid Values: `Lambda`
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor {
		return vs[0].([]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor)[vs[1].(int)]
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs struct {
	// Array of processor parameters. More details are given below
	Parameters []FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type string `pulumi:"type"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArgs struct {
	// Array of processor parameters. More details are given below
	Parameters FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArrayInput `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type pulumi.StringInput `pulumi:"type"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArrayOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArrayOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArrayOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArrayOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArray []FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsInput

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArray) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArrayOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArrayOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArray) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArrayOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsOutput {
	return o
}

// Array of processor parameters. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsOutput) Parameters() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs) []FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs {
		return v.Parameters
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput)
}

// The type of processor. Valid Values: `Lambda`
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArrayOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArrayOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArrayOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs {
		return vs[0].([]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgs)[vs[1].(int)]
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName string `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue string `pulumi:"parameterValue"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName pulumi.StringInput `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArray []FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterInput

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput {
	return o
}

// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter) string {
		return v.ParameterName
	}).(pulumi.StringOutput)
}

// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter) string {
		return v.ParameterValue
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter {
		return vs[0].([]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter)[vs[1].(int)]
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName string `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue string `pulumi:"parameterValue"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArgs struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName pulumi.StringInput `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArrayOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArray []FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsInput

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArray) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArray) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsOutput {
	return o
}

// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs) string {
		return v.ParameterName
	}).(pulumi.StringOutput)
}

// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs) string {
		return v.ParameterValue
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput() FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs {
		return vs[0].([]FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgs)[vs[1].(int)]
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration struct {
	// The ARN of the S3 bucket
	BucketArn string `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval *int `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize *int `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat *string `pulumi:"compressionFormat"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix *string `pulumi:"prefix"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn string `pulumi:"roleArn"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs struct {
	// The ARN of the S3 bucket
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval pulumi.IntPtrInput `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize pulumi.IntPtrInput `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsInput `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat pulumi.StringPtrInput `pulumi:"compressionFormat"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrType FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *int {
		return v.BufferInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *int { return v.BufferSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *string {
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *string {
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *int {
		return v.BufferInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *int { return v.BufferSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *string {
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *string {
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs struct {
	// The ARN of the S3 bucket
	BucketArn string `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval *int `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize *int `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat *string `pulumi:"compressionFormat"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix *string `pulumi:"prefix"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn string `pulumi:"roleArn"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsArgs struct {
	// The ARN of the S3 bucket
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval pulumi.IntPtrInput `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize pulumi.IntPtrInput `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat pulumi.StringPtrInput `pulumi:"compressionFormat"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrType FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsArgs) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) string {
		return v.BucketArn
	}).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) *int {
		return v.BufferInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) *int {
		return v.BufferSize
	}).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) *string {
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) *string {
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) *string {
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) string {
		return v.RoleArn
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) string {
		return v.BucketArn
	}).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) *int {
		return v.BufferInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) *int {
		return v.BufferSize
	}).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) *string {
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) *string {
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) *string {
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) string {
		return v.RoleArn
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrType FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsArgs) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationState struct {
	// The ARN of the S3 bucket
	BucketArn string `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval *int `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize *int `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat *string `pulumi:"compressionFormat"`
	// Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. More details given below.
	DataFormatConversionConfiguration *FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfiguration `pulumi:"dataFormatConversionConfiguration"`
	// Prefix added to failed records before writing them to S3. This prefix appears immediately following the bucket name.
	ErrorOutputPrefix *string `pulumi:"errorOutputPrefix"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix *string `pulumi:"prefix"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration *FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfiguration `pulumi:"processingConfiguration"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn string `pulumi:"roleArn"`
	// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
	S3BackupConfiguration *FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfiguration `pulumi:"s3BackupConfiguration"`
	// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
	S3BackupMode *string `pulumi:"s3BackupMode"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateArgs struct {
	// The ARN of the S3 bucket
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval pulumi.IntPtrInput `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize pulumi.IntPtrInput `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat pulumi.StringPtrInput `pulumi:"compressionFormat"`
	// Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. More details given below.
	DataFormatConversionConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrInput `pulumi:"dataFormatConversionConfiguration"`
	// Prefix added to failed records before writing them to S3. This prefix appears immediately following the bucket name.
	ErrorOutputPrefix pulumi.StringPtrInput `pulumi:"errorOutputPrefix"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
	S3BackupConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrInput `pulumi:"s3BackupConfiguration"`
	// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
	S3BackupMode pulumi.StringPtrInput `pulumi:"s3BackupMode"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationState)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationState)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateOutput {
	return o
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationState) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationState) *int { return v.BufferInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationState) *int { return v.BufferSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationState) *FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationState) *string { return v.CompressionFormat }).(pulumi.StringPtrOutput)
}

// Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. More details given below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateOutput) DataFormatConversionConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationState) *FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfiguration {
		return v.DataFormatConversionConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutput)
}

// Prefix added to failed records before writing them to S3. This prefix appears immediately following the bucket name.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationState) *string { return v.ErrorOutputPrefix }).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationState) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationState) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateOutput) ProcessingConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationState) *FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationState) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateOutput) S3BackupConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationState) *FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfiguration {
		return v.S3BackupConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput)
}

// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationState) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptions) *FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptions) FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptions {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfiguration struct {
	// Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
	Enabled *bool `pulumi:"enabled"`
	// Nested argument that specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. More details below.
	InputFormatConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfiguration `pulumi:"inputFormatConfiguration"`
	// Nested argument that specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. More details below.
	OutputFormatConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfiguration `pulumi:"outputFormatConfiguration"`
	// Nested argument that specifies the AWS Glue Data Catalog table that contains the column information. More details below.
	SchemaConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfiguration `pulumi:"schemaConfiguration"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationArgs struct {
	// Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Nested argument that specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. More details below.
	InputFormatConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationInput `pulumi:"inputFormatConfiguration"`
	// Nested argument that specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. More details below.
	OutputFormatConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationInput `pulumi:"outputFormatConfiguration"`
	// Nested argument that specifies the AWS Glue Data Catalog table that contains the column information. More details below.
	SchemaConfiguration FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationInput `pulumi:"schemaConfiguration"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrType FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfiguration) *FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfiguration {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutput)
}

// Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfiguration) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Nested argument that specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutput) InputFormatConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfiguration {
		return v.InputFormatConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationOutput)
}

// Nested argument that specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutput) OutputFormatConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfiguration {
		return v.OutputFormatConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationOutput)
}

// Nested argument that specifies the AWS Glue Data Catalog table that contains the column information. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutput) SchemaConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfiguration {
		return v.SchemaConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfiguration {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutput)
}

// Defaults to `true`. Set it to `false` if you want to disable format conversion while preserving the configuration details.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfiguration) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Nested argument that specifies the deserializer that you want Kinesis Data Firehose to use to convert the format of your data from JSON. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutput) InputFormatConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfiguration {
		return v.InputFormatConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationOutput)
}

// Nested argument that specifies the serializer that you want Kinesis Data Firehose to use to convert the format of your data to the Parquet or ORC format. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutput) OutputFormatConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfiguration {
		return v.OutputFormatConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationOutput)
}

// Nested argument that specifies the AWS Glue Data Catalog table that contains the column information. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutput) SchemaConfiguration() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfiguration {
		return v.SchemaConfiguration
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfiguration struct {
	// Nested argument that specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe or the OpenX JSON SerDe. More details below.
	Deserializer FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializer `pulumi:"deserializer"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationArgs struct {
	// Nested argument that specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe or the OpenX JSON SerDe. More details below.
	Deserializer FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerInput `pulumi:"deserializer"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationOutput {
	return o
}

// Nested argument that specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe or the OpenX JSON SerDe. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationOutput) Deserializer() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializer {
		return v.Deserializer
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializer struct {
	// Nested argument that specifies the native Hive / HCatalog JsonSerDe. More details below.
	HiveJsonSerDe *FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe `pulumi:"hiveJsonSerDe"`
	// Nested argument that specifies the OpenX SerDe. More details below.
	OpenXJsonSerDe *FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe `pulumi:"openXJsonSerDe"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs struct {
	// Nested argument that specifies the native Hive / HCatalog JsonSerDe. More details below.
	HiveJsonSerDe FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrInput `pulumi:"hiveJsonSerDe"`
	// Nested argument that specifies the OpenX SerDe. More details below.
	OpenXJsonSerDe FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrInput `pulumi:"openXJsonSerDe"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializer)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializer)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput {
	return o
}

// Nested argument that specifies the native Hive / HCatalog JsonSerDe. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput) HiveJsonSerDe() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializer) *FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe {
		return v.HiveJsonSerDe
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput)
}

// Nested argument that specifies the OpenX SerDe. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput) OpenXJsonSerDe() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializer) *FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe {
		return v.OpenXJsonSerDe
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe struct {
	// A list of how you want Kinesis Data Firehose to parse the date and time stamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see [Class DateTimeFormat](https://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html). You can also use the special value millis to parse time stamps in epoch milliseconds. If you don't specify a format, Kinesis Data Firehose uses java.sql.Timestamp::valueOf by default.
	TimestampFormats []string `pulumi:"timestampFormats"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs struct {
	// A list of how you want Kinesis Data Firehose to parse the date and time stamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see [Class DateTimeFormat](https://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html). You can also use the special value millis to parse time stamps in epoch milliseconds. If you don't specify a format, Kinesis Data Firehose uses java.sql.Timestamp::valueOf by default.
	TimestampFormats pulumi.StringArrayInput `pulumi:"timestampFormats"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrType FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgs) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe) *FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput)
}

// A list of how you want Kinesis Data Firehose to parse the date and time stamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see [Class DateTimeFormat](https://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html). You can also use the special value millis to parse time stamps in epoch milliseconds. If you don't specify a format, Kinesis Data Firehose uses java.sql.Timestamp::valueOf by default.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput) TimestampFormats() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe) []string {
		return v.TimestampFormats
	}).(pulumi.StringArrayOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput)
}

// A list of how you want Kinesis Data Firehose to parse the date and time stamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see [Class DateTimeFormat](https://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html). You can also use the special value millis to parse time stamps in epoch milliseconds. If you don't specify a format, Kinesis Data Firehose uses java.sql.Timestamp::valueOf by default.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput) TimestampFormats() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe) []string {
		return v.TimestampFormats
	}).(pulumi.StringArrayOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe struct {
	// When set to true, which is the default, Kinesis Data Firehose converts JSON keys to lowercase before deserializing them.
	CaseInsensitive *bool `pulumi:"caseInsensitive"`
	// A map of column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, timestamp is a Hive keyword. If you have a JSON key named timestamp, set this parameter to `{ ts = "timestamp" }` to map this key to a column named ts.
	ColumnToJsonKeyMappings map[string]string `pulumi:"columnToJsonKeyMappings"`
	// When set to `true`, specifies that the names of the keys include dots and that you want Kinesis Data Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is "a.b", you can define the column name to be "aB" when using this option. Defaults to `false`.
	ConvertDotsInJsonKeysToUnderscores *bool `pulumi:"convertDotsInJsonKeysToUnderscores"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs struct {
	// When set to true, which is the default, Kinesis Data Firehose converts JSON keys to lowercase before deserializing them.
	CaseInsensitive pulumi.BoolPtrInput `pulumi:"caseInsensitive"`
	// A map of column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, timestamp is a Hive keyword. If you have a JSON key named timestamp, set this parameter to `{ ts = "timestamp" }` to map this key to a column named ts.
	ColumnToJsonKeyMappings pulumi.StringMapInput `pulumi:"columnToJsonKeyMappings"`
	// When set to `true`, specifies that the names of the keys include dots and that you want Kinesis Data Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is "a.b", you can define the column name to be "aB" when using this option. Defaults to `false`.
	ConvertDotsInJsonKeysToUnderscores pulumi.BoolPtrInput `pulumi:"convertDotsInJsonKeysToUnderscores"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrType FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgs) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) *FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput)
}

// When set to true, which is the default, Kinesis Data Firehose converts JSON keys to lowercase before deserializing them.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) CaseInsensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) *bool {
		return v.CaseInsensitive
	}).(pulumi.BoolPtrOutput)
}

// A map of column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, timestamp is a Hive keyword. If you have a JSON key named timestamp, set this parameter to `{ ts = "timestamp" }` to map this key to a column named ts.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) ColumnToJsonKeyMappings() pulumi.StringMapOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) map[string]string {
		return v.ColumnToJsonKeyMappings
	}).(pulumi.StringMapOutput)
}

// When set to `true`, specifies that the names of the keys include dots and that you want Kinesis Data Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is "a.b", you can define the column name to be "aB" when using this option. Defaults to `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput) ConvertDotsInJsonKeysToUnderscores() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) *bool {
		return v.ConvertDotsInJsonKeysToUnderscores
	}).(pulumi.BoolPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput)
}

// When set to true, which is the default, Kinesis Data Firehose converts JSON keys to lowercase before deserializing them.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput) CaseInsensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) *bool {
		return v.CaseInsensitive
	}).(pulumi.BoolPtrOutput)
}

// A map of column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, timestamp is a Hive keyword. If you have a JSON key named timestamp, set this parameter to `{ ts = "timestamp" }` to map this key to a column named ts.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput) ColumnToJsonKeyMappings() pulumi.StringMapOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) map[string]string {
		return v.ColumnToJsonKeyMappings
	}).(pulumi.StringMapOutput)
}

// When set to `true`, specifies that the names of the keys include dots and that you want Kinesis Data Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is "a.b", you can define the column name to be "aB" when using this option. Defaults to `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput) ConvertDotsInJsonKeysToUnderscores() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe) *bool {
		return v.ConvertDotsInJsonKeysToUnderscores
	}).(pulumi.BoolPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfiguration struct {
	// Nested argument that specifies which serializer to use. You can choose either the ORC SerDe or the Parquet SerDe. More details below.
	Serializer FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializer `pulumi:"serializer"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationArgs struct {
	// Nested argument that specifies which serializer to use. You can choose either the ORC SerDe or the Parquet SerDe. More details below.
	Serializer FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerInput `pulumi:"serializer"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationOutput {
	return o
}

// Nested argument that specifies which serializer to use. You can choose either the ORC SerDe or the Parquet SerDe. More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationOutput) Serializer() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializer {
		return v.Serializer
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializer struct {
	// Nested argument that specifies converting data to the ORC format before storing it in Amazon S3. For more information, see [Apache ORC](https://orc.apache.org/docs/). More details below.
	OrcSerDe *FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe `pulumi:"orcSerDe"`
	// Nested argument that specifies converting data to the Parquet format before storing it in Amazon S3. For more information, see [Apache Parquet](https://parquet.apache.org/documentation/latest/). More details below.
	ParquetSerDe *FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe `pulumi:"parquetSerDe"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs struct {
	// Nested argument that specifies converting data to the ORC format before storing it in Amazon S3. For more information, see [Apache ORC](https://orc.apache.org/docs/). More details below.
	OrcSerDe FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrInput `pulumi:"orcSerDe"`
	// Nested argument that specifies converting data to the Parquet format before storing it in Amazon S3. For more information, see [Apache Parquet](https://parquet.apache.org/documentation/latest/). More details below.
	ParquetSerDe FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrInput `pulumi:"parquetSerDe"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializer)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializer)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput {
	return o
}

// Nested argument that specifies converting data to the ORC format before storing it in Amazon S3. For more information, see [Apache ORC](https://orc.apache.org/docs/). More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput) OrcSerDe() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializer) *FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe {
		return v.OrcSerDe
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput)
}

// Nested argument that specifies converting data to the Parquet format before storing it in Amazon S3. For more information, see [Apache Parquet](https://parquet.apache.org/documentation/latest/). More details below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput) ParquetSerDe() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializer) *FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe {
		return v.ParquetSerDe
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe struct {
	// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
	BlockSizeBytes *int `pulumi:"blockSizeBytes"`
	// A list of column names for which you want Kinesis Data Firehose to create bloom filters.
	BloomFilterColumns []string `pulumi:"bloomFilterColumns"`
	// The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is `0.05`, the minimum is `0`, and the maximum is `1`.
	BloomFilterFalsePositiveProbability *float64 `pulumi:"bloomFilterFalsePositiveProbability"`
	// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
	Compression *string `pulumi:"compression"`
	// A float that represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to `1`.
	DictionaryKeyThreshold *float64 `pulumi:"dictionaryKeyThreshold"`
	// Set this to `true` to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `false`.
	EnablePadding *bool `pulumi:"enablePadding"`
	// The version of the file to write. The possible values are `V0_11` and `V0_12`. The default is `V0_12`.
	FormatVersion *string `pulumi:"formatVersion"`
	// A float between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is `0.05`, which means 5 percent of stripe size. For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task. Kinesis Data Firehose ignores this parameter when `enablePadding` is `false`.
	PaddingTolerance *float64 `pulumi:"paddingTolerance"`
	// The number of rows between index entries. The default is `10000` and the minimum is `1000`.
	RowIndexStride *int `pulumi:"rowIndexStride"`
	// The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.
	StripeSizeBytes *int `pulumi:"stripeSizeBytes"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs struct {
	// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
	BlockSizeBytes pulumi.IntPtrInput `pulumi:"blockSizeBytes"`
	// A list of column names for which you want Kinesis Data Firehose to create bloom filters.
	BloomFilterColumns pulumi.StringArrayInput `pulumi:"bloomFilterColumns"`
	// The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is `0.05`, the minimum is `0`, and the maximum is `1`.
	BloomFilterFalsePositiveProbability pulumi.Float64PtrInput `pulumi:"bloomFilterFalsePositiveProbability"`
	// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
	Compression pulumi.StringPtrInput `pulumi:"compression"`
	// A float that represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to `1`.
	DictionaryKeyThreshold pulumi.Float64PtrInput `pulumi:"dictionaryKeyThreshold"`
	// Set this to `true` to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `false`.
	EnablePadding pulumi.BoolPtrInput `pulumi:"enablePadding"`
	// The version of the file to write. The possible values are `V0_11` and `V0_12`. The default is `V0_12`.
	FormatVersion pulumi.StringPtrInput `pulumi:"formatVersion"`
	// A float between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is `0.05`, which means 5 percent of stripe size. For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task. Kinesis Data Firehose ignores this parameter when `enablePadding` is `false`.
	PaddingTolerance pulumi.Float64PtrInput `pulumi:"paddingTolerance"`
	// The number of rows between index entries. The default is `10000` and the minimum is `1000`.
	RowIndexStride pulumi.IntPtrInput `pulumi:"rowIndexStride"`
	// The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.
	StripeSizeBytes pulumi.IntPtrInput `pulumi:"stripeSizeBytes"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrType FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgs) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput)
}

// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) BlockSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *int {
		return v.BlockSizeBytes
	}).(pulumi.IntPtrOutput)
}

// A list of column names for which you want Kinesis Data Firehose to create bloom filters.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) BloomFilterColumns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) []string {
		return v.BloomFilterColumns
	}).(pulumi.StringArrayOutput)
}

// The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is `0.05`, the minimum is `0`, and the maximum is `1`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) BloomFilterFalsePositiveProbability() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *float64 {
		return v.BloomFilterFalsePositiveProbability
	}).(pulumi.Float64PtrOutput)
}

// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *string {
		return v.Compression
	}).(pulumi.StringPtrOutput)
}

// A float that represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to `1`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) DictionaryKeyThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *float64 {
		return v.DictionaryKeyThreshold
	}).(pulumi.Float64PtrOutput)
}

// Set this to `true` to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) EnablePadding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *bool {
		return v.EnablePadding
	}).(pulumi.BoolPtrOutput)
}

// The version of the file to write. The possible values are `V0_11` and `V0_12`. The default is `V0_12`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) FormatVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *string {
		return v.FormatVersion
	}).(pulumi.StringPtrOutput)
}

// A float between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is `0.05`, which means 5 percent of stripe size. For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task. Kinesis Data Firehose ignores this parameter when `enablePadding` is `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) PaddingTolerance() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *float64 {
		return v.PaddingTolerance
	}).(pulumi.Float64PtrOutput)
}

// The number of rows between index entries. The default is `10000` and the minimum is `1000`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) RowIndexStride() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *int {
		return v.RowIndexStride
	}).(pulumi.IntPtrOutput)
}

// The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput) StripeSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *int {
		return v.StripeSizeBytes
	}).(pulumi.IntPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput)
}

// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) BlockSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *int {
		return v.BlockSizeBytes
	}).(pulumi.IntPtrOutput)
}

// A list of column names for which you want Kinesis Data Firehose to create bloom filters.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) BloomFilterColumns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) []string {
		return v.BloomFilterColumns
	}).(pulumi.StringArrayOutput)
}

// The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is `0.05`, the minimum is `0`, and the maximum is `1`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) BloomFilterFalsePositiveProbability() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *float64 {
		return v.BloomFilterFalsePositiveProbability
	}).(pulumi.Float64PtrOutput)
}

// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *string {
		return v.Compression
	}).(pulumi.StringPtrOutput)
}

// A float that represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to `1`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) DictionaryKeyThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *float64 {
		return v.DictionaryKeyThreshold
	}).(pulumi.Float64PtrOutput)
}

// Set this to `true` to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) EnablePadding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *bool {
		return v.EnablePadding
	}).(pulumi.BoolPtrOutput)
}

// The version of the file to write. The possible values are `V0_11` and `V0_12`. The default is `V0_12`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) FormatVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *string {
		return v.FormatVersion
	}).(pulumi.StringPtrOutput)
}

// A float between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is `0.05`, which means 5 percent of stripe size. For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task. Kinesis Data Firehose ignores this parameter when `enablePadding` is `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) PaddingTolerance() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *float64 {
		return v.PaddingTolerance
	}).(pulumi.Float64PtrOutput)
}

// The number of rows between index entries. The default is `10000` and the minimum is `1000`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) RowIndexStride() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *int {
		return v.RowIndexStride
	}).(pulumi.IntPtrOutput)
}

// The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput) StripeSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe) *int {
		return v.StripeSizeBytes
	}).(pulumi.IntPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe struct {
	// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
	BlockSizeBytes *int `pulumi:"blockSizeBytes"`
	// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
	Compression *string `pulumi:"compression"`
	// Indicates whether to enable dictionary compression.
	EnableDictionaryCompression *bool `pulumi:"enableDictionaryCompression"`
	// The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `0`.
	MaxPaddingBytes *int `pulumi:"maxPaddingBytes"`
	// The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.
	PageSizeBytes *int `pulumi:"pageSizeBytes"`
	// Indicates the version of row format to output. The possible values are `V1` and `V2`. The default is `V1`.
	WriterVersion *string `pulumi:"writerVersion"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs struct {
	// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
	BlockSizeBytes pulumi.IntPtrInput `pulumi:"blockSizeBytes"`
	// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
	Compression pulumi.StringPtrInput `pulumi:"compression"`
	// Indicates whether to enable dictionary compression.
	EnableDictionaryCompression pulumi.BoolPtrInput `pulumi:"enableDictionaryCompression"`
	// The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `0`.
	MaxPaddingBytes pulumi.IntPtrInput `pulumi:"maxPaddingBytes"`
	// The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.
	PageSizeBytes pulumi.IntPtrInput `pulumi:"pageSizeBytes"`
	// Indicates the version of row format to output. The possible values are `V1` and `V2`. The default is `V1`.
	WriterVersion pulumi.StringPtrInput `pulumi:"writerVersion"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrType FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgs) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput)
}

// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) BlockSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *int {
		return v.BlockSizeBytes
	}).(pulumi.IntPtrOutput)
}

// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *string {
		return v.Compression
	}).(pulumi.StringPtrOutput)
}

// Indicates whether to enable dictionary compression.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) EnableDictionaryCompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *bool {
		return v.EnableDictionaryCompression
	}).(pulumi.BoolPtrOutput)
}

// The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `0`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) MaxPaddingBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *int {
		return v.MaxPaddingBytes
	}).(pulumi.IntPtrOutput)
}

// The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) PageSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *int {
		return v.PageSizeBytes
	}).(pulumi.IntPtrOutput)
}

// Indicates the version of row format to output. The possible values are `V1` and `V2`. The default is `V1`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput) WriterVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *string {
		return v.WriterVersion
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput)
}

// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Kinesis Data Firehose uses this value for padding calculations.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) BlockSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *int {
		return v.BlockSizeBytes
	}).(pulumi.IntPtrOutput)
}

// The compression code to use over data blocks. The possible values are `UNCOMPRESSED`, `SNAPPY`, and `GZIP`, with the default being `SNAPPY`. Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *string {
		return v.Compression
	}).(pulumi.StringPtrOutput)
}

// Indicates whether to enable dictionary compression.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) EnableDictionaryCompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *bool {
		return v.EnableDictionaryCompression
	}).(pulumi.BoolPtrOutput)
}

// The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `0`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) MaxPaddingBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *int {
		return v.MaxPaddingBytes
	}).(pulumi.IntPtrOutput)
}

// The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) PageSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *int {
		return v.PageSizeBytes
	}).(pulumi.IntPtrOutput)
}

// Indicates the version of row format to output. The possible values are `V1` and `V2`. The default is `V1`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput) WriterVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe) *string {
		return v.WriterVersion
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfiguration struct {
	// The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID is used by default.
	CatalogId *string `pulumi:"catalogId"`
	// Specifies the name of the AWS Glue database that contains the schema for the output data.
	DatabaseName string `pulumi:"databaseName"`
	// If you don't specify an AWS Region, the default is the current region.
	Region *string `pulumi:"region"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn string `pulumi:"roleArn"`
	// Specifies the AWS Glue table that contains the column information that constitutes your data schema.
	TableName string `pulumi:"tableName"`
	// Specifies the table version for the output data schema. Defaults to `LATEST`.
	VersionId *string `pulumi:"versionId"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationArgs struct {
	// The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID is used by default.
	CatalogId pulumi.StringPtrInput `pulumi:"catalogId"`
	// Specifies the name of the AWS Glue database that contains the schema for the output data.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// If you don't specify an AWS Region, the default is the current region.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// Specifies the AWS Glue table that contains the column information that constitutes your data schema.
	TableName pulumi.StringInput `pulumi:"tableName"`
	// Specifies the table version for the output data schema. Defaults to `LATEST`.
	VersionId pulumi.StringPtrInput `pulumi:"versionId"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationOutput {
	return o
}

// The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID is used by default.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationOutput) CatalogId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfiguration) *string {
		return v.CatalogId
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of the AWS Glue database that contains the schema for the output data.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfiguration) string {
		return v.DatabaseName
	}).(pulumi.StringOutput)
}

// If you don't specify an AWS Region, the default is the current region.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfiguration) *string {
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfiguration) string {
		return v.RoleArn
	}).(pulumi.StringOutput)
}

// Specifies the AWS Glue table that contains the column information that constitutes your data schema.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfiguration) string {
		return v.TableName
	}).(pulumi.StringOutput)
}

// Specifies the table version for the output data schema. Defaults to `LATEST`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationOutput) VersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfiguration) *string {
		return v.VersionId
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfiguration struct {
	// Enables or disables data processing.
	Enabled *bool `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors []FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessor `pulumi:"processors"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationArgs struct {
	// Enables or disables data processing.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArrayInput `pulumi:"processors"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrType FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfiguration) *FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfiguration {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfiguration) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationOutput) Processors() FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfiguration) []FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfiguration {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfiguration) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutput) Processors() FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfiguration) []FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessor struct {
	// Array of processor parameters. More details are given below
	Parameters []FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameter `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type string `pulumi:"type"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArgs struct {
	// Array of processor parameters. More details are given below
	Parameters FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArrayInput `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type pulumi.StringInput `pulumi:"type"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArrayOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArrayOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArrayOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArray []FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorInput

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArrayOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorOutput {
	return o
}

// Array of processor parameters. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorOutput) Parameters() FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessor) []FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameter {
		return v.Parameters
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArrayOutput)
}

// The type of processor. Valid Values: `Lambda`
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessor) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessor {
		return vs[0].([]FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessor)[vs[1].(int)]
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameter struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName string `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue string `pulumi:"parameterValue"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArgs struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName pulumi.StringInput `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArrayOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArrayOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArray []FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterInput

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArrayOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArrayOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterOutput {
	return o
}

// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameter) string {
		return v.ParameterName
	}).(pulumi.StringOutput)
}

// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameter) string {
		return v.ParameterValue
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameter {
		return vs[0].([]FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameter)[vs[1].(int)]
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfiguration struct {
	// The ARN of the S3 bucket
	BucketArn string `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval *int `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize *int `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat *string `pulumi:"compressionFormat"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix *string `pulumi:"prefix"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn string `pulumi:"roleArn"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationArgs struct {
	// The ARN of the S3 bucket
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval pulumi.IntPtrInput `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize pulumi.IntPtrInput `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat pulumi.StringPtrInput `pulumi:"compressionFormat"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrType FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfiguration) *FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfiguration {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfiguration) string {
		return v.BucketArn
	}).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfiguration) *int {
		return v.BufferInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfiguration) *int {
		return v.BufferSize
	}).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfiguration) *FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfiguration) *string {
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfiguration) *string {
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfiguration) *string {
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfiguration) string {
		return v.RoleArn
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfiguration {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfiguration) string {
		return v.BucketArn
	}).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfiguration) *int {
		return v.BufferInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfiguration) *int {
		return v.BufferSize
	}).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfiguration) *FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfiguration) *string {
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfiguration) *string {
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfiguration) *string {
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfiguration) string {
		return v.RoleArn
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrInput {
	return (*firehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions) *FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions) FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions {
		return *v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamKinesisSourceConfiguration struct {
	// The kinesis stream used as the source of the firehose delivery stream.
	KinesisStreamArn string `pulumi:"kinesisStreamArn"`
	// The ARN of the role that provides access to the source Kinesis stream.
	RoleArn string `pulumi:"roleArn"`
}

type FirehoseDeliveryStreamKinesisSourceConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamKinesisSourceConfigurationOutput() FirehoseDeliveryStreamKinesisSourceConfigurationOutput
	ToFirehoseDeliveryStreamKinesisSourceConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationOutput
}

type FirehoseDeliveryStreamKinesisSourceConfigurationArgs struct {
	// The kinesis stream used as the source of the firehose delivery stream.
	KinesisStreamArn pulumi.StringInput `pulumi:"kinesisStreamArn"`
	// The ARN of the role that provides access to the source Kinesis stream.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (FirehoseDeliveryStreamKinesisSourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamKinesisSourceConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamKinesisSourceConfigurationArgs) ToFirehoseDeliveryStreamKinesisSourceConfigurationOutput() FirehoseDeliveryStreamKinesisSourceConfigurationOutput {
	return i.ToFirehoseDeliveryStreamKinesisSourceConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamKinesisSourceConfigurationArgs) ToFirehoseDeliveryStreamKinesisSourceConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamKinesisSourceConfigurationOutput)
}

func (i FirehoseDeliveryStreamKinesisSourceConfigurationArgs) ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput() FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamKinesisSourceConfigurationArgs) ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamKinesisSourceConfigurationOutput).ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamKinesisSourceConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput() FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput
	ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput
}

type firehoseDeliveryStreamKinesisSourceConfigurationPtrType FirehoseDeliveryStreamKinesisSourceConfigurationArgs

func FirehoseDeliveryStreamKinesisSourceConfigurationPtr(v *FirehoseDeliveryStreamKinesisSourceConfigurationArgs) FirehoseDeliveryStreamKinesisSourceConfigurationPtrInput {
	return (*firehoseDeliveryStreamKinesisSourceConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamKinesisSourceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamKinesisSourceConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamKinesisSourceConfigurationPtrType) ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput() FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamKinesisSourceConfigurationPtrType) ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput)
}

type FirehoseDeliveryStreamKinesisSourceConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamKinesisSourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamKinesisSourceConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationOutput) ToFirehoseDeliveryStreamKinesisSourceConfigurationOutput() FirehoseDeliveryStreamKinesisSourceConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationOutput) ToFirehoseDeliveryStreamKinesisSourceConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationOutput) ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput() FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationOutput) ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamKinesisSourceConfiguration) *FirehoseDeliveryStreamKinesisSourceConfiguration {
		return &v
	}).(FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput)
}

// The kinesis stream used as the source of the firehose delivery stream.
func (o FirehoseDeliveryStreamKinesisSourceConfigurationOutput) KinesisStreamArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamKinesisSourceConfiguration) string { return v.KinesisStreamArn }).(pulumi.StringOutput)
}

// The ARN of the role that provides access to the source Kinesis stream.
func (o FirehoseDeliveryStreamKinesisSourceConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamKinesisSourceConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamKinesisSourceConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput) ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput() FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput) ToFirehoseDeliveryStreamKinesisSourceConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput) Elem() FirehoseDeliveryStreamKinesisSourceConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamKinesisSourceConfiguration) FirehoseDeliveryStreamKinesisSourceConfiguration {
		return *v
	}).(FirehoseDeliveryStreamKinesisSourceConfigurationOutput)
}

// The kinesis stream used as the source of the firehose delivery stream.
func (o FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput) KinesisStreamArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamKinesisSourceConfiguration) string { return v.KinesisStreamArn }).(pulumi.StringOutput)
}

// The ARN of the role that provides access to the source Kinesis stream.
func (o FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamKinesisSourceConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamKinesisSourceConfigurationArgs struct {
	// The kinesis stream used as the source of the firehose delivery stream.
	KinesisStreamArn string `pulumi:"kinesisStreamArn"`
	// The ARN of the role that provides access to the source Kinesis stream.
	RoleArn string `pulumi:"roleArn"`
}

type FirehoseDeliveryStreamKinesisSourceConfigurationArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamKinesisSourceConfigurationArgsOutput() FirehoseDeliveryStreamKinesisSourceConfigurationArgsOutput
	ToFirehoseDeliveryStreamKinesisSourceConfigurationArgsOutputWithContext(context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationArgsOutput
}

type FirehoseDeliveryStreamKinesisSourceConfigurationArgsArgs struct {
	// The kinesis stream used as the source of the firehose delivery stream.
	KinesisStreamArn pulumi.StringInput `pulumi:"kinesisStreamArn"`
	// The ARN of the role that provides access to the source Kinesis stream.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (FirehoseDeliveryStreamKinesisSourceConfigurationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamKinesisSourceConfigurationArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamKinesisSourceConfigurationArgsArgs) ToFirehoseDeliveryStreamKinesisSourceConfigurationArgsOutput() FirehoseDeliveryStreamKinesisSourceConfigurationArgsOutput {
	return i.ToFirehoseDeliveryStreamKinesisSourceConfigurationArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamKinesisSourceConfigurationArgsArgs) ToFirehoseDeliveryStreamKinesisSourceConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamKinesisSourceConfigurationArgsOutput)
}

func (i FirehoseDeliveryStreamKinesisSourceConfigurationArgsArgs) ToFirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutput() FirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamKinesisSourceConfigurationArgsArgs) ToFirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamKinesisSourceConfigurationArgsOutput).ToFirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutput() FirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutput
	ToFirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutput
}

type firehoseDeliveryStreamKinesisSourceConfigurationArgsPtrType FirehoseDeliveryStreamKinesisSourceConfigurationArgsArgs

func FirehoseDeliveryStreamKinesisSourceConfigurationArgsPtr(v *FirehoseDeliveryStreamKinesisSourceConfigurationArgsArgs) FirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrInput {
	return (*firehoseDeliveryStreamKinesisSourceConfigurationArgsPtrType)(v)
}

func (*firehoseDeliveryStreamKinesisSourceConfigurationArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamKinesisSourceConfigurationArgs)(nil)).Elem()
}

func (i *firehoseDeliveryStreamKinesisSourceConfigurationArgsPtrType) ToFirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutput() FirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamKinesisSourceConfigurationArgsPtrType) ToFirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutput)
}

type FirehoseDeliveryStreamKinesisSourceConfigurationArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamKinesisSourceConfigurationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamKinesisSourceConfigurationArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationArgsOutput) ToFirehoseDeliveryStreamKinesisSourceConfigurationArgsOutput() FirehoseDeliveryStreamKinesisSourceConfigurationArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationArgsOutput) ToFirehoseDeliveryStreamKinesisSourceConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationArgsOutput) ToFirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutput() FirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutput {
	return o.ToFirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationArgsOutput) ToFirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamKinesisSourceConfigurationArgs) *FirehoseDeliveryStreamKinesisSourceConfigurationArgs {
		return &v
	}).(FirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutput)
}

// The kinesis stream used as the source of the firehose delivery stream.
func (o FirehoseDeliveryStreamKinesisSourceConfigurationArgsOutput) KinesisStreamArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamKinesisSourceConfigurationArgs) string { return v.KinesisStreamArn }).(pulumi.StringOutput)
}

// The ARN of the role that provides access to the source Kinesis stream.
func (o FirehoseDeliveryStreamKinesisSourceConfigurationArgsOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamKinesisSourceConfigurationArgs) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamKinesisSourceConfigurationArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutput) ToFirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutput() FirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutput) ToFirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutput) Elem() FirehoseDeliveryStreamKinesisSourceConfigurationArgsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamKinesisSourceConfigurationArgs) FirehoseDeliveryStreamKinesisSourceConfigurationArgs {
		return *v
	}).(FirehoseDeliveryStreamKinesisSourceConfigurationArgsOutput)
}

// The kinesis stream used as the source of the firehose delivery stream.
func (o FirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutput) KinesisStreamArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamKinesisSourceConfigurationArgs) string { return v.KinesisStreamArn }).(pulumi.StringOutput)
}

// The ARN of the role that provides access to the source Kinesis stream.
func (o FirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamKinesisSourceConfigurationArgs) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamKinesisSourceConfigurationState struct {
	// The kinesis stream used as the source of the firehose delivery stream.
	KinesisStreamArn string `pulumi:"kinesisStreamArn"`
	// The ARN of the role that provides access to the source Kinesis stream.
	RoleArn string `pulumi:"roleArn"`
}

type FirehoseDeliveryStreamKinesisSourceConfigurationStateInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamKinesisSourceConfigurationStateOutput() FirehoseDeliveryStreamKinesisSourceConfigurationStateOutput
	ToFirehoseDeliveryStreamKinesisSourceConfigurationStateOutputWithContext(context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationStateOutput
}

type FirehoseDeliveryStreamKinesisSourceConfigurationStateArgs struct {
	// The kinesis stream used as the source of the firehose delivery stream.
	KinesisStreamArn pulumi.StringInput `pulumi:"kinesisStreamArn"`
	// The ARN of the role that provides access to the source Kinesis stream.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (FirehoseDeliveryStreamKinesisSourceConfigurationStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamKinesisSourceConfigurationState)(nil)).Elem()
}

func (i FirehoseDeliveryStreamKinesisSourceConfigurationStateArgs) ToFirehoseDeliveryStreamKinesisSourceConfigurationStateOutput() FirehoseDeliveryStreamKinesisSourceConfigurationStateOutput {
	return i.ToFirehoseDeliveryStreamKinesisSourceConfigurationStateOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamKinesisSourceConfigurationStateArgs) ToFirehoseDeliveryStreamKinesisSourceConfigurationStateOutputWithContext(ctx context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamKinesisSourceConfigurationStateOutput)
}

type FirehoseDeliveryStreamKinesisSourceConfigurationStateOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamKinesisSourceConfigurationStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamKinesisSourceConfigurationState)(nil)).Elem()
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationStateOutput) ToFirehoseDeliveryStreamKinesisSourceConfigurationStateOutput() FirehoseDeliveryStreamKinesisSourceConfigurationStateOutput {
	return o
}

func (o FirehoseDeliveryStreamKinesisSourceConfigurationStateOutput) ToFirehoseDeliveryStreamKinesisSourceConfigurationStateOutputWithContext(ctx context.Context) FirehoseDeliveryStreamKinesisSourceConfigurationStateOutput {
	return o
}

// The kinesis stream used as the source of the firehose delivery stream.
func (o FirehoseDeliveryStreamKinesisSourceConfigurationStateOutput) KinesisStreamArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamKinesisSourceConfigurationState) string { return v.KinesisStreamArn }).(pulumi.StringOutput)
}

// The ARN of the role that provides access to the source Kinesis stream.
func (o FirehoseDeliveryStreamKinesisSourceConfigurationStateOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamKinesisSourceConfigurationState) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamRedshiftConfiguration struct {
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The jdbcurl of the redshift cluster.
	ClusterJdbcurl string `pulumi:"clusterJdbcurl"`
	// Copy options for copying the data from the s3 intermediate bucket into redshift, for example to change the default delimiter. For valid values, see the [AWS documentation](http://docs.aws.amazon.com/firehose/latest/APIReference/API_CopyCommand.html)
	CopyOptions *string `pulumi:"copyOptions"`
	// The data table columns that will be targeted by the copy command.
	DataTableColumns *string `pulumi:"dataTableColumns"`
	// The name of the table in the redshift cluster that the s3 bucket will copy to.
	DataTableName string `pulumi:"dataTableName"`
	// The password for the username above.
	Password string `pulumi:"password"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration *FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration `pulumi:"processingConfiguration"`
	// The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.
	RetryDuration *int `pulumi:"retryDuration"`
	// The arn of the role the stream assumes.
	RoleArn string `pulumi:"roleArn"`
	// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
	S3BackupConfiguration *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration `pulumi:"s3BackupConfiguration"`
	// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
	S3BackupMode *string `pulumi:"s3BackupMode"`
	// The username that the firehose delivery stream will assume. It is strongly recommended that the username and password provided is used exclusively for Amazon Kinesis Firehose purposes, and that the permissions for the account are restricted for Amazon Redshift INSERT permissions.
	Username string `pulumi:"username"`
}

type FirehoseDeliveryStreamRedshiftConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationArgs struct {
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsInput `pulumi:"cloudwatchLoggingOptions"`
	// The jdbcurl of the redshift cluster.
	ClusterJdbcurl pulumi.StringInput `pulumi:"clusterJdbcurl"`
	// Copy options for copying the data from the s3 intermediate bucket into redshift, for example to change the default delimiter. For valid values, see the [AWS documentation](http://docs.aws.amazon.com/firehose/latest/APIReference/API_CopyCommand.html)
	CopyOptions pulumi.StringPtrInput `pulumi:"copyOptions"`
	// The data table columns that will be targeted by the copy command.
	DataTableColumns pulumi.StringPtrInput `pulumi:"dataTableColumns"`
	// The name of the table in the redshift cluster that the s3 bucket will copy to.
	DataTableName pulumi.StringInput `pulumi:"dataTableName"`
	// The password for the username above.
	Password pulumi.StringInput `pulumi:"password"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.
	RetryDuration pulumi.IntPtrInput `pulumi:"retryDuration"`
	// The arn of the role the stream assumes.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
	S3BackupConfiguration FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrInput `pulumi:"s3BackupConfiguration"`
	// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
	S3BackupMode pulumi.StringPtrInput `pulumi:"s3BackupMode"`
	// The username that the firehose delivery stream will assume. It is strongly recommended that the username and password provided is used exclusively for Amazon Kinesis Firehose purposes, and that the permissions for the account are restricted for Amazon Redshift INSERT permissions.
	Username pulumi.StringInput `pulumi:"username"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationOutput)
}

func (i FirehoseDeliveryStreamRedshiftConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationOutput).ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamRedshiftConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationPtrOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationPtrOutput
}

type firehoseDeliveryStreamRedshiftConfigurationPtrType FirehoseDeliveryStreamRedshiftConfigurationArgs

func FirehoseDeliveryStreamRedshiftConfigurationPtr(v *FirehoseDeliveryStreamRedshiftConfigurationArgs) FirehoseDeliveryStreamRedshiftConfigurationPtrInput {
	return (*firehoseDeliveryStreamRedshiftConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamRedshiftConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamRedshiftConfigurationPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamRedshiftConfigurationPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *FirehoseDeliveryStreamRedshiftConfiguration {
		return &v
	}).(FirehoseDeliveryStreamRedshiftConfigurationPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput)
}

// The jdbcurl of the redshift cluster.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) ClusterJdbcurl() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) string { return v.ClusterJdbcurl }).(pulumi.StringOutput)
}

// Copy options for copying the data from the s3 intermediate bucket into redshift, for example to change the default delimiter. For valid values, see the [AWS documentation](http://docs.aws.amazon.com/firehose/latest/APIReference/API_CopyCommand.html)
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) CopyOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *string { return v.CopyOptions }).(pulumi.StringPtrOutput)
}

// The data table columns that will be targeted by the copy command.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) DataTableColumns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *string { return v.DataTableColumns }).(pulumi.StringPtrOutput)
}

// The name of the table in the redshift cluster that the s3 bucket will copy to.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) DataTableName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) string { return v.DataTableName }).(pulumi.StringOutput)
}

// The password for the username above.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) ProcessingConfiguration() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput)
}

// The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *int { return v.RetryDuration }).(pulumi.IntPtrOutput)
}

// The arn of the role the stream assumes.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) S3BackupConfiguration() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration {
		return v.S3BackupConfiguration
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput)
}

// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

// The username that the firehose delivery stream will assume. It is strongly recommended that the username and password provided is used exclusively for Amazon Kinesis Firehose purposes, and that the permissions for the account are restricted for Amazon Redshift INSERT permissions.
func (o FirehoseDeliveryStreamRedshiftConfigurationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) string { return v.Username }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) Elem() FirehoseDeliveryStreamRedshiftConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfiguration) FirehoseDeliveryStreamRedshiftConfiguration {
		return *v
	}).(FirehoseDeliveryStreamRedshiftConfigurationOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput)
}

// The jdbcurl of the redshift cluster.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) ClusterJdbcurl() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) string { return v.ClusterJdbcurl }).(pulumi.StringOutput)
}

// Copy options for copying the data from the s3 intermediate bucket into redshift, for example to change the default delimiter. For valid values, see the [AWS documentation](http://docs.aws.amazon.com/firehose/latest/APIReference/API_CopyCommand.html)
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) CopyOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *string { return v.CopyOptions }).(pulumi.StringPtrOutput)
}

// The data table columns that will be targeted by the copy command.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) DataTableColumns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *string { return v.DataTableColumns }).(pulumi.StringPtrOutput)
}

// The name of the table in the redshift cluster that the s3 bucket will copy to.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) DataTableName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) string { return v.DataTableName }).(pulumi.StringOutput)
}

// The password for the username above.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) ProcessingConfiguration() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput)
}

// The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *int { return v.RetryDuration }).(pulumi.IntPtrOutput)
}

// The arn of the role the stream assumes.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) S3BackupConfiguration() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration {
		return v.S3BackupConfiguration
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput)
}

// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

// The username that the firehose delivery stream will assume. It is strongly recommended that the username and password provided is used exclusively for Amazon Kinesis Firehose purposes, and that the permissions for the account are restricted for Amazon Redshift INSERT permissions.
func (o FirehoseDeliveryStreamRedshiftConfigurationPtrOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfiguration) string { return v.Username }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationArgs struct {
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs `pulumi:"cloudwatchLoggingOptions"`
	// The jdbcurl of the redshift cluster.
	ClusterJdbcurl string `pulumi:"clusterJdbcurl"`
	// Copy options for copying the data from the s3 intermediate bucket into redshift, for example to change the default delimiter. For valid values, see the [AWS documentation](http://docs.aws.amazon.com/firehose/latest/APIReference/API_CopyCommand.html)
	CopyOptions *string `pulumi:"copyOptions"`
	// The data table columns that will be targeted by the copy command.
	DataTableColumns *string `pulumi:"dataTableColumns"`
	// The name of the table in the redshift cluster that the s3 bucket will copy to.
	DataTableName string `pulumi:"dataTableName"`
	// The password for the username above.
	Password string `pulumi:"password"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration *FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs `pulumi:"processingConfiguration"`
	// The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.
	RetryDuration *int `pulumi:"retryDuration"`
	// The arn of the role the stream assumes.
	RoleArn string `pulumi:"roleArn"`
	// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
	S3BackupConfiguration *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs `pulumi:"s3BackupConfiguration"`
	// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
	S3BackupMode *string `pulumi:"s3BackupMode"`
	// The username that the firehose delivery stream will assume. It is strongly recommended that the username and password provided is used exclusively for Amazon Kinesis Firehose purposes, and that the permissions for the account are restricted for Amazon Redshift INSERT permissions.
	Username string `pulumi:"username"`
}

type FirehoseDeliveryStreamRedshiftConfigurationArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationArgsOutput() FirehoseDeliveryStreamRedshiftConfigurationArgsOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationArgsOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationArgsOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationArgsArgs struct {
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The jdbcurl of the redshift cluster.
	ClusterJdbcurl pulumi.StringInput `pulumi:"clusterJdbcurl"`
	// Copy options for copying the data from the s3 intermediate bucket into redshift, for example to change the default delimiter. For valid values, see the [AWS documentation](http://docs.aws.amazon.com/firehose/latest/APIReference/API_CopyCommand.html)
	CopyOptions pulumi.StringPtrInput `pulumi:"copyOptions"`
	// The data table columns that will be targeted by the copy command.
	DataTableColumns pulumi.StringPtrInput `pulumi:"dataTableColumns"`
	// The name of the table in the redshift cluster that the s3 bucket will copy to.
	DataTableName pulumi.StringInput `pulumi:"dataTableName"`
	// The password for the username above.
	Password pulumi.StringInput `pulumi:"password"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrInput `pulumi:"processingConfiguration"`
	// The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.
	RetryDuration pulumi.IntPtrInput `pulumi:"retryDuration"`
	// The arn of the role the stream assumes.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
	S3BackupConfiguration FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrInput `pulumi:"s3BackupConfiguration"`
	// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
	S3BackupMode pulumi.StringPtrInput `pulumi:"s3BackupMode"`
	// The username that the firehose delivery stream will assume. It is strongly recommended that the username and password provided is used exclusively for Amazon Kinesis Firehose purposes, and that the permissions for the account are restricted for Amazon Redshift INSERT permissions.
	Username pulumi.StringInput `pulumi:"username"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationArgsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationArgsOutput() FirehoseDeliveryStreamRedshiftConfigurationArgsOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationArgsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationArgsOutput)
}

func (i FirehoseDeliveryStreamRedshiftConfigurationArgsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationArgsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationArgsOutput).ToFirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamRedshiftConfigurationArgsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput
}

type firehoseDeliveryStreamRedshiftConfigurationArgsPtrType FirehoseDeliveryStreamRedshiftConfigurationArgsArgs

func FirehoseDeliveryStreamRedshiftConfigurationArgsPtr(v *FirehoseDeliveryStreamRedshiftConfigurationArgsArgs) FirehoseDeliveryStreamRedshiftConfigurationArgsPtrInput {
	return (*firehoseDeliveryStreamRedshiftConfigurationArgsPtrType)(v)
}

func (*firehoseDeliveryStreamRedshiftConfigurationArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationArgs)(nil)).Elem()
}

func (i *firehoseDeliveryStreamRedshiftConfigurationArgsPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamRedshiftConfigurationArgsPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationArgsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationArgsOutput() FirehoseDeliveryStreamRedshiftConfigurationArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationArgsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationArgsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput {
	return o.ToFirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamRedshiftConfigurationArgsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationArgs) *FirehoseDeliveryStreamRedshiftConfigurationArgs {
		return &v
	}).(FirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationArgsOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationArgs) *FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutput)
}

// The jdbcurl of the redshift cluster.
func (o FirehoseDeliveryStreamRedshiftConfigurationArgsOutput) ClusterJdbcurl() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationArgs) string { return v.ClusterJdbcurl }).(pulumi.StringOutput)
}

// Copy options for copying the data from the s3 intermediate bucket into redshift, for example to change the default delimiter. For valid values, see the [AWS documentation](http://docs.aws.amazon.com/firehose/latest/APIReference/API_CopyCommand.html)
func (o FirehoseDeliveryStreamRedshiftConfigurationArgsOutput) CopyOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationArgs) *string { return v.CopyOptions }).(pulumi.StringPtrOutput)
}

// The data table columns that will be targeted by the copy command.
func (o FirehoseDeliveryStreamRedshiftConfigurationArgsOutput) DataTableColumns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationArgs) *string { return v.DataTableColumns }).(pulumi.StringPtrOutput)
}

// The name of the table in the redshift cluster that the s3 bucket will copy to.
func (o FirehoseDeliveryStreamRedshiftConfigurationArgsOutput) DataTableName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationArgs) string { return v.DataTableName }).(pulumi.StringOutput)
}

// The password for the username above.
func (o FirehoseDeliveryStreamRedshiftConfigurationArgsOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationArgs) string { return v.Password }).(pulumi.StringOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamRedshiftConfigurationArgsOutput) ProcessingConfiguration() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationArgs) *FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutput)
}

// The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.
func (o FirehoseDeliveryStreamRedshiftConfigurationArgsOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationArgs) *int { return v.RetryDuration }).(pulumi.IntPtrOutput)
}

// The arn of the role the stream assumes.
func (o FirehoseDeliveryStreamRedshiftConfigurationArgsOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationArgs) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
func (o FirehoseDeliveryStreamRedshiftConfigurationArgsOutput) S3BackupConfiguration() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationArgs) *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs {
		return v.S3BackupConfiguration
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput)
}

// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
func (o FirehoseDeliveryStreamRedshiftConfigurationArgsOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationArgs) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

// The username that the firehose delivery stream will assume. It is strongly recommended that the username and password provided is used exclusively for Amazon Kinesis Firehose purposes, and that the permissions for the account are restricted for Amazon Redshift INSERT permissions.
func (o FirehoseDeliveryStreamRedshiftConfigurationArgsOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationArgs) string { return v.Username }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput) Elem() FirehoseDeliveryStreamRedshiftConfigurationArgsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationArgs) FirehoseDeliveryStreamRedshiftConfigurationArgs {
		return *v
	}).(FirehoseDeliveryStreamRedshiftConfigurationArgsOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationArgs) *FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutput)
}

// The jdbcurl of the redshift cluster.
func (o FirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput) ClusterJdbcurl() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationArgs) string { return v.ClusterJdbcurl }).(pulumi.StringOutput)
}

// Copy options for copying the data from the s3 intermediate bucket into redshift, for example to change the default delimiter. For valid values, see the [AWS documentation](http://docs.aws.amazon.com/firehose/latest/APIReference/API_CopyCommand.html)
func (o FirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput) CopyOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationArgs) *string { return v.CopyOptions }).(pulumi.StringPtrOutput)
}

// The data table columns that will be targeted by the copy command.
func (o FirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput) DataTableColumns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationArgs) *string { return v.DataTableColumns }).(pulumi.StringPtrOutput)
}

// The name of the table in the redshift cluster that the s3 bucket will copy to.
func (o FirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput) DataTableName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationArgs) string { return v.DataTableName }).(pulumi.StringOutput)
}

// The password for the username above.
func (o FirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationArgs) string { return v.Password }).(pulumi.StringOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput) ProcessingConfiguration() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationArgs) *FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutput)
}

// The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.
func (o FirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationArgs) *int { return v.RetryDuration }).(pulumi.IntPtrOutput)
}

// The arn of the role the stream assumes.
func (o FirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationArgs) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
func (o FirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput) S3BackupConfiguration() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationArgs) *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs {
		return v.S3BackupConfiguration
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput)
}

// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
func (o FirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationArgs) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

// The username that the firehose delivery stream will assume. It is strongly recommended that the username and password provided is used exclusively for Amazon Kinesis Firehose purposes, and that the permissions for the account are restricted for Amazon Redshift INSERT permissions.
func (o FirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationArgs) string { return v.Username }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

type FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

type FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsOutput)
}

func (i FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsOutput).ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutput
}

type firehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrType FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsArgs

func FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtr(v *FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsArgs) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrInput {
	return (*firehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrType)(v)
}

func (*firehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (i *firehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o.ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs) *FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs {
		return &v
	}).(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutput) Elem() FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs {
		return *v
	}).(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgs) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration struct {
	// Enables or disables data processing.
	Enabled *bool `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors []FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor `pulumi:"processors"`
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs struct {
	// Enables or disables data processing.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayInput `pulumi:"processors"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput)
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput).ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput
}

type firehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrType FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs

func FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtr(v *FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrInput {
	return (*firehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration {
		return &v
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput) Processors() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration) []FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput) Elem() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration {
		return *v
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput) Processors() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration) []FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs struct {
	// Enables or disables data processing.
	Enabled *bool `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors []FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs `pulumi:"processors"`
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsArgs struct {
	// Enables or disables data processing.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArrayInput `pulumi:"processors"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsOutput)
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsOutput).ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutput
}

type firehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrType FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsArgs

func FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtr(v *FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsArgs) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrInput {
	return (*firehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrType)(v)
}

func (*firehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs)(nil)).Elem()
}

func (i *firehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutput {
	return o.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs) *FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs {
		return &v
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsOutput) Processors() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs) []FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs {
		return v.Processors
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArrayOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutput) Elem() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs {
		return *v
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutput) Processors() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgs) []FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs {
		return v.Processors
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArrayOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor struct {
	// Array of processor parameters. More details are given below
	Parameters []FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type string `pulumi:"type"`
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs struct {
	// Array of processor parameters. More details are given below
	Parameters FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayInput `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type pulumi.StringInput `pulumi:"type"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArray []FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorInput

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput {
	return o
}

// Array of processor parameters. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput) Parameters() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor) []FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter {
		return v.Parameters
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput)
}

// The type of processor. Valid Values: `Lambda`
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor {
		return vs[0].([]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor)[vs[1].(int)]
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs struct {
	// Array of processor parameters. More details are given below
	Parameters []FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type string `pulumi:"type"`
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArgs struct {
	// Array of processor parameters. More details are given below
	Parameters FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArrayInput `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type pulumi.StringInput `pulumi:"type"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArrayOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArrayOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArrayOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArrayOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArray []FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsInput

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArray) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArrayOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArrayOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArray) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArrayOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsOutput {
	return o
}

// Array of processor parameters. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsOutput) Parameters() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs) []FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs {
		return v.Parameters
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput)
}

// The type of processor. Valid Values: `Lambda`
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArrayOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArrayOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArrayOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs {
		return vs[0].([]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgs)[vs[1].(int)]
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName string `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue string `pulumi:"parameterValue"`
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName pulumi.StringInput `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArray []FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterInput

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput {
	return o
}

// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter) string {
		return v.ParameterName
	}).(pulumi.StringOutput)
}

// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter) string {
		return v.ParameterValue
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter {
		return vs[0].([]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter)[vs[1].(int)]
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName string `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue string `pulumi:"parameterValue"`
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArgs struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName pulumi.StringInput `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArrayOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArray []FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsInput

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArray) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArray) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsOutput {
	return o
}

// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs) string {
		return v.ParameterName
	}).(pulumi.StringOutput)
}

// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs) string {
		return v.ParameterValue
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput() FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput) ToFirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs {
		return vs[0].([]FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgs)[vs[1].(int)]
	}).(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration struct {
	// The ARN of the S3 bucket
	BucketArn string `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval *int `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize *int `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat *string `pulumi:"compressionFormat"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix *string `pulumi:"prefix"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn string `pulumi:"roleArn"`
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs struct {
	// The ARN of the S3 bucket
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval pulumi.IntPtrInput `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize pulumi.IntPtrInput `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsInput `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat pulumi.StringPtrInput `pulumi:"compressionFormat"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput)
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput).ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput
}

type firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrType FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs

func FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtr(v *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrInput {
	return (*firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration {
		return &v
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *int {
		return v.BufferInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *int { return v.BufferSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *string {
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) Elem() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration {
		return *v
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *int {
		return v.BufferInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *int { return v.BufferSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *string {
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs struct {
	// The ARN of the S3 bucket
	BucketArn string `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval *int `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize *int `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat *string `pulumi:"compressionFormat"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix *string `pulumi:"prefix"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn string `pulumi:"roleArn"`
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsArgs struct {
	// The ARN of the S3 bucket
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval pulumi.IntPtrInput `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize pulumi.IntPtrInput `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat pulumi.StringPtrInput `pulumi:"compressionFormat"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutput)
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutput).ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput
}

type firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrType FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsArgs

func FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtr(v *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsArgs) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrInput {
	return (*firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrType)(v)
}

func (*firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs)(nil)).Elem()
}

func (i *firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput {
	return o.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs {
		return &v
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) string {
		return v.BucketArn
	}).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) *int {
		return v.BufferInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) *int {
		return v.BufferSize
	}).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) *string {
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) *string {
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput) Elem() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs {
		return *v
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) string {
		return v.BucketArn
	}).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) *int {
		return v.BufferInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) *int {
		return v.BufferSize
	}).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) *string {
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) *string {
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgs) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput)
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput).ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput
}

type firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrType FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsArgs

func FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtr(v *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsArgs) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrInput {
	return (*firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrType)(v)
}

func (*firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (i *firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o.ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs {
		return &v
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput) Elem() FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs {
		return *v
	}).(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgs) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationState struct {
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The jdbcurl of the redshift cluster.
	ClusterJdbcurl string `pulumi:"clusterJdbcurl"`
	// Copy options for copying the data from the s3 intermediate bucket into redshift, for example to change the default delimiter. For valid values, see the [AWS documentation](http://docs.aws.amazon.com/firehose/latest/APIReference/API_CopyCommand.html)
	CopyOptions *string `pulumi:"copyOptions"`
	// The data table columns that will be targeted by the copy command.
	DataTableColumns *string `pulumi:"dataTableColumns"`
	// The name of the table in the redshift cluster that the s3 bucket will copy to.
	DataTableName string `pulumi:"dataTableName"`
	// The password for the username above.
	Password string `pulumi:"password"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration *FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfiguration `pulumi:"processingConfiguration"`
	// The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.
	RetryDuration *int `pulumi:"retryDuration"`
	// The arn of the role the stream assumes.
	RoleArn string `pulumi:"roleArn"`
	// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
	S3BackupConfiguration *FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfiguration `pulumi:"s3BackupConfiguration"`
	// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
	S3BackupMode *string `pulumi:"s3BackupMode"`
	// The username that the firehose delivery stream will assume. It is strongly recommended that the username and password provided is used exclusively for Amazon Kinesis Firehose purposes, and that the permissions for the account are restricted for Amazon Redshift INSERT permissions.
	Username string `pulumi:"username"`
}

type FirehoseDeliveryStreamRedshiftConfigurationStateInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationStateOutput() FirehoseDeliveryStreamRedshiftConfigurationStateOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationStateOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationStateArgs struct {
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The jdbcurl of the redshift cluster.
	ClusterJdbcurl pulumi.StringInput `pulumi:"clusterJdbcurl"`
	// Copy options for copying the data from the s3 intermediate bucket into redshift, for example to change the default delimiter. For valid values, see the [AWS documentation](http://docs.aws.amazon.com/firehose/latest/APIReference/API_CopyCommand.html)
	CopyOptions pulumi.StringPtrInput `pulumi:"copyOptions"`
	// The data table columns that will be targeted by the copy command.
	DataTableColumns pulumi.StringPtrInput `pulumi:"dataTableColumns"`
	// The name of the table in the redshift cluster that the s3 bucket will copy to.
	DataTableName pulumi.StringInput `pulumi:"dataTableName"`
	// The password for the username above.
	Password pulumi.StringInput `pulumi:"password"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.
	RetryDuration pulumi.IntPtrInput `pulumi:"retryDuration"`
	// The arn of the role the stream assumes.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
	S3BackupConfiguration FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrInput `pulumi:"s3BackupConfiguration"`
	// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
	S3BackupMode pulumi.StringPtrInput `pulumi:"s3BackupMode"`
	// The username that the firehose delivery stream will assume. It is strongly recommended that the username and password provided is used exclusively for Amazon Kinesis Firehose purposes, and that the permissions for the account are restricted for Amazon Redshift INSERT permissions.
	Username pulumi.StringInput `pulumi:"username"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationState)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationStateArgs) ToFirehoseDeliveryStreamRedshiftConfigurationStateOutput() FirehoseDeliveryStreamRedshiftConfigurationStateOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationStateOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationStateArgs) ToFirehoseDeliveryStreamRedshiftConfigurationStateOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationStateOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationStateOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationState)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateOutput() FirehoseDeliveryStreamRedshiftConfigurationStateOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateOutput {
	return o
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationStateOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationState) *FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutput)
}

// The jdbcurl of the redshift cluster.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateOutput) ClusterJdbcurl() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationState) string { return v.ClusterJdbcurl }).(pulumi.StringOutput)
}

// Copy options for copying the data from the s3 intermediate bucket into redshift, for example to change the default delimiter. For valid values, see the [AWS documentation](http://docs.aws.amazon.com/firehose/latest/APIReference/API_CopyCommand.html)
func (o FirehoseDeliveryStreamRedshiftConfigurationStateOutput) CopyOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationState) *string { return v.CopyOptions }).(pulumi.StringPtrOutput)
}

// The data table columns that will be targeted by the copy command.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateOutput) DataTableColumns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationState) *string { return v.DataTableColumns }).(pulumi.StringPtrOutput)
}

// The name of the table in the redshift cluster that the s3 bucket will copy to.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateOutput) DataTableName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationState) string { return v.DataTableName }).(pulumi.StringOutput)
}

// The password for the username above.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationState) string { return v.Password }).(pulumi.StringOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateOutput) ProcessingConfiguration() FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationState) *FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutput)
}

// The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of DurationInSeconds is 0 (zero) or if the first delivery attempt takes longer than the current value.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationState) *int { return v.RetryDuration }).(pulumi.IntPtrOutput)
}

// The arn of the role the stream assumes.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationState) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateOutput) S3BackupConfiguration() FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationState) *FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfiguration {
		return v.S3BackupConfiguration
	}).(FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput)
}

// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationState) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

// The username that the firehose delivery stream will assume. It is strongly recommended that the username and password provided is used exclusively for Amazon Kinesis Firehose purposes, and that the permissions for the account are restricted for Amazon Redshift INSERT permissions.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationState) string { return v.Username }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

type FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrInput {
	return (*firehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptions) *FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptions) FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptions {
		return *v
	}).(FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfiguration struct {
	// Enables or disables data processing.
	Enabled *bool `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors []FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessor `pulumi:"processors"`
}

type FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationArgs struct {
	// Enables or disables data processing.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArrayInput `pulumi:"processors"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationOutput)
}

func (i FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationOutput).ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutput
}

type firehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrType FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationArgs

func FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtr(v *FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationArgs) FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrInput {
	return (*firehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfiguration {
		return &v
	}).(FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfiguration) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationOutput) Processors() FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfiguration) []FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutput) Elem() FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfiguration) FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfiguration {
		return *v
	}).(FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfiguration) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutput) Processors() FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfiguration) []FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessor struct {
	// Array of processor parameters. More details are given below
	Parameters []FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameter `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type string `pulumi:"type"`
}

type FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArgs struct {
	// Array of processor parameters. More details are given below
	Parameters FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArrayInput `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type pulumi.StringInput `pulumi:"type"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArrayOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArrayOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArrayOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArray []FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorInput

func (FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArrayOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorOutput {
	return o
}

// Array of processor parameters. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorOutput) Parameters() FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessor) []FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameter {
		return v.Parameters
	}).(FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArrayOutput)
}

// The type of processor. Valid Values: `Lambda`
func (o FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessor) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessor {
		return vs[0].([]FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessor)[vs[1].(int)]
	}).(FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameter struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName string `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue string `pulumi:"parameterValue"`
}

type FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArgs struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName pulumi.StringInput `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArrayOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArrayOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArray []FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterInput

func (FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArrayOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArrayOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterOutput {
	return o
}

// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
func (o FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameter) string {
		return v.ParameterName
	}).(pulumi.StringOutput)
}

// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameter) string {
		return v.ParameterValue
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameter {
		return vs[0].([]FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameter)[vs[1].(int)]
	}).(FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfiguration struct {
	// The ARN of the S3 bucket
	BucketArn string `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval *int `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize *int `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat *string `pulumi:"compressionFormat"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix *string `pulumi:"prefix"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn string `pulumi:"roleArn"`
}

type FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationArgs struct {
	// The ARN of the S3 bucket
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval pulumi.IntPtrInput `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize pulumi.IntPtrInput `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat pulumi.StringPtrInput `pulumi:"compressionFormat"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutput)
}

func (i FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationArgs) ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutput).ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput
}

type firehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrType FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationArgs

func FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtr(v *FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationArgs) FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrInput {
	return (*firehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutput() FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfiguration {
		return &v
	}).(FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfiguration) string {
		return v.BucketArn
	}).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfiguration) *int {
		return v.BufferInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfiguration) *int {
		return v.BufferSize
	}).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfiguration) *string {
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfiguration) *string {
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfiguration) *string {
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfiguration) string {
		return v.RoleArn
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput) Elem() FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfiguration) FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfiguration {
		return *v
	}).(FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfiguration) string {
		return v.BucketArn
	}).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfiguration) *int {
		return v.BufferInterval
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfiguration) *int {
		return v.BufferSize
	}).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfiguration) *FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfiguration) *string {
		return v.CompressionFormat
	}).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfiguration) *string {
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfiguration) *string {
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfiguration) string {
		return v.RoleArn
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

type FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrInput {
	return (*firehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions) *FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions) FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions {
		return *v
	}).(FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamS3Configuration struct {
	// The ARN of the S3 bucket
	BucketArn string `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval *int `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize *int `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat *string `pulumi:"compressionFormat"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix *string `pulumi:"prefix"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn string `pulumi:"roleArn"`
}

type FirehoseDeliveryStreamS3ConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamS3ConfigurationOutput() FirehoseDeliveryStreamS3ConfigurationOutput
	ToFirehoseDeliveryStreamS3ConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamS3ConfigurationOutput
}

type FirehoseDeliveryStreamS3ConfigurationArgs struct {
	// The ARN of the S3 bucket
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval pulumi.IntPtrInput `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize pulumi.IntPtrInput `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsInput `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat pulumi.StringPtrInput `pulumi:"compressionFormat"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (FirehoseDeliveryStreamS3ConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamS3Configuration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamS3ConfigurationArgs) ToFirehoseDeliveryStreamS3ConfigurationOutput() FirehoseDeliveryStreamS3ConfigurationOutput {
	return i.ToFirehoseDeliveryStreamS3ConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamS3ConfigurationArgs) ToFirehoseDeliveryStreamS3ConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamS3ConfigurationOutput)
}

func (i FirehoseDeliveryStreamS3ConfigurationArgs) ToFirehoseDeliveryStreamS3ConfigurationPtrOutput() FirehoseDeliveryStreamS3ConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamS3ConfigurationArgs) ToFirehoseDeliveryStreamS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamS3ConfigurationOutput).ToFirehoseDeliveryStreamS3ConfigurationPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamS3ConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamS3ConfigurationPtrOutput() FirehoseDeliveryStreamS3ConfigurationPtrOutput
	ToFirehoseDeliveryStreamS3ConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamS3ConfigurationPtrOutput
}

type firehoseDeliveryStreamS3ConfigurationPtrType FirehoseDeliveryStreamS3ConfigurationArgs

func FirehoseDeliveryStreamS3ConfigurationPtr(v *FirehoseDeliveryStreamS3ConfigurationArgs) FirehoseDeliveryStreamS3ConfigurationPtrInput {
	return (*firehoseDeliveryStreamS3ConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamS3ConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamS3Configuration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamS3ConfigurationPtrType) ToFirehoseDeliveryStreamS3ConfigurationPtrOutput() FirehoseDeliveryStreamS3ConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamS3ConfigurationPtrType) ToFirehoseDeliveryStreamS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamS3ConfigurationPtrOutput)
}

type FirehoseDeliveryStreamS3ConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamS3ConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamS3Configuration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamS3ConfigurationOutput) ToFirehoseDeliveryStreamS3ConfigurationOutput() FirehoseDeliveryStreamS3ConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamS3ConfigurationOutput) ToFirehoseDeliveryStreamS3ConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamS3ConfigurationOutput) ToFirehoseDeliveryStreamS3ConfigurationPtrOutput() FirehoseDeliveryStreamS3ConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamS3ConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamS3ConfigurationOutput) ToFirehoseDeliveryStreamS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) *FirehoseDeliveryStreamS3Configuration {
		return &v
	}).(FirehoseDeliveryStreamS3ConfigurationPtrOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamS3ConfigurationOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamS3ConfigurationOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) *int { return v.BufferInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamS3ConfigurationOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) *int { return v.BufferSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamS3ConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamS3ConfigurationOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) *string { return v.CompressionFormat }).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamS3ConfigurationOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamS3ConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamS3ConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamS3ConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamS3ConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamS3Configuration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamS3ConfigurationPtrOutput) ToFirehoseDeliveryStreamS3ConfigurationPtrOutput() FirehoseDeliveryStreamS3ConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamS3ConfigurationPtrOutput) ToFirehoseDeliveryStreamS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamS3ConfigurationPtrOutput) Elem() FirehoseDeliveryStreamS3ConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamS3Configuration) FirehoseDeliveryStreamS3Configuration { return *v }).(FirehoseDeliveryStreamS3ConfigurationOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamS3ConfigurationPtrOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamS3ConfigurationPtrOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) *int { return v.BufferInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamS3ConfigurationPtrOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) *int { return v.BufferSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamS3ConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamS3ConfigurationPtrOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) *string { return v.CompressionFormat }).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamS3ConfigurationPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamS3ConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamS3ConfigurationPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3Configuration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamS3ConfigurationArgs struct {
	// The ARN of the S3 bucket
	BucketArn string `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval *int `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize *int `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat *string `pulumi:"compressionFormat"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix *string `pulumi:"prefix"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn string `pulumi:"roleArn"`
}

type FirehoseDeliveryStreamS3ConfigurationArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamS3ConfigurationArgsOutput() FirehoseDeliveryStreamS3ConfigurationArgsOutput
	ToFirehoseDeliveryStreamS3ConfigurationArgsOutputWithContext(context.Context) FirehoseDeliveryStreamS3ConfigurationArgsOutput
}

type FirehoseDeliveryStreamS3ConfigurationArgsArgs struct {
	// The ARN of the S3 bucket
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval pulumi.IntPtrInput `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize pulumi.IntPtrInput `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat pulumi.StringPtrInput `pulumi:"compressionFormat"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (FirehoseDeliveryStreamS3ConfigurationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamS3ConfigurationArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamS3ConfigurationArgsArgs) ToFirehoseDeliveryStreamS3ConfigurationArgsOutput() FirehoseDeliveryStreamS3ConfigurationArgsOutput {
	return i.ToFirehoseDeliveryStreamS3ConfigurationArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamS3ConfigurationArgsArgs) ToFirehoseDeliveryStreamS3ConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamS3ConfigurationArgsOutput)
}

func (i FirehoseDeliveryStreamS3ConfigurationArgsArgs) ToFirehoseDeliveryStreamS3ConfigurationArgsPtrOutput() FirehoseDeliveryStreamS3ConfigurationArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamS3ConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamS3ConfigurationArgsArgs) ToFirehoseDeliveryStreamS3ConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamS3ConfigurationArgsOutput).ToFirehoseDeliveryStreamS3ConfigurationArgsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamS3ConfigurationArgsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamS3ConfigurationArgsPtrOutput() FirehoseDeliveryStreamS3ConfigurationArgsPtrOutput
	ToFirehoseDeliveryStreamS3ConfigurationArgsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamS3ConfigurationArgsPtrOutput
}

type firehoseDeliveryStreamS3ConfigurationArgsPtrType FirehoseDeliveryStreamS3ConfigurationArgsArgs

func FirehoseDeliveryStreamS3ConfigurationArgsPtr(v *FirehoseDeliveryStreamS3ConfigurationArgsArgs) FirehoseDeliveryStreamS3ConfigurationArgsPtrInput {
	return (*firehoseDeliveryStreamS3ConfigurationArgsPtrType)(v)
}

func (*firehoseDeliveryStreamS3ConfigurationArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamS3ConfigurationArgs)(nil)).Elem()
}

func (i *firehoseDeliveryStreamS3ConfigurationArgsPtrType) ToFirehoseDeliveryStreamS3ConfigurationArgsPtrOutput() FirehoseDeliveryStreamS3ConfigurationArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamS3ConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamS3ConfigurationArgsPtrType) ToFirehoseDeliveryStreamS3ConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamS3ConfigurationArgsPtrOutput)
}

type FirehoseDeliveryStreamS3ConfigurationArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamS3ConfigurationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamS3ConfigurationArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamS3ConfigurationArgsOutput) ToFirehoseDeliveryStreamS3ConfigurationArgsOutput() FirehoseDeliveryStreamS3ConfigurationArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamS3ConfigurationArgsOutput) ToFirehoseDeliveryStreamS3ConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamS3ConfigurationArgsOutput) ToFirehoseDeliveryStreamS3ConfigurationArgsPtrOutput() FirehoseDeliveryStreamS3ConfigurationArgsPtrOutput {
	return o.ToFirehoseDeliveryStreamS3ConfigurationArgsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamS3ConfigurationArgsOutput) ToFirehoseDeliveryStreamS3ConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationArgs) *FirehoseDeliveryStreamS3ConfigurationArgs {
		return &v
	}).(FirehoseDeliveryStreamS3ConfigurationArgsPtrOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamS3ConfigurationArgsOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationArgs) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamS3ConfigurationArgsOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationArgs) *int { return v.BufferInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamS3ConfigurationArgsOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationArgs) *int { return v.BufferSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamS3ConfigurationArgsOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationArgs) *FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamS3ConfigurationArgsOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationArgs) *string { return v.CompressionFormat }).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamS3ConfigurationArgsOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationArgs) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamS3ConfigurationArgsOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationArgs) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamS3ConfigurationArgsOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationArgs) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamS3ConfigurationArgsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamS3ConfigurationArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamS3ConfigurationArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamS3ConfigurationArgsPtrOutput) ToFirehoseDeliveryStreamS3ConfigurationArgsPtrOutput() FirehoseDeliveryStreamS3ConfigurationArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamS3ConfigurationArgsPtrOutput) ToFirehoseDeliveryStreamS3ConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamS3ConfigurationArgsPtrOutput) Elem() FirehoseDeliveryStreamS3ConfigurationArgsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamS3ConfigurationArgs) FirehoseDeliveryStreamS3ConfigurationArgs {
		return *v
	}).(FirehoseDeliveryStreamS3ConfigurationArgsOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamS3ConfigurationArgsPtrOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationArgs) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamS3ConfigurationArgsPtrOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationArgs) *int { return v.BufferInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamS3ConfigurationArgsPtrOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationArgs) *int { return v.BufferSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamS3ConfigurationArgsPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationArgs) *FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamS3ConfigurationArgsPtrOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationArgs) *string { return v.CompressionFormat }).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamS3ConfigurationArgsPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationArgs) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamS3ConfigurationArgsPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationArgs) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamS3ConfigurationArgsPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationArgs) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

type FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput)
}

type FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptions) *string { return v.LogGroupName }).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptions) *string { return v.LogStreamName }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

type FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsOutput() FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsOutput
	ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsOutputWithContext(context.Context) FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsOutput
}

type FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsArgs) ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsOutput() FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsOutput {
	return i.ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsArgs) ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsOutput)
}

func (i FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsArgs) ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsArgs) ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsOutput).ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput
	ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput
}

type firehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrType FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsArgs

func FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtr(v *FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsArgs) FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrInput {
	return (*firehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrType)(v)
}

func (*firehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (i *firehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrType) ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrType) ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput)
}

type FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsOutput) ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsOutput() FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsOutput) ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsOutput) ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o.ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsOutput) ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs) *FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs {
		return &v
	}).(FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput) ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput) ToFirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput) Elem() FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs {
		return *v
	}).(FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgs) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamS3ConfigurationState struct {
	// The ARN of the S3 bucket
	BucketArn string `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval *int `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize *int `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions *FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat *string `pulumi:"compressionFormat"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix *string `pulumi:"prefix"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn string `pulumi:"roleArn"`
}

type FirehoseDeliveryStreamS3ConfigurationStateInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamS3ConfigurationStateOutput() FirehoseDeliveryStreamS3ConfigurationStateOutput
	ToFirehoseDeliveryStreamS3ConfigurationStateOutputWithContext(context.Context) FirehoseDeliveryStreamS3ConfigurationStateOutput
}

type FirehoseDeliveryStreamS3ConfigurationStateArgs struct {
	// The ARN of the S3 bucket
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval pulumi.IntPtrInput `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize pulumi.IntPtrInput `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below
	CloudwatchLoggingOptions FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat pulumi.StringPtrInput `pulumi:"compressionFormat"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (FirehoseDeliveryStreamS3ConfigurationStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamS3ConfigurationState)(nil)).Elem()
}

func (i FirehoseDeliveryStreamS3ConfigurationStateArgs) ToFirehoseDeliveryStreamS3ConfigurationStateOutput() FirehoseDeliveryStreamS3ConfigurationStateOutput {
	return i.ToFirehoseDeliveryStreamS3ConfigurationStateOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamS3ConfigurationStateArgs) ToFirehoseDeliveryStreamS3ConfigurationStateOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamS3ConfigurationStateOutput)
}

type FirehoseDeliveryStreamS3ConfigurationStateOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamS3ConfigurationStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamS3ConfigurationState)(nil)).Elem()
}

func (o FirehoseDeliveryStreamS3ConfigurationStateOutput) ToFirehoseDeliveryStreamS3ConfigurationStateOutput() FirehoseDeliveryStreamS3ConfigurationStateOutput {
	return o
}

func (o FirehoseDeliveryStreamS3ConfigurationStateOutput) ToFirehoseDeliveryStreamS3ConfigurationStateOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationStateOutput {
	return o
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamS3ConfigurationStateOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationState) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamS3ConfigurationStateOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationState) *int { return v.BufferInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamS3ConfigurationStateOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationState) *int { return v.BufferSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below
func (o FirehoseDeliveryStreamS3ConfigurationStateOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationState) *FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamS3ConfigurationStateOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationState) *string { return v.CompressionFormat }).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamS3ConfigurationStateOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationState) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamS3ConfigurationStateOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationState) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamS3ConfigurationStateOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationState) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

type FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrInput {
	return (*firehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput)
}

type FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptions) *FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptions) FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptions {
		return *v
	}).(FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamServerSideEncryption struct {
	// Whether to enable encryption at rest. Default is `false`.
	Enabled *bool `pulumi:"enabled"`
}

type FirehoseDeliveryStreamServerSideEncryptionInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamServerSideEncryptionOutput() FirehoseDeliveryStreamServerSideEncryptionOutput
	ToFirehoseDeliveryStreamServerSideEncryptionOutputWithContext(context.Context) FirehoseDeliveryStreamServerSideEncryptionOutput
}

type FirehoseDeliveryStreamServerSideEncryptionArgs struct {
	// Whether to enable encryption at rest. Default is `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (FirehoseDeliveryStreamServerSideEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamServerSideEncryption)(nil)).Elem()
}

func (i FirehoseDeliveryStreamServerSideEncryptionArgs) ToFirehoseDeliveryStreamServerSideEncryptionOutput() FirehoseDeliveryStreamServerSideEncryptionOutput {
	return i.ToFirehoseDeliveryStreamServerSideEncryptionOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamServerSideEncryptionArgs) ToFirehoseDeliveryStreamServerSideEncryptionOutputWithContext(ctx context.Context) FirehoseDeliveryStreamServerSideEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamServerSideEncryptionOutput)
}

func (i FirehoseDeliveryStreamServerSideEncryptionArgs) ToFirehoseDeliveryStreamServerSideEncryptionPtrOutput() FirehoseDeliveryStreamServerSideEncryptionPtrOutput {
	return i.ToFirehoseDeliveryStreamServerSideEncryptionPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamServerSideEncryptionArgs) ToFirehoseDeliveryStreamServerSideEncryptionPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamServerSideEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamServerSideEncryptionOutput).ToFirehoseDeliveryStreamServerSideEncryptionPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamServerSideEncryptionPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamServerSideEncryptionPtrOutput() FirehoseDeliveryStreamServerSideEncryptionPtrOutput
	ToFirehoseDeliveryStreamServerSideEncryptionPtrOutputWithContext(context.Context) FirehoseDeliveryStreamServerSideEncryptionPtrOutput
}

type firehoseDeliveryStreamServerSideEncryptionPtrType FirehoseDeliveryStreamServerSideEncryptionArgs

func FirehoseDeliveryStreamServerSideEncryptionPtr(v *FirehoseDeliveryStreamServerSideEncryptionArgs) FirehoseDeliveryStreamServerSideEncryptionPtrInput {
	return (*firehoseDeliveryStreamServerSideEncryptionPtrType)(v)
}

func (*firehoseDeliveryStreamServerSideEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamServerSideEncryption)(nil)).Elem()
}

func (i *firehoseDeliveryStreamServerSideEncryptionPtrType) ToFirehoseDeliveryStreamServerSideEncryptionPtrOutput() FirehoseDeliveryStreamServerSideEncryptionPtrOutput {
	return i.ToFirehoseDeliveryStreamServerSideEncryptionPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamServerSideEncryptionPtrType) ToFirehoseDeliveryStreamServerSideEncryptionPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamServerSideEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamServerSideEncryptionPtrOutput)
}

type FirehoseDeliveryStreamServerSideEncryptionOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamServerSideEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamServerSideEncryption)(nil)).Elem()
}

func (o FirehoseDeliveryStreamServerSideEncryptionOutput) ToFirehoseDeliveryStreamServerSideEncryptionOutput() FirehoseDeliveryStreamServerSideEncryptionOutput {
	return o
}

func (o FirehoseDeliveryStreamServerSideEncryptionOutput) ToFirehoseDeliveryStreamServerSideEncryptionOutputWithContext(ctx context.Context) FirehoseDeliveryStreamServerSideEncryptionOutput {
	return o
}

func (o FirehoseDeliveryStreamServerSideEncryptionOutput) ToFirehoseDeliveryStreamServerSideEncryptionPtrOutput() FirehoseDeliveryStreamServerSideEncryptionPtrOutput {
	return o.ToFirehoseDeliveryStreamServerSideEncryptionPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamServerSideEncryptionOutput) ToFirehoseDeliveryStreamServerSideEncryptionPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamServerSideEncryptionPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamServerSideEncryption) *FirehoseDeliveryStreamServerSideEncryption {
		return &v
	}).(FirehoseDeliveryStreamServerSideEncryptionPtrOutput)
}

// Whether to enable encryption at rest. Default is `false`.
func (o FirehoseDeliveryStreamServerSideEncryptionOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamServerSideEncryption) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type FirehoseDeliveryStreamServerSideEncryptionPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamServerSideEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamServerSideEncryption)(nil)).Elem()
}

func (o FirehoseDeliveryStreamServerSideEncryptionPtrOutput) ToFirehoseDeliveryStreamServerSideEncryptionPtrOutput() FirehoseDeliveryStreamServerSideEncryptionPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamServerSideEncryptionPtrOutput) ToFirehoseDeliveryStreamServerSideEncryptionPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamServerSideEncryptionPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamServerSideEncryptionPtrOutput) Elem() FirehoseDeliveryStreamServerSideEncryptionOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamServerSideEncryption) FirehoseDeliveryStreamServerSideEncryption {
		return *v
	}).(FirehoseDeliveryStreamServerSideEncryptionOutput)
}

// Whether to enable encryption at rest. Default is `false`.
func (o FirehoseDeliveryStreamServerSideEncryptionPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamServerSideEncryption) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type FirehoseDeliveryStreamServerSideEncryptionArgs struct {
	// Whether to enable encryption at rest. Default is `false`.
	Enabled *bool `pulumi:"enabled"`
}

type FirehoseDeliveryStreamServerSideEncryptionArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamServerSideEncryptionArgsOutput() FirehoseDeliveryStreamServerSideEncryptionArgsOutput
	ToFirehoseDeliveryStreamServerSideEncryptionArgsOutputWithContext(context.Context) FirehoseDeliveryStreamServerSideEncryptionArgsOutput
}

type FirehoseDeliveryStreamServerSideEncryptionArgsArgs struct {
	// Whether to enable encryption at rest. Default is `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (FirehoseDeliveryStreamServerSideEncryptionArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamServerSideEncryptionArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamServerSideEncryptionArgsArgs) ToFirehoseDeliveryStreamServerSideEncryptionArgsOutput() FirehoseDeliveryStreamServerSideEncryptionArgsOutput {
	return i.ToFirehoseDeliveryStreamServerSideEncryptionArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamServerSideEncryptionArgsArgs) ToFirehoseDeliveryStreamServerSideEncryptionArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamServerSideEncryptionArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamServerSideEncryptionArgsOutput)
}

func (i FirehoseDeliveryStreamServerSideEncryptionArgsArgs) ToFirehoseDeliveryStreamServerSideEncryptionArgsPtrOutput() FirehoseDeliveryStreamServerSideEncryptionArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamServerSideEncryptionArgsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamServerSideEncryptionArgsArgs) ToFirehoseDeliveryStreamServerSideEncryptionArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamServerSideEncryptionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamServerSideEncryptionArgsOutput).ToFirehoseDeliveryStreamServerSideEncryptionArgsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamServerSideEncryptionArgsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamServerSideEncryptionArgsPtrOutput() FirehoseDeliveryStreamServerSideEncryptionArgsPtrOutput
	ToFirehoseDeliveryStreamServerSideEncryptionArgsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamServerSideEncryptionArgsPtrOutput
}

type firehoseDeliveryStreamServerSideEncryptionArgsPtrType FirehoseDeliveryStreamServerSideEncryptionArgsArgs

func FirehoseDeliveryStreamServerSideEncryptionArgsPtr(v *FirehoseDeliveryStreamServerSideEncryptionArgsArgs) FirehoseDeliveryStreamServerSideEncryptionArgsPtrInput {
	return (*firehoseDeliveryStreamServerSideEncryptionArgsPtrType)(v)
}

func (*firehoseDeliveryStreamServerSideEncryptionArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamServerSideEncryptionArgs)(nil)).Elem()
}

func (i *firehoseDeliveryStreamServerSideEncryptionArgsPtrType) ToFirehoseDeliveryStreamServerSideEncryptionArgsPtrOutput() FirehoseDeliveryStreamServerSideEncryptionArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamServerSideEncryptionArgsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamServerSideEncryptionArgsPtrType) ToFirehoseDeliveryStreamServerSideEncryptionArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamServerSideEncryptionArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamServerSideEncryptionArgsPtrOutput)
}

type FirehoseDeliveryStreamServerSideEncryptionArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamServerSideEncryptionArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamServerSideEncryptionArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamServerSideEncryptionArgsOutput) ToFirehoseDeliveryStreamServerSideEncryptionArgsOutput() FirehoseDeliveryStreamServerSideEncryptionArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamServerSideEncryptionArgsOutput) ToFirehoseDeliveryStreamServerSideEncryptionArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamServerSideEncryptionArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamServerSideEncryptionArgsOutput) ToFirehoseDeliveryStreamServerSideEncryptionArgsPtrOutput() FirehoseDeliveryStreamServerSideEncryptionArgsPtrOutput {
	return o.ToFirehoseDeliveryStreamServerSideEncryptionArgsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamServerSideEncryptionArgsOutput) ToFirehoseDeliveryStreamServerSideEncryptionArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamServerSideEncryptionArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamServerSideEncryptionArgs) *FirehoseDeliveryStreamServerSideEncryptionArgs {
		return &v
	}).(FirehoseDeliveryStreamServerSideEncryptionArgsPtrOutput)
}

// Whether to enable encryption at rest. Default is `false`.
func (o FirehoseDeliveryStreamServerSideEncryptionArgsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamServerSideEncryptionArgs) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type FirehoseDeliveryStreamServerSideEncryptionArgsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamServerSideEncryptionArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamServerSideEncryptionArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamServerSideEncryptionArgsPtrOutput) ToFirehoseDeliveryStreamServerSideEncryptionArgsPtrOutput() FirehoseDeliveryStreamServerSideEncryptionArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamServerSideEncryptionArgsPtrOutput) ToFirehoseDeliveryStreamServerSideEncryptionArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamServerSideEncryptionArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamServerSideEncryptionArgsPtrOutput) Elem() FirehoseDeliveryStreamServerSideEncryptionArgsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamServerSideEncryptionArgs) FirehoseDeliveryStreamServerSideEncryptionArgs {
		return *v
	}).(FirehoseDeliveryStreamServerSideEncryptionArgsOutput)
}

// Whether to enable encryption at rest. Default is `false`.
func (o FirehoseDeliveryStreamServerSideEncryptionArgsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamServerSideEncryptionArgs) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type FirehoseDeliveryStreamServerSideEncryptionState struct {
	// Whether to enable encryption at rest. Default is `false`.
	Enabled *bool `pulumi:"enabled"`
}

type FirehoseDeliveryStreamServerSideEncryptionStateInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamServerSideEncryptionStateOutput() FirehoseDeliveryStreamServerSideEncryptionStateOutput
	ToFirehoseDeliveryStreamServerSideEncryptionStateOutputWithContext(context.Context) FirehoseDeliveryStreamServerSideEncryptionStateOutput
}

type FirehoseDeliveryStreamServerSideEncryptionStateArgs struct {
	// Whether to enable encryption at rest. Default is `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (FirehoseDeliveryStreamServerSideEncryptionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamServerSideEncryptionState)(nil)).Elem()
}

func (i FirehoseDeliveryStreamServerSideEncryptionStateArgs) ToFirehoseDeliveryStreamServerSideEncryptionStateOutput() FirehoseDeliveryStreamServerSideEncryptionStateOutput {
	return i.ToFirehoseDeliveryStreamServerSideEncryptionStateOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamServerSideEncryptionStateArgs) ToFirehoseDeliveryStreamServerSideEncryptionStateOutputWithContext(ctx context.Context) FirehoseDeliveryStreamServerSideEncryptionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamServerSideEncryptionStateOutput)
}

type FirehoseDeliveryStreamServerSideEncryptionStateOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamServerSideEncryptionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamServerSideEncryptionState)(nil)).Elem()
}

func (o FirehoseDeliveryStreamServerSideEncryptionStateOutput) ToFirehoseDeliveryStreamServerSideEncryptionStateOutput() FirehoseDeliveryStreamServerSideEncryptionStateOutput {
	return o
}

func (o FirehoseDeliveryStreamServerSideEncryptionStateOutput) ToFirehoseDeliveryStreamServerSideEncryptionStateOutputWithContext(ctx context.Context) FirehoseDeliveryStreamServerSideEncryptionStateOutput {
	return o
}

// Whether to enable encryption at rest. Default is `false`.
func (o FirehoseDeliveryStreamServerSideEncryptionStateOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamServerSideEncryptionState) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfiguration struct {
	// The CloudWatch Logging Options for the delivery stream. More details are given below.
	CloudwatchLoggingOptions FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The amount of time, in seconds between 180 and 600, that Kinesis Firehose waits to receive an acknowledgment from Splunk after it sends it data.
	HecAcknowledgmentTimeout *int `pulumi:"hecAcknowledgmentTimeout"`
	// The HTTP Event Collector (HEC) endpoint to which Kinesis Firehose sends your data.
	HecEndpoint string `pulumi:"hecEndpoint"`
	// The HEC endpoint type. Valid values are `Raw` or `Event`. The default value is `Raw`.
	HecEndpointType *string `pulumi:"hecEndpointType"`
	// The GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.
	HecToken string `pulumi:"hecToken"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration *FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration `pulumi:"processingConfiguration"`
	// After an initial failure to deliver to Splunk, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
	RetryDuration *int `pulumi:"retryDuration"`
	// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedEventsOnly` and `AllEvents`.  Default value is `FailedEventsOnly`.
	S3BackupMode *string `pulumi:"s3BackupMode"`
}

type FirehoseDeliveryStreamSplunkConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationOutput() FirehoseDeliveryStreamSplunkConfigurationOutput
	ToFirehoseDeliveryStreamSplunkConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationOutput
}

type FirehoseDeliveryStreamSplunkConfigurationArgs struct {
	// The CloudWatch Logging Options for the delivery stream. More details are given below.
	CloudwatchLoggingOptions FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsInput `pulumi:"cloudwatchLoggingOptions"`
	// The amount of time, in seconds between 180 and 600, that Kinesis Firehose waits to receive an acknowledgment from Splunk after it sends it data.
	HecAcknowledgmentTimeout pulumi.IntPtrInput `pulumi:"hecAcknowledgmentTimeout"`
	// The HTTP Event Collector (HEC) endpoint to which Kinesis Firehose sends your data.
	HecEndpoint pulumi.StringInput `pulumi:"hecEndpoint"`
	// The HEC endpoint type. Valid values are `Raw` or `Event`. The default value is `Raw`.
	HecEndpointType pulumi.StringPtrInput `pulumi:"hecEndpointType"`
	// The GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.
	HecToken pulumi.StringInput `pulumi:"hecToken"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// After an initial failure to deliver to Splunk, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
	RetryDuration pulumi.IntPtrInput `pulumi:"retryDuration"`
	// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedEventsOnly` and `AllEvents`.  Default value is `FailedEventsOnly`.
	S3BackupMode pulumi.StringPtrInput `pulumi:"s3BackupMode"`
}

func (FirehoseDeliveryStreamSplunkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationOutput() FirehoseDeliveryStreamSplunkConfigurationOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationOutput)
}

func (i FirehoseDeliveryStreamSplunkConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationOutput).ToFirehoseDeliveryStreamSplunkConfigurationPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamSplunkConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationPtrOutput
	ToFirehoseDeliveryStreamSplunkConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationPtrOutput
}

type firehoseDeliveryStreamSplunkConfigurationPtrType FirehoseDeliveryStreamSplunkConfigurationArgs

func FirehoseDeliveryStreamSplunkConfigurationPtr(v *FirehoseDeliveryStreamSplunkConfigurationArgs) FirehoseDeliveryStreamSplunkConfigurationPtrInput {
	return (*firehoseDeliveryStreamSplunkConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamSplunkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamSplunkConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamSplunkConfigurationPtrType) ToFirehoseDeliveryStreamSplunkConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamSplunkConfigurationPtrType) ToFirehoseDeliveryStreamSplunkConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationOutput() FirehoseDeliveryStreamSplunkConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamSplunkConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamSplunkConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) *FirehoseDeliveryStreamSplunkConfiguration {
		return &v
	}).(FirehoseDeliveryStreamSplunkConfigurationPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below.
func (o FirehoseDeliveryStreamSplunkConfigurationOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput)
}

// The amount of time, in seconds between 180 and 600, that Kinesis Firehose waits to receive an acknowledgment from Splunk after it sends it data.
func (o FirehoseDeliveryStreamSplunkConfigurationOutput) HecAcknowledgmentTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) *int { return v.HecAcknowledgmentTimeout }).(pulumi.IntPtrOutput)
}

// The HTTP Event Collector (HEC) endpoint to which Kinesis Firehose sends your data.
func (o FirehoseDeliveryStreamSplunkConfigurationOutput) HecEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) string { return v.HecEndpoint }).(pulumi.StringOutput)
}

// The HEC endpoint type. Valid values are `Raw` or `Event`. The default value is `Raw`.
func (o FirehoseDeliveryStreamSplunkConfigurationOutput) HecEndpointType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) *string { return v.HecEndpointType }).(pulumi.StringPtrOutput)
}

// The GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.
func (o FirehoseDeliveryStreamSplunkConfigurationOutput) HecToken() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) string { return v.HecToken }).(pulumi.StringOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamSplunkConfigurationOutput) ProcessingConfiguration() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) *FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput)
}

// After an initial failure to deliver to Splunk, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
func (o FirehoseDeliveryStreamSplunkConfigurationOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) *int { return v.RetryDuration }).(pulumi.IntPtrOutput)
}

// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedEventsOnly` and `AllEvents`.  Default value is `FailedEventsOnly`.
func (o FirehoseDeliveryStreamSplunkConfigurationOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamSplunkConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) ToFirehoseDeliveryStreamSplunkConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) ToFirehoseDeliveryStreamSplunkConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) Elem() FirehoseDeliveryStreamSplunkConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfiguration) FirehoseDeliveryStreamSplunkConfiguration {
		return *v
	}).(FirehoseDeliveryStreamSplunkConfigurationOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below.
func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput)
}

// The amount of time, in seconds between 180 and 600, that Kinesis Firehose waits to receive an acknowledgment from Splunk after it sends it data.
func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) HecAcknowledgmentTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) *int { return v.HecAcknowledgmentTimeout }).(pulumi.IntPtrOutput)
}

// The HTTP Event Collector (HEC) endpoint to which Kinesis Firehose sends your data.
func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) HecEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) string { return v.HecEndpoint }).(pulumi.StringOutput)
}

// The HEC endpoint type. Valid values are `Raw` or `Event`. The default value is `Raw`.
func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) HecEndpointType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) *string { return v.HecEndpointType }).(pulumi.StringPtrOutput)
}

// The GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.
func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) HecToken() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) string { return v.HecToken }).(pulumi.StringOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) ProcessingConfiguration() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) *FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput)
}

// After an initial failure to deliver to Splunk, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) *int { return v.RetryDuration }).(pulumi.IntPtrOutput)
}

// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedEventsOnly` and `AllEvents`.  Default value is `FailedEventsOnly`.
func (o FirehoseDeliveryStreamSplunkConfigurationPtrOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfiguration) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationArgs struct {
	// The CloudWatch Logging Options for the delivery stream. More details are given below.
	CloudwatchLoggingOptions *FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs `pulumi:"cloudwatchLoggingOptions"`
	// The amount of time, in seconds between 180 and 600, that Kinesis Firehose waits to receive an acknowledgment from Splunk after it sends it data.
	HecAcknowledgmentTimeout *int `pulumi:"hecAcknowledgmentTimeout"`
	// The HTTP Event Collector (HEC) endpoint to which Kinesis Firehose sends your data.
	HecEndpoint string `pulumi:"hecEndpoint"`
	// The HEC endpoint type. Valid values are `Raw` or `Event`. The default value is `Raw`.
	HecEndpointType *string `pulumi:"hecEndpointType"`
	// The GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.
	HecToken string `pulumi:"hecToken"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration *FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs `pulumi:"processingConfiguration"`
	// After an initial failure to deliver to Splunk, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
	RetryDuration *int `pulumi:"retryDuration"`
	// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedEventsOnly` and `AllEvents`.  Default value is `FailedEventsOnly`.
	S3BackupMode *string `pulumi:"s3BackupMode"`
}

type FirehoseDeliveryStreamSplunkConfigurationArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationArgsOutput() FirehoseDeliveryStreamSplunkConfigurationArgsOutput
	ToFirehoseDeliveryStreamSplunkConfigurationArgsOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationArgsOutput
}

type FirehoseDeliveryStreamSplunkConfigurationArgsArgs struct {
	// The CloudWatch Logging Options for the delivery stream. More details are given below.
	CloudwatchLoggingOptions FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The amount of time, in seconds between 180 and 600, that Kinesis Firehose waits to receive an acknowledgment from Splunk after it sends it data.
	HecAcknowledgmentTimeout pulumi.IntPtrInput `pulumi:"hecAcknowledgmentTimeout"`
	// The HTTP Event Collector (HEC) endpoint to which Kinesis Firehose sends your data.
	HecEndpoint pulumi.StringInput `pulumi:"hecEndpoint"`
	// The HEC endpoint type. Valid values are `Raw` or `Event`. The default value is `Raw`.
	HecEndpointType pulumi.StringPtrInput `pulumi:"hecEndpointType"`
	// The GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.
	HecToken pulumi.StringInput `pulumi:"hecToken"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrInput `pulumi:"processingConfiguration"`
	// After an initial failure to deliver to Splunk, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
	RetryDuration pulumi.IntPtrInput `pulumi:"retryDuration"`
	// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedEventsOnly` and `AllEvents`.  Default value is `FailedEventsOnly`.
	S3BackupMode pulumi.StringPtrInput `pulumi:"s3BackupMode"`
}

func (FirehoseDeliveryStreamSplunkConfigurationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationArgsArgs) ToFirehoseDeliveryStreamSplunkConfigurationArgsOutput() FirehoseDeliveryStreamSplunkConfigurationArgsOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationArgsArgs) ToFirehoseDeliveryStreamSplunkConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationArgsOutput)
}

func (i FirehoseDeliveryStreamSplunkConfigurationArgsArgs) ToFirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationArgsArgs) ToFirehoseDeliveryStreamSplunkConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationArgsOutput).ToFirehoseDeliveryStreamSplunkConfigurationArgsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamSplunkConfigurationArgsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput
	ToFirehoseDeliveryStreamSplunkConfigurationArgsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput
}

type firehoseDeliveryStreamSplunkConfigurationArgsPtrType FirehoseDeliveryStreamSplunkConfigurationArgsArgs

func FirehoseDeliveryStreamSplunkConfigurationArgsPtr(v *FirehoseDeliveryStreamSplunkConfigurationArgsArgs) FirehoseDeliveryStreamSplunkConfigurationArgsPtrInput {
	return (*firehoseDeliveryStreamSplunkConfigurationArgsPtrType)(v)
}

func (*firehoseDeliveryStreamSplunkConfigurationArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamSplunkConfigurationArgs)(nil)).Elem()
}

func (i *firehoseDeliveryStreamSplunkConfigurationArgsPtrType) ToFirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamSplunkConfigurationArgsPtrType) ToFirehoseDeliveryStreamSplunkConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationArgsOutput) ToFirehoseDeliveryStreamSplunkConfigurationArgsOutput() FirehoseDeliveryStreamSplunkConfigurationArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationArgsOutput) ToFirehoseDeliveryStreamSplunkConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationArgsOutput) ToFirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput {
	return o.ToFirehoseDeliveryStreamSplunkConfigurationArgsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamSplunkConfigurationArgsOutput) ToFirehoseDeliveryStreamSplunkConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationArgs) *FirehoseDeliveryStreamSplunkConfigurationArgs {
		return &v
	}).(FirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below.
func (o FirehoseDeliveryStreamSplunkConfigurationArgsOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationArgs) *FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutput)
}

// The amount of time, in seconds between 180 and 600, that Kinesis Firehose waits to receive an acknowledgment from Splunk after it sends it data.
func (o FirehoseDeliveryStreamSplunkConfigurationArgsOutput) HecAcknowledgmentTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationArgs) *int { return v.HecAcknowledgmentTimeout }).(pulumi.IntPtrOutput)
}

// The HTTP Event Collector (HEC) endpoint to which Kinesis Firehose sends your data.
func (o FirehoseDeliveryStreamSplunkConfigurationArgsOutput) HecEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationArgs) string { return v.HecEndpoint }).(pulumi.StringOutput)
}

// The HEC endpoint type. Valid values are `Raw` or `Event`. The default value is `Raw`.
func (o FirehoseDeliveryStreamSplunkConfigurationArgsOutput) HecEndpointType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationArgs) *string { return v.HecEndpointType }).(pulumi.StringPtrOutput)
}

// The GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.
func (o FirehoseDeliveryStreamSplunkConfigurationArgsOutput) HecToken() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationArgs) string { return v.HecToken }).(pulumi.StringOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamSplunkConfigurationArgsOutput) ProcessingConfiguration() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationArgs) *FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutput)
}

// After an initial failure to deliver to Splunk, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
func (o FirehoseDeliveryStreamSplunkConfigurationArgsOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationArgs) *int { return v.RetryDuration }).(pulumi.IntPtrOutput)
}

// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedEventsOnly` and `AllEvents`.  Default value is `FailedEventsOnly`.
func (o FirehoseDeliveryStreamSplunkConfigurationArgsOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationArgs) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamSplunkConfigurationArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput) ToFirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput) ToFirehoseDeliveryStreamSplunkConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput) Elem() FirehoseDeliveryStreamSplunkConfigurationArgsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfigurationArgs) FirehoseDeliveryStreamSplunkConfigurationArgs {
		return *v
	}).(FirehoseDeliveryStreamSplunkConfigurationArgsOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below.
func (o FirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationArgs) *FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutput)
}

// The amount of time, in seconds between 180 and 600, that Kinesis Firehose waits to receive an acknowledgment from Splunk after it sends it data.
func (o FirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput) HecAcknowledgmentTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationArgs) *int { return v.HecAcknowledgmentTimeout }).(pulumi.IntPtrOutput)
}

// The HTTP Event Collector (HEC) endpoint to which Kinesis Firehose sends your data.
func (o FirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput) HecEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationArgs) string { return v.HecEndpoint }).(pulumi.StringOutput)
}

// The HEC endpoint type. Valid values are `Raw` or `Event`. The default value is `Raw`.
func (o FirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput) HecEndpointType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationArgs) *string { return v.HecEndpointType }).(pulumi.StringPtrOutput)
}

// The GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.
func (o FirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput) HecToken() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationArgs) string { return v.HecToken }).(pulumi.StringOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput) ProcessingConfiguration() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationArgs) *FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutput)
}

// After an initial failure to deliver to Splunk, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
func (o FirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationArgs) *int { return v.RetryDuration }).(pulumi.IntPtrOutput)
}

// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedEventsOnly` and `AllEvents`.  Default value is `FailedEventsOnly`.
func (o FirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationArgs) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

type FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput {
	return o
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

type FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsOutput() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsOutput
	ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsOutput
}

type FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsArgs) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsOutput() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsArgs) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsOutput)
}

func (i FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsArgs) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsArgs) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsOutput).ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutput
	ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutput
}

type firehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrType FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsArgs

func FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtr(v *FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsArgs) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrInput {
	return (*firehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrType)(v)
}

func (*firehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (i *firehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrType) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrType) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsOutput) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsOutput() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsOutput) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsOutput) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o.ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsOutput) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs) *FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs {
		return &v
	}).(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutput) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutput) ToFirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutput) Elem() FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs {
		return *v
	}).(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgs) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration struct {
	// Enables or disables data processing.
	Enabled *bool `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors []FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor `pulumi:"processors"`
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput
	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs struct {
	// Enables or disables data processing.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayInput `pulumi:"processors"`
}

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput)
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput).ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput
	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput
}

type firehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrType FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs

func FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtr(v *FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrInput {
	return (*firehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrType) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrType) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration) *FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration {
		return &v
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput) Processors() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration) []FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput) Elem() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration) FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration {
		return *v
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput) Processors() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration) []FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs struct {
	// Enables or disables data processing.
	Enabled *bool `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors []FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs `pulumi:"processors"`
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsOutput
	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsOutput
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsArgs struct {
	// Enables or disables data processing.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArrayInput `pulumi:"processors"`
}

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsOutput)
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsOutput).ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutput
	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutput
}

type firehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrType FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsArgs

func FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtr(v *FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsArgs) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrInput {
	return (*firehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrType)(v)
}

func (*firehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs)(nil)).Elem()
}

func (i *firehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrType) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrType) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutput {
	return o.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs) *FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs {
		return &v
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsOutput) Processors() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs) []FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs {
		return v.Processors
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArrayOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutput) Elem() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs {
		return *v
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutput) Processors() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgs) []FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs {
		return v.Processors
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArrayOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor struct {
	// Array of processor parameters. More details are given below
	Parameters []FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type string `pulumi:"type"`
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput
	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs struct {
	// Array of processor parameters. More details are given below
	Parameters FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayInput `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type pulumi.StringInput `pulumi:"type"`
}

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput
	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArray []FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorInput

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput {
	return o
}

// Array of processor parameters. More details are given below
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput) Parameters() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor) []FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter {
		return v.Parameters
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput)
}

// The type of processor. Valid Values: `Lambda`
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor {
		return vs[0].([]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor)[vs[1].(int)]
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs struct {
	// Array of processor parameters. More details are given below
	Parameters []FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type string `pulumi:"type"`
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsOutput
	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsOutput
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArgs struct {
	// Array of processor parameters. More details are given below
	Parameters FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArrayInput `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type pulumi.StringInput `pulumi:"type"`
}

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArrayOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArrayOutput
	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArrayOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArrayOutput
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArray []FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsInput

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArray) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArrayOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArrayOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArray) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArrayOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsOutput {
	return o
}

// Array of processor parameters. More details are given below
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsOutput) Parameters() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs) []FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs {
		return v.Parameters
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput)
}

// The type of processor. Valid Values: `Lambda`
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArrayOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArrayOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArrayOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs {
		return vs[0].([]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgs)[vs[1].(int)]
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName string `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue string `pulumi:"parameterValue"`
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput
	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName pulumi.StringInput `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput
	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArray []FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterInput

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput {
	return o
}

// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter) string {
		return v.ParameterName
	}).(pulumi.StringOutput)
}

// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter) string {
		return v.ParameterValue
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter {
		return vs[0].([]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter)[vs[1].(int)]
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName string `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue string `pulumi:"parameterValue"`
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsOutput
	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsOutput
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArgs struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName pulumi.StringInput `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArgs) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput
	ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArrayOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArray []FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsInput

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArray) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArray) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsOutput {
	return o
}

// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs) string {
		return v.ParameterName
	}).(pulumi.StringOutput)
}

// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs) string {
		return v.ParameterValue
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput() FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput) ToFirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs {
		return vs[0].([]FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgs)[vs[1].(int)]
	}).(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationState struct {
	// The CloudWatch Logging Options for the delivery stream. More details are given below.
	CloudwatchLoggingOptions *FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The amount of time, in seconds between 180 and 600, that Kinesis Firehose waits to receive an acknowledgment from Splunk after it sends it data.
	HecAcknowledgmentTimeout *int `pulumi:"hecAcknowledgmentTimeout"`
	// The HTTP Event Collector (HEC) endpoint to which Kinesis Firehose sends your data.
	HecEndpoint string `pulumi:"hecEndpoint"`
	// The HEC endpoint type. Valid values are `Raw` or `Event`. The default value is `Raw`.
	HecEndpointType *string `pulumi:"hecEndpointType"`
	// The GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.
	HecToken string `pulumi:"hecToken"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration *FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfiguration `pulumi:"processingConfiguration"`
	// After an initial failure to deliver to Splunk, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
	RetryDuration *int `pulumi:"retryDuration"`
	// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedEventsOnly` and `AllEvents`.  Default value is `FailedEventsOnly`.
	S3BackupMode *string `pulumi:"s3BackupMode"`
}

type FirehoseDeliveryStreamSplunkConfigurationStateInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationStateOutput() FirehoseDeliveryStreamSplunkConfigurationStateOutput
	ToFirehoseDeliveryStreamSplunkConfigurationStateOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationStateOutput
}

type FirehoseDeliveryStreamSplunkConfigurationStateArgs struct {
	// The CloudWatch Logging Options for the delivery stream. More details are given below.
	CloudwatchLoggingOptions FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The amount of time, in seconds between 180 and 600, that Kinesis Firehose waits to receive an acknowledgment from Splunk after it sends it data.
	HecAcknowledgmentTimeout pulumi.IntPtrInput `pulumi:"hecAcknowledgmentTimeout"`
	// The HTTP Event Collector (HEC) endpoint to which Kinesis Firehose sends your data.
	HecEndpoint pulumi.StringInput `pulumi:"hecEndpoint"`
	// The HEC endpoint type. Valid values are `Raw` or `Event`. The default value is `Raw`.
	HecEndpointType pulumi.StringPtrInput `pulumi:"hecEndpointType"`
	// The GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.
	HecToken pulumi.StringInput `pulumi:"hecToken"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// After an initial failure to deliver to Splunk, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
	RetryDuration pulumi.IntPtrInput `pulumi:"retryDuration"`
	// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedEventsOnly` and `AllEvents`.  Default value is `FailedEventsOnly`.
	S3BackupMode pulumi.StringPtrInput `pulumi:"s3BackupMode"`
}

func (FirehoseDeliveryStreamSplunkConfigurationStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationState)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationStateArgs) ToFirehoseDeliveryStreamSplunkConfigurationStateOutput() FirehoseDeliveryStreamSplunkConfigurationStateOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationStateOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationStateArgs) ToFirehoseDeliveryStreamSplunkConfigurationStateOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationStateOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationStateOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationState)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationStateOutput) ToFirehoseDeliveryStreamSplunkConfigurationStateOutput() FirehoseDeliveryStreamSplunkConfigurationStateOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationStateOutput) ToFirehoseDeliveryStreamSplunkConfigurationStateOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationStateOutput {
	return o
}

// The CloudWatch Logging Options for the delivery stream. More details are given below.
func (o FirehoseDeliveryStreamSplunkConfigurationStateOutput) CloudwatchLoggingOptions() FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationState) *FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptions {
		return v.CloudwatchLoggingOptions
	}).(FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutput)
}

// The amount of time, in seconds between 180 and 600, that Kinesis Firehose waits to receive an acknowledgment from Splunk after it sends it data.
func (o FirehoseDeliveryStreamSplunkConfigurationStateOutput) HecAcknowledgmentTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationState) *int { return v.HecAcknowledgmentTimeout }).(pulumi.IntPtrOutput)
}

// The HTTP Event Collector (HEC) endpoint to which Kinesis Firehose sends your data.
func (o FirehoseDeliveryStreamSplunkConfigurationStateOutput) HecEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationState) string { return v.HecEndpoint }).(pulumi.StringOutput)
}

// The HEC endpoint type. Valid values are `Raw` or `Event`. The default value is `Raw`.
func (o FirehoseDeliveryStreamSplunkConfigurationStateOutput) HecEndpointType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationState) *string { return v.HecEndpointType }).(pulumi.StringPtrOutput)
}

// The GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.
func (o FirehoseDeliveryStreamSplunkConfigurationStateOutput) HecToken() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationState) string { return v.HecToken }).(pulumi.StringOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamSplunkConfigurationStateOutput) ProcessingConfiguration() FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationState) *FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutput)
}

// After an initial failure to deliver to Splunk, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
func (o FirehoseDeliveryStreamSplunkConfigurationStateOutput) RetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationState) *int { return v.RetryDuration }).(pulumi.IntPtrOutput)
}

// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedEventsOnly` and `AllEvents`.  Default value is `FailedEventsOnly`.
func (o FirehoseDeliveryStreamSplunkConfigurationStateOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationState) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptions struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName *string `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName *string `pulumi:"logStreamName"`
}

type FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsOutput
	ToFirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsOutput
}

type FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsArgs struct {
	// Enables or disables the logging. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The CloudWatch group name for logging. This value is required if `enabled` is true.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptions)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsOutput)
}

func (i FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsArgs) ToFirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsOutput).ToFirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutput
	ToFirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutput
}

type firehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrType FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsArgs

func FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtr(v *FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsArgs) FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrInput {
	return (*firehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrType)(v)
}

func (*firehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *firehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrType) ToFirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsOutput() FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return o.ToFirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsOutput) ToFirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptions) *FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptions {
		return &v
	}).(FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptions)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutput() FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutput) ToFirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutput) Elem() FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptions) FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptions {
		return *v
	}).(FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsOutput)
}

// Enables or disables the logging. Defaults to `false`.
func (o FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptions) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch group name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptions) *string {
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch log stream name for logging. This value is required if `enabled` is true.
func (o FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptions) *string {
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfiguration struct {
	// Enables or disables data processing.
	Enabled *bool `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors []FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessor `pulumi:"processors"`
}

type FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationOutput() FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationOutput
	ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationOutput
}

type FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationArgs struct {
	// Enables or disables data processing.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Array of data processors. More details are given below
	Processors FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArrayInput `pulumi:"processors"`
}

func (FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationOutput() FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationOutput)
}

func (i FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationArgs) ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationOutput).ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutput
	ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutput
}

type firehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrType FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationArgs

func FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtr(v *FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationArgs) FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrInput {
	return (*firehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrType) ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrType) ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationOutput() FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationOutput) ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfiguration) *FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfiguration {
		return &v
	}).(FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationOutput) Processors() FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfiguration) []FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutput() FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutput) ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutput) Elem() FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationOutput {
	return o.ApplyT(func(v *FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfiguration) FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfiguration {
		return *v
	}).(FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationOutput)
}

// Enables or disables data processing.
func (o FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Array of data processors. More details are given below
func (o FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutput) Processors() FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfiguration) []FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessor {
		return v.Processors
	}).(FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessor struct {
	// Array of processor parameters. More details are given below
	Parameters []FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameter `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type string `pulumi:"type"`
}

type FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorOutput
	ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorOutput
}

type FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArgs struct {
	// Array of processor parameters. More details are given below
	Parameters FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArrayInput `pulumi:"parameters"`
	// The type of processor. Valid Values: `Lambda`
	Type pulumi.StringInput `pulumi:"type"`
}

func (FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArgs) ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArrayOutput
	ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArrayOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArrayOutput
}

type FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArray []FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorInput

func (FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessor)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArrayOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArray) ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArrayOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorOutput() FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorOutput) ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorOutput {
	return o
}

// Array of processor parameters. More details are given below
func (o FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorOutput) Parameters() FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArrayOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessor) []FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameter {
		return v.Parameters
	}).(FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArrayOutput)
}

// The type of processor. Valid Values: `Lambda`
func (o FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessor) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessor)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArrayOutput() FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArrayOutput) ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessor {
		return vs[0].([]FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessor)[vs[1].(int)]
	}).(FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameter struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName string `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue string `pulumi:"parameterValue"`
}

type FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterOutput
	ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterOutput
}

type FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArgs struct {
	// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
	ParameterName pulumi.StringInput `pulumi:"parameterName"`
	// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArgs) ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArrayInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArrayOutput
	ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Context) FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArrayOutput
}

type FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArray []FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterInput

func (FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (i FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArrayOutput {
	return i.ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArrayOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArray) ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArrayOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterOutput() FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterOutput) ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterOutput {
	return o
}

// Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`
func (o FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameter) string {
		return v.ParameterName
	}).(pulumi.StringOutput)
}

// Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.
func (o FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameter) string {
		return v.ParameterValue
	}).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArrayOutput struct{ *pulumi.OutputState }

func (FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameter)(nil)).Elem()
}

func (o FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArrayOutput() FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArrayOutput) ToFirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArrayOutputWithContext(ctx context.Context) FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArrayOutput {
	return o
}

func (o FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArrayOutput) Index(i pulumi.IntInput) FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameter {
		return vs[0].([]FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameter)[vs[1].(int)]
	}).(FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterOutput)
}

func init() {
	pulumi.RegisterOutputType(AnalyticsApplicationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationCloudwatchLoggingOptionsArgsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationCloudwatchLoggingOptionsArgsPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationCloudwatchLoggingOptionsStateOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsArgsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsArgsPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsKinesisFirehoseOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsKinesisFirehosePtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsKinesisFirehoseArgsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsKinesisFirehoseArgsPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsKinesisStreamOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsKinesisStreamPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsKinesisStreamArgsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsKinesisStreamArgsPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsParallelismOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsParallelismPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsParallelismArgsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsParallelismArgsPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsProcessingConfigurationOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsProcessingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsProcessingConfigurationArgsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsProcessingConfigurationArgsPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsProcessingConfigurationLambdaOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsProcessingConfigurationLambdaArgsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaArgsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordColumnOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordColumnArrayOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordColumnArgsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordColumnArgsArrayOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordFormatOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordFormatArgsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersArgsPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsvArgsPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJsonArgsPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsStartingPositionConfigurationOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsStartingPositionConfigurationArrayOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsStartingPositionConfigurationArgsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsStartingPositionConfigurationArgsArrayOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsStateOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsStateKinesisFirehoseOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsStateKinesisFirehosePtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsStateKinesisStreamOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsStateKinesisStreamPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsStateParallelismOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsStateParallelismPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsStateProcessingConfigurationOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsStateProcessingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsStateProcessingConfigurationLambdaOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsStateSchemaOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsStateSchemaRecordColumnOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsStateSchemaRecordColumnArrayOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsStateSchemaRecordFormatOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersCsvPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsStateSchemaRecordFormatMappingParametersJsonPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsStateStartingPositionConfigurationOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationInputsStateStartingPositionConfigurationArrayOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputArrayOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputArgsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputArgsArrayOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputKinesisFirehoseOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputKinesisFirehosePtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputKinesisFirehoseArgsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputKinesisFirehoseArgsPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputKinesisStreamOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputKinesisStreamPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputKinesisStreamArgsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputKinesisStreamArgsPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputLambdaOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputLambdaPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputLambdaArgsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputLambdaArgsPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputSchemaOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputSchemaArgsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputStateOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputStateArrayOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputStateKinesisFirehoseOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputStateKinesisFirehosePtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputStateKinesisStreamOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputStateKinesisStreamPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputStateLambdaOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputStateLambdaPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationOutputStateSchemaOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesArgsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesArgsPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesS3Output{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesS3ArgsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaArgsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArrayOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordColumnArgsArrayOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatArgsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersArgsPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsvArgsPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJsonArgsPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesStateOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesStateS3Output{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesStateSchemaOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordColumnArrayOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersCsvPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationReferenceDataSourcesStateSchemaRecordFormatMappingParametersJsonPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationArgsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptionsArgsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationArgsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorArgsArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationStateOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationStateCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamElasticsearchConfigurationStateProcessingConfigurationProcessorParameterArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationArgsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationArgsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeArgsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeArgsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeArgsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeArgsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfigurationArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationArgsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorArgsArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationStateOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDeOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDePtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDeOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDePtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDeOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDePtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDeOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDePtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationStateDataFormatConversionConfigurationSchemaConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationStateProcessingConfigurationProcessorParameterArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamKinesisSourceConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamKinesisSourceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamKinesisSourceConfigurationArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamKinesisSourceConfigurationArgsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamKinesisSourceConfigurationStateOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationArgsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptionsArgsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationArgsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorArgsArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationArgsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptionsArgsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationStateOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationStateCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationStateProcessingConfigurationProcessorParameterArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamRedshiftConfigurationStateS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamS3ConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamS3ConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamS3ConfigurationArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamS3ConfigurationArgsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptionsArgsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamS3ConfigurationStateOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamS3ConfigurationStateCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamServerSideEncryptionOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamServerSideEncryptionPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamServerSideEncryptionArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamServerSideEncryptionArgsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamServerSideEncryptionStateOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationArgsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptionsArgsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationArgsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorArgsArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameterArgsArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationStateOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationStateCloudwatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorArrayOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamSplunkConfigurationStateProcessingConfigurationProcessorParameterArrayOutput{})
}
