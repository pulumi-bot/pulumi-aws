// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kinesis

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type VideoStream struct {
	pulumi.CustomResourceState

	Arn                  pulumi.StringOutput    `pulumi:"arn"`
	CreationTime         pulumi.StringOutput    `pulumi:"creationTime"`
	DataRetentionInHours pulumi.IntPtrOutput    `pulumi:"dataRetentionInHours"`
	DeviceName           pulumi.StringPtrOutput `pulumi:"deviceName"`
	KmsKeyId             pulumi.StringOutput    `pulumi:"kmsKeyId"`
	MediaType            pulumi.StringPtrOutput `pulumi:"mediaType"`
	Name                 pulumi.StringOutput    `pulumi:"name"`
	Tags                 pulumi.StringMapOutput `pulumi:"tags"`
	Version              pulumi.StringOutput    `pulumi:"version"`
}

// NewVideoStream registers a new resource with the given unique name, arguments, and options.
func NewVideoStream(ctx *pulumi.Context,
	name string, args *VideoStreamArgs, opts ...pulumi.ResourceOption) (*VideoStream, error) {
	if args == nil {
		args = &VideoStreamArgs{}
	}
	var resource VideoStream
	err := ctx.RegisterResource("aws:kinesis/videoStream:VideoStream", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVideoStream gets an existing VideoStream resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVideoStream(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VideoStreamState, opts ...pulumi.ResourceOption) (*VideoStream, error) {
	var resource VideoStream
	err := ctx.ReadResource("aws:kinesis/videoStream:VideoStream", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VideoStream resources.
type videoStreamState struct {
	Arn                  *string           `pulumi:"arn"`
	CreationTime         *string           `pulumi:"creationTime"`
	DataRetentionInHours *int              `pulumi:"dataRetentionInHours"`
	DeviceName           *string           `pulumi:"deviceName"`
	KmsKeyId             *string           `pulumi:"kmsKeyId"`
	MediaType            *string           `pulumi:"mediaType"`
	Name                 *string           `pulumi:"name"`
	Tags                 map[string]string `pulumi:"tags"`
	Version              *string           `pulumi:"version"`
}

type VideoStreamState struct {
	Arn                  pulumi.StringPtrInput
	CreationTime         pulumi.StringPtrInput
	DataRetentionInHours pulumi.IntPtrInput
	DeviceName           pulumi.StringPtrInput
	KmsKeyId             pulumi.StringPtrInput
	MediaType            pulumi.StringPtrInput
	Name                 pulumi.StringPtrInput
	Tags                 pulumi.StringMapInput
	Version              pulumi.StringPtrInput
}

func (VideoStreamState) ElementType() reflect.Type {
	return reflect.TypeOf((*videoStreamState)(nil)).Elem()
}

type videoStreamArgs struct {
	DataRetentionInHours *int              `pulumi:"dataRetentionInHours"`
	DeviceName           *string           `pulumi:"deviceName"`
	KmsKeyId             *string           `pulumi:"kmsKeyId"`
	MediaType            *string           `pulumi:"mediaType"`
	Name                 *string           `pulumi:"name"`
	Tags                 map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a VideoStream resource.
type VideoStreamArgs struct {
	DataRetentionInHours pulumi.IntPtrInput
	DeviceName           pulumi.StringPtrInput
	KmsKeyId             pulumi.StringPtrInput
	MediaType            pulumi.StringPtrInput
	Name                 pulumi.StringPtrInput
	Tags                 pulumi.StringMapInput
}

func (VideoStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*videoStreamArgs)(nil)).Elem()
}
