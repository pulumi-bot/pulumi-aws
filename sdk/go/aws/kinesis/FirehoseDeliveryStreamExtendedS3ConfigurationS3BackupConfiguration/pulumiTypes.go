// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-aws/kinesis/FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions"
)

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration struct {
	// The ARN of the S3 bucket
	BucketArn string `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval *int `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize *int `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below.
	CloudwatchLoggingOptions *kinesisFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions.FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat *string `pulumi:"compressionFormat"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix *string `pulumi:"prefix"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn string `pulumi:"roleArn"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs struct {
	// The ARN of the S3 bucket
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval pulumi.IntPtrInput `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize pulumi.IntPtrInput `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below.
	CloudwatchLoggingOptions kinesisFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions.FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat pulumi.StringPtrInput `pulumi:"compressionFormat"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrType FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrInput {	return (*firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput struct { *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput)
}
// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *int { return v.BufferInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *int { return v.BufferSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) CloudwatchLoggingOptions() kinesisFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions.FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *kinesisFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions.FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions { return v.CloudwatchLoggingOptions }).(kinesisFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions.FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *string { return v.CompressionFormat }).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput struct { *pulumi.OutputState}

func (FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput {
	return o.ApplyT(func (v *FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration { return *v }).(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *int { return v.BufferInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *int { return v.BufferSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) CloudwatchLoggingOptions() kinesisFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions.FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *kinesisFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions.FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions { return v.CloudwatchLoggingOptions }).(kinesisFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions.FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *string { return v.CompressionFormat }).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput{})
}
