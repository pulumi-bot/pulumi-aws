// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package AnalyticsApplicationCloudwatchLoggingOptions

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type AnalyticsApplicationCloudwatchLoggingOptions struct {
	// The ARN of the Kinesis Analytics Application.
	Id *string `pulumi:"id"`
	LogStreamArn string `pulumi:"logStreamArn"`
	RoleArn string `pulumi:"roleArn"`
}

type AnalyticsApplicationCloudwatchLoggingOptionsInput interface {
	pulumi.Input

	ToAnalyticsApplicationCloudwatchLoggingOptionsOutput() AnalyticsApplicationCloudwatchLoggingOptionsOutput
	ToAnalyticsApplicationCloudwatchLoggingOptionsOutputWithContext(context.Context) AnalyticsApplicationCloudwatchLoggingOptionsOutput
}

type AnalyticsApplicationCloudwatchLoggingOptionsArgs struct {
	// The ARN of the Kinesis Analytics Application.
	Id pulumi.StringPtrInput `pulumi:"id"`
	LogStreamArn pulumi.StringInput `pulumi:"logStreamArn"`
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AnalyticsApplicationCloudwatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i AnalyticsApplicationCloudwatchLoggingOptionsArgs) ToAnalyticsApplicationCloudwatchLoggingOptionsOutput() AnalyticsApplicationCloudwatchLoggingOptionsOutput {
	return i.ToAnalyticsApplicationCloudwatchLoggingOptionsOutputWithContext(context.Background())
}

func (i AnalyticsApplicationCloudwatchLoggingOptionsArgs) ToAnalyticsApplicationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationCloudwatchLoggingOptionsOutput)
}

func (i AnalyticsApplicationCloudwatchLoggingOptionsArgs) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutput() AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return i.ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i AnalyticsApplicationCloudwatchLoggingOptionsArgs) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationCloudwatchLoggingOptionsOutput).ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(ctx)
}

type AnalyticsApplicationCloudwatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutput() AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput
	ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(context.Context) AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput
}

type analyticsApplicationCloudwatchLoggingOptionsPtrType AnalyticsApplicationCloudwatchLoggingOptionsArgs

func AnalyticsApplicationCloudwatchLoggingOptionsPtr(v *AnalyticsApplicationCloudwatchLoggingOptionsArgs) AnalyticsApplicationCloudwatchLoggingOptionsPtrInput {	return (*analyticsApplicationCloudwatchLoggingOptionsPtrType)(v)
}

func (*analyticsApplicationCloudwatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationCloudwatchLoggingOptions)(nil)).Elem()
}

func (i *analyticsApplicationCloudwatchLoggingOptionsPtrType) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutput() AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return i.ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *analyticsApplicationCloudwatchLoggingOptionsPtrType) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput)
}

type AnalyticsApplicationCloudwatchLoggingOptionsOutput struct { *pulumi.OutputState }

func (AnalyticsApplicationCloudwatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsApplicationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsOutput() AnalyticsApplicationCloudwatchLoggingOptionsOutput {
	return o
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsOutput {
	return o
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutput() AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return o.ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v AnalyticsApplicationCloudwatchLoggingOptions) *AnalyticsApplicationCloudwatchLoggingOptions {
		return &v
	}).(AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput)
}
// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationCloudwatchLoggingOptionsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v AnalyticsApplicationCloudwatchLoggingOptions) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsOutput) LogStreamArn() pulumi.StringOutput {
	return o.ApplyT(func (v AnalyticsApplicationCloudwatchLoggingOptions) string { return v.LogStreamArn }).(pulumi.StringOutput)
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func (v AnalyticsApplicationCloudwatchLoggingOptions) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput struct { *pulumi.OutputState}

func (AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsApplicationCloudwatchLoggingOptions)(nil)).Elem()
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutput() AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput) ToAnalyticsApplicationCloudwatchLoggingOptionsPtrOutputWithContext(ctx context.Context) AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput {
	return o
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput) Elem() AnalyticsApplicationCloudwatchLoggingOptionsOutput {
	return o.ApplyT(func (v *AnalyticsApplicationCloudwatchLoggingOptions) AnalyticsApplicationCloudwatchLoggingOptions { return *v }).(AnalyticsApplicationCloudwatchLoggingOptionsOutput)
}

// The ARN of the Kinesis Analytics Application.
func (o AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v AnalyticsApplicationCloudwatchLoggingOptions) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput) LogStreamArn() pulumi.StringOutput {
	return o.ApplyT(func (v AnalyticsApplicationCloudwatchLoggingOptions) string { return v.LogStreamArn }).(pulumi.StringOutput)
}

func (o AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func (v AnalyticsApplicationCloudwatchLoggingOptions) string { return v.RoleArn }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(AnalyticsApplicationCloudwatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(AnalyticsApplicationCloudwatchLoggingOptionsPtrOutput{})
}
