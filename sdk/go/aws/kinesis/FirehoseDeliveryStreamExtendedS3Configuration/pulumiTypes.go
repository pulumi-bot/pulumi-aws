// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package FirehoseDeliveryStreamExtendedS3Configuration

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-aws/kinesis/FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions"
	"https:/github.com/pulumi/pulumi-aws/kinesis/FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration"
	"https:/github.com/pulumi/pulumi-aws/kinesis/FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration"
	"https:/github.com/pulumi/pulumi-aws/kinesis/FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer"
	"https:/github.com/pulumi/pulumi-aws/kinesis/FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe"
	"https:/github.com/pulumi/pulumi-aws/kinesis/FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe"
	"https:/github.com/pulumi/pulumi-aws/kinesis/FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration"
	"https:/github.com/pulumi/pulumi-aws/kinesis/FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer"
	"https:/github.com/pulumi/pulumi-aws/kinesis/FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe"
	"https:/github.com/pulumi/pulumi-aws/kinesis/FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe"
	"https:/github.com/pulumi/pulumi-aws/kinesis/FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration"
	"https:/github.com/pulumi/pulumi-aws/kinesis/FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration"
	"https:/github.com/pulumi/pulumi-aws/kinesis/FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor"
	"https:/github.com/pulumi/pulumi-aws/kinesis/FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter"
	"https:/github.com/pulumi/pulumi-aws/kinesis/FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration"
	"https:/github.com/pulumi/pulumi-aws/kinesis/FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions"
)

type FirehoseDeliveryStreamExtendedS3Configuration struct {
	// The ARN of the S3 bucket
	BucketArn string `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval *int `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize *int `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below.
	CloudwatchLoggingOptions *kinesisFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions.FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat *string `pulumi:"compressionFormat"`
	// Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. More details given below.
	DataFormatConversionConfiguration *kinesisFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration.FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration `pulumi:"dataFormatConversionConfiguration"`
	// Prefix added to failed records before writing them to S3. This prefix appears immediately following the bucket name.
	ErrorOutputPrefix *string `pulumi:"errorOutputPrefix"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix *string `pulumi:"prefix"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration *kinesisFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration.FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration `pulumi:"processingConfiguration"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn string `pulumi:"roleArn"`
	// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
	S3BackupConfiguration *kinesisFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration.FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration `pulumi:"s3BackupConfiguration"`
	// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedEventsOnly` and `AllEvents`.  Default value is `FailedEventsOnly`.
	S3BackupMode *string `pulumi:"s3BackupMode"`
}

type FirehoseDeliveryStreamExtendedS3ConfigurationInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationOutput
}

type FirehoseDeliveryStreamExtendedS3ConfigurationArgs struct {
	// The ARN of the S3 bucket
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
	BufferInterval pulumi.IntPtrInput `pulumi:"bufferInterval"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
	BufferSize pulumi.IntPtrInput `pulumi:"bufferSize"`
	// The CloudWatch Logging Options for the delivery stream. More details are given below.
	CloudwatchLoggingOptions kinesisFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions.FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrInput `pulumi:"cloudwatchLoggingOptions"`
	// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
	CompressionFormat pulumi.StringPtrInput `pulumi:"compressionFormat"`
	// Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. More details given below.
	DataFormatConversionConfiguration kinesisFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration.FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrInput `pulumi:"dataFormatConversionConfiguration"`
	// Prefix added to failed records before writing them to S3. This prefix appears immediately following the bucket name.
	ErrorOutputPrefix pulumi.StringPtrInput `pulumi:"errorOutputPrefix"`
	// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
	// be used.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The data processing configuration.  More details are given below.
	ProcessingConfiguration kinesisFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration.FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
	S3BackupConfiguration kinesisFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration.FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrInput `pulumi:"s3BackupConfiguration"`
	// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedEventsOnly` and `AllEvents`.  Default value is `FailedEventsOnly`.
	S3BackupMode pulumi.StringPtrInput `pulumi:"s3BackupMode"`
}

func (FirehoseDeliveryStreamExtendedS3ConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3Configuration)(nil)).Elem()
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationOutput)
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i FirehoseDeliveryStreamExtendedS3ConfigurationArgs) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationOutput).ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(ctx)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationPtrInput interface {
	pulumi.Input

	ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput
	ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput
}

type firehoseDeliveryStreamExtendedS3ConfigurationPtrType FirehoseDeliveryStreamExtendedS3ConfigurationArgs

func FirehoseDeliveryStreamExtendedS3ConfigurationPtr(v *FirehoseDeliveryStreamExtendedS3ConfigurationArgs) FirehoseDeliveryStreamExtendedS3ConfigurationPtrInput {	return (*firehoseDeliveryStreamExtendedS3ConfigurationPtrType)(v)
}

func (*firehoseDeliveryStreamExtendedS3ConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3Configuration)(nil)).Elem()
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return i.ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i *firehoseDeliveryStreamExtendedS3ConfigurationPtrType) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationOutput struct { *pulumi.OutputState }

func (FirehoseDeliveryStreamExtendedS3ConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirehoseDeliveryStreamExtendedS3Configuration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationOutput() FirehoseDeliveryStreamExtendedS3ConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return o.ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(context.Background())
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return o.ApplyT(func(v FirehoseDeliveryStreamExtendedS3Configuration) *FirehoseDeliveryStreamExtendedS3Configuration {
		return &v
	}).(FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput)
}
// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3Configuration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3Configuration) *int { return v.BufferInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3Configuration) *int { return v.BufferSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) CloudwatchLoggingOptions() kinesisFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions.FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3Configuration) *kinesisFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions.FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions { return v.CloudwatchLoggingOptions }).(kinesisFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions.FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.CompressionFormat }).(pulumi.StringPtrOutput)
}

// Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. More details given below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) DataFormatConversionConfiguration() kinesisFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration.FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3Configuration) *kinesisFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration.FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration { return v.DataFormatConversionConfiguration }).(kinesisFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration.FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput)
}

// Prefix added to failed records before writing them to S3. This prefix appears immediately following the bucket name.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.ErrorOutputPrefix }).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) ProcessingConfiguration() kinesisFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration.FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3Configuration) *kinesisFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration.FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration { return v.ProcessingConfiguration }).(kinesisFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration.FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3Configuration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) S3BackupConfiguration() kinesisFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration.FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3Configuration) *kinesisFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration.FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration { return v.S3BackupConfiguration }).(kinesisFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration.FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput)
}

// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedEventsOnly` and `AllEvents`.  Default value is `FailedEventsOnly`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

type FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput struct { *pulumi.OutputState}

func (FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirehoseDeliveryStreamExtendedS3Configuration)(nil)).Elem()
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput() FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) ToFirehoseDeliveryStreamExtendedS3ConfigurationPtrOutputWithContext(ctx context.Context) FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput {
	return o
}

func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) Elem() FirehoseDeliveryStreamExtendedS3ConfigurationOutput {
	return o.ApplyT(func (v *FirehoseDeliveryStreamExtendedS3Configuration) FirehoseDeliveryStreamExtendedS3Configuration { return *v }).(FirehoseDeliveryStreamExtendedS3ConfigurationOutput)
}

// The ARN of the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3Configuration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) BufferInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3Configuration) *int { return v.BufferInterval }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
// We recommend setting SizeInMBs to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec set SizeInMBs to be 10 MB or higher.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3Configuration) *int { return v.BufferSize }).(pulumi.IntPtrOutput)
}

// The CloudWatch Logging Options for the delivery stream. More details are given below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) CloudwatchLoggingOptions() kinesisFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions.FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3Configuration) *kinesisFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions.FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions { return v.CloudwatchLoggingOptions }).(kinesisFirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions.FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is UNCOMPRESSED. Other supported values are GZIP, ZIP & Snappy. If the destination is redshift you cannot use ZIP or Snappy.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) CompressionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.CompressionFormat }).(pulumi.StringPtrOutput)
}

// Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. More details given below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) DataFormatConversionConfiguration() kinesisFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration.FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3Configuration) *kinesisFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration.FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration { return v.DataFormatConversionConfiguration }).(kinesisFirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration.FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationPtrOutput)
}

// Prefix added to failed records before writing them to S3. This prefix appears immediately following the bucket name.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.ErrorOutputPrefix }).(pulumi.StringPtrOutput)
}

// Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
// be used.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The "YYYY/MM/DD/HH" time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The data processing configuration.  More details are given below.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) ProcessingConfiguration() kinesisFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration.FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3Configuration) *kinesisFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration.FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration { return v.ProcessingConfiguration }).(kinesisFirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration.FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationPtrOutput)
}

// The role that Kinesis Data Firehose can use to access AWS Glue. This role must be in the same account you use for Kinesis Data Firehose. Cross-account roles aren't allowed.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3Configuration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The configuration for backup in Amazon S3. Required if `s3BackupMode` is `Enabled`. Supports the same fields as `s3Configuration` object.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) S3BackupConfiguration() kinesisFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration.FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3Configuration) *kinesisFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration.FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration { return v.S3BackupConfiguration }).(kinesisFirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration.FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationPtrOutput)
}

// Defines how documents should be delivered to Amazon S3.  Valid values are `FailedEventsOnly` and `AllEvents`.  Default value is `FailedEventsOnly`.
func (o FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func (v FirehoseDeliveryStreamExtendedS3Configuration) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationOutput{})
	pulumi.RegisterOutputType(FirehoseDeliveryStreamExtendedS3ConfigurationPtrOutput{})
}
