// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ebs

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Snapshot struct {
	pulumi.CustomResourceState

	Arn                 pulumi.StringOutput    `pulumi:"arn"`
	DataEncryptionKeyId pulumi.StringOutput    `pulumi:"dataEncryptionKeyId"`
	Description         pulumi.StringPtrOutput `pulumi:"description"`
	Encrypted           pulumi.BoolOutput      `pulumi:"encrypted"`
	KmsKeyId            pulumi.StringOutput    `pulumi:"kmsKeyId"`
	OwnerAlias          pulumi.StringOutput    `pulumi:"ownerAlias"`
	OwnerId             pulumi.StringOutput    `pulumi:"ownerId"`
	Tags                pulumi.StringMapOutput `pulumi:"tags"`
	VolumeId            pulumi.StringOutput    `pulumi:"volumeId"`
	VolumeSize          pulumi.IntOutput       `pulumi:"volumeSize"`
}

// NewSnapshot registers a new resource with the given unique name, arguments, and options.
func NewSnapshot(ctx *pulumi.Context,
	name string, args *SnapshotArgs, opts ...pulumi.ResourceOption) (*Snapshot, error) {
	if args == nil || args.VolumeId == nil {
		return nil, errors.New("missing required argument 'VolumeId'")
	}
	if args == nil {
		args = &SnapshotArgs{}
	}
	var resource Snapshot
	err := ctx.RegisterResource("aws:ebs/snapshot:Snapshot", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSnapshot gets an existing Snapshot resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSnapshot(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SnapshotState, opts ...pulumi.ResourceOption) (*Snapshot, error) {
	var resource Snapshot
	err := ctx.ReadResource("aws:ebs/snapshot:Snapshot", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Snapshot resources.
type snapshotState struct {
	Arn                 *string           `pulumi:"arn"`
	DataEncryptionKeyId *string           `pulumi:"dataEncryptionKeyId"`
	Description         *string           `pulumi:"description"`
	Encrypted           *bool             `pulumi:"encrypted"`
	KmsKeyId            *string           `pulumi:"kmsKeyId"`
	OwnerAlias          *string           `pulumi:"ownerAlias"`
	OwnerId             *string           `pulumi:"ownerId"`
	Tags                map[string]string `pulumi:"tags"`
	VolumeId            *string           `pulumi:"volumeId"`
	VolumeSize          *int              `pulumi:"volumeSize"`
}

type SnapshotState struct {
	Arn                 pulumi.StringPtrInput
	DataEncryptionKeyId pulumi.StringPtrInput
	Description         pulumi.StringPtrInput
	Encrypted           pulumi.BoolPtrInput
	KmsKeyId            pulumi.StringPtrInput
	OwnerAlias          pulumi.StringPtrInput
	OwnerId             pulumi.StringPtrInput
	Tags                pulumi.StringMapInput
	VolumeId            pulumi.StringPtrInput
	VolumeSize          pulumi.IntPtrInput
}

func (SnapshotState) ElementType() reflect.Type {
	return reflect.TypeOf((*snapshotState)(nil)).Elem()
}

type snapshotArgs struct {
	Description *string           `pulumi:"description"`
	Tags        map[string]string `pulumi:"tags"`
	VolumeId    string            `pulumi:"volumeId"`
}

// The set of arguments for constructing a Snapshot resource.
type SnapshotArgs struct {
	Description pulumi.StringPtrInput
	Tags        pulumi.StringMapInput
	VolumeId    pulumi.StringInput
}

func (SnapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*snapshotArgs)(nil)).Elem()
}
