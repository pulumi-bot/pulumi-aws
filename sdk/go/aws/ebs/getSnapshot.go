// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ebs

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

func LookupSnapshot(ctx *pulumi.Context, args *LookupSnapshotArgs, opts ...pulumi.InvokeOption) (*LookupSnapshotResult, error) {
	var rv LookupSnapshotResult
	err := ctx.Invoke("aws:ebs/getSnapshot:getSnapshot", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSnapshot.
type LookupSnapshotArgs struct {
	Filters             []GetSnapshotFilter `pulumi:"filters"`
	MostRecent          *bool               `pulumi:"mostRecent"`
	Owners              []string            `pulumi:"owners"`
	RestorableByUserIds []string            `pulumi:"restorableByUserIds"`
	SnapshotIds         []string            `pulumi:"snapshotIds"`
	Tags                map[string]string   `pulumi:"tags"`
}

// A collection of values returned by getSnapshot.
type LookupSnapshotResult struct {
	Arn                 string              `pulumi:"arn"`
	DataEncryptionKeyId string              `pulumi:"dataEncryptionKeyId"`
	Description         string              `pulumi:"description"`
	Encrypted           bool                `pulumi:"encrypted"`
	Filters             []GetSnapshotFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                  string            `pulumi:"id"`
	KmsKeyId            string            `pulumi:"kmsKeyId"`
	MostRecent          *bool             `pulumi:"mostRecent"`
	OwnerAlias          string            `pulumi:"ownerAlias"`
	OwnerId             string            `pulumi:"ownerId"`
	Owners              []string          `pulumi:"owners"`
	RestorableByUserIds []string          `pulumi:"restorableByUserIds"`
	SnapshotId          string            `pulumi:"snapshotId"`
	SnapshotIds         []string          `pulumi:"snapshotIds"`
	State               string            `pulumi:"state"`
	Tags                map[string]string `pulumi:"tags"`
	VolumeId            string            `pulumi:"volumeId"`
	VolumeSize          int               `pulumi:"volumeSize"`
}
