// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datasync

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type LocationSmb struct {
	pulumi.CustomResourceState

	AgentArns      pulumi.StringArrayOutput         `pulumi:"agentArns"`
	Arn            pulumi.StringOutput              `pulumi:"arn"`
	Domain         pulumi.StringOutput              `pulumi:"domain"`
	MountOptions   LocationSmbMountOptionsPtrOutput `pulumi:"mountOptions"`
	Password       pulumi.StringOutput              `pulumi:"password"`
	ServerHostname pulumi.StringOutput              `pulumi:"serverHostname"`
	Subdirectory   pulumi.StringOutput              `pulumi:"subdirectory"`
	Tags           pulumi.StringMapOutput           `pulumi:"tags"`
	Uri            pulumi.StringOutput              `pulumi:"uri"`
	User           pulumi.StringOutput              `pulumi:"user"`
}

// NewLocationSmb registers a new resource with the given unique name, arguments, and options.
func NewLocationSmb(ctx *pulumi.Context,
	name string, args *LocationSmbArgs, opts ...pulumi.ResourceOption) (*LocationSmb, error) {
	if args == nil || args.AgentArns == nil {
		return nil, errors.New("missing required argument 'AgentArns'")
	}
	if args == nil || args.Password == nil {
		return nil, errors.New("missing required argument 'Password'")
	}
	if args == nil || args.ServerHostname == nil {
		return nil, errors.New("missing required argument 'ServerHostname'")
	}
	if args == nil || args.Subdirectory == nil {
		return nil, errors.New("missing required argument 'Subdirectory'")
	}
	if args == nil || args.User == nil {
		return nil, errors.New("missing required argument 'User'")
	}
	if args == nil {
		args = &LocationSmbArgs{}
	}
	var resource LocationSmb
	err := ctx.RegisterResource("aws:datasync/locationSmb:LocationSmb", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLocationSmb gets an existing LocationSmb resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLocationSmb(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LocationSmbState, opts ...pulumi.ResourceOption) (*LocationSmb, error) {
	var resource LocationSmb
	err := ctx.ReadResource("aws:datasync/locationSmb:LocationSmb", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LocationSmb resources.
type locationSmbState struct {
	AgentArns      []string                 `pulumi:"agentArns"`
	Arn            *string                  `pulumi:"arn"`
	Domain         *string                  `pulumi:"domain"`
	MountOptions   *LocationSmbMountOptions `pulumi:"mountOptions"`
	Password       *string                  `pulumi:"password"`
	ServerHostname *string                  `pulumi:"serverHostname"`
	Subdirectory   *string                  `pulumi:"subdirectory"`
	Tags           map[string]string        `pulumi:"tags"`
	Uri            *string                  `pulumi:"uri"`
	User           *string                  `pulumi:"user"`
}

type LocationSmbState struct {
	AgentArns      pulumi.StringArrayInput
	Arn            pulumi.StringPtrInput
	Domain         pulumi.StringPtrInput
	MountOptions   LocationSmbMountOptionsPtrInput
	Password       pulumi.StringPtrInput
	ServerHostname pulumi.StringPtrInput
	Subdirectory   pulumi.StringPtrInput
	Tags           pulumi.StringMapInput
	Uri            pulumi.StringPtrInput
	User           pulumi.StringPtrInput
}

func (LocationSmbState) ElementType() reflect.Type {
	return reflect.TypeOf((*locationSmbState)(nil)).Elem()
}

type locationSmbArgs struct {
	AgentArns      []string                 `pulumi:"agentArns"`
	Domain         *string                  `pulumi:"domain"`
	MountOptions   *LocationSmbMountOptions `pulumi:"mountOptions"`
	Password       string                   `pulumi:"password"`
	ServerHostname string                   `pulumi:"serverHostname"`
	Subdirectory   string                   `pulumi:"subdirectory"`
	Tags           map[string]string        `pulumi:"tags"`
	User           string                   `pulumi:"user"`
}

// The set of arguments for constructing a LocationSmb resource.
type LocationSmbArgs struct {
	AgentArns      pulumi.StringArrayInput
	Domain         pulumi.StringPtrInput
	MountOptions   LocationSmbMountOptionsPtrInput
	Password       pulumi.StringInput
	ServerHostname pulumi.StringInput
	Subdirectory   pulumi.StringInput
	Tags           pulumi.StringMapInput
	User           pulumi.StringInput
}

func (LocationSmbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*locationSmbArgs)(nil)).Elem()
}
