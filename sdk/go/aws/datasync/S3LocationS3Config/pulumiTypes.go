// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package S3LocationS3Config

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type S3LocationS3Config struct {
	// Amazon Resource Names (ARN) of the IAM Role used to connect to the S3 Bucket.
	BucketAccessRoleArn string `pulumi:"bucketAccessRoleArn"`
}

type S3LocationS3ConfigInput interface {
	pulumi.Input

	ToS3LocationS3ConfigOutput() S3LocationS3ConfigOutput
	ToS3LocationS3ConfigOutputWithContext(context.Context) S3LocationS3ConfigOutput
}

type S3LocationS3ConfigArgs struct {
	// Amazon Resource Names (ARN) of the IAM Role used to connect to the S3 Bucket.
	BucketAccessRoleArn pulumi.StringInput `pulumi:"bucketAccessRoleArn"`
}

func (S3LocationS3ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3LocationS3Config)(nil)).Elem()
}

func (i S3LocationS3ConfigArgs) ToS3LocationS3ConfigOutput() S3LocationS3ConfigOutput {
	return i.ToS3LocationS3ConfigOutputWithContext(context.Background())
}

func (i S3LocationS3ConfigArgs) ToS3LocationS3ConfigOutputWithContext(ctx context.Context) S3LocationS3ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3LocationS3ConfigOutput)
}

func (i S3LocationS3ConfigArgs) ToS3LocationS3ConfigPtrOutput() S3LocationS3ConfigPtrOutput {
	return i.ToS3LocationS3ConfigPtrOutputWithContext(context.Background())
}

func (i S3LocationS3ConfigArgs) ToS3LocationS3ConfigPtrOutputWithContext(ctx context.Context) S3LocationS3ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3LocationS3ConfigOutput).ToS3LocationS3ConfigPtrOutputWithContext(ctx)
}

type S3LocationS3ConfigPtrInput interface {
	pulumi.Input

	ToS3LocationS3ConfigPtrOutput() S3LocationS3ConfigPtrOutput
	ToS3LocationS3ConfigPtrOutputWithContext(context.Context) S3LocationS3ConfigPtrOutput
}

type s3locationS3ConfigPtrType S3LocationS3ConfigArgs

func S3LocationS3ConfigPtr(v *S3LocationS3ConfigArgs) S3LocationS3ConfigPtrInput {	return (*s3locationS3ConfigPtrType)(v)
}

func (*s3locationS3ConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**S3LocationS3Config)(nil)).Elem()
}

func (i *s3locationS3ConfigPtrType) ToS3LocationS3ConfigPtrOutput() S3LocationS3ConfigPtrOutput {
	return i.ToS3LocationS3ConfigPtrOutputWithContext(context.Background())
}

func (i *s3locationS3ConfigPtrType) ToS3LocationS3ConfigPtrOutputWithContext(ctx context.Context) S3LocationS3ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3LocationS3ConfigPtrOutput)
}

type S3LocationS3ConfigOutput struct { *pulumi.OutputState }

func (S3LocationS3ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3LocationS3Config)(nil)).Elem()
}

func (o S3LocationS3ConfigOutput) ToS3LocationS3ConfigOutput() S3LocationS3ConfigOutput {
	return o
}

func (o S3LocationS3ConfigOutput) ToS3LocationS3ConfigOutputWithContext(ctx context.Context) S3LocationS3ConfigOutput {
	return o
}

func (o S3LocationS3ConfigOutput) ToS3LocationS3ConfigPtrOutput() S3LocationS3ConfigPtrOutput {
	return o.ToS3LocationS3ConfigPtrOutputWithContext(context.Background())
}

func (o S3LocationS3ConfigOutput) ToS3LocationS3ConfigPtrOutputWithContext(ctx context.Context) S3LocationS3ConfigPtrOutput {
	return o.ApplyT(func(v S3LocationS3Config) *S3LocationS3Config {
		return &v
	}).(S3LocationS3ConfigPtrOutput)
}
// Amazon Resource Names (ARN) of the IAM Role used to connect to the S3 Bucket.
func (o S3LocationS3ConfigOutput) BucketAccessRoleArn() pulumi.StringOutput {
	return o.ApplyT(func (v S3LocationS3Config) string { return v.BucketAccessRoleArn }).(pulumi.StringOutput)
}

type S3LocationS3ConfigPtrOutput struct { *pulumi.OutputState}

func (S3LocationS3ConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3LocationS3Config)(nil)).Elem()
}

func (o S3LocationS3ConfigPtrOutput) ToS3LocationS3ConfigPtrOutput() S3LocationS3ConfigPtrOutput {
	return o
}

func (o S3LocationS3ConfigPtrOutput) ToS3LocationS3ConfigPtrOutputWithContext(ctx context.Context) S3LocationS3ConfigPtrOutput {
	return o
}

func (o S3LocationS3ConfigPtrOutput) Elem() S3LocationS3ConfigOutput {
	return o.ApplyT(func (v *S3LocationS3Config) S3LocationS3Config { return *v }).(S3LocationS3ConfigOutput)
}

// Amazon Resource Names (ARN) of the IAM Role used to connect to the S3 Bucket.
func (o S3LocationS3ConfigPtrOutput) BucketAccessRoleArn() pulumi.StringOutput {
	return o.ApplyT(func (v S3LocationS3Config) string { return v.BucketAccessRoleArn }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(S3LocationS3ConfigOutput{})
	pulumi.RegisterOutputType(S3LocationS3ConfigPtrOutput{})
}
