// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datasync

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Agent struct {
	pulumi.CustomResourceState

	ActivationKey pulumi.StringOutput    `pulumi:"activationKey"`
	Arn           pulumi.StringOutput    `pulumi:"arn"`
	IpAddress     pulumi.StringOutput    `pulumi:"ipAddress"`
	Name          pulumi.StringOutput    `pulumi:"name"`
	Tags          pulumi.StringMapOutput `pulumi:"tags"`
}

// NewAgent registers a new resource with the given unique name, arguments, and options.
func NewAgent(ctx *pulumi.Context,
	name string, args *AgentArgs, opts ...pulumi.ResourceOption) (*Agent, error) {
	if args == nil {
		args = &AgentArgs{}
	}
	var resource Agent
	err := ctx.RegisterResource("aws:datasync/agent:Agent", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAgent gets an existing Agent resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAgent(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AgentState, opts ...pulumi.ResourceOption) (*Agent, error) {
	var resource Agent
	err := ctx.ReadResource("aws:datasync/agent:Agent", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Agent resources.
type agentState struct {
	ActivationKey *string           `pulumi:"activationKey"`
	Arn           *string           `pulumi:"arn"`
	IpAddress     *string           `pulumi:"ipAddress"`
	Name          *string           `pulumi:"name"`
	Tags          map[string]string `pulumi:"tags"`
}

type AgentState struct {
	ActivationKey pulumi.StringPtrInput
	Arn           pulumi.StringPtrInput
	IpAddress     pulumi.StringPtrInput
	Name          pulumi.StringPtrInput
	Tags          pulumi.StringMapInput
}

func (AgentState) ElementType() reflect.Type {
	return reflect.TypeOf((*agentState)(nil)).Elem()
}

type agentArgs struct {
	ActivationKey *string           `pulumi:"activationKey"`
	IpAddress     *string           `pulumi:"ipAddress"`
	Name          *string           `pulumi:"name"`
	Tags          map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Agent resource.
type AgentArgs struct {
	ActivationKey pulumi.StringPtrInput
	IpAddress     pulumi.StringPtrInput
	Name          pulumi.StringPtrInput
	Tags          pulumi.StringMapInput
}

func (AgentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*agentArgs)(nil)).Elem()
}
