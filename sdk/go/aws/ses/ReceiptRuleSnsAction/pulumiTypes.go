// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ReceiptRuleSnsAction

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ReceiptRuleSnsAction struct {
	// The position of the action in the receipt rule
	Position int `pulumi:"position"`
	// The ARN of an SNS topic to notify
	TopicArn string `pulumi:"topicArn"`
}

type ReceiptRuleSnsActionInput interface {
	pulumi.Input

	ToReceiptRuleSnsActionOutput() ReceiptRuleSnsActionOutput
	ToReceiptRuleSnsActionOutputWithContext(context.Context) ReceiptRuleSnsActionOutput
}

type ReceiptRuleSnsActionArgs struct {
	// The position of the action in the receipt rule
	Position pulumi.IntInput `pulumi:"position"`
	// The ARN of an SNS topic to notify
	TopicArn pulumi.StringInput `pulumi:"topicArn"`
}

func (ReceiptRuleSnsActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiptRuleSnsAction)(nil)).Elem()
}

func (i ReceiptRuleSnsActionArgs) ToReceiptRuleSnsActionOutput() ReceiptRuleSnsActionOutput {
	return i.ToReceiptRuleSnsActionOutputWithContext(context.Background())
}

func (i ReceiptRuleSnsActionArgs) ToReceiptRuleSnsActionOutputWithContext(ctx context.Context) ReceiptRuleSnsActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiptRuleSnsActionOutput)
}

type ReceiptRuleSnsActionArrayInput interface {
	pulumi.Input

	ToReceiptRuleSnsActionArrayOutput() ReceiptRuleSnsActionArrayOutput
	ToReceiptRuleSnsActionArrayOutputWithContext(context.Context) ReceiptRuleSnsActionArrayOutput
}

type ReceiptRuleSnsActionArray []ReceiptRuleSnsActionInput

func (ReceiptRuleSnsActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReceiptRuleSnsAction)(nil)).Elem()
}

func (i ReceiptRuleSnsActionArray) ToReceiptRuleSnsActionArrayOutput() ReceiptRuleSnsActionArrayOutput {
	return i.ToReceiptRuleSnsActionArrayOutputWithContext(context.Background())
}

func (i ReceiptRuleSnsActionArray) ToReceiptRuleSnsActionArrayOutputWithContext(ctx context.Context) ReceiptRuleSnsActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiptRuleSnsActionArrayOutput)
}

type ReceiptRuleSnsActionOutput struct { *pulumi.OutputState }

func (ReceiptRuleSnsActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiptRuleSnsAction)(nil)).Elem()
}

func (o ReceiptRuleSnsActionOutput) ToReceiptRuleSnsActionOutput() ReceiptRuleSnsActionOutput {
	return o
}

func (o ReceiptRuleSnsActionOutput) ToReceiptRuleSnsActionOutputWithContext(ctx context.Context) ReceiptRuleSnsActionOutput {
	return o
}

// The position of the action in the receipt rule
func (o ReceiptRuleSnsActionOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func (v ReceiptRuleSnsAction) int { return v.Position }).(pulumi.IntOutput)
}

// The ARN of an SNS topic to notify
func (o ReceiptRuleSnsActionOutput) TopicArn() pulumi.StringOutput {
	return o.ApplyT(func (v ReceiptRuleSnsAction) string { return v.TopicArn }).(pulumi.StringOutput)
}

type ReceiptRuleSnsActionArrayOutput struct { *pulumi.OutputState}

func (ReceiptRuleSnsActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReceiptRuleSnsAction)(nil)).Elem()
}

func (o ReceiptRuleSnsActionArrayOutput) ToReceiptRuleSnsActionArrayOutput() ReceiptRuleSnsActionArrayOutput {
	return o
}

func (o ReceiptRuleSnsActionArrayOutput) ToReceiptRuleSnsActionArrayOutputWithContext(ctx context.Context) ReceiptRuleSnsActionArrayOutput {
	return o
}

func (o ReceiptRuleSnsActionArrayOutput) Index(i pulumi.IntInput) ReceiptRuleSnsActionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ReceiptRuleSnsAction {
		return vs[0].([]ReceiptRuleSnsAction)[vs[1].(int)]
	}).(ReceiptRuleSnsActionOutput)
}

func init() {
	pulumi.RegisterOutputType(ReceiptRuleSnsActionOutput{})
	pulumi.RegisterOutputType(ReceiptRuleSnsActionArrayOutput{})
}
