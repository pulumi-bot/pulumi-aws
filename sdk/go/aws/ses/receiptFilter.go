// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ReceiptFilter struct {
	pulumi.CustomResourceState

	Arn    pulumi.StringOutput `pulumi:"arn"`
	Cidr   pulumi.StringOutput `pulumi:"cidr"`
	Name   pulumi.StringOutput `pulumi:"name"`
	Policy pulumi.StringOutput `pulumi:"policy"`
}

// NewReceiptFilter registers a new resource with the given unique name, arguments, and options.
func NewReceiptFilter(ctx *pulumi.Context,
	name string, args *ReceiptFilterArgs, opts ...pulumi.ResourceOption) (*ReceiptFilter, error) {
	if args == nil || args.Cidr == nil {
		return nil, errors.New("missing required argument 'Cidr'")
	}
	if args == nil || args.Policy == nil {
		return nil, errors.New("missing required argument 'Policy'")
	}
	if args == nil {
		args = &ReceiptFilterArgs{}
	}
	var resource ReceiptFilter
	err := ctx.RegisterResource("aws:ses/receiptFilter:ReceiptFilter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReceiptFilter gets an existing ReceiptFilter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReceiptFilter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReceiptFilterState, opts ...pulumi.ResourceOption) (*ReceiptFilter, error) {
	var resource ReceiptFilter
	err := ctx.ReadResource("aws:ses/receiptFilter:ReceiptFilter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReceiptFilter resources.
type receiptFilterState struct {
	Arn    *string `pulumi:"arn"`
	Cidr   *string `pulumi:"cidr"`
	Name   *string `pulumi:"name"`
	Policy *string `pulumi:"policy"`
}

type ReceiptFilterState struct {
	Arn    pulumi.StringPtrInput
	Cidr   pulumi.StringPtrInput
	Name   pulumi.StringPtrInput
	Policy pulumi.StringPtrInput
}

func (ReceiptFilterState) ElementType() reflect.Type {
	return reflect.TypeOf((*receiptFilterState)(nil)).Elem()
}

type receiptFilterArgs struct {
	Cidr   string  `pulumi:"cidr"`
	Name   *string `pulumi:"name"`
	Policy string  `pulumi:"policy"`
}

// The set of arguments for constructing a ReceiptFilter resource.
type ReceiptFilterArgs struct {
	Cidr   pulumi.StringInput
	Name   pulumi.StringPtrInput
	Policy pulumi.StringInput
}

func (ReceiptFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*receiptFilterArgs)(nil)).Elem()
}
