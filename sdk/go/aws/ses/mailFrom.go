// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type MailFrom struct {
	pulumi.CustomResourceState

	BehaviorOnMxFailure pulumi.StringPtrOutput `pulumi:"behaviorOnMxFailure"`
	Domain              pulumi.StringOutput    `pulumi:"domain"`
	MailFromDomain      pulumi.StringOutput    `pulumi:"mailFromDomain"`
}

// NewMailFrom registers a new resource with the given unique name, arguments, and options.
func NewMailFrom(ctx *pulumi.Context,
	name string, args *MailFromArgs, opts ...pulumi.ResourceOption) (*MailFrom, error) {
	if args == nil || args.Domain == nil {
		return nil, errors.New("missing required argument 'Domain'")
	}
	if args == nil || args.MailFromDomain == nil {
		return nil, errors.New("missing required argument 'MailFromDomain'")
	}
	if args == nil {
		args = &MailFromArgs{}
	}
	var resource MailFrom
	err := ctx.RegisterResource("aws:ses/mailFrom:MailFrom", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMailFrom gets an existing MailFrom resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMailFrom(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MailFromState, opts ...pulumi.ResourceOption) (*MailFrom, error) {
	var resource MailFrom
	err := ctx.ReadResource("aws:ses/mailFrom:MailFrom", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MailFrom resources.
type mailFromState struct {
	BehaviorOnMxFailure *string `pulumi:"behaviorOnMxFailure"`
	Domain              *string `pulumi:"domain"`
	MailFromDomain      *string `pulumi:"mailFromDomain"`
}

type MailFromState struct {
	BehaviorOnMxFailure pulumi.StringPtrInput
	Domain              pulumi.StringPtrInput
	MailFromDomain      pulumi.StringPtrInput
}

func (MailFromState) ElementType() reflect.Type {
	return reflect.TypeOf((*mailFromState)(nil)).Elem()
}

type mailFromArgs struct {
	BehaviorOnMxFailure *string `pulumi:"behaviorOnMxFailure"`
	Domain              string  `pulumi:"domain"`
	MailFromDomain      string  `pulumi:"mailFromDomain"`
}

// The set of arguments for constructing a MailFrom resource.
type MailFromArgs struct {
	BehaviorOnMxFailure pulumi.StringPtrInput
	Domain              pulumi.StringInput
	MailFromDomain      pulumi.StringInput
}

func (MailFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mailFromArgs)(nil)).Elem()
}
