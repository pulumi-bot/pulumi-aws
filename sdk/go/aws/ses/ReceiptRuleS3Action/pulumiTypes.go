// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ReceiptRuleS3Action

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ReceiptRuleS3Action struct {
	// The name of the S3 bucket
	BucketName string `pulumi:"bucketName"`
	// The ARN of the KMS key
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The key prefix of the S3 bucket
	ObjectKeyPrefix *string `pulumi:"objectKeyPrefix"`
	// The position of the action in the receipt rule
	Position int `pulumi:"position"`
	// The ARN of an SNS topic to notify
	TopicArn *string `pulumi:"topicArn"`
}

type ReceiptRuleS3ActionInput interface {
	pulumi.Input

	ToReceiptRuleS3ActionOutput() ReceiptRuleS3ActionOutput
	ToReceiptRuleS3ActionOutputWithContext(context.Context) ReceiptRuleS3ActionOutput
}

type ReceiptRuleS3ActionArgs struct {
	// The name of the S3 bucket
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// The ARN of the KMS key
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The key prefix of the S3 bucket
	ObjectKeyPrefix pulumi.StringPtrInput `pulumi:"objectKeyPrefix"`
	// The position of the action in the receipt rule
	Position pulumi.IntInput `pulumi:"position"`
	// The ARN of an SNS topic to notify
	TopicArn pulumi.StringPtrInput `pulumi:"topicArn"`
}

func (ReceiptRuleS3ActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiptRuleS3Action)(nil)).Elem()
}

func (i ReceiptRuleS3ActionArgs) ToReceiptRuleS3ActionOutput() ReceiptRuleS3ActionOutput {
	return i.ToReceiptRuleS3ActionOutputWithContext(context.Background())
}

func (i ReceiptRuleS3ActionArgs) ToReceiptRuleS3ActionOutputWithContext(ctx context.Context) ReceiptRuleS3ActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiptRuleS3ActionOutput)
}

type ReceiptRuleS3ActionArrayInput interface {
	pulumi.Input

	ToReceiptRuleS3ActionArrayOutput() ReceiptRuleS3ActionArrayOutput
	ToReceiptRuleS3ActionArrayOutputWithContext(context.Context) ReceiptRuleS3ActionArrayOutput
}

type ReceiptRuleS3ActionArray []ReceiptRuleS3ActionInput

func (ReceiptRuleS3ActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReceiptRuleS3Action)(nil)).Elem()
}

func (i ReceiptRuleS3ActionArray) ToReceiptRuleS3ActionArrayOutput() ReceiptRuleS3ActionArrayOutput {
	return i.ToReceiptRuleS3ActionArrayOutputWithContext(context.Background())
}

func (i ReceiptRuleS3ActionArray) ToReceiptRuleS3ActionArrayOutputWithContext(ctx context.Context) ReceiptRuleS3ActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiptRuleS3ActionArrayOutput)
}

type ReceiptRuleS3ActionOutput struct { *pulumi.OutputState }

func (ReceiptRuleS3ActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiptRuleS3Action)(nil)).Elem()
}

func (o ReceiptRuleS3ActionOutput) ToReceiptRuleS3ActionOutput() ReceiptRuleS3ActionOutput {
	return o
}

func (o ReceiptRuleS3ActionOutput) ToReceiptRuleS3ActionOutputWithContext(ctx context.Context) ReceiptRuleS3ActionOutput {
	return o
}

// The name of the S3 bucket
func (o ReceiptRuleS3ActionOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func (v ReceiptRuleS3Action) string { return v.BucketName }).(pulumi.StringOutput)
}

// The ARN of the KMS key
func (o ReceiptRuleS3ActionOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ReceiptRuleS3Action) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The key prefix of the S3 bucket
func (o ReceiptRuleS3ActionOutput) ObjectKeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ReceiptRuleS3Action) *string { return v.ObjectKeyPrefix }).(pulumi.StringPtrOutput)
}

// The position of the action in the receipt rule
func (o ReceiptRuleS3ActionOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func (v ReceiptRuleS3Action) int { return v.Position }).(pulumi.IntOutput)
}

// The ARN of an SNS topic to notify
func (o ReceiptRuleS3ActionOutput) TopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ReceiptRuleS3Action) *string { return v.TopicArn }).(pulumi.StringPtrOutput)
}

type ReceiptRuleS3ActionArrayOutput struct { *pulumi.OutputState}

func (ReceiptRuleS3ActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReceiptRuleS3Action)(nil)).Elem()
}

func (o ReceiptRuleS3ActionArrayOutput) ToReceiptRuleS3ActionArrayOutput() ReceiptRuleS3ActionArrayOutput {
	return o
}

func (o ReceiptRuleS3ActionArrayOutput) ToReceiptRuleS3ActionArrayOutputWithContext(ctx context.Context) ReceiptRuleS3ActionArrayOutput {
	return o
}

func (o ReceiptRuleS3ActionArrayOutput) Index(i pulumi.IntInput) ReceiptRuleS3ActionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ReceiptRuleS3Action {
		return vs[0].([]ReceiptRuleS3Action)[vs[1].(int)]
	}).(ReceiptRuleS3ActionOutput)
}

func init() {
	pulumi.RegisterOutputType(ReceiptRuleS3ActionOutput{})
	pulumi.RegisterOutputType(ReceiptRuleS3ActionArrayOutput{})
}
