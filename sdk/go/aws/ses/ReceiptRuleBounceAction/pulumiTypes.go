// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ReceiptRuleBounceAction

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ReceiptRuleBounceAction struct {
	// The message to send
	Message string `pulumi:"message"`
	// The position of the action in the receipt rule
	Position int `pulumi:"position"`
	// The email address of the sender
	Sender string `pulumi:"sender"`
	// The RFC 5321 SMTP reply code
	SmtpReplyCode string `pulumi:"smtpReplyCode"`
	// The RFC 3463 SMTP enhanced status code
	StatusCode *string `pulumi:"statusCode"`
	// The ARN of an SNS topic to notify
	TopicArn *string `pulumi:"topicArn"`
}

type ReceiptRuleBounceActionInput interface {
	pulumi.Input

	ToReceiptRuleBounceActionOutput() ReceiptRuleBounceActionOutput
	ToReceiptRuleBounceActionOutputWithContext(context.Context) ReceiptRuleBounceActionOutput
}

type ReceiptRuleBounceActionArgs struct {
	// The message to send
	Message pulumi.StringInput `pulumi:"message"`
	// The position of the action in the receipt rule
	Position pulumi.IntInput `pulumi:"position"`
	// The email address of the sender
	Sender pulumi.StringInput `pulumi:"sender"`
	// The RFC 5321 SMTP reply code
	SmtpReplyCode pulumi.StringInput `pulumi:"smtpReplyCode"`
	// The RFC 3463 SMTP enhanced status code
	StatusCode pulumi.StringPtrInput `pulumi:"statusCode"`
	// The ARN of an SNS topic to notify
	TopicArn pulumi.StringPtrInput `pulumi:"topicArn"`
}

func (ReceiptRuleBounceActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiptRuleBounceAction)(nil)).Elem()
}

func (i ReceiptRuleBounceActionArgs) ToReceiptRuleBounceActionOutput() ReceiptRuleBounceActionOutput {
	return i.ToReceiptRuleBounceActionOutputWithContext(context.Background())
}

func (i ReceiptRuleBounceActionArgs) ToReceiptRuleBounceActionOutputWithContext(ctx context.Context) ReceiptRuleBounceActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiptRuleBounceActionOutput)
}

type ReceiptRuleBounceActionArrayInput interface {
	pulumi.Input

	ToReceiptRuleBounceActionArrayOutput() ReceiptRuleBounceActionArrayOutput
	ToReceiptRuleBounceActionArrayOutputWithContext(context.Context) ReceiptRuleBounceActionArrayOutput
}

type ReceiptRuleBounceActionArray []ReceiptRuleBounceActionInput

func (ReceiptRuleBounceActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReceiptRuleBounceAction)(nil)).Elem()
}

func (i ReceiptRuleBounceActionArray) ToReceiptRuleBounceActionArrayOutput() ReceiptRuleBounceActionArrayOutput {
	return i.ToReceiptRuleBounceActionArrayOutputWithContext(context.Background())
}

func (i ReceiptRuleBounceActionArray) ToReceiptRuleBounceActionArrayOutputWithContext(ctx context.Context) ReceiptRuleBounceActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiptRuleBounceActionArrayOutput)
}

type ReceiptRuleBounceActionOutput struct { *pulumi.OutputState }

func (ReceiptRuleBounceActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiptRuleBounceAction)(nil)).Elem()
}

func (o ReceiptRuleBounceActionOutput) ToReceiptRuleBounceActionOutput() ReceiptRuleBounceActionOutput {
	return o
}

func (o ReceiptRuleBounceActionOutput) ToReceiptRuleBounceActionOutputWithContext(ctx context.Context) ReceiptRuleBounceActionOutput {
	return o
}

// The message to send
func (o ReceiptRuleBounceActionOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func (v ReceiptRuleBounceAction) string { return v.Message }).(pulumi.StringOutput)
}

// The position of the action in the receipt rule
func (o ReceiptRuleBounceActionOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func (v ReceiptRuleBounceAction) int { return v.Position }).(pulumi.IntOutput)
}

// The email address of the sender
func (o ReceiptRuleBounceActionOutput) Sender() pulumi.StringOutput {
	return o.ApplyT(func (v ReceiptRuleBounceAction) string { return v.Sender }).(pulumi.StringOutput)
}

// The RFC 5321 SMTP reply code
func (o ReceiptRuleBounceActionOutput) SmtpReplyCode() pulumi.StringOutput {
	return o.ApplyT(func (v ReceiptRuleBounceAction) string { return v.SmtpReplyCode }).(pulumi.StringOutput)
}

// The RFC 3463 SMTP enhanced status code
func (o ReceiptRuleBounceActionOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ReceiptRuleBounceAction) *string { return v.StatusCode }).(pulumi.StringPtrOutput)
}

// The ARN of an SNS topic to notify
func (o ReceiptRuleBounceActionOutput) TopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ReceiptRuleBounceAction) *string { return v.TopicArn }).(pulumi.StringPtrOutput)
}

type ReceiptRuleBounceActionArrayOutput struct { *pulumi.OutputState}

func (ReceiptRuleBounceActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReceiptRuleBounceAction)(nil)).Elem()
}

func (o ReceiptRuleBounceActionArrayOutput) ToReceiptRuleBounceActionArrayOutput() ReceiptRuleBounceActionArrayOutput {
	return o
}

func (o ReceiptRuleBounceActionArrayOutput) ToReceiptRuleBounceActionArrayOutputWithContext(ctx context.Context) ReceiptRuleBounceActionArrayOutput {
	return o
}

func (o ReceiptRuleBounceActionArrayOutput) Index(i pulumi.IntInput) ReceiptRuleBounceActionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ReceiptRuleBounceAction {
		return vs[0].([]ReceiptRuleBounceAction)[vs[1].(int)]
	}).(ReceiptRuleBounceActionOutput)
}

func init() {
	pulumi.RegisterOutputType(ReceiptRuleBounceActionOutput{})
	pulumi.RegisterOutputType(ReceiptRuleBounceActionArrayOutput{})
}
