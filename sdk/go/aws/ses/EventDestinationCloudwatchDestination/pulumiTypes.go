// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package EventDestinationCloudwatchDestination

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type EventDestinationCloudwatchDestination struct {
	// The default value for the event
	DefaultValue string `pulumi:"defaultValue"`
	// The name for the dimension
	DimensionName string `pulumi:"dimensionName"`
	// The source for the value. It can be either `"messageTag"` or `"emailHeader"`
	ValueSource string `pulumi:"valueSource"`
}

type EventDestinationCloudwatchDestinationInput interface {
	pulumi.Input

	ToEventDestinationCloudwatchDestinationOutput() EventDestinationCloudwatchDestinationOutput
	ToEventDestinationCloudwatchDestinationOutputWithContext(context.Context) EventDestinationCloudwatchDestinationOutput
}

type EventDestinationCloudwatchDestinationArgs struct {
	// The default value for the event
	DefaultValue pulumi.StringInput `pulumi:"defaultValue"`
	// The name for the dimension
	DimensionName pulumi.StringInput `pulumi:"dimensionName"`
	// The source for the value. It can be either `"messageTag"` or `"emailHeader"`
	ValueSource pulumi.StringInput `pulumi:"valueSource"`
}

func (EventDestinationCloudwatchDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationCloudwatchDestination)(nil)).Elem()
}

func (i EventDestinationCloudwatchDestinationArgs) ToEventDestinationCloudwatchDestinationOutput() EventDestinationCloudwatchDestinationOutput {
	return i.ToEventDestinationCloudwatchDestinationOutputWithContext(context.Background())
}

func (i EventDestinationCloudwatchDestinationArgs) ToEventDestinationCloudwatchDestinationOutputWithContext(ctx context.Context) EventDestinationCloudwatchDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationCloudwatchDestinationOutput)
}

type EventDestinationCloudwatchDestinationArrayInput interface {
	pulumi.Input

	ToEventDestinationCloudwatchDestinationArrayOutput() EventDestinationCloudwatchDestinationArrayOutput
	ToEventDestinationCloudwatchDestinationArrayOutputWithContext(context.Context) EventDestinationCloudwatchDestinationArrayOutput
}

type EventDestinationCloudwatchDestinationArray []EventDestinationCloudwatchDestinationInput

func (EventDestinationCloudwatchDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationCloudwatchDestination)(nil)).Elem()
}

func (i EventDestinationCloudwatchDestinationArray) ToEventDestinationCloudwatchDestinationArrayOutput() EventDestinationCloudwatchDestinationArrayOutput {
	return i.ToEventDestinationCloudwatchDestinationArrayOutputWithContext(context.Background())
}

func (i EventDestinationCloudwatchDestinationArray) ToEventDestinationCloudwatchDestinationArrayOutputWithContext(ctx context.Context) EventDestinationCloudwatchDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationCloudwatchDestinationArrayOutput)
}

type EventDestinationCloudwatchDestinationOutput struct { *pulumi.OutputState }

func (EventDestinationCloudwatchDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationCloudwatchDestination)(nil)).Elem()
}

func (o EventDestinationCloudwatchDestinationOutput) ToEventDestinationCloudwatchDestinationOutput() EventDestinationCloudwatchDestinationOutput {
	return o
}

func (o EventDestinationCloudwatchDestinationOutput) ToEventDestinationCloudwatchDestinationOutputWithContext(ctx context.Context) EventDestinationCloudwatchDestinationOutput {
	return o
}

// The default value for the event
func (o EventDestinationCloudwatchDestinationOutput) DefaultValue() pulumi.StringOutput {
	return o.ApplyT(func (v EventDestinationCloudwatchDestination) string { return v.DefaultValue }).(pulumi.StringOutput)
}

// The name for the dimension
func (o EventDestinationCloudwatchDestinationOutput) DimensionName() pulumi.StringOutput {
	return o.ApplyT(func (v EventDestinationCloudwatchDestination) string { return v.DimensionName }).(pulumi.StringOutput)
}

// The source for the value. It can be either `"messageTag"` or `"emailHeader"`
func (o EventDestinationCloudwatchDestinationOutput) ValueSource() pulumi.StringOutput {
	return o.ApplyT(func (v EventDestinationCloudwatchDestination) string { return v.ValueSource }).(pulumi.StringOutput)
}

type EventDestinationCloudwatchDestinationArrayOutput struct { *pulumi.OutputState}

func (EventDestinationCloudwatchDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationCloudwatchDestination)(nil)).Elem()
}

func (o EventDestinationCloudwatchDestinationArrayOutput) ToEventDestinationCloudwatchDestinationArrayOutput() EventDestinationCloudwatchDestinationArrayOutput {
	return o
}

func (o EventDestinationCloudwatchDestinationArrayOutput) ToEventDestinationCloudwatchDestinationArrayOutputWithContext(ctx context.Context) EventDestinationCloudwatchDestinationArrayOutput {
	return o
}

func (o EventDestinationCloudwatchDestinationArrayOutput) Index(i pulumi.IntInput) EventDestinationCloudwatchDestinationOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) EventDestinationCloudwatchDestination {
		return vs[0].([]EventDestinationCloudwatchDestination)[vs[1].(int)]
	}).(EventDestinationCloudwatchDestinationOutput)
}

func init() {
	pulumi.RegisterOutputType(EventDestinationCloudwatchDestinationOutput{})
	pulumi.RegisterOutputType(EventDestinationCloudwatchDestinationArrayOutput{})
}
