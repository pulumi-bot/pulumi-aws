// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type EventDestination struct {
	pulumi.CustomResourceState

	CloudwatchDestinations EventDestinationCloudwatchDestinationArrayOutput `pulumi:"cloudwatchDestinations"`
	ConfigurationSetName   pulumi.StringOutput                              `pulumi:"configurationSetName"`
	Enabled                pulumi.BoolPtrOutput                             `pulumi:"enabled"`
	KinesisDestination     EventDestinationKinesisDestinationPtrOutput      `pulumi:"kinesisDestination"`
	MatchingTypes          pulumi.StringArrayOutput                         `pulumi:"matchingTypes"`
	Name                   pulumi.StringOutput                              `pulumi:"name"`
	SnsDestination         EventDestinationSnsDestinationPtrOutput          `pulumi:"snsDestination"`
}

// NewEventDestination registers a new resource with the given unique name, arguments, and options.
func NewEventDestination(ctx *pulumi.Context,
	name string, args *EventDestinationArgs, opts ...pulumi.ResourceOption) (*EventDestination, error) {
	if args == nil || args.ConfigurationSetName == nil {
		return nil, errors.New("missing required argument 'ConfigurationSetName'")
	}
	if args == nil || args.MatchingTypes == nil {
		return nil, errors.New("missing required argument 'MatchingTypes'")
	}
	if args == nil {
		args = &EventDestinationArgs{}
	}
	var resource EventDestination
	err := ctx.RegisterResource("aws:ses/eventDestination:EventDestination", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEventDestination gets an existing EventDestination resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEventDestination(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EventDestinationState, opts ...pulumi.ResourceOption) (*EventDestination, error) {
	var resource EventDestination
	err := ctx.ReadResource("aws:ses/eventDestination:EventDestination", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EventDestination resources.
type eventDestinationState struct {
	CloudwatchDestinations []EventDestinationCloudwatchDestination `pulumi:"cloudwatchDestinations"`
	ConfigurationSetName   *string                                 `pulumi:"configurationSetName"`
	Enabled                *bool                                   `pulumi:"enabled"`
	KinesisDestination     *EventDestinationKinesisDestination     `pulumi:"kinesisDestination"`
	MatchingTypes          []string                                `pulumi:"matchingTypes"`
	Name                   *string                                 `pulumi:"name"`
	SnsDestination         *EventDestinationSnsDestination         `pulumi:"snsDestination"`
}

type EventDestinationState struct {
	CloudwatchDestinations EventDestinationCloudwatchDestinationArrayInput
	ConfigurationSetName   pulumi.StringPtrInput
	Enabled                pulumi.BoolPtrInput
	KinesisDestination     EventDestinationKinesisDestinationPtrInput
	MatchingTypes          pulumi.StringArrayInput
	Name                   pulumi.StringPtrInput
	SnsDestination         EventDestinationSnsDestinationPtrInput
}

func (EventDestinationState) ElementType() reflect.Type {
	return reflect.TypeOf((*eventDestinationState)(nil)).Elem()
}

type eventDestinationArgs struct {
	CloudwatchDestinations []EventDestinationCloudwatchDestination `pulumi:"cloudwatchDestinations"`
	ConfigurationSetName   string                                  `pulumi:"configurationSetName"`
	Enabled                *bool                                   `pulumi:"enabled"`
	KinesisDestination     *EventDestinationKinesisDestination     `pulumi:"kinesisDestination"`
	MatchingTypes          []string                                `pulumi:"matchingTypes"`
	Name                   *string                                 `pulumi:"name"`
	SnsDestination         *EventDestinationSnsDestination         `pulumi:"snsDestination"`
}

// The set of arguments for constructing a EventDestination resource.
type EventDestinationArgs struct {
	CloudwatchDestinations EventDestinationCloudwatchDestinationArrayInput
	ConfigurationSetName   pulumi.StringInput
	Enabled                pulumi.BoolPtrInput
	KinesisDestination     EventDestinationKinesisDestinationPtrInput
	MatchingTypes          pulumi.StringArrayInput
	Name                   pulumi.StringPtrInput
	SnsDestination         EventDestinationSnsDestinationPtrInput
}

func (EventDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*eventDestinationArgs)(nil)).Elem()
}
