// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Organization struct {
	pulumi.CustomResourceState

	Accounts                   OrganizationAccountArrayOutput          `pulumi:"accounts"`
	Arn                        pulumi.StringOutput                     `pulumi:"arn"`
	AwsServiceAccessPrincipals pulumi.StringArrayOutput                `pulumi:"awsServiceAccessPrincipals"`
	EnabledPolicyTypes         pulumi.StringArrayOutput                `pulumi:"enabledPolicyTypes"`
	FeatureSet                 pulumi.StringPtrOutput                  `pulumi:"featureSet"`
	MasterAccountArn           pulumi.StringOutput                     `pulumi:"masterAccountArn"`
	MasterAccountEmail         pulumi.StringOutput                     `pulumi:"masterAccountEmail"`
	MasterAccountId            pulumi.StringOutput                     `pulumi:"masterAccountId"`
	NonMasterAccounts          OrganizationNonMasterAccountArrayOutput `pulumi:"nonMasterAccounts"`
	Roots                      OrganizationRootArrayOutput             `pulumi:"roots"`
}

// NewOrganization registers a new resource with the given unique name, arguments, and options.
func NewOrganization(ctx *pulumi.Context,
	name string, args *OrganizationArgs, opts ...pulumi.ResourceOption) (*Organization, error) {
	if args == nil {
		args = &OrganizationArgs{}
	}
	var resource Organization
	err := ctx.RegisterResource("aws:organizations/organization:Organization", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganization gets an existing Organization resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganization(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationState, opts ...pulumi.ResourceOption) (*Organization, error) {
	var resource Organization
	err := ctx.ReadResource("aws:organizations/organization:Organization", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Organization resources.
type organizationState struct {
	Accounts                   []OrganizationAccount          `pulumi:"accounts"`
	Arn                        *string                        `pulumi:"arn"`
	AwsServiceAccessPrincipals []string                       `pulumi:"awsServiceAccessPrincipals"`
	EnabledPolicyTypes         []string                       `pulumi:"enabledPolicyTypes"`
	FeatureSet                 *string                        `pulumi:"featureSet"`
	MasterAccountArn           *string                        `pulumi:"masterAccountArn"`
	MasterAccountEmail         *string                        `pulumi:"masterAccountEmail"`
	MasterAccountId            *string                        `pulumi:"masterAccountId"`
	NonMasterAccounts          []OrganizationNonMasterAccount `pulumi:"nonMasterAccounts"`
	Roots                      []OrganizationRoot             `pulumi:"roots"`
}

type OrganizationState struct {
	Accounts                   OrganizationAccountArrayInput
	Arn                        pulumi.StringPtrInput
	AwsServiceAccessPrincipals pulumi.StringArrayInput
	EnabledPolicyTypes         pulumi.StringArrayInput
	FeatureSet                 pulumi.StringPtrInput
	MasterAccountArn           pulumi.StringPtrInput
	MasterAccountEmail         pulumi.StringPtrInput
	MasterAccountId            pulumi.StringPtrInput
	NonMasterAccounts          OrganizationNonMasterAccountArrayInput
	Roots                      OrganizationRootArrayInput
}

func (OrganizationState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationState)(nil)).Elem()
}

type organizationArgs struct {
	AwsServiceAccessPrincipals []string `pulumi:"awsServiceAccessPrincipals"`
	EnabledPolicyTypes         []string `pulumi:"enabledPolicyTypes"`
	FeatureSet                 *string  `pulumi:"featureSet"`
}

// The set of arguments for constructing a Organization resource.
type OrganizationArgs struct {
	AwsServiceAccessPrincipals pulumi.StringArrayInput
	EnabledPolicyTypes         pulumi.StringArrayInput
	FeatureSet                 pulumi.StringPtrInput
}

func (OrganizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationArgs)(nil)).Elem()
}
