// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Account struct {
	pulumi.CustomResourceState

	Arn                    pulumi.StringOutput    `pulumi:"arn"`
	Email                  pulumi.StringOutput    `pulumi:"email"`
	IamUserAccessToBilling pulumi.StringPtrOutput `pulumi:"iamUserAccessToBilling"`
	JoinedMethod           pulumi.StringOutput    `pulumi:"joinedMethod"`
	JoinedTimestamp        pulumi.StringOutput    `pulumi:"joinedTimestamp"`
	Name                   pulumi.StringOutput    `pulumi:"name"`
	ParentId               pulumi.StringOutput    `pulumi:"parentId"`
	RoleName               pulumi.StringPtrOutput `pulumi:"roleName"`
	Status                 pulumi.StringOutput    `pulumi:"status"`
	Tags                   pulumi.StringMapOutput `pulumi:"tags"`
}

// NewAccount registers a new resource with the given unique name, arguments, and options.
func NewAccount(ctx *pulumi.Context,
	name string, args *AccountArgs, opts ...pulumi.ResourceOption) (*Account, error) {
	if args == nil || args.Email == nil {
		return nil, errors.New("missing required argument 'Email'")
	}
	if args == nil {
		args = &AccountArgs{}
	}
	var resource Account
	err := ctx.RegisterResource("aws:organizations/account:Account", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccount gets an existing Account resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountState, opts ...pulumi.ResourceOption) (*Account, error) {
	var resource Account
	err := ctx.ReadResource("aws:organizations/account:Account", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Account resources.
type accountState struct {
	Arn                    *string           `pulumi:"arn"`
	Email                  *string           `pulumi:"email"`
	IamUserAccessToBilling *string           `pulumi:"iamUserAccessToBilling"`
	JoinedMethod           *string           `pulumi:"joinedMethod"`
	JoinedTimestamp        *string           `pulumi:"joinedTimestamp"`
	Name                   *string           `pulumi:"name"`
	ParentId               *string           `pulumi:"parentId"`
	RoleName               *string           `pulumi:"roleName"`
	Status                 *string           `pulumi:"status"`
	Tags                   map[string]string `pulumi:"tags"`
}

type AccountState struct {
	Arn                    pulumi.StringPtrInput
	Email                  pulumi.StringPtrInput
	IamUserAccessToBilling pulumi.StringPtrInput
	JoinedMethod           pulumi.StringPtrInput
	JoinedTimestamp        pulumi.StringPtrInput
	Name                   pulumi.StringPtrInput
	ParentId               pulumi.StringPtrInput
	RoleName               pulumi.StringPtrInput
	Status                 pulumi.StringPtrInput
	Tags                   pulumi.StringMapInput
}

func (AccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountState)(nil)).Elem()
}

type accountArgs struct {
	Email                  string            `pulumi:"email"`
	IamUserAccessToBilling *string           `pulumi:"iamUserAccessToBilling"`
	Name                   *string           `pulumi:"name"`
	ParentId               *string           `pulumi:"parentId"`
	RoleName               *string           `pulumi:"roleName"`
	Tags                   map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Account resource.
type AccountArgs struct {
	Email                  pulumi.StringInput
	IamUserAccessToBilling pulumi.StringPtrInput
	Name                   pulumi.StringPtrInput
	ParentId               pulumi.StringPtrInput
	RoleName               pulumi.StringPtrInput
	Tags                   pulumi.StringMapInput
}

func (AccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountArgs)(nil)).Elem()
}
