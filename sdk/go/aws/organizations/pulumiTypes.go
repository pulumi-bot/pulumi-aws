// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type OrganizationAccount struct {
	// ARN of the root
	Arn string `pulumi:"arn"`
	// Email of the account
	Email string `pulumi:"email"`
	// Identifier of the root
	Id string `pulumi:"id"`
	// The name of the policy type
	Name string `pulumi:"name"`
	// The status of the policy type as it relates to the associated root
	Status string `pulumi:"status"`
}

type OrganizationAccountInput interface {
	pulumi.Input

	ToOrganizationAccountOutput() OrganizationAccountOutput
	ToOrganizationAccountOutputWithContext(context.Context) OrganizationAccountOutput
}

type OrganizationAccountArgs struct {
	// ARN of the root
	Arn pulumi.StringInput `pulumi:"arn"`
	// Email of the account
	Email pulumi.StringInput `pulumi:"email"`
	// Identifier of the root
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the policy type
	Name pulumi.StringInput `pulumi:"name"`
	// The status of the policy type as it relates to the associated root
	Status pulumi.StringInput `pulumi:"status"`
}

func (OrganizationAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationAccount)(nil)).Elem()
}

func (i OrganizationAccountArgs) ToOrganizationAccountOutput() OrganizationAccountOutput {
	return i.ToOrganizationAccountOutputWithContext(context.Background())
}

func (i OrganizationAccountArgs) ToOrganizationAccountOutputWithContext(ctx context.Context) OrganizationAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationAccountOutput)
}

type OrganizationAccountArrayInput interface {
	pulumi.Input

	ToOrganizationAccountArrayOutput() OrganizationAccountArrayOutput
	ToOrganizationAccountArrayOutputWithContext(context.Context) OrganizationAccountArrayOutput
}

type OrganizationAccountArray []OrganizationAccountInput

func (OrganizationAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationAccount)(nil)).Elem()
}

func (i OrganizationAccountArray) ToOrganizationAccountArrayOutput() OrganizationAccountArrayOutput {
	return i.ToOrganizationAccountArrayOutputWithContext(context.Background())
}

func (i OrganizationAccountArray) ToOrganizationAccountArrayOutputWithContext(ctx context.Context) OrganizationAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationAccountArrayOutput)
}

type OrganizationAccountOutput struct{ *pulumi.OutputState }

func (OrganizationAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationAccount)(nil)).Elem()
}

func (o OrganizationAccountOutput) ToOrganizationAccountOutput() OrganizationAccountOutput {
	return o
}

func (o OrganizationAccountOutput) ToOrganizationAccountOutputWithContext(ctx context.Context) OrganizationAccountOutput {
	return o
}

// ARN of the root
func (o OrganizationAccountOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationAccount) string { return v.Arn }).(pulumi.StringOutput)
}

// Email of the account
func (o OrganizationAccountOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationAccount) string { return v.Email }).(pulumi.StringOutput)
}

// Identifier of the root
func (o OrganizationAccountOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationAccount) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the policy type
func (o OrganizationAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationAccount) string { return v.Name }).(pulumi.StringOutput)
}

// The status of the policy type as it relates to the associated root
func (o OrganizationAccountOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationAccount) string { return v.Status }).(pulumi.StringOutput)
}

type OrganizationAccountArrayOutput struct{ *pulumi.OutputState }

func (OrganizationAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationAccount)(nil)).Elem()
}

func (o OrganizationAccountArrayOutput) ToOrganizationAccountArrayOutput() OrganizationAccountArrayOutput {
	return o
}

func (o OrganizationAccountArrayOutput) ToOrganizationAccountArrayOutputWithContext(ctx context.Context) OrganizationAccountArrayOutput {
	return o
}

func (o OrganizationAccountArrayOutput) Index(i pulumi.IntInput) OrganizationAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationAccount {
		return vs[0].([]OrganizationAccount)[vs[1].(int)]
	}).(OrganizationAccountOutput)
}

type OrganizationAccountState struct {
	// ARN of the root
	Arn *string `pulumi:"arn"`
	// Email of the account
	Email *string `pulumi:"email"`
	// Identifier of the root
	Id *string `pulumi:"id"`
	// The name of the policy type
	Name *string `pulumi:"name"`
	// The status of the policy type as it relates to the associated root
	Status *string `pulumi:"status"`
}

type OrganizationAccountStateInput interface {
	pulumi.Input

	ToOrganizationAccountStateOutput() OrganizationAccountStateOutput
	ToOrganizationAccountStateOutputWithContext(context.Context) OrganizationAccountStateOutput
}

type OrganizationAccountStateArgs struct {
	// ARN of the root
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// Email of the account
	Email pulumi.StringPtrInput `pulumi:"email"`
	// Identifier of the root
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the policy type
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The status of the policy type as it relates to the associated root
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (OrganizationAccountStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationAccountState)(nil)).Elem()
}

func (i OrganizationAccountStateArgs) ToOrganizationAccountStateOutput() OrganizationAccountStateOutput {
	return i.ToOrganizationAccountStateOutputWithContext(context.Background())
}

func (i OrganizationAccountStateArgs) ToOrganizationAccountStateOutputWithContext(ctx context.Context) OrganizationAccountStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationAccountStateOutput)
}

type OrganizationAccountStateArrayInput interface {
	pulumi.Input

	ToOrganizationAccountStateArrayOutput() OrganizationAccountStateArrayOutput
	ToOrganizationAccountStateArrayOutputWithContext(context.Context) OrganizationAccountStateArrayOutput
}

type OrganizationAccountStateArray []OrganizationAccountStateInput

func (OrganizationAccountStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationAccountState)(nil)).Elem()
}

func (i OrganizationAccountStateArray) ToOrganizationAccountStateArrayOutput() OrganizationAccountStateArrayOutput {
	return i.ToOrganizationAccountStateArrayOutputWithContext(context.Background())
}

func (i OrganizationAccountStateArray) ToOrganizationAccountStateArrayOutputWithContext(ctx context.Context) OrganizationAccountStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationAccountStateArrayOutput)
}

type OrganizationAccountStateOutput struct{ *pulumi.OutputState }

func (OrganizationAccountStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationAccountState)(nil)).Elem()
}

func (o OrganizationAccountStateOutput) ToOrganizationAccountStateOutput() OrganizationAccountStateOutput {
	return o
}

func (o OrganizationAccountStateOutput) ToOrganizationAccountStateOutputWithContext(ctx context.Context) OrganizationAccountStateOutput {
	return o
}

// ARN of the root
func (o OrganizationAccountStateOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationAccountState) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Email of the account
func (o OrganizationAccountStateOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationAccountState) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// Identifier of the root
func (o OrganizationAccountStateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationAccountState) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the policy type
func (o OrganizationAccountStateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationAccountState) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The status of the policy type as it relates to the associated root
func (o OrganizationAccountStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationAccountState) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type OrganizationAccountStateArrayOutput struct{ *pulumi.OutputState }

func (OrganizationAccountStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationAccountState)(nil)).Elem()
}

func (o OrganizationAccountStateArrayOutput) ToOrganizationAccountStateArrayOutput() OrganizationAccountStateArrayOutput {
	return o
}

func (o OrganizationAccountStateArrayOutput) ToOrganizationAccountStateArrayOutputWithContext(ctx context.Context) OrganizationAccountStateArrayOutput {
	return o
}

func (o OrganizationAccountStateArrayOutput) Index(i pulumi.IntInput) OrganizationAccountStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationAccountState {
		return vs[0].([]OrganizationAccountState)[vs[1].(int)]
	}).(OrganizationAccountStateOutput)
}

type OrganizationNonMasterAccount struct {
	// ARN of the root
	Arn string `pulumi:"arn"`
	// Email of the account
	Email string `pulumi:"email"`
	// Identifier of the root
	Id string `pulumi:"id"`
	// The name of the policy type
	Name string `pulumi:"name"`
	// The status of the policy type as it relates to the associated root
	Status string `pulumi:"status"`
}

type OrganizationNonMasterAccountInput interface {
	pulumi.Input

	ToOrganizationNonMasterAccountOutput() OrganizationNonMasterAccountOutput
	ToOrganizationNonMasterAccountOutputWithContext(context.Context) OrganizationNonMasterAccountOutput
}

type OrganizationNonMasterAccountArgs struct {
	// ARN of the root
	Arn pulumi.StringInput `pulumi:"arn"`
	// Email of the account
	Email pulumi.StringInput `pulumi:"email"`
	// Identifier of the root
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the policy type
	Name pulumi.StringInput `pulumi:"name"`
	// The status of the policy type as it relates to the associated root
	Status pulumi.StringInput `pulumi:"status"`
}

func (OrganizationNonMasterAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationNonMasterAccount)(nil)).Elem()
}

func (i OrganizationNonMasterAccountArgs) ToOrganizationNonMasterAccountOutput() OrganizationNonMasterAccountOutput {
	return i.ToOrganizationNonMasterAccountOutputWithContext(context.Background())
}

func (i OrganizationNonMasterAccountArgs) ToOrganizationNonMasterAccountOutputWithContext(ctx context.Context) OrganizationNonMasterAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationNonMasterAccountOutput)
}

type OrganizationNonMasterAccountArrayInput interface {
	pulumi.Input

	ToOrganizationNonMasterAccountArrayOutput() OrganizationNonMasterAccountArrayOutput
	ToOrganizationNonMasterAccountArrayOutputWithContext(context.Context) OrganizationNonMasterAccountArrayOutput
}

type OrganizationNonMasterAccountArray []OrganizationNonMasterAccountInput

func (OrganizationNonMasterAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationNonMasterAccount)(nil)).Elem()
}

func (i OrganizationNonMasterAccountArray) ToOrganizationNonMasterAccountArrayOutput() OrganizationNonMasterAccountArrayOutput {
	return i.ToOrganizationNonMasterAccountArrayOutputWithContext(context.Background())
}

func (i OrganizationNonMasterAccountArray) ToOrganizationNonMasterAccountArrayOutputWithContext(ctx context.Context) OrganizationNonMasterAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationNonMasterAccountArrayOutput)
}

type OrganizationNonMasterAccountOutput struct{ *pulumi.OutputState }

func (OrganizationNonMasterAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationNonMasterAccount)(nil)).Elem()
}

func (o OrganizationNonMasterAccountOutput) ToOrganizationNonMasterAccountOutput() OrganizationNonMasterAccountOutput {
	return o
}

func (o OrganizationNonMasterAccountOutput) ToOrganizationNonMasterAccountOutputWithContext(ctx context.Context) OrganizationNonMasterAccountOutput {
	return o
}

// ARN of the root
func (o OrganizationNonMasterAccountOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationNonMasterAccount) string { return v.Arn }).(pulumi.StringOutput)
}

// Email of the account
func (o OrganizationNonMasterAccountOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationNonMasterAccount) string { return v.Email }).(pulumi.StringOutput)
}

// Identifier of the root
func (o OrganizationNonMasterAccountOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationNonMasterAccount) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the policy type
func (o OrganizationNonMasterAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationNonMasterAccount) string { return v.Name }).(pulumi.StringOutput)
}

// The status of the policy type as it relates to the associated root
func (o OrganizationNonMasterAccountOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationNonMasterAccount) string { return v.Status }).(pulumi.StringOutput)
}

type OrganizationNonMasterAccountArrayOutput struct{ *pulumi.OutputState }

func (OrganizationNonMasterAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationNonMasterAccount)(nil)).Elem()
}

func (o OrganizationNonMasterAccountArrayOutput) ToOrganizationNonMasterAccountArrayOutput() OrganizationNonMasterAccountArrayOutput {
	return o
}

func (o OrganizationNonMasterAccountArrayOutput) ToOrganizationNonMasterAccountArrayOutputWithContext(ctx context.Context) OrganizationNonMasterAccountArrayOutput {
	return o
}

func (o OrganizationNonMasterAccountArrayOutput) Index(i pulumi.IntInput) OrganizationNonMasterAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationNonMasterAccount {
		return vs[0].([]OrganizationNonMasterAccount)[vs[1].(int)]
	}).(OrganizationNonMasterAccountOutput)
}

type OrganizationNonMasterAccountState struct {
	// ARN of the root
	Arn *string `pulumi:"arn"`
	// Email of the account
	Email *string `pulumi:"email"`
	// Identifier of the root
	Id *string `pulumi:"id"`
	// The name of the policy type
	Name *string `pulumi:"name"`
	// The status of the policy type as it relates to the associated root
	Status *string `pulumi:"status"`
}

type OrganizationNonMasterAccountStateInput interface {
	pulumi.Input

	ToOrganizationNonMasterAccountStateOutput() OrganizationNonMasterAccountStateOutput
	ToOrganizationNonMasterAccountStateOutputWithContext(context.Context) OrganizationNonMasterAccountStateOutput
}

type OrganizationNonMasterAccountStateArgs struct {
	// ARN of the root
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// Email of the account
	Email pulumi.StringPtrInput `pulumi:"email"`
	// Identifier of the root
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the policy type
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The status of the policy type as it relates to the associated root
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (OrganizationNonMasterAccountStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationNonMasterAccountState)(nil)).Elem()
}

func (i OrganizationNonMasterAccountStateArgs) ToOrganizationNonMasterAccountStateOutput() OrganizationNonMasterAccountStateOutput {
	return i.ToOrganizationNonMasterAccountStateOutputWithContext(context.Background())
}

func (i OrganizationNonMasterAccountStateArgs) ToOrganizationNonMasterAccountStateOutputWithContext(ctx context.Context) OrganizationNonMasterAccountStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationNonMasterAccountStateOutput)
}

type OrganizationNonMasterAccountStateArrayInput interface {
	pulumi.Input

	ToOrganizationNonMasterAccountStateArrayOutput() OrganizationNonMasterAccountStateArrayOutput
	ToOrganizationNonMasterAccountStateArrayOutputWithContext(context.Context) OrganizationNonMasterAccountStateArrayOutput
}

type OrganizationNonMasterAccountStateArray []OrganizationNonMasterAccountStateInput

func (OrganizationNonMasterAccountStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationNonMasterAccountState)(nil)).Elem()
}

func (i OrganizationNonMasterAccountStateArray) ToOrganizationNonMasterAccountStateArrayOutput() OrganizationNonMasterAccountStateArrayOutput {
	return i.ToOrganizationNonMasterAccountStateArrayOutputWithContext(context.Background())
}

func (i OrganizationNonMasterAccountStateArray) ToOrganizationNonMasterAccountStateArrayOutputWithContext(ctx context.Context) OrganizationNonMasterAccountStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationNonMasterAccountStateArrayOutput)
}

type OrganizationNonMasterAccountStateOutput struct{ *pulumi.OutputState }

func (OrganizationNonMasterAccountStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationNonMasterAccountState)(nil)).Elem()
}

func (o OrganizationNonMasterAccountStateOutput) ToOrganizationNonMasterAccountStateOutput() OrganizationNonMasterAccountStateOutput {
	return o
}

func (o OrganizationNonMasterAccountStateOutput) ToOrganizationNonMasterAccountStateOutputWithContext(ctx context.Context) OrganizationNonMasterAccountStateOutput {
	return o
}

// ARN of the root
func (o OrganizationNonMasterAccountStateOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationNonMasterAccountState) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Email of the account
func (o OrganizationNonMasterAccountStateOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationNonMasterAccountState) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// Identifier of the root
func (o OrganizationNonMasterAccountStateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationNonMasterAccountState) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the policy type
func (o OrganizationNonMasterAccountStateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationNonMasterAccountState) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The status of the policy type as it relates to the associated root
func (o OrganizationNonMasterAccountStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationNonMasterAccountState) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type OrganizationNonMasterAccountStateArrayOutput struct{ *pulumi.OutputState }

func (OrganizationNonMasterAccountStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationNonMasterAccountState)(nil)).Elem()
}

func (o OrganizationNonMasterAccountStateArrayOutput) ToOrganizationNonMasterAccountStateArrayOutput() OrganizationNonMasterAccountStateArrayOutput {
	return o
}

func (o OrganizationNonMasterAccountStateArrayOutput) ToOrganizationNonMasterAccountStateArrayOutputWithContext(ctx context.Context) OrganizationNonMasterAccountStateArrayOutput {
	return o
}

func (o OrganizationNonMasterAccountStateArrayOutput) Index(i pulumi.IntInput) OrganizationNonMasterAccountStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationNonMasterAccountState {
		return vs[0].([]OrganizationNonMasterAccountState)[vs[1].(int)]
	}).(OrganizationNonMasterAccountStateOutput)
}

type OrganizationRoot struct {
	// ARN of the root
	Arn string `pulumi:"arn"`
	// Identifier of the root
	Id string `pulumi:"id"`
	// The name of the policy type
	Name string `pulumi:"name"`
	// List of policy types enabled for this root. All elements have these attributes:
	PolicyTypes []OrganizationRootPolicyType `pulumi:"policyTypes"`
}

type OrganizationRootInput interface {
	pulumi.Input

	ToOrganizationRootOutput() OrganizationRootOutput
	ToOrganizationRootOutputWithContext(context.Context) OrganizationRootOutput
}

type OrganizationRootArgs struct {
	// ARN of the root
	Arn pulumi.StringInput `pulumi:"arn"`
	// Identifier of the root
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the policy type
	Name pulumi.StringInput `pulumi:"name"`
	// List of policy types enabled for this root. All elements have these attributes:
	PolicyTypes OrganizationRootPolicyTypeArrayInput `pulumi:"policyTypes"`
}

func (OrganizationRootArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationRoot)(nil)).Elem()
}

func (i OrganizationRootArgs) ToOrganizationRootOutput() OrganizationRootOutput {
	return i.ToOrganizationRootOutputWithContext(context.Background())
}

func (i OrganizationRootArgs) ToOrganizationRootOutputWithContext(ctx context.Context) OrganizationRootOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationRootOutput)
}

type OrganizationRootArrayInput interface {
	pulumi.Input

	ToOrganizationRootArrayOutput() OrganizationRootArrayOutput
	ToOrganizationRootArrayOutputWithContext(context.Context) OrganizationRootArrayOutput
}

type OrganizationRootArray []OrganizationRootInput

func (OrganizationRootArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationRoot)(nil)).Elem()
}

func (i OrganizationRootArray) ToOrganizationRootArrayOutput() OrganizationRootArrayOutput {
	return i.ToOrganizationRootArrayOutputWithContext(context.Background())
}

func (i OrganizationRootArray) ToOrganizationRootArrayOutputWithContext(ctx context.Context) OrganizationRootArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationRootArrayOutput)
}

type OrganizationRootOutput struct{ *pulumi.OutputState }

func (OrganizationRootOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationRoot)(nil)).Elem()
}

func (o OrganizationRootOutput) ToOrganizationRootOutput() OrganizationRootOutput {
	return o
}

func (o OrganizationRootOutput) ToOrganizationRootOutputWithContext(ctx context.Context) OrganizationRootOutput {
	return o
}

// ARN of the root
func (o OrganizationRootOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationRoot) string { return v.Arn }).(pulumi.StringOutput)
}

// Identifier of the root
func (o OrganizationRootOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationRoot) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the policy type
func (o OrganizationRootOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationRoot) string { return v.Name }).(pulumi.StringOutput)
}

// List of policy types enabled for this root. All elements have these attributes:
func (o OrganizationRootOutput) PolicyTypes() OrganizationRootPolicyTypeArrayOutput {
	return o.ApplyT(func(v OrganizationRoot) []OrganizationRootPolicyType { return v.PolicyTypes }).(OrganizationRootPolicyTypeArrayOutput)
}

type OrganizationRootArrayOutput struct{ *pulumi.OutputState }

func (OrganizationRootArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationRoot)(nil)).Elem()
}

func (o OrganizationRootArrayOutput) ToOrganizationRootArrayOutput() OrganizationRootArrayOutput {
	return o
}

func (o OrganizationRootArrayOutput) ToOrganizationRootArrayOutputWithContext(ctx context.Context) OrganizationRootArrayOutput {
	return o
}

func (o OrganizationRootArrayOutput) Index(i pulumi.IntInput) OrganizationRootOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationRoot {
		return vs[0].([]OrganizationRoot)[vs[1].(int)]
	}).(OrganizationRootOutput)
}

type OrganizationRootPolicyType struct {
	// The status of the policy type as it relates to the associated root
	Status string `pulumi:"status"`
	Type   string `pulumi:"type"`
}

type OrganizationRootPolicyTypeInput interface {
	pulumi.Input

	ToOrganizationRootPolicyTypeOutput() OrganizationRootPolicyTypeOutput
	ToOrganizationRootPolicyTypeOutputWithContext(context.Context) OrganizationRootPolicyTypeOutput
}

type OrganizationRootPolicyTypeArgs struct {
	// The status of the policy type as it relates to the associated root
	Status pulumi.StringInput `pulumi:"status"`
	Type   pulumi.StringInput `pulumi:"type"`
}

func (OrganizationRootPolicyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationRootPolicyType)(nil)).Elem()
}

func (i OrganizationRootPolicyTypeArgs) ToOrganizationRootPolicyTypeOutput() OrganizationRootPolicyTypeOutput {
	return i.ToOrganizationRootPolicyTypeOutputWithContext(context.Background())
}

func (i OrganizationRootPolicyTypeArgs) ToOrganizationRootPolicyTypeOutputWithContext(ctx context.Context) OrganizationRootPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationRootPolicyTypeOutput)
}

type OrganizationRootPolicyTypeArrayInput interface {
	pulumi.Input

	ToOrganizationRootPolicyTypeArrayOutput() OrganizationRootPolicyTypeArrayOutput
	ToOrganizationRootPolicyTypeArrayOutputWithContext(context.Context) OrganizationRootPolicyTypeArrayOutput
}

type OrganizationRootPolicyTypeArray []OrganizationRootPolicyTypeInput

func (OrganizationRootPolicyTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationRootPolicyType)(nil)).Elem()
}

func (i OrganizationRootPolicyTypeArray) ToOrganizationRootPolicyTypeArrayOutput() OrganizationRootPolicyTypeArrayOutput {
	return i.ToOrganizationRootPolicyTypeArrayOutputWithContext(context.Background())
}

func (i OrganizationRootPolicyTypeArray) ToOrganizationRootPolicyTypeArrayOutputWithContext(ctx context.Context) OrganizationRootPolicyTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationRootPolicyTypeArrayOutput)
}

type OrganizationRootPolicyTypeOutput struct{ *pulumi.OutputState }

func (OrganizationRootPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationRootPolicyType)(nil)).Elem()
}

func (o OrganizationRootPolicyTypeOutput) ToOrganizationRootPolicyTypeOutput() OrganizationRootPolicyTypeOutput {
	return o
}

func (o OrganizationRootPolicyTypeOutput) ToOrganizationRootPolicyTypeOutputWithContext(ctx context.Context) OrganizationRootPolicyTypeOutput {
	return o
}

// The status of the policy type as it relates to the associated root
func (o OrganizationRootPolicyTypeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationRootPolicyType) string { return v.Status }).(pulumi.StringOutput)
}

func (o OrganizationRootPolicyTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationRootPolicyType) string { return v.Type }).(pulumi.StringOutput)
}

type OrganizationRootPolicyTypeArrayOutput struct{ *pulumi.OutputState }

func (OrganizationRootPolicyTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationRootPolicyType)(nil)).Elem()
}

func (o OrganizationRootPolicyTypeArrayOutput) ToOrganizationRootPolicyTypeArrayOutput() OrganizationRootPolicyTypeArrayOutput {
	return o
}

func (o OrganizationRootPolicyTypeArrayOutput) ToOrganizationRootPolicyTypeArrayOutputWithContext(ctx context.Context) OrganizationRootPolicyTypeArrayOutput {
	return o
}

func (o OrganizationRootPolicyTypeArrayOutput) Index(i pulumi.IntInput) OrganizationRootPolicyTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationRootPolicyType {
		return vs[0].([]OrganizationRootPolicyType)[vs[1].(int)]
	}).(OrganizationRootPolicyTypeOutput)
}

type OrganizationRootState struct {
	// ARN of the root
	Arn *string `pulumi:"arn"`
	// Identifier of the root
	Id *string `pulumi:"id"`
	// The name of the policy type
	Name *string `pulumi:"name"`
	// List of policy types enabled for this root. All elements have these attributes:
	PolicyTypes []OrganizationRootStatePolicyType `pulumi:"policyTypes"`
}

type OrganizationRootStateInput interface {
	pulumi.Input

	ToOrganizationRootStateOutput() OrganizationRootStateOutput
	ToOrganizationRootStateOutputWithContext(context.Context) OrganizationRootStateOutput
}

type OrganizationRootStateArgs struct {
	// ARN of the root
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// Identifier of the root
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the policy type
	Name pulumi.StringPtrInput `pulumi:"name"`
	// List of policy types enabled for this root. All elements have these attributes:
	PolicyTypes OrganizationRootStatePolicyTypeArrayInput `pulumi:"policyTypes"`
}

func (OrganizationRootStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationRootState)(nil)).Elem()
}

func (i OrganizationRootStateArgs) ToOrganizationRootStateOutput() OrganizationRootStateOutput {
	return i.ToOrganizationRootStateOutputWithContext(context.Background())
}

func (i OrganizationRootStateArgs) ToOrganizationRootStateOutputWithContext(ctx context.Context) OrganizationRootStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationRootStateOutput)
}

type OrganizationRootStateArrayInput interface {
	pulumi.Input

	ToOrganizationRootStateArrayOutput() OrganizationRootStateArrayOutput
	ToOrganizationRootStateArrayOutputWithContext(context.Context) OrganizationRootStateArrayOutput
}

type OrganizationRootStateArray []OrganizationRootStateInput

func (OrganizationRootStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationRootState)(nil)).Elem()
}

func (i OrganizationRootStateArray) ToOrganizationRootStateArrayOutput() OrganizationRootStateArrayOutput {
	return i.ToOrganizationRootStateArrayOutputWithContext(context.Background())
}

func (i OrganizationRootStateArray) ToOrganizationRootStateArrayOutputWithContext(ctx context.Context) OrganizationRootStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationRootStateArrayOutput)
}

type OrganizationRootStateOutput struct{ *pulumi.OutputState }

func (OrganizationRootStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationRootState)(nil)).Elem()
}

func (o OrganizationRootStateOutput) ToOrganizationRootStateOutput() OrganizationRootStateOutput {
	return o
}

func (o OrganizationRootStateOutput) ToOrganizationRootStateOutputWithContext(ctx context.Context) OrganizationRootStateOutput {
	return o
}

// ARN of the root
func (o OrganizationRootStateOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationRootState) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Identifier of the root
func (o OrganizationRootStateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationRootState) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the policy type
func (o OrganizationRootStateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationRootState) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List of policy types enabled for this root. All elements have these attributes:
func (o OrganizationRootStateOutput) PolicyTypes() OrganizationRootStatePolicyTypeArrayOutput {
	return o.ApplyT(func(v OrganizationRootState) []OrganizationRootStatePolicyType { return v.PolicyTypes }).(OrganizationRootStatePolicyTypeArrayOutput)
}

type OrganizationRootStateArrayOutput struct{ *pulumi.OutputState }

func (OrganizationRootStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationRootState)(nil)).Elem()
}

func (o OrganizationRootStateArrayOutput) ToOrganizationRootStateArrayOutput() OrganizationRootStateArrayOutput {
	return o
}

func (o OrganizationRootStateArrayOutput) ToOrganizationRootStateArrayOutputWithContext(ctx context.Context) OrganizationRootStateArrayOutput {
	return o
}

func (o OrganizationRootStateArrayOutput) Index(i pulumi.IntInput) OrganizationRootStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationRootState {
		return vs[0].([]OrganizationRootState)[vs[1].(int)]
	}).(OrganizationRootStateOutput)
}

type OrganizationRootStatePolicyType struct {
	// The status of the policy type as it relates to the associated root
	Status *string `pulumi:"status"`
	Type   *string `pulumi:"type"`
}

type OrganizationRootStatePolicyTypeInput interface {
	pulumi.Input

	ToOrganizationRootStatePolicyTypeOutput() OrganizationRootStatePolicyTypeOutput
	ToOrganizationRootStatePolicyTypeOutputWithContext(context.Context) OrganizationRootStatePolicyTypeOutput
}

type OrganizationRootStatePolicyTypeArgs struct {
	// The status of the policy type as it relates to the associated root
	Status pulumi.StringPtrInput `pulumi:"status"`
	Type   pulumi.StringPtrInput `pulumi:"type"`
}

func (OrganizationRootStatePolicyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationRootStatePolicyType)(nil)).Elem()
}

func (i OrganizationRootStatePolicyTypeArgs) ToOrganizationRootStatePolicyTypeOutput() OrganizationRootStatePolicyTypeOutput {
	return i.ToOrganizationRootStatePolicyTypeOutputWithContext(context.Background())
}

func (i OrganizationRootStatePolicyTypeArgs) ToOrganizationRootStatePolicyTypeOutputWithContext(ctx context.Context) OrganizationRootStatePolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationRootStatePolicyTypeOutput)
}

type OrganizationRootStatePolicyTypeArrayInput interface {
	pulumi.Input

	ToOrganizationRootStatePolicyTypeArrayOutput() OrganizationRootStatePolicyTypeArrayOutput
	ToOrganizationRootStatePolicyTypeArrayOutputWithContext(context.Context) OrganizationRootStatePolicyTypeArrayOutput
}

type OrganizationRootStatePolicyTypeArray []OrganizationRootStatePolicyTypeInput

func (OrganizationRootStatePolicyTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationRootStatePolicyType)(nil)).Elem()
}

func (i OrganizationRootStatePolicyTypeArray) ToOrganizationRootStatePolicyTypeArrayOutput() OrganizationRootStatePolicyTypeArrayOutput {
	return i.ToOrganizationRootStatePolicyTypeArrayOutputWithContext(context.Background())
}

func (i OrganizationRootStatePolicyTypeArray) ToOrganizationRootStatePolicyTypeArrayOutputWithContext(ctx context.Context) OrganizationRootStatePolicyTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationRootStatePolicyTypeArrayOutput)
}

type OrganizationRootStatePolicyTypeOutput struct{ *pulumi.OutputState }

func (OrganizationRootStatePolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationRootStatePolicyType)(nil)).Elem()
}

func (o OrganizationRootStatePolicyTypeOutput) ToOrganizationRootStatePolicyTypeOutput() OrganizationRootStatePolicyTypeOutput {
	return o
}

func (o OrganizationRootStatePolicyTypeOutput) ToOrganizationRootStatePolicyTypeOutputWithContext(ctx context.Context) OrganizationRootStatePolicyTypeOutput {
	return o
}

// The status of the policy type as it relates to the associated root
func (o OrganizationRootStatePolicyTypeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationRootStatePolicyType) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o OrganizationRootStatePolicyTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationRootStatePolicyType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type OrganizationRootStatePolicyTypeArrayOutput struct{ *pulumi.OutputState }

func (OrganizationRootStatePolicyTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationRootStatePolicyType)(nil)).Elem()
}

func (o OrganizationRootStatePolicyTypeArrayOutput) ToOrganizationRootStatePolicyTypeArrayOutput() OrganizationRootStatePolicyTypeArrayOutput {
	return o
}

func (o OrganizationRootStatePolicyTypeArrayOutput) ToOrganizationRootStatePolicyTypeArrayOutputWithContext(ctx context.Context) OrganizationRootStatePolicyTypeArrayOutput {
	return o
}

func (o OrganizationRootStatePolicyTypeArrayOutput) Index(i pulumi.IntInput) OrganizationRootStatePolicyTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationRootStatePolicyType {
		return vs[0].([]OrganizationRootStatePolicyType)[vs[1].(int)]
	}).(OrganizationRootStatePolicyTypeOutput)
}

type OrganizationalUnitAccount struct {
	// ARN of the organizational unit
	Arn string `pulumi:"arn"`
	// Email of the account
	Email string `pulumi:"email"`
	// Identifier of the organization unit
	Id string `pulumi:"id"`
	// The name for the organizational unit
	Name string `pulumi:"name"`
}

type OrganizationalUnitAccountInput interface {
	pulumi.Input

	ToOrganizationalUnitAccountOutput() OrganizationalUnitAccountOutput
	ToOrganizationalUnitAccountOutputWithContext(context.Context) OrganizationalUnitAccountOutput
}

type OrganizationalUnitAccountArgs struct {
	// ARN of the organizational unit
	Arn pulumi.StringInput `pulumi:"arn"`
	// Email of the account
	Email pulumi.StringInput `pulumi:"email"`
	// Identifier of the organization unit
	Id pulumi.StringInput `pulumi:"id"`
	// The name for the organizational unit
	Name pulumi.StringInput `pulumi:"name"`
}

func (OrganizationalUnitAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationalUnitAccount)(nil)).Elem()
}

func (i OrganizationalUnitAccountArgs) ToOrganizationalUnitAccountOutput() OrganizationalUnitAccountOutput {
	return i.ToOrganizationalUnitAccountOutputWithContext(context.Background())
}

func (i OrganizationalUnitAccountArgs) ToOrganizationalUnitAccountOutputWithContext(ctx context.Context) OrganizationalUnitAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationalUnitAccountOutput)
}

type OrganizationalUnitAccountArrayInput interface {
	pulumi.Input

	ToOrganizationalUnitAccountArrayOutput() OrganizationalUnitAccountArrayOutput
	ToOrganizationalUnitAccountArrayOutputWithContext(context.Context) OrganizationalUnitAccountArrayOutput
}

type OrganizationalUnitAccountArray []OrganizationalUnitAccountInput

func (OrganizationalUnitAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationalUnitAccount)(nil)).Elem()
}

func (i OrganizationalUnitAccountArray) ToOrganizationalUnitAccountArrayOutput() OrganizationalUnitAccountArrayOutput {
	return i.ToOrganizationalUnitAccountArrayOutputWithContext(context.Background())
}

func (i OrganizationalUnitAccountArray) ToOrganizationalUnitAccountArrayOutputWithContext(ctx context.Context) OrganizationalUnitAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationalUnitAccountArrayOutput)
}

type OrganizationalUnitAccountOutput struct{ *pulumi.OutputState }

func (OrganizationalUnitAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationalUnitAccount)(nil)).Elem()
}

func (o OrganizationalUnitAccountOutput) ToOrganizationalUnitAccountOutput() OrganizationalUnitAccountOutput {
	return o
}

func (o OrganizationalUnitAccountOutput) ToOrganizationalUnitAccountOutputWithContext(ctx context.Context) OrganizationalUnitAccountOutput {
	return o
}

// ARN of the organizational unit
func (o OrganizationalUnitAccountOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationalUnitAccount) string { return v.Arn }).(pulumi.StringOutput)
}

// Email of the account
func (o OrganizationalUnitAccountOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationalUnitAccount) string { return v.Email }).(pulumi.StringOutput)
}

// Identifier of the organization unit
func (o OrganizationalUnitAccountOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationalUnitAccount) string { return v.Id }).(pulumi.StringOutput)
}

// The name for the organizational unit
func (o OrganizationalUnitAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationalUnitAccount) string { return v.Name }).(pulumi.StringOutput)
}

type OrganizationalUnitAccountArrayOutput struct{ *pulumi.OutputState }

func (OrganizationalUnitAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationalUnitAccount)(nil)).Elem()
}

func (o OrganizationalUnitAccountArrayOutput) ToOrganizationalUnitAccountArrayOutput() OrganizationalUnitAccountArrayOutput {
	return o
}

func (o OrganizationalUnitAccountArrayOutput) ToOrganizationalUnitAccountArrayOutputWithContext(ctx context.Context) OrganizationalUnitAccountArrayOutput {
	return o
}

func (o OrganizationalUnitAccountArrayOutput) Index(i pulumi.IntInput) OrganizationalUnitAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationalUnitAccount {
		return vs[0].([]OrganizationalUnitAccount)[vs[1].(int)]
	}).(OrganizationalUnitAccountOutput)
}

type OrganizationalUnitAccountState struct {
	// ARN of the organizational unit
	Arn *string `pulumi:"arn"`
	// Email of the account
	Email *string `pulumi:"email"`
	// Identifier of the organization unit
	Id *string `pulumi:"id"`
	// The name for the organizational unit
	Name *string `pulumi:"name"`
}

type OrganizationalUnitAccountStateInput interface {
	pulumi.Input

	ToOrganizationalUnitAccountStateOutput() OrganizationalUnitAccountStateOutput
	ToOrganizationalUnitAccountStateOutputWithContext(context.Context) OrganizationalUnitAccountStateOutput
}

type OrganizationalUnitAccountStateArgs struct {
	// ARN of the organizational unit
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// Email of the account
	Email pulumi.StringPtrInput `pulumi:"email"`
	// Identifier of the organization unit
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name for the organizational unit
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (OrganizationalUnitAccountStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationalUnitAccountState)(nil)).Elem()
}

func (i OrganizationalUnitAccountStateArgs) ToOrganizationalUnitAccountStateOutput() OrganizationalUnitAccountStateOutput {
	return i.ToOrganizationalUnitAccountStateOutputWithContext(context.Background())
}

func (i OrganizationalUnitAccountStateArgs) ToOrganizationalUnitAccountStateOutputWithContext(ctx context.Context) OrganizationalUnitAccountStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationalUnitAccountStateOutput)
}

type OrganizationalUnitAccountStateArrayInput interface {
	pulumi.Input

	ToOrganizationalUnitAccountStateArrayOutput() OrganizationalUnitAccountStateArrayOutput
	ToOrganizationalUnitAccountStateArrayOutputWithContext(context.Context) OrganizationalUnitAccountStateArrayOutput
}

type OrganizationalUnitAccountStateArray []OrganizationalUnitAccountStateInput

func (OrganizationalUnitAccountStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationalUnitAccountState)(nil)).Elem()
}

func (i OrganizationalUnitAccountStateArray) ToOrganizationalUnitAccountStateArrayOutput() OrganizationalUnitAccountStateArrayOutput {
	return i.ToOrganizationalUnitAccountStateArrayOutputWithContext(context.Background())
}

func (i OrganizationalUnitAccountStateArray) ToOrganizationalUnitAccountStateArrayOutputWithContext(ctx context.Context) OrganizationalUnitAccountStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationalUnitAccountStateArrayOutput)
}

type OrganizationalUnitAccountStateOutput struct{ *pulumi.OutputState }

func (OrganizationalUnitAccountStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationalUnitAccountState)(nil)).Elem()
}

func (o OrganizationalUnitAccountStateOutput) ToOrganizationalUnitAccountStateOutput() OrganizationalUnitAccountStateOutput {
	return o
}

func (o OrganizationalUnitAccountStateOutput) ToOrganizationalUnitAccountStateOutputWithContext(ctx context.Context) OrganizationalUnitAccountStateOutput {
	return o
}

// ARN of the organizational unit
func (o OrganizationalUnitAccountStateOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationalUnitAccountState) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Email of the account
func (o OrganizationalUnitAccountStateOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationalUnitAccountState) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// Identifier of the organization unit
func (o OrganizationalUnitAccountStateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationalUnitAccountState) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name for the organizational unit
func (o OrganizationalUnitAccountStateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationalUnitAccountState) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type OrganizationalUnitAccountStateArrayOutput struct{ *pulumi.OutputState }

func (OrganizationalUnitAccountStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationalUnitAccountState)(nil)).Elem()
}

func (o OrganizationalUnitAccountStateArrayOutput) ToOrganizationalUnitAccountStateArrayOutput() OrganizationalUnitAccountStateArrayOutput {
	return o
}

func (o OrganizationalUnitAccountStateArrayOutput) ToOrganizationalUnitAccountStateArrayOutputWithContext(ctx context.Context) OrganizationalUnitAccountStateArrayOutput {
	return o
}

func (o OrganizationalUnitAccountStateArrayOutput) Index(i pulumi.IntInput) OrganizationalUnitAccountStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationalUnitAccountState {
		return vs[0].([]OrganizationalUnitAccountState)[vs[1].(int)]
	}).(OrganizationalUnitAccountStateOutput)
}

type GetOrganizationAccount struct {
	// ARN of the root
	Arn string `pulumi:"arn"`
	// Email of the account
	Email string `pulumi:"email"`
	// Identifier of the root
	Id string `pulumi:"id"`
	// The name of the policy type
	Name string `pulumi:"name"`
	// The status of the policy type as it relates to the associated root
	Status string `pulumi:"status"`
}

type GetOrganizationAccountInput interface {
	pulumi.Input

	ToGetOrganizationAccountOutput() GetOrganizationAccountOutput
	ToGetOrganizationAccountOutputWithContext(context.Context) GetOrganizationAccountOutput
}

type GetOrganizationAccountArgs struct {
	// ARN of the root
	Arn pulumi.StringInput `pulumi:"arn"`
	// Email of the account
	Email pulumi.StringInput `pulumi:"email"`
	// Identifier of the root
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the policy type
	Name pulumi.StringInput `pulumi:"name"`
	// The status of the policy type as it relates to the associated root
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetOrganizationAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationAccount)(nil)).Elem()
}

func (i GetOrganizationAccountArgs) ToGetOrganizationAccountOutput() GetOrganizationAccountOutput {
	return i.ToGetOrganizationAccountOutputWithContext(context.Background())
}

func (i GetOrganizationAccountArgs) ToGetOrganizationAccountOutputWithContext(ctx context.Context) GetOrganizationAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationAccountOutput)
}

type GetOrganizationAccountArrayInput interface {
	pulumi.Input

	ToGetOrganizationAccountArrayOutput() GetOrganizationAccountArrayOutput
	ToGetOrganizationAccountArrayOutputWithContext(context.Context) GetOrganizationAccountArrayOutput
}

type GetOrganizationAccountArray []GetOrganizationAccountInput

func (GetOrganizationAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationAccount)(nil)).Elem()
}

func (i GetOrganizationAccountArray) ToGetOrganizationAccountArrayOutput() GetOrganizationAccountArrayOutput {
	return i.ToGetOrganizationAccountArrayOutputWithContext(context.Background())
}

func (i GetOrganizationAccountArray) ToGetOrganizationAccountArrayOutputWithContext(ctx context.Context) GetOrganizationAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationAccountArrayOutput)
}

type GetOrganizationAccountOutput struct{ *pulumi.OutputState }

func (GetOrganizationAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationAccount)(nil)).Elem()
}

func (o GetOrganizationAccountOutput) ToGetOrganizationAccountOutput() GetOrganizationAccountOutput {
	return o
}

func (o GetOrganizationAccountOutput) ToGetOrganizationAccountOutputWithContext(ctx context.Context) GetOrganizationAccountOutput {
	return o
}

// ARN of the root
func (o GetOrganizationAccountOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationAccount) string { return v.Arn }).(pulumi.StringOutput)
}

// Email of the account
func (o GetOrganizationAccountOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationAccount) string { return v.Email }).(pulumi.StringOutput)
}

// Identifier of the root
func (o GetOrganizationAccountOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationAccount) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the policy type
func (o GetOrganizationAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationAccount) string { return v.Name }).(pulumi.StringOutput)
}

// The status of the policy type as it relates to the associated root
func (o GetOrganizationAccountOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationAccount) string { return v.Status }).(pulumi.StringOutput)
}

type GetOrganizationAccountArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationAccount)(nil)).Elem()
}

func (o GetOrganizationAccountArrayOutput) ToGetOrganizationAccountArrayOutput() GetOrganizationAccountArrayOutput {
	return o
}

func (o GetOrganizationAccountArrayOutput) ToGetOrganizationAccountArrayOutputWithContext(ctx context.Context) GetOrganizationAccountArrayOutput {
	return o
}

func (o GetOrganizationAccountArrayOutput) Index(i pulumi.IntInput) GetOrganizationAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationAccount {
		return vs[0].([]GetOrganizationAccount)[vs[1].(int)]
	}).(GetOrganizationAccountOutput)
}

type GetOrganizationNonMasterAccount struct {
	// ARN of the root
	Arn string `pulumi:"arn"`
	// Email of the account
	Email string `pulumi:"email"`
	// Identifier of the root
	Id string `pulumi:"id"`
	// The name of the policy type
	Name string `pulumi:"name"`
	// The status of the policy type as it relates to the associated root
	Status string `pulumi:"status"`
}

type GetOrganizationNonMasterAccountInput interface {
	pulumi.Input

	ToGetOrganizationNonMasterAccountOutput() GetOrganizationNonMasterAccountOutput
	ToGetOrganizationNonMasterAccountOutputWithContext(context.Context) GetOrganizationNonMasterAccountOutput
}

type GetOrganizationNonMasterAccountArgs struct {
	// ARN of the root
	Arn pulumi.StringInput `pulumi:"arn"`
	// Email of the account
	Email pulumi.StringInput `pulumi:"email"`
	// Identifier of the root
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the policy type
	Name pulumi.StringInput `pulumi:"name"`
	// The status of the policy type as it relates to the associated root
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetOrganizationNonMasterAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationNonMasterAccount)(nil)).Elem()
}

func (i GetOrganizationNonMasterAccountArgs) ToGetOrganizationNonMasterAccountOutput() GetOrganizationNonMasterAccountOutput {
	return i.ToGetOrganizationNonMasterAccountOutputWithContext(context.Background())
}

func (i GetOrganizationNonMasterAccountArgs) ToGetOrganizationNonMasterAccountOutputWithContext(ctx context.Context) GetOrganizationNonMasterAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationNonMasterAccountOutput)
}

type GetOrganizationNonMasterAccountArrayInput interface {
	pulumi.Input

	ToGetOrganizationNonMasterAccountArrayOutput() GetOrganizationNonMasterAccountArrayOutput
	ToGetOrganizationNonMasterAccountArrayOutputWithContext(context.Context) GetOrganizationNonMasterAccountArrayOutput
}

type GetOrganizationNonMasterAccountArray []GetOrganizationNonMasterAccountInput

func (GetOrganizationNonMasterAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationNonMasterAccount)(nil)).Elem()
}

func (i GetOrganizationNonMasterAccountArray) ToGetOrganizationNonMasterAccountArrayOutput() GetOrganizationNonMasterAccountArrayOutput {
	return i.ToGetOrganizationNonMasterAccountArrayOutputWithContext(context.Background())
}

func (i GetOrganizationNonMasterAccountArray) ToGetOrganizationNonMasterAccountArrayOutputWithContext(ctx context.Context) GetOrganizationNonMasterAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationNonMasterAccountArrayOutput)
}

type GetOrganizationNonMasterAccountOutput struct{ *pulumi.OutputState }

func (GetOrganizationNonMasterAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationNonMasterAccount)(nil)).Elem()
}

func (o GetOrganizationNonMasterAccountOutput) ToGetOrganizationNonMasterAccountOutput() GetOrganizationNonMasterAccountOutput {
	return o
}

func (o GetOrganizationNonMasterAccountOutput) ToGetOrganizationNonMasterAccountOutputWithContext(ctx context.Context) GetOrganizationNonMasterAccountOutput {
	return o
}

// ARN of the root
func (o GetOrganizationNonMasterAccountOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationNonMasterAccount) string { return v.Arn }).(pulumi.StringOutput)
}

// Email of the account
func (o GetOrganizationNonMasterAccountOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationNonMasterAccount) string { return v.Email }).(pulumi.StringOutput)
}

// Identifier of the root
func (o GetOrganizationNonMasterAccountOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationNonMasterAccount) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the policy type
func (o GetOrganizationNonMasterAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationNonMasterAccount) string { return v.Name }).(pulumi.StringOutput)
}

// The status of the policy type as it relates to the associated root
func (o GetOrganizationNonMasterAccountOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationNonMasterAccount) string { return v.Status }).(pulumi.StringOutput)
}

type GetOrganizationNonMasterAccountArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationNonMasterAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationNonMasterAccount)(nil)).Elem()
}

func (o GetOrganizationNonMasterAccountArrayOutput) ToGetOrganizationNonMasterAccountArrayOutput() GetOrganizationNonMasterAccountArrayOutput {
	return o
}

func (o GetOrganizationNonMasterAccountArrayOutput) ToGetOrganizationNonMasterAccountArrayOutputWithContext(ctx context.Context) GetOrganizationNonMasterAccountArrayOutput {
	return o
}

func (o GetOrganizationNonMasterAccountArrayOutput) Index(i pulumi.IntInput) GetOrganizationNonMasterAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationNonMasterAccount {
		return vs[0].([]GetOrganizationNonMasterAccount)[vs[1].(int)]
	}).(GetOrganizationNonMasterAccountOutput)
}

type GetOrganizationRoot struct {
	// ARN of the root
	Arn string `pulumi:"arn"`
	// Identifier of the root
	Id string `pulumi:"id"`
	// The name of the policy type
	Name string `pulumi:"name"`
	// List of policy types enabled for this root. All elements have these attributes:
	PolicyTypes []GetOrganizationRootPolicyType `pulumi:"policyTypes"`
}

type GetOrganizationRootInput interface {
	pulumi.Input

	ToGetOrganizationRootOutput() GetOrganizationRootOutput
	ToGetOrganizationRootOutputWithContext(context.Context) GetOrganizationRootOutput
}

type GetOrganizationRootArgs struct {
	// ARN of the root
	Arn pulumi.StringInput `pulumi:"arn"`
	// Identifier of the root
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the policy type
	Name pulumi.StringInput `pulumi:"name"`
	// List of policy types enabled for this root. All elements have these attributes:
	PolicyTypes GetOrganizationRootPolicyTypeArrayInput `pulumi:"policyTypes"`
}

func (GetOrganizationRootArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationRoot)(nil)).Elem()
}

func (i GetOrganizationRootArgs) ToGetOrganizationRootOutput() GetOrganizationRootOutput {
	return i.ToGetOrganizationRootOutputWithContext(context.Background())
}

func (i GetOrganizationRootArgs) ToGetOrganizationRootOutputWithContext(ctx context.Context) GetOrganizationRootOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationRootOutput)
}

type GetOrganizationRootArrayInput interface {
	pulumi.Input

	ToGetOrganizationRootArrayOutput() GetOrganizationRootArrayOutput
	ToGetOrganizationRootArrayOutputWithContext(context.Context) GetOrganizationRootArrayOutput
}

type GetOrganizationRootArray []GetOrganizationRootInput

func (GetOrganizationRootArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationRoot)(nil)).Elem()
}

func (i GetOrganizationRootArray) ToGetOrganizationRootArrayOutput() GetOrganizationRootArrayOutput {
	return i.ToGetOrganizationRootArrayOutputWithContext(context.Background())
}

func (i GetOrganizationRootArray) ToGetOrganizationRootArrayOutputWithContext(ctx context.Context) GetOrganizationRootArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationRootArrayOutput)
}

type GetOrganizationRootOutput struct{ *pulumi.OutputState }

func (GetOrganizationRootOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationRoot)(nil)).Elem()
}

func (o GetOrganizationRootOutput) ToGetOrganizationRootOutput() GetOrganizationRootOutput {
	return o
}

func (o GetOrganizationRootOutput) ToGetOrganizationRootOutputWithContext(ctx context.Context) GetOrganizationRootOutput {
	return o
}

// ARN of the root
func (o GetOrganizationRootOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationRoot) string { return v.Arn }).(pulumi.StringOutput)
}

// Identifier of the root
func (o GetOrganizationRootOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationRoot) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the policy type
func (o GetOrganizationRootOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationRoot) string { return v.Name }).(pulumi.StringOutput)
}

// List of policy types enabled for this root. All elements have these attributes:
func (o GetOrganizationRootOutput) PolicyTypes() GetOrganizationRootPolicyTypeArrayOutput {
	return o.ApplyT(func(v GetOrganizationRoot) []GetOrganizationRootPolicyType { return v.PolicyTypes }).(GetOrganizationRootPolicyTypeArrayOutput)
}

type GetOrganizationRootArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationRootArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationRoot)(nil)).Elem()
}

func (o GetOrganizationRootArrayOutput) ToGetOrganizationRootArrayOutput() GetOrganizationRootArrayOutput {
	return o
}

func (o GetOrganizationRootArrayOutput) ToGetOrganizationRootArrayOutputWithContext(ctx context.Context) GetOrganizationRootArrayOutput {
	return o
}

func (o GetOrganizationRootArrayOutput) Index(i pulumi.IntInput) GetOrganizationRootOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationRoot {
		return vs[0].([]GetOrganizationRoot)[vs[1].(int)]
	}).(GetOrganizationRootOutput)
}

type GetOrganizationRootPolicyType struct {
	// The status of the policy type as it relates to the associated root
	Status string `pulumi:"status"`
	Type   string `pulumi:"type"`
}

type GetOrganizationRootPolicyTypeInput interface {
	pulumi.Input

	ToGetOrganizationRootPolicyTypeOutput() GetOrganizationRootPolicyTypeOutput
	ToGetOrganizationRootPolicyTypeOutputWithContext(context.Context) GetOrganizationRootPolicyTypeOutput
}

type GetOrganizationRootPolicyTypeArgs struct {
	// The status of the policy type as it relates to the associated root
	Status pulumi.StringInput `pulumi:"status"`
	Type   pulumi.StringInput `pulumi:"type"`
}

func (GetOrganizationRootPolicyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationRootPolicyType)(nil)).Elem()
}

func (i GetOrganizationRootPolicyTypeArgs) ToGetOrganizationRootPolicyTypeOutput() GetOrganizationRootPolicyTypeOutput {
	return i.ToGetOrganizationRootPolicyTypeOutputWithContext(context.Background())
}

func (i GetOrganizationRootPolicyTypeArgs) ToGetOrganizationRootPolicyTypeOutputWithContext(ctx context.Context) GetOrganizationRootPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationRootPolicyTypeOutput)
}

type GetOrganizationRootPolicyTypeArrayInput interface {
	pulumi.Input

	ToGetOrganizationRootPolicyTypeArrayOutput() GetOrganizationRootPolicyTypeArrayOutput
	ToGetOrganizationRootPolicyTypeArrayOutputWithContext(context.Context) GetOrganizationRootPolicyTypeArrayOutput
}

type GetOrganizationRootPolicyTypeArray []GetOrganizationRootPolicyTypeInput

func (GetOrganizationRootPolicyTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationRootPolicyType)(nil)).Elem()
}

func (i GetOrganizationRootPolicyTypeArray) ToGetOrganizationRootPolicyTypeArrayOutput() GetOrganizationRootPolicyTypeArrayOutput {
	return i.ToGetOrganizationRootPolicyTypeArrayOutputWithContext(context.Background())
}

func (i GetOrganizationRootPolicyTypeArray) ToGetOrganizationRootPolicyTypeArrayOutputWithContext(ctx context.Context) GetOrganizationRootPolicyTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationRootPolicyTypeArrayOutput)
}

type GetOrganizationRootPolicyTypeOutput struct{ *pulumi.OutputState }

func (GetOrganizationRootPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationRootPolicyType)(nil)).Elem()
}

func (o GetOrganizationRootPolicyTypeOutput) ToGetOrganizationRootPolicyTypeOutput() GetOrganizationRootPolicyTypeOutput {
	return o
}

func (o GetOrganizationRootPolicyTypeOutput) ToGetOrganizationRootPolicyTypeOutputWithContext(ctx context.Context) GetOrganizationRootPolicyTypeOutput {
	return o
}

// The status of the policy type as it relates to the associated root
func (o GetOrganizationRootPolicyTypeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationRootPolicyType) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetOrganizationRootPolicyTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationRootPolicyType) string { return v.Type }).(pulumi.StringOutput)
}

type GetOrganizationRootPolicyTypeArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationRootPolicyTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationRootPolicyType)(nil)).Elem()
}

func (o GetOrganizationRootPolicyTypeArrayOutput) ToGetOrganizationRootPolicyTypeArrayOutput() GetOrganizationRootPolicyTypeArrayOutput {
	return o
}

func (o GetOrganizationRootPolicyTypeArrayOutput) ToGetOrganizationRootPolicyTypeArrayOutputWithContext(ctx context.Context) GetOrganizationRootPolicyTypeArrayOutput {
	return o
}

func (o GetOrganizationRootPolicyTypeArrayOutput) Index(i pulumi.IntInput) GetOrganizationRootPolicyTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationRootPolicyType {
		return vs[0].([]GetOrganizationRootPolicyType)[vs[1].(int)]
	}).(GetOrganizationRootPolicyTypeOutput)
}

type GetOrganizationalUnitsChildren struct {
	// ARN of the organizational unit
	Arn string `pulumi:"arn"`
	// ID of the organizational unit
	Id string `pulumi:"id"`
	// Name of the organizational unit
	Name string `pulumi:"name"`
}

type GetOrganizationalUnitsChildrenInput interface {
	pulumi.Input

	ToGetOrganizationalUnitsChildrenOutput() GetOrganizationalUnitsChildrenOutput
	ToGetOrganizationalUnitsChildrenOutputWithContext(context.Context) GetOrganizationalUnitsChildrenOutput
}

type GetOrganizationalUnitsChildrenArgs struct {
	// ARN of the organizational unit
	Arn pulumi.StringInput `pulumi:"arn"`
	// ID of the organizational unit
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the organizational unit
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetOrganizationalUnitsChildrenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationalUnitsChildren)(nil)).Elem()
}

func (i GetOrganizationalUnitsChildrenArgs) ToGetOrganizationalUnitsChildrenOutput() GetOrganizationalUnitsChildrenOutput {
	return i.ToGetOrganizationalUnitsChildrenOutputWithContext(context.Background())
}

func (i GetOrganizationalUnitsChildrenArgs) ToGetOrganizationalUnitsChildrenOutputWithContext(ctx context.Context) GetOrganizationalUnitsChildrenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationalUnitsChildrenOutput)
}

type GetOrganizationalUnitsChildrenArrayInput interface {
	pulumi.Input

	ToGetOrganizationalUnitsChildrenArrayOutput() GetOrganizationalUnitsChildrenArrayOutput
	ToGetOrganizationalUnitsChildrenArrayOutputWithContext(context.Context) GetOrganizationalUnitsChildrenArrayOutput
}

type GetOrganizationalUnitsChildrenArray []GetOrganizationalUnitsChildrenInput

func (GetOrganizationalUnitsChildrenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationalUnitsChildren)(nil)).Elem()
}

func (i GetOrganizationalUnitsChildrenArray) ToGetOrganizationalUnitsChildrenArrayOutput() GetOrganizationalUnitsChildrenArrayOutput {
	return i.ToGetOrganizationalUnitsChildrenArrayOutputWithContext(context.Background())
}

func (i GetOrganizationalUnitsChildrenArray) ToGetOrganizationalUnitsChildrenArrayOutputWithContext(ctx context.Context) GetOrganizationalUnitsChildrenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationalUnitsChildrenArrayOutput)
}

type GetOrganizationalUnitsChildrenOutput struct{ *pulumi.OutputState }

func (GetOrganizationalUnitsChildrenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationalUnitsChildren)(nil)).Elem()
}

func (o GetOrganizationalUnitsChildrenOutput) ToGetOrganizationalUnitsChildrenOutput() GetOrganizationalUnitsChildrenOutput {
	return o
}

func (o GetOrganizationalUnitsChildrenOutput) ToGetOrganizationalUnitsChildrenOutputWithContext(ctx context.Context) GetOrganizationalUnitsChildrenOutput {
	return o
}

// ARN of the organizational unit
func (o GetOrganizationalUnitsChildrenOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationalUnitsChildren) string { return v.Arn }).(pulumi.StringOutput)
}

// ID of the organizational unit
func (o GetOrganizationalUnitsChildrenOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationalUnitsChildren) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the organizational unit
func (o GetOrganizationalUnitsChildrenOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationalUnitsChildren) string { return v.Name }).(pulumi.StringOutput)
}

type GetOrganizationalUnitsChildrenArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationalUnitsChildrenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationalUnitsChildren)(nil)).Elem()
}

func (o GetOrganizationalUnitsChildrenArrayOutput) ToGetOrganizationalUnitsChildrenArrayOutput() GetOrganizationalUnitsChildrenArrayOutput {
	return o
}

func (o GetOrganizationalUnitsChildrenArrayOutput) ToGetOrganizationalUnitsChildrenArrayOutputWithContext(ctx context.Context) GetOrganizationalUnitsChildrenArrayOutput {
	return o
}

func (o GetOrganizationalUnitsChildrenArrayOutput) Index(i pulumi.IntInput) GetOrganizationalUnitsChildrenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationalUnitsChildren {
		return vs[0].([]GetOrganizationalUnitsChildren)[vs[1].(int)]
	}).(GetOrganizationalUnitsChildrenOutput)
}

func init() {
	pulumi.RegisterOutputType(OrganizationAccountOutput{})
	pulumi.RegisterOutputType(OrganizationAccountArrayOutput{})
	pulumi.RegisterOutputType(OrganizationAccountStateOutput{})
	pulumi.RegisterOutputType(OrganizationAccountStateArrayOutput{})
	pulumi.RegisterOutputType(OrganizationNonMasterAccountOutput{})
	pulumi.RegisterOutputType(OrganizationNonMasterAccountArrayOutput{})
	pulumi.RegisterOutputType(OrganizationNonMasterAccountStateOutput{})
	pulumi.RegisterOutputType(OrganizationNonMasterAccountStateArrayOutput{})
	pulumi.RegisterOutputType(OrganizationRootOutput{})
	pulumi.RegisterOutputType(OrganizationRootArrayOutput{})
	pulumi.RegisterOutputType(OrganizationRootPolicyTypeOutput{})
	pulumi.RegisterOutputType(OrganizationRootPolicyTypeArrayOutput{})
	pulumi.RegisterOutputType(OrganizationRootStateOutput{})
	pulumi.RegisterOutputType(OrganizationRootStateArrayOutput{})
	pulumi.RegisterOutputType(OrganizationRootStatePolicyTypeOutput{})
	pulumi.RegisterOutputType(OrganizationRootStatePolicyTypeArrayOutput{})
	pulumi.RegisterOutputType(OrganizationalUnitAccountOutput{})
	pulumi.RegisterOutputType(OrganizationalUnitAccountArrayOutput{})
	pulumi.RegisterOutputType(OrganizationalUnitAccountStateOutput{})
	pulumi.RegisterOutputType(OrganizationalUnitAccountStateArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationAccountOutput{})
	pulumi.RegisterOutputType(GetOrganizationAccountArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationNonMasterAccountOutput{})
	pulumi.RegisterOutputType(GetOrganizationNonMasterAccountArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationRootOutput{})
	pulumi.RegisterOutputType(GetOrganizationRootArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationRootPolicyTypeOutput{})
	pulumi.RegisterOutputType(GetOrganizationRootPolicyTypeArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationalUnitsChildrenOutput{})
	pulumi.RegisterOutputType(GetOrganizationalUnitsChildrenArrayOutput{})
}
