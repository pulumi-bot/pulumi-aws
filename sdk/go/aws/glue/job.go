// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package glue

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Job struct {
	pulumi.CustomResourceState

	Arn                   pulumi.StringOutput           `pulumi:"arn"`
	Command               JobCommandOutput              `pulumi:"command"`
	Connections           pulumi.StringArrayOutput      `pulumi:"connections"`
	DefaultArguments      pulumi.StringMapOutput        `pulumi:"defaultArguments"`
	Description           pulumi.StringPtrOutput        `pulumi:"description"`
	ExecutionProperty     JobExecutionPropertyOutput    `pulumi:"executionProperty"`
	GlueVersion           pulumi.StringOutput           `pulumi:"glueVersion"`
	MaxCapacity           pulumi.Float64Output          `pulumi:"maxCapacity"`
	MaxRetries            pulumi.IntPtrOutput           `pulumi:"maxRetries"`
	Name                  pulumi.StringOutput           `pulumi:"name"`
	NotificationProperty  JobNotificationPropertyOutput `pulumi:"notificationProperty"`
	NumberOfWorkers       pulumi.IntPtrOutput           `pulumi:"numberOfWorkers"`
	RoleArn               pulumi.StringOutput           `pulumi:"roleArn"`
	SecurityConfiguration pulumi.StringPtrOutput        `pulumi:"securityConfiguration"`
	Tags                  pulumi.StringMapOutput        `pulumi:"tags"`
	Timeout               pulumi.IntPtrOutput           `pulumi:"timeout"`
	WorkerType            pulumi.StringPtrOutput        `pulumi:"workerType"`
}

// NewJob registers a new resource with the given unique name, arguments, and options.
func NewJob(ctx *pulumi.Context,
	name string, args *JobArgs, opts ...pulumi.ResourceOption) (*Job, error) {
	if args == nil || args.Command == nil {
		return nil, errors.New("missing required argument 'Command'")
	}
	if args == nil || args.RoleArn == nil {
		return nil, errors.New("missing required argument 'RoleArn'")
	}
	if args == nil {
		args = &JobArgs{}
	}
	var resource Job
	err := ctx.RegisterResource("aws:glue/job:Job", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetJob gets an existing Job resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *JobState, opts ...pulumi.ResourceOption) (*Job, error) {
	var resource Job
	err := ctx.ReadResource("aws:glue/job:Job", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Job resources.
type jobState struct {
	Arn                   *string                  `pulumi:"arn"`
	Command               *JobCommand              `pulumi:"command"`
	Connections           []string                 `pulumi:"connections"`
	DefaultArguments      map[string]string        `pulumi:"defaultArguments"`
	Description           *string                  `pulumi:"description"`
	ExecutionProperty     *JobExecutionProperty    `pulumi:"executionProperty"`
	GlueVersion           *string                  `pulumi:"glueVersion"`
	MaxCapacity           *float64                 `pulumi:"maxCapacity"`
	MaxRetries            *int                     `pulumi:"maxRetries"`
	Name                  *string                  `pulumi:"name"`
	NotificationProperty  *JobNotificationProperty `pulumi:"notificationProperty"`
	NumberOfWorkers       *int                     `pulumi:"numberOfWorkers"`
	RoleArn               *string                  `pulumi:"roleArn"`
	SecurityConfiguration *string                  `pulumi:"securityConfiguration"`
	Tags                  map[string]string        `pulumi:"tags"`
	Timeout               *int                     `pulumi:"timeout"`
	WorkerType            *string                  `pulumi:"workerType"`
}

type JobState struct {
	Arn                   pulumi.StringPtrInput
	Command               JobCommandPtrInput
	Connections           pulumi.StringArrayInput
	DefaultArguments      pulumi.StringMapInput
	Description           pulumi.StringPtrInput
	ExecutionProperty     JobExecutionPropertyPtrInput
	GlueVersion           pulumi.StringPtrInput
	MaxCapacity           pulumi.Float64PtrInput
	MaxRetries            pulumi.IntPtrInput
	Name                  pulumi.StringPtrInput
	NotificationProperty  JobNotificationPropertyPtrInput
	NumberOfWorkers       pulumi.IntPtrInput
	RoleArn               pulumi.StringPtrInput
	SecurityConfiguration pulumi.StringPtrInput
	Tags                  pulumi.StringMapInput
	Timeout               pulumi.IntPtrInput
	WorkerType            pulumi.StringPtrInput
}

func (JobState) ElementType() reflect.Type {
	return reflect.TypeOf((*jobState)(nil)).Elem()
}

type jobArgs struct {
	Command               JobCommand               `pulumi:"command"`
	Connections           []string                 `pulumi:"connections"`
	DefaultArguments      map[string]string        `pulumi:"defaultArguments"`
	Description           *string                  `pulumi:"description"`
	ExecutionProperty     *JobExecutionProperty    `pulumi:"executionProperty"`
	GlueVersion           *string                  `pulumi:"glueVersion"`
	MaxCapacity           *float64                 `pulumi:"maxCapacity"`
	MaxRetries            *int                     `pulumi:"maxRetries"`
	Name                  *string                  `pulumi:"name"`
	NotificationProperty  *JobNotificationProperty `pulumi:"notificationProperty"`
	NumberOfWorkers       *int                     `pulumi:"numberOfWorkers"`
	RoleArn               string                   `pulumi:"roleArn"`
	SecurityConfiguration *string                  `pulumi:"securityConfiguration"`
	Tags                  map[string]string        `pulumi:"tags"`
	Timeout               *int                     `pulumi:"timeout"`
	WorkerType            *string                  `pulumi:"workerType"`
}

// The set of arguments for constructing a Job resource.
type JobArgs struct {
	Command               JobCommandInput
	Connections           pulumi.StringArrayInput
	DefaultArguments      pulumi.StringMapInput
	Description           pulumi.StringPtrInput
	ExecutionProperty     JobExecutionPropertyPtrInput
	GlueVersion           pulumi.StringPtrInput
	MaxCapacity           pulumi.Float64PtrInput
	MaxRetries            pulumi.IntPtrInput
	Name                  pulumi.StringPtrInput
	NotificationProperty  JobNotificationPropertyPtrInput
	NumberOfWorkers       pulumi.IntPtrInput
	RoleArn               pulumi.StringInput
	SecurityConfiguration pulumi.StringPtrInput
	Tags                  pulumi.StringMapInput
	Timeout               pulumi.IntPtrInput
	WorkerType            pulumi.StringPtrInput
}

func (JobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*jobArgs)(nil)).Elem()
}
