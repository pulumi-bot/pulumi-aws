// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package CatalogTablePartitionKey

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type CatalogTablePartitionKey struct {
	// Free-form text comment.
	Comment *string `pulumi:"comment"`
	// Name of the SerDe.
	Name string `pulumi:"name"`
	// The datatype of data in the Column.
	Type *string `pulumi:"type"`
}

type CatalogTablePartitionKeyInput interface {
	pulumi.Input

	ToCatalogTablePartitionKeyOutput() CatalogTablePartitionKeyOutput
	ToCatalogTablePartitionKeyOutputWithContext(context.Context) CatalogTablePartitionKeyOutput
}

type CatalogTablePartitionKeyArgs struct {
	// Free-form text comment.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// Name of the SerDe.
	Name pulumi.StringInput `pulumi:"name"`
	// The datatype of data in the Column.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (CatalogTablePartitionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogTablePartitionKey)(nil)).Elem()
}

func (i CatalogTablePartitionKeyArgs) ToCatalogTablePartitionKeyOutput() CatalogTablePartitionKeyOutput {
	return i.ToCatalogTablePartitionKeyOutputWithContext(context.Background())
}

func (i CatalogTablePartitionKeyArgs) ToCatalogTablePartitionKeyOutputWithContext(ctx context.Context) CatalogTablePartitionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogTablePartitionKeyOutput)
}

type CatalogTablePartitionKeyArrayInput interface {
	pulumi.Input

	ToCatalogTablePartitionKeyArrayOutput() CatalogTablePartitionKeyArrayOutput
	ToCatalogTablePartitionKeyArrayOutputWithContext(context.Context) CatalogTablePartitionKeyArrayOutput
}

type CatalogTablePartitionKeyArray []CatalogTablePartitionKeyInput

func (CatalogTablePartitionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CatalogTablePartitionKey)(nil)).Elem()
}

func (i CatalogTablePartitionKeyArray) ToCatalogTablePartitionKeyArrayOutput() CatalogTablePartitionKeyArrayOutput {
	return i.ToCatalogTablePartitionKeyArrayOutputWithContext(context.Background())
}

func (i CatalogTablePartitionKeyArray) ToCatalogTablePartitionKeyArrayOutputWithContext(ctx context.Context) CatalogTablePartitionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogTablePartitionKeyArrayOutput)
}

type CatalogTablePartitionKeyOutput struct { *pulumi.OutputState }

func (CatalogTablePartitionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogTablePartitionKey)(nil)).Elem()
}

func (o CatalogTablePartitionKeyOutput) ToCatalogTablePartitionKeyOutput() CatalogTablePartitionKeyOutput {
	return o
}

func (o CatalogTablePartitionKeyOutput) ToCatalogTablePartitionKeyOutputWithContext(ctx context.Context) CatalogTablePartitionKeyOutput {
	return o
}

// Free-form text comment.
func (o CatalogTablePartitionKeyOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func (v CatalogTablePartitionKey) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// Name of the SerDe.
func (o CatalogTablePartitionKeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v CatalogTablePartitionKey) string { return v.Name }).(pulumi.StringOutput)
}

// The datatype of data in the Column.
func (o CatalogTablePartitionKeyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func (v CatalogTablePartitionKey) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CatalogTablePartitionKeyArrayOutput struct { *pulumi.OutputState}

func (CatalogTablePartitionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CatalogTablePartitionKey)(nil)).Elem()
}

func (o CatalogTablePartitionKeyArrayOutput) ToCatalogTablePartitionKeyArrayOutput() CatalogTablePartitionKeyArrayOutput {
	return o
}

func (o CatalogTablePartitionKeyArrayOutput) ToCatalogTablePartitionKeyArrayOutputWithContext(ctx context.Context) CatalogTablePartitionKeyArrayOutput {
	return o
}

func (o CatalogTablePartitionKeyArrayOutput) Index(i pulumi.IntInput) CatalogTablePartitionKeyOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) CatalogTablePartitionKey {
		return vs[0].([]CatalogTablePartitionKey)[vs[1].(int)]
	}).(CatalogTablePartitionKeyOutput)
}

func init() {
	pulumi.RegisterOutputType(CatalogTablePartitionKeyOutput{})
	pulumi.RegisterOutputType(CatalogTablePartitionKeyArrayOutput{})
}
