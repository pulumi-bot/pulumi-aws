// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package glue

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a Glue ML Transform resource.
type MLTransform struct {
	pulumi.CustomResourceState

	// Amazon Resource Name (ARN) of Glue ML Transform.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Description of the ML Transform.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The version of glue to use, for example "1.0". For information about available versions, see the [AWS Glue Release Notes](https://docs.aws.amazon.com/glue/latest/dg/release-notes.html).
	GlueVersion pulumi.StringOutput `pulumi:"glueVersion"`
	// A list of AWS Glue table definitions used by the transform. see Input Record Tables.
	InputRecordTables MLTransformInputRecordTableArrayOutput `pulumi:"inputRecordTables"`
	// The number of labels available for this transform.
	LabelCount pulumi.IntOutput `pulumi:"labelCount"`
	// The number of AWS Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from `2` to `100` DPUs; the default is `10`. `maxCapacity` is a mutually exclusive option with `numberOfWorkers` and `workerType`.
	MaxCapacity pulumi.Float64Output `pulumi:"maxCapacity"`
	// The maximum number of times to retry this ML Transform if it fails.
	MaxRetries pulumi.IntPtrOutput `pulumi:"maxRetries"`
	// The name you assign to this ML Transform. It must be unique in your account.
	Name pulumi.StringOutput `pulumi:"name"`
	// The number of workers of a defined `workerType` that are allocated when an ML Transform runs. Required with `workerType`.
	NumberOfWorkers pulumi.IntPtrOutput `pulumi:"numberOfWorkers"`
	// The algorithmic parameters that are specific to the transform type used. Conditionally dependent on the transform type. see Parameters.
	Parameters MLTransformParametersOutput `pulumi:"parameters"`
	// The ARN of the IAM role associated with this ML Transform.
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`
	// The object that represents the schema that this transform accepts. see Schema.
	Schemas MLTransformSchemaArrayOutput `pulumi:"schemas"`
	// Key-value map of resource tags
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The ML Transform timeout in minutes. The default is 2880 minutes (48 hours).
	Timeout pulumi.IntPtrOutput `pulumi:"timeout"`
	// The type of predefined worker that is allocated when an ML Transform runs. Accepts a value of `Standard`, `G.1X`, or `G.2X`. Required with `numberOfWorkers`.
	WorkerType pulumi.StringPtrOutput `pulumi:"workerType"`
}

// NewMLTransform registers a new resource with the given unique name, arguments, and options.
func NewMLTransform(ctx *pulumi.Context,
	name string, args *MLTransformArgs, opts ...pulumi.ResourceOption) (*MLTransform, error) {
	if args == nil || args.InputRecordTables == nil {
		return nil, errors.New("missing required argument 'InputRecordTables'")
	}
	if args == nil || args.Parameters == nil {
		return nil, errors.New("missing required argument 'Parameters'")
	}
	if args == nil || args.RoleArn == nil {
		return nil, errors.New("missing required argument 'RoleArn'")
	}
	if args == nil {
		args = &MLTransformArgs{}
	}
	var resource MLTransform
	err := ctx.RegisterResource("aws:glue/mLTransform:MLTransform", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMLTransform gets an existing MLTransform resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMLTransform(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MLTransformState, opts ...pulumi.ResourceOption) (*MLTransform, error) {
	var resource MLTransform
	err := ctx.ReadResource("aws:glue/mLTransform:MLTransform", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MLTransform resources.
type mltransformState struct {
	// Amazon Resource Name (ARN) of Glue ML Transform.
	Arn *string `pulumi:"arn"`
	// Description of the ML Transform.
	Description *string `pulumi:"description"`
	// The version of glue to use, for example "1.0". For information about available versions, see the [AWS Glue Release Notes](https://docs.aws.amazon.com/glue/latest/dg/release-notes.html).
	GlueVersion *string `pulumi:"glueVersion"`
	// A list of AWS Glue table definitions used by the transform. see Input Record Tables.
	InputRecordTables []MLTransformInputRecordTable `pulumi:"inputRecordTables"`
	// The number of labels available for this transform.
	LabelCount *int `pulumi:"labelCount"`
	// The number of AWS Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from `2` to `100` DPUs; the default is `10`. `maxCapacity` is a mutually exclusive option with `numberOfWorkers` and `workerType`.
	MaxCapacity *float64 `pulumi:"maxCapacity"`
	// The maximum number of times to retry this ML Transform if it fails.
	MaxRetries *int `pulumi:"maxRetries"`
	// The name you assign to this ML Transform. It must be unique in your account.
	Name *string `pulumi:"name"`
	// The number of workers of a defined `workerType` that are allocated when an ML Transform runs. Required with `workerType`.
	NumberOfWorkers *int `pulumi:"numberOfWorkers"`
	// The algorithmic parameters that are specific to the transform type used. Conditionally dependent on the transform type. see Parameters.
	Parameters *MLTransformParameters `pulumi:"parameters"`
	// The ARN of the IAM role associated with this ML Transform.
	RoleArn *string `pulumi:"roleArn"`
	// The object that represents the schema that this transform accepts. see Schema.
	Schemas []MLTransformSchema `pulumi:"schemas"`
	// Key-value map of resource tags
	Tags map[string]string `pulumi:"tags"`
	// The ML Transform timeout in minutes. The default is 2880 minutes (48 hours).
	Timeout *int `pulumi:"timeout"`
	// The type of predefined worker that is allocated when an ML Transform runs. Accepts a value of `Standard`, `G.1X`, or `G.2X`. Required with `numberOfWorkers`.
	WorkerType *string `pulumi:"workerType"`
}

type MLTransformState struct {
	// Amazon Resource Name (ARN) of Glue ML Transform.
	Arn pulumi.StringPtrInput
	// Description of the ML Transform.
	Description pulumi.StringPtrInput
	// The version of glue to use, for example "1.0". For information about available versions, see the [AWS Glue Release Notes](https://docs.aws.amazon.com/glue/latest/dg/release-notes.html).
	GlueVersion pulumi.StringPtrInput
	// A list of AWS Glue table definitions used by the transform. see Input Record Tables.
	InputRecordTables MLTransformInputRecordTableArrayInput
	// The number of labels available for this transform.
	LabelCount pulumi.IntPtrInput
	// The number of AWS Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from `2` to `100` DPUs; the default is `10`. `maxCapacity` is a mutually exclusive option with `numberOfWorkers` and `workerType`.
	MaxCapacity pulumi.Float64PtrInput
	// The maximum number of times to retry this ML Transform if it fails.
	MaxRetries pulumi.IntPtrInput
	// The name you assign to this ML Transform. It must be unique in your account.
	Name pulumi.StringPtrInput
	// The number of workers of a defined `workerType` that are allocated when an ML Transform runs. Required with `workerType`.
	NumberOfWorkers pulumi.IntPtrInput
	// The algorithmic parameters that are specific to the transform type used. Conditionally dependent on the transform type. see Parameters.
	Parameters MLTransformParametersPtrInput
	// The ARN of the IAM role associated with this ML Transform.
	RoleArn pulumi.StringPtrInput
	// The object that represents the schema that this transform accepts. see Schema.
	Schemas MLTransformSchemaArrayInput
	// Key-value map of resource tags
	Tags pulumi.StringMapInput
	// The ML Transform timeout in minutes. The default is 2880 minutes (48 hours).
	Timeout pulumi.IntPtrInput
	// The type of predefined worker that is allocated when an ML Transform runs. Accepts a value of `Standard`, `G.1X`, or `G.2X`. Required with `numberOfWorkers`.
	WorkerType pulumi.StringPtrInput
}

func (MLTransformState) ElementType() reflect.Type {
	return reflect.TypeOf((*mltransformState)(nil)).Elem()
}

type mltransformArgs struct {
	// Description of the ML Transform.
	Description *string `pulumi:"description"`
	// The version of glue to use, for example "1.0". For information about available versions, see the [AWS Glue Release Notes](https://docs.aws.amazon.com/glue/latest/dg/release-notes.html).
	GlueVersion *string `pulumi:"glueVersion"`
	// A list of AWS Glue table definitions used by the transform. see Input Record Tables.
	InputRecordTables []MLTransformInputRecordTable `pulumi:"inputRecordTables"`
	// The number of AWS Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from `2` to `100` DPUs; the default is `10`. `maxCapacity` is a mutually exclusive option with `numberOfWorkers` and `workerType`.
	MaxCapacity *float64 `pulumi:"maxCapacity"`
	// The maximum number of times to retry this ML Transform if it fails.
	MaxRetries *int `pulumi:"maxRetries"`
	// The name you assign to this ML Transform. It must be unique in your account.
	Name *string `pulumi:"name"`
	// The number of workers of a defined `workerType` that are allocated when an ML Transform runs. Required with `workerType`.
	NumberOfWorkers *int `pulumi:"numberOfWorkers"`
	// The algorithmic parameters that are specific to the transform type used. Conditionally dependent on the transform type. see Parameters.
	Parameters MLTransformParameters `pulumi:"parameters"`
	// The ARN of the IAM role associated with this ML Transform.
	RoleArn string `pulumi:"roleArn"`
	// Key-value map of resource tags
	Tags map[string]string `pulumi:"tags"`
	// The ML Transform timeout in minutes. The default is 2880 minutes (48 hours).
	Timeout *int `pulumi:"timeout"`
	// The type of predefined worker that is allocated when an ML Transform runs. Accepts a value of `Standard`, `G.1X`, or `G.2X`. Required with `numberOfWorkers`.
	WorkerType *string `pulumi:"workerType"`
}

// The set of arguments for constructing a MLTransform resource.
type MLTransformArgs struct {
	// Description of the ML Transform.
	Description pulumi.StringPtrInput
	// The version of glue to use, for example "1.0". For information about available versions, see the [AWS Glue Release Notes](https://docs.aws.amazon.com/glue/latest/dg/release-notes.html).
	GlueVersion pulumi.StringPtrInput
	// A list of AWS Glue table definitions used by the transform. see Input Record Tables.
	InputRecordTables MLTransformInputRecordTableArrayInput
	// The number of AWS Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from `2` to `100` DPUs; the default is `10`. `maxCapacity` is a mutually exclusive option with `numberOfWorkers` and `workerType`.
	MaxCapacity pulumi.Float64PtrInput
	// The maximum number of times to retry this ML Transform if it fails.
	MaxRetries pulumi.IntPtrInput
	// The name you assign to this ML Transform. It must be unique in your account.
	Name pulumi.StringPtrInput
	// The number of workers of a defined `workerType` that are allocated when an ML Transform runs. Required with `workerType`.
	NumberOfWorkers pulumi.IntPtrInput
	// The algorithmic parameters that are specific to the transform type used. Conditionally dependent on the transform type. see Parameters.
	Parameters MLTransformParametersInput
	// The ARN of the IAM role associated with this ML Transform.
	RoleArn pulumi.StringInput
	// Key-value map of resource tags
	Tags pulumi.StringMapInput
	// The ML Transform timeout in minutes. The default is 2880 minutes (48 hours).
	Timeout pulumi.IntPtrInput
	// The type of predefined worker that is allocated when an ML Transform runs. Accepts a value of `Standard`, `G.1X`, or `G.2X`. Required with `numberOfWorkers`.
	WorkerType pulumi.StringPtrInput
}

func (MLTransformArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mltransformArgs)(nil)).Elem()
}
