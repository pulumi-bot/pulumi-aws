// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package TriggerAction

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type TriggerAction struct {
	// Arguments to be passed to the job. You can specify arguments here that your own job-execution script consumes, as well as arguments that AWS Glue itself consumes.
	Arguments map[string]interface{} `pulumi:"arguments"`
	// The name of the crawler to watch. If this is specified, `crawlState` must also be specified. Conflicts with `jobName`.
	CrawlerName *string `pulumi:"crawlerName"`
	// The name of the job to watch. If this is specified, `state` must also be specified. Conflicts with `crawlerName`.
	JobName *string `pulumi:"jobName"`
	// The job run timeout in minutes. It overrides the timeout value of the job.
	Timeout *int `pulumi:"timeout"`
}

type TriggerActionInput interface {
	pulumi.Input

	ToTriggerActionOutput() TriggerActionOutput
	ToTriggerActionOutputWithContext(context.Context) TriggerActionOutput
}

type TriggerActionArgs struct {
	// Arguments to be passed to the job. You can specify arguments here that your own job-execution script consumes, as well as arguments that AWS Glue itself consumes.
	Arguments pulumi.MapInput `pulumi:"arguments"`
	// The name of the crawler to watch. If this is specified, `crawlState` must also be specified. Conflicts with `jobName`.
	CrawlerName pulumi.StringPtrInput `pulumi:"crawlerName"`
	// The name of the job to watch. If this is specified, `state` must also be specified. Conflicts with `crawlerName`.
	JobName pulumi.StringPtrInput `pulumi:"jobName"`
	// The job run timeout in minutes. It overrides the timeout value of the job.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
}

func (TriggerActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerAction)(nil)).Elem()
}

func (i TriggerActionArgs) ToTriggerActionOutput() TriggerActionOutput {
	return i.ToTriggerActionOutputWithContext(context.Background())
}

func (i TriggerActionArgs) ToTriggerActionOutputWithContext(ctx context.Context) TriggerActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerActionOutput)
}

type TriggerActionArrayInput interface {
	pulumi.Input

	ToTriggerActionArrayOutput() TriggerActionArrayOutput
	ToTriggerActionArrayOutputWithContext(context.Context) TriggerActionArrayOutput
}

type TriggerActionArray []TriggerActionInput

func (TriggerActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerAction)(nil)).Elem()
}

func (i TriggerActionArray) ToTriggerActionArrayOutput() TriggerActionArrayOutput {
	return i.ToTriggerActionArrayOutputWithContext(context.Background())
}

func (i TriggerActionArray) ToTriggerActionArrayOutputWithContext(ctx context.Context) TriggerActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerActionArrayOutput)
}

type TriggerActionOutput struct { *pulumi.OutputState }

func (TriggerActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerAction)(nil)).Elem()
}

func (o TriggerActionOutput) ToTriggerActionOutput() TriggerActionOutput {
	return o
}

func (o TriggerActionOutput) ToTriggerActionOutputWithContext(ctx context.Context) TriggerActionOutput {
	return o
}

// Arguments to be passed to the job. You can specify arguments here that your own job-execution script consumes, as well as arguments that AWS Glue itself consumes.
func (o TriggerActionOutput) Arguments() pulumi.MapOutput {
	return o.ApplyT(func (v TriggerAction) map[string]interface{} { return v.Arguments }).(pulumi.MapOutput)
}

// The name of the crawler to watch. If this is specified, `crawlState` must also be specified. Conflicts with `jobName`.
func (o TriggerActionOutput) CrawlerName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v TriggerAction) *string { return v.CrawlerName }).(pulumi.StringPtrOutput)
}

// The name of the job to watch. If this is specified, `state` must also be specified. Conflicts with `crawlerName`.
func (o TriggerActionOutput) JobName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v TriggerAction) *string { return v.JobName }).(pulumi.StringPtrOutput)
}

// The job run timeout in minutes. It overrides the timeout value of the job.
func (o TriggerActionOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func (v TriggerAction) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

type TriggerActionArrayOutput struct { *pulumi.OutputState}

func (TriggerActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerAction)(nil)).Elem()
}

func (o TriggerActionArrayOutput) ToTriggerActionArrayOutput() TriggerActionArrayOutput {
	return o
}

func (o TriggerActionArrayOutput) ToTriggerActionArrayOutputWithContext(ctx context.Context) TriggerActionArrayOutput {
	return o
}

func (o TriggerActionArrayOutput) Index(i pulumi.IntInput) TriggerActionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) TriggerAction {
		return vs[0].([]TriggerAction)[vs[1].(int)]
	}).(TriggerActionOutput)
}

func init() {
	pulumi.RegisterOutputType(TriggerActionOutput{})
	pulumi.RegisterOutputType(TriggerActionArrayOutput{})
}
