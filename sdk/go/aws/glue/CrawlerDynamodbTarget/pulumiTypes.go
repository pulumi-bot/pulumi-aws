// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package CrawlerDynamodbTarget

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type CrawlerDynamodbTarget struct {
	// The path to the Amazon S3 target.
	Path string `pulumi:"path"`
}

type CrawlerDynamodbTargetInput interface {
	pulumi.Input

	ToCrawlerDynamodbTargetOutput() CrawlerDynamodbTargetOutput
	ToCrawlerDynamodbTargetOutputWithContext(context.Context) CrawlerDynamodbTargetOutput
}

type CrawlerDynamodbTargetArgs struct {
	// The path to the Amazon S3 target.
	Path pulumi.StringInput `pulumi:"path"`
}

func (CrawlerDynamodbTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CrawlerDynamodbTarget)(nil)).Elem()
}

func (i CrawlerDynamodbTargetArgs) ToCrawlerDynamodbTargetOutput() CrawlerDynamodbTargetOutput {
	return i.ToCrawlerDynamodbTargetOutputWithContext(context.Background())
}

func (i CrawlerDynamodbTargetArgs) ToCrawlerDynamodbTargetOutputWithContext(ctx context.Context) CrawlerDynamodbTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CrawlerDynamodbTargetOutput)
}

type CrawlerDynamodbTargetArrayInput interface {
	pulumi.Input

	ToCrawlerDynamodbTargetArrayOutput() CrawlerDynamodbTargetArrayOutput
	ToCrawlerDynamodbTargetArrayOutputWithContext(context.Context) CrawlerDynamodbTargetArrayOutput
}

type CrawlerDynamodbTargetArray []CrawlerDynamodbTargetInput

func (CrawlerDynamodbTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CrawlerDynamodbTarget)(nil)).Elem()
}

func (i CrawlerDynamodbTargetArray) ToCrawlerDynamodbTargetArrayOutput() CrawlerDynamodbTargetArrayOutput {
	return i.ToCrawlerDynamodbTargetArrayOutputWithContext(context.Background())
}

func (i CrawlerDynamodbTargetArray) ToCrawlerDynamodbTargetArrayOutputWithContext(ctx context.Context) CrawlerDynamodbTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CrawlerDynamodbTargetArrayOutput)
}

type CrawlerDynamodbTargetOutput struct { *pulumi.OutputState }

func (CrawlerDynamodbTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CrawlerDynamodbTarget)(nil)).Elem()
}

func (o CrawlerDynamodbTargetOutput) ToCrawlerDynamodbTargetOutput() CrawlerDynamodbTargetOutput {
	return o
}

func (o CrawlerDynamodbTargetOutput) ToCrawlerDynamodbTargetOutputWithContext(ctx context.Context) CrawlerDynamodbTargetOutput {
	return o
}

// The path to the Amazon S3 target.
func (o CrawlerDynamodbTargetOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func (v CrawlerDynamodbTarget) string { return v.Path }).(pulumi.StringOutput)
}

type CrawlerDynamodbTargetArrayOutput struct { *pulumi.OutputState}

func (CrawlerDynamodbTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CrawlerDynamodbTarget)(nil)).Elem()
}

func (o CrawlerDynamodbTargetArrayOutput) ToCrawlerDynamodbTargetArrayOutput() CrawlerDynamodbTargetArrayOutput {
	return o
}

func (o CrawlerDynamodbTargetArrayOutput) ToCrawlerDynamodbTargetArrayOutputWithContext(ctx context.Context) CrawlerDynamodbTargetArrayOutput {
	return o
}

func (o CrawlerDynamodbTargetArrayOutput) Index(i pulumi.IntInput) CrawlerDynamodbTargetOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) CrawlerDynamodbTarget {
		return vs[0].([]CrawlerDynamodbTarget)[vs[1].(int)]
	}).(CrawlerDynamodbTargetOutput)
}

func init() {
	pulumi.RegisterOutputType(CrawlerDynamodbTargetOutput{})
	pulumi.RegisterOutputType(CrawlerDynamodbTargetArrayOutput{})
}
