// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ConnectionPhysicalConnectionRequirements

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ConnectionPhysicalConnectionRequirements struct {
	// The availability zone of the connection. This field is redundant and implied by `subnetId`, but is currently an api requirement.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The security group ID list used by the connection.
	SecurityGroupIdLists []string `pulumi:"securityGroupIdLists"`
	// The subnet ID used by the connection.
	SubnetId *string `pulumi:"subnetId"`
}

type ConnectionPhysicalConnectionRequirementsInput interface {
	pulumi.Input

	ToConnectionPhysicalConnectionRequirementsOutput() ConnectionPhysicalConnectionRequirementsOutput
	ToConnectionPhysicalConnectionRequirementsOutputWithContext(context.Context) ConnectionPhysicalConnectionRequirementsOutput
}

type ConnectionPhysicalConnectionRequirementsArgs struct {
	// The availability zone of the connection. This field is redundant and implied by `subnetId`, but is currently an api requirement.
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// The security group ID list used by the connection.
	SecurityGroupIdLists pulumi.StringArrayInput `pulumi:"securityGroupIdLists"`
	// The subnet ID used by the connection.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (ConnectionPhysicalConnectionRequirementsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionPhysicalConnectionRequirements)(nil)).Elem()
}

func (i ConnectionPhysicalConnectionRequirementsArgs) ToConnectionPhysicalConnectionRequirementsOutput() ConnectionPhysicalConnectionRequirementsOutput {
	return i.ToConnectionPhysicalConnectionRequirementsOutputWithContext(context.Background())
}

func (i ConnectionPhysicalConnectionRequirementsArgs) ToConnectionPhysicalConnectionRequirementsOutputWithContext(ctx context.Context) ConnectionPhysicalConnectionRequirementsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionPhysicalConnectionRequirementsOutput)
}

func (i ConnectionPhysicalConnectionRequirementsArgs) ToConnectionPhysicalConnectionRequirementsPtrOutput() ConnectionPhysicalConnectionRequirementsPtrOutput {
	return i.ToConnectionPhysicalConnectionRequirementsPtrOutputWithContext(context.Background())
}

func (i ConnectionPhysicalConnectionRequirementsArgs) ToConnectionPhysicalConnectionRequirementsPtrOutputWithContext(ctx context.Context) ConnectionPhysicalConnectionRequirementsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionPhysicalConnectionRequirementsOutput).ToConnectionPhysicalConnectionRequirementsPtrOutputWithContext(ctx)
}

type ConnectionPhysicalConnectionRequirementsPtrInput interface {
	pulumi.Input

	ToConnectionPhysicalConnectionRequirementsPtrOutput() ConnectionPhysicalConnectionRequirementsPtrOutput
	ToConnectionPhysicalConnectionRequirementsPtrOutputWithContext(context.Context) ConnectionPhysicalConnectionRequirementsPtrOutput
}

type connectionPhysicalConnectionRequirementsPtrType ConnectionPhysicalConnectionRequirementsArgs

func ConnectionPhysicalConnectionRequirementsPtr(v *ConnectionPhysicalConnectionRequirementsArgs) ConnectionPhysicalConnectionRequirementsPtrInput {	return (*connectionPhysicalConnectionRequirementsPtrType)(v)
}

func (*connectionPhysicalConnectionRequirementsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionPhysicalConnectionRequirements)(nil)).Elem()
}

func (i *connectionPhysicalConnectionRequirementsPtrType) ToConnectionPhysicalConnectionRequirementsPtrOutput() ConnectionPhysicalConnectionRequirementsPtrOutput {
	return i.ToConnectionPhysicalConnectionRequirementsPtrOutputWithContext(context.Background())
}

func (i *connectionPhysicalConnectionRequirementsPtrType) ToConnectionPhysicalConnectionRequirementsPtrOutputWithContext(ctx context.Context) ConnectionPhysicalConnectionRequirementsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionPhysicalConnectionRequirementsPtrOutput)
}

type ConnectionPhysicalConnectionRequirementsOutput struct { *pulumi.OutputState }

func (ConnectionPhysicalConnectionRequirementsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionPhysicalConnectionRequirements)(nil)).Elem()
}

func (o ConnectionPhysicalConnectionRequirementsOutput) ToConnectionPhysicalConnectionRequirementsOutput() ConnectionPhysicalConnectionRequirementsOutput {
	return o
}

func (o ConnectionPhysicalConnectionRequirementsOutput) ToConnectionPhysicalConnectionRequirementsOutputWithContext(ctx context.Context) ConnectionPhysicalConnectionRequirementsOutput {
	return o
}

func (o ConnectionPhysicalConnectionRequirementsOutput) ToConnectionPhysicalConnectionRequirementsPtrOutput() ConnectionPhysicalConnectionRequirementsPtrOutput {
	return o.ToConnectionPhysicalConnectionRequirementsPtrOutputWithContext(context.Background())
}

func (o ConnectionPhysicalConnectionRequirementsOutput) ToConnectionPhysicalConnectionRequirementsPtrOutputWithContext(ctx context.Context) ConnectionPhysicalConnectionRequirementsPtrOutput {
	return o.ApplyT(func(v ConnectionPhysicalConnectionRequirements) *ConnectionPhysicalConnectionRequirements {
		return &v
	}).(ConnectionPhysicalConnectionRequirementsPtrOutput)
}
// The availability zone of the connection. This field is redundant and implied by `subnetId`, but is currently an api requirement.
func (o ConnectionPhysicalConnectionRequirementsOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ConnectionPhysicalConnectionRequirements) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// The security group ID list used by the connection.
func (o ConnectionPhysicalConnectionRequirementsOutput) SecurityGroupIdLists() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ConnectionPhysicalConnectionRequirements) []string { return v.SecurityGroupIdLists }).(pulumi.StringArrayOutput)
}

// The subnet ID used by the connection.
func (o ConnectionPhysicalConnectionRequirementsOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ConnectionPhysicalConnectionRequirements) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type ConnectionPhysicalConnectionRequirementsPtrOutput struct { *pulumi.OutputState}

func (ConnectionPhysicalConnectionRequirementsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionPhysicalConnectionRequirements)(nil)).Elem()
}

func (o ConnectionPhysicalConnectionRequirementsPtrOutput) ToConnectionPhysicalConnectionRequirementsPtrOutput() ConnectionPhysicalConnectionRequirementsPtrOutput {
	return o
}

func (o ConnectionPhysicalConnectionRequirementsPtrOutput) ToConnectionPhysicalConnectionRequirementsPtrOutputWithContext(ctx context.Context) ConnectionPhysicalConnectionRequirementsPtrOutput {
	return o
}

func (o ConnectionPhysicalConnectionRequirementsPtrOutput) Elem() ConnectionPhysicalConnectionRequirementsOutput {
	return o.ApplyT(func (v *ConnectionPhysicalConnectionRequirements) ConnectionPhysicalConnectionRequirements { return *v }).(ConnectionPhysicalConnectionRequirementsOutput)
}

// The availability zone of the connection. This field is redundant and implied by `subnetId`, but is currently an api requirement.
func (o ConnectionPhysicalConnectionRequirementsPtrOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ConnectionPhysicalConnectionRequirements) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// The security group ID list used by the connection.
func (o ConnectionPhysicalConnectionRequirementsPtrOutput) SecurityGroupIdLists() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ConnectionPhysicalConnectionRequirements) []string { return v.SecurityGroupIdLists }).(pulumi.StringArrayOutput)
}

// The subnet ID used by the connection.
func (o ConnectionPhysicalConnectionRequirementsPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ConnectionPhysicalConnectionRequirements) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ConnectionPhysicalConnectionRequirementsOutput{})
	pulumi.RegisterOutputType(ConnectionPhysicalConnectionRequirementsPtrOutput{})
}
