// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package SecurityConfigurationEncryptionConfigurationCloudwatchEncryption

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type SecurityConfigurationEncryptionConfigurationCloudwatchEncryption struct {
	// Encryption mode to use for CloudWatch data. Valid values: `DISABLED`, `SSE-KMS`. Default value: `DISABLED`.
	CloudwatchEncryptionMode *string `pulumi:"cloudwatchEncryptionMode"`
	// Amazon Resource Name (ARN) of the KMS key to be used to encrypt the data.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
}

type SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionInput interface {
	pulumi.Input

	ToSecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput() SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput
	ToSecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutputWithContext(context.Context) SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput
}

type SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionArgs struct {
	// Encryption mode to use for CloudWatch data. Valid values: `DISABLED`, `SSE-KMS`. Default value: `DISABLED`.
	CloudwatchEncryptionMode pulumi.StringPtrInput `pulumi:"cloudwatchEncryptionMode"`
	// Amazon Resource Name (ARN) of the KMS key to be used to encrypt the data.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
}

func (SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityConfigurationEncryptionConfigurationCloudwatchEncryption)(nil)).Elem()
}

func (i SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionArgs) ToSecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput() SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput {
	return i.ToSecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutputWithContext(context.Background())
}

func (i SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionArgs) ToSecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutputWithContext(ctx context.Context) SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput)
}

type SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput struct { *pulumi.OutputState }

func (SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityConfigurationEncryptionConfigurationCloudwatchEncryption)(nil)).Elem()
}

func (o SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput) ToSecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput() SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput {
	return o
}

func (o SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput) ToSecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutputWithContext(ctx context.Context) SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput {
	return o
}

// Encryption mode to use for CloudWatch data. Valid values: `DISABLED`, `SSE-KMS`. Default value: `DISABLED`.
func (o SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput) CloudwatchEncryptionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SecurityConfigurationEncryptionConfigurationCloudwatchEncryption) *string { return v.CloudwatchEncryptionMode }).(pulumi.StringPtrOutput)
}

// Amazon Resource Name (ARN) of the KMS key to be used to encrypt the data.
func (o SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SecurityConfigurationEncryptionConfigurationCloudwatchEncryption) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput{})
}
