// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package glue

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type CatalogTablePartitionKey struct {
	Comment *string `pulumi:"comment"`
	Name    string  `pulumi:"name"`
	Type    *string `pulumi:"type"`
}

// CatalogTablePartitionKeyInput is an input type that accepts CatalogTablePartitionKeyArgs and CatalogTablePartitionKeyOutput values.
// You can construct a concrete instance of `CatalogTablePartitionKeyInput` via:
//
//          CatalogTablePartitionKeyArgs{...}
type CatalogTablePartitionKeyInput interface {
	pulumi.Input

	ToCatalogTablePartitionKeyOutput() CatalogTablePartitionKeyOutput
	ToCatalogTablePartitionKeyOutputWithContext(context.Context) CatalogTablePartitionKeyOutput
}

type CatalogTablePartitionKeyArgs struct {
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	Name    pulumi.StringInput    `pulumi:"name"`
	Type    pulumi.StringPtrInput `pulumi:"type"`
}

func (CatalogTablePartitionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogTablePartitionKey)(nil)).Elem()
}

func (i CatalogTablePartitionKeyArgs) ToCatalogTablePartitionKeyOutput() CatalogTablePartitionKeyOutput {
	return i.ToCatalogTablePartitionKeyOutputWithContext(context.Background())
}

func (i CatalogTablePartitionKeyArgs) ToCatalogTablePartitionKeyOutputWithContext(ctx context.Context) CatalogTablePartitionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogTablePartitionKeyOutput)
}

// CatalogTablePartitionKeyArrayInput is an input type that accepts CatalogTablePartitionKeyArray and CatalogTablePartitionKeyArrayOutput values.
// You can construct a concrete instance of `CatalogTablePartitionKeyArrayInput` via:
//
//          CatalogTablePartitionKeyArray{ CatalogTablePartitionKeyArgs{...} }
type CatalogTablePartitionKeyArrayInput interface {
	pulumi.Input

	ToCatalogTablePartitionKeyArrayOutput() CatalogTablePartitionKeyArrayOutput
	ToCatalogTablePartitionKeyArrayOutputWithContext(context.Context) CatalogTablePartitionKeyArrayOutput
}

type CatalogTablePartitionKeyArray []CatalogTablePartitionKeyInput

func (CatalogTablePartitionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CatalogTablePartitionKey)(nil)).Elem()
}

func (i CatalogTablePartitionKeyArray) ToCatalogTablePartitionKeyArrayOutput() CatalogTablePartitionKeyArrayOutput {
	return i.ToCatalogTablePartitionKeyArrayOutputWithContext(context.Background())
}

func (i CatalogTablePartitionKeyArray) ToCatalogTablePartitionKeyArrayOutputWithContext(ctx context.Context) CatalogTablePartitionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogTablePartitionKeyArrayOutput)
}

type CatalogTablePartitionKeyOutput struct{ *pulumi.OutputState }

func (CatalogTablePartitionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogTablePartitionKey)(nil)).Elem()
}

func (o CatalogTablePartitionKeyOutput) ToCatalogTablePartitionKeyOutput() CatalogTablePartitionKeyOutput {
	return o
}

func (o CatalogTablePartitionKeyOutput) ToCatalogTablePartitionKeyOutputWithContext(ctx context.Context) CatalogTablePartitionKeyOutput {
	return o
}

func (o CatalogTablePartitionKeyOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogTablePartitionKey) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o CatalogTablePartitionKeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CatalogTablePartitionKey) string { return v.Name }).(pulumi.StringOutput)
}

func (o CatalogTablePartitionKeyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogTablePartitionKey) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CatalogTablePartitionKeyArrayOutput struct{ *pulumi.OutputState }

func (CatalogTablePartitionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CatalogTablePartitionKey)(nil)).Elem()
}

func (o CatalogTablePartitionKeyArrayOutput) ToCatalogTablePartitionKeyArrayOutput() CatalogTablePartitionKeyArrayOutput {
	return o
}

func (o CatalogTablePartitionKeyArrayOutput) ToCatalogTablePartitionKeyArrayOutputWithContext(ctx context.Context) CatalogTablePartitionKeyArrayOutput {
	return o
}

func (o CatalogTablePartitionKeyArrayOutput) Index(i pulumi.IntInput) CatalogTablePartitionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CatalogTablePartitionKey {
		return vs[0].([]CatalogTablePartitionKey)[vs[1].(int)]
	}).(CatalogTablePartitionKeyOutput)
}

type CatalogTableStorageDescriptor struct {
	BucketColumns          []string                                  `pulumi:"bucketColumns"`
	Columns                []CatalogTableStorageDescriptorColumn     `pulumi:"columns"`
	Compressed             *bool                                     `pulumi:"compressed"`
	InputFormat            *string                                   `pulumi:"inputFormat"`
	Location               *string                                   `pulumi:"location"`
	NumberOfBuckets        *int                                      `pulumi:"numberOfBuckets"`
	OutputFormat           *string                                   `pulumi:"outputFormat"`
	Parameters             map[string]string                         `pulumi:"parameters"`
	SerDeInfo              *CatalogTableStorageDescriptorSerDeInfo   `pulumi:"serDeInfo"`
	SkewedInfo             *CatalogTableStorageDescriptorSkewedInfo  `pulumi:"skewedInfo"`
	SortColumns            []CatalogTableStorageDescriptorSortColumn `pulumi:"sortColumns"`
	StoredAsSubDirectories *bool                                     `pulumi:"storedAsSubDirectories"`
}

// CatalogTableStorageDescriptorInput is an input type that accepts CatalogTableStorageDescriptorArgs and CatalogTableStorageDescriptorOutput values.
// You can construct a concrete instance of `CatalogTableStorageDescriptorInput` via:
//
//          CatalogTableStorageDescriptorArgs{...}
type CatalogTableStorageDescriptorInput interface {
	pulumi.Input

	ToCatalogTableStorageDescriptorOutput() CatalogTableStorageDescriptorOutput
	ToCatalogTableStorageDescriptorOutputWithContext(context.Context) CatalogTableStorageDescriptorOutput
}

type CatalogTableStorageDescriptorArgs struct {
	BucketColumns          pulumi.StringArrayInput                           `pulumi:"bucketColumns"`
	Columns                CatalogTableStorageDescriptorColumnArrayInput     `pulumi:"columns"`
	Compressed             pulumi.BoolPtrInput                               `pulumi:"compressed"`
	InputFormat            pulumi.StringPtrInput                             `pulumi:"inputFormat"`
	Location               pulumi.StringPtrInput                             `pulumi:"location"`
	NumberOfBuckets        pulumi.IntPtrInput                                `pulumi:"numberOfBuckets"`
	OutputFormat           pulumi.StringPtrInput                             `pulumi:"outputFormat"`
	Parameters             pulumi.StringMapInput                             `pulumi:"parameters"`
	SerDeInfo              CatalogTableStorageDescriptorSerDeInfoPtrInput    `pulumi:"serDeInfo"`
	SkewedInfo             CatalogTableStorageDescriptorSkewedInfoPtrInput   `pulumi:"skewedInfo"`
	SortColumns            CatalogTableStorageDescriptorSortColumnArrayInput `pulumi:"sortColumns"`
	StoredAsSubDirectories pulumi.BoolPtrInput                               `pulumi:"storedAsSubDirectories"`
}

func (CatalogTableStorageDescriptorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogTableStorageDescriptor)(nil)).Elem()
}

func (i CatalogTableStorageDescriptorArgs) ToCatalogTableStorageDescriptorOutput() CatalogTableStorageDescriptorOutput {
	return i.ToCatalogTableStorageDescriptorOutputWithContext(context.Background())
}

func (i CatalogTableStorageDescriptorArgs) ToCatalogTableStorageDescriptorOutputWithContext(ctx context.Context) CatalogTableStorageDescriptorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogTableStorageDescriptorOutput)
}

func (i CatalogTableStorageDescriptorArgs) ToCatalogTableStorageDescriptorPtrOutput() CatalogTableStorageDescriptorPtrOutput {
	return i.ToCatalogTableStorageDescriptorPtrOutputWithContext(context.Background())
}

func (i CatalogTableStorageDescriptorArgs) ToCatalogTableStorageDescriptorPtrOutputWithContext(ctx context.Context) CatalogTableStorageDescriptorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogTableStorageDescriptorOutput).ToCatalogTableStorageDescriptorPtrOutputWithContext(ctx)
}

// CatalogTableStorageDescriptorPtrInput is an input type that accepts CatalogTableStorageDescriptorArgs, CatalogTableStorageDescriptorPtr and CatalogTableStorageDescriptorPtrOutput values.
// You can construct a concrete instance of `CatalogTableStorageDescriptorPtrInput` via:
//
//          CatalogTableStorageDescriptorArgs{...}
//
//  or:
//
//          nil
type CatalogTableStorageDescriptorPtrInput interface {
	pulumi.Input

	ToCatalogTableStorageDescriptorPtrOutput() CatalogTableStorageDescriptorPtrOutput
	ToCatalogTableStorageDescriptorPtrOutputWithContext(context.Context) CatalogTableStorageDescriptorPtrOutput
}

type catalogTableStorageDescriptorPtrType CatalogTableStorageDescriptorArgs

func CatalogTableStorageDescriptorPtr(v *CatalogTableStorageDescriptorArgs) CatalogTableStorageDescriptorPtrInput {
	return (*catalogTableStorageDescriptorPtrType)(v)
}

func (*catalogTableStorageDescriptorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CatalogTableStorageDescriptor)(nil)).Elem()
}

func (i *catalogTableStorageDescriptorPtrType) ToCatalogTableStorageDescriptorPtrOutput() CatalogTableStorageDescriptorPtrOutput {
	return i.ToCatalogTableStorageDescriptorPtrOutputWithContext(context.Background())
}

func (i *catalogTableStorageDescriptorPtrType) ToCatalogTableStorageDescriptorPtrOutputWithContext(ctx context.Context) CatalogTableStorageDescriptorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogTableStorageDescriptorPtrOutput)
}

type CatalogTableStorageDescriptorOutput struct{ *pulumi.OutputState }

func (CatalogTableStorageDescriptorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogTableStorageDescriptor)(nil)).Elem()
}

func (o CatalogTableStorageDescriptorOutput) ToCatalogTableStorageDescriptorOutput() CatalogTableStorageDescriptorOutput {
	return o
}

func (o CatalogTableStorageDescriptorOutput) ToCatalogTableStorageDescriptorOutputWithContext(ctx context.Context) CatalogTableStorageDescriptorOutput {
	return o
}

func (o CatalogTableStorageDescriptorOutput) ToCatalogTableStorageDescriptorPtrOutput() CatalogTableStorageDescriptorPtrOutput {
	return o.ToCatalogTableStorageDescriptorPtrOutputWithContext(context.Background())
}

func (o CatalogTableStorageDescriptorOutput) ToCatalogTableStorageDescriptorPtrOutputWithContext(ctx context.Context) CatalogTableStorageDescriptorPtrOutput {
	return o.ApplyT(func(v CatalogTableStorageDescriptor) *CatalogTableStorageDescriptor {
		return &v
	}).(CatalogTableStorageDescriptorPtrOutput)
}
func (o CatalogTableStorageDescriptorOutput) BucketColumns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CatalogTableStorageDescriptor) []string { return v.BucketColumns }).(pulumi.StringArrayOutput)
}

func (o CatalogTableStorageDescriptorOutput) Columns() CatalogTableStorageDescriptorColumnArrayOutput {
	return o.ApplyT(func(v CatalogTableStorageDescriptor) []CatalogTableStorageDescriptorColumn { return v.Columns }).(CatalogTableStorageDescriptorColumnArrayOutput)
}

func (o CatalogTableStorageDescriptorOutput) Compressed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CatalogTableStorageDescriptor) *bool { return v.Compressed }).(pulumi.BoolPtrOutput)
}

func (o CatalogTableStorageDescriptorOutput) InputFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogTableStorageDescriptor) *string { return v.InputFormat }).(pulumi.StringPtrOutput)
}

func (o CatalogTableStorageDescriptorOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogTableStorageDescriptor) *string { return v.Location }).(pulumi.StringPtrOutput)
}

func (o CatalogTableStorageDescriptorOutput) NumberOfBuckets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CatalogTableStorageDescriptor) *int { return v.NumberOfBuckets }).(pulumi.IntPtrOutput)
}

func (o CatalogTableStorageDescriptorOutput) OutputFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogTableStorageDescriptor) *string { return v.OutputFormat }).(pulumi.StringPtrOutput)
}

func (o CatalogTableStorageDescriptorOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v CatalogTableStorageDescriptor) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

func (o CatalogTableStorageDescriptorOutput) SerDeInfo() CatalogTableStorageDescriptorSerDeInfoPtrOutput {
	return o.ApplyT(func(v CatalogTableStorageDescriptor) *CatalogTableStorageDescriptorSerDeInfo { return v.SerDeInfo }).(CatalogTableStorageDescriptorSerDeInfoPtrOutput)
}

func (o CatalogTableStorageDescriptorOutput) SkewedInfo() CatalogTableStorageDescriptorSkewedInfoPtrOutput {
	return o.ApplyT(func(v CatalogTableStorageDescriptor) *CatalogTableStorageDescriptorSkewedInfo { return v.SkewedInfo }).(CatalogTableStorageDescriptorSkewedInfoPtrOutput)
}

func (o CatalogTableStorageDescriptorOutput) SortColumns() CatalogTableStorageDescriptorSortColumnArrayOutput {
	return o.ApplyT(func(v CatalogTableStorageDescriptor) []CatalogTableStorageDescriptorSortColumn { return v.SortColumns }).(CatalogTableStorageDescriptorSortColumnArrayOutput)
}

func (o CatalogTableStorageDescriptorOutput) StoredAsSubDirectories() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CatalogTableStorageDescriptor) *bool { return v.StoredAsSubDirectories }).(pulumi.BoolPtrOutput)
}

type CatalogTableStorageDescriptorPtrOutput struct{ *pulumi.OutputState }

func (CatalogTableStorageDescriptorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CatalogTableStorageDescriptor)(nil)).Elem()
}

func (o CatalogTableStorageDescriptorPtrOutput) ToCatalogTableStorageDescriptorPtrOutput() CatalogTableStorageDescriptorPtrOutput {
	return o
}

func (o CatalogTableStorageDescriptorPtrOutput) ToCatalogTableStorageDescriptorPtrOutputWithContext(ctx context.Context) CatalogTableStorageDescriptorPtrOutput {
	return o
}

func (o CatalogTableStorageDescriptorPtrOutput) Elem() CatalogTableStorageDescriptorOutput {
	return o.ApplyT(func(v *CatalogTableStorageDescriptor) CatalogTableStorageDescriptor { return *v }).(CatalogTableStorageDescriptorOutput)
}

func (o CatalogTableStorageDescriptorPtrOutput) BucketColumns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CatalogTableStorageDescriptor) []string {
		if v == nil {
			return nil
		}
		return v.BucketColumns
	}).(pulumi.StringArrayOutput)
}

func (o CatalogTableStorageDescriptorPtrOutput) Columns() CatalogTableStorageDescriptorColumnArrayOutput {
	return o.ApplyT(func(v *CatalogTableStorageDescriptor) []CatalogTableStorageDescriptorColumn {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(CatalogTableStorageDescriptorColumnArrayOutput)
}

func (o CatalogTableStorageDescriptorPtrOutput) Compressed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CatalogTableStorageDescriptor) *bool {
		if v == nil {
			return nil
		}
		return v.Compressed
	}).(pulumi.BoolPtrOutput)
}

func (o CatalogTableStorageDescriptorPtrOutput) InputFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CatalogTableStorageDescriptor) *string {
		if v == nil {
			return nil
		}
		return v.InputFormat
	}).(pulumi.StringPtrOutput)
}

func (o CatalogTableStorageDescriptorPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CatalogTableStorageDescriptor) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

func (o CatalogTableStorageDescriptorPtrOutput) NumberOfBuckets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CatalogTableStorageDescriptor) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfBuckets
	}).(pulumi.IntPtrOutput)
}

func (o CatalogTableStorageDescriptorPtrOutput) OutputFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CatalogTableStorageDescriptor) *string {
		if v == nil {
			return nil
		}
		return v.OutputFormat
	}).(pulumi.StringPtrOutput)
}

func (o CatalogTableStorageDescriptorPtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CatalogTableStorageDescriptor) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

func (o CatalogTableStorageDescriptorPtrOutput) SerDeInfo() CatalogTableStorageDescriptorSerDeInfoPtrOutput {
	return o.ApplyT(func(v *CatalogTableStorageDescriptor) *CatalogTableStorageDescriptorSerDeInfo {
		if v == nil {
			return nil
		}
		return v.SerDeInfo
	}).(CatalogTableStorageDescriptorSerDeInfoPtrOutput)
}

func (o CatalogTableStorageDescriptorPtrOutput) SkewedInfo() CatalogTableStorageDescriptorSkewedInfoPtrOutput {
	return o.ApplyT(func(v *CatalogTableStorageDescriptor) *CatalogTableStorageDescriptorSkewedInfo {
		if v == nil {
			return nil
		}
		return v.SkewedInfo
	}).(CatalogTableStorageDescriptorSkewedInfoPtrOutput)
}

func (o CatalogTableStorageDescriptorPtrOutput) SortColumns() CatalogTableStorageDescriptorSortColumnArrayOutput {
	return o.ApplyT(func(v *CatalogTableStorageDescriptor) []CatalogTableStorageDescriptorSortColumn {
		if v == nil {
			return nil
		}
		return v.SortColumns
	}).(CatalogTableStorageDescriptorSortColumnArrayOutput)
}

func (o CatalogTableStorageDescriptorPtrOutput) StoredAsSubDirectories() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CatalogTableStorageDescriptor) *bool {
		if v == nil {
			return nil
		}
		return v.StoredAsSubDirectories
	}).(pulumi.BoolPtrOutput)
}

type CatalogTableStorageDescriptorColumn struct {
	Comment *string `pulumi:"comment"`
	Name    string  `pulumi:"name"`
	Type    *string `pulumi:"type"`
}

// CatalogTableStorageDescriptorColumnInput is an input type that accepts CatalogTableStorageDescriptorColumnArgs and CatalogTableStorageDescriptorColumnOutput values.
// You can construct a concrete instance of `CatalogTableStorageDescriptorColumnInput` via:
//
//          CatalogTableStorageDescriptorColumnArgs{...}
type CatalogTableStorageDescriptorColumnInput interface {
	pulumi.Input

	ToCatalogTableStorageDescriptorColumnOutput() CatalogTableStorageDescriptorColumnOutput
	ToCatalogTableStorageDescriptorColumnOutputWithContext(context.Context) CatalogTableStorageDescriptorColumnOutput
}

type CatalogTableStorageDescriptorColumnArgs struct {
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	Name    pulumi.StringInput    `pulumi:"name"`
	Type    pulumi.StringPtrInput `pulumi:"type"`
}

func (CatalogTableStorageDescriptorColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogTableStorageDescriptorColumn)(nil)).Elem()
}

func (i CatalogTableStorageDescriptorColumnArgs) ToCatalogTableStorageDescriptorColumnOutput() CatalogTableStorageDescriptorColumnOutput {
	return i.ToCatalogTableStorageDescriptorColumnOutputWithContext(context.Background())
}

func (i CatalogTableStorageDescriptorColumnArgs) ToCatalogTableStorageDescriptorColumnOutputWithContext(ctx context.Context) CatalogTableStorageDescriptorColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogTableStorageDescriptorColumnOutput)
}

// CatalogTableStorageDescriptorColumnArrayInput is an input type that accepts CatalogTableStorageDescriptorColumnArray and CatalogTableStorageDescriptorColumnArrayOutput values.
// You can construct a concrete instance of `CatalogTableStorageDescriptorColumnArrayInput` via:
//
//          CatalogTableStorageDescriptorColumnArray{ CatalogTableStorageDescriptorColumnArgs{...} }
type CatalogTableStorageDescriptorColumnArrayInput interface {
	pulumi.Input

	ToCatalogTableStorageDescriptorColumnArrayOutput() CatalogTableStorageDescriptorColumnArrayOutput
	ToCatalogTableStorageDescriptorColumnArrayOutputWithContext(context.Context) CatalogTableStorageDescriptorColumnArrayOutput
}

type CatalogTableStorageDescriptorColumnArray []CatalogTableStorageDescriptorColumnInput

func (CatalogTableStorageDescriptorColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CatalogTableStorageDescriptorColumn)(nil)).Elem()
}

func (i CatalogTableStorageDescriptorColumnArray) ToCatalogTableStorageDescriptorColumnArrayOutput() CatalogTableStorageDescriptorColumnArrayOutput {
	return i.ToCatalogTableStorageDescriptorColumnArrayOutputWithContext(context.Background())
}

func (i CatalogTableStorageDescriptorColumnArray) ToCatalogTableStorageDescriptorColumnArrayOutputWithContext(ctx context.Context) CatalogTableStorageDescriptorColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogTableStorageDescriptorColumnArrayOutput)
}

type CatalogTableStorageDescriptorColumnOutput struct{ *pulumi.OutputState }

func (CatalogTableStorageDescriptorColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogTableStorageDescriptorColumn)(nil)).Elem()
}

func (o CatalogTableStorageDescriptorColumnOutput) ToCatalogTableStorageDescriptorColumnOutput() CatalogTableStorageDescriptorColumnOutput {
	return o
}

func (o CatalogTableStorageDescriptorColumnOutput) ToCatalogTableStorageDescriptorColumnOutputWithContext(ctx context.Context) CatalogTableStorageDescriptorColumnOutput {
	return o
}

func (o CatalogTableStorageDescriptorColumnOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogTableStorageDescriptorColumn) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o CatalogTableStorageDescriptorColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CatalogTableStorageDescriptorColumn) string { return v.Name }).(pulumi.StringOutput)
}

func (o CatalogTableStorageDescriptorColumnOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogTableStorageDescriptorColumn) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CatalogTableStorageDescriptorColumnArrayOutput struct{ *pulumi.OutputState }

func (CatalogTableStorageDescriptorColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CatalogTableStorageDescriptorColumn)(nil)).Elem()
}

func (o CatalogTableStorageDescriptorColumnArrayOutput) ToCatalogTableStorageDescriptorColumnArrayOutput() CatalogTableStorageDescriptorColumnArrayOutput {
	return o
}

func (o CatalogTableStorageDescriptorColumnArrayOutput) ToCatalogTableStorageDescriptorColumnArrayOutputWithContext(ctx context.Context) CatalogTableStorageDescriptorColumnArrayOutput {
	return o
}

func (o CatalogTableStorageDescriptorColumnArrayOutput) Index(i pulumi.IntInput) CatalogTableStorageDescriptorColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CatalogTableStorageDescriptorColumn {
		return vs[0].([]CatalogTableStorageDescriptorColumn)[vs[1].(int)]
	}).(CatalogTableStorageDescriptorColumnOutput)
}

type CatalogTableStorageDescriptorSerDeInfo struct {
	Name                 *string           `pulumi:"name"`
	Parameters           map[string]string `pulumi:"parameters"`
	SerializationLibrary *string           `pulumi:"serializationLibrary"`
}

// CatalogTableStorageDescriptorSerDeInfoInput is an input type that accepts CatalogTableStorageDescriptorSerDeInfoArgs and CatalogTableStorageDescriptorSerDeInfoOutput values.
// You can construct a concrete instance of `CatalogTableStorageDescriptorSerDeInfoInput` via:
//
//          CatalogTableStorageDescriptorSerDeInfoArgs{...}
type CatalogTableStorageDescriptorSerDeInfoInput interface {
	pulumi.Input

	ToCatalogTableStorageDescriptorSerDeInfoOutput() CatalogTableStorageDescriptorSerDeInfoOutput
	ToCatalogTableStorageDescriptorSerDeInfoOutputWithContext(context.Context) CatalogTableStorageDescriptorSerDeInfoOutput
}

type CatalogTableStorageDescriptorSerDeInfoArgs struct {
	Name                 pulumi.StringPtrInput `pulumi:"name"`
	Parameters           pulumi.StringMapInput `pulumi:"parameters"`
	SerializationLibrary pulumi.StringPtrInput `pulumi:"serializationLibrary"`
}

func (CatalogTableStorageDescriptorSerDeInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogTableStorageDescriptorSerDeInfo)(nil)).Elem()
}

func (i CatalogTableStorageDescriptorSerDeInfoArgs) ToCatalogTableStorageDescriptorSerDeInfoOutput() CatalogTableStorageDescriptorSerDeInfoOutput {
	return i.ToCatalogTableStorageDescriptorSerDeInfoOutputWithContext(context.Background())
}

func (i CatalogTableStorageDescriptorSerDeInfoArgs) ToCatalogTableStorageDescriptorSerDeInfoOutputWithContext(ctx context.Context) CatalogTableStorageDescriptorSerDeInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogTableStorageDescriptorSerDeInfoOutput)
}

func (i CatalogTableStorageDescriptorSerDeInfoArgs) ToCatalogTableStorageDescriptorSerDeInfoPtrOutput() CatalogTableStorageDescriptorSerDeInfoPtrOutput {
	return i.ToCatalogTableStorageDescriptorSerDeInfoPtrOutputWithContext(context.Background())
}

func (i CatalogTableStorageDescriptorSerDeInfoArgs) ToCatalogTableStorageDescriptorSerDeInfoPtrOutputWithContext(ctx context.Context) CatalogTableStorageDescriptorSerDeInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogTableStorageDescriptorSerDeInfoOutput).ToCatalogTableStorageDescriptorSerDeInfoPtrOutputWithContext(ctx)
}

// CatalogTableStorageDescriptorSerDeInfoPtrInput is an input type that accepts CatalogTableStorageDescriptorSerDeInfoArgs, CatalogTableStorageDescriptorSerDeInfoPtr and CatalogTableStorageDescriptorSerDeInfoPtrOutput values.
// You can construct a concrete instance of `CatalogTableStorageDescriptorSerDeInfoPtrInput` via:
//
//          CatalogTableStorageDescriptorSerDeInfoArgs{...}
//
//  or:
//
//          nil
type CatalogTableStorageDescriptorSerDeInfoPtrInput interface {
	pulumi.Input

	ToCatalogTableStorageDescriptorSerDeInfoPtrOutput() CatalogTableStorageDescriptorSerDeInfoPtrOutput
	ToCatalogTableStorageDescriptorSerDeInfoPtrOutputWithContext(context.Context) CatalogTableStorageDescriptorSerDeInfoPtrOutput
}

type catalogTableStorageDescriptorSerDeInfoPtrType CatalogTableStorageDescriptorSerDeInfoArgs

func CatalogTableStorageDescriptorSerDeInfoPtr(v *CatalogTableStorageDescriptorSerDeInfoArgs) CatalogTableStorageDescriptorSerDeInfoPtrInput {
	return (*catalogTableStorageDescriptorSerDeInfoPtrType)(v)
}

func (*catalogTableStorageDescriptorSerDeInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CatalogTableStorageDescriptorSerDeInfo)(nil)).Elem()
}

func (i *catalogTableStorageDescriptorSerDeInfoPtrType) ToCatalogTableStorageDescriptorSerDeInfoPtrOutput() CatalogTableStorageDescriptorSerDeInfoPtrOutput {
	return i.ToCatalogTableStorageDescriptorSerDeInfoPtrOutputWithContext(context.Background())
}

func (i *catalogTableStorageDescriptorSerDeInfoPtrType) ToCatalogTableStorageDescriptorSerDeInfoPtrOutputWithContext(ctx context.Context) CatalogTableStorageDescriptorSerDeInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogTableStorageDescriptorSerDeInfoPtrOutput)
}

type CatalogTableStorageDescriptorSerDeInfoOutput struct{ *pulumi.OutputState }

func (CatalogTableStorageDescriptorSerDeInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogTableStorageDescriptorSerDeInfo)(nil)).Elem()
}

func (o CatalogTableStorageDescriptorSerDeInfoOutput) ToCatalogTableStorageDescriptorSerDeInfoOutput() CatalogTableStorageDescriptorSerDeInfoOutput {
	return o
}

func (o CatalogTableStorageDescriptorSerDeInfoOutput) ToCatalogTableStorageDescriptorSerDeInfoOutputWithContext(ctx context.Context) CatalogTableStorageDescriptorSerDeInfoOutput {
	return o
}

func (o CatalogTableStorageDescriptorSerDeInfoOutput) ToCatalogTableStorageDescriptorSerDeInfoPtrOutput() CatalogTableStorageDescriptorSerDeInfoPtrOutput {
	return o.ToCatalogTableStorageDescriptorSerDeInfoPtrOutputWithContext(context.Background())
}

func (o CatalogTableStorageDescriptorSerDeInfoOutput) ToCatalogTableStorageDescriptorSerDeInfoPtrOutputWithContext(ctx context.Context) CatalogTableStorageDescriptorSerDeInfoPtrOutput {
	return o.ApplyT(func(v CatalogTableStorageDescriptorSerDeInfo) *CatalogTableStorageDescriptorSerDeInfo {
		return &v
	}).(CatalogTableStorageDescriptorSerDeInfoPtrOutput)
}
func (o CatalogTableStorageDescriptorSerDeInfoOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogTableStorageDescriptorSerDeInfo) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o CatalogTableStorageDescriptorSerDeInfoOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v CatalogTableStorageDescriptorSerDeInfo) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

func (o CatalogTableStorageDescriptorSerDeInfoOutput) SerializationLibrary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CatalogTableStorageDescriptorSerDeInfo) *string { return v.SerializationLibrary }).(pulumi.StringPtrOutput)
}

type CatalogTableStorageDescriptorSerDeInfoPtrOutput struct{ *pulumi.OutputState }

func (CatalogTableStorageDescriptorSerDeInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CatalogTableStorageDescriptorSerDeInfo)(nil)).Elem()
}

func (o CatalogTableStorageDescriptorSerDeInfoPtrOutput) ToCatalogTableStorageDescriptorSerDeInfoPtrOutput() CatalogTableStorageDescriptorSerDeInfoPtrOutput {
	return o
}

func (o CatalogTableStorageDescriptorSerDeInfoPtrOutput) ToCatalogTableStorageDescriptorSerDeInfoPtrOutputWithContext(ctx context.Context) CatalogTableStorageDescriptorSerDeInfoPtrOutput {
	return o
}

func (o CatalogTableStorageDescriptorSerDeInfoPtrOutput) Elem() CatalogTableStorageDescriptorSerDeInfoOutput {
	return o.ApplyT(func(v *CatalogTableStorageDescriptorSerDeInfo) CatalogTableStorageDescriptorSerDeInfo { return *v }).(CatalogTableStorageDescriptorSerDeInfoOutput)
}

func (o CatalogTableStorageDescriptorSerDeInfoPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CatalogTableStorageDescriptorSerDeInfo) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o CatalogTableStorageDescriptorSerDeInfoPtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CatalogTableStorageDescriptorSerDeInfo) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

func (o CatalogTableStorageDescriptorSerDeInfoPtrOutput) SerializationLibrary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CatalogTableStorageDescriptorSerDeInfo) *string {
		if v == nil {
			return nil
		}
		return v.SerializationLibrary
	}).(pulumi.StringPtrOutput)
}

type CatalogTableStorageDescriptorSkewedInfo struct {
	SkewedColumnNames             []string          `pulumi:"skewedColumnNames"`
	SkewedColumnValueLocationMaps map[string]string `pulumi:"skewedColumnValueLocationMaps"`
	SkewedColumnValues            []string          `pulumi:"skewedColumnValues"`
}

// CatalogTableStorageDescriptorSkewedInfoInput is an input type that accepts CatalogTableStorageDescriptorSkewedInfoArgs and CatalogTableStorageDescriptorSkewedInfoOutput values.
// You can construct a concrete instance of `CatalogTableStorageDescriptorSkewedInfoInput` via:
//
//          CatalogTableStorageDescriptorSkewedInfoArgs{...}
type CatalogTableStorageDescriptorSkewedInfoInput interface {
	pulumi.Input

	ToCatalogTableStorageDescriptorSkewedInfoOutput() CatalogTableStorageDescriptorSkewedInfoOutput
	ToCatalogTableStorageDescriptorSkewedInfoOutputWithContext(context.Context) CatalogTableStorageDescriptorSkewedInfoOutput
}

type CatalogTableStorageDescriptorSkewedInfoArgs struct {
	SkewedColumnNames             pulumi.StringArrayInput `pulumi:"skewedColumnNames"`
	SkewedColumnValueLocationMaps pulumi.StringMapInput   `pulumi:"skewedColumnValueLocationMaps"`
	SkewedColumnValues            pulumi.StringArrayInput `pulumi:"skewedColumnValues"`
}

func (CatalogTableStorageDescriptorSkewedInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogTableStorageDescriptorSkewedInfo)(nil)).Elem()
}

func (i CatalogTableStorageDescriptorSkewedInfoArgs) ToCatalogTableStorageDescriptorSkewedInfoOutput() CatalogTableStorageDescriptorSkewedInfoOutput {
	return i.ToCatalogTableStorageDescriptorSkewedInfoOutputWithContext(context.Background())
}

func (i CatalogTableStorageDescriptorSkewedInfoArgs) ToCatalogTableStorageDescriptorSkewedInfoOutputWithContext(ctx context.Context) CatalogTableStorageDescriptorSkewedInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogTableStorageDescriptorSkewedInfoOutput)
}

func (i CatalogTableStorageDescriptorSkewedInfoArgs) ToCatalogTableStorageDescriptorSkewedInfoPtrOutput() CatalogTableStorageDescriptorSkewedInfoPtrOutput {
	return i.ToCatalogTableStorageDescriptorSkewedInfoPtrOutputWithContext(context.Background())
}

func (i CatalogTableStorageDescriptorSkewedInfoArgs) ToCatalogTableStorageDescriptorSkewedInfoPtrOutputWithContext(ctx context.Context) CatalogTableStorageDescriptorSkewedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogTableStorageDescriptorSkewedInfoOutput).ToCatalogTableStorageDescriptorSkewedInfoPtrOutputWithContext(ctx)
}

// CatalogTableStorageDescriptorSkewedInfoPtrInput is an input type that accepts CatalogTableStorageDescriptorSkewedInfoArgs, CatalogTableStorageDescriptorSkewedInfoPtr and CatalogTableStorageDescriptorSkewedInfoPtrOutput values.
// You can construct a concrete instance of `CatalogTableStorageDescriptorSkewedInfoPtrInput` via:
//
//          CatalogTableStorageDescriptorSkewedInfoArgs{...}
//
//  or:
//
//          nil
type CatalogTableStorageDescriptorSkewedInfoPtrInput interface {
	pulumi.Input

	ToCatalogTableStorageDescriptorSkewedInfoPtrOutput() CatalogTableStorageDescriptorSkewedInfoPtrOutput
	ToCatalogTableStorageDescriptorSkewedInfoPtrOutputWithContext(context.Context) CatalogTableStorageDescriptorSkewedInfoPtrOutput
}

type catalogTableStorageDescriptorSkewedInfoPtrType CatalogTableStorageDescriptorSkewedInfoArgs

func CatalogTableStorageDescriptorSkewedInfoPtr(v *CatalogTableStorageDescriptorSkewedInfoArgs) CatalogTableStorageDescriptorSkewedInfoPtrInput {
	return (*catalogTableStorageDescriptorSkewedInfoPtrType)(v)
}

func (*catalogTableStorageDescriptorSkewedInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CatalogTableStorageDescriptorSkewedInfo)(nil)).Elem()
}

func (i *catalogTableStorageDescriptorSkewedInfoPtrType) ToCatalogTableStorageDescriptorSkewedInfoPtrOutput() CatalogTableStorageDescriptorSkewedInfoPtrOutput {
	return i.ToCatalogTableStorageDescriptorSkewedInfoPtrOutputWithContext(context.Background())
}

func (i *catalogTableStorageDescriptorSkewedInfoPtrType) ToCatalogTableStorageDescriptorSkewedInfoPtrOutputWithContext(ctx context.Context) CatalogTableStorageDescriptorSkewedInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogTableStorageDescriptorSkewedInfoPtrOutput)
}

type CatalogTableStorageDescriptorSkewedInfoOutput struct{ *pulumi.OutputState }

func (CatalogTableStorageDescriptorSkewedInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogTableStorageDescriptorSkewedInfo)(nil)).Elem()
}

func (o CatalogTableStorageDescriptorSkewedInfoOutput) ToCatalogTableStorageDescriptorSkewedInfoOutput() CatalogTableStorageDescriptorSkewedInfoOutput {
	return o
}

func (o CatalogTableStorageDescriptorSkewedInfoOutput) ToCatalogTableStorageDescriptorSkewedInfoOutputWithContext(ctx context.Context) CatalogTableStorageDescriptorSkewedInfoOutput {
	return o
}

func (o CatalogTableStorageDescriptorSkewedInfoOutput) ToCatalogTableStorageDescriptorSkewedInfoPtrOutput() CatalogTableStorageDescriptorSkewedInfoPtrOutput {
	return o.ToCatalogTableStorageDescriptorSkewedInfoPtrOutputWithContext(context.Background())
}

func (o CatalogTableStorageDescriptorSkewedInfoOutput) ToCatalogTableStorageDescriptorSkewedInfoPtrOutputWithContext(ctx context.Context) CatalogTableStorageDescriptorSkewedInfoPtrOutput {
	return o.ApplyT(func(v CatalogTableStorageDescriptorSkewedInfo) *CatalogTableStorageDescriptorSkewedInfo {
		return &v
	}).(CatalogTableStorageDescriptorSkewedInfoPtrOutput)
}
func (o CatalogTableStorageDescriptorSkewedInfoOutput) SkewedColumnNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CatalogTableStorageDescriptorSkewedInfo) []string { return v.SkewedColumnNames }).(pulumi.StringArrayOutput)
}

func (o CatalogTableStorageDescriptorSkewedInfoOutput) SkewedColumnValueLocationMaps() pulumi.StringMapOutput {
	return o.ApplyT(func(v CatalogTableStorageDescriptorSkewedInfo) map[string]string {
		return v.SkewedColumnValueLocationMaps
	}).(pulumi.StringMapOutput)
}

func (o CatalogTableStorageDescriptorSkewedInfoOutput) SkewedColumnValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CatalogTableStorageDescriptorSkewedInfo) []string { return v.SkewedColumnValues }).(pulumi.StringArrayOutput)
}

type CatalogTableStorageDescriptorSkewedInfoPtrOutput struct{ *pulumi.OutputState }

func (CatalogTableStorageDescriptorSkewedInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CatalogTableStorageDescriptorSkewedInfo)(nil)).Elem()
}

func (o CatalogTableStorageDescriptorSkewedInfoPtrOutput) ToCatalogTableStorageDescriptorSkewedInfoPtrOutput() CatalogTableStorageDescriptorSkewedInfoPtrOutput {
	return o
}

func (o CatalogTableStorageDescriptorSkewedInfoPtrOutput) ToCatalogTableStorageDescriptorSkewedInfoPtrOutputWithContext(ctx context.Context) CatalogTableStorageDescriptorSkewedInfoPtrOutput {
	return o
}

func (o CatalogTableStorageDescriptorSkewedInfoPtrOutput) Elem() CatalogTableStorageDescriptorSkewedInfoOutput {
	return o.ApplyT(func(v *CatalogTableStorageDescriptorSkewedInfo) CatalogTableStorageDescriptorSkewedInfo { return *v }).(CatalogTableStorageDescriptorSkewedInfoOutput)
}

func (o CatalogTableStorageDescriptorSkewedInfoPtrOutput) SkewedColumnNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CatalogTableStorageDescriptorSkewedInfo) []string {
		if v == nil {
			return nil
		}
		return v.SkewedColumnNames
	}).(pulumi.StringArrayOutput)
}

func (o CatalogTableStorageDescriptorSkewedInfoPtrOutput) SkewedColumnValueLocationMaps() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CatalogTableStorageDescriptorSkewedInfo) map[string]string {
		if v == nil {
			return nil
		}
		return v.SkewedColumnValueLocationMaps
	}).(pulumi.StringMapOutput)
}

func (o CatalogTableStorageDescriptorSkewedInfoPtrOutput) SkewedColumnValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CatalogTableStorageDescriptorSkewedInfo) []string {
		if v == nil {
			return nil
		}
		return v.SkewedColumnValues
	}).(pulumi.StringArrayOutput)
}

type CatalogTableStorageDescriptorSortColumn struct {
	Column    string `pulumi:"column"`
	SortOrder int    `pulumi:"sortOrder"`
}

// CatalogTableStorageDescriptorSortColumnInput is an input type that accepts CatalogTableStorageDescriptorSortColumnArgs and CatalogTableStorageDescriptorSortColumnOutput values.
// You can construct a concrete instance of `CatalogTableStorageDescriptorSortColumnInput` via:
//
//          CatalogTableStorageDescriptorSortColumnArgs{...}
type CatalogTableStorageDescriptorSortColumnInput interface {
	pulumi.Input

	ToCatalogTableStorageDescriptorSortColumnOutput() CatalogTableStorageDescriptorSortColumnOutput
	ToCatalogTableStorageDescriptorSortColumnOutputWithContext(context.Context) CatalogTableStorageDescriptorSortColumnOutput
}

type CatalogTableStorageDescriptorSortColumnArgs struct {
	Column    pulumi.StringInput `pulumi:"column"`
	SortOrder pulumi.IntInput    `pulumi:"sortOrder"`
}

func (CatalogTableStorageDescriptorSortColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogTableStorageDescriptorSortColumn)(nil)).Elem()
}

func (i CatalogTableStorageDescriptorSortColumnArgs) ToCatalogTableStorageDescriptorSortColumnOutput() CatalogTableStorageDescriptorSortColumnOutput {
	return i.ToCatalogTableStorageDescriptorSortColumnOutputWithContext(context.Background())
}

func (i CatalogTableStorageDescriptorSortColumnArgs) ToCatalogTableStorageDescriptorSortColumnOutputWithContext(ctx context.Context) CatalogTableStorageDescriptorSortColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogTableStorageDescriptorSortColumnOutput)
}

// CatalogTableStorageDescriptorSortColumnArrayInput is an input type that accepts CatalogTableStorageDescriptorSortColumnArray and CatalogTableStorageDescriptorSortColumnArrayOutput values.
// You can construct a concrete instance of `CatalogTableStorageDescriptorSortColumnArrayInput` via:
//
//          CatalogTableStorageDescriptorSortColumnArray{ CatalogTableStorageDescriptorSortColumnArgs{...} }
type CatalogTableStorageDescriptorSortColumnArrayInput interface {
	pulumi.Input

	ToCatalogTableStorageDescriptorSortColumnArrayOutput() CatalogTableStorageDescriptorSortColumnArrayOutput
	ToCatalogTableStorageDescriptorSortColumnArrayOutputWithContext(context.Context) CatalogTableStorageDescriptorSortColumnArrayOutput
}

type CatalogTableStorageDescriptorSortColumnArray []CatalogTableStorageDescriptorSortColumnInput

func (CatalogTableStorageDescriptorSortColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CatalogTableStorageDescriptorSortColumn)(nil)).Elem()
}

func (i CatalogTableStorageDescriptorSortColumnArray) ToCatalogTableStorageDescriptorSortColumnArrayOutput() CatalogTableStorageDescriptorSortColumnArrayOutput {
	return i.ToCatalogTableStorageDescriptorSortColumnArrayOutputWithContext(context.Background())
}

func (i CatalogTableStorageDescriptorSortColumnArray) ToCatalogTableStorageDescriptorSortColumnArrayOutputWithContext(ctx context.Context) CatalogTableStorageDescriptorSortColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogTableStorageDescriptorSortColumnArrayOutput)
}

type CatalogTableStorageDescriptorSortColumnOutput struct{ *pulumi.OutputState }

func (CatalogTableStorageDescriptorSortColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogTableStorageDescriptorSortColumn)(nil)).Elem()
}

func (o CatalogTableStorageDescriptorSortColumnOutput) ToCatalogTableStorageDescriptorSortColumnOutput() CatalogTableStorageDescriptorSortColumnOutput {
	return o
}

func (o CatalogTableStorageDescriptorSortColumnOutput) ToCatalogTableStorageDescriptorSortColumnOutputWithContext(ctx context.Context) CatalogTableStorageDescriptorSortColumnOutput {
	return o
}

func (o CatalogTableStorageDescriptorSortColumnOutput) Column() pulumi.StringOutput {
	return o.ApplyT(func(v CatalogTableStorageDescriptorSortColumn) string { return v.Column }).(pulumi.StringOutput)
}

func (o CatalogTableStorageDescriptorSortColumnOutput) SortOrder() pulumi.IntOutput {
	return o.ApplyT(func(v CatalogTableStorageDescriptorSortColumn) int { return v.SortOrder }).(pulumi.IntOutput)
}

type CatalogTableStorageDescriptorSortColumnArrayOutput struct{ *pulumi.OutputState }

func (CatalogTableStorageDescriptorSortColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CatalogTableStorageDescriptorSortColumn)(nil)).Elem()
}

func (o CatalogTableStorageDescriptorSortColumnArrayOutput) ToCatalogTableStorageDescriptorSortColumnArrayOutput() CatalogTableStorageDescriptorSortColumnArrayOutput {
	return o
}

func (o CatalogTableStorageDescriptorSortColumnArrayOutput) ToCatalogTableStorageDescriptorSortColumnArrayOutputWithContext(ctx context.Context) CatalogTableStorageDescriptorSortColumnArrayOutput {
	return o
}

func (o CatalogTableStorageDescriptorSortColumnArrayOutput) Index(i pulumi.IntInput) CatalogTableStorageDescriptorSortColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CatalogTableStorageDescriptorSortColumn {
		return vs[0].([]CatalogTableStorageDescriptorSortColumn)[vs[1].(int)]
	}).(CatalogTableStorageDescriptorSortColumnOutput)
}

type ClassifierCsvClassifier struct {
	AllowSingleColumn    *bool    `pulumi:"allowSingleColumn"`
	ContainsHeader       *string  `pulumi:"containsHeader"`
	Delimiter            *string  `pulumi:"delimiter"`
	DisableValueTrimming *bool    `pulumi:"disableValueTrimming"`
	Headers              []string `pulumi:"headers"`
	QuoteSymbol          *string  `pulumi:"quoteSymbol"`
}

// ClassifierCsvClassifierInput is an input type that accepts ClassifierCsvClassifierArgs and ClassifierCsvClassifierOutput values.
// You can construct a concrete instance of `ClassifierCsvClassifierInput` via:
//
//          ClassifierCsvClassifierArgs{...}
type ClassifierCsvClassifierInput interface {
	pulumi.Input

	ToClassifierCsvClassifierOutput() ClassifierCsvClassifierOutput
	ToClassifierCsvClassifierOutputWithContext(context.Context) ClassifierCsvClassifierOutput
}

type ClassifierCsvClassifierArgs struct {
	AllowSingleColumn    pulumi.BoolPtrInput     `pulumi:"allowSingleColumn"`
	ContainsHeader       pulumi.StringPtrInput   `pulumi:"containsHeader"`
	Delimiter            pulumi.StringPtrInput   `pulumi:"delimiter"`
	DisableValueTrimming pulumi.BoolPtrInput     `pulumi:"disableValueTrimming"`
	Headers              pulumi.StringArrayInput `pulumi:"headers"`
	QuoteSymbol          pulumi.StringPtrInput   `pulumi:"quoteSymbol"`
}

func (ClassifierCsvClassifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClassifierCsvClassifier)(nil)).Elem()
}

func (i ClassifierCsvClassifierArgs) ToClassifierCsvClassifierOutput() ClassifierCsvClassifierOutput {
	return i.ToClassifierCsvClassifierOutputWithContext(context.Background())
}

func (i ClassifierCsvClassifierArgs) ToClassifierCsvClassifierOutputWithContext(ctx context.Context) ClassifierCsvClassifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClassifierCsvClassifierOutput)
}

func (i ClassifierCsvClassifierArgs) ToClassifierCsvClassifierPtrOutput() ClassifierCsvClassifierPtrOutput {
	return i.ToClassifierCsvClassifierPtrOutputWithContext(context.Background())
}

func (i ClassifierCsvClassifierArgs) ToClassifierCsvClassifierPtrOutputWithContext(ctx context.Context) ClassifierCsvClassifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClassifierCsvClassifierOutput).ToClassifierCsvClassifierPtrOutputWithContext(ctx)
}

// ClassifierCsvClassifierPtrInput is an input type that accepts ClassifierCsvClassifierArgs, ClassifierCsvClassifierPtr and ClassifierCsvClassifierPtrOutput values.
// You can construct a concrete instance of `ClassifierCsvClassifierPtrInput` via:
//
//          ClassifierCsvClassifierArgs{...}
//
//  or:
//
//          nil
type ClassifierCsvClassifierPtrInput interface {
	pulumi.Input

	ToClassifierCsvClassifierPtrOutput() ClassifierCsvClassifierPtrOutput
	ToClassifierCsvClassifierPtrOutputWithContext(context.Context) ClassifierCsvClassifierPtrOutput
}

type classifierCsvClassifierPtrType ClassifierCsvClassifierArgs

func ClassifierCsvClassifierPtr(v *ClassifierCsvClassifierArgs) ClassifierCsvClassifierPtrInput {
	return (*classifierCsvClassifierPtrType)(v)
}

func (*classifierCsvClassifierPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClassifierCsvClassifier)(nil)).Elem()
}

func (i *classifierCsvClassifierPtrType) ToClassifierCsvClassifierPtrOutput() ClassifierCsvClassifierPtrOutput {
	return i.ToClassifierCsvClassifierPtrOutputWithContext(context.Background())
}

func (i *classifierCsvClassifierPtrType) ToClassifierCsvClassifierPtrOutputWithContext(ctx context.Context) ClassifierCsvClassifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClassifierCsvClassifierPtrOutput)
}

type ClassifierCsvClassifierOutput struct{ *pulumi.OutputState }

func (ClassifierCsvClassifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClassifierCsvClassifier)(nil)).Elem()
}

func (o ClassifierCsvClassifierOutput) ToClassifierCsvClassifierOutput() ClassifierCsvClassifierOutput {
	return o
}

func (o ClassifierCsvClassifierOutput) ToClassifierCsvClassifierOutputWithContext(ctx context.Context) ClassifierCsvClassifierOutput {
	return o
}

func (o ClassifierCsvClassifierOutput) ToClassifierCsvClassifierPtrOutput() ClassifierCsvClassifierPtrOutput {
	return o.ToClassifierCsvClassifierPtrOutputWithContext(context.Background())
}

func (o ClassifierCsvClassifierOutput) ToClassifierCsvClassifierPtrOutputWithContext(ctx context.Context) ClassifierCsvClassifierPtrOutput {
	return o.ApplyT(func(v ClassifierCsvClassifier) *ClassifierCsvClassifier {
		return &v
	}).(ClassifierCsvClassifierPtrOutput)
}
func (o ClassifierCsvClassifierOutput) AllowSingleColumn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClassifierCsvClassifier) *bool { return v.AllowSingleColumn }).(pulumi.BoolPtrOutput)
}

func (o ClassifierCsvClassifierOutput) ContainsHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClassifierCsvClassifier) *string { return v.ContainsHeader }).(pulumi.StringPtrOutput)
}

func (o ClassifierCsvClassifierOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClassifierCsvClassifier) *string { return v.Delimiter }).(pulumi.StringPtrOutput)
}

func (o ClassifierCsvClassifierOutput) DisableValueTrimming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClassifierCsvClassifier) *bool { return v.DisableValueTrimming }).(pulumi.BoolPtrOutput)
}

func (o ClassifierCsvClassifierOutput) Headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClassifierCsvClassifier) []string { return v.Headers }).(pulumi.StringArrayOutput)
}

func (o ClassifierCsvClassifierOutput) QuoteSymbol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClassifierCsvClassifier) *string { return v.QuoteSymbol }).(pulumi.StringPtrOutput)
}

type ClassifierCsvClassifierPtrOutput struct{ *pulumi.OutputState }

func (ClassifierCsvClassifierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClassifierCsvClassifier)(nil)).Elem()
}

func (o ClassifierCsvClassifierPtrOutput) ToClassifierCsvClassifierPtrOutput() ClassifierCsvClassifierPtrOutput {
	return o
}

func (o ClassifierCsvClassifierPtrOutput) ToClassifierCsvClassifierPtrOutputWithContext(ctx context.Context) ClassifierCsvClassifierPtrOutput {
	return o
}

func (o ClassifierCsvClassifierPtrOutput) Elem() ClassifierCsvClassifierOutput {
	return o.ApplyT(func(v *ClassifierCsvClassifier) ClassifierCsvClassifier { return *v }).(ClassifierCsvClassifierOutput)
}

func (o ClassifierCsvClassifierPtrOutput) AllowSingleColumn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClassifierCsvClassifier) *bool {
		if v == nil {
			return nil
		}
		return v.AllowSingleColumn
	}).(pulumi.BoolPtrOutput)
}

func (o ClassifierCsvClassifierPtrOutput) ContainsHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClassifierCsvClassifier) *string {
		if v == nil {
			return nil
		}
		return v.ContainsHeader
	}).(pulumi.StringPtrOutput)
}

func (o ClassifierCsvClassifierPtrOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClassifierCsvClassifier) *string {
		if v == nil {
			return nil
		}
		return v.Delimiter
	}).(pulumi.StringPtrOutput)
}

func (o ClassifierCsvClassifierPtrOutput) DisableValueTrimming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClassifierCsvClassifier) *bool {
		if v == nil {
			return nil
		}
		return v.DisableValueTrimming
	}).(pulumi.BoolPtrOutput)
}

func (o ClassifierCsvClassifierPtrOutput) Headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClassifierCsvClassifier) []string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringArrayOutput)
}

func (o ClassifierCsvClassifierPtrOutput) QuoteSymbol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClassifierCsvClassifier) *string {
		if v == nil {
			return nil
		}
		return v.QuoteSymbol
	}).(pulumi.StringPtrOutput)
}

type ClassifierGrokClassifier struct {
	Classification string  `pulumi:"classification"`
	CustomPatterns *string `pulumi:"customPatterns"`
	GrokPattern    string  `pulumi:"grokPattern"`
}

// ClassifierGrokClassifierInput is an input type that accepts ClassifierGrokClassifierArgs and ClassifierGrokClassifierOutput values.
// You can construct a concrete instance of `ClassifierGrokClassifierInput` via:
//
//          ClassifierGrokClassifierArgs{...}
type ClassifierGrokClassifierInput interface {
	pulumi.Input

	ToClassifierGrokClassifierOutput() ClassifierGrokClassifierOutput
	ToClassifierGrokClassifierOutputWithContext(context.Context) ClassifierGrokClassifierOutput
}

type ClassifierGrokClassifierArgs struct {
	Classification pulumi.StringInput    `pulumi:"classification"`
	CustomPatterns pulumi.StringPtrInput `pulumi:"customPatterns"`
	GrokPattern    pulumi.StringInput    `pulumi:"grokPattern"`
}

func (ClassifierGrokClassifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClassifierGrokClassifier)(nil)).Elem()
}

func (i ClassifierGrokClassifierArgs) ToClassifierGrokClassifierOutput() ClassifierGrokClassifierOutput {
	return i.ToClassifierGrokClassifierOutputWithContext(context.Background())
}

func (i ClassifierGrokClassifierArgs) ToClassifierGrokClassifierOutputWithContext(ctx context.Context) ClassifierGrokClassifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClassifierGrokClassifierOutput)
}

func (i ClassifierGrokClassifierArgs) ToClassifierGrokClassifierPtrOutput() ClassifierGrokClassifierPtrOutput {
	return i.ToClassifierGrokClassifierPtrOutputWithContext(context.Background())
}

func (i ClassifierGrokClassifierArgs) ToClassifierGrokClassifierPtrOutputWithContext(ctx context.Context) ClassifierGrokClassifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClassifierGrokClassifierOutput).ToClassifierGrokClassifierPtrOutputWithContext(ctx)
}

// ClassifierGrokClassifierPtrInput is an input type that accepts ClassifierGrokClassifierArgs, ClassifierGrokClassifierPtr and ClassifierGrokClassifierPtrOutput values.
// You can construct a concrete instance of `ClassifierGrokClassifierPtrInput` via:
//
//          ClassifierGrokClassifierArgs{...}
//
//  or:
//
//          nil
type ClassifierGrokClassifierPtrInput interface {
	pulumi.Input

	ToClassifierGrokClassifierPtrOutput() ClassifierGrokClassifierPtrOutput
	ToClassifierGrokClassifierPtrOutputWithContext(context.Context) ClassifierGrokClassifierPtrOutput
}

type classifierGrokClassifierPtrType ClassifierGrokClassifierArgs

func ClassifierGrokClassifierPtr(v *ClassifierGrokClassifierArgs) ClassifierGrokClassifierPtrInput {
	return (*classifierGrokClassifierPtrType)(v)
}

func (*classifierGrokClassifierPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClassifierGrokClassifier)(nil)).Elem()
}

func (i *classifierGrokClassifierPtrType) ToClassifierGrokClassifierPtrOutput() ClassifierGrokClassifierPtrOutput {
	return i.ToClassifierGrokClassifierPtrOutputWithContext(context.Background())
}

func (i *classifierGrokClassifierPtrType) ToClassifierGrokClassifierPtrOutputWithContext(ctx context.Context) ClassifierGrokClassifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClassifierGrokClassifierPtrOutput)
}

type ClassifierGrokClassifierOutput struct{ *pulumi.OutputState }

func (ClassifierGrokClassifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClassifierGrokClassifier)(nil)).Elem()
}

func (o ClassifierGrokClassifierOutput) ToClassifierGrokClassifierOutput() ClassifierGrokClassifierOutput {
	return o
}

func (o ClassifierGrokClassifierOutput) ToClassifierGrokClassifierOutputWithContext(ctx context.Context) ClassifierGrokClassifierOutput {
	return o
}

func (o ClassifierGrokClassifierOutput) ToClassifierGrokClassifierPtrOutput() ClassifierGrokClassifierPtrOutput {
	return o.ToClassifierGrokClassifierPtrOutputWithContext(context.Background())
}

func (o ClassifierGrokClassifierOutput) ToClassifierGrokClassifierPtrOutputWithContext(ctx context.Context) ClassifierGrokClassifierPtrOutput {
	return o.ApplyT(func(v ClassifierGrokClassifier) *ClassifierGrokClassifier {
		return &v
	}).(ClassifierGrokClassifierPtrOutput)
}
func (o ClassifierGrokClassifierOutput) Classification() pulumi.StringOutput {
	return o.ApplyT(func(v ClassifierGrokClassifier) string { return v.Classification }).(pulumi.StringOutput)
}

func (o ClassifierGrokClassifierOutput) CustomPatterns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClassifierGrokClassifier) *string { return v.CustomPatterns }).(pulumi.StringPtrOutput)
}

func (o ClassifierGrokClassifierOutput) GrokPattern() pulumi.StringOutput {
	return o.ApplyT(func(v ClassifierGrokClassifier) string { return v.GrokPattern }).(pulumi.StringOutput)
}

type ClassifierGrokClassifierPtrOutput struct{ *pulumi.OutputState }

func (ClassifierGrokClassifierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClassifierGrokClassifier)(nil)).Elem()
}

func (o ClassifierGrokClassifierPtrOutput) ToClassifierGrokClassifierPtrOutput() ClassifierGrokClassifierPtrOutput {
	return o
}

func (o ClassifierGrokClassifierPtrOutput) ToClassifierGrokClassifierPtrOutputWithContext(ctx context.Context) ClassifierGrokClassifierPtrOutput {
	return o
}

func (o ClassifierGrokClassifierPtrOutput) Elem() ClassifierGrokClassifierOutput {
	return o.ApplyT(func(v *ClassifierGrokClassifier) ClassifierGrokClassifier { return *v }).(ClassifierGrokClassifierOutput)
}

func (o ClassifierGrokClassifierPtrOutput) Classification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClassifierGrokClassifier) *string {
		if v == nil {
			return nil
		}
		return &v.Classification
	}).(pulumi.StringPtrOutput)
}

func (o ClassifierGrokClassifierPtrOutput) CustomPatterns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClassifierGrokClassifier) *string {
		if v == nil {
			return nil
		}
		return v.CustomPatterns
	}).(pulumi.StringPtrOutput)
}

func (o ClassifierGrokClassifierPtrOutput) GrokPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClassifierGrokClassifier) *string {
		if v == nil {
			return nil
		}
		return &v.GrokPattern
	}).(pulumi.StringPtrOutput)
}

type ClassifierJsonClassifier struct {
	JsonPath string `pulumi:"jsonPath"`
}

// ClassifierJsonClassifierInput is an input type that accepts ClassifierJsonClassifierArgs and ClassifierJsonClassifierOutput values.
// You can construct a concrete instance of `ClassifierJsonClassifierInput` via:
//
//          ClassifierJsonClassifierArgs{...}
type ClassifierJsonClassifierInput interface {
	pulumi.Input

	ToClassifierJsonClassifierOutput() ClassifierJsonClassifierOutput
	ToClassifierJsonClassifierOutputWithContext(context.Context) ClassifierJsonClassifierOutput
}

type ClassifierJsonClassifierArgs struct {
	JsonPath pulumi.StringInput `pulumi:"jsonPath"`
}

func (ClassifierJsonClassifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClassifierJsonClassifier)(nil)).Elem()
}

func (i ClassifierJsonClassifierArgs) ToClassifierJsonClassifierOutput() ClassifierJsonClassifierOutput {
	return i.ToClassifierJsonClassifierOutputWithContext(context.Background())
}

func (i ClassifierJsonClassifierArgs) ToClassifierJsonClassifierOutputWithContext(ctx context.Context) ClassifierJsonClassifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClassifierJsonClassifierOutput)
}

func (i ClassifierJsonClassifierArgs) ToClassifierJsonClassifierPtrOutput() ClassifierJsonClassifierPtrOutput {
	return i.ToClassifierJsonClassifierPtrOutputWithContext(context.Background())
}

func (i ClassifierJsonClassifierArgs) ToClassifierJsonClassifierPtrOutputWithContext(ctx context.Context) ClassifierJsonClassifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClassifierJsonClassifierOutput).ToClassifierJsonClassifierPtrOutputWithContext(ctx)
}

// ClassifierJsonClassifierPtrInput is an input type that accepts ClassifierJsonClassifierArgs, ClassifierJsonClassifierPtr and ClassifierJsonClassifierPtrOutput values.
// You can construct a concrete instance of `ClassifierJsonClassifierPtrInput` via:
//
//          ClassifierJsonClassifierArgs{...}
//
//  or:
//
//          nil
type ClassifierJsonClassifierPtrInput interface {
	pulumi.Input

	ToClassifierJsonClassifierPtrOutput() ClassifierJsonClassifierPtrOutput
	ToClassifierJsonClassifierPtrOutputWithContext(context.Context) ClassifierJsonClassifierPtrOutput
}

type classifierJsonClassifierPtrType ClassifierJsonClassifierArgs

func ClassifierJsonClassifierPtr(v *ClassifierJsonClassifierArgs) ClassifierJsonClassifierPtrInput {
	return (*classifierJsonClassifierPtrType)(v)
}

func (*classifierJsonClassifierPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClassifierJsonClassifier)(nil)).Elem()
}

func (i *classifierJsonClassifierPtrType) ToClassifierJsonClassifierPtrOutput() ClassifierJsonClassifierPtrOutput {
	return i.ToClassifierJsonClassifierPtrOutputWithContext(context.Background())
}

func (i *classifierJsonClassifierPtrType) ToClassifierJsonClassifierPtrOutputWithContext(ctx context.Context) ClassifierJsonClassifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClassifierJsonClassifierPtrOutput)
}

type ClassifierJsonClassifierOutput struct{ *pulumi.OutputState }

func (ClassifierJsonClassifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClassifierJsonClassifier)(nil)).Elem()
}

func (o ClassifierJsonClassifierOutput) ToClassifierJsonClassifierOutput() ClassifierJsonClassifierOutput {
	return o
}

func (o ClassifierJsonClassifierOutput) ToClassifierJsonClassifierOutputWithContext(ctx context.Context) ClassifierJsonClassifierOutput {
	return o
}

func (o ClassifierJsonClassifierOutput) ToClassifierJsonClassifierPtrOutput() ClassifierJsonClassifierPtrOutput {
	return o.ToClassifierJsonClassifierPtrOutputWithContext(context.Background())
}

func (o ClassifierJsonClassifierOutput) ToClassifierJsonClassifierPtrOutputWithContext(ctx context.Context) ClassifierJsonClassifierPtrOutput {
	return o.ApplyT(func(v ClassifierJsonClassifier) *ClassifierJsonClassifier {
		return &v
	}).(ClassifierJsonClassifierPtrOutput)
}
func (o ClassifierJsonClassifierOutput) JsonPath() pulumi.StringOutput {
	return o.ApplyT(func(v ClassifierJsonClassifier) string { return v.JsonPath }).(pulumi.StringOutput)
}

type ClassifierJsonClassifierPtrOutput struct{ *pulumi.OutputState }

func (ClassifierJsonClassifierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClassifierJsonClassifier)(nil)).Elem()
}

func (o ClassifierJsonClassifierPtrOutput) ToClassifierJsonClassifierPtrOutput() ClassifierJsonClassifierPtrOutput {
	return o
}

func (o ClassifierJsonClassifierPtrOutput) ToClassifierJsonClassifierPtrOutputWithContext(ctx context.Context) ClassifierJsonClassifierPtrOutput {
	return o
}

func (o ClassifierJsonClassifierPtrOutput) Elem() ClassifierJsonClassifierOutput {
	return o.ApplyT(func(v *ClassifierJsonClassifier) ClassifierJsonClassifier { return *v }).(ClassifierJsonClassifierOutput)
}

func (o ClassifierJsonClassifierPtrOutput) JsonPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClassifierJsonClassifier) *string {
		if v == nil {
			return nil
		}
		return &v.JsonPath
	}).(pulumi.StringPtrOutput)
}

type ClassifierXmlClassifier struct {
	Classification string `pulumi:"classification"`
	RowTag         string `pulumi:"rowTag"`
}

// ClassifierXmlClassifierInput is an input type that accepts ClassifierXmlClassifierArgs and ClassifierXmlClassifierOutput values.
// You can construct a concrete instance of `ClassifierXmlClassifierInput` via:
//
//          ClassifierXmlClassifierArgs{...}
type ClassifierXmlClassifierInput interface {
	pulumi.Input

	ToClassifierXmlClassifierOutput() ClassifierXmlClassifierOutput
	ToClassifierXmlClassifierOutputWithContext(context.Context) ClassifierXmlClassifierOutput
}

type ClassifierXmlClassifierArgs struct {
	Classification pulumi.StringInput `pulumi:"classification"`
	RowTag         pulumi.StringInput `pulumi:"rowTag"`
}

func (ClassifierXmlClassifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClassifierXmlClassifier)(nil)).Elem()
}

func (i ClassifierXmlClassifierArgs) ToClassifierXmlClassifierOutput() ClassifierXmlClassifierOutput {
	return i.ToClassifierXmlClassifierOutputWithContext(context.Background())
}

func (i ClassifierXmlClassifierArgs) ToClassifierXmlClassifierOutputWithContext(ctx context.Context) ClassifierXmlClassifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClassifierXmlClassifierOutput)
}

func (i ClassifierXmlClassifierArgs) ToClassifierXmlClassifierPtrOutput() ClassifierXmlClassifierPtrOutput {
	return i.ToClassifierXmlClassifierPtrOutputWithContext(context.Background())
}

func (i ClassifierXmlClassifierArgs) ToClassifierXmlClassifierPtrOutputWithContext(ctx context.Context) ClassifierXmlClassifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClassifierXmlClassifierOutput).ToClassifierXmlClassifierPtrOutputWithContext(ctx)
}

// ClassifierXmlClassifierPtrInput is an input type that accepts ClassifierXmlClassifierArgs, ClassifierXmlClassifierPtr and ClassifierXmlClassifierPtrOutput values.
// You can construct a concrete instance of `ClassifierXmlClassifierPtrInput` via:
//
//          ClassifierXmlClassifierArgs{...}
//
//  or:
//
//          nil
type ClassifierXmlClassifierPtrInput interface {
	pulumi.Input

	ToClassifierXmlClassifierPtrOutput() ClassifierXmlClassifierPtrOutput
	ToClassifierXmlClassifierPtrOutputWithContext(context.Context) ClassifierXmlClassifierPtrOutput
}

type classifierXmlClassifierPtrType ClassifierXmlClassifierArgs

func ClassifierXmlClassifierPtr(v *ClassifierXmlClassifierArgs) ClassifierXmlClassifierPtrInput {
	return (*classifierXmlClassifierPtrType)(v)
}

func (*classifierXmlClassifierPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClassifierXmlClassifier)(nil)).Elem()
}

func (i *classifierXmlClassifierPtrType) ToClassifierXmlClassifierPtrOutput() ClassifierXmlClassifierPtrOutput {
	return i.ToClassifierXmlClassifierPtrOutputWithContext(context.Background())
}

func (i *classifierXmlClassifierPtrType) ToClassifierXmlClassifierPtrOutputWithContext(ctx context.Context) ClassifierXmlClassifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClassifierXmlClassifierPtrOutput)
}

type ClassifierXmlClassifierOutput struct{ *pulumi.OutputState }

func (ClassifierXmlClassifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClassifierXmlClassifier)(nil)).Elem()
}

func (o ClassifierXmlClassifierOutput) ToClassifierXmlClassifierOutput() ClassifierXmlClassifierOutput {
	return o
}

func (o ClassifierXmlClassifierOutput) ToClassifierXmlClassifierOutputWithContext(ctx context.Context) ClassifierXmlClassifierOutput {
	return o
}

func (o ClassifierXmlClassifierOutput) ToClassifierXmlClassifierPtrOutput() ClassifierXmlClassifierPtrOutput {
	return o.ToClassifierXmlClassifierPtrOutputWithContext(context.Background())
}

func (o ClassifierXmlClassifierOutput) ToClassifierXmlClassifierPtrOutputWithContext(ctx context.Context) ClassifierXmlClassifierPtrOutput {
	return o.ApplyT(func(v ClassifierXmlClassifier) *ClassifierXmlClassifier {
		return &v
	}).(ClassifierXmlClassifierPtrOutput)
}
func (o ClassifierXmlClassifierOutput) Classification() pulumi.StringOutput {
	return o.ApplyT(func(v ClassifierXmlClassifier) string { return v.Classification }).(pulumi.StringOutput)
}

func (o ClassifierXmlClassifierOutput) RowTag() pulumi.StringOutput {
	return o.ApplyT(func(v ClassifierXmlClassifier) string { return v.RowTag }).(pulumi.StringOutput)
}

type ClassifierXmlClassifierPtrOutput struct{ *pulumi.OutputState }

func (ClassifierXmlClassifierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClassifierXmlClassifier)(nil)).Elem()
}

func (o ClassifierXmlClassifierPtrOutput) ToClassifierXmlClassifierPtrOutput() ClassifierXmlClassifierPtrOutput {
	return o
}

func (o ClassifierXmlClassifierPtrOutput) ToClassifierXmlClassifierPtrOutputWithContext(ctx context.Context) ClassifierXmlClassifierPtrOutput {
	return o
}

func (o ClassifierXmlClassifierPtrOutput) Elem() ClassifierXmlClassifierOutput {
	return o.ApplyT(func(v *ClassifierXmlClassifier) ClassifierXmlClassifier { return *v }).(ClassifierXmlClassifierOutput)
}

func (o ClassifierXmlClassifierPtrOutput) Classification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClassifierXmlClassifier) *string {
		if v == nil {
			return nil
		}
		return &v.Classification
	}).(pulumi.StringPtrOutput)
}

func (o ClassifierXmlClassifierPtrOutput) RowTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClassifierXmlClassifier) *string {
		if v == nil {
			return nil
		}
		return &v.RowTag
	}).(pulumi.StringPtrOutput)
}

type ConnectionPhysicalConnectionRequirements struct {
	AvailabilityZone     *string  `pulumi:"availabilityZone"`
	SecurityGroupIdLists []string `pulumi:"securityGroupIdLists"`
	SubnetId             *string  `pulumi:"subnetId"`
}

// ConnectionPhysicalConnectionRequirementsInput is an input type that accepts ConnectionPhysicalConnectionRequirementsArgs and ConnectionPhysicalConnectionRequirementsOutput values.
// You can construct a concrete instance of `ConnectionPhysicalConnectionRequirementsInput` via:
//
//          ConnectionPhysicalConnectionRequirementsArgs{...}
type ConnectionPhysicalConnectionRequirementsInput interface {
	pulumi.Input

	ToConnectionPhysicalConnectionRequirementsOutput() ConnectionPhysicalConnectionRequirementsOutput
	ToConnectionPhysicalConnectionRequirementsOutputWithContext(context.Context) ConnectionPhysicalConnectionRequirementsOutput
}

type ConnectionPhysicalConnectionRequirementsArgs struct {
	AvailabilityZone     pulumi.StringPtrInput   `pulumi:"availabilityZone"`
	SecurityGroupIdLists pulumi.StringArrayInput `pulumi:"securityGroupIdLists"`
	SubnetId             pulumi.StringPtrInput   `pulumi:"subnetId"`
}

func (ConnectionPhysicalConnectionRequirementsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionPhysicalConnectionRequirements)(nil)).Elem()
}

func (i ConnectionPhysicalConnectionRequirementsArgs) ToConnectionPhysicalConnectionRequirementsOutput() ConnectionPhysicalConnectionRequirementsOutput {
	return i.ToConnectionPhysicalConnectionRequirementsOutputWithContext(context.Background())
}

func (i ConnectionPhysicalConnectionRequirementsArgs) ToConnectionPhysicalConnectionRequirementsOutputWithContext(ctx context.Context) ConnectionPhysicalConnectionRequirementsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionPhysicalConnectionRequirementsOutput)
}

func (i ConnectionPhysicalConnectionRequirementsArgs) ToConnectionPhysicalConnectionRequirementsPtrOutput() ConnectionPhysicalConnectionRequirementsPtrOutput {
	return i.ToConnectionPhysicalConnectionRequirementsPtrOutputWithContext(context.Background())
}

func (i ConnectionPhysicalConnectionRequirementsArgs) ToConnectionPhysicalConnectionRequirementsPtrOutputWithContext(ctx context.Context) ConnectionPhysicalConnectionRequirementsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionPhysicalConnectionRequirementsOutput).ToConnectionPhysicalConnectionRequirementsPtrOutputWithContext(ctx)
}

// ConnectionPhysicalConnectionRequirementsPtrInput is an input type that accepts ConnectionPhysicalConnectionRequirementsArgs, ConnectionPhysicalConnectionRequirementsPtr and ConnectionPhysicalConnectionRequirementsPtrOutput values.
// You can construct a concrete instance of `ConnectionPhysicalConnectionRequirementsPtrInput` via:
//
//          ConnectionPhysicalConnectionRequirementsArgs{...}
//
//  or:
//
//          nil
type ConnectionPhysicalConnectionRequirementsPtrInput interface {
	pulumi.Input

	ToConnectionPhysicalConnectionRequirementsPtrOutput() ConnectionPhysicalConnectionRequirementsPtrOutput
	ToConnectionPhysicalConnectionRequirementsPtrOutputWithContext(context.Context) ConnectionPhysicalConnectionRequirementsPtrOutput
}

type connectionPhysicalConnectionRequirementsPtrType ConnectionPhysicalConnectionRequirementsArgs

func ConnectionPhysicalConnectionRequirementsPtr(v *ConnectionPhysicalConnectionRequirementsArgs) ConnectionPhysicalConnectionRequirementsPtrInput {
	return (*connectionPhysicalConnectionRequirementsPtrType)(v)
}

func (*connectionPhysicalConnectionRequirementsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionPhysicalConnectionRequirements)(nil)).Elem()
}

func (i *connectionPhysicalConnectionRequirementsPtrType) ToConnectionPhysicalConnectionRequirementsPtrOutput() ConnectionPhysicalConnectionRequirementsPtrOutput {
	return i.ToConnectionPhysicalConnectionRequirementsPtrOutputWithContext(context.Background())
}

func (i *connectionPhysicalConnectionRequirementsPtrType) ToConnectionPhysicalConnectionRequirementsPtrOutputWithContext(ctx context.Context) ConnectionPhysicalConnectionRequirementsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionPhysicalConnectionRequirementsPtrOutput)
}

type ConnectionPhysicalConnectionRequirementsOutput struct{ *pulumi.OutputState }

func (ConnectionPhysicalConnectionRequirementsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionPhysicalConnectionRequirements)(nil)).Elem()
}

func (o ConnectionPhysicalConnectionRequirementsOutput) ToConnectionPhysicalConnectionRequirementsOutput() ConnectionPhysicalConnectionRequirementsOutput {
	return o
}

func (o ConnectionPhysicalConnectionRequirementsOutput) ToConnectionPhysicalConnectionRequirementsOutputWithContext(ctx context.Context) ConnectionPhysicalConnectionRequirementsOutput {
	return o
}

func (o ConnectionPhysicalConnectionRequirementsOutput) ToConnectionPhysicalConnectionRequirementsPtrOutput() ConnectionPhysicalConnectionRequirementsPtrOutput {
	return o.ToConnectionPhysicalConnectionRequirementsPtrOutputWithContext(context.Background())
}

func (o ConnectionPhysicalConnectionRequirementsOutput) ToConnectionPhysicalConnectionRequirementsPtrOutputWithContext(ctx context.Context) ConnectionPhysicalConnectionRequirementsPtrOutput {
	return o.ApplyT(func(v ConnectionPhysicalConnectionRequirements) *ConnectionPhysicalConnectionRequirements {
		return &v
	}).(ConnectionPhysicalConnectionRequirementsPtrOutput)
}
func (o ConnectionPhysicalConnectionRequirementsOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionPhysicalConnectionRequirements) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

func (o ConnectionPhysicalConnectionRequirementsOutput) SecurityGroupIdLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionPhysicalConnectionRequirements) []string { return v.SecurityGroupIdLists }).(pulumi.StringArrayOutput)
}

func (o ConnectionPhysicalConnectionRequirementsOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionPhysicalConnectionRequirements) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type ConnectionPhysicalConnectionRequirementsPtrOutput struct{ *pulumi.OutputState }

func (ConnectionPhysicalConnectionRequirementsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionPhysicalConnectionRequirements)(nil)).Elem()
}

func (o ConnectionPhysicalConnectionRequirementsPtrOutput) ToConnectionPhysicalConnectionRequirementsPtrOutput() ConnectionPhysicalConnectionRequirementsPtrOutput {
	return o
}

func (o ConnectionPhysicalConnectionRequirementsPtrOutput) ToConnectionPhysicalConnectionRequirementsPtrOutputWithContext(ctx context.Context) ConnectionPhysicalConnectionRequirementsPtrOutput {
	return o
}

func (o ConnectionPhysicalConnectionRequirementsPtrOutput) Elem() ConnectionPhysicalConnectionRequirementsOutput {
	return o.ApplyT(func(v *ConnectionPhysicalConnectionRequirements) ConnectionPhysicalConnectionRequirements { return *v }).(ConnectionPhysicalConnectionRequirementsOutput)
}

func (o ConnectionPhysicalConnectionRequirementsPtrOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionPhysicalConnectionRequirements) *string {
		if v == nil {
			return nil
		}
		return v.AvailabilityZone
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionPhysicalConnectionRequirementsPtrOutput) SecurityGroupIdLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionPhysicalConnectionRequirements) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIdLists
	}).(pulumi.StringArrayOutput)
}

func (o ConnectionPhysicalConnectionRequirementsPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionPhysicalConnectionRequirements) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

type CrawlerCatalogTarget struct {
	DatabaseName string   `pulumi:"databaseName"`
	Tables       []string `pulumi:"tables"`
}

// CrawlerCatalogTargetInput is an input type that accepts CrawlerCatalogTargetArgs and CrawlerCatalogTargetOutput values.
// You can construct a concrete instance of `CrawlerCatalogTargetInput` via:
//
//          CrawlerCatalogTargetArgs{...}
type CrawlerCatalogTargetInput interface {
	pulumi.Input

	ToCrawlerCatalogTargetOutput() CrawlerCatalogTargetOutput
	ToCrawlerCatalogTargetOutputWithContext(context.Context) CrawlerCatalogTargetOutput
}

type CrawlerCatalogTargetArgs struct {
	DatabaseName pulumi.StringInput      `pulumi:"databaseName"`
	Tables       pulumi.StringArrayInput `pulumi:"tables"`
}

func (CrawlerCatalogTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CrawlerCatalogTarget)(nil)).Elem()
}

func (i CrawlerCatalogTargetArgs) ToCrawlerCatalogTargetOutput() CrawlerCatalogTargetOutput {
	return i.ToCrawlerCatalogTargetOutputWithContext(context.Background())
}

func (i CrawlerCatalogTargetArgs) ToCrawlerCatalogTargetOutputWithContext(ctx context.Context) CrawlerCatalogTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CrawlerCatalogTargetOutput)
}

// CrawlerCatalogTargetArrayInput is an input type that accepts CrawlerCatalogTargetArray and CrawlerCatalogTargetArrayOutput values.
// You can construct a concrete instance of `CrawlerCatalogTargetArrayInput` via:
//
//          CrawlerCatalogTargetArray{ CrawlerCatalogTargetArgs{...} }
type CrawlerCatalogTargetArrayInput interface {
	pulumi.Input

	ToCrawlerCatalogTargetArrayOutput() CrawlerCatalogTargetArrayOutput
	ToCrawlerCatalogTargetArrayOutputWithContext(context.Context) CrawlerCatalogTargetArrayOutput
}

type CrawlerCatalogTargetArray []CrawlerCatalogTargetInput

func (CrawlerCatalogTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CrawlerCatalogTarget)(nil)).Elem()
}

func (i CrawlerCatalogTargetArray) ToCrawlerCatalogTargetArrayOutput() CrawlerCatalogTargetArrayOutput {
	return i.ToCrawlerCatalogTargetArrayOutputWithContext(context.Background())
}

func (i CrawlerCatalogTargetArray) ToCrawlerCatalogTargetArrayOutputWithContext(ctx context.Context) CrawlerCatalogTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CrawlerCatalogTargetArrayOutput)
}

type CrawlerCatalogTargetOutput struct{ *pulumi.OutputState }

func (CrawlerCatalogTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CrawlerCatalogTarget)(nil)).Elem()
}

func (o CrawlerCatalogTargetOutput) ToCrawlerCatalogTargetOutput() CrawlerCatalogTargetOutput {
	return o
}

func (o CrawlerCatalogTargetOutput) ToCrawlerCatalogTargetOutputWithContext(ctx context.Context) CrawlerCatalogTargetOutput {
	return o
}

func (o CrawlerCatalogTargetOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v CrawlerCatalogTarget) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o CrawlerCatalogTargetOutput) Tables() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CrawlerCatalogTarget) []string { return v.Tables }).(pulumi.StringArrayOutput)
}

type CrawlerCatalogTargetArrayOutput struct{ *pulumi.OutputState }

func (CrawlerCatalogTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CrawlerCatalogTarget)(nil)).Elem()
}

func (o CrawlerCatalogTargetArrayOutput) ToCrawlerCatalogTargetArrayOutput() CrawlerCatalogTargetArrayOutput {
	return o
}

func (o CrawlerCatalogTargetArrayOutput) ToCrawlerCatalogTargetArrayOutputWithContext(ctx context.Context) CrawlerCatalogTargetArrayOutput {
	return o
}

func (o CrawlerCatalogTargetArrayOutput) Index(i pulumi.IntInput) CrawlerCatalogTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CrawlerCatalogTarget {
		return vs[0].([]CrawlerCatalogTarget)[vs[1].(int)]
	}).(CrawlerCatalogTargetOutput)
}

type CrawlerDynamodbTarget struct {
	Path string `pulumi:"path"`
}

// CrawlerDynamodbTargetInput is an input type that accepts CrawlerDynamodbTargetArgs and CrawlerDynamodbTargetOutput values.
// You can construct a concrete instance of `CrawlerDynamodbTargetInput` via:
//
//          CrawlerDynamodbTargetArgs{...}
type CrawlerDynamodbTargetInput interface {
	pulumi.Input

	ToCrawlerDynamodbTargetOutput() CrawlerDynamodbTargetOutput
	ToCrawlerDynamodbTargetOutputWithContext(context.Context) CrawlerDynamodbTargetOutput
}

type CrawlerDynamodbTargetArgs struct {
	Path pulumi.StringInput `pulumi:"path"`
}

func (CrawlerDynamodbTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CrawlerDynamodbTarget)(nil)).Elem()
}

func (i CrawlerDynamodbTargetArgs) ToCrawlerDynamodbTargetOutput() CrawlerDynamodbTargetOutput {
	return i.ToCrawlerDynamodbTargetOutputWithContext(context.Background())
}

func (i CrawlerDynamodbTargetArgs) ToCrawlerDynamodbTargetOutputWithContext(ctx context.Context) CrawlerDynamodbTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CrawlerDynamodbTargetOutput)
}

// CrawlerDynamodbTargetArrayInput is an input type that accepts CrawlerDynamodbTargetArray and CrawlerDynamodbTargetArrayOutput values.
// You can construct a concrete instance of `CrawlerDynamodbTargetArrayInput` via:
//
//          CrawlerDynamodbTargetArray{ CrawlerDynamodbTargetArgs{...} }
type CrawlerDynamodbTargetArrayInput interface {
	pulumi.Input

	ToCrawlerDynamodbTargetArrayOutput() CrawlerDynamodbTargetArrayOutput
	ToCrawlerDynamodbTargetArrayOutputWithContext(context.Context) CrawlerDynamodbTargetArrayOutput
}

type CrawlerDynamodbTargetArray []CrawlerDynamodbTargetInput

func (CrawlerDynamodbTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CrawlerDynamodbTarget)(nil)).Elem()
}

func (i CrawlerDynamodbTargetArray) ToCrawlerDynamodbTargetArrayOutput() CrawlerDynamodbTargetArrayOutput {
	return i.ToCrawlerDynamodbTargetArrayOutputWithContext(context.Background())
}

func (i CrawlerDynamodbTargetArray) ToCrawlerDynamodbTargetArrayOutputWithContext(ctx context.Context) CrawlerDynamodbTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CrawlerDynamodbTargetArrayOutput)
}

type CrawlerDynamodbTargetOutput struct{ *pulumi.OutputState }

func (CrawlerDynamodbTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CrawlerDynamodbTarget)(nil)).Elem()
}

func (o CrawlerDynamodbTargetOutput) ToCrawlerDynamodbTargetOutput() CrawlerDynamodbTargetOutput {
	return o
}

func (o CrawlerDynamodbTargetOutput) ToCrawlerDynamodbTargetOutputWithContext(ctx context.Context) CrawlerDynamodbTargetOutput {
	return o
}

func (o CrawlerDynamodbTargetOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v CrawlerDynamodbTarget) string { return v.Path }).(pulumi.StringOutput)
}

type CrawlerDynamodbTargetArrayOutput struct{ *pulumi.OutputState }

func (CrawlerDynamodbTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CrawlerDynamodbTarget)(nil)).Elem()
}

func (o CrawlerDynamodbTargetArrayOutput) ToCrawlerDynamodbTargetArrayOutput() CrawlerDynamodbTargetArrayOutput {
	return o
}

func (o CrawlerDynamodbTargetArrayOutput) ToCrawlerDynamodbTargetArrayOutputWithContext(ctx context.Context) CrawlerDynamodbTargetArrayOutput {
	return o
}

func (o CrawlerDynamodbTargetArrayOutput) Index(i pulumi.IntInput) CrawlerDynamodbTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CrawlerDynamodbTarget {
		return vs[0].([]CrawlerDynamodbTarget)[vs[1].(int)]
	}).(CrawlerDynamodbTargetOutput)
}

type CrawlerJdbcTarget struct {
	ConnectionName string   `pulumi:"connectionName"`
	Exclusions     []string `pulumi:"exclusions"`
	Path           string   `pulumi:"path"`
}

// CrawlerJdbcTargetInput is an input type that accepts CrawlerJdbcTargetArgs and CrawlerJdbcTargetOutput values.
// You can construct a concrete instance of `CrawlerJdbcTargetInput` via:
//
//          CrawlerJdbcTargetArgs{...}
type CrawlerJdbcTargetInput interface {
	pulumi.Input

	ToCrawlerJdbcTargetOutput() CrawlerJdbcTargetOutput
	ToCrawlerJdbcTargetOutputWithContext(context.Context) CrawlerJdbcTargetOutput
}

type CrawlerJdbcTargetArgs struct {
	ConnectionName pulumi.StringInput      `pulumi:"connectionName"`
	Exclusions     pulumi.StringArrayInput `pulumi:"exclusions"`
	Path           pulumi.StringInput      `pulumi:"path"`
}

func (CrawlerJdbcTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CrawlerJdbcTarget)(nil)).Elem()
}

func (i CrawlerJdbcTargetArgs) ToCrawlerJdbcTargetOutput() CrawlerJdbcTargetOutput {
	return i.ToCrawlerJdbcTargetOutputWithContext(context.Background())
}

func (i CrawlerJdbcTargetArgs) ToCrawlerJdbcTargetOutputWithContext(ctx context.Context) CrawlerJdbcTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CrawlerJdbcTargetOutput)
}

// CrawlerJdbcTargetArrayInput is an input type that accepts CrawlerJdbcTargetArray and CrawlerJdbcTargetArrayOutput values.
// You can construct a concrete instance of `CrawlerJdbcTargetArrayInput` via:
//
//          CrawlerJdbcTargetArray{ CrawlerJdbcTargetArgs{...} }
type CrawlerJdbcTargetArrayInput interface {
	pulumi.Input

	ToCrawlerJdbcTargetArrayOutput() CrawlerJdbcTargetArrayOutput
	ToCrawlerJdbcTargetArrayOutputWithContext(context.Context) CrawlerJdbcTargetArrayOutput
}

type CrawlerJdbcTargetArray []CrawlerJdbcTargetInput

func (CrawlerJdbcTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CrawlerJdbcTarget)(nil)).Elem()
}

func (i CrawlerJdbcTargetArray) ToCrawlerJdbcTargetArrayOutput() CrawlerJdbcTargetArrayOutput {
	return i.ToCrawlerJdbcTargetArrayOutputWithContext(context.Background())
}

func (i CrawlerJdbcTargetArray) ToCrawlerJdbcTargetArrayOutputWithContext(ctx context.Context) CrawlerJdbcTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CrawlerJdbcTargetArrayOutput)
}

type CrawlerJdbcTargetOutput struct{ *pulumi.OutputState }

func (CrawlerJdbcTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CrawlerJdbcTarget)(nil)).Elem()
}

func (o CrawlerJdbcTargetOutput) ToCrawlerJdbcTargetOutput() CrawlerJdbcTargetOutput {
	return o
}

func (o CrawlerJdbcTargetOutput) ToCrawlerJdbcTargetOutputWithContext(ctx context.Context) CrawlerJdbcTargetOutput {
	return o
}

func (o CrawlerJdbcTargetOutput) ConnectionName() pulumi.StringOutput {
	return o.ApplyT(func(v CrawlerJdbcTarget) string { return v.ConnectionName }).(pulumi.StringOutput)
}

func (o CrawlerJdbcTargetOutput) Exclusions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CrawlerJdbcTarget) []string { return v.Exclusions }).(pulumi.StringArrayOutput)
}

func (o CrawlerJdbcTargetOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v CrawlerJdbcTarget) string { return v.Path }).(pulumi.StringOutput)
}

type CrawlerJdbcTargetArrayOutput struct{ *pulumi.OutputState }

func (CrawlerJdbcTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CrawlerJdbcTarget)(nil)).Elem()
}

func (o CrawlerJdbcTargetArrayOutput) ToCrawlerJdbcTargetArrayOutput() CrawlerJdbcTargetArrayOutput {
	return o
}

func (o CrawlerJdbcTargetArrayOutput) ToCrawlerJdbcTargetArrayOutputWithContext(ctx context.Context) CrawlerJdbcTargetArrayOutput {
	return o
}

func (o CrawlerJdbcTargetArrayOutput) Index(i pulumi.IntInput) CrawlerJdbcTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CrawlerJdbcTarget {
		return vs[0].([]CrawlerJdbcTarget)[vs[1].(int)]
	}).(CrawlerJdbcTargetOutput)
}

type CrawlerS3Target struct {
	Exclusions []string `pulumi:"exclusions"`
	Path       string   `pulumi:"path"`
}

// CrawlerS3TargetInput is an input type that accepts CrawlerS3TargetArgs and CrawlerS3TargetOutput values.
// You can construct a concrete instance of `CrawlerS3TargetInput` via:
//
//          CrawlerS3TargetArgs{...}
type CrawlerS3TargetInput interface {
	pulumi.Input

	ToCrawlerS3TargetOutput() CrawlerS3TargetOutput
	ToCrawlerS3TargetOutputWithContext(context.Context) CrawlerS3TargetOutput
}

type CrawlerS3TargetArgs struct {
	Exclusions pulumi.StringArrayInput `pulumi:"exclusions"`
	Path       pulumi.StringInput      `pulumi:"path"`
}

func (CrawlerS3TargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CrawlerS3Target)(nil)).Elem()
}

func (i CrawlerS3TargetArgs) ToCrawlerS3TargetOutput() CrawlerS3TargetOutput {
	return i.ToCrawlerS3TargetOutputWithContext(context.Background())
}

func (i CrawlerS3TargetArgs) ToCrawlerS3TargetOutputWithContext(ctx context.Context) CrawlerS3TargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CrawlerS3TargetOutput)
}

// CrawlerS3TargetArrayInput is an input type that accepts CrawlerS3TargetArray and CrawlerS3TargetArrayOutput values.
// You can construct a concrete instance of `CrawlerS3TargetArrayInput` via:
//
//          CrawlerS3TargetArray{ CrawlerS3TargetArgs{...} }
type CrawlerS3TargetArrayInput interface {
	pulumi.Input

	ToCrawlerS3TargetArrayOutput() CrawlerS3TargetArrayOutput
	ToCrawlerS3TargetArrayOutputWithContext(context.Context) CrawlerS3TargetArrayOutput
}

type CrawlerS3TargetArray []CrawlerS3TargetInput

func (CrawlerS3TargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CrawlerS3Target)(nil)).Elem()
}

func (i CrawlerS3TargetArray) ToCrawlerS3TargetArrayOutput() CrawlerS3TargetArrayOutput {
	return i.ToCrawlerS3TargetArrayOutputWithContext(context.Background())
}

func (i CrawlerS3TargetArray) ToCrawlerS3TargetArrayOutputWithContext(ctx context.Context) CrawlerS3TargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CrawlerS3TargetArrayOutput)
}

type CrawlerS3TargetOutput struct{ *pulumi.OutputState }

func (CrawlerS3TargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CrawlerS3Target)(nil)).Elem()
}

func (o CrawlerS3TargetOutput) ToCrawlerS3TargetOutput() CrawlerS3TargetOutput {
	return o
}

func (o CrawlerS3TargetOutput) ToCrawlerS3TargetOutputWithContext(ctx context.Context) CrawlerS3TargetOutput {
	return o
}

func (o CrawlerS3TargetOutput) Exclusions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CrawlerS3Target) []string { return v.Exclusions }).(pulumi.StringArrayOutput)
}

func (o CrawlerS3TargetOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v CrawlerS3Target) string { return v.Path }).(pulumi.StringOutput)
}

type CrawlerS3TargetArrayOutput struct{ *pulumi.OutputState }

func (CrawlerS3TargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CrawlerS3Target)(nil)).Elem()
}

func (o CrawlerS3TargetArrayOutput) ToCrawlerS3TargetArrayOutput() CrawlerS3TargetArrayOutput {
	return o
}

func (o CrawlerS3TargetArrayOutput) ToCrawlerS3TargetArrayOutputWithContext(ctx context.Context) CrawlerS3TargetArrayOutput {
	return o
}

func (o CrawlerS3TargetArrayOutput) Index(i pulumi.IntInput) CrawlerS3TargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CrawlerS3Target {
		return vs[0].([]CrawlerS3Target)[vs[1].(int)]
	}).(CrawlerS3TargetOutput)
}

type CrawlerSchemaChangePolicy struct {
	DeleteBehavior *string `pulumi:"deleteBehavior"`
	UpdateBehavior *string `pulumi:"updateBehavior"`
}

// CrawlerSchemaChangePolicyInput is an input type that accepts CrawlerSchemaChangePolicyArgs and CrawlerSchemaChangePolicyOutput values.
// You can construct a concrete instance of `CrawlerSchemaChangePolicyInput` via:
//
//          CrawlerSchemaChangePolicyArgs{...}
type CrawlerSchemaChangePolicyInput interface {
	pulumi.Input

	ToCrawlerSchemaChangePolicyOutput() CrawlerSchemaChangePolicyOutput
	ToCrawlerSchemaChangePolicyOutputWithContext(context.Context) CrawlerSchemaChangePolicyOutput
}

type CrawlerSchemaChangePolicyArgs struct {
	DeleteBehavior pulumi.StringPtrInput `pulumi:"deleteBehavior"`
	UpdateBehavior pulumi.StringPtrInput `pulumi:"updateBehavior"`
}

func (CrawlerSchemaChangePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CrawlerSchemaChangePolicy)(nil)).Elem()
}

func (i CrawlerSchemaChangePolicyArgs) ToCrawlerSchemaChangePolicyOutput() CrawlerSchemaChangePolicyOutput {
	return i.ToCrawlerSchemaChangePolicyOutputWithContext(context.Background())
}

func (i CrawlerSchemaChangePolicyArgs) ToCrawlerSchemaChangePolicyOutputWithContext(ctx context.Context) CrawlerSchemaChangePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CrawlerSchemaChangePolicyOutput)
}

func (i CrawlerSchemaChangePolicyArgs) ToCrawlerSchemaChangePolicyPtrOutput() CrawlerSchemaChangePolicyPtrOutput {
	return i.ToCrawlerSchemaChangePolicyPtrOutputWithContext(context.Background())
}

func (i CrawlerSchemaChangePolicyArgs) ToCrawlerSchemaChangePolicyPtrOutputWithContext(ctx context.Context) CrawlerSchemaChangePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CrawlerSchemaChangePolicyOutput).ToCrawlerSchemaChangePolicyPtrOutputWithContext(ctx)
}

// CrawlerSchemaChangePolicyPtrInput is an input type that accepts CrawlerSchemaChangePolicyArgs, CrawlerSchemaChangePolicyPtr and CrawlerSchemaChangePolicyPtrOutput values.
// You can construct a concrete instance of `CrawlerSchemaChangePolicyPtrInput` via:
//
//          CrawlerSchemaChangePolicyArgs{...}
//
//  or:
//
//          nil
type CrawlerSchemaChangePolicyPtrInput interface {
	pulumi.Input

	ToCrawlerSchemaChangePolicyPtrOutput() CrawlerSchemaChangePolicyPtrOutput
	ToCrawlerSchemaChangePolicyPtrOutputWithContext(context.Context) CrawlerSchemaChangePolicyPtrOutput
}

type crawlerSchemaChangePolicyPtrType CrawlerSchemaChangePolicyArgs

func CrawlerSchemaChangePolicyPtr(v *CrawlerSchemaChangePolicyArgs) CrawlerSchemaChangePolicyPtrInput {
	return (*crawlerSchemaChangePolicyPtrType)(v)
}

func (*crawlerSchemaChangePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CrawlerSchemaChangePolicy)(nil)).Elem()
}

func (i *crawlerSchemaChangePolicyPtrType) ToCrawlerSchemaChangePolicyPtrOutput() CrawlerSchemaChangePolicyPtrOutput {
	return i.ToCrawlerSchemaChangePolicyPtrOutputWithContext(context.Background())
}

func (i *crawlerSchemaChangePolicyPtrType) ToCrawlerSchemaChangePolicyPtrOutputWithContext(ctx context.Context) CrawlerSchemaChangePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CrawlerSchemaChangePolicyPtrOutput)
}

type CrawlerSchemaChangePolicyOutput struct{ *pulumi.OutputState }

func (CrawlerSchemaChangePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CrawlerSchemaChangePolicy)(nil)).Elem()
}

func (o CrawlerSchemaChangePolicyOutput) ToCrawlerSchemaChangePolicyOutput() CrawlerSchemaChangePolicyOutput {
	return o
}

func (o CrawlerSchemaChangePolicyOutput) ToCrawlerSchemaChangePolicyOutputWithContext(ctx context.Context) CrawlerSchemaChangePolicyOutput {
	return o
}

func (o CrawlerSchemaChangePolicyOutput) ToCrawlerSchemaChangePolicyPtrOutput() CrawlerSchemaChangePolicyPtrOutput {
	return o.ToCrawlerSchemaChangePolicyPtrOutputWithContext(context.Background())
}

func (o CrawlerSchemaChangePolicyOutput) ToCrawlerSchemaChangePolicyPtrOutputWithContext(ctx context.Context) CrawlerSchemaChangePolicyPtrOutput {
	return o.ApplyT(func(v CrawlerSchemaChangePolicy) *CrawlerSchemaChangePolicy {
		return &v
	}).(CrawlerSchemaChangePolicyPtrOutput)
}
func (o CrawlerSchemaChangePolicyOutput) DeleteBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CrawlerSchemaChangePolicy) *string { return v.DeleteBehavior }).(pulumi.StringPtrOutput)
}

func (o CrawlerSchemaChangePolicyOutput) UpdateBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CrawlerSchemaChangePolicy) *string { return v.UpdateBehavior }).(pulumi.StringPtrOutput)
}

type CrawlerSchemaChangePolicyPtrOutput struct{ *pulumi.OutputState }

func (CrawlerSchemaChangePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CrawlerSchemaChangePolicy)(nil)).Elem()
}

func (o CrawlerSchemaChangePolicyPtrOutput) ToCrawlerSchemaChangePolicyPtrOutput() CrawlerSchemaChangePolicyPtrOutput {
	return o
}

func (o CrawlerSchemaChangePolicyPtrOutput) ToCrawlerSchemaChangePolicyPtrOutputWithContext(ctx context.Context) CrawlerSchemaChangePolicyPtrOutput {
	return o
}

func (o CrawlerSchemaChangePolicyPtrOutput) Elem() CrawlerSchemaChangePolicyOutput {
	return o.ApplyT(func(v *CrawlerSchemaChangePolicy) CrawlerSchemaChangePolicy { return *v }).(CrawlerSchemaChangePolicyOutput)
}

func (o CrawlerSchemaChangePolicyPtrOutput) DeleteBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CrawlerSchemaChangePolicy) *string {
		if v == nil {
			return nil
		}
		return v.DeleteBehavior
	}).(pulumi.StringPtrOutput)
}

func (o CrawlerSchemaChangePolicyPtrOutput) UpdateBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CrawlerSchemaChangePolicy) *string {
		if v == nil {
			return nil
		}
		return v.UpdateBehavior
	}).(pulumi.StringPtrOutput)
}

type JobCommand struct {
	Name           *string `pulumi:"name"`
	PythonVersion  *string `pulumi:"pythonVersion"`
	ScriptLocation string  `pulumi:"scriptLocation"`
}

// JobCommandInput is an input type that accepts JobCommandArgs and JobCommandOutput values.
// You can construct a concrete instance of `JobCommandInput` via:
//
//          JobCommandArgs{...}
type JobCommandInput interface {
	pulumi.Input

	ToJobCommandOutput() JobCommandOutput
	ToJobCommandOutputWithContext(context.Context) JobCommandOutput
}

type JobCommandArgs struct {
	Name           pulumi.StringPtrInput `pulumi:"name"`
	PythonVersion  pulumi.StringPtrInput `pulumi:"pythonVersion"`
	ScriptLocation pulumi.StringInput    `pulumi:"scriptLocation"`
}

func (JobCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobCommand)(nil)).Elem()
}

func (i JobCommandArgs) ToJobCommandOutput() JobCommandOutput {
	return i.ToJobCommandOutputWithContext(context.Background())
}

func (i JobCommandArgs) ToJobCommandOutputWithContext(ctx context.Context) JobCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobCommandOutput)
}

func (i JobCommandArgs) ToJobCommandPtrOutput() JobCommandPtrOutput {
	return i.ToJobCommandPtrOutputWithContext(context.Background())
}

func (i JobCommandArgs) ToJobCommandPtrOutputWithContext(ctx context.Context) JobCommandPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobCommandOutput).ToJobCommandPtrOutputWithContext(ctx)
}

// JobCommandPtrInput is an input type that accepts JobCommandArgs, JobCommandPtr and JobCommandPtrOutput values.
// You can construct a concrete instance of `JobCommandPtrInput` via:
//
//          JobCommandArgs{...}
//
//  or:
//
//          nil
type JobCommandPtrInput interface {
	pulumi.Input

	ToJobCommandPtrOutput() JobCommandPtrOutput
	ToJobCommandPtrOutputWithContext(context.Context) JobCommandPtrOutput
}

type jobCommandPtrType JobCommandArgs

func JobCommandPtr(v *JobCommandArgs) JobCommandPtrInput {
	return (*jobCommandPtrType)(v)
}

func (*jobCommandPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobCommand)(nil)).Elem()
}

func (i *jobCommandPtrType) ToJobCommandPtrOutput() JobCommandPtrOutput {
	return i.ToJobCommandPtrOutputWithContext(context.Background())
}

func (i *jobCommandPtrType) ToJobCommandPtrOutputWithContext(ctx context.Context) JobCommandPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobCommandPtrOutput)
}

type JobCommandOutput struct{ *pulumi.OutputState }

func (JobCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobCommand)(nil)).Elem()
}

func (o JobCommandOutput) ToJobCommandOutput() JobCommandOutput {
	return o
}

func (o JobCommandOutput) ToJobCommandOutputWithContext(ctx context.Context) JobCommandOutput {
	return o
}

func (o JobCommandOutput) ToJobCommandPtrOutput() JobCommandPtrOutput {
	return o.ToJobCommandPtrOutputWithContext(context.Background())
}

func (o JobCommandOutput) ToJobCommandPtrOutputWithContext(ctx context.Context) JobCommandPtrOutput {
	return o.ApplyT(func(v JobCommand) *JobCommand {
		return &v
	}).(JobCommandPtrOutput)
}
func (o JobCommandOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobCommand) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o JobCommandOutput) PythonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobCommand) *string { return v.PythonVersion }).(pulumi.StringPtrOutput)
}

func (o JobCommandOutput) ScriptLocation() pulumi.StringOutput {
	return o.ApplyT(func(v JobCommand) string { return v.ScriptLocation }).(pulumi.StringOutput)
}

type JobCommandPtrOutput struct{ *pulumi.OutputState }

func (JobCommandPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobCommand)(nil)).Elem()
}

func (o JobCommandPtrOutput) ToJobCommandPtrOutput() JobCommandPtrOutput {
	return o
}

func (o JobCommandPtrOutput) ToJobCommandPtrOutputWithContext(ctx context.Context) JobCommandPtrOutput {
	return o
}

func (o JobCommandPtrOutput) Elem() JobCommandOutput {
	return o.ApplyT(func(v *JobCommand) JobCommand { return *v }).(JobCommandOutput)
}

func (o JobCommandPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobCommand) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o JobCommandPtrOutput) PythonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobCommand) *string {
		if v == nil {
			return nil
		}
		return v.PythonVersion
	}).(pulumi.StringPtrOutput)
}

func (o JobCommandPtrOutput) ScriptLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobCommand) *string {
		if v == nil {
			return nil
		}
		return &v.ScriptLocation
	}).(pulumi.StringPtrOutput)
}

type JobExecutionProperty struct {
	MaxConcurrentRuns *int `pulumi:"maxConcurrentRuns"`
}

// JobExecutionPropertyInput is an input type that accepts JobExecutionPropertyArgs and JobExecutionPropertyOutput values.
// You can construct a concrete instance of `JobExecutionPropertyInput` via:
//
//          JobExecutionPropertyArgs{...}
type JobExecutionPropertyInput interface {
	pulumi.Input

	ToJobExecutionPropertyOutput() JobExecutionPropertyOutput
	ToJobExecutionPropertyOutputWithContext(context.Context) JobExecutionPropertyOutput
}

type JobExecutionPropertyArgs struct {
	MaxConcurrentRuns pulumi.IntPtrInput `pulumi:"maxConcurrentRuns"`
}

func (JobExecutionPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobExecutionProperty)(nil)).Elem()
}

func (i JobExecutionPropertyArgs) ToJobExecutionPropertyOutput() JobExecutionPropertyOutput {
	return i.ToJobExecutionPropertyOutputWithContext(context.Background())
}

func (i JobExecutionPropertyArgs) ToJobExecutionPropertyOutputWithContext(ctx context.Context) JobExecutionPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobExecutionPropertyOutput)
}

func (i JobExecutionPropertyArgs) ToJobExecutionPropertyPtrOutput() JobExecutionPropertyPtrOutput {
	return i.ToJobExecutionPropertyPtrOutputWithContext(context.Background())
}

func (i JobExecutionPropertyArgs) ToJobExecutionPropertyPtrOutputWithContext(ctx context.Context) JobExecutionPropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobExecutionPropertyOutput).ToJobExecutionPropertyPtrOutputWithContext(ctx)
}

// JobExecutionPropertyPtrInput is an input type that accepts JobExecutionPropertyArgs, JobExecutionPropertyPtr and JobExecutionPropertyPtrOutput values.
// You can construct a concrete instance of `JobExecutionPropertyPtrInput` via:
//
//          JobExecutionPropertyArgs{...}
//
//  or:
//
//          nil
type JobExecutionPropertyPtrInput interface {
	pulumi.Input

	ToJobExecutionPropertyPtrOutput() JobExecutionPropertyPtrOutput
	ToJobExecutionPropertyPtrOutputWithContext(context.Context) JobExecutionPropertyPtrOutput
}

type jobExecutionPropertyPtrType JobExecutionPropertyArgs

func JobExecutionPropertyPtr(v *JobExecutionPropertyArgs) JobExecutionPropertyPtrInput {
	return (*jobExecutionPropertyPtrType)(v)
}

func (*jobExecutionPropertyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobExecutionProperty)(nil)).Elem()
}

func (i *jobExecutionPropertyPtrType) ToJobExecutionPropertyPtrOutput() JobExecutionPropertyPtrOutput {
	return i.ToJobExecutionPropertyPtrOutputWithContext(context.Background())
}

func (i *jobExecutionPropertyPtrType) ToJobExecutionPropertyPtrOutputWithContext(ctx context.Context) JobExecutionPropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobExecutionPropertyPtrOutput)
}

type JobExecutionPropertyOutput struct{ *pulumi.OutputState }

func (JobExecutionPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobExecutionProperty)(nil)).Elem()
}

func (o JobExecutionPropertyOutput) ToJobExecutionPropertyOutput() JobExecutionPropertyOutput {
	return o
}

func (o JobExecutionPropertyOutput) ToJobExecutionPropertyOutputWithContext(ctx context.Context) JobExecutionPropertyOutput {
	return o
}

func (o JobExecutionPropertyOutput) ToJobExecutionPropertyPtrOutput() JobExecutionPropertyPtrOutput {
	return o.ToJobExecutionPropertyPtrOutputWithContext(context.Background())
}

func (o JobExecutionPropertyOutput) ToJobExecutionPropertyPtrOutputWithContext(ctx context.Context) JobExecutionPropertyPtrOutput {
	return o.ApplyT(func(v JobExecutionProperty) *JobExecutionProperty {
		return &v
	}).(JobExecutionPropertyPtrOutput)
}
func (o JobExecutionPropertyOutput) MaxConcurrentRuns() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobExecutionProperty) *int { return v.MaxConcurrentRuns }).(pulumi.IntPtrOutput)
}

type JobExecutionPropertyPtrOutput struct{ *pulumi.OutputState }

func (JobExecutionPropertyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobExecutionProperty)(nil)).Elem()
}

func (o JobExecutionPropertyPtrOutput) ToJobExecutionPropertyPtrOutput() JobExecutionPropertyPtrOutput {
	return o
}

func (o JobExecutionPropertyPtrOutput) ToJobExecutionPropertyPtrOutputWithContext(ctx context.Context) JobExecutionPropertyPtrOutput {
	return o
}

func (o JobExecutionPropertyPtrOutput) Elem() JobExecutionPropertyOutput {
	return o.ApplyT(func(v *JobExecutionProperty) JobExecutionProperty { return *v }).(JobExecutionPropertyOutput)
}

func (o JobExecutionPropertyPtrOutput) MaxConcurrentRuns() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobExecutionProperty) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentRuns
	}).(pulumi.IntPtrOutput)
}

type JobNotificationProperty struct {
	NotifyDelayAfter *int `pulumi:"notifyDelayAfter"`
}

// JobNotificationPropertyInput is an input type that accepts JobNotificationPropertyArgs and JobNotificationPropertyOutput values.
// You can construct a concrete instance of `JobNotificationPropertyInput` via:
//
//          JobNotificationPropertyArgs{...}
type JobNotificationPropertyInput interface {
	pulumi.Input

	ToJobNotificationPropertyOutput() JobNotificationPropertyOutput
	ToJobNotificationPropertyOutputWithContext(context.Context) JobNotificationPropertyOutput
}

type JobNotificationPropertyArgs struct {
	NotifyDelayAfter pulumi.IntPtrInput `pulumi:"notifyDelayAfter"`
}

func (JobNotificationPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobNotificationProperty)(nil)).Elem()
}

func (i JobNotificationPropertyArgs) ToJobNotificationPropertyOutput() JobNotificationPropertyOutput {
	return i.ToJobNotificationPropertyOutputWithContext(context.Background())
}

func (i JobNotificationPropertyArgs) ToJobNotificationPropertyOutputWithContext(ctx context.Context) JobNotificationPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobNotificationPropertyOutput)
}

func (i JobNotificationPropertyArgs) ToJobNotificationPropertyPtrOutput() JobNotificationPropertyPtrOutput {
	return i.ToJobNotificationPropertyPtrOutputWithContext(context.Background())
}

func (i JobNotificationPropertyArgs) ToJobNotificationPropertyPtrOutputWithContext(ctx context.Context) JobNotificationPropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobNotificationPropertyOutput).ToJobNotificationPropertyPtrOutputWithContext(ctx)
}

// JobNotificationPropertyPtrInput is an input type that accepts JobNotificationPropertyArgs, JobNotificationPropertyPtr and JobNotificationPropertyPtrOutput values.
// You can construct a concrete instance of `JobNotificationPropertyPtrInput` via:
//
//          JobNotificationPropertyArgs{...}
//
//  or:
//
//          nil
type JobNotificationPropertyPtrInput interface {
	pulumi.Input

	ToJobNotificationPropertyPtrOutput() JobNotificationPropertyPtrOutput
	ToJobNotificationPropertyPtrOutputWithContext(context.Context) JobNotificationPropertyPtrOutput
}

type jobNotificationPropertyPtrType JobNotificationPropertyArgs

func JobNotificationPropertyPtr(v *JobNotificationPropertyArgs) JobNotificationPropertyPtrInput {
	return (*jobNotificationPropertyPtrType)(v)
}

func (*jobNotificationPropertyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobNotificationProperty)(nil)).Elem()
}

func (i *jobNotificationPropertyPtrType) ToJobNotificationPropertyPtrOutput() JobNotificationPropertyPtrOutput {
	return i.ToJobNotificationPropertyPtrOutputWithContext(context.Background())
}

func (i *jobNotificationPropertyPtrType) ToJobNotificationPropertyPtrOutputWithContext(ctx context.Context) JobNotificationPropertyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobNotificationPropertyPtrOutput)
}

type JobNotificationPropertyOutput struct{ *pulumi.OutputState }

func (JobNotificationPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobNotificationProperty)(nil)).Elem()
}

func (o JobNotificationPropertyOutput) ToJobNotificationPropertyOutput() JobNotificationPropertyOutput {
	return o
}

func (o JobNotificationPropertyOutput) ToJobNotificationPropertyOutputWithContext(ctx context.Context) JobNotificationPropertyOutput {
	return o
}

func (o JobNotificationPropertyOutput) ToJobNotificationPropertyPtrOutput() JobNotificationPropertyPtrOutput {
	return o.ToJobNotificationPropertyPtrOutputWithContext(context.Background())
}

func (o JobNotificationPropertyOutput) ToJobNotificationPropertyPtrOutputWithContext(ctx context.Context) JobNotificationPropertyPtrOutput {
	return o.ApplyT(func(v JobNotificationProperty) *JobNotificationProperty {
		return &v
	}).(JobNotificationPropertyPtrOutput)
}
func (o JobNotificationPropertyOutput) NotifyDelayAfter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobNotificationProperty) *int { return v.NotifyDelayAfter }).(pulumi.IntPtrOutput)
}

type JobNotificationPropertyPtrOutput struct{ *pulumi.OutputState }

func (JobNotificationPropertyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobNotificationProperty)(nil)).Elem()
}

func (o JobNotificationPropertyPtrOutput) ToJobNotificationPropertyPtrOutput() JobNotificationPropertyPtrOutput {
	return o
}

func (o JobNotificationPropertyPtrOutput) ToJobNotificationPropertyPtrOutputWithContext(ctx context.Context) JobNotificationPropertyPtrOutput {
	return o
}

func (o JobNotificationPropertyPtrOutput) Elem() JobNotificationPropertyOutput {
	return o.ApplyT(func(v *JobNotificationProperty) JobNotificationProperty { return *v }).(JobNotificationPropertyOutput)
}

func (o JobNotificationPropertyPtrOutput) NotifyDelayAfter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobNotificationProperty) *int {
		if v == nil {
			return nil
		}
		return v.NotifyDelayAfter
	}).(pulumi.IntPtrOutput)
}

type SecurityConfigurationEncryptionConfiguration struct {
	CloudwatchEncryption   SecurityConfigurationEncryptionConfigurationCloudwatchEncryption   `pulumi:"cloudwatchEncryption"`
	JobBookmarksEncryption SecurityConfigurationEncryptionConfigurationJobBookmarksEncryption `pulumi:"jobBookmarksEncryption"`
	S3Encryption           SecurityConfigurationEncryptionConfigurationS3Encryption           `pulumi:"s3Encryption"`
}

// SecurityConfigurationEncryptionConfigurationInput is an input type that accepts SecurityConfigurationEncryptionConfigurationArgs and SecurityConfigurationEncryptionConfigurationOutput values.
// You can construct a concrete instance of `SecurityConfigurationEncryptionConfigurationInput` via:
//
//          SecurityConfigurationEncryptionConfigurationArgs{...}
type SecurityConfigurationEncryptionConfigurationInput interface {
	pulumi.Input

	ToSecurityConfigurationEncryptionConfigurationOutput() SecurityConfigurationEncryptionConfigurationOutput
	ToSecurityConfigurationEncryptionConfigurationOutputWithContext(context.Context) SecurityConfigurationEncryptionConfigurationOutput
}

type SecurityConfigurationEncryptionConfigurationArgs struct {
	CloudwatchEncryption   SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionInput   `pulumi:"cloudwatchEncryption"`
	JobBookmarksEncryption SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionInput `pulumi:"jobBookmarksEncryption"`
	S3Encryption           SecurityConfigurationEncryptionConfigurationS3EncryptionInput           `pulumi:"s3Encryption"`
}

func (SecurityConfigurationEncryptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityConfigurationEncryptionConfiguration)(nil)).Elem()
}

func (i SecurityConfigurationEncryptionConfigurationArgs) ToSecurityConfigurationEncryptionConfigurationOutput() SecurityConfigurationEncryptionConfigurationOutput {
	return i.ToSecurityConfigurationEncryptionConfigurationOutputWithContext(context.Background())
}

func (i SecurityConfigurationEncryptionConfigurationArgs) ToSecurityConfigurationEncryptionConfigurationOutputWithContext(ctx context.Context) SecurityConfigurationEncryptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityConfigurationEncryptionConfigurationOutput)
}

func (i SecurityConfigurationEncryptionConfigurationArgs) ToSecurityConfigurationEncryptionConfigurationPtrOutput() SecurityConfigurationEncryptionConfigurationPtrOutput {
	return i.ToSecurityConfigurationEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (i SecurityConfigurationEncryptionConfigurationArgs) ToSecurityConfigurationEncryptionConfigurationPtrOutputWithContext(ctx context.Context) SecurityConfigurationEncryptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityConfigurationEncryptionConfigurationOutput).ToSecurityConfigurationEncryptionConfigurationPtrOutputWithContext(ctx)
}

// SecurityConfigurationEncryptionConfigurationPtrInput is an input type that accepts SecurityConfigurationEncryptionConfigurationArgs, SecurityConfigurationEncryptionConfigurationPtr and SecurityConfigurationEncryptionConfigurationPtrOutput values.
// You can construct a concrete instance of `SecurityConfigurationEncryptionConfigurationPtrInput` via:
//
//          SecurityConfigurationEncryptionConfigurationArgs{...}
//
//  or:
//
//          nil
type SecurityConfigurationEncryptionConfigurationPtrInput interface {
	pulumi.Input

	ToSecurityConfigurationEncryptionConfigurationPtrOutput() SecurityConfigurationEncryptionConfigurationPtrOutput
	ToSecurityConfigurationEncryptionConfigurationPtrOutputWithContext(context.Context) SecurityConfigurationEncryptionConfigurationPtrOutput
}

type securityConfigurationEncryptionConfigurationPtrType SecurityConfigurationEncryptionConfigurationArgs

func SecurityConfigurationEncryptionConfigurationPtr(v *SecurityConfigurationEncryptionConfigurationArgs) SecurityConfigurationEncryptionConfigurationPtrInput {
	return (*securityConfigurationEncryptionConfigurationPtrType)(v)
}

func (*securityConfigurationEncryptionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityConfigurationEncryptionConfiguration)(nil)).Elem()
}

func (i *securityConfigurationEncryptionConfigurationPtrType) ToSecurityConfigurationEncryptionConfigurationPtrOutput() SecurityConfigurationEncryptionConfigurationPtrOutput {
	return i.ToSecurityConfigurationEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (i *securityConfigurationEncryptionConfigurationPtrType) ToSecurityConfigurationEncryptionConfigurationPtrOutputWithContext(ctx context.Context) SecurityConfigurationEncryptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityConfigurationEncryptionConfigurationPtrOutput)
}

type SecurityConfigurationEncryptionConfigurationOutput struct{ *pulumi.OutputState }

func (SecurityConfigurationEncryptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityConfigurationEncryptionConfiguration)(nil)).Elem()
}

func (o SecurityConfigurationEncryptionConfigurationOutput) ToSecurityConfigurationEncryptionConfigurationOutput() SecurityConfigurationEncryptionConfigurationOutput {
	return o
}

func (o SecurityConfigurationEncryptionConfigurationOutput) ToSecurityConfigurationEncryptionConfigurationOutputWithContext(ctx context.Context) SecurityConfigurationEncryptionConfigurationOutput {
	return o
}

func (o SecurityConfigurationEncryptionConfigurationOutput) ToSecurityConfigurationEncryptionConfigurationPtrOutput() SecurityConfigurationEncryptionConfigurationPtrOutput {
	return o.ToSecurityConfigurationEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (o SecurityConfigurationEncryptionConfigurationOutput) ToSecurityConfigurationEncryptionConfigurationPtrOutputWithContext(ctx context.Context) SecurityConfigurationEncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v SecurityConfigurationEncryptionConfiguration) *SecurityConfigurationEncryptionConfiguration {
		return &v
	}).(SecurityConfigurationEncryptionConfigurationPtrOutput)
}
func (o SecurityConfigurationEncryptionConfigurationOutput) CloudwatchEncryption() SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput {
	return o.ApplyT(func(v SecurityConfigurationEncryptionConfiguration) SecurityConfigurationEncryptionConfigurationCloudwatchEncryption {
		return v.CloudwatchEncryption
	}).(SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput)
}

func (o SecurityConfigurationEncryptionConfigurationOutput) JobBookmarksEncryption() SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionOutput {
	return o.ApplyT(func(v SecurityConfigurationEncryptionConfiguration) SecurityConfigurationEncryptionConfigurationJobBookmarksEncryption {
		return v.JobBookmarksEncryption
	}).(SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionOutput)
}

func (o SecurityConfigurationEncryptionConfigurationOutput) S3Encryption() SecurityConfigurationEncryptionConfigurationS3EncryptionOutput {
	return o.ApplyT(func(v SecurityConfigurationEncryptionConfiguration) SecurityConfigurationEncryptionConfigurationS3Encryption {
		return v.S3Encryption
	}).(SecurityConfigurationEncryptionConfigurationS3EncryptionOutput)
}

type SecurityConfigurationEncryptionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (SecurityConfigurationEncryptionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityConfigurationEncryptionConfiguration)(nil)).Elem()
}

func (o SecurityConfigurationEncryptionConfigurationPtrOutput) ToSecurityConfigurationEncryptionConfigurationPtrOutput() SecurityConfigurationEncryptionConfigurationPtrOutput {
	return o
}

func (o SecurityConfigurationEncryptionConfigurationPtrOutput) ToSecurityConfigurationEncryptionConfigurationPtrOutputWithContext(ctx context.Context) SecurityConfigurationEncryptionConfigurationPtrOutput {
	return o
}

func (o SecurityConfigurationEncryptionConfigurationPtrOutput) Elem() SecurityConfigurationEncryptionConfigurationOutput {
	return o.ApplyT(func(v *SecurityConfigurationEncryptionConfiguration) SecurityConfigurationEncryptionConfiguration {
		return *v
	}).(SecurityConfigurationEncryptionConfigurationOutput)
}

func (o SecurityConfigurationEncryptionConfigurationPtrOutput) CloudwatchEncryption() SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutput {
	return o.ApplyT(func(v *SecurityConfigurationEncryptionConfiguration) *SecurityConfigurationEncryptionConfigurationCloudwatchEncryption {
		if v == nil {
			return nil
		}
		return &v.CloudwatchEncryption
	}).(SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutput)
}

func (o SecurityConfigurationEncryptionConfigurationPtrOutput) JobBookmarksEncryption() SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutput {
	return o.ApplyT(func(v *SecurityConfigurationEncryptionConfiguration) *SecurityConfigurationEncryptionConfigurationJobBookmarksEncryption {
		if v == nil {
			return nil
		}
		return &v.JobBookmarksEncryption
	}).(SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutput)
}

func (o SecurityConfigurationEncryptionConfigurationPtrOutput) S3Encryption() SecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutput {
	return o.ApplyT(func(v *SecurityConfigurationEncryptionConfiguration) *SecurityConfigurationEncryptionConfigurationS3Encryption {
		if v == nil {
			return nil
		}
		return &v.S3Encryption
	}).(SecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutput)
}

type SecurityConfigurationEncryptionConfigurationCloudwatchEncryption struct {
	CloudwatchEncryptionMode *string `pulumi:"cloudwatchEncryptionMode"`
	KmsKeyArn                *string `pulumi:"kmsKeyArn"`
}

// SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionInput is an input type that accepts SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionArgs and SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput values.
// You can construct a concrete instance of `SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionInput` via:
//
//          SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionArgs{...}
type SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionInput interface {
	pulumi.Input

	ToSecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput() SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput
	ToSecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutputWithContext(context.Context) SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput
}

type SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionArgs struct {
	CloudwatchEncryptionMode pulumi.StringPtrInput `pulumi:"cloudwatchEncryptionMode"`
	KmsKeyArn                pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
}

func (SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityConfigurationEncryptionConfigurationCloudwatchEncryption)(nil)).Elem()
}

func (i SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionArgs) ToSecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput() SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput {
	return i.ToSecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutputWithContext(context.Background())
}

func (i SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionArgs) ToSecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutputWithContext(ctx context.Context) SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput)
}

func (i SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionArgs) ToSecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutput() SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutput {
	return i.ToSecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutputWithContext(context.Background())
}

func (i SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionArgs) ToSecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutputWithContext(ctx context.Context) SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput).ToSecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutputWithContext(ctx)
}

// SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrInput is an input type that accepts SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionArgs, SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtr and SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutput values.
// You can construct a concrete instance of `SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrInput` via:
//
//          SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionArgs{...}
//
//  or:
//
//          nil
type SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrInput interface {
	pulumi.Input

	ToSecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutput() SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutput
	ToSecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutputWithContext(context.Context) SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutput
}

type securityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrType SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionArgs

func SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtr(v *SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionArgs) SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrInput {
	return (*securityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrType)(v)
}

func (*securityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityConfigurationEncryptionConfigurationCloudwatchEncryption)(nil)).Elem()
}

func (i *securityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrType) ToSecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutput() SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutput {
	return i.ToSecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutputWithContext(context.Background())
}

func (i *securityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrType) ToSecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutputWithContext(ctx context.Context) SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutput)
}

type SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput struct{ *pulumi.OutputState }

func (SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityConfigurationEncryptionConfigurationCloudwatchEncryption)(nil)).Elem()
}

func (o SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput) ToSecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput() SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput {
	return o
}

func (o SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput) ToSecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutputWithContext(ctx context.Context) SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput {
	return o
}

func (o SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput) ToSecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutput() SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutput {
	return o.ToSecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutputWithContext(context.Background())
}

func (o SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput) ToSecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutputWithContext(ctx context.Context) SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutput {
	return o.ApplyT(func(v SecurityConfigurationEncryptionConfigurationCloudwatchEncryption) *SecurityConfigurationEncryptionConfigurationCloudwatchEncryption {
		return &v
	}).(SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutput)
}
func (o SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput) CloudwatchEncryptionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityConfigurationEncryptionConfigurationCloudwatchEncryption) *string {
		return v.CloudwatchEncryptionMode
	}).(pulumi.StringPtrOutput)
}

func (o SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityConfigurationEncryptionConfigurationCloudwatchEncryption) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

type SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutput struct{ *pulumi.OutputState }

func (SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityConfigurationEncryptionConfigurationCloudwatchEncryption)(nil)).Elem()
}

func (o SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutput) ToSecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutput() SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutput {
	return o
}

func (o SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutput) ToSecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutputWithContext(ctx context.Context) SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutput {
	return o
}

func (o SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutput) Elem() SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput {
	return o.ApplyT(func(v *SecurityConfigurationEncryptionConfigurationCloudwatchEncryption) SecurityConfigurationEncryptionConfigurationCloudwatchEncryption {
		return *v
	}).(SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput)
}

func (o SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutput) CloudwatchEncryptionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityConfigurationEncryptionConfigurationCloudwatchEncryption) *string {
		if v == nil {
			return nil
		}
		return v.CloudwatchEncryptionMode
	}).(pulumi.StringPtrOutput)
}

func (o SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityConfigurationEncryptionConfigurationCloudwatchEncryption) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

type SecurityConfigurationEncryptionConfigurationJobBookmarksEncryption struct {
	JobBookmarksEncryptionMode *string `pulumi:"jobBookmarksEncryptionMode"`
	KmsKeyArn                  *string `pulumi:"kmsKeyArn"`
}

// SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionInput is an input type that accepts SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionArgs and SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionOutput values.
// You can construct a concrete instance of `SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionInput` via:
//
//          SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionArgs{...}
type SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionInput interface {
	pulumi.Input

	ToSecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionOutput() SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionOutput
	ToSecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionOutputWithContext(context.Context) SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionOutput
}

type SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionArgs struct {
	JobBookmarksEncryptionMode pulumi.StringPtrInput `pulumi:"jobBookmarksEncryptionMode"`
	KmsKeyArn                  pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
}

func (SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityConfigurationEncryptionConfigurationJobBookmarksEncryption)(nil)).Elem()
}

func (i SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionArgs) ToSecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionOutput() SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionOutput {
	return i.ToSecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionOutputWithContext(context.Background())
}

func (i SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionArgs) ToSecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionOutputWithContext(ctx context.Context) SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionOutput)
}

func (i SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionArgs) ToSecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutput() SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutput {
	return i.ToSecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutputWithContext(context.Background())
}

func (i SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionArgs) ToSecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutputWithContext(ctx context.Context) SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionOutput).ToSecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutputWithContext(ctx)
}

// SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrInput is an input type that accepts SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionArgs, SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtr and SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutput values.
// You can construct a concrete instance of `SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrInput` via:
//
//          SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionArgs{...}
//
//  or:
//
//          nil
type SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrInput interface {
	pulumi.Input

	ToSecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutput() SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutput
	ToSecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutputWithContext(context.Context) SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutput
}

type securityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrType SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionArgs

func SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtr(v *SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionArgs) SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrInput {
	return (*securityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrType)(v)
}

func (*securityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityConfigurationEncryptionConfigurationJobBookmarksEncryption)(nil)).Elem()
}

func (i *securityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrType) ToSecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutput() SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutput {
	return i.ToSecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutputWithContext(context.Background())
}

func (i *securityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrType) ToSecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutputWithContext(ctx context.Context) SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutput)
}

type SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionOutput struct{ *pulumi.OutputState }

func (SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityConfigurationEncryptionConfigurationJobBookmarksEncryption)(nil)).Elem()
}

func (o SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionOutput) ToSecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionOutput() SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionOutput {
	return o
}

func (o SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionOutput) ToSecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionOutputWithContext(ctx context.Context) SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionOutput {
	return o
}

func (o SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionOutput) ToSecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutput() SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutput {
	return o.ToSecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutputWithContext(context.Background())
}

func (o SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionOutput) ToSecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutputWithContext(ctx context.Context) SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutput {
	return o.ApplyT(func(v SecurityConfigurationEncryptionConfigurationJobBookmarksEncryption) *SecurityConfigurationEncryptionConfigurationJobBookmarksEncryption {
		return &v
	}).(SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutput)
}
func (o SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionOutput) JobBookmarksEncryptionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityConfigurationEncryptionConfigurationJobBookmarksEncryption) *string {
		return v.JobBookmarksEncryptionMode
	}).(pulumi.StringPtrOutput)
}

func (o SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityConfigurationEncryptionConfigurationJobBookmarksEncryption) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

type SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutput struct{ *pulumi.OutputState }

func (SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityConfigurationEncryptionConfigurationJobBookmarksEncryption)(nil)).Elem()
}

func (o SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutput) ToSecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutput() SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutput {
	return o
}

func (o SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutput) ToSecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutputWithContext(ctx context.Context) SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutput {
	return o
}

func (o SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutput) Elem() SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionOutput {
	return o.ApplyT(func(v *SecurityConfigurationEncryptionConfigurationJobBookmarksEncryption) SecurityConfigurationEncryptionConfigurationJobBookmarksEncryption {
		return *v
	}).(SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionOutput)
}

func (o SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutput) JobBookmarksEncryptionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityConfigurationEncryptionConfigurationJobBookmarksEncryption) *string {
		if v == nil {
			return nil
		}
		return v.JobBookmarksEncryptionMode
	}).(pulumi.StringPtrOutput)
}

func (o SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityConfigurationEncryptionConfigurationJobBookmarksEncryption) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

type SecurityConfigurationEncryptionConfigurationS3Encryption struct {
	KmsKeyArn        *string `pulumi:"kmsKeyArn"`
	S3EncryptionMode *string `pulumi:"s3EncryptionMode"`
}

// SecurityConfigurationEncryptionConfigurationS3EncryptionInput is an input type that accepts SecurityConfigurationEncryptionConfigurationS3EncryptionArgs and SecurityConfigurationEncryptionConfigurationS3EncryptionOutput values.
// You can construct a concrete instance of `SecurityConfigurationEncryptionConfigurationS3EncryptionInput` via:
//
//          SecurityConfigurationEncryptionConfigurationS3EncryptionArgs{...}
type SecurityConfigurationEncryptionConfigurationS3EncryptionInput interface {
	pulumi.Input

	ToSecurityConfigurationEncryptionConfigurationS3EncryptionOutput() SecurityConfigurationEncryptionConfigurationS3EncryptionOutput
	ToSecurityConfigurationEncryptionConfigurationS3EncryptionOutputWithContext(context.Context) SecurityConfigurationEncryptionConfigurationS3EncryptionOutput
}

type SecurityConfigurationEncryptionConfigurationS3EncryptionArgs struct {
	KmsKeyArn        pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	S3EncryptionMode pulumi.StringPtrInput `pulumi:"s3EncryptionMode"`
}

func (SecurityConfigurationEncryptionConfigurationS3EncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityConfigurationEncryptionConfigurationS3Encryption)(nil)).Elem()
}

func (i SecurityConfigurationEncryptionConfigurationS3EncryptionArgs) ToSecurityConfigurationEncryptionConfigurationS3EncryptionOutput() SecurityConfigurationEncryptionConfigurationS3EncryptionOutput {
	return i.ToSecurityConfigurationEncryptionConfigurationS3EncryptionOutputWithContext(context.Background())
}

func (i SecurityConfigurationEncryptionConfigurationS3EncryptionArgs) ToSecurityConfigurationEncryptionConfigurationS3EncryptionOutputWithContext(ctx context.Context) SecurityConfigurationEncryptionConfigurationS3EncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityConfigurationEncryptionConfigurationS3EncryptionOutput)
}

func (i SecurityConfigurationEncryptionConfigurationS3EncryptionArgs) ToSecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutput() SecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutput {
	return i.ToSecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutputWithContext(context.Background())
}

func (i SecurityConfigurationEncryptionConfigurationS3EncryptionArgs) ToSecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutputWithContext(ctx context.Context) SecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityConfigurationEncryptionConfigurationS3EncryptionOutput).ToSecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutputWithContext(ctx)
}

// SecurityConfigurationEncryptionConfigurationS3EncryptionPtrInput is an input type that accepts SecurityConfigurationEncryptionConfigurationS3EncryptionArgs, SecurityConfigurationEncryptionConfigurationS3EncryptionPtr and SecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutput values.
// You can construct a concrete instance of `SecurityConfigurationEncryptionConfigurationS3EncryptionPtrInput` via:
//
//          SecurityConfigurationEncryptionConfigurationS3EncryptionArgs{...}
//
//  or:
//
//          nil
type SecurityConfigurationEncryptionConfigurationS3EncryptionPtrInput interface {
	pulumi.Input

	ToSecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutput() SecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutput
	ToSecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutputWithContext(context.Context) SecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutput
}

type securityConfigurationEncryptionConfigurationS3EncryptionPtrType SecurityConfigurationEncryptionConfigurationS3EncryptionArgs

func SecurityConfigurationEncryptionConfigurationS3EncryptionPtr(v *SecurityConfigurationEncryptionConfigurationS3EncryptionArgs) SecurityConfigurationEncryptionConfigurationS3EncryptionPtrInput {
	return (*securityConfigurationEncryptionConfigurationS3EncryptionPtrType)(v)
}

func (*securityConfigurationEncryptionConfigurationS3EncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityConfigurationEncryptionConfigurationS3Encryption)(nil)).Elem()
}

func (i *securityConfigurationEncryptionConfigurationS3EncryptionPtrType) ToSecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutput() SecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutput {
	return i.ToSecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutputWithContext(context.Background())
}

func (i *securityConfigurationEncryptionConfigurationS3EncryptionPtrType) ToSecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutputWithContext(ctx context.Context) SecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutput)
}

type SecurityConfigurationEncryptionConfigurationS3EncryptionOutput struct{ *pulumi.OutputState }

func (SecurityConfigurationEncryptionConfigurationS3EncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityConfigurationEncryptionConfigurationS3Encryption)(nil)).Elem()
}

func (o SecurityConfigurationEncryptionConfigurationS3EncryptionOutput) ToSecurityConfigurationEncryptionConfigurationS3EncryptionOutput() SecurityConfigurationEncryptionConfigurationS3EncryptionOutput {
	return o
}

func (o SecurityConfigurationEncryptionConfigurationS3EncryptionOutput) ToSecurityConfigurationEncryptionConfigurationS3EncryptionOutputWithContext(ctx context.Context) SecurityConfigurationEncryptionConfigurationS3EncryptionOutput {
	return o
}

func (o SecurityConfigurationEncryptionConfigurationS3EncryptionOutput) ToSecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutput() SecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutput {
	return o.ToSecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutputWithContext(context.Background())
}

func (o SecurityConfigurationEncryptionConfigurationS3EncryptionOutput) ToSecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutputWithContext(ctx context.Context) SecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutput {
	return o.ApplyT(func(v SecurityConfigurationEncryptionConfigurationS3Encryption) *SecurityConfigurationEncryptionConfigurationS3Encryption {
		return &v
	}).(SecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutput)
}
func (o SecurityConfigurationEncryptionConfigurationS3EncryptionOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityConfigurationEncryptionConfigurationS3Encryption) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

func (o SecurityConfigurationEncryptionConfigurationS3EncryptionOutput) S3EncryptionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityConfigurationEncryptionConfigurationS3Encryption) *string { return v.S3EncryptionMode }).(pulumi.StringPtrOutput)
}

type SecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutput struct{ *pulumi.OutputState }

func (SecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityConfigurationEncryptionConfigurationS3Encryption)(nil)).Elem()
}

func (o SecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutput) ToSecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutput() SecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutput {
	return o
}

func (o SecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutput) ToSecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutputWithContext(ctx context.Context) SecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutput {
	return o
}

func (o SecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutput) Elem() SecurityConfigurationEncryptionConfigurationS3EncryptionOutput {
	return o.ApplyT(func(v *SecurityConfigurationEncryptionConfigurationS3Encryption) SecurityConfigurationEncryptionConfigurationS3Encryption {
		return *v
	}).(SecurityConfigurationEncryptionConfigurationS3EncryptionOutput)
}

func (o SecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityConfigurationEncryptionConfigurationS3Encryption) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

func (o SecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutput) S3EncryptionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityConfigurationEncryptionConfigurationS3Encryption) *string {
		if v == nil {
			return nil
		}
		return v.S3EncryptionMode
	}).(pulumi.StringPtrOutput)
}

type TriggerAction struct {
	Arguments   map[string]string `pulumi:"arguments"`
	CrawlerName *string           `pulumi:"crawlerName"`
	JobName     *string           `pulumi:"jobName"`
	Timeout     *int              `pulumi:"timeout"`
}

// TriggerActionInput is an input type that accepts TriggerActionArgs and TriggerActionOutput values.
// You can construct a concrete instance of `TriggerActionInput` via:
//
//          TriggerActionArgs{...}
type TriggerActionInput interface {
	pulumi.Input

	ToTriggerActionOutput() TriggerActionOutput
	ToTriggerActionOutputWithContext(context.Context) TriggerActionOutput
}

type TriggerActionArgs struct {
	Arguments   pulumi.StringMapInput `pulumi:"arguments"`
	CrawlerName pulumi.StringPtrInput `pulumi:"crawlerName"`
	JobName     pulumi.StringPtrInput `pulumi:"jobName"`
	Timeout     pulumi.IntPtrInput    `pulumi:"timeout"`
}

func (TriggerActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerAction)(nil)).Elem()
}

func (i TriggerActionArgs) ToTriggerActionOutput() TriggerActionOutput {
	return i.ToTriggerActionOutputWithContext(context.Background())
}

func (i TriggerActionArgs) ToTriggerActionOutputWithContext(ctx context.Context) TriggerActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerActionOutput)
}

// TriggerActionArrayInput is an input type that accepts TriggerActionArray and TriggerActionArrayOutput values.
// You can construct a concrete instance of `TriggerActionArrayInput` via:
//
//          TriggerActionArray{ TriggerActionArgs{...} }
type TriggerActionArrayInput interface {
	pulumi.Input

	ToTriggerActionArrayOutput() TriggerActionArrayOutput
	ToTriggerActionArrayOutputWithContext(context.Context) TriggerActionArrayOutput
}

type TriggerActionArray []TriggerActionInput

func (TriggerActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerAction)(nil)).Elem()
}

func (i TriggerActionArray) ToTriggerActionArrayOutput() TriggerActionArrayOutput {
	return i.ToTriggerActionArrayOutputWithContext(context.Background())
}

func (i TriggerActionArray) ToTriggerActionArrayOutputWithContext(ctx context.Context) TriggerActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerActionArrayOutput)
}

type TriggerActionOutput struct{ *pulumi.OutputState }

func (TriggerActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerAction)(nil)).Elem()
}

func (o TriggerActionOutput) ToTriggerActionOutput() TriggerActionOutput {
	return o
}

func (o TriggerActionOutput) ToTriggerActionOutputWithContext(ctx context.Context) TriggerActionOutput {
	return o
}

func (o TriggerActionOutput) Arguments() pulumi.StringMapOutput {
	return o.ApplyT(func(v TriggerAction) map[string]string { return v.Arguments }).(pulumi.StringMapOutput)
}

func (o TriggerActionOutput) CrawlerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerAction) *string { return v.CrawlerName }).(pulumi.StringPtrOutput)
}

func (o TriggerActionOutput) JobName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerAction) *string { return v.JobName }).(pulumi.StringPtrOutput)
}

func (o TriggerActionOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TriggerAction) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

type TriggerActionArrayOutput struct{ *pulumi.OutputState }

func (TriggerActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerAction)(nil)).Elem()
}

func (o TriggerActionArrayOutput) ToTriggerActionArrayOutput() TriggerActionArrayOutput {
	return o
}

func (o TriggerActionArrayOutput) ToTriggerActionArrayOutputWithContext(ctx context.Context) TriggerActionArrayOutput {
	return o
}

func (o TriggerActionArrayOutput) Index(i pulumi.IntInput) TriggerActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TriggerAction {
		return vs[0].([]TriggerAction)[vs[1].(int)]
	}).(TriggerActionOutput)
}

type TriggerPredicate struct {
	Conditions []TriggerPredicateCondition `pulumi:"conditions"`
	Logical    *string                     `pulumi:"logical"`
}

// TriggerPredicateInput is an input type that accepts TriggerPredicateArgs and TriggerPredicateOutput values.
// You can construct a concrete instance of `TriggerPredicateInput` via:
//
//          TriggerPredicateArgs{...}
type TriggerPredicateInput interface {
	pulumi.Input

	ToTriggerPredicateOutput() TriggerPredicateOutput
	ToTriggerPredicateOutputWithContext(context.Context) TriggerPredicateOutput
}

type TriggerPredicateArgs struct {
	Conditions TriggerPredicateConditionArrayInput `pulumi:"conditions"`
	Logical    pulumi.StringPtrInput               `pulumi:"logical"`
}

func (TriggerPredicateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerPredicate)(nil)).Elem()
}

func (i TriggerPredicateArgs) ToTriggerPredicateOutput() TriggerPredicateOutput {
	return i.ToTriggerPredicateOutputWithContext(context.Background())
}

func (i TriggerPredicateArgs) ToTriggerPredicateOutputWithContext(ctx context.Context) TriggerPredicateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPredicateOutput)
}

func (i TriggerPredicateArgs) ToTriggerPredicatePtrOutput() TriggerPredicatePtrOutput {
	return i.ToTriggerPredicatePtrOutputWithContext(context.Background())
}

func (i TriggerPredicateArgs) ToTriggerPredicatePtrOutputWithContext(ctx context.Context) TriggerPredicatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPredicateOutput).ToTriggerPredicatePtrOutputWithContext(ctx)
}

// TriggerPredicatePtrInput is an input type that accepts TriggerPredicateArgs, TriggerPredicatePtr and TriggerPredicatePtrOutput values.
// You can construct a concrete instance of `TriggerPredicatePtrInput` via:
//
//          TriggerPredicateArgs{...}
//
//  or:
//
//          nil
type TriggerPredicatePtrInput interface {
	pulumi.Input

	ToTriggerPredicatePtrOutput() TriggerPredicatePtrOutput
	ToTriggerPredicatePtrOutputWithContext(context.Context) TriggerPredicatePtrOutput
}

type triggerPredicatePtrType TriggerPredicateArgs

func TriggerPredicatePtr(v *TriggerPredicateArgs) TriggerPredicatePtrInput {
	return (*triggerPredicatePtrType)(v)
}

func (*triggerPredicatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerPredicate)(nil)).Elem()
}

func (i *triggerPredicatePtrType) ToTriggerPredicatePtrOutput() TriggerPredicatePtrOutput {
	return i.ToTriggerPredicatePtrOutputWithContext(context.Background())
}

func (i *triggerPredicatePtrType) ToTriggerPredicatePtrOutputWithContext(ctx context.Context) TriggerPredicatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPredicatePtrOutput)
}

type TriggerPredicateOutput struct{ *pulumi.OutputState }

func (TriggerPredicateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerPredicate)(nil)).Elem()
}

func (o TriggerPredicateOutput) ToTriggerPredicateOutput() TriggerPredicateOutput {
	return o
}

func (o TriggerPredicateOutput) ToTriggerPredicateOutputWithContext(ctx context.Context) TriggerPredicateOutput {
	return o
}

func (o TriggerPredicateOutput) ToTriggerPredicatePtrOutput() TriggerPredicatePtrOutput {
	return o.ToTriggerPredicatePtrOutputWithContext(context.Background())
}

func (o TriggerPredicateOutput) ToTriggerPredicatePtrOutputWithContext(ctx context.Context) TriggerPredicatePtrOutput {
	return o.ApplyT(func(v TriggerPredicate) *TriggerPredicate {
		return &v
	}).(TriggerPredicatePtrOutput)
}
func (o TriggerPredicateOutput) Conditions() TriggerPredicateConditionArrayOutput {
	return o.ApplyT(func(v TriggerPredicate) []TriggerPredicateCondition { return v.Conditions }).(TriggerPredicateConditionArrayOutput)
}

func (o TriggerPredicateOutput) Logical() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerPredicate) *string { return v.Logical }).(pulumi.StringPtrOutput)
}

type TriggerPredicatePtrOutput struct{ *pulumi.OutputState }

func (TriggerPredicatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerPredicate)(nil)).Elem()
}

func (o TriggerPredicatePtrOutput) ToTriggerPredicatePtrOutput() TriggerPredicatePtrOutput {
	return o
}

func (o TriggerPredicatePtrOutput) ToTriggerPredicatePtrOutputWithContext(ctx context.Context) TriggerPredicatePtrOutput {
	return o
}

func (o TriggerPredicatePtrOutput) Elem() TriggerPredicateOutput {
	return o.ApplyT(func(v *TriggerPredicate) TriggerPredicate { return *v }).(TriggerPredicateOutput)
}

func (o TriggerPredicatePtrOutput) Conditions() TriggerPredicateConditionArrayOutput {
	return o.ApplyT(func(v *TriggerPredicate) []TriggerPredicateCondition {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(TriggerPredicateConditionArrayOutput)
}

func (o TriggerPredicatePtrOutput) Logical() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TriggerPredicate) *string {
		if v == nil {
			return nil
		}
		return v.Logical
	}).(pulumi.StringPtrOutput)
}

type TriggerPredicateCondition struct {
	CrawlState      *string `pulumi:"crawlState"`
	CrawlerName     *string `pulumi:"crawlerName"`
	JobName         *string `pulumi:"jobName"`
	LogicalOperator *string `pulumi:"logicalOperator"`
	State           *string `pulumi:"state"`
}

// TriggerPredicateConditionInput is an input type that accepts TriggerPredicateConditionArgs and TriggerPredicateConditionOutput values.
// You can construct a concrete instance of `TriggerPredicateConditionInput` via:
//
//          TriggerPredicateConditionArgs{...}
type TriggerPredicateConditionInput interface {
	pulumi.Input

	ToTriggerPredicateConditionOutput() TriggerPredicateConditionOutput
	ToTriggerPredicateConditionOutputWithContext(context.Context) TriggerPredicateConditionOutput
}

type TriggerPredicateConditionArgs struct {
	CrawlState      pulumi.StringPtrInput `pulumi:"crawlState"`
	CrawlerName     pulumi.StringPtrInput `pulumi:"crawlerName"`
	JobName         pulumi.StringPtrInput `pulumi:"jobName"`
	LogicalOperator pulumi.StringPtrInput `pulumi:"logicalOperator"`
	State           pulumi.StringPtrInput `pulumi:"state"`
}

func (TriggerPredicateConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerPredicateCondition)(nil)).Elem()
}

func (i TriggerPredicateConditionArgs) ToTriggerPredicateConditionOutput() TriggerPredicateConditionOutput {
	return i.ToTriggerPredicateConditionOutputWithContext(context.Background())
}

func (i TriggerPredicateConditionArgs) ToTriggerPredicateConditionOutputWithContext(ctx context.Context) TriggerPredicateConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPredicateConditionOutput)
}

// TriggerPredicateConditionArrayInput is an input type that accepts TriggerPredicateConditionArray and TriggerPredicateConditionArrayOutput values.
// You can construct a concrete instance of `TriggerPredicateConditionArrayInput` via:
//
//          TriggerPredicateConditionArray{ TriggerPredicateConditionArgs{...} }
type TriggerPredicateConditionArrayInput interface {
	pulumi.Input

	ToTriggerPredicateConditionArrayOutput() TriggerPredicateConditionArrayOutput
	ToTriggerPredicateConditionArrayOutputWithContext(context.Context) TriggerPredicateConditionArrayOutput
}

type TriggerPredicateConditionArray []TriggerPredicateConditionInput

func (TriggerPredicateConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerPredicateCondition)(nil)).Elem()
}

func (i TriggerPredicateConditionArray) ToTriggerPredicateConditionArrayOutput() TriggerPredicateConditionArrayOutput {
	return i.ToTriggerPredicateConditionArrayOutputWithContext(context.Background())
}

func (i TriggerPredicateConditionArray) ToTriggerPredicateConditionArrayOutputWithContext(ctx context.Context) TriggerPredicateConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerPredicateConditionArrayOutput)
}

type TriggerPredicateConditionOutput struct{ *pulumi.OutputState }

func (TriggerPredicateConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerPredicateCondition)(nil)).Elem()
}

func (o TriggerPredicateConditionOutput) ToTriggerPredicateConditionOutput() TriggerPredicateConditionOutput {
	return o
}

func (o TriggerPredicateConditionOutput) ToTriggerPredicateConditionOutputWithContext(ctx context.Context) TriggerPredicateConditionOutput {
	return o
}

func (o TriggerPredicateConditionOutput) CrawlState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerPredicateCondition) *string { return v.CrawlState }).(pulumi.StringPtrOutput)
}

func (o TriggerPredicateConditionOutput) CrawlerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerPredicateCondition) *string { return v.CrawlerName }).(pulumi.StringPtrOutput)
}

func (o TriggerPredicateConditionOutput) JobName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerPredicateCondition) *string { return v.JobName }).(pulumi.StringPtrOutput)
}

func (o TriggerPredicateConditionOutput) LogicalOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerPredicateCondition) *string { return v.LogicalOperator }).(pulumi.StringPtrOutput)
}

func (o TriggerPredicateConditionOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TriggerPredicateCondition) *string { return v.State }).(pulumi.StringPtrOutput)
}

type TriggerPredicateConditionArrayOutput struct{ *pulumi.OutputState }

func (TriggerPredicateConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerPredicateCondition)(nil)).Elem()
}

func (o TriggerPredicateConditionArrayOutput) ToTriggerPredicateConditionArrayOutput() TriggerPredicateConditionArrayOutput {
	return o
}

func (o TriggerPredicateConditionArrayOutput) ToTriggerPredicateConditionArrayOutputWithContext(ctx context.Context) TriggerPredicateConditionArrayOutput {
	return o
}

func (o TriggerPredicateConditionArrayOutput) Index(i pulumi.IntInput) TriggerPredicateConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TriggerPredicateCondition {
		return vs[0].([]TriggerPredicateCondition)[vs[1].(int)]
	}).(TriggerPredicateConditionOutput)
}

type GetScriptDagEdge struct {
	Source          string  `pulumi:"source"`
	Target          string  `pulumi:"target"`
	TargetParameter *string `pulumi:"targetParameter"`
}

// GetScriptDagEdgeInput is an input type that accepts GetScriptDagEdgeArgs and GetScriptDagEdgeOutput values.
// You can construct a concrete instance of `GetScriptDagEdgeInput` via:
//
//          GetScriptDagEdgeArgs{...}
type GetScriptDagEdgeInput interface {
	pulumi.Input

	ToGetScriptDagEdgeOutput() GetScriptDagEdgeOutput
	ToGetScriptDagEdgeOutputWithContext(context.Context) GetScriptDagEdgeOutput
}

type GetScriptDagEdgeArgs struct {
	Source          pulumi.StringInput    `pulumi:"source"`
	Target          pulumi.StringInput    `pulumi:"target"`
	TargetParameter pulumi.StringPtrInput `pulumi:"targetParameter"`
}

func (GetScriptDagEdgeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptDagEdge)(nil)).Elem()
}

func (i GetScriptDagEdgeArgs) ToGetScriptDagEdgeOutput() GetScriptDagEdgeOutput {
	return i.ToGetScriptDagEdgeOutputWithContext(context.Background())
}

func (i GetScriptDagEdgeArgs) ToGetScriptDagEdgeOutputWithContext(ctx context.Context) GetScriptDagEdgeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptDagEdgeOutput)
}

// GetScriptDagEdgeArrayInput is an input type that accepts GetScriptDagEdgeArray and GetScriptDagEdgeArrayOutput values.
// You can construct a concrete instance of `GetScriptDagEdgeArrayInput` via:
//
//          GetScriptDagEdgeArray{ GetScriptDagEdgeArgs{...} }
type GetScriptDagEdgeArrayInput interface {
	pulumi.Input

	ToGetScriptDagEdgeArrayOutput() GetScriptDagEdgeArrayOutput
	ToGetScriptDagEdgeArrayOutputWithContext(context.Context) GetScriptDagEdgeArrayOutput
}

type GetScriptDagEdgeArray []GetScriptDagEdgeInput

func (GetScriptDagEdgeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptDagEdge)(nil)).Elem()
}

func (i GetScriptDagEdgeArray) ToGetScriptDagEdgeArrayOutput() GetScriptDagEdgeArrayOutput {
	return i.ToGetScriptDagEdgeArrayOutputWithContext(context.Background())
}

func (i GetScriptDagEdgeArray) ToGetScriptDagEdgeArrayOutputWithContext(ctx context.Context) GetScriptDagEdgeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptDagEdgeArrayOutput)
}

type GetScriptDagEdgeOutput struct{ *pulumi.OutputState }

func (GetScriptDagEdgeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptDagEdge)(nil)).Elem()
}

func (o GetScriptDagEdgeOutput) ToGetScriptDagEdgeOutput() GetScriptDagEdgeOutput {
	return o
}

func (o GetScriptDagEdgeOutput) ToGetScriptDagEdgeOutputWithContext(ctx context.Context) GetScriptDagEdgeOutput {
	return o
}

func (o GetScriptDagEdgeOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptDagEdge) string { return v.Source }).(pulumi.StringOutput)
}

func (o GetScriptDagEdgeOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptDagEdge) string { return v.Target }).(pulumi.StringOutput)
}

func (o GetScriptDagEdgeOutput) TargetParameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetScriptDagEdge) *string { return v.TargetParameter }).(pulumi.StringPtrOutput)
}

type GetScriptDagEdgeArrayOutput struct{ *pulumi.OutputState }

func (GetScriptDagEdgeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptDagEdge)(nil)).Elem()
}

func (o GetScriptDagEdgeArrayOutput) ToGetScriptDagEdgeArrayOutput() GetScriptDagEdgeArrayOutput {
	return o
}

func (o GetScriptDagEdgeArrayOutput) ToGetScriptDagEdgeArrayOutputWithContext(ctx context.Context) GetScriptDagEdgeArrayOutput {
	return o
}

func (o GetScriptDagEdgeArrayOutput) Index(i pulumi.IntInput) GetScriptDagEdgeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetScriptDagEdge {
		return vs[0].([]GetScriptDagEdge)[vs[1].(int)]
	}).(GetScriptDagEdgeOutput)
}

type GetScriptDagNode struct {
	Args       []GetScriptDagNodeArg `pulumi:"args"`
	Id         string                `pulumi:"id"`
	LineNumber *int                  `pulumi:"lineNumber"`
	NodeType   string                `pulumi:"nodeType"`
}

// GetScriptDagNodeInput is an input type that accepts GetScriptDagNodeArgs and GetScriptDagNodeOutput values.
// You can construct a concrete instance of `GetScriptDagNodeInput` via:
//
//          GetScriptDagNodeArgs{...}
type GetScriptDagNodeInput interface {
	pulumi.Input

	ToGetScriptDagNodeOutput() GetScriptDagNodeOutput
	ToGetScriptDagNodeOutputWithContext(context.Context) GetScriptDagNodeOutput
}

type GetScriptDagNodeArgs struct {
	Args       GetScriptDagNodeArgArrayInput `pulumi:"args"`
	Id         pulumi.StringInput            `pulumi:"id"`
	LineNumber pulumi.IntPtrInput            `pulumi:"lineNumber"`
	NodeType   pulumi.StringInput            `pulumi:"nodeType"`
}

func (GetScriptDagNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptDagNode)(nil)).Elem()
}

func (i GetScriptDagNodeArgs) ToGetScriptDagNodeOutput() GetScriptDagNodeOutput {
	return i.ToGetScriptDagNodeOutputWithContext(context.Background())
}

func (i GetScriptDagNodeArgs) ToGetScriptDagNodeOutputWithContext(ctx context.Context) GetScriptDagNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptDagNodeOutput)
}

// GetScriptDagNodeArrayInput is an input type that accepts GetScriptDagNodeArray and GetScriptDagNodeArrayOutput values.
// You can construct a concrete instance of `GetScriptDagNodeArrayInput` via:
//
//          GetScriptDagNodeArray{ GetScriptDagNodeArgs{...} }
type GetScriptDagNodeArrayInput interface {
	pulumi.Input

	ToGetScriptDagNodeArrayOutput() GetScriptDagNodeArrayOutput
	ToGetScriptDagNodeArrayOutputWithContext(context.Context) GetScriptDagNodeArrayOutput
}

type GetScriptDagNodeArray []GetScriptDagNodeInput

func (GetScriptDagNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptDagNode)(nil)).Elem()
}

func (i GetScriptDagNodeArray) ToGetScriptDagNodeArrayOutput() GetScriptDagNodeArrayOutput {
	return i.ToGetScriptDagNodeArrayOutputWithContext(context.Background())
}

func (i GetScriptDagNodeArray) ToGetScriptDagNodeArrayOutputWithContext(ctx context.Context) GetScriptDagNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptDagNodeArrayOutput)
}

type GetScriptDagNodeOutput struct{ *pulumi.OutputState }

func (GetScriptDagNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptDagNode)(nil)).Elem()
}

func (o GetScriptDagNodeOutput) ToGetScriptDagNodeOutput() GetScriptDagNodeOutput {
	return o
}

func (o GetScriptDagNodeOutput) ToGetScriptDagNodeOutputWithContext(ctx context.Context) GetScriptDagNodeOutput {
	return o
}

func (o GetScriptDagNodeOutput) Args() GetScriptDagNodeArgArrayOutput {
	return o.ApplyT(func(v GetScriptDagNode) []GetScriptDagNodeArg { return v.Args }).(GetScriptDagNodeArgArrayOutput)
}

func (o GetScriptDagNodeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptDagNode) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetScriptDagNodeOutput) LineNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetScriptDagNode) *int { return v.LineNumber }).(pulumi.IntPtrOutput)
}

func (o GetScriptDagNodeOutput) NodeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptDagNode) string { return v.NodeType }).(pulumi.StringOutput)
}

type GetScriptDagNodeArrayOutput struct{ *pulumi.OutputState }

func (GetScriptDagNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptDagNode)(nil)).Elem()
}

func (o GetScriptDagNodeArrayOutput) ToGetScriptDagNodeArrayOutput() GetScriptDagNodeArrayOutput {
	return o
}

func (o GetScriptDagNodeArrayOutput) ToGetScriptDagNodeArrayOutputWithContext(ctx context.Context) GetScriptDagNodeArrayOutput {
	return o
}

func (o GetScriptDagNodeArrayOutput) Index(i pulumi.IntInput) GetScriptDagNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetScriptDagNode {
		return vs[0].([]GetScriptDagNode)[vs[1].(int)]
	}).(GetScriptDagNodeOutput)
}

type GetScriptDagNodeArg struct {
	Name  string `pulumi:"name"`
	Param *bool  `pulumi:"param"`
	Value string `pulumi:"value"`
}

// GetScriptDagNodeArgInput is an input type that accepts GetScriptDagNodeArgArgs and GetScriptDagNodeArgOutput values.
// You can construct a concrete instance of `GetScriptDagNodeArgInput` via:
//
//          GetScriptDagNodeArgArgs{...}
type GetScriptDagNodeArgInput interface {
	pulumi.Input

	ToGetScriptDagNodeArgOutput() GetScriptDagNodeArgOutput
	ToGetScriptDagNodeArgOutputWithContext(context.Context) GetScriptDagNodeArgOutput
}

type GetScriptDagNodeArgArgs struct {
	Name  pulumi.StringInput  `pulumi:"name"`
	Param pulumi.BoolPtrInput `pulumi:"param"`
	Value pulumi.StringInput  `pulumi:"value"`
}

func (GetScriptDagNodeArgArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptDagNodeArg)(nil)).Elem()
}

func (i GetScriptDagNodeArgArgs) ToGetScriptDagNodeArgOutput() GetScriptDagNodeArgOutput {
	return i.ToGetScriptDagNodeArgOutputWithContext(context.Background())
}

func (i GetScriptDagNodeArgArgs) ToGetScriptDagNodeArgOutputWithContext(ctx context.Context) GetScriptDagNodeArgOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptDagNodeArgOutput)
}

// GetScriptDagNodeArgArrayInput is an input type that accepts GetScriptDagNodeArgArray and GetScriptDagNodeArgArrayOutput values.
// You can construct a concrete instance of `GetScriptDagNodeArgArrayInput` via:
//
//          GetScriptDagNodeArgArray{ GetScriptDagNodeArgArgs{...} }
type GetScriptDagNodeArgArrayInput interface {
	pulumi.Input

	ToGetScriptDagNodeArgArrayOutput() GetScriptDagNodeArgArrayOutput
	ToGetScriptDagNodeArgArrayOutputWithContext(context.Context) GetScriptDagNodeArgArrayOutput
}

type GetScriptDagNodeArgArray []GetScriptDagNodeArgInput

func (GetScriptDagNodeArgArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptDagNodeArg)(nil)).Elem()
}

func (i GetScriptDagNodeArgArray) ToGetScriptDagNodeArgArrayOutput() GetScriptDagNodeArgArrayOutput {
	return i.ToGetScriptDagNodeArgArrayOutputWithContext(context.Background())
}

func (i GetScriptDagNodeArgArray) ToGetScriptDagNodeArgArrayOutputWithContext(ctx context.Context) GetScriptDagNodeArgArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScriptDagNodeArgArrayOutput)
}

type GetScriptDagNodeArgOutput struct{ *pulumi.OutputState }

func (GetScriptDagNodeArgOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScriptDagNodeArg)(nil)).Elem()
}

func (o GetScriptDagNodeArgOutput) ToGetScriptDagNodeArgOutput() GetScriptDagNodeArgOutput {
	return o
}

func (o GetScriptDagNodeArgOutput) ToGetScriptDagNodeArgOutputWithContext(ctx context.Context) GetScriptDagNodeArgOutput {
	return o
}

func (o GetScriptDagNodeArgOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptDagNodeArg) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetScriptDagNodeArgOutput) Param() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetScriptDagNodeArg) *bool { return v.Param }).(pulumi.BoolPtrOutput)
}

func (o GetScriptDagNodeArgOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetScriptDagNodeArg) string { return v.Value }).(pulumi.StringOutput)
}

type GetScriptDagNodeArgArrayOutput struct{ *pulumi.OutputState }

func (GetScriptDagNodeArgArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScriptDagNodeArg)(nil)).Elem()
}

func (o GetScriptDagNodeArgArrayOutput) ToGetScriptDagNodeArgArrayOutput() GetScriptDagNodeArgArrayOutput {
	return o
}

func (o GetScriptDagNodeArgArrayOutput) ToGetScriptDagNodeArgArrayOutputWithContext(ctx context.Context) GetScriptDagNodeArgArrayOutput {
	return o
}

func (o GetScriptDagNodeArgArrayOutput) Index(i pulumi.IntInput) GetScriptDagNodeArgOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetScriptDagNodeArg {
		return vs[0].([]GetScriptDagNodeArg)[vs[1].(int)]
	}).(GetScriptDagNodeArgOutput)
}

func init() {
	pulumi.RegisterOutputType(CatalogTablePartitionKeyOutput{})
	pulumi.RegisterOutputType(CatalogTablePartitionKeyArrayOutput{})
	pulumi.RegisterOutputType(CatalogTableStorageDescriptorOutput{})
	pulumi.RegisterOutputType(CatalogTableStorageDescriptorPtrOutput{})
	pulumi.RegisterOutputType(CatalogTableStorageDescriptorColumnOutput{})
	pulumi.RegisterOutputType(CatalogTableStorageDescriptorColumnArrayOutput{})
	pulumi.RegisterOutputType(CatalogTableStorageDescriptorSerDeInfoOutput{})
	pulumi.RegisterOutputType(CatalogTableStorageDescriptorSerDeInfoPtrOutput{})
	pulumi.RegisterOutputType(CatalogTableStorageDescriptorSkewedInfoOutput{})
	pulumi.RegisterOutputType(CatalogTableStorageDescriptorSkewedInfoPtrOutput{})
	pulumi.RegisterOutputType(CatalogTableStorageDescriptorSortColumnOutput{})
	pulumi.RegisterOutputType(CatalogTableStorageDescriptorSortColumnArrayOutput{})
	pulumi.RegisterOutputType(ClassifierCsvClassifierOutput{})
	pulumi.RegisterOutputType(ClassifierCsvClassifierPtrOutput{})
	pulumi.RegisterOutputType(ClassifierGrokClassifierOutput{})
	pulumi.RegisterOutputType(ClassifierGrokClassifierPtrOutput{})
	pulumi.RegisterOutputType(ClassifierJsonClassifierOutput{})
	pulumi.RegisterOutputType(ClassifierJsonClassifierPtrOutput{})
	pulumi.RegisterOutputType(ClassifierXmlClassifierOutput{})
	pulumi.RegisterOutputType(ClassifierXmlClassifierPtrOutput{})
	pulumi.RegisterOutputType(ConnectionPhysicalConnectionRequirementsOutput{})
	pulumi.RegisterOutputType(ConnectionPhysicalConnectionRequirementsPtrOutput{})
	pulumi.RegisterOutputType(CrawlerCatalogTargetOutput{})
	pulumi.RegisterOutputType(CrawlerCatalogTargetArrayOutput{})
	pulumi.RegisterOutputType(CrawlerDynamodbTargetOutput{})
	pulumi.RegisterOutputType(CrawlerDynamodbTargetArrayOutput{})
	pulumi.RegisterOutputType(CrawlerJdbcTargetOutput{})
	pulumi.RegisterOutputType(CrawlerJdbcTargetArrayOutput{})
	pulumi.RegisterOutputType(CrawlerS3TargetOutput{})
	pulumi.RegisterOutputType(CrawlerS3TargetArrayOutput{})
	pulumi.RegisterOutputType(CrawlerSchemaChangePolicyOutput{})
	pulumi.RegisterOutputType(CrawlerSchemaChangePolicyPtrOutput{})
	pulumi.RegisterOutputType(JobCommandOutput{})
	pulumi.RegisterOutputType(JobCommandPtrOutput{})
	pulumi.RegisterOutputType(JobExecutionPropertyOutput{})
	pulumi.RegisterOutputType(JobExecutionPropertyPtrOutput{})
	pulumi.RegisterOutputType(JobNotificationPropertyOutput{})
	pulumi.RegisterOutputType(JobNotificationPropertyPtrOutput{})
	pulumi.RegisterOutputType(SecurityConfigurationEncryptionConfigurationOutput{})
	pulumi.RegisterOutputType(SecurityConfigurationEncryptionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionOutput{})
	pulumi.RegisterOutputType(SecurityConfigurationEncryptionConfigurationCloudwatchEncryptionPtrOutput{})
	pulumi.RegisterOutputType(SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionOutput{})
	pulumi.RegisterOutputType(SecurityConfigurationEncryptionConfigurationJobBookmarksEncryptionPtrOutput{})
	pulumi.RegisterOutputType(SecurityConfigurationEncryptionConfigurationS3EncryptionOutput{})
	pulumi.RegisterOutputType(SecurityConfigurationEncryptionConfigurationS3EncryptionPtrOutput{})
	pulumi.RegisterOutputType(TriggerActionOutput{})
	pulumi.RegisterOutputType(TriggerActionArrayOutput{})
	pulumi.RegisterOutputType(TriggerPredicateOutput{})
	pulumi.RegisterOutputType(TriggerPredicatePtrOutput{})
	pulumi.RegisterOutputType(TriggerPredicateConditionOutput{})
	pulumi.RegisterOutputType(TriggerPredicateConditionArrayOutput{})
	pulumi.RegisterOutputType(GetScriptDagEdgeOutput{})
	pulumi.RegisterOutputType(GetScriptDagEdgeArrayOutput{})
	pulumi.RegisterOutputType(GetScriptDagNodeOutput{})
	pulumi.RegisterOutputType(GetScriptDagNodeArrayOutput{})
	pulumi.RegisterOutputType(GetScriptDagNodeArgOutput{})
	pulumi.RegisterOutputType(GetScriptDagNodeArgArrayOutput{})
}
