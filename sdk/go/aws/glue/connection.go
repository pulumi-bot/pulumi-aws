// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package glue

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Connection struct {
	pulumi.CustomResourceState

	Arn                            pulumi.StringOutput                               `pulumi:"arn"`
	CatalogId                      pulumi.StringOutput                               `pulumi:"catalogId"`
	ConnectionProperties           pulumi.StringMapOutput                            `pulumi:"connectionProperties"`
	ConnectionType                 pulumi.StringPtrOutput                            `pulumi:"connectionType"`
	Description                    pulumi.StringPtrOutput                            `pulumi:"description"`
	MatchCriterias                 pulumi.StringArrayOutput                          `pulumi:"matchCriterias"`
	Name                           pulumi.StringOutput                               `pulumi:"name"`
	PhysicalConnectionRequirements ConnectionPhysicalConnectionRequirementsPtrOutput `pulumi:"physicalConnectionRequirements"`
}

// NewConnection registers a new resource with the given unique name, arguments, and options.
func NewConnection(ctx *pulumi.Context,
	name string, args *ConnectionArgs, opts ...pulumi.ResourceOption) (*Connection, error) {
	if args == nil || args.ConnectionProperties == nil {
		return nil, errors.New("missing required argument 'ConnectionProperties'")
	}
	if args == nil {
		args = &ConnectionArgs{}
	}
	var resource Connection
	err := ctx.RegisterResource("aws:glue/connection:Connection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConnection gets an existing Connection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConnectionState, opts ...pulumi.ResourceOption) (*Connection, error) {
	var resource Connection
	err := ctx.ReadResource("aws:glue/connection:Connection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Connection resources.
type connectionState struct {
	Arn                            *string                                   `pulumi:"arn"`
	CatalogId                      *string                                   `pulumi:"catalogId"`
	ConnectionProperties           map[string]string                         `pulumi:"connectionProperties"`
	ConnectionType                 *string                                   `pulumi:"connectionType"`
	Description                    *string                                   `pulumi:"description"`
	MatchCriterias                 []string                                  `pulumi:"matchCriterias"`
	Name                           *string                                   `pulumi:"name"`
	PhysicalConnectionRequirements *ConnectionPhysicalConnectionRequirements `pulumi:"physicalConnectionRequirements"`
}

type ConnectionState struct {
	Arn                            pulumi.StringPtrInput
	CatalogId                      pulumi.StringPtrInput
	ConnectionProperties           pulumi.StringMapInput
	ConnectionType                 pulumi.StringPtrInput
	Description                    pulumi.StringPtrInput
	MatchCriterias                 pulumi.StringArrayInput
	Name                           pulumi.StringPtrInput
	PhysicalConnectionRequirements ConnectionPhysicalConnectionRequirementsPtrInput
}

func (ConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionState)(nil)).Elem()
}

type connectionArgs struct {
	CatalogId                      *string                                   `pulumi:"catalogId"`
	ConnectionProperties           map[string]string                         `pulumi:"connectionProperties"`
	ConnectionType                 *string                                   `pulumi:"connectionType"`
	Description                    *string                                   `pulumi:"description"`
	MatchCriterias                 []string                                  `pulumi:"matchCriterias"`
	Name                           *string                                   `pulumi:"name"`
	PhysicalConnectionRequirements *ConnectionPhysicalConnectionRequirements `pulumi:"physicalConnectionRequirements"`
}

// The set of arguments for constructing a Connection resource.
type ConnectionArgs struct {
	CatalogId                      pulumi.StringPtrInput
	ConnectionProperties           pulumi.StringMapInput
	ConnectionType                 pulumi.StringPtrInput
	Description                    pulumi.StringPtrInput
	MatchCriterias                 pulumi.StringArrayInput
	Name                           pulumi.StringPtrInput
	PhysicalConnectionRequirements ConnectionPhysicalConnectionRequirementsPtrInput
}

func (ConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionArgs)(nil)).Elem()
}
