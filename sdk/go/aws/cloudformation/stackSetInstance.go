// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudformation

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/cloudformation_stack_set_instance.html.markdown.
type StackSetInstance struct {
	s *pulumi.ResourceState
}

// NewStackSetInstance registers a new resource with the given unique name, arguments, and options.
func NewStackSetInstance(ctx *pulumi.Context,
	name string, args *StackSetInstanceArgs, opts ...pulumi.ResourceOpt) (*StackSetInstance, error) {
	if args == nil || args.StackSetName == nil {
		return nil, errors.New("missing required argument 'StackSetName'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["accountId"] = nil
		inputs["parameterOverrides"] = nil
		inputs["region"] = nil
		inputs["retainStack"] = nil
		inputs["stackSetName"] = nil
	} else {
		inputs["accountId"] = args.AccountId
		inputs["parameterOverrides"] = args.ParameterOverrides
		inputs["region"] = args.Region
		inputs["retainStack"] = args.RetainStack
		inputs["stackSetName"] = args.StackSetName
	}
	inputs["stackId"] = nil
	s, err := ctx.RegisterResource("aws:cloudformation/stackSetInstance:StackSetInstance", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &StackSetInstance{s: s}, nil
}

// GetStackSetInstance gets an existing StackSetInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStackSetInstance(ctx *pulumi.Context,
	name string, id pulumi.ID, state *StackSetInstanceState, opts ...pulumi.ResourceOpt) (*StackSetInstance, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["accountId"] = state.AccountId
		inputs["parameterOverrides"] = state.ParameterOverrides
		inputs["region"] = state.Region
		inputs["retainStack"] = state.RetainStack
		inputs["stackId"] = state.StackId
		inputs["stackSetName"] = state.StackSetName
	}
	s, err := ctx.ReadResource("aws:cloudformation/stackSetInstance:StackSetInstance", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &StackSetInstance{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *StackSetInstance) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *StackSetInstance) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// Target AWS Account ID to create a Stack based on the Stack Set. Defaults to current account.
func (r *StackSetInstance) AccountId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["accountId"])
}

// Key-value map of input parameters to override from the Stack Set for this Instance.
func (r *StackSetInstance) ParameterOverrides() *pulumi.MapOutput {
	return (*pulumi.MapOutput)(r.s.State["parameterOverrides"])
}

// Target AWS Region to create a Stack based on the Stack Set. Defaults to current region.
func (r *StackSetInstance) Region() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["region"])
}

func (r *StackSetInstance) RetainStack() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["retainStack"])
}

// Stack identifier
func (r *StackSetInstance) StackId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["stackId"])
}

// Name of the Stack Set.
func (r *StackSetInstance) StackSetName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["stackSetName"])
}

// Input properties used for looking up and filtering StackSetInstance resources.
type StackSetInstanceState struct {
	// Target AWS Account ID to create a Stack based on the Stack Set. Defaults to current account.
	AccountId interface{}
	// Key-value map of input parameters to override from the Stack Set for this Instance.
	ParameterOverrides interface{}
	// Target AWS Region to create a Stack based on the Stack Set. Defaults to current region.
	Region interface{}
	RetainStack interface{}
	// Stack identifier
	StackId interface{}
	// Name of the Stack Set.
	StackSetName interface{}
}

// The set of arguments for constructing a StackSetInstance resource.
type StackSetInstanceArgs struct {
	// Target AWS Account ID to create a Stack based on the Stack Set. Defaults to current account.
	AccountId interface{}
	// Key-value map of input parameters to override from the Stack Set for this Instance.
	ParameterOverrides interface{}
	// Target AWS Region to create a Stack based on the Stack Set. Defaults to current region.
	Region interface{}
	RetainStack interface{}
	// Name of the Stack Set.
	StackSetName interface{}
}
