// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudformation

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type StackSetInstance struct {
	pulumi.CustomResourceState

	AccountId          pulumi.StringOutput    `pulumi:"accountId"`
	ParameterOverrides pulumi.StringMapOutput `pulumi:"parameterOverrides"`
	Region             pulumi.StringOutput    `pulumi:"region"`
	RetainStack        pulumi.BoolPtrOutput   `pulumi:"retainStack"`
	StackId            pulumi.StringOutput    `pulumi:"stackId"`
	StackSetName       pulumi.StringOutput    `pulumi:"stackSetName"`
}

// NewStackSetInstance registers a new resource with the given unique name, arguments, and options.
func NewStackSetInstance(ctx *pulumi.Context,
	name string, args *StackSetInstanceArgs, opts ...pulumi.ResourceOption) (*StackSetInstance, error) {
	if args == nil || args.StackSetName == nil {
		return nil, errors.New("missing required argument 'StackSetName'")
	}
	if args == nil {
		args = &StackSetInstanceArgs{}
	}
	var resource StackSetInstance
	err := ctx.RegisterResource("aws:cloudformation/stackSetInstance:StackSetInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStackSetInstance gets an existing StackSetInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStackSetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StackSetInstanceState, opts ...pulumi.ResourceOption) (*StackSetInstance, error) {
	var resource StackSetInstance
	err := ctx.ReadResource("aws:cloudformation/stackSetInstance:StackSetInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StackSetInstance resources.
type stackSetInstanceState struct {
	AccountId          *string           `pulumi:"accountId"`
	ParameterOverrides map[string]string `pulumi:"parameterOverrides"`
	Region             *string           `pulumi:"region"`
	RetainStack        *bool             `pulumi:"retainStack"`
	StackId            *string           `pulumi:"stackId"`
	StackSetName       *string           `pulumi:"stackSetName"`
}

type StackSetInstanceState struct {
	AccountId          pulumi.StringPtrInput
	ParameterOverrides pulumi.StringMapInput
	Region             pulumi.StringPtrInput
	RetainStack        pulumi.BoolPtrInput
	StackId            pulumi.StringPtrInput
	StackSetName       pulumi.StringPtrInput
}

func (StackSetInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*stackSetInstanceState)(nil)).Elem()
}

type stackSetInstanceArgs struct {
	AccountId          *string           `pulumi:"accountId"`
	ParameterOverrides map[string]string `pulumi:"parameterOverrides"`
	Region             *string           `pulumi:"region"`
	RetainStack        *bool             `pulumi:"retainStack"`
	StackSetName       string            `pulumi:"stackSetName"`
}

// The set of arguments for constructing a StackSetInstance resource.
type StackSetInstanceArgs struct {
	AccountId          pulumi.StringPtrInput
	ParameterOverrides pulumi.StringMapInput
	Region             pulumi.StringPtrInput
	RetainStack        pulumi.BoolPtrInput
	StackSetName       pulumi.StringInput
}

func (StackSetInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*stackSetInstanceArgs)(nil)).Elem()
}
