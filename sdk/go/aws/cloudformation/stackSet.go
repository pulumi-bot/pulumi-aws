// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudformation

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type StackSet struct {
	pulumi.CustomResourceState

	AdministrationRoleArn pulumi.StringOutput      `pulumi:"administrationRoleArn"`
	Arn                   pulumi.StringOutput      `pulumi:"arn"`
	Capabilities          pulumi.StringArrayOutput `pulumi:"capabilities"`
	Description           pulumi.StringPtrOutput   `pulumi:"description"`
	ExecutionRoleName     pulumi.StringPtrOutput   `pulumi:"executionRoleName"`
	Name                  pulumi.StringOutput      `pulumi:"name"`
	Parameters            pulumi.StringMapOutput   `pulumi:"parameters"`
	StackSetId            pulumi.StringOutput      `pulumi:"stackSetId"`
	Tags                  pulumi.StringMapOutput   `pulumi:"tags"`
	TemplateBody          pulumi.StringOutput      `pulumi:"templateBody"`
	TemplateUrl           pulumi.StringPtrOutput   `pulumi:"templateUrl"`
}

// NewStackSet registers a new resource with the given unique name, arguments, and options.
func NewStackSet(ctx *pulumi.Context,
	name string, args *StackSetArgs, opts ...pulumi.ResourceOption) (*StackSet, error) {
	if args == nil || args.AdministrationRoleArn == nil {
		return nil, errors.New("missing required argument 'AdministrationRoleArn'")
	}
	if args == nil {
		args = &StackSetArgs{}
	}
	var resource StackSet
	err := ctx.RegisterResource("aws:cloudformation/stackSet:StackSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStackSet gets an existing StackSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStackSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StackSetState, opts ...pulumi.ResourceOption) (*StackSet, error) {
	var resource StackSet
	err := ctx.ReadResource("aws:cloudformation/stackSet:StackSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StackSet resources.
type stackSetState struct {
	AdministrationRoleArn *string           `pulumi:"administrationRoleArn"`
	Arn                   *string           `pulumi:"arn"`
	Capabilities          []string          `pulumi:"capabilities"`
	Description           *string           `pulumi:"description"`
	ExecutionRoleName     *string           `pulumi:"executionRoleName"`
	Name                  *string           `pulumi:"name"`
	Parameters            map[string]string `pulumi:"parameters"`
	StackSetId            *string           `pulumi:"stackSetId"`
	Tags                  map[string]string `pulumi:"tags"`
	TemplateBody          *string           `pulumi:"templateBody"`
	TemplateUrl           *string           `pulumi:"templateUrl"`
}

type StackSetState struct {
	AdministrationRoleArn pulumi.StringPtrInput
	Arn                   pulumi.StringPtrInput
	Capabilities          pulumi.StringArrayInput
	Description           pulumi.StringPtrInput
	ExecutionRoleName     pulumi.StringPtrInput
	Name                  pulumi.StringPtrInput
	Parameters            pulumi.StringMapInput
	StackSetId            pulumi.StringPtrInput
	Tags                  pulumi.StringMapInput
	TemplateBody          pulumi.StringPtrInput
	TemplateUrl           pulumi.StringPtrInput
}

func (StackSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*stackSetState)(nil)).Elem()
}

type stackSetArgs struct {
	AdministrationRoleArn string            `pulumi:"administrationRoleArn"`
	Capabilities          []string          `pulumi:"capabilities"`
	Description           *string           `pulumi:"description"`
	ExecutionRoleName     *string           `pulumi:"executionRoleName"`
	Name                  *string           `pulumi:"name"`
	Parameters            map[string]string `pulumi:"parameters"`
	Tags                  map[string]string `pulumi:"tags"`
	TemplateBody          *string           `pulumi:"templateBody"`
	TemplateUrl           *string           `pulumi:"templateUrl"`
}

// The set of arguments for constructing a StackSet resource.
type StackSetArgs struct {
	AdministrationRoleArn pulumi.StringInput
	Capabilities          pulumi.StringArrayInput
	Description           pulumi.StringPtrInput
	ExecutionRoleName     pulumi.StringPtrInput
	Name                  pulumi.StringPtrInput
	Parameters            pulumi.StringMapInput
	Tags                  pulumi.StringMapInput
	TemplateBody          pulumi.StringPtrInput
	TemplateUrl           pulumi.StringPtrInput
}

func (StackSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*stackSetArgs)(nil)).Elem()
}
