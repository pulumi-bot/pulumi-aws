// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package wafv2

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type RuleGroup struct {
	pulumi.CustomResourceState

	Arn              pulumi.StringOutput             `pulumi:"arn"`
	Capacity         pulumi.IntOutput                `pulumi:"capacity"`
	Description      pulumi.StringPtrOutput          `pulumi:"description"`
	LockToken        pulumi.StringOutput             `pulumi:"lockToken"`
	Name             pulumi.StringOutput             `pulumi:"name"`
	Rules            RuleGroupRuleArrayOutput        `pulumi:"rules"`
	Scope            pulumi.StringOutput             `pulumi:"scope"`
	Tags             pulumi.StringMapOutput          `pulumi:"tags"`
	VisibilityConfig RuleGroupVisibilityConfigOutput `pulumi:"visibilityConfig"`
}

// NewRuleGroup registers a new resource with the given unique name, arguments, and options.
func NewRuleGroup(ctx *pulumi.Context,
	name string, args *RuleGroupArgs, opts ...pulumi.ResourceOption) (*RuleGroup, error) {
	if args == nil || args.Capacity == nil {
		return nil, errors.New("missing required argument 'Capacity'")
	}
	if args == nil || args.Scope == nil {
		return nil, errors.New("missing required argument 'Scope'")
	}
	if args == nil || args.VisibilityConfig == nil {
		return nil, errors.New("missing required argument 'VisibilityConfig'")
	}
	if args == nil {
		args = &RuleGroupArgs{}
	}
	var resource RuleGroup
	err := ctx.RegisterResource("aws:wafv2/ruleGroup:RuleGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRuleGroup gets an existing RuleGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRuleGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RuleGroupState, opts ...pulumi.ResourceOption) (*RuleGroup, error) {
	var resource RuleGroup
	err := ctx.ReadResource("aws:wafv2/ruleGroup:RuleGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RuleGroup resources.
type ruleGroupState struct {
	Arn              *string                    `pulumi:"arn"`
	Capacity         *int                       `pulumi:"capacity"`
	Description      *string                    `pulumi:"description"`
	LockToken        *string                    `pulumi:"lockToken"`
	Name             *string                    `pulumi:"name"`
	Rules            []RuleGroupRule            `pulumi:"rules"`
	Scope            *string                    `pulumi:"scope"`
	Tags             map[string]string          `pulumi:"tags"`
	VisibilityConfig *RuleGroupVisibilityConfig `pulumi:"visibilityConfig"`
}

type RuleGroupState struct {
	Arn              pulumi.StringPtrInput
	Capacity         pulumi.IntPtrInput
	Description      pulumi.StringPtrInput
	LockToken        pulumi.StringPtrInput
	Name             pulumi.StringPtrInput
	Rules            RuleGroupRuleArrayInput
	Scope            pulumi.StringPtrInput
	Tags             pulumi.StringMapInput
	VisibilityConfig RuleGroupVisibilityConfigPtrInput
}

func (RuleGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*ruleGroupState)(nil)).Elem()
}

type ruleGroupArgs struct {
	Capacity         int                       `pulumi:"capacity"`
	Description      *string                   `pulumi:"description"`
	Name             *string                   `pulumi:"name"`
	Rules            []RuleGroupRule           `pulumi:"rules"`
	Scope            string                    `pulumi:"scope"`
	Tags             map[string]string         `pulumi:"tags"`
	VisibilityConfig RuleGroupVisibilityConfig `pulumi:"visibilityConfig"`
}

// The set of arguments for constructing a RuleGroup resource.
type RuleGroupArgs struct {
	Capacity         pulumi.IntInput
	Description      pulumi.StringPtrInput
	Name             pulumi.StringPtrInput
	Rules            RuleGroupRuleArrayInput
	Scope            pulumi.StringInput
	Tags             pulumi.StringMapInput
	VisibilityConfig RuleGroupVisibilityConfigInput
}

func (RuleGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ruleGroupArgs)(nil)).Elem()
}
