// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package applicationloadbalancing

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Deprecated: aws.applicationloadbalancing.TargetGroup has been deprecated in favor of aws.alb.TargetGroup
type TargetGroup struct {
	pulumi.CustomResourceState

	Arn                            pulumi.StringOutput          `pulumi:"arn"`
	ArnSuffix                      pulumi.StringOutput          `pulumi:"arnSuffix"`
	DeregistrationDelay            pulumi.IntPtrOutput          `pulumi:"deregistrationDelay"`
	HealthCheck                    TargetGroupHealthCheckOutput `pulumi:"healthCheck"`
	LambdaMultiValueHeadersEnabled pulumi.BoolPtrOutput         `pulumi:"lambdaMultiValueHeadersEnabled"`
	LoadBalancingAlgorithmType     pulumi.StringOutput          `pulumi:"loadBalancingAlgorithmType"`
	Name                           pulumi.StringOutput          `pulumi:"name"`
	NamePrefix                     pulumi.StringPtrOutput       `pulumi:"namePrefix"`
	Port                           pulumi.IntPtrOutput          `pulumi:"port"`
	Protocol                       pulumi.StringPtrOutput       `pulumi:"protocol"`
	ProxyProtocolV2                pulumi.BoolPtrOutput         `pulumi:"proxyProtocolV2"`
	SlowStart                      pulumi.IntPtrOutput          `pulumi:"slowStart"`
	Stickiness                     TargetGroupStickinessOutput  `pulumi:"stickiness"`
	Tags                           pulumi.StringMapOutput       `pulumi:"tags"`
	TargetType                     pulumi.StringPtrOutput       `pulumi:"targetType"`
	VpcId                          pulumi.StringPtrOutput       `pulumi:"vpcId"`
}

// NewTargetGroup registers a new resource with the given unique name, arguments, and options.
func NewTargetGroup(ctx *pulumi.Context,
	name string, args *TargetGroupArgs, opts ...pulumi.ResourceOption) (*TargetGroup, error) {
	if args == nil {
		args = &TargetGroupArgs{}
	}
	var resource TargetGroup
	err := ctx.RegisterResource("aws:applicationloadbalancing/targetGroup:TargetGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTargetGroup gets an existing TargetGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTargetGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TargetGroupState, opts ...pulumi.ResourceOption) (*TargetGroup, error) {
	var resource TargetGroup
	err := ctx.ReadResource("aws:applicationloadbalancing/targetGroup:TargetGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TargetGroup resources.
type targetGroupState struct {
	Arn                            *string                 `pulumi:"arn"`
	ArnSuffix                      *string                 `pulumi:"arnSuffix"`
	DeregistrationDelay            *int                    `pulumi:"deregistrationDelay"`
	HealthCheck                    *TargetGroupHealthCheck `pulumi:"healthCheck"`
	LambdaMultiValueHeadersEnabled *bool                   `pulumi:"lambdaMultiValueHeadersEnabled"`
	LoadBalancingAlgorithmType     *string                 `pulumi:"loadBalancingAlgorithmType"`
	Name                           *string                 `pulumi:"name"`
	NamePrefix                     *string                 `pulumi:"namePrefix"`
	Port                           *int                    `pulumi:"port"`
	Protocol                       *string                 `pulumi:"protocol"`
	ProxyProtocolV2                *bool                   `pulumi:"proxyProtocolV2"`
	SlowStart                      *int                    `pulumi:"slowStart"`
	Stickiness                     *TargetGroupStickiness  `pulumi:"stickiness"`
	Tags                           map[string]string       `pulumi:"tags"`
	TargetType                     *string                 `pulumi:"targetType"`
	VpcId                          *string                 `pulumi:"vpcId"`
}

type TargetGroupState struct {
	Arn                            pulumi.StringPtrInput
	ArnSuffix                      pulumi.StringPtrInput
	DeregistrationDelay            pulumi.IntPtrInput
	HealthCheck                    TargetGroupHealthCheckPtrInput
	LambdaMultiValueHeadersEnabled pulumi.BoolPtrInput
	LoadBalancingAlgorithmType     pulumi.StringPtrInput
	Name                           pulumi.StringPtrInput
	NamePrefix                     pulumi.StringPtrInput
	Port                           pulumi.IntPtrInput
	Protocol                       pulumi.StringPtrInput
	ProxyProtocolV2                pulumi.BoolPtrInput
	SlowStart                      pulumi.IntPtrInput
	Stickiness                     TargetGroupStickinessPtrInput
	Tags                           pulumi.StringMapInput
	TargetType                     pulumi.StringPtrInput
	VpcId                          pulumi.StringPtrInput
}

func (TargetGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*targetGroupState)(nil)).Elem()
}

type targetGroupArgs struct {
	DeregistrationDelay            *int                    `pulumi:"deregistrationDelay"`
	HealthCheck                    *TargetGroupHealthCheck `pulumi:"healthCheck"`
	LambdaMultiValueHeadersEnabled *bool                   `pulumi:"lambdaMultiValueHeadersEnabled"`
	LoadBalancingAlgorithmType     *string                 `pulumi:"loadBalancingAlgorithmType"`
	Name                           *string                 `pulumi:"name"`
	NamePrefix                     *string                 `pulumi:"namePrefix"`
	Port                           *int                    `pulumi:"port"`
	Protocol                       *string                 `pulumi:"protocol"`
	ProxyProtocolV2                *bool                   `pulumi:"proxyProtocolV2"`
	SlowStart                      *int                    `pulumi:"slowStart"`
	Stickiness                     *TargetGroupStickiness  `pulumi:"stickiness"`
	Tags                           map[string]string       `pulumi:"tags"`
	TargetType                     *string                 `pulumi:"targetType"`
	VpcId                          *string                 `pulumi:"vpcId"`
}

// The set of arguments for constructing a TargetGroup resource.
type TargetGroupArgs struct {
	DeregistrationDelay            pulumi.IntPtrInput
	HealthCheck                    TargetGroupHealthCheckPtrInput
	LambdaMultiValueHeadersEnabled pulumi.BoolPtrInput
	LoadBalancingAlgorithmType     pulumi.StringPtrInput
	Name                           pulumi.StringPtrInput
	NamePrefix                     pulumi.StringPtrInput
	Port                           pulumi.IntPtrInput
	Protocol                       pulumi.StringPtrInput
	ProxyProtocolV2                pulumi.BoolPtrInput
	SlowStart                      pulumi.IntPtrInput
	Stickiness                     TargetGroupStickinessPtrInput
	Tags                           pulumi.StringMapInput
	TargetType                     pulumi.StringPtrInput
	VpcId                          pulumi.StringPtrInput
}

func (TargetGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*targetGroupArgs)(nil)).Elem()
}
