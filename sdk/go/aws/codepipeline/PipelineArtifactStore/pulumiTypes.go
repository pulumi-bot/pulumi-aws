// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package PipelineArtifactStore

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-aws/codepipeline/PipelineArtifactStoreEncryptionKey"
)

type PipelineArtifactStore struct {
	EncryptionKey *codepipelinePipelineArtifactStoreEncryptionKey.PipelineArtifactStoreEncryptionKey `pulumi:"encryptionKey"`
	Location string `pulumi:"location"`
	Type string `pulumi:"type"`
}

type PipelineArtifactStoreInput interface {
	pulumi.Input

	ToPipelineArtifactStoreOutput() PipelineArtifactStoreOutput
	ToPipelineArtifactStoreOutputWithContext(context.Context) PipelineArtifactStoreOutput
}

type PipelineArtifactStoreArgs struct {
	EncryptionKey codepipelinePipelineArtifactStoreEncryptionKey.PipelineArtifactStoreEncryptionKeyPtrInput `pulumi:"encryptionKey"`
	Location pulumi.StringInput `pulumi:"location"`
	Type pulumi.StringInput `pulumi:"type"`
}

func (PipelineArtifactStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineArtifactStore)(nil)).Elem()
}

func (i PipelineArtifactStoreArgs) ToPipelineArtifactStoreOutput() PipelineArtifactStoreOutput {
	return i.ToPipelineArtifactStoreOutputWithContext(context.Background())
}

func (i PipelineArtifactStoreArgs) ToPipelineArtifactStoreOutputWithContext(ctx context.Context) PipelineArtifactStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineArtifactStoreOutput)
}

func (i PipelineArtifactStoreArgs) ToPipelineArtifactStorePtrOutput() PipelineArtifactStorePtrOutput {
	return i.ToPipelineArtifactStorePtrOutputWithContext(context.Background())
}

func (i PipelineArtifactStoreArgs) ToPipelineArtifactStorePtrOutputWithContext(ctx context.Context) PipelineArtifactStorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineArtifactStoreOutput).ToPipelineArtifactStorePtrOutputWithContext(ctx)
}

type PipelineArtifactStorePtrInput interface {
	pulumi.Input

	ToPipelineArtifactStorePtrOutput() PipelineArtifactStorePtrOutput
	ToPipelineArtifactStorePtrOutputWithContext(context.Context) PipelineArtifactStorePtrOutput
}

type pipelineArtifactStorePtrType PipelineArtifactStoreArgs

func PipelineArtifactStorePtr(v *PipelineArtifactStoreArgs) PipelineArtifactStorePtrInput {	return (*pipelineArtifactStorePtrType)(v)
}

func (*pipelineArtifactStorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineArtifactStore)(nil)).Elem()
}

func (i *pipelineArtifactStorePtrType) ToPipelineArtifactStorePtrOutput() PipelineArtifactStorePtrOutput {
	return i.ToPipelineArtifactStorePtrOutputWithContext(context.Background())
}

func (i *pipelineArtifactStorePtrType) ToPipelineArtifactStorePtrOutputWithContext(ctx context.Context) PipelineArtifactStorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineArtifactStorePtrOutput)
}

type PipelineArtifactStoreOutput struct { *pulumi.OutputState }

func (PipelineArtifactStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineArtifactStore)(nil)).Elem()
}

func (o PipelineArtifactStoreOutput) ToPipelineArtifactStoreOutput() PipelineArtifactStoreOutput {
	return o
}

func (o PipelineArtifactStoreOutput) ToPipelineArtifactStoreOutputWithContext(ctx context.Context) PipelineArtifactStoreOutput {
	return o
}

func (o PipelineArtifactStoreOutput) ToPipelineArtifactStorePtrOutput() PipelineArtifactStorePtrOutput {
	return o.ToPipelineArtifactStorePtrOutputWithContext(context.Background())
}

func (o PipelineArtifactStoreOutput) ToPipelineArtifactStorePtrOutputWithContext(ctx context.Context) PipelineArtifactStorePtrOutput {
	return o.ApplyT(func(v PipelineArtifactStore) *PipelineArtifactStore {
		return &v
	}).(PipelineArtifactStorePtrOutput)
}
func (o PipelineArtifactStoreOutput) EncryptionKey() codepipelinePipelineArtifactStoreEncryptionKey.PipelineArtifactStoreEncryptionKeyPtrOutput {
	return o.ApplyT(func (v PipelineArtifactStore) *codepipelinePipelineArtifactStoreEncryptionKey.PipelineArtifactStoreEncryptionKey { return v.EncryptionKey }).(codepipelinePipelineArtifactStoreEncryptionKey.PipelineArtifactStoreEncryptionKeyPtrOutput)
}

func (o PipelineArtifactStoreOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func (v PipelineArtifactStore) string { return v.Location }).(pulumi.StringOutput)
}

func (o PipelineArtifactStoreOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func (v PipelineArtifactStore) string { return v.Type }).(pulumi.StringOutput)
}

type PipelineArtifactStorePtrOutput struct { *pulumi.OutputState}

func (PipelineArtifactStorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineArtifactStore)(nil)).Elem()
}

func (o PipelineArtifactStorePtrOutput) ToPipelineArtifactStorePtrOutput() PipelineArtifactStorePtrOutput {
	return o
}

func (o PipelineArtifactStorePtrOutput) ToPipelineArtifactStorePtrOutputWithContext(ctx context.Context) PipelineArtifactStorePtrOutput {
	return o
}

func (o PipelineArtifactStorePtrOutput) Elem() PipelineArtifactStoreOutput {
	return o.ApplyT(func (v *PipelineArtifactStore) PipelineArtifactStore { return *v }).(PipelineArtifactStoreOutput)
}

func (o PipelineArtifactStorePtrOutput) EncryptionKey() codepipelinePipelineArtifactStoreEncryptionKey.PipelineArtifactStoreEncryptionKeyPtrOutput {
	return o.ApplyT(func (v PipelineArtifactStore) *codepipelinePipelineArtifactStoreEncryptionKey.PipelineArtifactStoreEncryptionKey { return v.EncryptionKey }).(codepipelinePipelineArtifactStoreEncryptionKey.PipelineArtifactStoreEncryptionKeyPtrOutput)
}

func (o PipelineArtifactStorePtrOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func (v PipelineArtifactStore) string { return v.Location }).(pulumi.StringOutput)
}

func (o PipelineArtifactStorePtrOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func (v PipelineArtifactStore) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(PipelineArtifactStoreOutput{})
	pulumi.RegisterOutputType(PipelineArtifactStorePtrOutput{})
}
