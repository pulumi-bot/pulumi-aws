// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package codepipeline

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Webhook struct {
	pulumi.CustomResourceState

	Authentication              pulumi.StringOutput                         `pulumi:"authentication"`
	AuthenticationConfiguration WebhookAuthenticationConfigurationPtrOutput `pulumi:"authenticationConfiguration"`
	Filters                     WebhookFilterArrayOutput                    `pulumi:"filters"`
	Name                        pulumi.StringOutput                         `pulumi:"name"`
	Tags                        pulumi.StringMapOutput                      `pulumi:"tags"`
	TargetAction                pulumi.StringOutput                         `pulumi:"targetAction"`
	TargetPipeline              pulumi.StringOutput                         `pulumi:"targetPipeline"`
	Url                         pulumi.StringOutput                         `pulumi:"url"`
}

// NewWebhook registers a new resource with the given unique name, arguments, and options.
func NewWebhook(ctx *pulumi.Context,
	name string, args *WebhookArgs, opts ...pulumi.ResourceOption) (*Webhook, error) {
	if args == nil || args.Authentication == nil {
		return nil, errors.New("missing required argument 'Authentication'")
	}
	if args == nil || args.Filters == nil {
		return nil, errors.New("missing required argument 'Filters'")
	}
	if args == nil || args.TargetAction == nil {
		return nil, errors.New("missing required argument 'TargetAction'")
	}
	if args == nil || args.TargetPipeline == nil {
		return nil, errors.New("missing required argument 'TargetPipeline'")
	}
	if args == nil {
		args = &WebhookArgs{}
	}
	var resource Webhook
	err := ctx.RegisterResource("aws:codepipeline/webhook:Webhook", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebhook gets an existing Webhook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebhook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebhookState, opts ...pulumi.ResourceOption) (*Webhook, error) {
	var resource Webhook
	err := ctx.ReadResource("aws:codepipeline/webhook:Webhook", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Webhook resources.
type webhookState struct {
	Authentication              *string                             `pulumi:"authentication"`
	AuthenticationConfiguration *WebhookAuthenticationConfiguration `pulumi:"authenticationConfiguration"`
	Filters                     []WebhookFilter                     `pulumi:"filters"`
	Name                        *string                             `pulumi:"name"`
	Tags                        map[string]string                   `pulumi:"tags"`
	TargetAction                *string                             `pulumi:"targetAction"`
	TargetPipeline              *string                             `pulumi:"targetPipeline"`
	Url                         *string                             `pulumi:"url"`
}

type WebhookState struct {
	Authentication              pulumi.StringPtrInput
	AuthenticationConfiguration WebhookAuthenticationConfigurationPtrInput
	Filters                     WebhookFilterArrayInput
	Name                        pulumi.StringPtrInput
	Tags                        pulumi.StringMapInput
	TargetAction                pulumi.StringPtrInput
	TargetPipeline              pulumi.StringPtrInput
	Url                         pulumi.StringPtrInput
}

func (WebhookState) ElementType() reflect.Type {
	return reflect.TypeOf((*webhookState)(nil)).Elem()
}

type webhookArgs struct {
	Authentication              string                              `pulumi:"authentication"`
	AuthenticationConfiguration *WebhookAuthenticationConfiguration `pulumi:"authenticationConfiguration"`
	Filters                     []WebhookFilter                     `pulumi:"filters"`
	Name                        *string                             `pulumi:"name"`
	Tags                        map[string]string                   `pulumi:"tags"`
	TargetAction                string                              `pulumi:"targetAction"`
	TargetPipeline              string                              `pulumi:"targetPipeline"`
}

// The set of arguments for constructing a Webhook resource.
type WebhookArgs struct {
	Authentication              pulumi.StringInput
	AuthenticationConfiguration WebhookAuthenticationConfigurationPtrInput
	Filters                     WebhookFilterArrayInput
	Name                        pulumi.StringPtrInput
	Tags                        pulumi.StringMapInput
	TargetAction                pulumi.StringInput
	TargetPipeline              pulumi.StringInput
}

func (WebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webhookArgs)(nil)).Elem()
}
