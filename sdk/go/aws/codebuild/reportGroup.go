// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package codebuild

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a CodeBuild Report Groups Resource.
type ReportGroup struct {
	pulumi.CustomResourceState

	// The ARN of Report Group.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The date and time this Report Group was created.
	Created pulumi.StringOutput `pulumi:"created"`
	// Information about the destination where the raw data of this Report Group is exported. see Export Config documented below.
	ExportConfig ReportGroupExportConfigOutput `pulumi:"exportConfig"`
	// The name of a Report Group.
	Name pulumi.StringOutput `pulumi:"name"`
	// Key-value mapping of resource tags
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The export configuration type. Valid values are `S3` and `NO_EXPORT`.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewReportGroup registers a new resource with the given unique name, arguments, and options.
func NewReportGroup(ctx *pulumi.Context,
	name string, args *ReportGroupArgs, opts ...pulumi.ResourceOption) (*ReportGroup, error) {
	if args == nil || args.ExportConfig == nil {
		return nil, errors.New("missing required argument 'ExportConfig'")
	}
	if args == nil || args.Type == nil {
		return nil, errors.New("missing required argument 'Type'")
	}
	if args == nil {
		args = &ReportGroupArgs{}
	}
	var resource ReportGroup
	err := ctx.RegisterResource("aws:codebuild/reportGroup:ReportGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReportGroup gets an existing ReportGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReportGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReportGroupState, opts ...pulumi.ResourceOption) (*ReportGroup, error) {
	var resource ReportGroup
	err := ctx.ReadResource("aws:codebuild/reportGroup:ReportGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReportGroup resources.
type reportGroupState struct {
	// The ARN of Report Group.
	Arn *string `pulumi:"arn"`
	// The date and time this Report Group was created.
	Created *string `pulumi:"created"`
	// Information about the destination where the raw data of this Report Group is exported. see Export Config documented below.
	ExportConfig *ReportGroupExportConfig `pulumi:"exportConfig"`
	// The name of a Report Group.
	Name *string `pulumi:"name"`
	// Key-value mapping of resource tags
	Tags map[string]string `pulumi:"tags"`
	// The export configuration type. Valid values are `S3` and `NO_EXPORT`.
	Type *string `pulumi:"type"`
}

type ReportGroupState struct {
	// The ARN of Report Group.
	Arn pulumi.StringPtrInput
	// The date and time this Report Group was created.
	Created pulumi.StringPtrInput
	// Information about the destination where the raw data of this Report Group is exported. see Export Config documented below.
	ExportConfig ReportGroupExportConfigPtrInput
	// The name of a Report Group.
	Name pulumi.StringPtrInput
	// Key-value mapping of resource tags
	Tags pulumi.StringMapInput
	// The export configuration type. Valid values are `S3` and `NO_EXPORT`.
	Type pulumi.StringPtrInput
}

func (ReportGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*reportGroupState)(nil)).Elem()
}

type reportGroupArgs struct {
	// Information about the destination where the raw data of this Report Group is exported. see Export Config documented below.
	ExportConfig ReportGroupExportConfig `pulumi:"exportConfig"`
	// The name of a Report Group.
	Name *string `pulumi:"name"`
	// Key-value mapping of resource tags
	Tags map[string]string `pulumi:"tags"`
	// The export configuration type. Valid values are `S3` and `NO_EXPORT`.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a ReportGroup resource.
type ReportGroupArgs struct {
	// Information about the destination where the raw data of this Report Group is exported. see Export Config documented below.
	ExportConfig ReportGroupExportConfigInput
	// The name of a Report Group.
	Name pulumi.StringPtrInput
	// Key-value mapping of resource tags
	Tags pulumi.StringMapInput
	// The export configuration type. Valid values are `S3` and `NO_EXPORT`.
	Type pulumi.StringInput
}

func (ReportGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*reportGroupArgs)(nil)).Elem()
}
