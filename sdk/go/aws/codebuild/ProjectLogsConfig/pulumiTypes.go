// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ProjectLogsConfig

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-aws/codebuild/ProjectLogsConfigCloudwatchLogs"
	"https:/github.com/pulumi/pulumi-aws/codebuild/ProjectLogsConfigS3Logs"
)

type ProjectLogsConfig struct {
	// Configuration for the builds to store logs to CloudWatch
	CloudwatchLogs *codebuildProjectLogsConfigCloudwatchLogs.ProjectLogsConfigCloudwatchLogs `pulumi:"cloudwatchLogs"`
	// Configuration for the builds to store logs to S3.
	S3Logs *codebuildProjectLogsConfigS3Logs.ProjectLogsConfigS3Logs `pulumi:"s3Logs"`
}

type ProjectLogsConfigInput interface {
	pulumi.Input

	ToProjectLogsConfigOutput() ProjectLogsConfigOutput
	ToProjectLogsConfigOutputWithContext(context.Context) ProjectLogsConfigOutput
}

type ProjectLogsConfigArgs struct {
	// Configuration for the builds to store logs to CloudWatch
	CloudwatchLogs codebuildProjectLogsConfigCloudwatchLogs.ProjectLogsConfigCloudwatchLogsPtrInput `pulumi:"cloudwatchLogs"`
	// Configuration for the builds to store logs to S3.
	S3Logs codebuildProjectLogsConfigS3Logs.ProjectLogsConfigS3LogsPtrInput `pulumi:"s3Logs"`
}

func (ProjectLogsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectLogsConfig)(nil)).Elem()
}

func (i ProjectLogsConfigArgs) ToProjectLogsConfigOutput() ProjectLogsConfigOutput {
	return i.ToProjectLogsConfigOutputWithContext(context.Background())
}

func (i ProjectLogsConfigArgs) ToProjectLogsConfigOutputWithContext(ctx context.Context) ProjectLogsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectLogsConfigOutput)
}

func (i ProjectLogsConfigArgs) ToProjectLogsConfigPtrOutput() ProjectLogsConfigPtrOutput {
	return i.ToProjectLogsConfigPtrOutputWithContext(context.Background())
}

func (i ProjectLogsConfigArgs) ToProjectLogsConfigPtrOutputWithContext(ctx context.Context) ProjectLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectLogsConfigOutput).ToProjectLogsConfigPtrOutputWithContext(ctx)
}

type ProjectLogsConfigPtrInput interface {
	pulumi.Input

	ToProjectLogsConfigPtrOutput() ProjectLogsConfigPtrOutput
	ToProjectLogsConfigPtrOutputWithContext(context.Context) ProjectLogsConfigPtrOutput
}

type projectLogsConfigPtrType ProjectLogsConfigArgs

func ProjectLogsConfigPtr(v *ProjectLogsConfigArgs) ProjectLogsConfigPtrInput {	return (*projectLogsConfigPtrType)(v)
}

func (*projectLogsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectLogsConfig)(nil)).Elem()
}

func (i *projectLogsConfigPtrType) ToProjectLogsConfigPtrOutput() ProjectLogsConfigPtrOutput {
	return i.ToProjectLogsConfigPtrOutputWithContext(context.Background())
}

func (i *projectLogsConfigPtrType) ToProjectLogsConfigPtrOutputWithContext(ctx context.Context) ProjectLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectLogsConfigPtrOutput)
}

type ProjectLogsConfigOutput struct { *pulumi.OutputState }

func (ProjectLogsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectLogsConfig)(nil)).Elem()
}

func (o ProjectLogsConfigOutput) ToProjectLogsConfigOutput() ProjectLogsConfigOutput {
	return o
}

func (o ProjectLogsConfigOutput) ToProjectLogsConfigOutputWithContext(ctx context.Context) ProjectLogsConfigOutput {
	return o
}

func (o ProjectLogsConfigOutput) ToProjectLogsConfigPtrOutput() ProjectLogsConfigPtrOutput {
	return o.ToProjectLogsConfigPtrOutputWithContext(context.Background())
}

func (o ProjectLogsConfigOutput) ToProjectLogsConfigPtrOutputWithContext(ctx context.Context) ProjectLogsConfigPtrOutput {
	return o.ApplyT(func(v ProjectLogsConfig) *ProjectLogsConfig {
		return &v
	}).(ProjectLogsConfigPtrOutput)
}
// Configuration for the builds to store logs to CloudWatch
func (o ProjectLogsConfigOutput) CloudwatchLogs() codebuildProjectLogsConfigCloudwatchLogs.ProjectLogsConfigCloudwatchLogsPtrOutput {
	return o.ApplyT(func (v ProjectLogsConfig) *codebuildProjectLogsConfigCloudwatchLogs.ProjectLogsConfigCloudwatchLogs { return v.CloudwatchLogs }).(codebuildProjectLogsConfigCloudwatchLogs.ProjectLogsConfigCloudwatchLogsPtrOutput)
}

// Configuration for the builds to store logs to S3.
func (o ProjectLogsConfigOutput) S3Logs() codebuildProjectLogsConfigS3Logs.ProjectLogsConfigS3LogsPtrOutput {
	return o.ApplyT(func (v ProjectLogsConfig) *codebuildProjectLogsConfigS3Logs.ProjectLogsConfigS3Logs { return v.S3Logs }).(codebuildProjectLogsConfigS3Logs.ProjectLogsConfigS3LogsPtrOutput)
}

type ProjectLogsConfigPtrOutput struct { *pulumi.OutputState}

func (ProjectLogsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectLogsConfig)(nil)).Elem()
}

func (o ProjectLogsConfigPtrOutput) ToProjectLogsConfigPtrOutput() ProjectLogsConfigPtrOutput {
	return o
}

func (o ProjectLogsConfigPtrOutput) ToProjectLogsConfigPtrOutputWithContext(ctx context.Context) ProjectLogsConfigPtrOutput {
	return o
}

func (o ProjectLogsConfigPtrOutput) Elem() ProjectLogsConfigOutput {
	return o.ApplyT(func (v *ProjectLogsConfig) ProjectLogsConfig { return *v }).(ProjectLogsConfigOutput)
}

// Configuration for the builds to store logs to CloudWatch
func (o ProjectLogsConfigPtrOutput) CloudwatchLogs() codebuildProjectLogsConfigCloudwatchLogs.ProjectLogsConfigCloudwatchLogsPtrOutput {
	return o.ApplyT(func (v ProjectLogsConfig) *codebuildProjectLogsConfigCloudwatchLogs.ProjectLogsConfigCloudwatchLogs { return v.CloudwatchLogs }).(codebuildProjectLogsConfigCloudwatchLogs.ProjectLogsConfigCloudwatchLogsPtrOutput)
}

// Configuration for the builds to store logs to S3.
func (o ProjectLogsConfigPtrOutput) S3Logs() codebuildProjectLogsConfigS3Logs.ProjectLogsConfigS3LogsPtrOutput {
	return o.ApplyT(func (v ProjectLogsConfig) *codebuildProjectLogsConfigS3Logs.ProjectLogsConfigS3Logs { return v.S3Logs }).(codebuildProjectLogsConfigS3Logs.ProjectLogsConfigS3LogsPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ProjectLogsConfigOutput{})
	pulumi.RegisterOutputType(ProjectLogsConfigPtrOutput{})
}
