// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ProjectLogsConfigS3Logs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ProjectLogsConfigS3Logs struct {
	// If set to true, output artifacts will not be encrypted. If `type` is set to `NO_ARTIFACTS` then this value will be ignored. Defaults to `false`.
	EncryptionDisabled *bool `pulumi:"encryptionDisabled"`
	// The location of the source code from git or s3.
	Location *string `pulumi:"location"`
	// Current status of logs in S3 for a build project. Valid values: `ENABLED`, `DISABLED`. Defaults to `DISABLED`.
	Status *string `pulumi:"status"`
}

type ProjectLogsConfigS3LogsInput interface {
	pulumi.Input

	ToProjectLogsConfigS3LogsOutput() ProjectLogsConfigS3LogsOutput
	ToProjectLogsConfigS3LogsOutputWithContext(context.Context) ProjectLogsConfigS3LogsOutput
}

type ProjectLogsConfigS3LogsArgs struct {
	// If set to true, output artifacts will not be encrypted. If `type` is set to `NO_ARTIFACTS` then this value will be ignored. Defaults to `false`.
	EncryptionDisabled pulumi.BoolPtrInput `pulumi:"encryptionDisabled"`
	// The location of the source code from git or s3.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Current status of logs in S3 for a build project. Valid values: `ENABLED`, `DISABLED`. Defaults to `DISABLED`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ProjectLogsConfigS3LogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectLogsConfigS3Logs)(nil)).Elem()
}

func (i ProjectLogsConfigS3LogsArgs) ToProjectLogsConfigS3LogsOutput() ProjectLogsConfigS3LogsOutput {
	return i.ToProjectLogsConfigS3LogsOutputWithContext(context.Background())
}

func (i ProjectLogsConfigS3LogsArgs) ToProjectLogsConfigS3LogsOutputWithContext(ctx context.Context) ProjectLogsConfigS3LogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectLogsConfigS3LogsOutput)
}

func (i ProjectLogsConfigS3LogsArgs) ToProjectLogsConfigS3LogsPtrOutput() ProjectLogsConfigS3LogsPtrOutput {
	return i.ToProjectLogsConfigS3LogsPtrOutputWithContext(context.Background())
}

func (i ProjectLogsConfigS3LogsArgs) ToProjectLogsConfigS3LogsPtrOutputWithContext(ctx context.Context) ProjectLogsConfigS3LogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectLogsConfigS3LogsOutput).ToProjectLogsConfigS3LogsPtrOutputWithContext(ctx)
}

type ProjectLogsConfigS3LogsPtrInput interface {
	pulumi.Input

	ToProjectLogsConfigS3LogsPtrOutput() ProjectLogsConfigS3LogsPtrOutput
	ToProjectLogsConfigS3LogsPtrOutputWithContext(context.Context) ProjectLogsConfigS3LogsPtrOutput
}

type projectLogsConfigS3LogsPtrType ProjectLogsConfigS3LogsArgs

func ProjectLogsConfigS3LogsPtr(v *ProjectLogsConfigS3LogsArgs) ProjectLogsConfigS3LogsPtrInput {	return (*projectLogsConfigS3LogsPtrType)(v)
}

func (*projectLogsConfigS3LogsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectLogsConfigS3Logs)(nil)).Elem()
}

func (i *projectLogsConfigS3LogsPtrType) ToProjectLogsConfigS3LogsPtrOutput() ProjectLogsConfigS3LogsPtrOutput {
	return i.ToProjectLogsConfigS3LogsPtrOutputWithContext(context.Background())
}

func (i *projectLogsConfigS3LogsPtrType) ToProjectLogsConfigS3LogsPtrOutputWithContext(ctx context.Context) ProjectLogsConfigS3LogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectLogsConfigS3LogsPtrOutput)
}

type ProjectLogsConfigS3LogsOutput struct { *pulumi.OutputState }

func (ProjectLogsConfigS3LogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectLogsConfigS3Logs)(nil)).Elem()
}

func (o ProjectLogsConfigS3LogsOutput) ToProjectLogsConfigS3LogsOutput() ProjectLogsConfigS3LogsOutput {
	return o
}

func (o ProjectLogsConfigS3LogsOutput) ToProjectLogsConfigS3LogsOutputWithContext(ctx context.Context) ProjectLogsConfigS3LogsOutput {
	return o
}

func (o ProjectLogsConfigS3LogsOutput) ToProjectLogsConfigS3LogsPtrOutput() ProjectLogsConfigS3LogsPtrOutput {
	return o.ToProjectLogsConfigS3LogsPtrOutputWithContext(context.Background())
}

func (o ProjectLogsConfigS3LogsOutput) ToProjectLogsConfigS3LogsPtrOutputWithContext(ctx context.Context) ProjectLogsConfigS3LogsPtrOutput {
	return o.ApplyT(func(v ProjectLogsConfigS3Logs) *ProjectLogsConfigS3Logs {
		return &v
	}).(ProjectLogsConfigS3LogsPtrOutput)
}
// If set to true, output artifacts will not be encrypted. If `type` is set to `NO_ARTIFACTS` then this value will be ignored. Defaults to `false`.
func (o ProjectLogsConfigS3LogsOutput) EncryptionDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ProjectLogsConfigS3Logs) *bool { return v.EncryptionDisabled }).(pulumi.BoolPtrOutput)
}

// The location of the source code from git or s3.
func (o ProjectLogsConfigS3LogsOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProjectLogsConfigS3Logs) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Current status of logs in S3 for a build project. Valid values: `ENABLED`, `DISABLED`. Defaults to `DISABLED`.
func (o ProjectLogsConfigS3LogsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProjectLogsConfigS3Logs) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ProjectLogsConfigS3LogsPtrOutput struct { *pulumi.OutputState}

func (ProjectLogsConfigS3LogsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectLogsConfigS3Logs)(nil)).Elem()
}

func (o ProjectLogsConfigS3LogsPtrOutput) ToProjectLogsConfigS3LogsPtrOutput() ProjectLogsConfigS3LogsPtrOutput {
	return o
}

func (o ProjectLogsConfigS3LogsPtrOutput) ToProjectLogsConfigS3LogsPtrOutputWithContext(ctx context.Context) ProjectLogsConfigS3LogsPtrOutput {
	return o
}

func (o ProjectLogsConfigS3LogsPtrOutput) Elem() ProjectLogsConfigS3LogsOutput {
	return o.ApplyT(func (v *ProjectLogsConfigS3Logs) ProjectLogsConfigS3Logs { return *v }).(ProjectLogsConfigS3LogsOutput)
}

// If set to true, output artifacts will not be encrypted. If `type` is set to `NO_ARTIFACTS` then this value will be ignored. Defaults to `false`.
func (o ProjectLogsConfigS3LogsPtrOutput) EncryptionDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ProjectLogsConfigS3Logs) *bool { return v.EncryptionDisabled }).(pulumi.BoolPtrOutput)
}

// The location of the source code from git or s3.
func (o ProjectLogsConfigS3LogsPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProjectLogsConfigS3Logs) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Current status of logs in S3 for a build project. Valid values: `ENABLED`, `DISABLED`. Defaults to `DISABLED`.
func (o ProjectLogsConfigS3LogsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProjectLogsConfigS3Logs) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ProjectLogsConfigS3LogsOutput{})
	pulumi.RegisterOutputType(ProjectLogsConfigS3LogsPtrOutput{})
}
