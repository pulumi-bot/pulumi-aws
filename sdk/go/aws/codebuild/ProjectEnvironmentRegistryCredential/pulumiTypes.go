// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ProjectEnvironmentRegistryCredential

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ProjectEnvironmentRegistryCredential struct {
	// The Amazon Resource Name (ARN) or name of credentials created using AWS Secrets Manager.
	Credential string `pulumi:"credential"`
	// The service that created the credentials to access a private Docker registry. The valid value, SECRETS_MANAGER, is for AWS Secrets Manager.
	CredentialProvider string `pulumi:"credentialProvider"`
}

type ProjectEnvironmentRegistryCredentialInput interface {
	pulumi.Input

	ToProjectEnvironmentRegistryCredentialOutput() ProjectEnvironmentRegistryCredentialOutput
	ToProjectEnvironmentRegistryCredentialOutputWithContext(context.Context) ProjectEnvironmentRegistryCredentialOutput
}

type ProjectEnvironmentRegistryCredentialArgs struct {
	// The Amazon Resource Name (ARN) or name of credentials created using AWS Secrets Manager.
	Credential pulumi.StringInput `pulumi:"credential"`
	// The service that created the credentials to access a private Docker registry. The valid value, SECRETS_MANAGER, is for AWS Secrets Manager.
	CredentialProvider pulumi.StringInput `pulumi:"credentialProvider"`
}

func (ProjectEnvironmentRegistryCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectEnvironmentRegistryCredential)(nil)).Elem()
}

func (i ProjectEnvironmentRegistryCredentialArgs) ToProjectEnvironmentRegistryCredentialOutput() ProjectEnvironmentRegistryCredentialOutput {
	return i.ToProjectEnvironmentRegistryCredentialOutputWithContext(context.Background())
}

func (i ProjectEnvironmentRegistryCredentialArgs) ToProjectEnvironmentRegistryCredentialOutputWithContext(ctx context.Context) ProjectEnvironmentRegistryCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectEnvironmentRegistryCredentialOutput)
}

func (i ProjectEnvironmentRegistryCredentialArgs) ToProjectEnvironmentRegistryCredentialPtrOutput() ProjectEnvironmentRegistryCredentialPtrOutput {
	return i.ToProjectEnvironmentRegistryCredentialPtrOutputWithContext(context.Background())
}

func (i ProjectEnvironmentRegistryCredentialArgs) ToProjectEnvironmentRegistryCredentialPtrOutputWithContext(ctx context.Context) ProjectEnvironmentRegistryCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectEnvironmentRegistryCredentialOutput).ToProjectEnvironmentRegistryCredentialPtrOutputWithContext(ctx)
}

type ProjectEnvironmentRegistryCredentialPtrInput interface {
	pulumi.Input

	ToProjectEnvironmentRegistryCredentialPtrOutput() ProjectEnvironmentRegistryCredentialPtrOutput
	ToProjectEnvironmentRegistryCredentialPtrOutputWithContext(context.Context) ProjectEnvironmentRegistryCredentialPtrOutput
}

type projectEnvironmentRegistryCredentialPtrType ProjectEnvironmentRegistryCredentialArgs

func ProjectEnvironmentRegistryCredentialPtr(v *ProjectEnvironmentRegistryCredentialArgs) ProjectEnvironmentRegistryCredentialPtrInput {	return (*projectEnvironmentRegistryCredentialPtrType)(v)
}

func (*projectEnvironmentRegistryCredentialPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectEnvironmentRegistryCredential)(nil)).Elem()
}

func (i *projectEnvironmentRegistryCredentialPtrType) ToProjectEnvironmentRegistryCredentialPtrOutput() ProjectEnvironmentRegistryCredentialPtrOutput {
	return i.ToProjectEnvironmentRegistryCredentialPtrOutputWithContext(context.Background())
}

func (i *projectEnvironmentRegistryCredentialPtrType) ToProjectEnvironmentRegistryCredentialPtrOutputWithContext(ctx context.Context) ProjectEnvironmentRegistryCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectEnvironmentRegistryCredentialPtrOutput)
}

type ProjectEnvironmentRegistryCredentialOutput struct { *pulumi.OutputState }

func (ProjectEnvironmentRegistryCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectEnvironmentRegistryCredential)(nil)).Elem()
}

func (o ProjectEnvironmentRegistryCredentialOutput) ToProjectEnvironmentRegistryCredentialOutput() ProjectEnvironmentRegistryCredentialOutput {
	return o
}

func (o ProjectEnvironmentRegistryCredentialOutput) ToProjectEnvironmentRegistryCredentialOutputWithContext(ctx context.Context) ProjectEnvironmentRegistryCredentialOutput {
	return o
}

func (o ProjectEnvironmentRegistryCredentialOutput) ToProjectEnvironmentRegistryCredentialPtrOutput() ProjectEnvironmentRegistryCredentialPtrOutput {
	return o.ToProjectEnvironmentRegistryCredentialPtrOutputWithContext(context.Background())
}

func (o ProjectEnvironmentRegistryCredentialOutput) ToProjectEnvironmentRegistryCredentialPtrOutputWithContext(ctx context.Context) ProjectEnvironmentRegistryCredentialPtrOutput {
	return o.ApplyT(func(v ProjectEnvironmentRegistryCredential) *ProjectEnvironmentRegistryCredential {
		return &v
	}).(ProjectEnvironmentRegistryCredentialPtrOutput)
}
// The Amazon Resource Name (ARN) or name of credentials created using AWS Secrets Manager.
func (o ProjectEnvironmentRegistryCredentialOutput) Credential() pulumi.StringOutput {
	return o.ApplyT(func (v ProjectEnvironmentRegistryCredential) string { return v.Credential }).(pulumi.StringOutput)
}

// The service that created the credentials to access a private Docker registry. The valid value, SECRETS_MANAGER, is for AWS Secrets Manager.
func (o ProjectEnvironmentRegistryCredentialOutput) CredentialProvider() pulumi.StringOutput {
	return o.ApplyT(func (v ProjectEnvironmentRegistryCredential) string { return v.CredentialProvider }).(pulumi.StringOutput)
}

type ProjectEnvironmentRegistryCredentialPtrOutput struct { *pulumi.OutputState}

func (ProjectEnvironmentRegistryCredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectEnvironmentRegistryCredential)(nil)).Elem()
}

func (o ProjectEnvironmentRegistryCredentialPtrOutput) ToProjectEnvironmentRegistryCredentialPtrOutput() ProjectEnvironmentRegistryCredentialPtrOutput {
	return o
}

func (o ProjectEnvironmentRegistryCredentialPtrOutput) ToProjectEnvironmentRegistryCredentialPtrOutputWithContext(ctx context.Context) ProjectEnvironmentRegistryCredentialPtrOutput {
	return o
}

func (o ProjectEnvironmentRegistryCredentialPtrOutput) Elem() ProjectEnvironmentRegistryCredentialOutput {
	return o.ApplyT(func (v *ProjectEnvironmentRegistryCredential) ProjectEnvironmentRegistryCredential { return *v }).(ProjectEnvironmentRegistryCredentialOutput)
}

// The Amazon Resource Name (ARN) or name of credentials created using AWS Secrets Manager.
func (o ProjectEnvironmentRegistryCredentialPtrOutput) Credential() pulumi.StringOutput {
	return o.ApplyT(func (v ProjectEnvironmentRegistryCredential) string { return v.Credential }).(pulumi.StringOutput)
}

// The service that created the credentials to access a private Docker registry. The valid value, SECRETS_MANAGER, is for AWS Secrets Manager.
func (o ProjectEnvironmentRegistryCredentialPtrOutput) CredentialProvider() pulumi.StringOutput {
	return o.ApplyT(func (v ProjectEnvironmentRegistryCredential) string { return v.CredentialProvider }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ProjectEnvironmentRegistryCredentialOutput{})
	pulumi.RegisterOutputType(ProjectEnvironmentRegistryCredentialPtrOutput{})
}
