// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ProjectLogsConfigCloudwatchLogs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ProjectLogsConfigCloudwatchLogs struct {
	// The group name of the logs in CloudWatch Logs.
	GroupName *string `pulumi:"groupName"`
	// Current status of logs in S3 for a build project. Valid values: `ENABLED`, `DISABLED`. Defaults to `DISABLED`.
	Status *string `pulumi:"status"`
	// The stream name of the logs in CloudWatch Logs.
	StreamName *string `pulumi:"streamName"`
}

type ProjectLogsConfigCloudwatchLogsInput interface {
	pulumi.Input

	ToProjectLogsConfigCloudwatchLogsOutput() ProjectLogsConfigCloudwatchLogsOutput
	ToProjectLogsConfigCloudwatchLogsOutputWithContext(context.Context) ProjectLogsConfigCloudwatchLogsOutput
}

type ProjectLogsConfigCloudwatchLogsArgs struct {
	// The group name of the logs in CloudWatch Logs.
	GroupName pulumi.StringPtrInput `pulumi:"groupName"`
	// Current status of logs in S3 for a build project. Valid values: `ENABLED`, `DISABLED`. Defaults to `DISABLED`.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The stream name of the logs in CloudWatch Logs.
	StreamName pulumi.StringPtrInput `pulumi:"streamName"`
}

func (ProjectLogsConfigCloudwatchLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectLogsConfigCloudwatchLogs)(nil)).Elem()
}

func (i ProjectLogsConfigCloudwatchLogsArgs) ToProjectLogsConfigCloudwatchLogsOutput() ProjectLogsConfigCloudwatchLogsOutput {
	return i.ToProjectLogsConfigCloudwatchLogsOutputWithContext(context.Background())
}

func (i ProjectLogsConfigCloudwatchLogsArgs) ToProjectLogsConfigCloudwatchLogsOutputWithContext(ctx context.Context) ProjectLogsConfigCloudwatchLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectLogsConfigCloudwatchLogsOutput)
}

func (i ProjectLogsConfigCloudwatchLogsArgs) ToProjectLogsConfigCloudwatchLogsPtrOutput() ProjectLogsConfigCloudwatchLogsPtrOutput {
	return i.ToProjectLogsConfigCloudwatchLogsPtrOutputWithContext(context.Background())
}

func (i ProjectLogsConfigCloudwatchLogsArgs) ToProjectLogsConfigCloudwatchLogsPtrOutputWithContext(ctx context.Context) ProjectLogsConfigCloudwatchLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectLogsConfigCloudwatchLogsOutput).ToProjectLogsConfigCloudwatchLogsPtrOutputWithContext(ctx)
}

type ProjectLogsConfigCloudwatchLogsPtrInput interface {
	pulumi.Input

	ToProjectLogsConfigCloudwatchLogsPtrOutput() ProjectLogsConfigCloudwatchLogsPtrOutput
	ToProjectLogsConfigCloudwatchLogsPtrOutputWithContext(context.Context) ProjectLogsConfigCloudwatchLogsPtrOutput
}

type projectLogsConfigCloudwatchLogsPtrType ProjectLogsConfigCloudwatchLogsArgs

func ProjectLogsConfigCloudwatchLogsPtr(v *ProjectLogsConfigCloudwatchLogsArgs) ProjectLogsConfigCloudwatchLogsPtrInput {	return (*projectLogsConfigCloudwatchLogsPtrType)(v)
}

func (*projectLogsConfigCloudwatchLogsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectLogsConfigCloudwatchLogs)(nil)).Elem()
}

func (i *projectLogsConfigCloudwatchLogsPtrType) ToProjectLogsConfigCloudwatchLogsPtrOutput() ProjectLogsConfigCloudwatchLogsPtrOutput {
	return i.ToProjectLogsConfigCloudwatchLogsPtrOutputWithContext(context.Background())
}

func (i *projectLogsConfigCloudwatchLogsPtrType) ToProjectLogsConfigCloudwatchLogsPtrOutputWithContext(ctx context.Context) ProjectLogsConfigCloudwatchLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectLogsConfigCloudwatchLogsPtrOutput)
}

type ProjectLogsConfigCloudwatchLogsOutput struct { *pulumi.OutputState }

func (ProjectLogsConfigCloudwatchLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectLogsConfigCloudwatchLogs)(nil)).Elem()
}

func (o ProjectLogsConfigCloudwatchLogsOutput) ToProjectLogsConfigCloudwatchLogsOutput() ProjectLogsConfigCloudwatchLogsOutput {
	return o
}

func (o ProjectLogsConfigCloudwatchLogsOutput) ToProjectLogsConfigCloudwatchLogsOutputWithContext(ctx context.Context) ProjectLogsConfigCloudwatchLogsOutput {
	return o
}

func (o ProjectLogsConfigCloudwatchLogsOutput) ToProjectLogsConfigCloudwatchLogsPtrOutput() ProjectLogsConfigCloudwatchLogsPtrOutput {
	return o.ToProjectLogsConfigCloudwatchLogsPtrOutputWithContext(context.Background())
}

func (o ProjectLogsConfigCloudwatchLogsOutput) ToProjectLogsConfigCloudwatchLogsPtrOutputWithContext(ctx context.Context) ProjectLogsConfigCloudwatchLogsPtrOutput {
	return o.ApplyT(func(v ProjectLogsConfigCloudwatchLogs) *ProjectLogsConfigCloudwatchLogs {
		return &v
	}).(ProjectLogsConfigCloudwatchLogsPtrOutput)
}
// The group name of the logs in CloudWatch Logs.
func (o ProjectLogsConfigCloudwatchLogsOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProjectLogsConfigCloudwatchLogs) *string { return v.GroupName }).(pulumi.StringPtrOutput)
}

// Current status of logs in S3 for a build project. Valid values: `ENABLED`, `DISABLED`. Defaults to `DISABLED`.
func (o ProjectLogsConfigCloudwatchLogsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProjectLogsConfigCloudwatchLogs) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The stream name of the logs in CloudWatch Logs.
func (o ProjectLogsConfigCloudwatchLogsOutput) StreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProjectLogsConfigCloudwatchLogs) *string { return v.StreamName }).(pulumi.StringPtrOutput)
}

type ProjectLogsConfigCloudwatchLogsPtrOutput struct { *pulumi.OutputState}

func (ProjectLogsConfigCloudwatchLogsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectLogsConfigCloudwatchLogs)(nil)).Elem()
}

func (o ProjectLogsConfigCloudwatchLogsPtrOutput) ToProjectLogsConfigCloudwatchLogsPtrOutput() ProjectLogsConfigCloudwatchLogsPtrOutput {
	return o
}

func (o ProjectLogsConfigCloudwatchLogsPtrOutput) ToProjectLogsConfigCloudwatchLogsPtrOutputWithContext(ctx context.Context) ProjectLogsConfigCloudwatchLogsPtrOutput {
	return o
}

func (o ProjectLogsConfigCloudwatchLogsPtrOutput) Elem() ProjectLogsConfigCloudwatchLogsOutput {
	return o.ApplyT(func (v *ProjectLogsConfigCloudwatchLogs) ProjectLogsConfigCloudwatchLogs { return *v }).(ProjectLogsConfigCloudwatchLogsOutput)
}

// The group name of the logs in CloudWatch Logs.
func (o ProjectLogsConfigCloudwatchLogsPtrOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProjectLogsConfigCloudwatchLogs) *string { return v.GroupName }).(pulumi.StringPtrOutput)
}

// Current status of logs in S3 for a build project. Valid values: `ENABLED`, `DISABLED`. Defaults to `DISABLED`.
func (o ProjectLogsConfigCloudwatchLogsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProjectLogsConfigCloudwatchLogs) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The stream name of the logs in CloudWatch Logs.
func (o ProjectLogsConfigCloudwatchLogsPtrOutput) StreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProjectLogsConfigCloudwatchLogs) *string { return v.StreamName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ProjectLogsConfigCloudwatchLogsOutput{})
	pulumi.RegisterOutputType(ProjectLogsConfigCloudwatchLogsPtrOutput{})
}
