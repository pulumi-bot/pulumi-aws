// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package WebhookFilterGroupFilter

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type WebhookFilterGroupFilter struct {
	// If set to `true`, the specified filter does *not* trigger a build. Defaults to `false`.
	ExcludeMatchedPattern *bool `pulumi:"excludeMatchedPattern"`
	// For a filter that uses `EVENT` type, a comma-separated string that specifies one event: `PUSH`, `PULL_REQUEST_CREATED`, `PULL_REQUEST_UPDATED`, `PULL_REQUEST_REOPENED`. `PULL_REQUEST_MERGED` works with GitHub & GitHub Enterprise only. For a filter that uses any of the other filter types, a regular expression.
	Pattern string `pulumi:"pattern"`
	// The webhook filter group's type. Valid values for this parameter are: `EVENT`, `BASE_REF`, `HEAD_REF`, `ACTOR_ACCOUNT_ID`, `FILE_PATH`. At least one filter group must specify `EVENT` as its type.
	Type string `pulumi:"type"`
}

type WebhookFilterGroupFilterInput interface {
	pulumi.Input

	ToWebhookFilterGroupFilterOutput() WebhookFilterGroupFilterOutput
	ToWebhookFilterGroupFilterOutputWithContext(context.Context) WebhookFilterGroupFilterOutput
}

type WebhookFilterGroupFilterArgs struct {
	// If set to `true`, the specified filter does *not* trigger a build. Defaults to `false`.
	ExcludeMatchedPattern pulumi.BoolPtrInput `pulumi:"excludeMatchedPattern"`
	// For a filter that uses `EVENT` type, a comma-separated string that specifies one event: `PUSH`, `PULL_REQUEST_CREATED`, `PULL_REQUEST_UPDATED`, `PULL_REQUEST_REOPENED`. `PULL_REQUEST_MERGED` works with GitHub & GitHub Enterprise only. For a filter that uses any of the other filter types, a regular expression.
	Pattern pulumi.StringInput `pulumi:"pattern"`
	// The webhook filter group's type. Valid values for this parameter are: `EVENT`, `BASE_REF`, `HEAD_REF`, `ACTOR_ACCOUNT_ID`, `FILE_PATH`. At least one filter group must specify `EVENT` as its type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebhookFilterGroupFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookFilterGroupFilter)(nil)).Elem()
}

func (i WebhookFilterGroupFilterArgs) ToWebhookFilterGroupFilterOutput() WebhookFilterGroupFilterOutput {
	return i.ToWebhookFilterGroupFilterOutputWithContext(context.Background())
}

func (i WebhookFilterGroupFilterArgs) ToWebhookFilterGroupFilterOutputWithContext(ctx context.Context) WebhookFilterGroupFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookFilterGroupFilterOutput)
}

type WebhookFilterGroupFilterArrayInput interface {
	pulumi.Input

	ToWebhookFilterGroupFilterArrayOutput() WebhookFilterGroupFilterArrayOutput
	ToWebhookFilterGroupFilterArrayOutputWithContext(context.Context) WebhookFilterGroupFilterArrayOutput
}

type WebhookFilterGroupFilterArray []WebhookFilterGroupFilterInput

func (WebhookFilterGroupFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookFilterGroupFilter)(nil)).Elem()
}

func (i WebhookFilterGroupFilterArray) ToWebhookFilterGroupFilterArrayOutput() WebhookFilterGroupFilterArrayOutput {
	return i.ToWebhookFilterGroupFilterArrayOutputWithContext(context.Background())
}

func (i WebhookFilterGroupFilterArray) ToWebhookFilterGroupFilterArrayOutputWithContext(ctx context.Context) WebhookFilterGroupFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookFilterGroupFilterArrayOutput)
}

type WebhookFilterGroupFilterOutput struct { *pulumi.OutputState }

func (WebhookFilterGroupFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookFilterGroupFilter)(nil)).Elem()
}

func (o WebhookFilterGroupFilterOutput) ToWebhookFilterGroupFilterOutput() WebhookFilterGroupFilterOutput {
	return o
}

func (o WebhookFilterGroupFilterOutput) ToWebhookFilterGroupFilterOutputWithContext(ctx context.Context) WebhookFilterGroupFilterOutput {
	return o
}

// If set to `true`, the specified filter does *not* trigger a build. Defaults to `false`.
func (o WebhookFilterGroupFilterOutput) ExcludeMatchedPattern() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v WebhookFilterGroupFilter) *bool { return v.ExcludeMatchedPattern }).(pulumi.BoolPtrOutput)
}

// For a filter that uses `EVENT` type, a comma-separated string that specifies one event: `PUSH`, `PULL_REQUEST_CREATED`, `PULL_REQUEST_UPDATED`, `PULL_REQUEST_REOPENED`. `PULL_REQUEST_MERGED` works with GitHub & GitHub Enterprise only. For a filter that uses any of the other filter types, a regular expression.
func (o WebhookFilterGroupFilterOutput) Pattern() pulumi.StringOutput {
	return o.ApplyT(func (v WebhookFilterGroupFilter) string { return v.Pattern }).(pulumi.StringOutput)
}

// The webhook filter group's type. Valid values for this parameter are: `EVENT`, `BASE_REF`, `HEAD_REF`, `ACTOR_ACCOUNT_ID`, `FILE_PATH`. At least one filter group must specify `EVENT` as its type.
func (o WebhookFilterGroupFilterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func (v WebhookFilterGroupFilter) string { return v.Type }).(pulumi.StringOutput)
}

type WebhookFilterGroupFilterArrayOutput struct { *pulumi.OutputState}

func (WebhookFilterGroupFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookFilterGroupFilter)(nil)).Elem()
}

func (o WebhookFilterGroupFilterArrayOutput) ToWebhookFilterGroupFilterArrayOutput() WebhookFilterGroupFilterArrayOutput {
	return o
}

func (o WebhookFilterGroupFilterArrayOutput) ToWebhookFilterGroupFilterArrayOutputWithContext(ctx context.Context) WebhookFilterGroupFilterArrayOutput {
	return o
}

func (o WebhookFilterGroupFilterArrayOutput) Index(i pulumi.IntInput) WebhookFilterGroupFilterOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) WebhookFilterGroupFilter {
		return vs[0].([]WebhookFilterGroupFilter)[vs[1].(int)]
	}).(WebhookFilterGroupFilterOutput)
}

func init() {
	pulumi.RegisterOutputType(WebhookFilterGroupFilterOutput{})
	pulumi.RegisterOutputType(WebhookFilterGroupFilterArrayOutput{})
}
