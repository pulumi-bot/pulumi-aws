// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package elasticloadbalancing

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Deprecated: aws.elasticloadbalancing.LoadBalancer has been deprecated in favor of aws.elb.LoadBalancer
type LoadBalancer struct {
	pulumi.CustomResourceState

	AccessLogs                LoadBalancerAccessLogsPtrOutput `pulumi:"accessLogs"`
	Arn                       pulumi.StringOutput             `pulumi:"arn"`
	AvailabilityZones         pulumi.StringArrayOutput        `pulumi:"availabilityZones"`
	ConnectionDraining        pulumi.BoolPtrOutput            `pulumi:"connectionDraining"`
	ConnectionDrainingTimeout pulumi.IntPtrOutput             `pulumi:"connectionDrainingTimeout"`
	CrossZoneLoadBalancing    pulumi.BoolPtrOutput            `pulumi:"crossZoneLoadBalancing"`
	DnsName                   pulumi.StringOutput             `pulumi:"dnsName"`
	HealthCheck               LoadBalancerHealthCheckOutput   `pulumi:"healthCheck"`
	IdleTimeout               pulumi.IntPtrOutput             `pulumi:"idleTimeout"`
	Instances                 pulumi.StringArrayOutput        `pulumi:"instances"`
	Internal                  pulumi.BoolOutput               `pulumi:"internal"`
	Listeners                 LoadBalancerListenerArrayOutput `pulumi:"listeners"`
	Name                      pulumi.StringOutput             `pulumi:"name"`
	NamePrefix                pulumi.StringPtrOutput          `pulumi:"namePrefix"`
	SecurityGroups            pulumi.StringArrayOutput        `pulumi:"securityGroups"`
	SourceSecurityGroup       pulumi.StringOutput             `pulumi:"sourceSecurityGroup"`
	SourceSecurityGroupId     pulumi.StringOutput             `pulumi:"sourceSecurityGroupId"`
	Subnets                   pulumi.StringArrayOutput        `pulumi:"subnets"`
	Tags                      pulumi.StringMapOutput          `pulumi:"tags"`
	ZoneId                    pulumi.StringOutput             `pulumi:"zoneId"`
}

// NewLoadBalancer registers a new resource with the given unique name, arguments, and options.
func NewLoadBalancer(ctx *pulumi.Context,
	name string, args *LoadBalancerArgs, opts ...pulumi.ResourceOption) (*LoadBalancer, error) {
	if args == nil || args.Listeners == nil {
		return nil, errors.New("missing required argument 'Listeners'")
	}
	if args == nil {
		args = &LoadBalancerArgs{}
	}
	var resource LoadBalancer
	err := ctx.RegisterResource("aws:elasticloadbalancing/loadBalancer:LoadBalancer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoadBalancer gets an existing LoadBalancer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoadBalancer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoadBalancerState, opts ...pulumi.ResourceOption) (*LoadBalancer, error) {
	var resource LoadBalancer
	err := ctx.ReadResource("aws:elasticloadbalancing/loadBalancer:LoadBalancer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoadBalancer resources.
type loadBalancerState struct {
	AccessLogs                *LoadBalancerAccessLogs  `pulumi:"accessLogs"`
	Arn                       *string                  `pulumi:"arn"`
	AvailabilityZones         []string                 `pulumi:"availabilityZones"`
	ConnectionDraining        *bool                    `pulumi:"connectionDraining"`
	ConnectionDrainingTimeout *int                     `pulumi:"connectionDrainingTimeout"`
	CrossZoneLoadBalancing    *bool                    `pulumi:"crossZoneLoadBalancing"`
	DnsName                   *string                  `pulumi:"dnsName"`
	HealthCheck               *LoadBalancerHealthCheck `pulumi:"healthCheck"`
	IdleTimeout               *int                     `pulumi:"idleTimeout"`
	Instances                 []string                 `pulumi:"instances"`
	Internal                  *bool                    `pulumi:"internal"`
	Listeners                 []LoadBalancerListener   `pulumi:"listeners"`
	Name                      *string                  `pulumi:"name"`
	NamePrefix                *string                  `pulumi:"namePrefix"`
	SecurityGroups            []string                 `pulumi:"securityGroups"`
	SourceSecurityGroup       *string                  `pulumi:"sourceSecurityGroup"`
	SourceSecurityGroupId     *string                  `pulumi:"sourceSecurityGroupId"`
	Subnets                   []string                 `pulumi:"subnets"`
	Tags                      map[string]string        `pulumi:"tags"`
	ZoneId                    *string                  `pulumi:"zoneId"`
}

type LoadBalancerState struct {
	AccessLogs                LoadBalancerAccessLogsPtrInput
	Arn                       pulumi.StringPtrInput
	AvailabilityZones         pulumi.StringArrayInput
	ConnectionDraining        pulumi.BoolPtrInput
	ConnectionDrainingTimeout pulumi.IntPtrInput
	CrossZoneLoadBalancing    pulumi.BoolPtrInput
	DnsName                   pulumi.StringPtrInput
	HealthCheck               LoadBalancerHealthCheckPtrInput
	IdleTimeout               pulumi.IntPtrInput
	Instances                 pulumi.StringArrayInput
	Internal                  pulumi.BoolPtrInput
	Listeners                 LoadBalancerListenerArrayInput
	Name                      pulumi.StringPtrInput
	NamePrefix                pulumi.StringPtrInput
	SecurityGroups            pulumi.StringArrayInput
	SourceSecurityGroup       pulumi.StringPtrInput
	SourceSecurityGroupId     pulumi.StringPtrInput
	Subnets                   pulumi.StringArrayInput
	Tags                      pulumi.StringMapInput
	ZoneId                    pulumi.StringPtrInput
}

func (LoadBalancerState) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancerState)(nil)).Elem()
}

type loadBalancerArgs struct {
	AccessLogs                *LoadBalancerAccessLogs  `pulumi:"accessLogs"`
	AvailabilityZones         []string                 `pulumi:"availabilityZones"`
	ConnectionDraining        *bool                    `pulumi:"connectionDraining"`
	ConnectionDrainingTimeout *int                     `pulumi:"connectionDrainingTimeout"`
	CrossZoneLoadBalancing    *bool                    `pulumi:"crossZoneLoadBalancing"`
	HealthCheck               *LoadBalancerHealthCheck `pulumi:"healthCheck"`
	IdleTimeout               *int                     `pulumi:"idleTimeout"`
	Instances                 []string                 `pulumi:"instances"`
	Internal                  *bool                    `pulumi:"internal"`
	Listeners                 []LoadBalancerListener   `pulumi:"listeners"`
	Name                      *string                  `pulumi:"name"`
	NamePrefix                *string                  `pulumi:"namePrefix"`
	SecurityGroups            []string                 `pulumi:"securityGroups"`
	SourceSecurityGroup       *string                  `pulumi:"sourceSecurityGroup"`
	Subnets                   []string                 `pulumi:"subnets"`
	Tags                      map[string]string        `pulumi:"tags"`
}

// The set of arguments for constructing a LoadBalancer resource.
type LoadBalancerArgs struct {
	AccessLogs                LoadBalancerAccessLogsPtrInput
	AvailabilityZones         pulumi.StringArrayInput
	ConnectionDraining        pulumi.BoolPtrInput
	ConnectionDrainingTimeout pulumi.IntPtrInput
	CrossZoneLoadBalancing    pulumi.BoolPtrInput
	HealthCheck               LoadBalancerHealthCheckPtrInput
	IdleTimeout               pulumi.IntPtrInput
	Instances                 pulumi.StringArrayInput
	Internal                  pulumi.BoolPtrInput
	Listeners                 LoadBalancerListenerArrayInput
	Name                      pulumi.StringPtrInput
	NamePrefix                pulumi.StringPtrInput
	SecurityGroups            pulumi.StringArrayInput
	SourceSecurityGroup       pulumi.StringPtrInput
	Subnets                   pulumi.StringArrayInput
	Tags                      pulumi.StringMapInput
}

func (LoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancerArgs)(nil)).Elem()
}
