// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package directoryservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type DirectoryConnectSettings struct {
	// The DNS IP addresses of the domain to connect to.
	CustomerDnsIps []string `pulumi:"customerDnsIps"`
	// The username corresponding to the password provided.
	CustomerUsername string `pulumi:"customerUsername"`
	// The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
	SubnetIds []string `pulumi:"subnetIds"`
	// The identifier of the VPC that the directory is in.
	VpcId string `pulumi:"vpcId"`
}

type DirectoryConnectSettingsInput interface {
	pulumi.Input

	ToDirectoryConnectSettingsOutput() DirectoryConnectSettingsOutput
	ToDirectoryConnectSettingsOutputWithContext(context.Context) DirectoryConnectSettingsOutput
}

type DirectoryConnectSettingsArgs struct {
	// The DNS IP addresses of the domain to connect to.
	CustomerDnsIps pulumi.StringArrayInput `pulumi:"customerDnsIps"`
	// The username corresponding to the password provided.
	CustomerUsername pulumi.StringInput `pulumi:"customerUsername"`
	// The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// The identifier of the VPC that the directory is in.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (DirectoryConnectSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryConnectSettings)(nil)).Elem()
}

func (i DirectoryConnectSettingsArgs) ToDirectoryConnectSettingsOutput() DirectoryConnectSettingsOutput {
	return i.ToDirectoryConnectSettingsOutputWithContext(context.Background())
}

func (i DirectoryConnectSettingsArgs) ToDirectoryConnectSettingsOutputWithContext(ctx context.Context) DirectoryConnectSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryConnectSettingsOutput)
}

func (i DirectoryConnectSettingsArgs) ToDirectoryConnectSettingsPtrOutput() DirectoryConnectSettingsPtrOutput {
	return i.ToDirectoryConnectSettingsPtrOutputWithContext(context.Background())
}

func (i DirectoryConnectSettingsArgs) ToDirectoryConnectSettingsPtrOutputWithContext(ctx context.Context) DirectoryConnectSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryConnectSettingsOutput).ToDirectoryConnectSettingsPtrOutputWithContext(ctx)
}

type DirectoryConnectSettingsPtrInput interface {
	pulumi.Input

	ToDirectoryConnectSettingsPtrOutput() DirectoryConnectSettingsPtrOutput
	ToDirectoryConnectSettingsPtrOutputWithContext(context.Context) DirectoryConnectSettingsPtrOutput
}

type directoryConnectSettingsPtrType DirectoryConnectSettingsArgs

func DirectoryConnectSettingsPtr(v *DirectoryConnectSettingsArgs) DirectoryConnectSettingsPtrInput {
	return (*directoryConnectSettingsPtrType)(v)
}

func (*directoryConnectSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryConnectSettings)(nil)).Elem()
}

func (i *directoryConnectSettingsPtrType) ToDirectoryConnectSettingsPtrOutput() DirectoryConnectSettingsPtrOutput {
	return i.ToDirectoryConnectSettingsPtrOutputWithContext(context.Background())
}

func (i *directoryConnectSettingsPtrType) ToDirectoryConnectSettingsPtrOutputWithContext(ctx context.Context) DirectoryConnectSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryConnectSettingsPtrOutput)
}

type DirectoryConnectSettingsOutput struct{ *pulumi.OutputState }

func (DirectoryConnectSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryConnectSettings)(nil)).Elem()
}

func (o DirectoryConnectSettingsOutput) ToDirectoryConnectSettingsOutput() DirectoryConnectSettingsOutput {
	return o
}

func (o DirectoryConnectSettingsOutput) ToDirectoryConnectSettingsOutputWithContext(ctx context.Context) DirectoryConnectSettingsOutput {
	return o
}

func (o DirectoryConnectSettingsOutput) ToDirectoryConnectSettingsPtrOutput() DirectoryConnectSettingsPtrOutput {
	return o.ToDirectoryConnectSettingsPtrOutputWithContext(context.Background())
}

func (o DirectoryConnectSettingsOutput) ToDirectoryConnectSettingsPtrOutputWithContext(ctx context.Context) DirectoryConnectSettingsPtrOutput {
	return o.ApplyT(func(v DirectoryConnectSettings) *DirectoryConnectSettings {
		return &v
	}).(DirectoryConnectSettingsPtrOutput)
}

// The DNS IP addresses of the domain to connect to.
func (o DirectoryConnectSettingsOutput) CustomerDnsIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DirectoryConnectSettings) []string { return v.CustomerDnsIps }).(pulumi.StringArrayOutput)
}

// The username corresponding to the password provided.
func (o DirectoryConnectSettingsOutput) CustomerUsername() pulumi.StringOutput {
	return o.ApplyT(func(v DirectoryConnectSettings) string { return v.CustomerUsername }).(pulumi.StringOutput)
}

// The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
func (o DirectoryConnectSettingsOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DirectoryConnectSettings) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// The identifier of the VPC that the directory is in.
func (o DirectoryConnectSettingsOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v DirectoryConnectSettings) string { return v.VpcId }).(pulumi.StringOutput)
}

type DirectoryConnectSettingsPtrOutput struct{ *pulumi.OutputState }

func (DirectoryConnectSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryConnectSettings)(nil)).Elem()
}

func (o DirectoryConnectSettingsPtrOutput) ToDirectoryConnectSettingsPtrOutput() DirectoryConnectSettingsPtrOutput {
	return o
}

func (o DirectoryConnectSettingsPtrOutput) ToDirectoryConnectSettingsPtrOutputWithContext(ctx context.Context) DirectoryConnectSettingsPtrOutput {
	return o
}

func (o DirectoryConnectSettingsPtrOutput) Elem() DirectoryConnectSettingsOutput {
	return o.ApplyT(func(v *DirectoryConnectSettings) DirectoryConnectSettings { return *v }).(DirectoryConnectSettingsOutput)
}

// The DNS IP addresses of the domain to connect to.
func (o DirectoryConnectSettingsPtrOutput) CustomerDnsIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DirectoryConnectSettings) []string { return v.CustomerDnsIps }).(pulumi.StringArrayOutput)
}

// The username corresponding to the password provided.
func (o DirectoryConnectSettingsPtrOutput) CustomerUsername() pulumi.StringOutput {
	return o.ApplyT(func(v DirectoryConnectSettings) string { return v.CustomerUsername }).(pulumi.StringOutput)
}

// The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
func (o DirectoryConnectSettingsPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DirectoryConnectSettings) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// The identifier of the VPC that the directory is in.
func (o DirectoryConnectSettingsPtrOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v DirectoryConnectSettings) string { return v.VpcId }).(pulumi.StringOutput)
}

type DirectoryConnectSettingsArgs struct {
	// The DNS IP addresses of the domain to connect to.
	CustomerDnsIps []string `pulumi:"customerDnsIps"`
	// The username corresponding to the password provided.
	CustomerUsername string `pulumi:"customerUsername"`
	// The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
	SubnetIds []string `pulumi:"subnetIds"`
	// The identifier of the VPC that the directory is in.
	VpcId string `pulumi:"vpcId"`
}

type DirectoryConnectSettingsArgsInput interface {
	pulumi.Input

	ToDirectoryConnectSettingsArgsOutput() DirectoryConnectSettingsArgsOutput
	ToDirectoryConnectSettingsArgsOutputWithContext(context.Context) DirectoryConnectSettingsArgsOutput
}

type DirectoryConnectSettingsArgsArgs struct {
	// The DNS IP addresses of the domain to connect to.
	CustomerDnsIps pulumi.StringArrayInput `pulumi:"customerDnsIps"`
	// The username corresponding to the password provided.
	CustomerUsername pulumi.StringInput `pulumi:"customerUsername"`
	// The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// The identifier of the VPC that the directory is in.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (DirectoryConnectSettingsArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryConnectSettingsArgs)(nil)).Elem()
}

func (i DirectoryConnectSettingsArgsArgs) ToDirectoryConnectSettingsArgsOutput() DirectoryConnectSettingsArgsOutput {
	return i.ToDirectoryConnectSettingsArgsOutputWithContext(context.Background())
}

func (i DirectoryConnectSettingsArgsArgs) ToDirectoryConnectSettingsArgsOutputWithContext(ctx context.Context) DirectoryConnectSettingsArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryConnectSettingsArgsOutput)
}

func (i DirectoryConnectSettingsArgsArgs) ToDirectoryConnectSettingsArgsPtrOutput() DirectoryConnectSettingsArgsPtrOutput {
	return i.ToDirectoryConnectSettingsArgsPtrOutputWithContext(context.Background())
}

func (i DirectoryConnectSettingsArgsArgs) ToDirectoryConnectSettingsArgsPtrOutputWithContext(ctx context.Context) DirectoryConnectSettingsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryConnectSettingsArgsOutput).ToDirectoryConnectSettingsArgsPtrOutputWithContext(ctx)
}

type DirectoryConnectSettingsArgsPtrInput interface {
	pulumi.Input

	ToDirectoryConnectSettingsArgsPtrOutput() DirectoryConnectSettingsArgsPtrOutput
	ToDirectoryConnectSettingsArgsPtrOutputWithContext(context.Context) DirectoryConnectSettingsArgsPtrOutput
}

type directoryConnectSettingsArgsPtrType DirectoryConnectSettingsArgsArgs

func DirectoryConnectSettingsArgsPtr(v *DirectoryConnectSettingsArgsArgs) DirectoryConnectSettingsArgsPtrInput {
	return (*directoryConnectSettingsArgsPtrType)(v)
}

func (*directoryConnectSettingsArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryConnectSettingsArgs)(nil)).Elem()
}

func (i *directoryConnectSettingsArgsPtrType) ToDirectoryConnectSettingsArgsPtrOutput() DirectoryConnectSettingsArgsPtrOutput {
	return i.ToDirectoryConnectSettingsArgsPtrOutputWithContext(context.Background())
}

func (i *directoryConnectSettingsArgsPtrType) ToDirectoryConnectSettingsArgsPtrOutputWithContext(ctx context.Context) DirectoryConnectSettingsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryConnectSettingsArgsPtrOutput)
}

type DirectoryConnectSettingsArgsOutput struct{ *pulumi.OutputState }

func (DirectoryConnectSettingsArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryConnectSettingsArgs)(nil)).Elem()
}

func (o DirectoryConnectSettingsArgsOutput) ToDirectoryConnectSettingsArgsOutput() DirectoryConnectSettingsArgsOutput {
	return o
}

func (o DirectoryConnectSettingsArgsOutput) ToDirectoryConnectSettingsArgsOutputWithContext(ctx context.Context) DirectoryConnectSettingsArgsOutput {
	return o
}

func (o DirectoryConnectSettingsArgsOutput) ToDirectoryConnectSettingsArgsPtrOutput() DirectoryConnectSettingsArgsPtrOutput {
	return o.ToDirectoryConnectSettingsArgsPtrOutputWithContext(context.Background())
}

func (o DirectoryConnectSettingsArgsOutput) ToDirectoryConnectSettingsArgsPtrOutputWithContext(ctx context.Context) DirectoryConnectSettingsArgsPtrOutput {
	return o.ApplyT(func(v DirectoryConnectSettingsArgs) *DirectoryConnectSettingsArgs {
		return &v
	}).(DirectoryConnectSettingsArgsPtrOutput)
}

// The DNS IP addresses of the domain to connect to.
func (o DirectoryConnectSettingsArgsOutput) CustomerDnsIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DirectoryConnectSettingsArgs) []string { return v.CustomerDnsIps }).(pulumi.StringArrayOutput)
}

// The username corresponding to the password provided.
func (o DirectoryConnectSettingsArgsOutput) CustomerUsername() pulumi.StringOutput {
	return o.ApplyT(func(v DirectoryConnectSettingsArgs) string { return v.CustomerUsername }).(pulumi.StringOutput)
}

// The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
func (o DirectoryConnectSettingsArgsOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DirectoryConnectSettingsArgs) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// The identifier of the VPC that the directory is in.
func (o DirectoryConnectSettingsArgsOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v DirectoryConnectSettingsArgs) string { return v.VpcId }).(pulumi.StringOutput)
}

type DirectoryConnectSettingsArgsPtrOutput struct{ *pulumi.OutputState }

func (DirectoryConnectSettingsArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryConnectSettingsArgs)(nil)).Elem()
}

func (o DirectoryConnectSettingsArgsPtrOutput) ToDirectoryConnectSettingsArgsPtrOutput() DirectoryConnectSettingsArgsPtrOutput {
	return o
}

func (o DirectoryConnectSettingsArgsPtrOutput) ToDirectoryConnectSettingsArgsPtrOutputWithContext(ctx context.Context) DirectoryConnectSettingsArgsPtrOutput {
	return o
}

func (o DirectoryConnectSettingsArgsPtrOutput) Elem() DirectoryConnectSettingsArgsOutput {
	return o.ApplyT(func(v *DirectoryConnectSettingsArgs) DirectoryConnectSettingsArgs { return *v }).(DirectoryConnectSettingsArgsOutput)
}

// The DNS IP addresses of the domain to connect to.
func (o DirectoryConnectSettingsArgsPtrOutput) CustomerDnsIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DirectoryConnectSettingsArgs) []string { return v.CustomerDnsIps }).(pulumi.StringArrayOutput)
}

// The username corresponding to the password provided.
func (o DirectoryConnectSettingsArgsPtrOutput) CustomerUsername() pulumi.StringOutput {
	return o.ApplyT(func(v DirectoryConnectSettingsArgs) string { return v.CustomerUsername }).(pulumi.StringOutput)
}

// The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
func (o DirectoryConnectSettingsArgsPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DirectoryConnectSettingsArgs) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// The identifier of the VPC that the directory is in.
func (o DirectoryConnectSettingsArgsPtrOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v DirectoryConnectSettingsArgs) string { return v.VpcId }).(pulumi.StringOutput)
}

type DirectoryConnectSettingsState struct {
	// The DNS IP addresses of the domain to connect to.
	CustomerDnsIps []string `pulumi:"customerDnsIps"`
	// The username corresponding to the password provided.
	CustomerUsername string `pulumi:"customerUsername"`
	// The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
	SubnetIds []string `pulumi:"subnetIds"`
	// The identifier of the VPC that the directory is in.
	VpcId string `pulumi:"vpcId"`
}

type DirectoryConnectSettingsStateInput interface {
	pulumi.Input

	ToDirectoryConnectSettingsStateOutput() DirectoryConnectSettingsStateOutput
	ToDirectoryConnectSettingsStateOutputWithContext(context.Context) DirectoryConnectSettingsStateOutput
}

type DirectoryConnectSettingsStateArgs struct {
	// The DNS IP addresses of the domain to connect to.
	CustomerDnsIps pulumi.StringArrayInput `pulumi:"customerDnsIps"`
	// The username corresponding to the password provided.
	CustomerUsername pulumi.StringInput `pulumi:"customerUsername"`
	// The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// The identifier of the VPC that the directory is in.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (DirectoryConnectSettingsStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryConnectSettingsState)(nil)).Elem()
}

func (i DirectoryConnectSettingsStateArgs) ToDirectoryConnectSettingsStateOutput() DirectoryConnectSettingsStateOutput {
	return i.ToDirectoryConnectSettingsStateOutputWithContext(context.Background())
}

func (i DirectoryConnectSettingsStateArgs) ToDirectoryConnectSettingsStateOutputWithContext(ctx context.Context) DirectoryConnectSettingsStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryConnectSettingsStateOutput)
}

type DirectoryConnectSettingsStateOutput struct{ *pulumi.OutputState }

func (DirectoryConnectSettingsStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryConnectSettingsState)(nil)).Elem()
}

func (o DirectoryConnectSettingsStateOutput) ToDirectoryConnectSettingsStateOutput() DirectoryConnectSettingsStateOutput {
	return o
}

func (o DirectoryConnectSettingsStateOutput) ToDirectoryConnectSettingsStateOutputWithContext(ctx context.Context) DirectoryConnectSettingsStateOutput {
	return o
}

// The DNS IP addresses of the domain to connect to.
func (o DirectoryConnectSettingsStateOutput) CustomerDnsIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DirectoryConnectSettingsState) []string { return v.CustomerDnsIps }).(pulumi.StringArrayOutput)
}

// The username corresponding to the password provided.
func (o DirectoryConnectSettingsStateOutput) CustomerUsername() pulumi.StringOutput {
	return o.ApplyT(func(v DirectoryConnectSettingsState) string { return v.CustomerUsername }).(pulumi.StringOutput)
}

// The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
func (o DirectoryConnectSettingsStateOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DirectoryConnectSettingsState) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// The identifier of the VPC that the directory is in.
func (o DirectoryConnectSettingsStateOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v DirectoryConnectSettingsState) string { return v.VpcId }).(pulumi.StringOutput)
}

type DirectoryVpcSettings struct {
	// The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
	SubnetIds []string `pulumi:"subnetIds"`
	// The identifier of the VPC that the directory is in.
	VpcId string `pulumi:"vpcId"`
}

type DirectoryVpcSettingsInput interface {
	pulumi.Input

	ToDirectoryVpcSettingsOutput() DirectoryVpcSettingsOutput
	ToDirectoryVpcSettingsOutputWithContext(context.Context) DirectoryVpcSettingsOutput
}

type DirectoryVpcSettingsArgs struct {
	// The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// The identifier of the VPC that the directory is in.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (DirectoryVpcSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryVpcSettings)(nil)).Elem()
}

func (i DirectoryVpcSettingsArgs) ToDirectoryVpcSettingsOutput() DirectoryVpcSettingsOutput {
	return i.ToDirectoryVpcSettingsOutputWithContext(context.Background())
}

func (i DirectoryVpcSettingsArgs) ToDirectoryVpcSettingsOutputWithContext(ctx context.Context) DirectoryVpcSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryVpcSettingsOutput)
}

func (i DirectoryVpcSettingsArgs) ToDirectoryVpcSettingsPtrOutput() DirectoryVpcSettingsPtrOutput {
	return i.ToDirectoryVpcSettingsPtrOutputWithContext(context.Background())
}

func (i DirectoryVpcSettingsArgs) ToDirectoryVpcSettingsPtrOutputWithContext(ctx context.Context) DirectoryVpcSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryVpcSettingsOutput).ToDirectoryVpcSettingsPtrOutputWithContext(ctx)
}

type DirectoryVpcSettingsPtrInput interface {
	pulumi.Input

	ToDirectoryVpcSettingsPtrOutput() DirectoryVpcSettingsPtrOutput
	ToDirectoryVpcSettingsPtrOutputWithContext(context.Context) DirectoryVpcSettingsPtrOutput
}

type directoryVpcSettingsPtrType DirectoryVpcSettingsArgs

func DirectoryVpcSettingsPtr(v *DirectoryVpcSettingsArgs) DirectoryVpcSettingsPtrInput {
	return (*directoryVpcSettingsPtrType)(v)
}

func (*directoryVpcSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryVpcSettings)(nil)).Elem()
}

func (i *directoryVpcSettingsPtrType) ToDirectoryVpcSettingsPtrOutput() DirectoryVpcSettingsPtrOutput {
	return i.ToDirectoryVpcSettingsPtrOutputWithContext(context.Background())
}

func (i *directoryVpcSettingsPtrType) ToDirectoryVpcSettingsPtrOutputWithContext(ctx context.Context) DirectoryVpcSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryVpcSettingsPtrOutput)
}

type DirectoryVpcSettingsOutput struct{ *pulumi.OutputState }

func (DirectoryVpcSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryVpcSettings)(nil)).Elem()
}

func (o DirectoryVpcSettingsOutput) ToDirectoryVpcSettingsOutput() DirectoryVpcSettingsOutput {
	return o
}

func (o DirectoryVpcSettingsOutput) ToDirectoryVpcSettingsOutputWithContext(ctx context.Context) DirectoryVpcSettingsOutput {
	return o
}

func (o DirectoryVpcSettingsOutput) ToDirectoryVpcSettingsPtrOutput() DirectoryVpcSettingsPtrOutput {
	return o.ToDirectoryVpcSettingsPtrOutputWithContext(context.Background())
}

func (o DirectoryVpcSettingsOutput) ToDirectoryVpcSettingsPtrOutputWithContext(ctx context.Context) DirectoryVpcSettingsPtrOutput {
	return o.ApplyT(func(v DirectoryVpcSettings) *DirectoryVpcSettings {
		return &v
	}).(DirectoryVpcSettingsPtrOutput)
}

// The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
func (o DirectoryVpcSettingsOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DirectoryVpcSettings) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// The identifier of the VPC that the directory is in.
func (o DirectoryVpcSettingsOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v DirectoryVpcSettings) string { return v.VpcId }).(pulumi.StringOutput)
}

type DirectoryVpcSettingsPtrOutput struct{ *pulumi.OutputState }

func (DirectoryVpcSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryVpcSettings)(nil)).Elem()
}

func (o DirectoryVpcSettingsPtrOutput) ToDirectoryVpcSettingsPtrOutput() DirectoryVpcSettingsPtrOutput {
	return o
}

func (o DirectoryVpcSettingsPtrOutput) ToDirectoryVpcSettingsPtrOutputWithContext(ctx context.Context) DirectoryVpcSettingsPtrOutput {
	return o
}

func (o DirectoryVpcSettingsPtrOutput) Elem() DirectoryVpcSettingsOutput {
	return o.ApplyT(func(v *DirectoryVpcSettings) DirectoryVpcSettings { return *v }).(DirectoryVpcSettingsOutput)
}

// The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
func (o DirectoryVpcSettingsPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DirectoryVpcSettings) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// The identifier of the VPC that the directory is in.
func (o DirectoryVpcSettingsPtrOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v DirectoryVpcSettings) string { return v.VpcId }).(pulumi.StringOutput)
}

type DirectoryVpcSettingsArgs struct {
	// The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
	SubnetIds []string `pulumi:"subnetIds"`
	// The identifier of the VPC that the directory is in.
	VpcId string `pulumi:"vpcId"`
}

type DirectoryVpcSettingsArgsInput interface {
	pulumi.Input

	ToDirectoryVpcSettingsArgsOutput() DirectoryVpcSettingsArgsOutput
	ToDirectoryVpcSettingsArgsOutputWithContext(context.Context) DirectoryVpcSettingsArgsOutput
}

type DirectoryVpcSettingsArgsArgs struct {
	// The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// The identifier of the VPC that the directory is in.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (DirectoryVpcSettingsArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryVpcSettingsArgs)(nil)).Elem()
}

func (i DirectoryVpcSettingsArgsArgs) ToDirectoryVpcSettingsArgsOutput() DirectoryVpcSettingsArgsOutput {
	return i.ToDirectoryVpcSettingsArgsOutputWithContext(context.Background())
}

func (i DirectoryVpcSettingsArgsArgs) ToDirectoryVpcSettingsArgsOutputWithContext(ctx context.Context) DirectoryVpcSettingsArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryVpcSettingsArgsOutput)
}

func (i DirectoryVpcSettingsArgsArgs) ToDirectoryVpcSettingsArgsPtrOutput() DirectoryVpcSettingsArgsPtrOutput {
	return i.ToDirectoryVpcSettingsArgsPtrOutputWithContext(context.Background())
}

func (i DirectoryVpcSettingsArgsArgs) ToDirectoryVpcSettingsArgsPtrOutputWithContext(ctx context.Context) DirectoryVpcSettingsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryVpcSettingsArgsOutput).ToDirectoryVpcSettingsArgsPtrOutputWithContext(ctx)
}

type DirectoryVpcSettingsArgsPtrInput interface {
	pulumi.Input

	ToDirectoryVpcSettingsArgsPtrOutput() DirectoryVpcSettingsArgsPtrOutput
	ToDirectoryVpcSettingsArgsPtrOutputWithContext(context.Context) DirectoryVpcSettingsArgsPtrOutput
}

type directoryVpcSettingsArgsPtrType DirectoryVpcSettingsArgsArgs

func DirectoryVpcSettingsArgsPtr(v *DirectoryVpcSettingsArgsArgs) DirectoryVpcSettingsArgsPtrInput {
	return (*directoryVpcSettingsArgsPtrType)(v)
}

func (*directoryVpcSettingsArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryVpcSettingsArgs)(nil)).Elem()
}

func (i *directoryVpcSettingsArgsPtrType) ToDirectoryVpcSettingsArgsPtrOutput() DirectoryVpcSettingsArgsPtrOutput {
	return i.ToDirectoryVpcSettingsArgsPtrOutputWithContext(context.Background())
}

func (i *directoryVpcSettingsArgsPtrType) ToDirectoryVpcSettingsArgsPtrOutputWithContext(ctx context.Context) DirectoryVpcSettingsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryVpcSettingsArgsPtrOutput)
}

type DirectoryVpcSettingsArgsOutput struct{ *pulumi.OutputState }

func (DirectoryVpcSettingsArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryVpcSettingsArgs)(nil)).Elem()
}

func (o DirectoryVpcSettingsArgsOutput) ToDirectoryVpcSettingsArgsOutput() DirectoryVpcSettingsArgsOutput {
	return o
}

func (o DirectoryVpcSettingsArgsOutput) ToDirectoryVpcSettingsArgsOutputWithContext(ctx context.Context) DirectoryVpcSettingsArgsOutput {
	return o
}

func (o DirectoryVpcSettingsArgsOutput) ToDirectoryVpcSettingsArgsPtrOutput() DirectoryVpcSettingsArgsPtrOutput {
	return o.ToDirectoryVpcSettingsArgsPtrOutputWithContext(context.Background())
}

func (o DirectoryVpcSettingsArgsOutput) ToDirectoryVpcSettingsArgsPtrOutputWithContext(ctx context.Context) DirectoryVpcSettingsArgsPtrOutput {
	return o.ApplyT(func(v DirectoryVpcSettingsArgs) *DirectoryVpcSettingsArgs {
		return &v
	}).(DirectoryVpcSettingsArgsPtrOutput)
}

// The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
func (o DirectoryVpcSettingsArgsOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DirectoryVpcSettingsArgs) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// The identifier of the VPC that the directory is in.
func (o DirectoryVpcSettingsArgsOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v DirectoryVpcSettingsArgs) string { return v.VpcId }).(pulumi.StringOutput)
}

type DirectoryVpcSettingsArgsPtrOutput struct{ *pulumi.OutputState }

func (DirectoryVpcSettingsArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryVpcSettingsArgs)(nil)).Elem()
}

func (o DirectoryVpcSettingsArgsPtrOutput) ToDirectoryVpcSettingsArgsPtrOutput() DirectoryVpcSettingsArgsPtrOutput {
	return o
}

func (o DirectoryVpcSettingsArgsPtrOutput) ToDirectoryVpcSettingsArgsPtrOutputWithContext(ctx context.Context) DirectoryVpcSettingsArgsPtrOutput {
	return o
}

func (o DirectoryVpcSettingsArgsPtrOutput) Elem() DirectoryVpcSettingsArgsOutput {
	return o.ApplyT(func(v *DirectoryVpcSettingsArgs) DirectoryVpcSettingsArgs { return *v }).(DirectoryVpcSettingsArgsOutput)
}

// The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
func (o DirectoryVpcSettingsArgsPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DirectoryVpcSettingsArgs) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// The identifier of the VPC that the directory is in.
func (o DirectoryVpcSettingsArgsPtrOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v DirectoryVpcSettingsArgs) string { return v.VpcId }).(pulumi.StringOutput)
}

type DirectoryVpcSettingsState struct {
	// The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
	SubnetIds []string `pulumi:"subnetIds"`
	// The identifier of the VPC that the directory is in.
	VpcId string `pulumi:"vpcId"`
}

type DirectoryVpcSettingsStateInput interface {
	pulumi.Input

	ToDirectoryVpcSettingsStateOutput() DirectoryVpcSettingsStateOutput
	ToDirectoryVpcSettingsStateOutputWithContext(context.Context) DirectoryVpcSettingsStateOutput
}

type DirectoryVpcSettingsStateArgs struct {
	// The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// The identifier of the VPC that the directory is in.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (DirectoryVpcSettingsStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryVpcSettingsState)(nil)).Elem()
}

func (i DirectoryVpcSettingsStateArgs) ToDirectoryVpcSettingsStateOutput() DirectoryVpcSettingsStateOutput {
	return i.ToDirectoryVpcSettingsStateOutputWithContext(context.Background())
}

func (i DirectoryVpcSettingsStateArgs) ToDirectoryVpcSettingsStateOutputWithContext(ctx context.Context) DirectoryVpcSettingsStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryVpcSettingsStateOutput)
}

type DirectoryVpcSettingsStateOutput struct{ *pulumi.OutputState }

func (DirectoryVpcSettingsStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryVpcSettingsState)(nil)).Elem()
}

func (o DirectoryVpcSettingsStateOutput) ToDirectoryVpcSettingsStateOutput() DirectoryVpcSettingsStateOutput {
	return o
}

func (o DirectoryVpcSettingsStateOutput) ToDirectoryVpcSettingsStateOutputWithContext(ctx context.Context) DirectoryVpcSettingsStateOutput {
	return o
}

// The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
func (o DirectoryVpcSettingsStateOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DirectoryVpcSettingsState) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// The identifier of the VPC that the directory is in.
func (o DirectoryVpcSettingsStateOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v DirectoryVpcSettingsState) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetDirectoryConnectSetting struct {
	// The DNS IP addresses of the domain to connect to.
	CustomerDnsIps []string `pulumi:"customerDnsIps"`
	// The username corresponding to the password provided.
	CustomerUsername string `pulumi:"customerUsername"`
	// The identifiers of the subnets for the connector servers (2 subnets in 2 different AZs).
	SubnetIds []string `pulumi:"subnetIds"`
	// The ID of the VPC that the connector is in.
	VpcId string `pulumi:"vpcId"`
}

type GetDirectoryConnectSettingInput interface {
	pulumi.Input

	ToGetDirectoryConnectSettingOutput() GetDirectoryConnectSettingOutput
	ToGetDirectoryConnectSettingOutputWithContext(context.Context) GetDirectoryConnectSettingOutput
}

type GetDirectoryConnectSettingArgs struct {
	// The DNS IP addresses of the domain to connect to.
	CustomerDnsIps pulumi.StringArrayInput `pulumi:"customerDnsIps"`
	// The username corresponding to the password provided.
	CustomerUsername pulumi.StringInput `pulumi:"customerUsername"`
	// The identifiers of the subnets for the connector servers (2 subnets in 2 different AZs).
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// The ID of the VPC that the connector is in.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetDirectoryConnectSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoryConnectSetting)(nil)).Elem()
}

func (i GetDirectoryConnectSettingArgs) ToGetDirectoryConnectSettingOutput() GetDirectoryConnectSettingOutput {
	return i.ToGetDirectoryConnectSettingOutputWithContext(context.Background())
}

func (i GetDirectoryConnectSettingArgs) ToGetDirectoryConnectSettingOutputWithContext(ctx context.Context) GetDirectoryConnectSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectoryConnectSettingOutput)
}

type GetDirectoryConnectSettingArrayInput interface {
	pulumi.Input

	ToGetDirectoryConnectSettingArrayOutput() GetDirectoryConnectSettingArrayOutput
	ToGetDirectoryConnectSettingArrayOutputWithContext(context.Context) GetDirectoryConnectSettingArrayOutput
}

type GetDirectoryConnectSettingArray []GetDirectoryConnectSettingInput

func (GetDirectoryConnectSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectoryConnectSetting)(nil)).Elem()
}

func (i GetDirectoryConnectSettingArray) ToGetDirectoryConnectSettingArrayOutput() GetDirectoryConnectSettingArrayOutput {
	return i.ToGetDirectoryConnectSettingArrayOutputWithContext(context.Background())
}

func (i GetDirectoryConnectSettingArray) ToGetDirectoryConnectSettingArrayOutputWithContext(ctx context.Context) GetDirectoryConnectSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectoryConnectSettingArrayOutput)
}

type GetDirectoryConnectSettingOutput struct{ *pulumi.OutputState }

func (GetDirectoryConnectSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoryConnectSetting)(nil)).Elem()
}

func (o GetDirectoryConnectSettingOutput) ToGetDirectoryConnectSettingOutput() GetDirectoryConnectSettingOutput {
	return o
}

func (o GetDirectoryConnectSettingOutput) ToGetDirectoryConnectSettingOutputWithContext(ctx context.Context) GetDirectoryConnectSettingOutput {
	return o
}

// The DNS IP addresses of the domain to connect to.
func (o GetDirectoryConnectSettingOutput) CustomerDnsIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDirectoryConnectSetting) []string { return v.CustomerDnsIps }).(pulumi.StringArrayOutput)
}

// The username corresponding to the password provided.
func (o GetDirectoryConnectSettingOutput) CustomerUsername() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryConnectSetting) string { return v.CustomerUsername }).(pulumi.StringOutput)
}

// The identifiers of the subnets for the connector servers (2 subnets in 2 different AZs).
func (o GetDirectoryConnectSettingOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDirectoryConnectSetting) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// The ID of the VPC that the connector is in.
func (o GetDirectoryConnectSettingOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryConnectSetting) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetDirectoryConnectSettingArrayOutput struct{ *pulumi.OutputState }

func (GetDirectoryConnectSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectoryConnectSetting)(nil)).Elem()
}

func (o GetDirectoryConnectSettingArrayOutput) ToGetDirectoryConnectSettingArrayOutput() GetDirectoryConnectSettingArrayOutput {
	return o
}

func (o GetDirectoryConnectSettingArrayOutput) ToGetDirectoryConnectSettingArrayOutputWithContext(ctx context.Context) GetDirectoryConnectSettingArrayOutput {
	return o
}

func (o GetDirectoryConnectSettingArrayOutput) Index(i pulumi.IntInput) GetDirectoryConnectSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDirectoryConnectSetting {
		return vs[0].([]GetDirectoryConnectSetting)[vs[1].(int)]
	}).(GetDirectoryConnectSettingOutput)
}

type GetDirectoryVpcSetting struct {
	// The identifiers of the subnets for the connector servers (2 subnets in 2 different AZs).
	SubnetIds []string `pulumi:"subnetIds"`
	// The ID of the VPC that the connector is in.
	VpcId string `pulumi:"vpcId"`
}

type GetDirectoryVpcSettingInput interface {
	pulumi.Input

	ToGetDirectoryVpcSettingOutput() GetDirectoryVpcSettingOutput
	ToGetDirectoryVpcSettingOutputWithContext(context.Context) GetDirectoryVpcSettingOutput
}

type GetDirectoryVpcSettingArgs struct {
	// The identifiers of the subnets for the connector servers (2 subnets in 2 different AZs).
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// The ID of the VPC that the connector is in.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetDirectoryVpcSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoryVpcSetting)(nil)).Elem()
}

func (i GetDirectoryVpcSettingArgs) ToGetDirectoryVpcSettingOutput() GetDirectoryVpcSettingOutput {
	return i.ToGetDirectoryVpcSettingOutputWithContext(context.Background())
}

func (i GetDirectoryVpcSettingArgs) ToGetDirectoryVpcSettingOutputWithContext(ctx context.Context) GetDirectoryVpcSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectoryVpcSettingOutput)
}

type GetDirectoryVpcSettingArrayInput interface {
	pulumi.Input

	ToGetDirectoryVpcSettingArrayOutput() GetDirectoryVpcSettingArrayOutput
	ToGetDirectoryVpcSettingArrayOutputWithContext(context.Context) GetDirectoryVpcSettingArrayOutput
}

type GetDirectoryVpcSettingArray []GetDirectoryVpcSettingInput

func (GetDirectoryVpcSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectoryVpcSetting)(nil)).Elem()
}

func (i GetDirectoryVpcSettingArray) ToGetDirectoryVpcSettingArrayOutput() GetDirectoryVpcSettingArrayOutput {
	return i.ToGetDirectoryVpcSettingArrayOutputWithContext(context.Background())
}

func (i GetDirectoryVpcSettingArray) ToGetDirectoryVpcSettingArrayOutputWithContext(ctx context.Context) GetDirectoryVpcSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectoryVpcSettingArrayOutput)
}

type GetDirectoryVpcSettingOutput struct{ *pulumi.OutputState }

func (GetDirectoryVpcSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoryVpcSetting)(nil)).Elem()
}

func (o GetDirectoryVpcSettingOutput) ToGetDirectoryVpcSettingOutput() GetDirectoryVpcSettingOutput {
	return o
}

func (o GetDirectoryVpcSettingOutput) ToGetDirectoryVpcSettingOutputWithContext(ctx context.Context) GetDirectoryVpcSettingOutput {
	return o
}

// The identifiers of the subnets for the connector servers (2 subnets in 2 different AZs).
func (o GetDirectoryVpcSettingOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDirectoryVpcSetting) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// The ID of the VPC that the connector is in.
func (o GetDirectoryVpcSettingOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryVpcSetting) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetDirectoryVpcSettingArrayOutput struct{ *pulumi.OutputState }

func (GetDirectoryVpcSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectoryVpcSetting)(nil)).Elem()
}

func (o GetDirectoryVpcSettingArrayOutput) ToGetDirectoryVpcSettingArrayOutput() GetDirectoryVpcSettingArrayOutput {
	return o
}

func (o GetDirectoryVpcSettingArrayOutput) ToGetDirectoryVpcSettingArrayOutputWithContext(ctx context.Context) GetDirectoryVpcSettingArrayOutput {
	return o
}

func (o GetDirectoryVpcSettingArrayOutput) Index(i pulumi.IntInput) GetDirectoryVpcSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDirectoryVpcSetting {
		return vs[0].([]GetDirectoryVpcSetting)[vs[1].(int)]
	}).(GetDirectoryVpcSettingOutput)
}

func init() {
	pulumi.RegisterOutputType(DirectoryConnectSettingsOutput{})
	pulumi.RegisterOutputType(DirectoryConnectSettingsPtrOutput{})
	pulumi.RegisterOutputType(DirectoryConnectSettingsArgsOutput{})
	pulumi.RegisterOutputType(DirectoryConnectSettingsArgsPtrOutput{})
	pulumi.RegisterOutputType(DirectoryConnectSettingsStateOutput{})
	pulumi.RegisterOutputType(DirectoryVpcSettingsOutput{})
	pulumi.RegisterOutputType(DirectoryVpcSettingsPtrOutput{})
	pulumi.RegisterOutputType(DirectoryVpcSettingsArgsOutput{})
	pulumi.RegisterOutputType(DirectoryVpcSettingsArgsPtrOutput{})
	pulumi.RegisterOutputType(DirectoryVpcSettingsStateOutput{})
	pulumi.RegisterOutputType(GetDirectoryConnectSettingOutput{})
	pulumi.RegisterOutputType(GetDirectoryConnectSettingArrayOutput{})
	pulumi.RegisterOutputType(GetDirectoryVpcSettingOutput{})
	pulumi.RegisterOutputType(GetDirectoryVpcSettingArrayOutput{})
}
