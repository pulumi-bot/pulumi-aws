// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package directoryservice

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Directory struct {
	pulumi.CustomResourceState

	AccessUrl       pulumi.StringOutput               `pulumi:"accessUrl"`
	Alias           pulumi.StringOutput               `pulumi:"alias"`
	ConnectSettings DirectoryConnectSettingsPtrOutput `pulumi:"connectSettings"`
	Description     pulumi.StringPtrOutput            `pulumi:"description"`
	DnsIpAddresses  pulumi.StringArrayOutput          `pulumi:"dnsIpAddresses"`
	Edition         pulumi.StringOutput               `pulumi:"edition"`
	EnableSso       pulumi.BoolPtrOutput              `pulumi:"enableSso"`
	Name            pulumi.StringOutput               `pulumi:"name"`
	Password        pulumi.StringOutput               `pulumi:"password"`
	SecurityGroupId pulumi.StringOutput               `pulumi:"securityGroupId"`
	ShortName       pulumi.StringOutput               `pulumi:"shortName"`
	Size            pulumi.StringOutput               `pulumi:"size"`
	Tags            pulumi.StringMapOutput            `pulumi:"tags"`
	Type            pulumi.StringPtrOutput            `pulumi:"type"`
	VpcSettings     DirectoryVpcSettingsPtrOutput     `pulumi:"vpcSettings"`
}

// NewDirectory registers a new resource with the given unique name, arguments, and options.
func NewDirectory(ctx *pulumi.Context,
	name string, args *DirectoryArgs, opts ...pulumi.ResourceOption) (*Directory, error) {
	if args == nil || args.Password == nil {
		return nil, errors.New("missing required argument 'Password'")
	}
	if args == nil {
		args = &DirectoryArgs{}
	}
	var resource Directory
	err := ctx.RegisterResource("aws:directoryservice/directory:Directory", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDirectory gets an existing Directory resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDirectory(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DirectoryState, opts ...pulumi.ResourceOption) (*Directory, error) {
	var resource Directory
	err := ctx.ReadResource("aws:directoryservice/directory:Directory", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Directory resources.
type directoryState struct {
	AccessUrl       *string                   `pulumi:"accessUrl"`
	Alias           *string                   `pulumi:"alias"`
	ConnectSettings *DirectoryConnectSettings `pulumi:"connectSettings"`
	Description     *string                   `pulumi:"description"`
	DnsIpAddresses  []string                  `pulumi:"dnsIpAddresses"`
	Edition         *string                   `pulumi:"edition"`
	EnableSso       *bool                     `pulumi:"enableSso"`
	Name            *string                   `pulumi:"name"`
	Password        *string                   `pulumi:"password"`
	SecurityGroupId *string                   `pulumi:"securityGroupId"`
	ShortName       *string                   `pulumi:"shortName"`
	Size            *string                   `pulumi:"size"`
	Tags            map[string]string         `pulumi:"tags"`
	Type            *string                   `pulumi:"type"`
	VpcSettings     *DirectoryVpcSettings     `pulumi:"vpcSettings"`
}

type DirectoryState struct {
	AccessUrl       pulumi.StringPtrInput
	Alias           pulumi.StringPtrInput
	ConnectSettings DirectoryConnectSettingsPtrInput
	Description     pulumi.StringPtrInput
	DnsIpAddresses  pulumi.StringArrayInput
	Edition         pulumi.StringPtrInput
	EnableSso       pulumi.BoolPtrInput
	Name            pulumi.StringPtrInput
	Password        pulumi.StringPtrInput
	SecurityGroupId pulumi.StringPtrInput
	ShortName       pulumi.StringPtrInput
	Size            pulumi.StringPtrInput
	Tags            pulumi.StringMapInput
	Type            pulumi.StringPtrInput
	VpcSettings     DirectoryVpcSettingsPtrInput
}

func (DirectoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*directoryState)(nil)).Elem()
}

type directoryArgs struct {
	Alias           *string                   `pulumi:"alias"`
	ConnectSettings *DirectoryConnectSettings `pulumi:"connectSettings"`
	Description     *string                   `pulumi:"description"`
	Edition         *string                   `pulumi:"edition"`
	EnableSso       *bool                     `pulumi:"enableSso"`
	Name            *string                   `pulumi:"name"`
	Password        string                    `pulumi:"password"`
	ShortName       *string                   `pulumi:"shortName"`
	Size            *string                   `pulumi:"size"`
	Tags            map[string]string         `pulumi:"tags"`
	Type            *string                   `pulumi:"type"`
	VpcSettings     *DirectoryVpcSettings     `pulumi:"vpcSettings"`
}

// The set of arguments for constructing a Directory resource.
type DirectoryArgs struct {
	Alias           pulumi.StringPtrInput
	ConnectSettings DirectoryConnectSettingsPtrInput
	Description     pulumi.StringPtrInput
	Edition         pulumi.StringPtrInput
	EnableSso       pulumi.BoolPtrInput
	Name            pulumi.StringPtrInput
	Password        pulumi.StringInput
	ShortName       pulumi.StringPtrInput
	Size            pulumi.StringPtrInput
	Tags            pulumi.StringMapInput
	Type            pulumi.StringPtrInput
	VpcSettings     DirectoryVpcSettingsPtrInput
}

func (DirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*directoryArgs)(nil)).Elem()
}
