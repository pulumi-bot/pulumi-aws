// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package DomainCognitoOptions

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type DomainCognitoOptions struct {
	// Specifies whether Amazon Cognito authentication with Kibana is enabled or not
	Enabled *bool `pulumi:"enabled"`
	// ID of the Cognito Identity Pool to use
	IdentityPoolId string `pulumi:"identityPoolId"`
	// ARN of the IAM role that has the AmazonESCognitoAccess policy attached
	RoleArn string `pulumi:"roleArn"`
	// ID of the Cognito User Pool to use
	UserPoolId string `pulumi:"userPoolId"`
}

type DomainCognitoOptionsInput interface {
	pulumi.Input

	ToDomainCognitoOptionsOutput() DomainCognitoOptionsOutput
	ToDomainCognitoOptionsOutputWithContext(context.Context) DomainCognitoOptionsOutput
}

type DomainCognitoOptionsArgs struct {
	// Specifies whether Amazon Cognito authentication with Kibana is enabled or not
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// ID of the Cognito Identity Pool to use
	IdentityPoolId pulumi.StringInput `pulumi:"identityPoolId"`
	// ARN of the IAM role that has the AmazonESCognitoAccess policy attached
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// ID of the Cognito User Pool to use
	UserPoolId pulumi.StringInput `pulumi:"userPoolId"`
}

func (DomainCognitoOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCognitoOptions)(nil)).Elem()
}

func (i DomainCognitoOptionsArgs) ToDomainCognitoOptionsOutput() DomainCognitoOptionsOutput {
	return i.ToDomainCognitoOptionsOutputWithContext(context.Background())
}

func (i DomainCognitoOptionsArgs) ToDomainCognitoOptionsOutputWithContext(ctx context.Context) DomainCognitoOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCognitoOptionsOutput)
}

func (i DomainCognitoOptionsArgs) ToDomainCognitoOptionsPtrOutput() DomainCognitoOptionsPtrOutput {
	return i.ToDomainCognitoOptionsPtrOutputWithContext(context.Background())
}

func (i DomainCognitoOptionsArgs) ToDomainCognitoOptionsPtrOutputWithContext(ctx context.Context) DomainCognitoOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCognitoOptionsOutput).ToDomainCognitoOptionsPtrOutputWithContext(ctx)
}

type DomainCognitoOptionsPtrInput interface {
	pulumi.Input

	ToDomainCognitoOptionsPtrOutput() DomainCognitoOptionsPtrOutput
	ToDomainCognitoOptionsPtrOutputWithContext(context.Context) DomainCognitoOptionsPtrOutput
}

type domainCognitoOptionsPtrType DomainCognitoOptionsArgs

func DomainCognitoOptionsPtr(v *DomainCognitoOptionsArgs) DomainCognitoOptionsPtrInput {	return (*domainCognitoOptionsPtrType)(v)
}

func (*domainCognitoOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainCognitoOptions)(nil)).Elem()
}

func (i *domainCognitoOptionsPtrType) ToDomainCognitoOptionsPtrOutput() DomainCognitoOptionsPtrOutput {
	return i.ToDomainCognitoOptionsPtrOutputWithContext(context.Background())
}

func (i *domainCognitoOptionsPtrType) ToDomainCognitoOptionsPtrOutputWithContext(ctx context.Context) DomainCognitoOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCognitoOptionsPtrOutput)
}

type DomainCognitoOptionsOutput struct { *pulumi.OutputState }

func (DomainCognitoOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCognitoOptions)(nil)).Elem()
}

func (o DomainCognitoOptionsOutput) ToDomainCognitoOptionsOutput() DomainCognitoOptionsOutput {
	return o
}

func (o DomainCognitoOptionsOutput) ToDomainCognitoOptionsOutputWithContext(ctx context.Context) DomainCognitoOptionsOutput {
	return o
}

func (o DomainCognitoOptionsOutput) ToDomainCognitoOptionsPtrOutput() DomainCognitoOptionsPtrOutput {
	return o.ToDomainCognitoOptionsPtrOutputWithContext(context.Background())
}

func (o DomainCognitoOptionsOutput) ToDomainCognitoOptionsPtrOutputWithContext(ctx context.Context) DomainCognitoOptionsPtrOutput {
	return o.ApplyT(func(v DomainCognitoOptions) *DomainCognitoOptions {
		return &v
	}).(DomainCognitoOptionsPtrOutput)
}
// Specifies whether Amazon Cognito authentication with Kibana is enabled or not
func (o DomainCognitoOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v DomainCognitoOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// ID of the Cognito Identity Pool to use
func (o DomainCognitoOptionsOutput) IdentityPoolId() pulumi.StringOutput {
	return o.ApplyT(func (v DomainCognitoOptions) string { return v.IdentityPoolId }).(pulumi.StringOutput)
}

// ARN of the IAM role that has the AmazonESCognitoAccess policy attached
func (o DomainCognitoOptionsOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func (v DomainCognitoOptions) string { return v.RoleArn }).(pulumi.StringOutput)
}

// ID of the Cognito User Pool to use
func (o DomainCognitoOptionsOutput) UserPoolId() pulumi.StringOutput {
	return o.ApplyT(func (v DomainCognitoOptions) string { return v.UserPoolId }).(pulumi.StringOutput)
}

type DomainCognitoOptionsPtrOutput struct { *pulumi.OutputState}

func (DomainCognitoOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainCognitoOptions)(nil)).Elem()
}

func (o DomainCognitoOptionsPtrOutput) ToDomainCognitoOptionsPtrOutput() DomainCognitoOptionsPtrOutput {
	return o
}

func (o DomainCognitoOptionsPtrOutput) ToDomainCognitoOptionsPtrOutputWithContext(ctx context.Context) DomainCognitoOptionsPtrOutput {
	return o
}

func (o DomainCognitoOptionsPtrOutput) Elem() DomainCognitoOptionsOutput {
	return o.ApplyT(func (v *DomainCognitoOptions) DomainCognitoOptions { return *v }).(DomainCognitoOptionsOutput)
}

// Specifies whether Amazon Cognito authentication with Kibana is enabled or not
func (o DomainCognitoOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v DomainCognitoOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// ID of the Cognito Identity Pool to use
func (o DomainCognitoOptionsPtrOutput) IdentityPoolId() pulumi.StringOutput {
	return o.ApplyT(func (v DomainCognitoOptions) string { return v.IdentityPoolId }).(pulumi.StringOutput)
}

// ARN of the IAM role that has the AmazonESCognitoAccess policy attached
func (o DomainCognitoOptionsPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func (v DomainCognitoOptions) string { return v.RoleArn }).(pulumi.StringOutput)
}

// ID of the Cognito User Pool to use
func (o DomainCognitoOptionsPtrOutput) UserPoolId() pulumi.StringOutput {
	return o.ApplyT(func (v DomainCognitoOptions) string { return v.UserPoolId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(DomainCognitoOptionsOutput{})
	pulumi.RegisterOutputType(DomainCognitoOptionsPtrOutput{})
}
