// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package getDomainLogPublishingOption

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type GetDomainLogPublishingOption struct {
	// The CloudWatch Log Group where the logs are published.
	CloudwatchLogGroupArn string `pulumi:"cloudwatchLogGroupArn"`
	// Whether node to node encryption is enabled.
	Enabled bool `pulumi:"enabled"`
	// The type of Elasticsearch log being published.
	LogType string `pulumi:"logType"`
}

type GetDomainLogPublishingOptionInput interface {
	pulumi.Input

	ToGetDomainLogPublishingOptionOutput() GetDomainLogPublishingOptionOutput
	ToGetDomainLogPublishingOptionOutputWithContext(context.Context) GetDomainLogPublishingOptionOutput
}

type GetDomainLogPublishingOptionArgs struct {
	// The CloudWatch Log Group where the logs are published.
	CloudwatchLogGroupArn pulumi.StringInput `pulumi:"cloudwatchLogGroupArn"`
	// Whether node to node encryption is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The type of Elasticsearch log being published.
	LogType pulumi.StringInput `pulumi:"logType"`
}

func (GetDomainLogPublishingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainLogPublishingOption)(nil)).Elem()
}

func (i GetDomainLogPublishingOptionArgs) ToGetDomainLogPublishingOptionOutput() GetDomainLogPublishingOptionOutput {
	return i.ToGetDomainLogPublishingOptionOutputWithContext(context.Background())
}

func (i GetDomainLogPublishingOptionArgs) ToGetDomainLogPublishingOptionOutputWithContext(ctx context.Context) GetDomainLogPublishingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainLogPublishingOptionOutput)
}

type GetDomainLogPublishingOptionArrayInput interface {
	pulumi.Input

	ToGetDomainLogPublishingOptionArrayOutput() GetDomainLogPublishingOptionArrayOutput
	ToGetDomainLogPublishingOptionArrayOutputWithContext(context.Context) GetDomainLogPublishingOptionArrayOutput
}

type GetDomainLogPublishingOptionArray []GetDomainLogPublishingOptionInput

func (GetDomainLogPublishingOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainLogPublishingOption)(nil)).Elem()
}

func (i GetDomainLogPublishingOptionArray) ToGetDomainLogPublishingOptionArrayOutput() GetDomainLogPublishingOptionArrayOutput {
	return i.ToGetDomainLogPublishingOptionArrayOutputWithContext(context.Background())
}

func (i GetDomainLogPublishingOptionArray) ToGetDomainLogPublishingOptionArrayOutputWithContext(ctx context.Context) GetDomainLogPublishingOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainLogPublishingOptionArrayOutput)
}

type GetDomainLogPublishingOptionOutput struct { *pulumi.OutputState }

func (GetDomainLogPublishingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainLogPublishingOption)(nil)).Elem()
}

func (o GetDomainLogPublishingOptionOutput) ToGetDomainLogPublishingOptionOutput() GetDomainLogPublishingOptionOutput {
	return o
}

func (o GetDomainLogPublishingOptionOutput) ToGetDomainLogPublishingOptionOutputWithContext(ctx context.Context) GetDomainLogPublishingOptionOutput {
	return o
}

// The CloudWatch Log Group where the logs are published.
func (o GetDomainLogPublishingOptionOutput) CloudwatchLogGroupArn() pulumi.StringOutput {
	return o.ApplyT(func (v GetDomainLogPublishingOption) string { return v.CloudwatchLogGroupArn }).(pulumi.StringOutput)
}

// Whether node to node encryption is enabled.
func (o GetDomainLogPublishingOptionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func (v GetDomainLogPublishingOption) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The type of Elasticsearch log being published.
func (o GetDomainLogPublishingOptionOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func (v GetDomainLogPublishingOption) string { return v.LogType }).(pulumi.StringOutput)
}

type GetDomainLogPublishingOptionArrayOutput struct { *pulumi.OutputState}

func (GetDomainLogPublishingOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainLogPublishingOption)(nil)).Elem()
}

func (o GetDomainLogPublishingOptionArrayOutput) ToGetDomainLogPublishingOptionArrayOutput() GetDomainLogPublishingOptionArrayOutput {
	return o
}

func (o GetDomainLogPublishingOptionArrayOutput) ToGetDomainLogPublishingOptionArrayOutputWithContext(ctx context.Context) GetDomainLogPublishingOptionArrayOutput {
	return o
}

func (o GetDomainLogPublishingOptionArrayOutput) Index(i pulumi.IntInput) GetDomainLogPublishingOptionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetDomainLogPublishingOption {
		return vs[0].([]GetDomainLogPublishingOption)[vs[1].(int)]
	}).(GetDomainLogPublishingOptionOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDomainLogPublishingOptionOutput{})
	pulumi.RegisterOutputType(GetDomainLogPublishingOptionArrayOutput{})
}
