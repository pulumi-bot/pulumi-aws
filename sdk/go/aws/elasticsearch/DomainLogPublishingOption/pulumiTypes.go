// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package DomainLogPublishingOption

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type DomainLogPublishingOption struct {
	// ARN of the Cloudwatch log group to which log needs to be published.
	CloudwatchLogGroupArn string `pulumi:"cloudwatchLogGroupArn"`
	// Specifies whether Amazon Cognito authentication with Kibana is enabled or not
	Enabled *bool `pulumi:"enabled"`
	// A type of Elasticsearch log. Valid values: INDEX_SLOW_LOGS, SEARCH_SLOW_LOGS, ES_APPLICATION_LOGS
	LogType string `pulumi:"logType"`
}

type DomainLogPublishingOptionInput interface {
	pulumi.Input

	ToDomainLogPublishingOptionOutput() DomainLogPublishingOptionOutput
	ToDomainLogPublishingOptionOutputWithContext(context.Context) DomainLogPublishingOptionOutput
}

type DomainLogPublishingOptionArgs struct {
	// ARN of the Cloudwatch log group to which log needs to be published.
	CloudwatchLogGroupArn pulumi.StringInput `pulumi:"cloudwatchLogGroupArn"`
	// Specifies whether Amazon Cognito authentication with Kibana is enabled or not
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// A type of Elasticsearch log. Valid values: INDEX_SLOW_LOGS, SEARCH_SLOW_LOGS, ES_APPLICATION_LOGS
	LogType pulumi.StringInput `pulumi:"logType"`
}

func (DomainLogPublishingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainLogPublishingOption)(nil)).Elem()
}

func (i DomainLogPublishingOptionArgs) ToDomainLogPublishingOptionOutput() DomainLogPublishingOptionOutput {
	return i.ToDomainLogPublishingOptionOutputWithContext(context.Background())
}

func (i DomainLogPublishingOptionArgs) ToDomainLogPublishingOptionOutputWithContext(ctx context.Context) DomainLogPublishingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainLogPublishingOptionOutput)
}

type DomainLogPublishingOptionArrayInput interface {
	pulumi.Input

	ToDomainLogPublishingOptionArrayOutput() DomainLogPublishingOptionArrayOutput
	ToDomainLogPublishingOptionArrayOutputWithContext(context.Context) DomainLogPublishingOptionArrayOutput
}

type DomainLogPublishingOptionArray []DomainLogPublishingOptionInput

func (DomainLogPublishingOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainLogPublishingOption)(nil)).Elem()
}

func (i DomainLogPublishingOptionArray) ToDomainLogPublishingOptionArrayOutput() DomainLogPublishingOptionArrayOutput {
	return i.ToDomainLogPublishingOptionArrayOutputWithContext(context.Background())
}

func (i DomainLogPublishingOptionArray) ToDomainLogPublishingOptionArrayOutputWithContext(ctx context.Context) DomainLogPublishingOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainLogPublishingOptionArrayOutput)
}

type DomainLogPublishingOptionOutput struct { *pulumi.OutputState }

func (DomainLogPublishingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainLogPublishingOption)(nil)).Elem()
}

func (o DomainLogPublishingOptionOutput) ToDomainLogPublishingOptionOutput() DomainLogPublishingOptionOutput {
	return o
}

func (o DomainLogPublishingOptionOutput) ToDomainLogPublishingOptionOutputWithContext(ctx context.Context) DomainLogPublishingOptionOutput {
	return o
}

// ARN of the Cloudwatch log group to which log needs to be published.
func (o DomainLogPublishingOptionOutput) CloudwatchLogGroupArn() pulumi.StringOutput {
	return o.ApplyT(func (v DomainLogPublishingOption) string { return v.CloudwatchLogGroupArn }).(pulumi.StringOutput)
}

// Specifies whether Amazon Cognito authentication with Kibana is enabled or not
func (o DomainLogPublishingOptionOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v DomainLogPublishingOption) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// A type of Elasticsearch log. Valid values: INDEX_SLOW_LOGS, SEARCH_SLOW_LOGS, ES_APPLICATION_LOGS
func (o DomainLogPublishingOptionOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func (v DomainLogPublishingOption) string { return v.LogType }).(pulumi.StringOutput)
}

type DomainLogPublishingOptionArrayOutput struct { *pulumi.OutputState}

func (DomainLogPublishingOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainLogPublishingOption)(nil)).Elem()
}

func (o DomainLogPublishingOptionArrayOutput) ToDomainLogPublishingOptionArrayOutput() DomainLogPublishingOptionArrayOutput {
	return o
}

func (o DomainLogPublishingOptionArrayOutput) ToDomainLogPublishingOptionArrayOutputWithContext(ctx context.Context) DomainLogPublishingOptionArrayOutput {
	return o
}

func (o DomainLogPublishingOptionArrayOutput) Index(i pulumi.IntInput) DomainLogPublishingOptionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) DomainLogPublishingOption {
		return vs[0].([]DomainLogPublishingOption)[vs[1].(int)]
	}).(DomainLogPublishingOptionOutput)
}

func init() {
	pulumi.RegisterOutputType(DomainLogPublishingOptionOutput{})
	pulumi.RegisterOutputType(DomainLogPublishingOptionArrayOutput{})
}
