// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package DomainEncryptAtRest

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type DomainEncryptAtRest struct {
	// Specifies whether Amazon Cognito authentication with Kibana is enabled or not
	Enabled bool `pulumi:"enabled"`
	// The KMS key id to encrypt the Elasticsearch domain with. If not specified then it defaults to using the `aws/es` service KMS key.
	KmsKeyId *string `pulumi:"kmsKeyId"`
}

type DomainEncryptAtRestInput interface {
	pulumi.Input

	ToDomainEncryptAtRestOutput() DomainEncryptAtRestOutput
	ToDomainEncryptAtRestOutputWithContext(context.Context) DomainEncryptAtRestOutput
}

type DomainEncryptAtRestArgs struct {
	// Specifies whether Amazon Cognito authentication with Kibana is enabled or not
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The KMS key id to encrypt the Elasticsearch domain with. If not specified then it defaults to using the `aws/es` service KMS key.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
}

func (DomainEncryptAtRestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainEncryptAtRest)(nil)).Elem()
}

func (i DomainEncryptAtRestArgs) ToDomainEncryptAtRestOutput() DomainEncryptAtRestOutput {
	return i.ToDomainEncryptAtRestOutputWithContext(context.Background())
}

func (i DomainEncryptAtRestArgs) ToDomainEncryptAtRestOutputWithContext(ctx context.Context) DomainEncryptAtRestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEncryptAtRestOutput)
}

func (i DomainEncryptAtRestArgs) ToDomainEncryptAtRestPtrOutput() DomainEncryptAtRestPtrOutput {
	return i.ToDomainEncryptAtRestPtrOutputWithContext(context.Background())
}

func (i DomainEncryptAtRestArgs) ToDomainEncryptAtRestPtrOutputWithContext(ctx context.Context) DomainEncryptAtRestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEncryptAtRestOutput).ToDomainEncryptAtRestPtrOutputWithContext(ctx)
}

type DomainEncryptAtRestPtrInput interface {
	pulumi.Input

	ToDomainEncryptAtRestPtrOutput() DomainEncryptAtRestPtrOutput
	ToDomainEncryptAtRestPtrOutputWithContext(context.Context) DomainEncryptAtRestPtrOutput
}

type domainEncryptAtRestPtrType DomainEncryptAtRestArgs

func DomainEncryptAtRestPtr(v *DomainEncryptAtRestArgs) DomainEncryptAtRestPtrInput {	return (*domainEncryptAtRestPtrType)(v)
}

func (*domainEncryptAtRestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainEncryptAtRest)(nil)).Elem()
}

func (i *domainEncryptAtRestPtrType) ToDomainEncryptAtRestPtrOutput() DomainEncryptAtRestPtrOutput {
	return i.ToDomainEncryptAtRestPtrOutputWithContext(context.Background())
}

func (i *domainEncryptAtRestPtrType) ToDomainEncryptAtRestPtrOutputWithContext(ctx context.Context) DomainEncryptAtRestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEncryptAtRestPtrOutput)
}

type DomainEncryptAtRestOutput struct { *pulumi.OutputState }

func (DomainEncryptAtRestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainEncryptAtRest)(nil)).Elem()
}

func (o DomainEncryptAtRestOutput) ToDomainEncryptAtRestOutput() DomainEncryptAtRestOutput {
	return o
}

func (o DomainEncryptAtRestOutput) ToDomainEncryptAtRestOutputWithContext(ctx context.Context) DomainEncryptAtRestOutput {
	return o
}

func (o DomainEncryptAtRestOutput) ToDomainEncryptAtRestPtrOutput() DomainEncryptAtRestPtrOutput {
	return o.ToDomainEncryptAtRestPtrOutputWithContext(context.Background())
}

func (o DomainEncryptAtRestOutput) ToDomainEncryptAtRestPtrOutputWithContext(ctx context.Context) DomainEncryptAtRestPtrOutput {
	return o.ApplyT(func(v DomainEncryptAtRest) *DomainEncryptAtRest {
		return &v
	}).(DomainEncryptAtRestPtrOutput)
}
// Specifies whether Amazon Cognito authentication with Kibana is enabled or not
func (o DomainEncryptAtRestOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func (v DomainEncryptAtRest) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The KMS key id to encrypt the Elasticsearch domain with. If not specified then it defaults to using the `aws/es` service KMS key.
func (o DomainEncryptAtRestOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v DomainEncryptAtRest) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

type DomainEncryptAtRestPtrOutput struct { *pulumi.OutputState}

func (DomainEncryptAtRestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainEncryptAtRest)(nil)).Elem()
}

func (o DomainEncryptAtRestPtrOutput) ToDomainEncryptAtRestPtrOutput() DomainEncryptAtRestPtrOutput {
	return o
}

func (o DomainEncryptAtRestPtrOutput) ToDomainEncryptAtRestPtrOutputWithContext(ctx context.Context) DomainEncryptAtRestPtrOutput {
	return o
}

func (o DomainEncryptAtRestPtrOutput) Elem() DomainEncryptAtRestOutput {
	return o.ApplyT(func (v *DomainEncryptAtRest) DomainEncryptAtRest { return *v }).(DomainEncryptAtRestOutput)
}

// Specifies whether Amazon Cognito authentication with Kibana is enabled or not
func (o DomainEncryptAtRestPtrOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func (v DomainEncryptAtRest) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The KMS key id to encrypt the Elasticsearch domain with. If not specified then it defaults to using the `aws/es` service KMS key.
func (o DomainEncryptAtRestPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v DomainEncryptAtRest) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(DomainEncryptAtRestOutput{})
	pulumi.RegisterOutputType(DomainEncryptAtRestPtrOutput{})
}
