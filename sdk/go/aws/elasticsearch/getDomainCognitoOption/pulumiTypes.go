// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package getDomainCognitoOption

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type GetDomainCognitoOption struct {
	// Whether node to node encryption is enabled.
	Enabled bool `pulumi:"enabled"`
	// The Cognito Identity pool used by the domain.
	IdentityPoolId string `pulumi:"identityPoolId"`
	// The IAM Role with the AmazonESCognitoAccess policy attached.
	RoleArn string `pulumi:"roleArn"`
	// The Cognito User pool used by the domain.
	UserPoolId string `pulumi:"userPoolId"`
}

type GetDomainCognitoOptionInput interface {
	pulumi.Input

	ToGetDomainCognitoOptionOutput() GetDomainCognitoOptionOutput
	ToGetDomainCognitoOptionOutputWithContext(context.Context) GetDomainCognitoOptionOutput
}

type GetDomainCognitoOptionArgs struct {
	// Whether node to node encryption is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The Cognito Identity pool used by the domain.
	IdentityPoolId pulumi.StringInput `pulumi:"identityPoolId"`
	// The IAM Role with the AmazonESCognitoAccess policy attached.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The Cognito User pool used by the domain.
	UserPoolId pulumi.StringInput `pulumi:"userPoolId"`
}

func (GetDomainCognitoOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainCognitoOption)(nil)).Elem()
}

func (i GetDomainCognitoOptionArgs) ToGetDomainCognitoOptionOutput() GetDomainCognitoOptionOutput {
	return i.ToGetDomainCognitoOptionOutputWithContext(context.Background())
}

func (i GetDomainCognitoOptionArgs) ToGetDomainCognitoOptionOutputWithContext(ctx context.Context) GetDomainCognitoOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainCognitoOptionOutput)
}

type GetDomainCognitoOptionArrayInput interface {
	pulumi.Input

	ToGetDomainCognitoOptionArrayOutput() GetDomainCognitoOptionArrayOutput
	ToGetDomainCognitoOptionArrayOutputWithContext(context.Context) GetDomainCognitoOptionArrayOutput
}

type GetDomainCognitoOptionArray []GetDomainCognitoOptionInput

func (GetDomainCognitoOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainCognitoOption)(nil)).Elem()
}

func (i GetDomainCognitoOptionArray) ToGetDomainCognitoOptionArrayOutput() GetDomainCognitoOptionArrayOutput {
	return i.ToGetDomainCognitoOptionArrayOutputWithContext(context.Background())
}

func (i GetDomainCognitoOptionArray) ToGetDomainCognitoOptionArrayOutputWithContext(ctx context.Context) GetDomainCognitoOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainCognitoOptionArrayOutput)
}

type GetDomainCognitoOptionOutput struct { *pulumi.OutputState }

func (GetDomainCognitoOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainCognitoOption)(nil)).Elem()
}

func (o GetDomainCognitoOptionOutput) ToGetDomainCognitoOptionOutput() GetDomainCognitoOptionOutput {
	return o
}

func (o GetDomainCognitoOptionOutput) ToGetDomainCognitoOptionOutputWithContext(ctx context.Context) GetDomainCognitoOptionOutput {
	return o
}

// Whether node to node encryption is enabled.
func (o GetDomainCognitoOptionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func (v GetDomainCognitoOption) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The Cognito Identity pool used by the domain.
func (o GetDomainCognitoOptionOutput) IdentityPoolId() pulumi.StringOutput {
	return o.ApplyT(func (v GetDomainCognitoOption) string { return v.IdentityPoolId }).(pulumi.StringOutput)
}

// The IAM Role with the AmazonESCognitoAccess policy attached.
func (o GetDomainCognitoOptionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func (v GetDomainCognitoOption) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The Cognito User pool used by the domain.
func (o GetDomainCognitoOptionOutput) UserPoolId() pulumi.StringOutput {
	return o.ApplyT(func (v GetDomainCognitoOption) string { return v.UserPoolId }).(pulumi.StringOutput)
}

type GetDomainCognitoOptionArrayOutput struct { *pulumi.OutputState}

func (GetDomainCognitoOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainCognitoOption)(nil)).Elem()
}

func (o GetDomainCognitoOptionArrayOutput) ToGetDomainCognitoOptionArrayOutput() GetDomainCognitoOptionArrayOutput {
	return o
}

func (o GetDomainCognitoOptionArrayOutput) ToGetDomainCognitoOptionArrayOutputWithContext(ctx context.Context) GetDomainCognitoOptionArrayOutput {
	return o
}

func (o GetDomainCognitoOptionArrayOutput) Index(i pulumi.IntInput) GetDomainCognitoOptionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetDomainCognitoOption {
		return vs[0].([]GetDomainCognitoOption)[vs[1].(int)]
	}).(GetDomainCognitoOptionOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDomainCognitoOptionOutput{})
	pulumi.RegisterOutputType(GetDomainCognitoOptionArrayOutput{})
}
