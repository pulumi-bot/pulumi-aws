// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package elasticsearch

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Domain struct {
	pulumi.CustomResourceState

	AccessPolicies          pulumi.StringOutput                  `pulumi:"accessPolicies"`
	AdvancedOptions         pulumi.StringMapOutput               `pulumi:"advancedOptions"`
	AdvancedSecurityOptions DomainAdvancedSecurityOptionsOutput  `pulumi:"advancedSecurityOptions"`
	Arn                     pulumi.StringOutput                  `pulumi:"arn"`
	ClusterConfig           DomainClusterConfigOutput            `pulumi:"clusterConfig"`
	CognitoOptions          DomainCognitoOptionsPtrOutput        `pulumi:"cognitoOptions"`
	DomainEndpointOptions   DomainDomainEndpointOptionsOutput    `pulumi:"domainEndpointOptions"`
	DomainId                pulumi.StringOutput                  `pulumi:"domainId"`
	DomainName              pulumi.StringOutput                  `pulumi:"domainName"`
	EbsOptions              DomainEbsOptionsOutput               `pulumi:"ebsOptions"`
	ElasticsearchVersion    pulumi.StringPtrOutput               `pulumi:"elasticsearchVersion"`
	EncryptAtRest           DomainEncryptAtRestOutput            `pulumi:"encryptAtRest"`
	Endpoint                pulumi.StringOutput                  `pulumi:"endpoint"`
	KibanaEndpoint          pulumi.StringOutput                  `pulumi:"kibanaEndpoint"`
	LogPublishingOptions    DomainLogPublishingOptionArrayOutput `pulumi:"logPublishingOptions"`
	NodeToNodeEncryption    DomainNodeToNodeEncryptionOutput     `pulumi:"nodeToNodeEncryption"`
	SnapshotOptions         DomainSnapshotOptionsPtrOutput       `pulumi:"snapshotOptions"`
	Tags                    pulumi.StringMapOutput               `pulumi:"tags"`
	VpcOptions              DomainVpcOptionsPtrOutput            `pulumi:"vpcOptions"`
}

// NewDomain registers a new resource with the given unique name, arguments, and options.
func NewDomain(ctx *pulumi.Context,
	name string, args *DomainArgs, opts ...pulumi.ResourceOption) (*Domain, error) {
	if args == nil {
		args = &DomainArgs{}
	}
	var resource Domain
	err := ctx.RegisterResource("aws:elasticsearch/domain:Domain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomain gets an existing Domain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainState, opts ...pulumi.ResourceOption) (*Domain, error) {
	var resource Domain
	err := ctx.ReadResource("aws:elasticsearch/domain:Domain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Domain resources.
type domainState struct {
	AccessPolicies          *string                        `pulumi:"accessPolicies"`
	AdvancedOptions         map[string]string              `pulumi:"advancedOptions"`
	AdvancedSecurityOptions *DomainAdvancedSecurityOptions `pulumi:"advancedSecurityOptions"`
	Arn                     *string                        `pulumi:"arn"`
	ClusterConfig           *DomainClusterConfig           `pulumi:"clusterConfig"`
	CognitoOptions          *DomainCognitoOptions          `pulumi:"cognitoOptions"`
	DomainEndpointOptions   *DomainDomainEndpointOptions   `pulumi:"domainEndpointOptions"`
	DomainId                *string                        `pulumi:"domainId"`
	DomainName              *string                        `pulumi:"domainName"`
	EbsOptions              *DomainEbsOptions              `pulumi:"ebsOptions"`
	ElasticsearchVersion    *string                        `pulumi:"elasticsearchVersion"`
	EncryptAtRest           *DomainEncryptAtRest           `pulumi:"encryptAtRest"`
	Endpoint                *string                        `pulumi:"endpoint"`
	KibanaEndpoint          *string                        `pulumi:"kibanaEndpoint"`
	LogPublishingOptions    []DomainLogPublishingOption    `pulumi:"logPublishingOptions"`
	NodeToNodeEncryption    *DomainNodeToNodeEncryption    `pulumi:"nodeToNodeEncryption"`
	SnapshotOptions         *DomainSnapshotOptions         `pulumi:"snapshotOptions"`
	Tags                    map[string]string              `pulumi:"tags"`
	VpcOptions              *DomainVpcOptions              `pulumi:"vpcOptions"`
}

type DomainState struct {
	AccessPolicies          pulumi.StringPtrInput
	AdvancedOptions         pulumi.StringMapInput
	AdvancedSecurityOptions DomainAdvancedSecurityOptionsPtrInput
	Arn                     pulumi.StringPtrInput
	ClusterConfig           DomainClusterConfigPtrInput
	CognitoOptions          DomainCognitoOptionsPtrInput
	DomainEndpointOptions   DomainDomainEndpointOptionsPtrInput
	DomainId                pulumi.StringPtrInput
	DomainName              pulumi.StringPtrInput
	EbsOptions              DomainEbsOptionsPtrInput
	ElasticsearchVersion    pulumi.StringPtrInput
	EncryptAtRest           DomainEncryptAtRestPtrInput
	Endpoint                pulumi.StringPtrInput
	KibanaEndpoint          pulumi.StringPtrInput
	LogPublishingOptions    DomainLogPublishingOptionArrayInput
	NodeToNodeEncryption    DomainNodeToNodeEncryptionPtrInput
	SnapshotOptions         DomainSnapshotOptionsPtrInput
	Tags                    pulumi.StringMapInput
	VpcOptions              DomainVpcOptionsPtrInput
}

func (DomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainState)(nil)).Elem()
}

type domainArgs struct {
	AccessPolicies          interface{}                    `pulumi:"accessPolicies"`
	AdvancedOptions         map[string]string              `pulumi:"advancedOptions"`
	AdvancedSecurityOptions *DomainAdvancedSecurityOptions `pulumi:"advancedSecurityOptions"`
	ClusterConfig           *DomainClusterConfig           `pulumi:"clusterConfig"`
	CognitoOptions          *DomainCognitoOptions          `pulumi:"cognitoOptions"`
	DomainEndpointOptions   *DomainDomainEndpointOptions   `pulumi:"domainEndpointOptions"`
	DomainName              *string                        `pulumi:"domainName"`
	EbsOptions              *DomainEbsOptions              `pulumi:"ebsOptions"`
	ElasticsearchVersion    *string                        `pulumi:"elasticsearchVersion"`
	EncryptAtRest           *DomainEncryptAtRest           `pulumi:"encryptAtRest"`
	LogPublishingOptions    []DomainLogPublishingOption    `pulumi:"logPublishingOptions"`
	NodeToNodeEncryption    *DomainNodeToNodeEncryption    `pulumi:"nodeToNodeEncryption"`
	SnapshotOptions         *DomainSnapshotOptions         `pulumi:"snapshotOptions"`
	Tags                    map[string]string              `pulumi:"tags"`
	VpcOptions              *DomainVpcOptions              `pulumi:"vpcOptions"`
}

// The set of arguments for constructing a Domain resource.
type DomainArgs struct {
	AccessPolicies          pulumi.Input
	AdvancedOptions         pulumi.StringMapInput
	AdvancedSecurityOptions DomainAdvancedSecurityOptionsPtrInput
	ClusterConfig           DomainClusterConfigPtrInput
	CognitoOptions          DomainCognitoOptionsPtrInput
	DomainEndpointOptions   DomainDomainEndpointOptionsPtrInput
	DomainName              pulumi.StringPtrInput
	EbsOptions              DomainEbsOptionsPtrInput
	ElasticsearchVersion    pulumi.StringPtrInput
	EncryptAtRest           DomainEncryptAtRestPtrInput
	LogPublishingOptions    DomainLogPublishingOptionArrayInput
	NodeToNodeEncryption    DomainNodeToNodeEncryptionPtrInput
	SnapshotOptions         DomainSnapshotOptionsPtrInput
	Tags                    pulumi.StringMapInput
	VpcOptions              DomainVpcOptionsPtrInput
}

func (DomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainArgs)(nil)).Elem()
}
