// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package DomainNodeToNodeEncryption

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type DomainNodeToNodeEncryption struct {
	// Specifies whether Amazon Cognito authentication with Kibana is enabled or not
	Enabled bool `pulumi:"enabled"`
}

type DomainNodeToNodeEncryptionInput interface {
	pulumi.Input

	ToDomainNodeToNodeEncryptionOutput() DomainNodeToNodeEncryptionOutput
	ToDomainNodeToNodeEncryptionOutputWithContext(context.Context) DomainNodeToNodeEncryptionOutput
}

type DomainNodeToNodeEncryptionArgs struct {
	// Specifies whether Amazon Cognito authentication with Kibana is enabled or not
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (DomainNodeToNodeEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainNodeToNodeEncryption)(nil)).Elem()
}

func (i DomainNodeToNodeEncryptionArgs) ToDomainNodeToNodeEncryptionOutput() DomainNodeToNodeEncryptionOutput {
	return i.ToDomainNodeToNodeEncryptionOutputWithContext(context.Background())
}

func (i DomainNodeToNodeEncryptionArgs) ToDomainNodeToNodeEncryptionOutputWithContext(ctx context.Context) DomainNodeToNodeEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNodeToNodeEncryptionOutput)
}

func (i DomainNodeToNodeEncryptionArgs) ToDomainNodeToNodeEncryptionPtrOutput() DomainNodeToNodeEncryptionPtrOutput {
	return i.ToDomainNodeToNodeEncryptionPtrOutputWithContext(context.Background())
}

func (i DomainNodeToNodeEncryptionArgs) ToDomainNodeToNodeEncryptionPtrOutputWithContext(ctx context.Context) DomainNodeToNodeEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNodeToNodeEncryptionOutput).ToDomainNodeToNodeEncryptionPtrOutputWithContext(ctx)
}

type DomainNodeToNodeEncryptionPtrInput interface {
	pulumi.Input

	ToDomainNodeToNodeEncryptionPtrOutput() DomainNodeToNodeEncryptionPtrOutput
	ToDomainNodeToNodeEncryptionPtrOutputWithContext(context.Context) DomainNodeToNodeEncryptionPtrOutput
}

type domainNodeToNodeEncryptionPtrType DomainNodeToNodeEncryptionArgs

func DomainNodeToNodeEncryptionPtr(v *DomainNodeToNodeEncryptionArgs) DomainNodeToNodeEncryptionPtrInput {	return (*domainNodeToNodeEncryptionPtrType)(v)
}

func (*domainNodeToNodeEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainNodeToNodeEncryption)(nil)).Elem()
}

func (i *domainNodeToNodeEncryptionPtrType) ToDomainNodeToNodeEncryptionPtrOutput() DomainNodeToNodeEncryptionPtrOutput {
	return i.ToDomainNodeToNodeEncryptionPtrOutputWithContext(context.Background())
}

func (i *domainNodeToNodeEncryptionPtrType) ToDomainNodeToNodeEncryptionPtrOutputWithContext(ctx context.Context) DomainNodeToNodeEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNodeToNodeEncryptionPtrOutput)
}

type DomainNodeToNodeEncryptionOutput struct { *pulumi.OutputState }

func (DomainNodeToNodeEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainNodeToNodeEncryption)(nil)).Elem()
}

func (o DomainNodeToNodeEncryptionOutput) ToDomainNodeToNodeEncryptionOutput() DomainNodeToNodeEncryptionOutput {
	return o
}

func (o DomainNodeToNodeEncryptionOutput) ToDomainNodeToNodeEncryptionOutputWithContext(ctx context.Context) DomainNodeToNodeEncryptionOutput {
	return o
}

func (o DomainNodeToNodeEncryptionOutput) ToDomainNodeToNodeEncryptionPtrOutput() DomainNodeToNodeEncryptionPtrOutput {
	return o.ToDomainNodeToNodeEncryptionPtrOutputWithContext(context.Background())
}

func (o DomainNodeToNodeEncryptionOutput) ToDomainNodeToNodeEncryptionPtrOutputWithContext(ctx context.Context) DomainNodeToNodeEncryptionPtrOutput {
	return o.ApplyT(func(v DomainNodeToNodeEncryption) *DomainNodeToNodeEncryption {
		return &v
	}).(DomainNodeToNodeEncryptionPtrOutput)
}
// Specifies whether Amazon Cognito authentication with Kibana is enabled or not
func (o DomainNodeToNodeEncryptionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func (v DomainNodeToNodeEncryption) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type DomainNodeToNodeEncryptionPtrOutput struct { *pulumi.OutputState}

func (DomainNodeToNodeEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainNodeToNodeEncryption)(nil)).Elem()
}

func (o DomainNodeToNodeEncryptionPtrOutput) ToDomainNodeToNodeEncryptionPtrOutput() DomainNodeToNodeEncryptionPtrOutput {
	return o
}

func (o DomainNodeToNodeEncryptionPtrOutput) ToDomainNodeToNodeEncryptionPtrOutputWithContext(ctx context.Context) DomainNodeToNodeEncryptionPtrOutput {
	return o
}

func (o DomainNodeToNodeEncryptionPtrOutput) Elem() DomainNodeToNodeEncryptionOutput {
	return o.ApplyT(func (v *DomainNodeToNodeEncryption) DomainNodeToNodeEncryption { return *v }).(DomainNodeToNodeEncryptionOutput)
}

// Specifies whether Amazon Cognito authentication with Kibana is enabled or not
func (o DomainNodeToNodeEncryptionPtrOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func (v DomainNodeToNodeEncryption) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(DomainNodeToNodeEncryptionOutput{})
	pulumi.RegisterOutputType(DomainNodeToNodeEncryptionPtrOutput{})
}
