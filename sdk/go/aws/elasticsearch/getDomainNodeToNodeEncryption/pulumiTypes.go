// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package getDomainNodeToNodeEncryption

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type GetDomainNodeToNodeEncryption struct {
	// Whether node to node encryption is enabled.
	Enabled bool `pulumi:"enabled"`
}

type GetDomainNodeToNodeEncryptionInput interface {
	pulumi.Input

	ToGetDomainNodeToNodeEncryptionOutput() GetDomainNodeToNodeEncryptionOutput
	ToGetDomainNodeToNodeEncryptionOutputWithContext(context.Context) GetDomainNodeToNodeEncryptionOutput
}

type GetDomainNodeToNodeEncryptionArgs struct {
	// Whether node to node encryption is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetDomainNodeToNodeEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainNodeToNodeEncryption)(nil)).Elem()
}

func (i GetDomainNodeToNodeEncryptionArgs) ToGetDomainNodeToNodeEncryptionOutput() GetDomainNodeToNodeEncryptionOutput {
	return i.ToGetDomainNodeToNodeEncryptionOutputWithContext(context.Background())
}

func (i GetDomainNodeToNodeEncryptionArgs) ToGetDomainNodeToNodeEncryptionOutputWithContext(ctx context.Context) GetDomainNodeToNodeEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainNodeToNodeEncryptionOutput)
}

type GetDomainNodeToNodeEncryptionArrayInput interface {
	pulumi.Input

	ToGetDomainNodeToNodeEncryptionArrayOutput() GetDomainNodeToNodeEncryptionArrayOutput
	ToGetDomainNodeToNodeEncryptionArrayOutputWithContext(context.Context) GetDomainNodeToNodeEncryptionArrayOutput
}

type GetDomainNodeToNodeEncryptionArray []GetDomainNodeToNodeEncryptionInput

func (GetDomainNodeToNodeEncryptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainNodeToNodeEncryption)(nil)).Elem()
}

func (i GetDomainNodeToNodeEncryptionArray) ToGetDomainNodeToNodeEncryptionArrayOutput() GetDomainNodeToNodeEncryptionArrayOutput {
	return i.ToGetDomainNodeToNodeEncryptionArrayOutputWithContext(context.Background())
}

func (i GetDomainNodeToNodeEncryptionArray) ToGetDomainNodeToNodeEncryptionArrayOutputWithContext(ctx context.Context) GetDomainNodeToNodeEncryptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainNodeToNodeEncryptionArrayOutput)
}

type GetDomainNodeToNodeEncryptionOutput struct { *pulumi.OutputState }

func (GetDomainNodeToNodeEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainNodeToNodeEncryption)(nil)).Elem()
}

func (o GetDomainNodeToNodeEncryptionOutput) ToGetDomainNodeToNodeEncryptionOutput() GetDomainNodeToNodeEncryptionOutput {
	return o
}

func (o GetDomainNodeToNodeEncryptionOutput) ToGetDomainNodeToNodeEncryptionOutputWithContext(ctx context.Context) GetDomainNodeToNodeEncryptionOutput {
	return o
}

// Whether node to node encryption is enabled.
func (o GetDomainNodeToNodeEncryptionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func (v GetDomainNodeToNodeEncryption) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetDomainNodeToNodeEncryptionArrayOutput struct { *pulumi.OutputState}

func (GetDomainNodeToNodeEncryptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainNodeToNodeEncryption)(nil)).Elem()
}

func (o GetDomainNodeToNodeEncryptionArrayOutput) ToGetDomainNodeToNodeEncryptionArrayOutput() GetDomainNodeToNodeEncryptionArrayOutput {
	return o
}

func (o GetDomainNodeToNodeEncryptionArrayOutput) ToGetDomainNodeToNodeEncryptionArrayOutputWithContext(ctx context.Context) GetDomainNodeToNodeEncryptionArrayOutput {
	return o
}

func (o GetDomainNodeToNodeEncryptionArrayOutput) Index(i pulumi.IntInput) GetDomainNodeToNodeEncryptionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetDomainNodeToNodeEncryption {
		return vs[0].([]GetDomainNodeToNodeEncryption)[vs[1].(int)]
	}).(GetDomainNodeToNodeEncryptionOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDomainNodeToNodeEncryptionOutput{})
	pulumi.RegisterOutputType(GetDomainNodeToNodeEncryptionArrayOutput{})
}
