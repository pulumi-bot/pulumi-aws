// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package lambda

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ProvisionedConcurrencyConfig struct {
	pulumi.CustomResourceState

	FunctionName                    pulumi.StringOutput `pulumi:"functionName"`
	ProvisionedConcurrentExecutions pulumi.IntOutput    `pulumi:"provisionedConcurrentExecutions"`
	Qualifier                       pulumi.StringOutput `pulumi:"qualifier"`
}

// NewProvisionedConcurrencyConfig registers a new resource with the given unique name, arguments, and options.
func NewProvisionedConcurrencyConfig(ctx *pulumi.Context,
	name string, args *ProvisionedConcurrencyConfigArgs, opts ...pulumi.ResourceOption) (*ProvisionedConcurrencyConfig, error) {
	if args == nil || args.FunctionName == nil {
		return nil, errors.New("missing required argument 'FunctionName'")
	}
	if args == nil || args.ProvisionedConcurrentExecutions == nil {
		return nil, errors.New("missing required argument 'ProvisionedConcurrentExecutions'")
	}
	if args == nil || args.Qualifier == nil {
		return nil, errors.New("missing required argument 'Qualifier'")
	}
	if args == nil {
		args = &ProvisionedConcurrencyConfigArgs{}
	}
	var resource ProvisionedConcurrencyConfig
	err := ctx.RegisterResource("aws:lambda/provisionedConcurrencyConfig:ProvisionedConcurrencyConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProvisionedConcurrencyConfig gets an existing ProvisionedConcurrencyConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProvisionedConcurrencyConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProvisionedConcurrencyConfigState, opts ...pulumi.ResourceOption) (*ProvisionedConcurrencyConfig, error) {
	var resource ProvisionedConcurrencyConfig
	err := ctx.ReadResource("aws:lambda/provisionedConcurrencyConfig:ProvisionedConcurrencyConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProvisionedConcurrencyConfig resources.
type provisionedConcurrencyConfigState struct {
	FunctionName                    *string `pulumi:"functionName"`
	ProvisionedConcurrentExecutions *int    `pulumi:"provisionedConcurrentExecutions"`
	Qualifier                       *string `pulumi:"qualifier"`
}

type ProvisionedConcurrencyConfigState struct {
	FunctionName                    pulumi.StringPtrInput
	ProvisionedConcurrentExecutions pulumi.IntPtrInput
	Qualifier                       pulumi.StringPtrInput
}

func (ProvisionedConcurrencyConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*provisionedConcurrencyConfigState)(nil)).Elem()
}

type provisionedConcurrencyConfigArgs struct {
	FunctionName                    string `pulumi:"functionName"`
	ProvisionedConcurrentExecutions int    `pulumi:"provisionedConcurrentExecutions"`
	Qualifier                       string `pulumi:"qualifier"`
}

// The set of arguments for constructing a ProvisionedConcurrencyConfig resource.
type ProvisionedConcurrencyConfigArgs struct {
	FunctionName                    pulumi.StringInput
	ProvisionedConcurrentExecutions pulumi.IntInput
	Qualifier                       pulumi.StringInput
}

func (ProvisionedConcurrencyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*provisionedConcurrencyConfigArgs)(nil)).Elem()
}
