// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package getFunctionDeadLetterConfig

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type GetFunctionDeadLetterConfig struct {
	TargetArn string `pulumi:"targetArn"`
}

type GetFunctionDeadLetterConfigInput interface {
	pulumi.Input

	ToGetFunctionDeadLetterConfigOutput() GetFunctionDeadLetterConfigOutput
	ToGetFunctionDeadLetterConfigOutputWithContext(context.Context) GetFunctionDeadLetterConfigOutput
}

type GetFunctionDeadLetterConfigArgs struct {
	TargetArn pulumi.StringInput `pulumi:"targetArn"`
}

func (GetFunctionDeadLetterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionDeadLetterConfig)(nil)).Elem()
}

func (i GetFunctionDeadLetterConfigArgs) ToGetFunctionDeadLetterConfigOutput() GetFunctionDeadLetterConfigOutput {
	return i.ToGetFunctionDeadLetterConfigOutputWithContext(context.Background())
}

func (i GetFunctionDeadLetterConfigArgs) ToGetFunctionDeadLetterConfigOutputWithContext(ctx context.Context) GetFunctionDeadLetterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFunctionDeadLetterConfigOutput)
}

type GetFunctionDeadLetterConfigOutput struct { *pulumi.OutputState }

func (GetFunctionDeadLetterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionDeadLetterConfig)(nil)).Elem()
}

func (o GetFunctionDeadLetterConfigOutput) ToGetFunctionDeadLetterConfigOutput() GetFunctionDeadLetterConfigOutput {
	return o
}

func (o GetFunctionDeadLetterConfigOutput) ToGetFunctionDeadLetterConfigOutputWithContext(ctx context.Context) GetFunctionDeadLetterConfigOutput {
	return o
}

func (o GetFunctionDeadLetterConfigOutput) TargetArn() pulumi.StringOutput {
	return o.ApplyT(func (v GetFunctionDeadLetterConfig) string { return v.TargetArn }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFunctionDeadLetterConfigOutput{})
}
