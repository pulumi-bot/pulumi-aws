// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package CertificateAuthorityRevocationConfigurationCrlConfiguration

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type CertificateAuthorityRevocationConfigurationCrlConfiguration struct {
	// Name inserted into the certificate CRL Distribution Points extension that enables the use of an alias for the CRL distribution point. Use this value if you don't want the name of your S3 bucket to be public.
	CustomCname *string `pulumi:"customCname"`
	// Boolean value that specifies whether certificate revocation lists (CRLs) are enabled. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// Number of days until a certificate expires. Must be between 1 and 5000.
	ExpirationInDays int `pulumi:"expirationInDays"`
	// Name of the S3 bucket that contains the CRL. If you do not provide a value for the `customCname` argument, the name of your S3 bucket is placed into the CRL Distribution Points extension of the issued certificate. You must specify a bucket policy that allows ACM PCA to write the CRL to your bucket.
	S3BucketName *string `pulumi:"s3BucketName"`
}

type CertificateAuthorityRevocationConfigurationCrlConfigurationInput interface {
	pulumi.Input

	ToCertificateAuthorityRevocationConfigurationCrlConfigurationOutput() CertificateAuthorityRevocationConfigurationCrlConfigurationOutput
	ToCertificateAuthorityRevocationConfigurationCrlConfigurationOutputWithContext(context.Context) CertificateAuthorityRevocationConfigurationCrlConfigurationOutput
}

type CertificateAuthorityRevocationConfigurationCrlConfigurationArgs struct {
	// Name inserted into the certificate CRL Distribution Points extension that enables the use of an alias for the CRL distribution point. Use this value if you don't want the name of your S3 bucket to be public.
	CustomCname pulumi.StringPtrInput `pulumi:"customCname"`
	// Boolean value that specifies whether certificate revocation lists (CRLs) are enabled. Defaults to `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Number of days until a certificate expires. Must be between 1 and 5000.
	ExpirationInDays pulumi.IntInput `pulumi:"expirationInDays"`
	// Name of the S3 bucket that contains the CRL. If you do not provide a value for the `customCname` argument, the name of your S3 bucket is placed into the CRL Distribution Points extension of the issued certificate. You must specify a bucket policy that allows ACM PCA to write the CRL to your bucket.
	S3BucketName pulumi.StringPtrInput `pulumi:"s3BucketName"`
}

func (CertificateAuthorityRevocationConfigurationCrlConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAuthorityRevocationConfigurationCrlConfiguration)(nil)).Elem()
}

func (i CertificateAuthorityRevocationConfigurationCrlConfigurationArgs) ToCertificateAuthorityRevocationConfigurationCrlConfigurationOutput() CertificateAuthorityRevocationConfigurationCrlConfigurationOutput {
	return i.ToCertificateAuthorityRevocationConfigurationCrlConfigurationOutputWithContext(context.Background())
}

func (i CertificateAuthorityRevocationConfigurationCrlConfigurationArgs) ToCertificateAuthorityRevocationConfigurationCrlConfigurationOutputWithContext(ctx context.Context) CertificateAuthorityRevocationConfigurationCrlConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityRevocationConfigurationCrlConfigurationOutput)
}

func (i CertificateAuthorityRevocationConfigurationCrlConfigurationArgs) ToCertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput() CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput {
	return i.ToCertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutputWithContext(context.Background())
}

func (i CertificateAuthorityRevocationConfigurationCrlConfigurationArgs) ToCertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutputWithContext(ctx context.Context) CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityRevocationConfigurationCrlConfigurationOutput).ToCertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutputWithContext(ctx)
}

type CertificateAuthorityRevocationConfigurationCrlConfigurationPtrInput interface {
	pulumi.Input

	ToCertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput() CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput
	ToCertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutputWithContext(context.Context) CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput
}

type certificateAuthorityRevocationConfigurationCrlConfigurationPtrType CertificateAuthorityRevocationConfigurationCrlConfigurationArgs

func CertificateAuthorityRevocationConfigurationCrlConfigurationPtr(v *CertificateAuthorityRevocationConfigurationCrlConfigurationArgs) CertificateAuthorityRevocationConfigurationCrlConfigurationPtrInput {	return (*certificateAuthorityRevocationConfigurationCrlConfigurationPtrType)(v)
}

func (*certificateAuthorityRevocationConfigurationCrlConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateAuthorityRevocationConfigurationCrlConfiguration)(nil)).Elem()
}

func (i *certificateAuthorityRevocationConfigurationCrlConfigurationPtrType) ToCertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput() CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput {
	return i.ToCertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutputWithContext(context.Background())
}

func (i *certificateAuthorityRevocationConfigurationCrlConfigurationPtrType) ToCertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutputWithContext(ctx context.Context) CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput)
}

type CertificateAuthorityRevocationConfigurationCrlConfigurationOutput struct { *pulumi.OutputState }

func (CertificateAuthorityRevocationConfigurationCrlConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateAuthorityRevocationConfigurationCrlConfiguration)(nil)).Elem()
}

func (o CertificateAuthorityRevocationConfigurationCrlConfigurationOutput) ToCertificateAuthorityRevocationConfigurationCrlConfigurationOutput() CertificateAuthorityRevocationConfigurationCrlConfigurationOutput {
	return o
}

func (o CertificateAuthorityRevocationConfigurationCrlConfigurationOutput) ToCertificateAuthorityRevocationConfigurationCrlConfigurationOutputWithContext(ctx context.Context) CertificateAuthorityRevocationConfigurationCrlConfigurationOutput {
	return o
}

func (o CertificateAuthorityRevocationConfigurationCrlConfigurationOutput) ToCertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput() CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput {
	return o.ToCertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutputWithContext(context.Background())
}

func (o CertificateAuthorityRevocationConfigurationCrlConfigurationOutput) ToCertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutputWithContext(ctx context.Context) CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput {
	return o.ApplyT(func(v CertificateAuthorityRevocationConfigurationCrlConfiguration) *CertificateAuthorityRevocationConfigurationCrlConfiguration {
		return &v
	}).(CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput)
}
// Name inserted into the certificate CRL Distribution Points extension that enables the use of an alias for the CRL distribution point. Use this value if you don't want the name of your S3 bucket to be public.
func (o CertificateAuthorityRevocationConfigurationCrlConfigurationOutput) CustomCname() pulumi.StringPtrOutput {
	return o.ApplyT(func (v CertificateAuthorityRevocationConfigurationCrlConfiguration) *string { return v.CustomCname }).(pulumi.StringPtrOutput)
}

// Boolean value that specifies whether certificate revocation lists (CRLs) are enabled. Defaults to `false`.
func (o CertificateAuthorityRevocationConfigurationCrlConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v CertificateAuthorityRevocationConfigurationCrlConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Number of days until a certificate expires. Must be between 1 and 5000.
func (o CertificateAuthorityRevocationConfigurationCrlConfigurationOutput) ExpirationInDays() pulumi.IntOutput {
	return o.ApplyT(func (v CertificateAuthorityRevocationConfigurationCrlConfiguration) int { return v.ExpirationInDays }).(pulumi.IntOutput)
}

// Name of the S3 bucket that contains the CRL. If you do not provide a value for the `customCname` argument, the name of your S3 bucket is placed into the CRL Distribution Points extension of the issued certificate. You must specify a bucket policy that allows ACM PCA to write the CRL to your bucket.
func (o CertificateAuthorityRevocationConfigurationCrlConfigurationOutput) S3BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v CertificateAuthorityRevocationConfigurationCrlConfiguration) *string { return v.S3BucketName }).(pulumi.StringPtrOutput)
}

type CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput struct { *pulumi.OutputState}

func (CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateAuthorityRevocationConfigurationCrlConfiguration)(nil)).Elem()
}

func (o CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput) ToCertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput() CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput {
	return o
}

func (o CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput) ToCertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutputWithContext(ctx context.Context) CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput {
	return o
}

func (o CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput) Elem() CertificateAuthorityRevocationConfigurationCrlConfigurationOutput {
	return o.ApplyT(func (v *CertificateAuthorityRevocationConfigurationCrlConfiguration) CertificateAuthorityRevocationConfigurationCrlConfiguration { return *v }).(CertificateAuthorityRevocationConfigurationCrlConfigurationOutput)
}

// Name inserted into the certificate CRL Distribution Points extension that enables the use of an alias for the CRL distribution point. Use this value if you don't want the name of your S3 bucket to be public.
func (o CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput) CustomCname() pulumi.StringPtrOutput {
	return o.ApplyT(func (v CertificateAuthorityRevocationConfigurationCrlConfiguration) *string { return v.CustomCname }).(pulumi.StringPtrOutput)
}

// Boolean value that specifies whether certificate revocation lists (CRLs) are enabled. Defaults to `false`.
func (o CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v CertificateAuthorityRevocationConfigurationCrlConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Number of days until a certificate expires. Must be between 1 and 5000.
func (o CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput) ExpirationInDays() pulumi.IntOutput {
	return o.ApplyT(func (v CertificateAuthorityRevocationConfigurationCrlConfiguration) int { return v.ExpirationInDays }).(pulumi.IntOutput)
}

// Name of the S3 bucket that contains the CRL. If you do not provide a value for the `customCname` argument, the name of your S3 bucket is placed into the CRL Distribution Points extension of the issued certificate. You must specify a bucket policy that allows ACM PCA to write the CRL to your bucket.
func (o CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput) S3BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v CertificateAuthorityRevocationConfigurationCrlConfiguration) *string { return v.S3BucketName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(CertificateAuthorityRevocationConfigurationCrlConfigurationOutput{})
	pulumi.RegisterOutputType(CertificateAuthorityRevocationConfigurationCrlConfigurationPtrOutput{})
}
