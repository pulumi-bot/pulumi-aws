// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloud9

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type EnvironmentEC2 struct {
	pulumi.CustomResourceState

	Arn                      pulumi.StringOutput    `pulumi:"arn"`
	AutomaticStopTimeMinutes pulumi.IntPtrOutput    `pulumi:"automaticStopTimeMinutes"`
	Description              pulumi.StringPtrOutput `pulumi:"description"`
	InstanceType             pulumi.StringOutput    `pulumi:"instanceType"`
	Name                     pulumi.StringOutput    `pulumi:"name"`
	OwnerArn                 pulumi.StringOutput    `pulumi:"ownerArn"`
	SubnetId                 pulumi.StringPtrOutput `pulumi:"subnetId"`
	Tags                     pulumi.StringMapOutput `pulumi:"tags"`
	Type                     pulumi.StringOutput    `pulumi:"type"`
}

// NewEnvironmentEC2 registers a new resource with the given unique name, arguments, and options.
func NewEnvironmentEC2(ctx *pulumi.Context,
	name string, args *EnvironmentEC2Args, opts ...pulumi.ResourceOption) (*EnvironmentEC2, error) {
	if args == nil || args.InstanceType == nil {
		return nil, errors.New("missing required argument 'InstanceType'")
	}
	if args == nil {
		args = &EnvironmentEC2Args{}
	}
	var resource EnvironmentEC2
	err := ctx.RegisterResource("aws:cloud9/environmentEC2:EnvironmentEC2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnvironmentEC2 gets an existing EnvironmentEC2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnvironmentEC2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnvironmentEC2State, opts ...pulumi.ResourceOption) (*EnvironmentEC2, error) {
	var resource EnvironmentEC2
	err := ctx.ReadResource("aws:cloud9/environmentEC2:EnvironmentEC2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EnvironmentEC2 resources.
type environmentEC2State struct {
	Arn                      *string           `pulumi:"arn"`
	AutomaticStopTimeMinutes *int              `pulumi:"automaticStopTimeMinutes"`
	Description              *string           `pulumi:"description"`
	InstanceType             *string           `pulumi:"instanceType"`
	Name                     *string           `pulumi:"name"`
	OwnerArn                 *string           `pulumi:"ownerArn"`
	SubnetId                 *string           `pulumi:"subnetId"`
	Tags                     map[string]string `pulumi:"tags"`
	Type                     *string           `pulumi:"type"`
}

type EnvironmentEC2State struct {
	Arn                      pulumi.StringPtrInput
	AutomaticStopTimeMinutes pulumi.IntPtrInput
	Description              pulumi.StringPtrInput
	InstanceType             pulumi.StringPtrInput
	Name                     pulumi.StringPtrInput
	OwnerArn                 pulumi.StringPtrInput
	SubnetId                 pulumi.StringPtrInput
	Tags                     pulumi.StringMapInput
	Type                     pulumi.StringPtrInput
}

func (EnvironmentEC2State) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentEC2State)(nil)).Elem()
}

type environmentEC2Args struct {
	AutomaticStopTimeMinutes *int              `pulumi:"automaticStopTimeMinutes"`
	Description              *string           `pulumi:"description"`
	InstanceType             string            `pulumi:"instanceType"`
	Name                     *string           `pulumi:"name"`
	OwnerArn                 *string           `pulumi:"ownerArn"`
	SubnetId                 *string           `pulumi:"subnetId"`
	Tags                     map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a EnvironmentEC2 resource.
type EnvironmentEC2Args struct {
	AutomaticStopTimeMinutes pulumi.IntPtrInput
	Description              pulumi.StringPtrInput
	InstanceType             pulumi.StringInput
	Name                     pulumi.StringPtrInput
	OwnerArn                 pulumi.StringPtrInput
	SubnetId                 pulumi.StringPtrInput
	Tags                     pulumi.StringMapInput
}

func (EnvironmentEC2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentEC2Args)(nil)).Elem()
}
