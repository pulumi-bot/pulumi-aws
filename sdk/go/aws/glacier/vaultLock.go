// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package glacier

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type VaultLock struct {
	pulumi.CustomResourceState

	CompleteLock        pulumi.BoolOutput    `pulumi:"completeLock"`
	IgnoreDeletionError pulumi.BoolPtrOutput `pulumi:"ignoreDeletionError"`
	Policy              pulumi.StringOutput  `pulumi:"policy"`
	VaultName           pulumi.StringOutput  `pulumi:"vaultName"`
}

// NewVaultLock registers a new resource with the given unique name, arguments, and options.
func NewVaultLock(ctx *pulumi.Context,
	name string, args *VaultLockArgs, opts ...pulumi.ResourceOption) (*VaultLock, error) {
	if args == nil || args.CompleteLock == nil {
		return nil, errors.New("missing required argument 'CompleteLock'")
	}
	if args == nil || args.Policy == nil {
		return nil, errors.New("missing required argument 'Policy'")
	}
	if args == nil || args.VaultName == nil {
		return nil, errors.New("missing required argument 'VaultName'")
	}
	if args == nil {
		args = &VaultLockArgs{}
	}
	var resource VaultLock
	err := ctx.RegisterResource("aws:glacier/vaultLock:VaultLock", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVaultLock gets an existing VaultLock resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVaultLock(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VaultLockState, opts ...pulumi.ResourceOption) (*VaultLock, error) {
	var resource VaultLock
	err := ctx.ReadResource("aws:glacier/vaultLock:VaultLock", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VaultLock resources.
type vaultLockState struct {
	CompleteLock        *bool   `pulumi:"completeLock"`
	IgnoreDeletionError *bool   `pulumi:"ignoreDeletionError"`
	Policy              *string `pulumi:"policy"`
	VaultName           *string `pulumi:"vaultName"`
}

type VaultLockState struct {
	CompleteLock        pulumi.BoolPtrInput
	IgnoreDeletionError pulumi.BoolPtrInput
	Policy              pulumi.StringPtrInput
	VaultName           pulumi.StringPtrInput
}

func (VaultLockState) ElementType() reflect.Type {
	return reflect.TypeOf((*vaultLockState)(nil)).Elem()
}

type vaultLockArgs struct {
	CompleteLock        bool   `pulumi:"completeLock"`
	IgnoreDeletionError *bool  `pulumi:"ignoreDeletionError"`
	Policy              string `pulumi:"policy"`
	VaultName           string `pulumi:"vaultName"`
}

// The set of arguments for constructing a VaultLock resource.
type VaultLockArgs struct {
	CompleteLock        pulumi.BoolInput
	IgnoreDeletionError pulumi.BoolPtrInput
	Policy              pulumi.StringInput
	VaultName           pulumi.StringInput
}

func (VaultLockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vaultLockArgs)(nil)).Elem()
}
