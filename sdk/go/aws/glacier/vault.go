// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package glacier

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Vault struct {
	pulumi.CustomResourceState

	AccessPolicy  pulumi.StringPtrOutput       `pulumi:"accessPolicy"`
	Arn           pulumi.StringOutput          `pulumi:"arn"`
	Location      pulumi.StringOutput          `pulumi:"location"`
	Name          pulumi.StringOutput          `pulumi:"name"`
	Notifications VaultNotificationArrayOutput `pulumi:"notifications"`
	Tags          pulumi.StringMapOutput       `pulumi:"tags"`
}

// NewVault registers a new resource with the given unique name, arguments, and options.
func NewVault(ctx *pulumi.Context,
	name string, args *VaultArgs, opts ...pulumi.ResourceOption) (*Vault, error) {
	if args == nil {
		args = &VaultArgs{}
	}
	var resource Vault
	err := ctx.RegisterResource("aws:glacier/vault:Vault", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVault gets an existing Vault resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVault(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VaultState, opts ...pulumi.ResourceOption) (*Vault, error) {
	var resource Vault
	err := ctx.ReadResource("aws:glacier/vault:Vault", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Vault resources.
type vaultState struct {
	AccessPolicy  *string             `pulumi:"accessPolicy"`
	Arn           *string             `pulumi:"arn"`
	Location      *string             `pulumi:"location"`
	Name          *string             `pulumi:"name"`
	Notifications []VaultNotification `pulumi:"notifications"`
	Tags          map[string]string   `pulumi:"tags"`
}

type VaultState struct {
	AccessPolicy  pulumi.StringPtrInput
	Arn           pulumi.StringPtrInput
	Location      pulumi.StringPtrInput
	Name          pulumi.StringPtrInput
	Notifications VaultNotificationArrayInput
	Tags          pulumi.StringMapInput
}

func (VaultState) ElementType() reflect.Type {
	return reflect.TypeOf((*vaultState)(nil)).Elem()
}

type vaultArgs struct {
	AccessPolicy  *string             `pulumi:"accessPolicy"`
	Name          *string             `pulumi:"name"`
	Notifications []VaultNotification `pulumi:"notifications"`
	Tags          map[string]string   `pulumi:"tags"`
}

// The set of arguments for constructing a Vault resource.
type VaultArgs struct {
	AccessPolicy  pulumi.StringPtrInput
	Name          pulumi.StringPtrInput
	Notifications VaultNotificationArrayInput
	Tags          pulumi.StringMapInput
}

func (VaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vaultArgs)(nil)).Elem()
}
