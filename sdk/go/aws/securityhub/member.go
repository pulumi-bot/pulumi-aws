// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package securityhub

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Member struct {
	pulumi.CustomResourceState

	AccountId    pulumi.StringOutput  `pulumi:"accountId"`
	Email        pulumi.StringOutput  `pulumi:"email"`
	Invite       pulumi.BoolPtrOutput `pulumi:"invite"`
	MasterId     pulumi.StringOutput  `pulumi:"masterId"`
	MemberStatus pulumi.StringOutput  `pulumi:"memberStatus"`
}

// NewMember registers a new resource with the given unique name, arguments, and options.
func NewMember(ctx *pulumi.Context,
	name string, args *MemberArgs, opts ...pulumi.ResourceOption) (*Member, error) {
	if args == nil || args.AccountId == nil {
		return nil, errors.New("missing required argument 'AccountId'")
	}
	if args == nil || args.Email == nil {
		return nil, errors.New("missing required argument 'Email'")
	}
	if args == nil {
		args = &MemberArgs{}
	}
	var resource Member
	err := ctx.RegisterResource("aws:securityhub/member:Member", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMember gets an existing Member resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MemberState, opts ...pulumi.ResourceOption) (*Member, error) {
	var resource Member
	err := ctx.ReadResource("aws:securityhub/member:Member", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Member resources.
type memberState struct {
	AccountId    *string `pulumi:"accountId"`
	Email        *string `pulumi:"email"`
	Invite       *bool   `pulumi:"invite"`
	MasterId     *string `pulumi:"masterId"`
	MemberStatus *string `pulumi:"memberStatus"`
}

type MemberState struct {
	AccountId    pulumi.StringPtrInput
	Email        pulumi.StringPtrInput
	Invite       pulumi.BoolPtrInput
	MasterId     pulumi.StringPtrInput
	MemberStatus pulumi.StringPtrInput
}

func (MemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*memberState)(nil)).Elem()
}

type memberArgs struct {
	AccountId string `pulumi:"accountId"`
	Email     string `pulumi:"email"`
	Invite    *bool  `pulumi:"invite"`
}

// The set of arguments for constructing a Member resource.
type MemberArgs struct {
	AccountId pulumi.StringInput
	Email     pulumi.StringInput
	Invite    pulumi.BoolPtrInput
}

func (MemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*memberArgs)(nil)).Elem()
}
