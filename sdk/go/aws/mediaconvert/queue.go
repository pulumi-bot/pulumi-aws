// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package mediaconvert

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Queue struct {
	pulumi.CustomResourceState

	Arn                     pulumi.StringOutput                `pulumi:"arn"`
	Description             pulumi.StringPtrOutput             `pulumi:"description"`
	Name                    pulumi.StringOutput                `pulumi:"name"`
	PricingPlan             pulumi.StringPtrOutput             `pulumi:"pricingPlan"`
	ReservationPlanSettings QueueReservationPlanSettingsOutput `pulumi:"reservationPlanSettings"`
	Status                  pulumi.StringPtrOutput             `pulumi:"status"`
	Tags                    pulumi.StringMapOutput             `pulumi:"tags"`
}

// NewQueue registers a new resource with the given unique name, arguments, and options.
func NewQueue(ctx *pulumi.Context,
	name string, args *QueueArgs, opts ...pulumi.ResourceOption) (*Queue, error) {
	if args == nil {
		args = &QueueArgs{}
	}
	var resource Queue
	err := ctx.RegisterResource("aws:mediaconvert/queue:Queue", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetQueue gets an existing Queue resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetQueue(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *QueueState, opts ...pulumi.ResourceOption) (*Queue, error) {
	var resource Queue
	err := ctx.ReadResource("aws:mediaconvert/queue:Queue", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Queue resources.
type queueState struct {
	Arn                     *string                       `pulumi:"arn"`
	Description             *string                       `pulumi:"description"`
	Name                    *string                       `pulumi:"name"`
	PricingPlan             *string                       `pulumi:"pricingPlan"`
	ReservationPlanSettings *QueueReservationPlanSettings `pulumi:"reservationPlanSettings"`
	Status                  *string                       `pulumi:"status"`
	Tags                    map[string]string             `pulumi:"tags"`
}

type QueueState struct {
	Arn                     pulumi.StringPtrInput
	Description             pulumi.StringPtrInput
	Name                    pulumi.StringPtrInput
	PricingPlan             pulumi.StringPtrInput
	ReservationPlanSettings QueueReservationPlanSettingsPtrInput
	Status                  pulumi.StringPtrInput
	Tags                    pulumi.StringMapInput
}

func (QueueState) ElementType() reflect.Type {
	return reflect.TypeOf((*queueState)(nil)).Elem()
}

type queueArgs struct {
	Description             *string                       `pulumi:"description"`
	Name                    *string                       `pulumi:"name"`
	PricingPlan             *string                       `pulumi:"pricingPlan"`
	ReservationPlanSettings *QueueReservationPlanSettings `pulumi:"reservationPlanSettings"`
	Status                  *string                       `pulumi:"status"`
	Tags                    map[string]string             `pulumi:"tags"`
}

// The set of arguments for constructing a Queue resource.
type QueueArgs struct {
	Description             pulumi.StringPtrInput
	Name                    pulumi.StringPtrInput
	PricingPlan             pulumi.StringPtrInput
	ReservationPlanSettings QueueReservationPlanSettingsPtrInput
	Status                  pulumi.StringPtrInput
	Tags                    pulumi.StringMapInput
}

func (QueueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*queueArgs)(nil)).Elem()
}
