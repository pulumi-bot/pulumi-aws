// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ModelContainer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ModelContainer struct {
	ContainerHostname *string `pulumi:"containerHostname"`
	Environment map[string]interface{} `pulumi:"environment"`
	Image string `pulumi:"image"`
	ModelDataUrl *string `pulumi:"modelDataUrl"`
}

type ModelContainerInput interface {
	pulumi.Input

	ToModelContainerOutput() ModelContainerOutput
	ToModelContainerOutputWithContext(context.Context) ModelContainerOutput
}

type ModelContainerArgs struct {
	ContainerHostname pulumi.StringPtrInput `pulumi:"containerHostname"`
	Environment pulumi.MapInput `pulumi:"environment"`
	Image pulumi.StringInput `pulumi:"image"`
	ModelDataUrl pulumi.StringPtrInput `pulumi:"modelDataUrl"`
}

func (ModelContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelContainer)(nil)).Elem()
}

func (i ModelContainerArgs) ToModelContainerOutput() ModelContainerOutput {
	return i.ToModelContainerOutputWithContext(context.Background())
}

func (i ModelContainerArgs) ToModelContainerOutputWithContext(ctx context.Context) ModelContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelContainerOutput)
}

type ModelContainerArrayInput interface {
	pulumi.Input

	ToModelContainerArrayOutput() ModelContainerArrayOutput
	ToModelContainerArrayOutputWithContext(context.Context) ModelContainerArrayOutput
}

type ModelContainerArray []ModelContainerInput

func (ModelContainerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelContainer)(nil)).Elem()
}

func (i ModelContainerArray) ToModelContainerArrayOutput() ModelContainerArrayOutput {
	return i.ToModelContainerArrayOutputWithContext(context.Background())
}

func (i ModelContainerArray) ToModelContainerArrayOutputWithContext(ctx context.Context) ModelContainerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModelContainerArrayOutput)
}

type ModelContainerOutput struct { *pulumi.OutputState }

func (ModelContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModelContainer)(nil)).Elem()
}

func (o ModelContainerOutput) ToModelContainerOutput() ModelContainerOutput {
	return o
}

func (o ModelContainerOutput) ToModelContainerOutputWithContext(ctx context.Context) ModelContainerOutput {
	return o
}

func (o ModelContainerOutput) ContainerHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ModelContainer) *string { return v.ContainerHostname }).(pulumi.StringPtrOutput)
}

func (o ModelContainerOutput) Environment() pulumi.MapOutput {
	return o.ApplyT(func (v ModelContainer) map[string]interface{} { return v.Environment }).(pulumi.MapOutput)
}

func (o ModelContainerOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func (v ModelContainer) string { return v.Image }).(pulumi.StringOutput)
}

func (o ModelContainerOutput) ModelDataUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ModelContainer) *string { return v.ModelDataUrl }).(pulumi.StringPtrOutput)
}

type ModelContainerArrayOutput struct { *pulumi.OutputState}

func (ModelContainerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ModelContainer)(nil)).Elem()
}

func (o ModelContainerArrayOutput) ToModelContainerArrayOutput() ModelContainerArrayOutput {
	return o
}

func (o ModelContainerArrayOutput) ToModelContainerArrayOutputWithContext(ctx context.Context) ModelContainerArrayOutput {
	return o
}

func (o ModelContainerArrayOutput) Index(i pulumi.IntInput) ModelContainerOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ModelContainer {
		return vs[0].([]ModelContainer)[vs[1].(int)]
	}).(ModelContainerOutput)
}

func init() {
	pulumi.RegisterOutputType(ModelContainerOutput{})
	pulumi.RegisterOutputType(ModelContainerArrayOutput{})
}
