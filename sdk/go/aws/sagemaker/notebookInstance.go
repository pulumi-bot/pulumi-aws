// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type NotebookInstance struct {
	pulumi.CustomResourceState

	Arn                  pulumi.StringOutput      `pulumi:"arn"`
	DirectInternetAccess pulumi.StringPtrOutput   `pulumi:"directInternetAccess"`
	InstanceType         pulumi.StringOutput      `pulumi:"instanceType"`
	KmsKeyId             pulumi.StringPtrOutput   `pulumi:"kmsKeyId"`
	LifecycleConfigName  pulumi.StringPtrOutput   `pulumi:"lifecycleConfigName"`
	Name                 pulumi.StringOutput      `pulumi:"name"`
	RoleArn              pulumi.StringOutput      `pulumi:"roleArn"`
	SecurityGroups       pulumi.StringArrayOutput `pulumi:"securityGroups"`
	SubnetId             pulumi.StringPtrOutput   `pulumi:"subnetId"`
	Tags                 pulumi.StringMapOutput   `pulumi:"tags"`
}

// NewNotebookInstance registers a new resource with the given unique name, arguments, and options.
func NewNotebookInstance(ctx *pulumi.Context,
	name string, args *NotebookInstanceArgs, opts ...pulumi.ResourceOption) (*NotebookInstance, error) {
	if args == nil || args.InstanceType == nil {
		return nil, errors.New("missing required argument 'InstanceType'")
	}
	if args == nil || args.RoleArn == nil {
		return nil, errors.New("missing required argument 'RoleArn'")
	}
	if args == nil {
		args = &NotebookInstanceArgs{}
	}
	var resource NotebookInstance
	err := ctx.RegisterResource("aws:sagemaker/notebookInstance:NotebookInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNotebookInstance gets an existing NotebookInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNotebookInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NotebookInstanceState, opts ...pulumi.ResourceOption) (*NotebookInstance, error) {
	var resource NotebookInstance
	err := ctx.ReadResource("aws:sagemaker/notebookInstance:NotebookInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NotebookInstance resources.
type notebookInstanceState struct {
	Arn                  *string           `pulumi:"arn"`
	DirectInternetAccess *string           `pulumi:"directInternetAccess"`
	InstanceType         *string           `pulumi:"instanceType"`
	KmsKeyId             *string           `pulumi:"kmsKeyId"`
	LifecycleConfigName  *string           `pulumi:"lifecycleConfigName"`
	Name                 *string           `pulumi:"name"`
	RoleArn              *string           `pulumi:"roleArn"`
	SecurityGroups       []string          `pulumi:"securityGroups"`
	SubnetId             *string           `pulumi:"subnetId"`
	Tags                 map[string]string `pulumi:"tags"`
}

type NotebookInstanceState struct {
	Arn                  pulumi.StringPtrInput
	DirectInternetAccess pulumi.StringPtrInput
	InstanceType         pulumi.StringPtrInput
	KmsKeyId             pulumi.StringPtrInput
	LifecycleConfigName  pulumi.StringPtrInput
	Name                 pulumi.StringPtrInput
	RoleArn              pulumi.StringPtrInput
	SecurityGroups       pulumi.StringArrayInput
	SubnetId             pulumi.StringPtrInput
	Tags                 pulumi.StringMapInput
}

func (NotebookInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*notebookInstanceState)(nil)).Elem()
}

type notebookInstanceArgs struct {
	DirectInternetAccess *string           `pulumi:"directInternetAccess"`
	InstanceType         string            `pulumi:"instanceType"`
	KmsKeyId             *string           `pulumi:"kmsKeyId"`
	LifecycleConfigName  *string           `pulumi:"lifecycleConfigName"`
	Name                 *string           `pulumi:"name"`
	RoleArn              string            `pulumi:"roleArn"`
	SecurityGroups       []string          `pulumi:"securityGroups"`
	SubnetId             *string           `pulumi:"subnetId"`
	Tags                 map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a NotebookInstance resource.
type NotebookInstanceArgs struct {
	DirectInternetAccess pulumi.StringPtrInput
	InstanceType         pulumi.StringInput
	KmsKeyId             pulumi.StringPtrInput
	LifecycleConfigName  pulumi.StringPtrInput
	Name                 pulumi.StringPtrInput
	RoleArn              pulumi.StringInput
	SecurityGroups       pulumi.StringArrayInput
	SubnetId             pulumi.StringPtrInput
	Tags                 pulumi.StringMapInput
}

func (NotebookInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*notebookInstanceArgs)(nil)).Elem()
}
