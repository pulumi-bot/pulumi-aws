// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package userPool

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-aws/cognito/UserPoolAdminCreateUserConfig"
	"https:/github.com/pulumi/pulumi-aws/cognito/UserPoolAdminCreateUserConfigInviteMessageTemplate"
	"https:/github.com/pulumi/pulumi-aws/cognito/UserPoolDeviceConfiguration"
	"https:/github.com/pulumi/pulumi-aws/cognito/UserPoolEmailConfiguration"
	"https:/github.com/pulumi/pulumi-aws/cognito/UserPoolLambdaConfig"
	"https:/github.com/pulumi/pulumi-aws/cognito/UserPoolPasswordPolicy"
	"https:/github.com/pulumi/pulumi-aws/cognito/UserPoolSchema"
	"https:/github.com/pulumi/pulumi-aws/cognito/UserPoolSchemaNumberAttributeConstraints"
	"https:/github.com/pulumi/pulumi-aws/cognito/UserPoolSchemaStringAttributeConstraints"
	"https:/github.com/pulumi/pulumi-aws/cognito/UserPoolSmsConfiguration"
	"https:/github.com/pulumi/pulumi-aws/cognito/UserPoolUserPoolAddOns"
	"https:/github.com/pulumi/pulumi-aws/cognito/UserPoolVerificationMessageTemplate"
)

// Provides a Cognito User Pool resource.
// 
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/cognito_user_pool.html.markdown.
type UserPool struct {
	pulumi.CustomResourceState

	// The configuration for AdminCreateUser requests.
	AdminCreateUserConfig cognitoUserPoolAdminCreateUserConfig.UserPoolAdminCreateUserConfigOutput `pulumi:"adminCreateUserConfig"`
	// Attributes supported as an alias for this user pool. Possible values: phone_number, email, or preferred_username. Conflicts with `usernameAttributes`.
	AliasAttributes pulumi.StringArrayOutput `pulumi:"aliasAttributes"`
	// The ARN of the user pool.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The attributes to be auto-verified. Possible values: email, phone_number.
	AutoVerifiedAttributes pulumi.StringArrayOutput `pulumi:"autoVerifiedAttributes"`
	// The date the user pool was created.
	CreationDate pulumi.StringOutput `pulumi:"creationDate"`
	// The configuration for the user pool's device tracking.
	DeviceConfiguration cognitoUserPoolDeviceConfiguration.UserPoolDeviceConfigurationPtrOutput `pulumi:"deviceConfiguration"`
	// The Email Configuration.
	EmailConfiguration cognitoUserPoolEmailConfiguration.UserPoolEmailConfigurationPtrOutput `pulumi:"emailConfiguration"`
	// A string representing the email verification message. Conflicts with `verificationMessageTemplate` configuration block `emailMessage` argument.
	EmailVerificationMessage pulumi.StringOutput `pulumi:"emailVerificationMessage"`
	// A string representing the email verification subject. Conflicts with `verificationMessageTemplate` configuration block `emailSubject` argument.
	EmailVerificationSubject pulumi.StringOutput `pulumi:"emailVerificationSubject"`
	// The endpoint name of the user pool. Example format: cognito-idp.REGION.amazonaws.com/xxxx_yyyyy
	Endpoint pulumi.StringOutput `pulumi:"endpoint"`
	// A container for the AWS Lambda triggers associated with the user pool.
	LambdaConfig cognitoUserPoolLambdaConfig.UserPoolLambdaConfigOutput `pulumi:"lambdaConfig"`
	// The date the user pool was last modified.
	LastModifiedDate pulumi.StringOutput `pulumi:"lastModifiedDate"`
	// Set to enable multi-factor authentication. Must be one of the following values (ON, OFF, OPTIONAL)
	MfaConfiguration pulumi.StringPtrOutput `pulumi:"mfaConfiguration"`
	// The name of the attribute.
	Name pulumi.StringOutput `pulumi:"name"`
	// A container for information about the user pool password policy.
	PasswordPolicy cognitoUserPoolPasswordPolicy.UserPoolPasswordPolicyOutput `pulumi:"passwordPolicy"`
	// A container with the schema attributes of a user pool. Schema attributes from the [standard attribute set](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html#cognito-user-pools-standard-attributes) only need to be specified if they are different from the default configuration. Maximum of 50 attributes.
	Schemas cognitoUserPoolSchema.UserPoolSchemaArrayOutput `pulumi:"schemas"`
	// A string representing the SMS authentication message.
	SmsAuthenticationMessage pulumi.StringPtrOutput `pulumi:"smsAuthenticationMessage"`
	// The SMS Configuration.
	SmsConfiguration cognitoUserPoolSmsConfiguration.UserPoolSmsConfigurationPtrOutput `pulumi:"smsConfiguration"`
	// A string representing the SMS verification message. Conflicts with `verificationMessageTemplate` configuration block `smsMessage` argument.
	SmsVerificationMessage pulumi.StringOutput `pulumi:"smsVerificationMessage"`
	// A mapping of tags to assign to the User Pool.
	Tags pulumi.MapOutput `pulumi:"tags"`
	// Configuration block for user pool add-ons to enable user pool advanced security mode features.
	UserPoolAddOns cognitoUserPoolUserPoolAddOns.UserPoolUserPoolAddOnsPtrOutput `pulumi:"userPoolAddOns"`
	// Specifies whether email addresses or phone numbers can be specified as usernames when a user signs up. Conflicts with `aliasAttributes`.
	UsernameAttributes pulumi.StringArrayOutput `pulumi:"usernameAttributes"`
	// The verification message templates configuration.
	VerificationMessageTemplate cognitoUserPoolVerificationMessageTemplate.UserPoolVerificationMessageTemplateOutput `pulumi:"verificationMessageTemplate"`
}

// NewUserPool registers a new resource with the given unique name, arguments, and options.
func NewUserPool(ctx *pulumi.Context,
	name string, args *UserPoolArgs, opts ...pulumi.ResourceOption) (*UserPool, error) {
	if args == nil {
		args = &UserPoolArgs{}
	}
	var resource UserPool
	err := ctx.RegisterResource("aws:cognito/userPool:UserPool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserPool gets an existing UserPool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserPool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserPoolState, opts ...pulumi.ResourceOption) (*UserPool, error) {
	var resource UserPool
	err := ctx.ReadResource("aws:cognito/userPool:UserPool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserPool resources.
type userPoolState struct {
	// The configuration for AdminCreateUser requests.
	AdminCreateUserConfig *cognitoUserPoolAdminCreateUserConfig.UserPoolAdminCreateUserConfig `pulumi:"adminCreateUserConfig"`
	// Attributes supported as an alias for this user pool. Possible values: phone_number, email, or preferred_username. Conflicts with `usernameAttributes`.
	AliasAttributes []string `pulumi:"aliasAttributes"`
	// The ARN of the user pool.
	Arn *string `pulumi:"arn"`
	// The attributes to be auto-verified. Possible values: email, phone_number.
	AutoVerifiedAttributes []string `pulumi:"autoVerifiedAttributes"`
	// The date the user pool was created.
	CreationDate *string `pulumi:"creationDate"`
	// The configuration for the user pool's device tracking.
	DeviceConfiguration *cognitoUserPoolDeviceConfiguration.UserPoolDeviceConfiguration `pulumi:"deviceConfiguration"`
	// The Email Configuration.
	EmailConfiguration *cognitoUserPoolEmailConfiguration.UserPoolEmailConfiguration `pulumi:"emailConfiguration"`
	// A string representing the email verification message. Conflicts with `verificationMessageTemplate` configuration block `emailMessage` argument.
	EmailVerificationMessage *string `pulumi:"emailVerificationMessage"`
	// A string representing the email verification subject. Conflicts with `verificationMessageTemplate` configuration block `emailSubject` argument.
	EmailVerificationSubject *string `pulumi:"emailVerificationSubject"`
	// The endpoint name of the user pool. Example format: cognito-idp.REGION.amazonaws.com/xxxx_yyyyy
	Endpoint *string `pulumi:"endpoint"`
	// A container for the AWS Lambda triggers associated with the user pool.
	LambdaConfig *cognitoUserPoolLambdaConfig.UserPoolLambdaConfig `pulumi:"lambdaConfig"`
	// The date the user pool was last modified.
	LastModifiedDate *string `pulumi:"lastModifiedDate"`
	// Set to enable multi-factor authentication. Must be one of the following values (ON, OFF, OPTIONAL)
	MfaConfiguration *string `pulumi:"mfaConfiguration"`
	// The name of the attribute.
	Name *string `pulumi:"name"`
	// A container for information about the user pool password policy.
	PasswordPolicy *cognitoUserPoolPasswordPolicy.UserPoolPasswordPolicy `pulumi:"passwordPolicy"`
	// A container with the schema attributes of a user pool. Schema attributes from the [standard attribute set](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html#cognito-user-pools-standard-attributes) only need to be specified if they are different from the default configuration. Maximum of 50 attributes.
	Schemas []cognitoUserPoolSchema.UserPoolSchema `pulumi:"schemas"`
	// A string representing the SMS authentication message.
	SmsAuthenticationMessage *string `pulumi:"smsAuthenticationMessage"`
	// The SMS Configuration.
	SmsConfiguration *cognitoUserPoolSmsConfiguration.UserPoolSmsConfiguration `pulumi:"smsConfiguration"`
	// A string representing the SMS verification message. Conflicts with `verificationMessageTemplate` configuration block `smsMessage` argument.
	SmsVerificationMessage *string `pulumi:"smsVerificationMessage"`
	// A mapping of tags to assign to the User Pool.
	Tags map[string]interface{} `pulumi:"tags"`
	// Configuration block for user pool add-ons to enable user pool advanced security mode features.
	UserPoolAddOns *cognitoUserPoolUserPoolAddOns.UserPoolUserPoolAddOns `pulumi:"userPoolAddOns"`
	// Specifies whether email addresses or phone numbers can be specified as usernames when a user signs up. Conflicts with `aliasAttributes`.
	UsernameAttributes []string `pulumi:"usernameAttributes"`
	// The verification message templates configuration.
	VerificationMessageTemplate *cognitoUserPoolVerificationMessageTemplate.UserPoolVerificationMessageTemplate `pulumi:"verificationMessageTemplate"`
}

type UserPoolState struct {
	// The configuration for AdminCreateUser requests.
	AdminCreateUserConfig cognitoUserPoolAdminCreateUserConfig.UserPoolAdminCreateUserConfigPtrInput
	// Attributes supported as an alias for this user pool. Possible values: phone_number, email, or preferred_username. Conflicts with `usernameAttributes`.
	AliasAttributes pulumi.StringArrayInput
	// The ARN of the user pool.
	Arn pulumi.StringPtrInput
	// The attributes to be auto-verified. Possible values: email, phone_number.
	AutoVerifiedAttributes pulumi.StringArrayInput
	// The date the user pool was created.
	CreationDate pulumi.StringPtrInput
	// The configuration for the user pool's device tracking.
	DeviceConfiguration cognitoUserPoolDeviceConfiguration.UserPoolDeviceConfigurationPtrInput
	// The Email Configuration.
	EmailConfiguration cognitoUserPoolEmailConfiguration.UserPoolEmailConfigurationPtrInput
	// A string representing the email verification message. Conflicts with `verificationMessageTemplate` configuration block `emailMessage` argument.
	EmailVerificationMessage pulumi.StringPtrInput
	// A string representing the email verification subject. Conflicts with `verificationMessageTemplate` configuration block `emailSubject` argument.
	EmailVerificationSubject pulumi.StringPtrInput
	// The endpoint name of the user pool. Example format: cognito-idp.REGION.amazonaws.com/xxxx_yyyyy
	Endpoint pulumi.StringPtrInput
	// A container for the AWS Lambda triggers associated with the user pool.
	LambdaConfig cognitoUserPoolLambdaConfig.UserPoolLambdaConfigPtrInput
	// The date the user pool was last modified.
	LastModifiedDate pulumi.StringPtrInput
	// Set to enable multi-factor authentication. Must be one of the following values (ON, OFF, OPTIONAL)
	MfaConfiguration pulumi.StringPtrInput
	// The name of the attribute.
	Name pulumi.StringPtrInput
	// A container for information about the user pool password policy.
	PasswordPolicy cognitoUserPoolPasswordPolicy.UserPoolPasswordPolicyPtrInput
	// A container with the schema attributes of a user pool. Schema attributes from the [standard attribute set](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html#cognito-user-pools-standard-attributes) only need to be specified if they are different from the default configuration. Maximum of 50 attributes.
	Schemas cognitoUserPoolSchema.UserPoolSchemaArrayInput
	// A string representing the SMS authentication message.
	SmsAuthenticationMessage pulumi.StringPtrInput
	// The SMS Configuration.
	SmsConfiguration cognitoUserPoolSmsConfiguration.UserPoolSmsConfigurationPtrInput
	// A string representing the SMS verification message. Conflicts with `verificationMessageTemplate` configuration block `smsMessage` argument.
	SmsVerificationMessage pulumi.StringPtrInput
	// A mapping of tags to assign to the User Pool.
	Tags pulumi.MapInput
	// Configuration block for user pool add-ons to enable user pool advanced security mode features.
	UserPoolAddOns cognitoUserPoolUserPoolAddOns.UserPoolUserPoolAddOnsPtrInput
	// Specifies whether email addresses or phone numbers can be specified as usernames when a user signs up. Conflicts with `aliasAttributes`.
	UsernameAttributes pulumi.StringArrayInput
	// The verification message templates configuration.
	VerificationMessageTemplate cognitoUserPoolVerificationMessageTemplate.UserPoolVerificationMessageTemplatePtrInput
}

func (UserPoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*userPoolState)(nil)).Elem()
}

type userPoolArgs struct {
	// The configuration for AdminCreateUser requests.
	AdminCreateUserConfig *cognitoUserPoolAdminCreateUserConfig.UserPoolAdminCreateUserConfig `pulumi:"adminCreateUserConfig"`
	// Attributes supported as an alias for this user pool. Possible values: phone_number, email, or preferred_username. Conflicts with `usernameAttributes`.
	AliasAttributes []string `pulumi:"aliasAttributes"`
	// The attributes to be auto-verified. Possible values: email, phone_number.
	AutoVerifiedAttributes []string `pulumi:"autoVerifiedAttributes"`
	// The configuration for the user pool's device tracking.
	DeviceConfiguration *cognitoUserPoolDeviceConfiguration.UserPoolDeviceConfiguration `pulumi:"deviceConfiguration"`
	// The Email Configuration.
	EmailConfiguration *cognitoUserPoolEmailConfiguration.UserPoolEmailConfiguration `pulumi:"emailConfiguration"`
	// A string representing the email verification message. Conflicts with `verificationMessageTemplate` configuration block `emailMessage` argument.
	EmailVerificationMessage *string `pulumi:"emailVerificationMessage"`
	// A string representing the email verification subject. Conflicts with `verificationMessageTemplate` configuration block `emailSubject` argument.
	EmailVerificationSubject *string `pulumi:"emailVerificationSubject"`
	// A container for the AWS Lambda triggers associated with the user pool.
	LambdaConfig *cognitoUserPoolLambdaConfig.UserPoolLambdaConfig `pulumi:"lambdaConfig"`
	// Set to enable multi-factor authentication. Must be one of the following values (ON, OFF, OPTIONAL)
	MfaConfiguration *string `pulumi:"mfaConfiguration"`
	// The name of the attribute.
	Name *string `pulumi:"name"`
	// A container for information about the user pool password policy.
	PasswordPolicy *cognitoUserPoolPasswordPolicy.UserPoolPasswordPolicy `pulumi:"passwordPolicy"`
	// A container with the schema attributes of a user pool. Schema attributes from the [standard attribute set](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html#cognito-user-pools-standard-attributes) only need to be specified if they are different from the default configuration. Maximum of 50 attributes.
	Schemas []cognitoUserPoolSchema.UserPoolSchema `pulumi:"schemas"`
	// A string representing the SMS authentication message.
	SmsAuthenticationMessage *string `pulumi:"smsAuthenticationMessage"`
	// The SMS Configuration.
	SmsConfiguration *cognitoUserPoolSmsConfiguration.UserPoolSmsConfiguration `pulumi:"smsConfiguration"`
	// A string representing the SMS verification message. Conflicts with `verificationMessageTemplate` configuration block `smsMessage` argument.
	SmsVerificationMessage *string `pulumi:"smsVerificationMessage"`
	// A mapping of tags to assign to the User Pool.
	Tags map[string]interface{} `pulumi:"tags"`
	// Configuration block for user pool add-ons to enable user pool advanced security mode features.
	UserPoolAddOns *cognitoUserPoolUserPoolAddOns.UserPoolUserPoolAddOns `pulumi:"userPoolAddOns"`
	// Specifies whether email addresses or phone numbers can be specified as usernames when a user signs up. Conflicts with `aliasAttributes`.
	UsernameAttributes []string `pulumi:"usernameAttributes"`
	// The verification message templates configuration.
	VerificationMessageTemplate *cognitoUserPoolVerificationMessageTemplate.UserPoolVerificationMessageTemplate `pulumi:"verificationMessageTemplate"`
}

// The set of arguments for constructing a UserPool resource.
type UserPoolArgs struct {
	// The configuration for AdminCreateUser requests.
	AdminCreateUserConfig cognitoUserPoolAdminCreateUserConfig.UserPoolAdminCreateUserConfigPtrInput
	// Attributes supported as an alias for this user pool. Possible values: phone_number, email, or preferred_username. Conflicts with `usernameAttributes`.
	AliasAttributes pulumi.StringArrayInput
	// The attributes to be auto-verified. Possible values: email, phone_number.
	AutoVerifiedAttributes pulumi.StringArrayInput
	// The configuration for the user pool's device tracking.
	DeviceConfiguration cognitoUserPoolDeviceConfiguration.UserPoolDeviceConfigurationPtrInput
	// The Email Configuration.
	EmailConfiguration cognitoUserPoolEmailConfiguration.UserPoolEmailConfigurationPtrInput
	// A string representing the email verification message. Conflicts with `verificationMessageTemplate` configuration block `emailMessage` argument.
	EmailVerificationMessage pulumi.StringPtrInput
	// A string representing the email verification subject. Conflicts with `verificationMessageTemplate` configuration block `emailSubject` argument.
	EmailVerificationSubject pulumi.StringPtrInput
	// A container for the AWS Lambda triggers associated with the user pool.
	LambdaConfig cognitoUserPoolLambdaConfig.UserPoolLambdaConfigPtrInput
	// Set to enable multi-factor authentication. Must be one of the following values (ON, OFF, OPTIONAL)
	MfaConfiguration pulumi.StringPtrInput
	// The name of the attribute.
	Name pulumi.StringPtrInput
	// A container for information about the user pool password policy.
	PasswordPolicy cognitoUserPoolPasswordPolicy.UserPoolPasswordPolicyPtrInput
	// A container with the schema attributes of a user pool. Schema attributes from the [standard attribute set](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html#cognito-user-pools-standard-attributes) only need to be specified if they are different from the default configuration. Maximum of 50 attributes.
	Schemas cognitoUserPoolSchema.UserPoolSchemaArrayInput
	// A string representing the SMS authentication message.
	SmsAuthenticationMessage pulumi.StringPtrInput
	// The SMS Configuration.
	SmsConfiguration cognitoUserPoolSmsConfiguration.UserPoolSmsConfigurationPtrInput
	// A string representing the SMS verification message. Conflicts with `verificationMessageTemplate` configuration block `smsMessage` argument.
	SmsVerificationMessage pulumi.StringPtrInput
	// A mapping of tags to assign to the User Pool.
	Tags pulumi.MapInput
	// Configuration block for user pool add-ons to enable user pool advanced security mode features.
	UserPoolAddOns cognitoUserPoolUserPoolAddOns.UserPoolUserPoolAddOnsPtrInput
	// Specifies whether email addresses or phone numbers can be specified as usernames when a user signs up. Conflicts with `aliasAttributes`.
	UsernameAttributes pulumi.StringArrayInput
	// The verification message templates configuration.
	VerificationMessageTemplate cognitoUserPoolVerificationMessageTemplate.UserPoolVerificationMessageTemplatePtrInput
}

func (UserPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userPoolArgs)(nil)).Elem()
}

