// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cognito

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type IdentityProvider struct {
	pulumi.CustomResourceState

	AttributeMapping pulumi.StringMapOutput   `pulumi:"attributeMapping"`
	IdpIdentifiers   pulumi.StringArrayOutput `pulumi:"idpIdentifiers"`
	ProviderDetails  pulumi.StringMapOutput   `pulumi:"providerDetails"`
	ProviderName     pulumi.StringOutput      `pulumi:"providerName"`
	ProviderType     pulumi.StringOutput      `pulumi:"providerType"`
	UserPoolId       pulumi.StringOutput      `pulumi:"userPoolId"`
}

// NewIdentityProvider registers a new resource with the given unique name, arguments, and options.
func NewIdentityProvider(ctx *pulumi.Context,
	name string, args *IdentityProviderArgs, opts ...pulumi.ResourceOption) (*IdentityProvider, error) {
	if args == nil || args.ProviderDetails == nil {
		return nil, errors.New("missing required argument 'ProviderDetails'")
	}
	if args == nil || args.ProviderName == nil {
		return nil, errors.New("missing required argument 'ProviderName'")
	}
	if args == nil || args.ProviderType == nil {
		return nil, errors.New("missing required argument 'ProviderType'")
	}
	if args == nil || args.UserPoolId == nil {
		return nil, errors.New("missing required argument 'UserPoolId'")
	}
	if args == nil {
		args = &IdentityProviderArgs{}
	}
	var resource IdentityProvider
	err := ctx.RegisterResource("aws:cognito/identityProvider:IdentityProvider", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityProvider gets an existing IdentityProvider resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityProvider(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityProviderState, opts ...pulumi.ResourceOption) (*IdentityProvider, error) {
	var resource IdentityProvider
	err := ctx.ReadResource("aws:cognito/identityProvider:IdentityProvider", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityProvider resources.
type identityProviderState struct {
	AttributeMapping map[string]string `pulumi:"attributeMapping"`
	IdpIdentifiers   []string          `pulumi:"idpIdentifiers"`
	ProviderDetails  map[string]string `pulumi:"providerDetails"`
	ProviderName     *string           `pulumi:"providerName"`
	ProviderType     *string           `pulumi:"providerType"`
	UserPoolId       *string           `pulumi:"userPoolId"`
}

type IdentityProviderState struct {
	AttributeMapping pulumi.StringMapInput
	IdpIdentifiers   pulumi.StringArrayInput
	ProviderDetails  pulumi.StringMapInput
	ProviderName     pulumi.StringPtrInput
	ProviderType     pulumi.StringPtrInput
	UserPoolId       pulumi.StringPtrInput
}

func (IdentityProviderState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityProviderState)(nil)).Elem()
}

type identityProviderArgs struct {
	AttributeMapping map[string]string `pulumi:"attributeMapping"`
	IdpIdentifiers   []string          `pulumi:"idpIdentifiers"`
	ProviderDetails  map[string]string `pulumi:"providerDetails"`
	ProviderName     string            `pulumi:"providerName"`
	ProviderType     string            `pulumi:"providerType"`
	UserPoolId       string            `pulumi:"userPoolId"`
}

// The set of arguments for constructing a IdentityProvider resource.
type IdentityProviderArgs struct {
	AttributeMapping pulumi.StringMapInput
	IdpIdentifiers   pulumi.StringArrayInput
	ProviderDetails  pulumi.StringMapInput
	ProviderName     pulumi.StringInput
	ProviderType     pulumi.StringInput
	UserPoolId       pulumi.StringInput
}

func (IdentityProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityProviderArgs)(nil)).Elem()
}
