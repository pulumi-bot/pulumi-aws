// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package IdentityPoolRoleAttachmentRoleMapping

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-aws/cognito/IdentityPoolRoleAttachmentRoleMappingMappingRule"
)

type IdentityPoolRoleAttachmentRoleMapping struct {
	// Specifies the action to be taken if either no rules match the claim value for the Rules type, or there is no cognito:preferred_role claim and there are multiple cognito:roles matches for the Token type. `Required` if you specify Token or Rules as the Type.
	AmbiguousRoleResolution *string `pulumi:"ambiguousRoleResolution"`
	// A string identifying the identity provider, for example, "graph.facebook.com" or "cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id".
	IdentityProvider string `pulumi:"identityProvider"`
	// The Rules Configuration to be used for mapping users to roles. You can specify up to 25 rules per identity provider. Rules are evaluated in order. The first one to match specifies the role.
	MappingRules []cognitoIdentityPoolRoleAttachmentRoleMappingMappingRule.IdentityPoolRoleAttachmentRoleMappingMappingRule `pulumi:"mappingRules"`
	// The role mapping type.
	Type string `pulumi:"type"`
}

type IdentityPoolRoleAttachmentRoleMappingInput interface {
	pulumi.Input

	ToIdentityPoolRoleAttachmentRoleMappingOutput() IdentityPoolRoleAttachmentRoleMappingOutput
	ToIdentityPoolRoleAttachmentRoleMappingOutputWithContext(context.Context) IdentityPoolRoleAttachmentRoleMappingOutput
}

type IdentityPoolRoleAttachmentRoleMappingArgs struct {
	// Specifies the action to be taken if either no rules match the claim value for the Rules type, or there is no cognito:preferred_role claim and there are multiple cognito:roles matches for the Token type. `Required` if you specify Token or Rules as the Type.
	AmbiguousRoleResolution pulumi.StringPtrInput `pulumi:"ambiguousRoleResolution"`
	// A string identifying the identity provider, for example, "graph.facebook.com" or "cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id".
	IdentityProvider pulumi.StringInput `pulumi:"identityProvider"`
	// The Rules Configuration to be used for mapping users to roles. You can specify up to 25 rules per identity provider. Rules are evaluated in order. The first one to match specifies the role.
	MappingRules cognitoIdentityPoolRoleAttachmentRoleMappingMappingRule.IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayInput `pulumi:"mappingRules"`
	// The role mapping type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (IdentityPoolRoleAttachmentRoleMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolRoleAttachmentRoleMapping)(nil)).Elem()
}

func (i IdentityPoolRoleAttachmentRoleMappingArgs) ToIdentityPoolRoleAttachmentRoleMappingOutput() IdentityPoolRoleAttachmentRoleMappingOutput {
	return i.ToIdentityPoolRoleAttachmentRoleMappingOutputWithContext(context.Background())
}

func (i IdentityPoolRoleAttachmentRoleMappingArgs) ToIdentityPoolRoleAttachmentRoleMappingOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRoleMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolRoleAttachmentRoleMappingOutput)
}

type IdentityPoolRoleAttachmentRoleMappingArrayInput interface {
	pulumi.Input

	ToIdentityPoolRoleAttachmentRoleMappingArrayOutput() IdentityPoolRoleAttachmentRoleMappingArrayOutput
	ToIdentityPoolRoleAttachmentRoleMappingArrayOutputWithContext(context.Context) IdentityPoolRoleAttachmentRoleMappingArrayOutput
}

type IdentityPoolRoleAttachmentRoleMappingArray []IdentityPoolRoleAttachmentRoleMappingInput

func (IdentityPoolRoleAttachmentRoleMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityPoolRoleAttachmentRoleMapping)(nil)).Elem()
}

func (i IdentityPoolRoleAttachmentRoleMappingArray) ToIdentityPoolRoleAttachmentRoleMappingArrayOutput() IdentityPoolRoleAttachmentRoleMappingArrayOutput {
	return i.ToIdentityPoolRoleAttachmentRoleMappingArrayOutputWithContext(context.Background())
}

func (i IdentityPoolRoleAttachmentRoleMappingArray) ToIdentityPoolRoleAttachmentRoleMappingArrayOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRoleMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolRoleAttachmentRoleMappingArrayOutput)
}

type IdentityPoolRoleAttachmentRoleMappingOutput struct { *pulumi.OutputState }

func (IdentityPoolRoleAttachmentRoleMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolRoleAttachmentRoleMapping)(nil)).Elem()
}

func (o IdentityPoolRoleAttachmentRoleMappingOutput) ToIdentityPoolRoleAttachmentRoleMappingOutput() IdentityPoolRoleAttachmentRoleMappingOutput {
	return o
}

func (o IdentityPoolRoleAttachmentRoleMappingOutput) ToIdentityPoolRoleAttachmentRoleMappingOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRoleMappingOutput {
	return o
}

// Specifies the action to be taken if either no rules match the claim value for the Rules type, or there is no cognito:preferred_role claim and there are multiple cognito:roles matches for the Token type. `Required` if you specify Token or Rules as the Type.
func (o IdentityPoolRoleAttachmentRoleMappingOutput) AmbiguousRoleResolution() pulumi.StringPtrOutput {
	return o.ApplyT(func (v IdentityPoolRoleAttachmentRoleMapping) *string { return v.AmbiguousRoleResolution }).(pulumi.StringPtrOutput)
}

// A string identifying the identity provider, for example, "graph.facebook.com" or "cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id".
func (o IdentityPoolRoleAttachmentRoleMappingOutput) IdentityProvider() pulumi.StringOutput {
	return o.ApplyT(func (v IdentityPoolRoleAttachmentRoleMapping) string { return v.IdentityProvider }).(pulumi.StringOutput)
}

// The Rules Configuration to be used for mapping users to roles. You can specify up to 25 rules per identity provider. Rules are evaluated in order. The first one to match specifies the role.
func (o IdentityPoolRoleAttachmentRoleMappingOutput) MappingRules() cognitoIdentityPoolRoleAttachmentRoleMappingMappingRule.IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput {
	return o.ApplyT(func (v IdentityPoolRoleAttachmentRoleMapping) []cognitoIdentityPoolRoleAttachmentRoleMappingMappingRule.IdentityPoolRoleAttachmentRoleMappingMappingRule { return v.MappingRules }).(cognitoIdentityPoolRoleAttachmentRoleMappingMappingRule.IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput)
}

// The role mapping type.
func (o IdentityPoolRoleAttachmentRoleMappingOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func (v IdentityPoolRoleAttachmentRoleMapping) string { return v.Type }).(pulumi.StringOutput)
}

type IdentityPoolRoleAttachmentRoleMappingArrayOutput struct { *pulumi.OutputState}

func (IdentityPoolRoleAttachmentRoleMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityPoolRoleAttachmentRoleMapping)(nil)).Elem()
}

func (o IdentityPoolRoleAttachmentRoleMappingArrayOutput) ToIdentityPoolRoleAttachmentRoleMappingArrayOutput() IdentityPoolRoleAttachmentRoleMappingArrayOutput {
	return o
}

func (o IdentityPoolRoleAttachmentRoleMappingArrayOutput) ToIdentityPoolRoleAttachmentRoleMappingArrayOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRoleMappingArrayOutput {
	return o
}

func (o IdentityPoolRoleAttachmentRoleMappingArrayOutput) Index(i pulumi.IntInput) IdentityPoolRoleAttachmentRoleMappingOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) IdentityPoolRoleAttachmentRoleMapping {
		return vs[0].([]IdentityPoolRoleAttachmentRoleMapping)[vs[1].(int)]
	}).(IdentityPoolRoleAttachmentRoleMappingOutput)
}

func init() {
	pulumi.RegisterOutputType(IdentityPoolRoleAttachmentRoleMappingOutput{})
	pulumi.RegisterOutputType(IdentityPoolRoleAttachmentRoleMappingArrayOutput{})
}
