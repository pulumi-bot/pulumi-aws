// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package UserPoolDeviceConfiguration

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type UserPoolDeviceConfiguration struct {
	// Indicates whether a challenge is required on a new device. Only applicable to a new device.
	ChallengeRequiredOnNewDevice *bool `pulumi:"challengeRequiredOnNewDevice"`
	// If true, a device is only remembered on user prompt.
	DeviceOnlyRememberedOnUserPrompt *bool `pulumi:"deviceOnlyRememberedOnUserPrompt"`
}

type UserPoolDeviceConfigurationInput interface {
	pulumi.Input

	ToUserPoolDeviceConfigurationOutput() UserPoolDeviceConfigurationOutput
	ToUserPoolDeviceConfigurationOutputWithContext(context.Context) UserPoolDeviceConfigurationOutput
}

type UserPoolDeviceConfigurationArgs struct {
	// Indicates whether a challenge is required on a new device. Only applicable to a new device.
	ChallengeRequiredOnNewDevice pulumi.BoolPtrInput `pulumi:"challengeRequiredOnNewDevice"`
	// If true, a device is only remembered on user prompt.
	DeviceOnlyRememberedOnUserPrompt pulumi.BoolPtrInput `pulumi:"deviceOnlyRememberedOnUserPrompt"`
}

func (UserPoolDeviceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolDeviceConfiguration)(nil)).Elem()
}

func (i UserPoolDeviceConfigurationArgs) ToUserPoolDeviceConfigurationOutput() UserPoolDeviceConfigurationOutput {
	return i.ToUserPoolDeviceConfigurationOutputWithContext(context.Background())
}

func (i UserPoolDeviceConfigurationArgs) ToUserPoolDeviceConfigurationOutputWithContext(ctx context.Context) UserPoolDeviceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolDeviceConfigurationOutput)
}

func (i UserPoolDeviceConfigurationArgs) ToUserPoolDeviceConfigurationPtrOutput() UserPoolDeviceConfigurationPtrOutput {
	return i.ToUserPoolDeviceConfigurationPtrOutputWithContext(context.Background())
}

func (i UserPoolDeviceConfigurationArgs) ToUserPoolDeviceConfigurationPtrOutputWithContext(ctx context.Context) UserPoolDeviceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolDeviceConfigurationOutput).ToUserPoolDeviceConfigurationPtrOutputWithContext(ctx)
}

type UserPoolDeviceConfigurationPtrInput interface {
	pulumi.Input

	ToUserPoolDeviceConfigurationPtrOutput() UserPoolDeviceConfigurationPtrOutput
	ToUserPoolDeviceConfigurationPtrOutputWithContext(context.Context) UserPoolDeviceConfigurationPtrOutput
}

type userPoolDeviceConfigurationPtrType UserPoolDeviceConfigurationArgs

func UserPoolDeviceConfigurationPtr(v *UserPoolDeviceConfigurationArgs) UserPoolDeviceConfigurationPtrInput {	return (*userPoolDeviceConfigurationPtrType)(v)
}

func (*userPoolDeviceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolDeviceConfiguration)(nil)).Elem()
}

func (i *userPoolDeviceConfigurationPtrType) ToUserPoolDeviceConfigurationPtrOutput() UserPoolDeviceConfigurationPtrOutput {
	return i.ToUserPoolDeviceConfigurationPtrOutputWithContext(context.Background())
}

func (i *userPoolDeviceConfigurationPtrType) ToUserPoolDeviceConfigurationPtrOutputWithContext(ctx context.Context) UserPoolDeviceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolDeviceConfigurationPtrOutput)
}

type UserPoolDeviceConfigurationOutput struct { *pulumi.OutputState }

func (UserPoolDeviceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolDeviceConfiguration)(nil)).Elem()
}

func (o UserPoolDeviceConfigurationOutput) ToUserPoolDeviceConfigurationOutput() UserPoolDeviceConfigurationOutput {
	return o
}

func (o UserPoolDeviceConfigurationOutput) ToUserPoolDeviceConfigurationOutputWithContext(ctx context.Context) UserPoolDeviceConfigurationOutput {
	return o
}

func (o UserPoolDeviceConfigurationOutput) ToUserPoolDeviceConfigurationPtrOutput() UserPoolDeviceConfigurationPtrOutput {
	return o.ToUserPoolDeviceConfigurationPtrOutputWithContext(context.Background())
}

func (o UserPoolDeviceConfigurationOutput) ToUserPoolDeviceConfigurationPtrOutputWithContext(ctx context.Context) UserPoolDeviceConfigurationPtrOutput {
	return o.ApplyT(func(v UserPoolDeviceConfiguration) *UserPoolDeviceConfiguration {
		return &v
	}).(UserPoolDeviceConfigurationPtrOutput)
}
// Indicates whether a challenge is required on a new device. Only applicable to a new device.
func (o UserPoolDeviceConfigurationOutput) ChallengeRequiredOnNewDevice() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v UserPoolDeviceConfiguration) *bool { return v.ChallengeRequiredOnNewDevice }).(pulumi.BoolPtrOutput)
}

// If true, a device is only remembered on user prompt.
func (o UserPoolDeviceConfigurationOutput) DeviceOnlyRememberedOnUserPrompt() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v UserPoolDeviceConfiguration) *bool { return v.DeviceOnlyRememberedOnUserPrompt }).(pulumi.BoolPtrOutput)
}

type UserPoolDeviceConfigurationPtrOutput struct { *pulumi.OutputState}

func (UserPoolDeviceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolDeviceConfiguration)(nil)).Elem()
}

func (o UserPoolDeviceConfigurationPtrOutput) ToUserPoolDeviceConfigurationPtrOutput() UserPoolDeviceConfigurationPtrOutput {
	return o
}

func (o UserPoolDeviceConfigurationPtrOutput) ToUserPoolDeviceConfigurationPtrOutputWithContext(ctx context.Context) UserPoolDeviceConfigurationPtrOutput {
	return o
}

func (o UserPoolDeviceConfigurationPtrOutput) Elem() UserPoolDeviceConfigurationOutput {
	return o.ApplyT(func (v *UserPoolDeviceConfiguration) UserPoolDeviceConfiguration { return *v }).(UserPoolDeviceConfigurationOutput)
}

// Indicates whether a challenge is required on a new device. Only applicable to a new device.
func (o UserPoolDeviceConfigurationPtrOutput) ChallengeRequiredOnNewDevice() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v UserPoolDeviceConfiguration) *bool { return v.ChallengeRequiredOnNewDevice }).(pulumi.BoolPtrOutput)
}

// If true, a device is only remembered on user prompt.
func (o UserPoolDeviceConfigurationPtrOutput) DeviceOnlyRememberedOnUserPrompt() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v UserPoolDeviceConfiguration) *bool { return v.DeviceOnlyRememberedOnUserPrompt }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(UserPoolDeviceConfigurationOutput{})
	pulumi.RegisterOutputType(UserPoolDeviceConfigurationPtrOutput{})
}
