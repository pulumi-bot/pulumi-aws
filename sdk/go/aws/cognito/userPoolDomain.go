// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cognito

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type UserPoolDomain struct {
	pulumi.CustomResourceState

	AwsAccountId              pulumi.StringOutput    `pulumi:"awsAccountId"`
	CertificateArn            pulumi.StringPtrOutput `pulumi:"certificateArn"`
	CloudfrontDistributionArn pulumi.StringOutput    `pulumi:"cloudfrontDistributionArn"`
	Domain                    pulumi.StringOutput    `pulumi:"domain"`
	S3Bucket                  pulumi.StringOutput    `pulumi:"s3Bucket"`
	UserPoolId                pulumi.StringOutput    `pulumi:"userPoolId"`
	Version                   pulumi.StringOutput    `pulumi:"version"`
}

// NewUserPoolDomain registers a new resource with the given unique name, arguments, and options.
func NewUserPoolDomain(ctx *pulumi.Context,
	name string, args *UserPoolDomainArgs, opts ...pulumi.ResourceOption) (*UserPoolDomain, error) {
	if args == nil || args.Domain == nil {
		return nil, errors.New("missing required argument 'Domain'")
	}
	if args == nil || args.UserPoolId == nil {
		return nil, errors.New("missing required argument 'UserPoolId'")
	}
	if args == nil {
		args = &UserPoolDomainArgs{}
	}
	var resource UserPoolDomain
	err := ctx.RegisterResource("aws:cognito/userPoolDomain:UserPoolDomain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserPoolDomain gets an existing UserPoolDomain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserPoolDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserPoolDomainState, opts ...pulumi.ResourceOption) (*UserPoolDomain, error) {
	var resource UserPoolDomain
	err := ctx.ReadResource("aws:cognito/userPoolDomain:UserPoolDomain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserPoolDomain resources.
type userPoolDomainState struct {
	AwsAccountId              *string `pulumi:"awsAccountId"`
	CertificateArn            *string `pulumi:"certificateArn"`
	CloudfrontDistributionArn *string `pulumi:"cloudfrontDistributionArn"`
	Domain                    *string `pulumi:"domain"`
	S3Bucket                  *string `pulumi:"s3Bucket"`
	UserPoolId                *string `pulumi:"userPoolId"`
	Version                   *string `pulumi:"version"`
}

type UserPoolDomainState struct {
	AwsAccountId              pulumi.StringPtrInput
	CertificateArn            pulumi.StringPtrInput
	CloudfrontDistributionArn pulumi.StringPtrInput
	Domain                    pulumi.StringPtrInput
	S3Bucket                  pulumi.StringPtrInput
	UserPoolId                pulumi.StringPtrInput
	Version                   pulumi.StringPtrInput
}

func (UserPoolDomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*userPoolDomainState)(nil)).Elem()
}

type userPoolDomainArgs struct {
	CertificateArn *string `pulumi:"certificateArn"`
	Domain         string  `pulumi:"domain"`
	UserPoolId     string  `pulumi:"userPoolId"`
}

// The set of arguments for constructing a UserPoolDomain resource.
type UserPoolDomainArgs struct {
	CertificateArn pulumi.StringPtrInput
	Domain         pulumi.StringInput
	UserPoolId     pulumi.StringInput
}

func (UserPoolDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userPoolDomainArgs)(nil)).Elem()
}
