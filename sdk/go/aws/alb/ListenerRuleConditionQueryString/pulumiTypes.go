// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ListenerRuleConditionQueryString

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ListenerRuleConditionQueryString struct {
	// Query string key pattern to match.
	Key *string `pulumi:"key"`
	// Query string value pattern to match.
	Value string `pulumi:"value"`
}

type ListenerRuleConditionQueryStringInput interface {
	pulumi.Input

	ToListenerRuleConditionQueryStringOutput() ListenerRuleConditionQueryStringOutput
	ToListenerRuleConditionQueryStringOutputWithContext(context.Context) ListenerRuleConditionQueryStringOutput
}

type ListenerRuleConditionQueryStringArgs struct {
	// Query string key pattern to match.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Query string value pattern to match.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ListenerRuleConditionQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleConditionQueryString)(nil)).Elem()
}

func (i ListenerRuleConditionQueryStringArgs) ToListenerRuleConditionQueryStringOutput() ListenerRuleConditionQueryStringOutput {
	return i.ToListenerRuleConditionQueryStringOutputWithContext(context.Background())
}

func (i ListenerRuleConditionQueryStringArgs) ToListenerRuleConditionQueryStringOutputWithContext(ctx context.Context) ListenerRuleConditionQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionQueryStringOutput)
}

type ListenerRuleConditionQueryStringArrayInput interface {
	pulumi.Input

	ToListenerRuleConditionQueryStringArrayOutput() ListenerRuleConditionQueryStringArrayOutput
	ToListenerRuleConditionQueryStringArrayOutputWithContext(context.Context) ListenerRuleConditionQueryStringArrayOutput
}

type ListenerRuleConditionQueryStringArray []ListenerRuleConditionQueryStringInput

func (ListenerRuleConditionQueryStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerRuleConditionQueryString)(nil)).Elem()
}

func (i ListenerRuleConditionQueryStringArray) ToListenerRuleConditionQueryStringArrayOutput() ListenerRuleConditionQueryStringArrayOutput {
	return i.ToListenerRuleConditionQueryStringArrayOutputWithContext(context.Background())
}

func (i ListenerRuleConditionQueryStringArray) ToListenerRuleConditionQueryStringArrayOutputWithContext(ctx context.Context) ListenerRuleConditionQueryStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionQueryStringArrayOutput)
}

type ListenerRuleConditionQueryStringOutput struct { *pulumi.OutputState }

func (ListenerRuleConditionQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleConditionQueryString)(nil)).Elem()
}

func (o ListenerRuleConditionQueryStringOutput) ToListenerRuleConditionQueryStringOutput() ListenerRuleConditionQueryStringOutput {
	return o
}

func (o ListenerRuleConditionQueryStringOutput) ToListenerRuleConditionQueryStringOutputWithContext(ctx context.Context) ListenerRuleConditionQueryStringOutput {
	return o
}

// Query string key pattern to match.
func (o ListenerRuleConditionQueryStringOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ListenerRuleConditionQueryString) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Query string value pattern to match.
func (o ListenerRuleConditionQueryStringOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func (v ListenerRuleConditionQueryString) string { return v.Value }).(pulumi.StringOutput)
}

type ListenerRuleConditionQueryStringArrayOutput struct { *pulumi.OutputState}

func (ListenerRuleConditionQueryStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerRuleConditionQueryString)(nil)).Elem()
}

func (o ListenerRuleConditionQueryStringArrayOutput) ToListenerRuleConditionQueryStringArrayOutput() ListenerRuleConditionQueryStringArrayOutput {
	return o
}

func (o ListenerRuleConditionQueryStringArrayOutput) ToListenerRuleConditionQueryStringArrayOutputWithContext(ctx context.Context) ListenerRuleConditionQueryStringArrayOutput {
	return o
}

func (o ListenerRuleConditionQueryStringArrayOutput) Index(i pulumi.IntInput) ListenerRuleConditionQueryStringOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ListenerRuleConditionQueryString {
		return vs[0].([]ListenerRuleConditionQueryString)[vs[1].(int)]
	}).(ListenerRuleConditionQueryStringOutput)
}

func init() {
	pulumi.RegisterOutputType(ListenerRuleConditionQueryStringOutput{})
	pulumi.RegisterOutputType(ListenerRuleConditionQueryStringArrayOutput{})
}
