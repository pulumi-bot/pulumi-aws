// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package dms

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Endpoint struct {
	pulumi.CustomResourceState

	CertificateArn            pulumi.StringOutput                    `pulumi:"certificateArn"`
	DatabaseName              pulumi.StringPtrOutput                 `pulumi:"databaseName"`
	ElasticsearchSettings     EndpointElasticsearchSettingsPtrOutput `pulumi:"elasticsearchSettings"`
	EndpointArn               pulumi.StringOutput                    `pulumi:"endpointArn"`
	EndpointId                pulumi.StringOutput                    `pulumi:"endpointId"`
	EndpointType              pulumi.StringOutput                    `pulumi:"endpointType"`
	EngineName                pulumi.StringOutput                    `pulumi:"engineName"`
	ExtraConnectionAttributes pulumi.StringOutput                    `pulumi:"extraConnectionAttributes"`
	KafkaSettings             EndpointKafkaSettingsPtrOutput         `pulumi:"kafkaSettings"`
	KinesisSettings           EndpointKinesisSettingsPtrOutput       `pulumi:"kinesisSettings"`
	KmsKeyArn                 pulumi.StringOutput                    `pulumi:"kmsKeyArn"`
	MongodbSettings           EndpointMongodbSettingsPtrOutput       `pulumi:"mongodbSettings"`
	Password                  pulumi.StringPtrOutput                 `pulumi:"password"`
	Port                      pulumi.IntPtrOutput                    `pulumi:"port"`
	S3Settings                EndpointS3SettingsPtrOutput            `pulumi:"s3Settings"`
	ServerName                pulumi.StringPtrOutput                 `pulumi:"serverName"`
	ServiceAccessRole         pulumi.StringPtrOutput                 `pulumi:"serviceAccessRole"`
	SslMode                   pulumi.StringOutput                    `pulumi:"sslMode"`
	Tags                      pulumi.StringMapOutput                 `pulumi:"tags"`
	Username                  pulumi.StringPtrOutput                 `pulumi:"username"`
}

// NewEndpoint registers a new resource with the given unique name, arguments, and options.
func NewEndpoint(ctx *pulumi.Context,
	name string, args *EndpointArgs, opts ...pulumi.ResourceOption) (*Endpoint, error) {
	if args == nil || args.EndpointId == nil {
		return nil, errors.New("missing required argument 'EndpointId'")
	}
	if args == nil || args.EndpointType == nil {
		return nil, errors.New("missing required argument 'EndpointType'")
	}
	if args == nil || args.EngineName == nil {
		return nil, errors.New("missing required argument 'EngineName'")
	}
	if args == nil {
		args = &EndpointArgs{}
	}
	var resource Endpoint
	err := ctx.RegisterResource("aws:dms/endpoint:Endpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEndpoint gets an existing Endpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EndpointState, opts ...pulumi.ResourceOption) (*Endpoint, error) {
	var resource Endpoint
	err := ctx.ReadResource("aws:dms/endpoint:Endpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Endpoint resources.
type endpointState struct {
	CertificateArn            *string                        `pulumi:"certificateArn"`
	DatabaseName              *string                        `pulumi:"databaseName"`
	ElasticsearchSettings     *EndpointElasticsearchSettings `pulumi:"elasticsearchSettings"`
	EndpointArn               *string                        `pulumi:"endpointArn"`
	EndpointId                *string                        `pulumi:"endpointId"`
	EndpointType              *string                        `pulumi:"endpointType"`
	EngineName                *string                        `pulumi:"engineName"`
	ExtraConnectionAttributes *string                        `pulumi:"extraConnectionAttributes"`
	KafkaSettings             *EndpointKafkaSettings         `pulumi:"kafkaSettings"`
	KinesisSettings           *EndpointKinesisSettings       `pulumi:"kinesisSettings"`
	KmsKeyArn                 *string                        `pulumi:"kmsKeyArn"`
	MongodbSettings           *EndpointMongodbSettings       `pulumi:"mongodbSettings"`
	Password                  *string                        `pulumi:"password"`
	Port                      *int                           `pulumi:"port"`
	S3Settings                *EndpointS3Settings            `pulumi:"s3Settings"`
	ServerName                *string                        `pulumi:"serverName"`
	ServiceAccessRole         *string                        `pulumi:"serviceAccessRole"`
	SslMode                   *string                        `pulumi:"sslMode"`
	Tags                      map[string]string              `pulumi:"tags"`
	Username                  *string                        `pulumi:"username"`
}

type EndpointState struct {
	CertificateArn            pulumi.StringPtrInput
	DatabaseName              pulumi.StringPtrInput
	ElasticsearchSettings     EndpointElasticsearchSettingsPtrInput
	EndpointArn               pulumi.StringPtrInput
	EndpointId                pulumi.StringPtrInput
	EndpointType              pulumi.StringPtrInput
	EngineName                pulumi.StringPtrInput
	ExtraConnectionAttributes pulumi.StringPtrInput
	KafkaSettings             EndpointKafkaSettingsPtrInput
	KinesisSettings           EndpointKinesisSettingsPtrInput
	KmsKeyArn                 pulumi.StringPtrInput
	MongodbSettings           EndpointMongodbSettingsPtrInput
	Password                  pulumi.StringPtrInput
	Port                      pulumi.IntPtrInput
	S3Settings                EndpointS3SettingsPtrInput
	ServerName                pulumi.StringPtrInput
	ServiceAccessRole         pulumi.StringPtrInput
	SslMode                   pulumi.StringPtrInput
	Tags                      pulumi.StringMapInput
	Username                  pulumi.StringPtrInput
}

func (EndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointState)(nil)).Elem()
}

type endpointArgs struct {
	CertificateArn            *string                        `pulumi:"certificateArn"`
	DatabaseName              *string                        `pulumi:"databaseName"`
	ElasticsearchSettings     *EndpointElasticsearchSettings `pulumi:"elasticsearchSettings"`
	EndpointId                string                         `pulumi:"endpointId"`
	EndpointType              string                         `pulumi:"endpointType"`
	EngineName                string                         `pulumi:"engineName"`
	ExtraConnectionAttributes *string                        `pulumi:"extraConnectionAttributes"`
	KafkaSettings             *EndpointKafkaSettings         `pulumi:"kafkaSettings"`
	KinesisSettings           *EndpointKinesisSettings       `pulumi:"kinesisSettings"`
	KmsKeyArn                 *string                        `pulumi:"kmsKeyArn"`
	MongodbSettings           *EndpointMongodbSettings       `pulumi:"mongodbSettings"`
	Password                  *string                        `pulumi:"password"`
	Port                      *int                           `pulumi:"port"`
	S3Settings                *EndpointS3Settings            `pulumi:"s3Settings"`
	ServerName                *string                        `pulumi:"serverName"`
	ServiceAccessRole         *string                        `pulumi:"serviceAccessRole"`
	SslMode                   *string                        `pulumi:"sslMode"`
	Tags                      map[string]string              `pulumi:"tags"`
	Username                  *string                        `pulumi:"username"`
}

// The set of arguments for constructing a Endpoint resource.
type EndpointArgs struct {
	CertificateArn            pulumi.StringPtrInput
	DatabaseName              pulumi.StringPtrInput
	ElasticsearchSettings     EndpointElasticsearchSettingsPtrInput
	EndpointId                pulumi.StringInput
	EndpointType              pulumi.StringInput
	EngineName                pulumi.StringInput
	ExtraConnectionAttributes pulumi.StringPtrInput
	KafkaSettings             EndpointKafkaSettingsPtrInput
	KinesisSettings           EndpointKinesisSettingsPtrInput
	KmsKeyArn                 pulumi.StringPtrInput
	MongodbSettings           EndpointMongodbSettingsPtrInput
	Password                  pulumi.StringPtrInput
	Port                      pulumi.IntPtrInput
	S3Settings                EndpointS3SettingsPtrInput
	ServerName                pulumi.StringPtrInput
	ServiceAccessRole         pulumi.StringPtrInput
	SslMode                   pulumi.StringPtrInput
	Tags                      pulumi.StringMapInput
	Username                  pulumi.StringPtrInput
}

func (EndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointArgs)(nil)).Elem()
}
