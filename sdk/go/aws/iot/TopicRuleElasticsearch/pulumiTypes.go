// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package TopicRuleElasticsearch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type TopicRuleElasticsearch struct {
	// The endpoint of your Elasticsearch domain.
	Endpoint string `pulumi:"endpoint"`
	// The unique identifier for the document you are storing.
	Id string `pulumi:"id"`
	// The Elasticsearch index where you want to store your data.
	Index string `pulumi:"index"`
	// The ARN of the IAM role that grants access.
	RoleArn string `pulumi:"roleArn"`
	// The type of document you are storing.
	Type string `pulumi:"type"`
}

type TopicRuleElasticsearchInput interface {
	pulumi.Input

	ToTopicRuleElasticsearchOutput() TopicRuleElasticsearchOutput
	ToTopicRuleElasticsearchOutputWithContext(context.Context) TopicRuleElasticsearchOutput
}

type TopicRuleElasticsearchArgs struct {
	// The endpoint of your Elasticsearch domain.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// The unique identifier for the document you are storing.
	Id pulumi.StringInput `pulumi:"id"`
	// The Elasticsearch index where you want to store your data.
	Index pulumi.StringInput `pulumi:"index"`
	// The ARN of the IAM role that grants access.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The type of document you are storing.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TopicRuleElasticsearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleElasticsearch)(nil)).Elem()
}

func (i TopicRuleElasticsearchArgs) ToTopicRuleElasticsearchOutput() TopicRuleElasticsearchOutput {
	return i.ToTopicRuleElasticsearchOutputWithContext(context.Background())
}

func (i TopicRuleElasticsearchArgs) ToTopicRuleElasticsearchOutputWithContext(ctx context.Context) TopicRuleElasticsearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleElasticsearchOutput)
}

func (i TopicRuleElasticsearchArgs) ToTopicRuleElasticsearchPtrOutput() TopicRuleElasticsearchPtrOutput {
	return i.ToTopicRuleElasticsearchPtrOutputWithContext(context.Background())
}

func (i TopicRuleElasticsearchArgs) ToTopicRuleElasticsearchPtrOutputWithContext(ctx context.Context) TopicRuleElasticsearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleElasticsearchOutput).ToTopicRuleElasticsearchPtrOutputWithContext(ctx)
}

type TopicRuleElasticsearchPtrInput interface {
	pulumi.Input

	ToTopicRuleElasticsearchPtrOutput() TopicRuleElasticsearchPtrOutput
	ToTopicRuleElasticsearchPtrOutputWithContext(context.Context) TopicRuleElasticsearchPtrOutput
}

type topicRuleElasticsearchPtrType TopicRuleElasticsearchArgs

func TopicRuleElasticsearchPtr(v *TopicRuleElasticsearchArgs) TopicRuleElasticsearchPtrInput {	return (*topicRuleElasticsearchPtrType)(v)
}

func (*topicRuleElasticsearchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleElasticsearch)(nil)).Elem()
}

func (i *topicRuleElasticsearchPtrType) ToTopicRuleElasticsearchPtrOutput() TopicRuleElasticsearchPtrOutput {
	return i.ToTopicRuleElasticsearchPtrOutputWithContext(context.Background())
}

func (i *topicRuleElasticsearchPtrType) ToTopicRuleElasticsearchPtrOutputWithContext(ctx context.Context) TopicRuleElasticsearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleElasticsearchPtrOutput)
}

type TopicRuleElasticsearchOutput struct { *pulumi.OutputState }

func (TopicRuleElasticsearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleElasticsearch)(nil)).Elem()
}

func (o TopicRuleElasticsearchOutput) ToTopicRuleElasticsearchOutput() TopicRuleElasticsearchOutput {
	return o
}

func (o TopicRuleElasticsearchOutput) ToTopicRuleElasticsearchOutputWithContext(ctx context.Context) TopicRuleElasticsearchOutput {
	return o
}

func (o TopicRuleElasticsearchOutput) ToTopicRuleElasticsearchPtrOutput() TopicRuleElasticsearchPtrOutput {
	return o.ToTopicRuleElasticsearchPtrOutputWithContext(context.Background())
}

func (o TopicRuleElasticsearchOutput) ToTopicRuleElasticsearchPtrOutputWithContext(ctx context.Context) TopicRuleElasticsearchPtrOutput {
	return o.ApplyT(func(v TopicRuleElasticsearch) *TopicRuleElasticsearch {
		return &v
	}).(TopicRuleElasticsearchPtrOutput)
}
// The endpoint of your Elasticsearch domain.
func (o TopicRuleElasticsearchOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleElasticsearch) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The unique identifier for the document you are storing.
func (o TopicRuleElasticsearchOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleElasticsearch) string { return v.Id }).(pulumi.StringOutput)
}

// The Elasticsearch index where you want to store your data.
func (o TopicRuleElasticsearchOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleElasticsearch) string { return v.Index }).(pulumi.StringOutput)
}

// The ARN of the IAM role that grants access.
func (o TopicRuleElasticsearchOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleElasticsearch) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The type of document you are storing.
func (o TopicRuleElasticsearchOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleElasticsearch) string { return v.Type }).(pulumi.StringOutput)
}

type TopicRuleElasticsearchPtrOutput struct { *pulumi.OutputState}

func (TopicRuleElasticsearchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleElasticsearch)(nil)).Elem()
}

func (o TopicRuleElasticsearchPtrOutput) ToTopicRuleElasticsearchPtrOutput() TopicRuleElasticsearchPtrOutput {
	return o
}

func (o TopicRuleElasticsearchPtrOutput) ToTopicRuleElasticsearchPtrOutputWithContext(ctx context.Context) TopicRuleElasticsearchPtrOutput {
	return o
}

func (o TopicRuleElasticsearchPtrOutput) Elem() TopicRuleElasticsearchOutput {
	return o.ApplyT(func (v *TopicRuleElasticsearch) TopicRuleElasticsearch { return *v }).(TopicRuleElasticsearchOutput)
}

// The endpoint of your Elasticsearch domain.
func (o TopicRuleElasticsearchPtrOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleElasticsearch) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The unique identifier for the document you are storing.
func (o TopicRuleElasticsearchPtrOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleElasticsearch) string { return v.Id }).(pulumi.StringOutput)
}

// The Elasticsearch index where you want to store your data.
func (o TopicRuleElasticsearchPtrOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleElasticsearch) string { return v.Index }).(pulumi.StringOutput)
}

// The ARN of the IAM role that grants access.
func (o TopicRuleElasticsearchPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleElasticsearch) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The type of document you are storing.
func (o TopicRuleElasticsearchPtrOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleElasticsearch) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(TopicRuleElasticsearchOutput{})
	pulumi.RegisterOutputType(TopicRuleElasticsearchPtrOutput{})
}
