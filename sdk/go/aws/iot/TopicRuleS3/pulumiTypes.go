// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package TopicRuleS3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type TopicRuleS3 struct {
	// The Amazon S3 bucket name.
	BucketName string `pulumi:"bucketName"`
	// The object key.
	Key string `pulumi:"key"`
	// The ARN of the IAM role that grants access.
	RoleArn string `pulumi:"roleArn"`
}

type TopicRuleS3Input interface {
	pulumi.Input

	ToTopicRuleS3Output() TopicRuleS3Output
	ToTopicRuleS3OutputWithContext(context.Context) TopicRuleS3Output
}

type TopicRuleS3Args struct {
	// The Amazon S3 bucket name.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// The object key.
	Key pulumi.StringInput `pulumi:"key"`
	// The ARN of the IAM role that grants access.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (TopicRuleS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleS3)(nil)).Elem()
}

func (i TopicRuleS3Args) ToTopicRuleS3Output() TopicRuleS3Output {
	return i.ToTopicRuleS3OutputWithContext(context.Background())
}

func (i TopicRuleS3Args) ToTopicRuleS3OutputWithContext(ctx context.Context) TopicRuleS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleS3Output)
}

func (i TopicRuleS3Args) ToTopicRuleS3PtrOutput() TopicRuleS3PtrOutput {
	return i.ToTopicRuleS3PtrOutputWithContext(context.Background())
}

func (i TopicRuleS3Args) ToTopicRuleS3PtrOutputWithContext(ctx context.Context) TopicRuleS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleS3Output).ToTopicRuleS3PtrOutputWithContext(ctx)
}

type TopicRuleS3PtrInput interface {
	pulumi.Input

	ToTopicRuleS3PtrOutput() TopicRuleS3PtrOutput
	ToTopicRuleS3PtrOutputWithContext(context.Context) TopicRuleS3PtrOutput
}

type topicRuleS3PtrType TopicRuleS3Args

func TopicRuleS3Ptr(v *TopicRuleS3Args) TopicRuleS3PtrInput {	return (*topicRuleS3PtrType)(v)
}

func (*topicRuleS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleS3)(nil)).Elem()
}

func (i *topicRuleS3PtrType) ToTopicRuleS3PtrOutput() TopicRuleS3PtrOutput {
	return i.ToTopicRuleS3PtrOutputWithContext(context.Background())
}

func (i *topicRuleS3PtrType) ToTopicRuleS3PtrOutputWithContext(ctx context.Context) TopicRuleS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleS3PtrOutput)
}

type TopicRuleS3Output struct { *pulumi.OutputState }

func (TopicRuleS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleS3)(nil)).Elem()
}

func (o TopicRuleS3Output) ToTopicRuleS3Output() TopicRuleS3Output {
	return o
}

func (o TopicRuleS3Output) ToTopicRuleS3OutputWithContext(ctx context.Context) TopicRuleS3Output {
	return o
}

func (o TopicRuleS3Output) ToTopicRuleS3PtrOutput() TopicRuleS3PtrOutput {
	return o.ToTopicRuleS3PtrOutputWithContext(context.Background())
}

func (o TopicRuleS3Output) ToTopicRuleS3PtrOutputWithContext(ctx context.Context) TopicRuleS3PtrOutput {
	return o.ApplyT(func(v TopicRuleS3) *TopicRuleS3 {
		return &v
	}).(TopicRuleS3PtrOutput)
}
// The Amazon S3 bucket name.
func (o TopicRuleS3Output) BucketName() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleS3) string { return v.BucketName }).(pulumi.StringOutput)
}

// The object key.
func (o TopicRuleS3Output) Key() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleS3) string { return v.Key }).(pulumi.StringOutput)
}

// The ARN of the IAM role that grants access.
func (o TopicRuleS3Output) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleS3) string { return v.RoleArn }).(pulumi.StringOutput)
}

type TopicRuleS3PtrOutput struct { *pulumi.OutputState}

func (TopicRuleS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleS3)(nil)).Elem()
}

func (o TopicRuleS3PtrOutput) ToTopicRuleS3PtrOutput() TopicRuleS3PtrOutput {
	return o
}

func (o TopicRuleS3PtrOutput) ToTopicRuleS3PtrOutputWithContext(ctx context.Context) TopicRuleS3PtrOutput {
	return o
}

func (o TopicRuleS3PtrOutput) Elem() TopicRuleS3Output {
	return o.ApplyT(func (v *TopicRuleS3) TopicRuleS3 { return *v }).(TopicRuleS3Output)
}

// The Amazon S3 bucket name.
func (o TopicRuleS3PtrOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleS3) string { return v.BucketName }).(pulumi.StringOutput)
}

// The object key.
func (o TopicRuleS3PtrOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleS3) string { return v.Key }).(pulumi.StringOutput)
}

// The ARN of the IAM role that grants access.
func (o TopicRuleS3PtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleS3) string { return v.RoleArn }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(TopicRuleS3Output{})
	pulumi.RegisterOutputType(TopicRuleS3PtrOutput{})
}
