// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Thing struct {
	pulumi.CustomResourceState

	Arn             pulumi.StringOutput    `pulumi:"arn"`
	Attributes      pulumi.StringMapOutput `pulumi:"attributes"`
	DefaultClientId pulumi.StringOutput    `pulumi:"defaultClientId"`
	Name            pulumi.StringOutput    `pulumi:"name"`
	ThingTypeName   pulumi.StringPtrOutput `pulumi:"thingTypeName"`
	Version         pulumi.IntOutput       `pulumi:"version"`
}

// NewThing registers a new resource with the given unique name, arguments, and options.
func NewThing(ctx *pulumi.Context,
	name string, args *ThingArgs, opts ...pulumi.ResourceOption) (*Thing, error) {
	if args == nil {
		args = &ThingArgs{}
	}
	var resource Thing
	err := ctx.RegisterResource("aws:iot/thing:Thing", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetThing gets an existing Thing resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetThing(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ThingState, opts ...pulumi.ResourceOption) (*Thing, error) {
	var resource Thing
	err := ctx.ReadResource("aws:iot/thing:Thing", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Thing resources.
type thingState struct {
	Arn             *string           `pulumi:"arn"`
	Attributes      map[string]string `pulumi:"attributes"`
	DefaultClientId *string           `pulumi:"defaultClientId"`
	Name            *string           `pulumi:"name"`
	ThingTypeName   *string           `pulumi:"thingTypeName"`
	Version         *int              `pulumi:"version"`
}

type ThingState struct {
	Arn             pulumi.StringPtrInput
	Attributes      pulumi.StringMapInput
	DefaultClientId pulumi.StringPtrInput
	Name            pulumi.StringPtrInput
	ThingTypeName   pulumi.StringPtrInput
	Version         pulumi.IntPtrInput
}

func (ThingState) ElementType() reflect.Type {
	return reflect.TypeOf((*thingState)(nil)).Elem()
}

type thingArgs struct {
	Attributes    map[string]string `pulumi:"attributes"`
	Name          *string           `pulumi:"name"`
	ThingTypeName *string           `pulumi:"thingTypeName"`
}

// The set of arguments for constructing a Thing resource.
type ThingArgs struct {
	Attributes    pulumi.StringMapInput
	Name          pulumi.StringPtrInput
	ThingTypeName pulumi.StringPtrInput
}

func (ThingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*thingArgs)(nil)).Elem()
}
