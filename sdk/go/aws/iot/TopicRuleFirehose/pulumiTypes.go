// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package TopicRuleFirehose

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type TopicRuleFirehose struct {
	// The delivery stream name.
	DeliveryStreamName string `pulumi:"deliveryStreamName"`
	// The ARN of the IAM role that grants access.
	RoleArn string `pulumi:"roleArn"`
	// A character separator that is used to separate records written to the Firehose stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
	Separator *string `pulumi:"separator"`
}

type TopicRuleFirehoseInput interface {
	pulumi.Input

	ToTopicRuleFirehoseOutput() TopicRuleFirehoseOutput
	ToTopicRuleFirehoseOutputWithContext(context.Context) TopicRuleFirehoseOutput
}

type TopicRuleFirehoseArgs struct {
	// The delivery stream name.
	DeliveryStreamName pulumi.StringInput `pulumi:"deliveryStreamName"`
	// The ARN of the IAM role that grants access.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// A character separator that is used to separate records written to the Firehose stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
	Separator pulumi.StringPtrInput `pulumi:"separator"`
}

func (TopicRuleFirehoseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleFirehose)(nil)).Elem()
}

func (i TopicRuleFirehoseArgs) ToTopicRuleFirehoseOutput() TopicRuleFirehoseOutput {
	return i.ToTopicRuleFirehoseOutputWithContext(context.Background())
}

func (i TopicRuleFirehoseArgs) ToTopicRuleFirehoseOutputWithContext(ctx context.Context) TopicRuleFirehoseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleFirehoseOutput)
}

func (i TopicRuleFirehoseArgs) ToTopicRuleFirehosePtrOutput() TopicRuleFirehosePtrOutput {
	return i.ToTopicRuleFirehosePtrOutputWithContext(context.Background())
}

func (i TopicRuleFirehoseArgs) ToTopicRuleFirehosePtrOutputWithContext(ctx context.Context) TopicRuleFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleFirehoseOutput).ToTopicRuleFirehosePtrOutputWithContext(ctx)
}

type TopicRuleFirehosePtrInput interface {
	pulumi.Input

	ToTopicRuleFirehosePtrOutput() TopicRuleFirehosePtrOutput
	ToTopicRuleFirehosePtrOutputWithContext(context.Context) TopicRuleFirehosePtrOutput
}

type topicRuleFirehosePtrType TopicRuleFirehoseArgs

func TopicRuleFirehosePtr(v *TopicRuleFirehoseArgs) TopicRuleFirehosePtrInput {	return (*topicRuleFirehosePtrType)(v)
}

func (*topicRuleFirehosePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleFirehose)(nil)).Elem()
}

func (i *topicRuleFirehosePtrType) ToTopicRuleFirehosePtrOutput() TopicRuleFirehosePtrOutput {
	return i.ToTopicRuleFirehosePtrOutputWithContext(context.Background())
}

func (i *topicRuleFirehosePtrType) ToTopicRuleFirehosePtrOutputWithContext(ctx context.Context) TopicRuleFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleFirehosePtrOutput)
}

type TopicRuleFirehoseOutput struct { *pulumi.OutputState }

func (TopicRuleFirehoseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleFirehose)(nil)).Elem()
}

func (o TopicRuleFirehoseOutput) ToTopicRuleFirehoseOutput() TopicRuleFirehoseOutput {
	return o
}

func (o TopicRuleFirehoseOutput) ToTopicRuleFirehoseOutputWithContext(ctx context.Context) TopicRuleFirehoseOutput {
	return o
}

func (o TopicRuleFirehoseOutput) ToTopicRuleFirehosePtrOutput() TopicRuleFirehosePtrOutput {
	return o.ToTopicRuleFirehosePtrOutputWithContext(context.Background())
}

func (o TopicRuleFirehoseOutput) ToTopicRuleFirehosePtrOutputWithContext(ctx context.Context) TopicRuleFirehosePtrOutput {
	return o.ApplyT(func(v TopicRuleFirehose) *TopicRuleFirehose {
		return &v
	}).(TopicRuleFirehosePtrOutput)
}
// The delivery stream name.
func (o TopicRuleFirehoseOutput) DeliveryStreamName() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleFirehose) string { return v.DeliveryStreamName }).(pulumi.StringOutput)
}

// The ARN of the IAM role that grants access.
func (o TopicRuleFirehoseOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleFirehose) string { return v.RoleArn }).(pulumi.StringOutput)
}

// A character separator that is used to separate records written to the Firehose stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
func (o TopicRuleFirehoseOutput) Separator() pulumi.StringPtrOutput {
	return o.ApplyT(func (v TopicRuleFirehose) *string { return v.Separator }).(pulumi.StringPtrOutput)
}

type TopicRuleFirehosePtrOutput struct { *pulumi.OutputState}

func (TopicRuleFirehosePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleFirehose)(nil)).Elem()
}

func (o TopicRuleFirehosePtrOutput) ToTopicRuleFirehosePtrOutput() TopicRuleFirehosePtrOutput {
	return o
}

func (o TopicRuleFirehosePtrOutput) ToTopicRuleFirehosePtrOutputWithContext(ctx context.Context) TopicRuleFirehosePtrOutput {
	return o
}

func (o TopicRuleFirehosePtrOutput) Elem() TopicRuleFirehoseOutput {
	return o.ApplyT(func (v *TopicRuleFirehose) TopicRuleFirehose { return *v }).(TopicRuleFirehoseOutput)
}

// The delivery stream name.
func (o TopicRuleFirehosePtrOutput) DeliveryStreamName() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleFirehose) string { return v.DeliveryStreamName }).(pulumi.StringOutput)
}

// The ARN of the IAM role that grants access.
func (o TopicRuleFirehosePtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleFirehose) string { return v.RoleArn }).(pulumi.StringOutput)
}

// A character separator that is used to separate records written to the Firehose stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
func (o TopicRuleFirehosePtrOutput) Separator() pulumi.StringPtrOutput {
	return o.ApplyT(func (v TopicRuleFirehose) *string { return v.Separator }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(TopicRuleFirehoseOutput{})
	pulumi.RegisterOutputType(TopicRuleFirehosePtrOutput{})
}
