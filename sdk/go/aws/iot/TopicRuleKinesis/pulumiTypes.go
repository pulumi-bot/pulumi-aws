// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package TopicRuleKinesis

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type TopicRuleKinesis struct {
	// The partition key.
	PartitionKey *string `pulumi:"partitionKey"`
	// The ARN of the IAM role that grants access.
	RoleArn string `pulumi:"roleArn"`
	// The name of the Amazon Kinesis stream.
	StreamName string `pulumi:"streamName"`
}

type TopicRuleKinesisInput interface {
	pulumi.Input

	ToTopicRuleKinesisOutput() TopicRuleKinesisOutput
	ToTopicRuleKinesisOutputWithContext(context.Context) TopicRuleKinesisOutput
}

type TopicRuleKinesisArgs struct {
	// The partition key.
	PartitionKey pulumi.StringPtrInput `pulumi:"partitionKey"`
	// The ARN of the IAM role that grants access.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The name of the Amazon Kinesis stream.
	StreamName pulumi.StringInput `pulumi:"streamName"`
}

func (TopicRuleKinesisArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleKinesis)(nil)).Elem()
}

func (i TopicRuleKinesisArgs) ToTopicRuleKinesisOutput() TopicRuleKinesisOutput {
	return i.ToTopicRuleKinesisOutputWithContext(context.Background())
}

func (i TopicRuleKinesisArgs) ToTopicRuleKinesisOutputWithContext(ctx context.Context) TopicRuleKinesisOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleKinesisOutput)
}

func (i TopicRuleKinesisArgs) ToTopicRuleKinesisPtrOutput() TopicRuleKinesisPtrOutput {
	return i.ToTopicRuleKinesisPtrOutputWithContext(context.Background())
}

func (i TopicRuleKinesisArgs) ToTopicRuleKinesisPtrOutputWithContext(ctx context.Context) TopicRuleKinesisPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleKinesisOutput).ToTopicRuleKinesisPtrOutputWithContext(ctx)
}

type TopicRuleKinesisPtrInput interface {
	pulumi.Input

	ToTopicRuleKinesisPtrOutput() TopicRuleKinesisPtrOutput
	ToTopicRuleKinesisPtrOutputWithContext(context.Context) TopicRuleKinesisPtrOutput
}

type topicRuleKinesisPtrType TopicRuleKinesisArgs

func TopicRuleKinesisPtr(v *TopicRuleKinesisArgs) TopicRuleKinesisPtrInput {	return (*topicRuleKinesisPtrType)(v)
}

func (*topicRuleKinesisPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleKinesis)(nil)).Elem()
}

func (i *topicRuleKinesisPtrType) ToTopicRuleKinesisPtrOutput() TopicRuleKinesisPtrOutput {
	return i.ToTopicRuleKinesisPtrOutputWithContext(context.Background())
}

func (i *topicRuleKinesisPtrType) ToTopicRuleKinesisPtrOutputWithContext(ctx context.Context) TopicRuleKinesisPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleKinesisPtrOutput)
}

type TopicRuleKinesisOutput struct { *pulumi.OutputState }

func (TopicRuleKinesisOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleKinesis)(nil)).Elem()
}

func (o TopicRuleKinesisOutput) ToTopicRuleKinesisOutput() TopicRuleKinesisOutput {
	return o
}

func (o TopicRuleKinesisOutput) ToTopicRuleKinesisOutputWithContext(ctx context.Context) TopicRuleKinesisOutput {
	return o
}

func (o TopicRuleKinesisOutput) ToTopicRuleKinesisPtrOutput() TopicRuleKinesisPtrOutput {
	return o.ToTopicRuleKinesisPtrOutputWithContext(context.Background())
}

func (o TopicRuleKinesisOutput) ToTopicRuleKinesisPtrOutputWithContext(ctx context.Context) TopicRuleKinesisPtrOutput {
	return o.ApplyT(func(v TopicRuleKinesis) *TopicRuleKinesis {
		return &v
	}).(TopicRuleKinesisPtrOutput)
}
// The partition key.
func (o TopicRuleKinesisOutput) PartitionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func (v TopicRuleKinesis) *string { return v.PartitionKey }).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role that grants access.
func (o TopicRuleKinesisOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleKinesis) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The name of the Amazon Kinesis stream.
func (o TopicRuleKinesisOutput) StreamName() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleKinesis) string { return v.StreamName }).(pulumi.StringOutput)
}

type TopicRuleKinesisPtrOutput struct { *pulumi.OutputState}

func (TopicRuleKinesisPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleKinesis)(nil)).Elem()
}

func (o TopicRuleKinesisPtrOutput) ToTopicRuleKinesisPtrOutput() TopicRuleKinesisPtrOutput {
	return o
}

func (o TopicRuleKinesisPtrOutput) ToTopicRuleKinesisPtrOutputWithContext(ctx context.Context) TopicRuleKinesisPtrOutput {
	return o
}

func (o TopicRuleKinesisPtrOutput) Elem() TopicRuleKinesisOutput {
	return o.ApplyT(func (v *TopicRuleKinesis) TopicRuleKinesis { return *v }).(TopicRuleKinesisOutput)
}

// The partition key.
func (o TopicRuleKinesisPtrOutput) PartitionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func (v TopicRuleKinesis) *string { return v.PartitionKey }).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role that grants access.
func (o TopicRuleKinesisPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleKinesis) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The name of the Amazon Kinesis stream.
func (o TopicRuleKinesisPtrOutput) StreamName() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleKinesis) string { return v.StreamName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(TopicRuleKinesisOutput{})
	pulumi.RegisterOutputType(TopicRuleKinesisPtrOutput{})
}
