// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package TopicRuleRepublish

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type TopicRuleRepublish struct {
	// The ARN of the IAM role that grants access.
	RoleArn string `pulumi:"roleArn"`
	// The name of the MQTT topic the message should be republished to.
	Topic string `pulumi:"topic"`
}

type TopicRuleRepublishInput interface {
	pulumi.Input

	ToTopicRuleRepublishOutput() TopicRuleRepublishOutput
	ToTopicRuleRepublishOutputWithContext(context.Context) TopicRuleRepublishOutput
}

type TopicRuleRepublishArgs struct {
	// The ARN of the IAM role that grants access.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The name of the MQTT topic the message should be republished to.
	Topic pulumi.StringInput `pulumi:"topic"`
}

func (TopicRuleRepublishArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleRepublish)(nil)).Elem()
}

func (i TopicRuleRepublishArgs) ToTopicRuleRepublishOutput() TopicRuleRepublishOutput {
	return i.ToTopicRuleRepublishOutputWithContext(context.Background())
}

func (i TopicRuleRepublishArgs) ToTopicRuleRepublishOutputWithContext(ctx context.Context) TopicRuleRepublishOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleRepublishOutput)
}

func (i TopicRuleRepublishArgs) ToTopicRuleRepublishPtrOutput() TopicRuleRepublishPtrOutput {
	return i.ToTopicRuleRepublishPtrOutputWithContext(context.Background())
}

func (i TopicRuleRepublishArgs) ToTopicRuleRepublishPtrOutputWithContext(ctx context.Context) TopicRuleRepublishPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleRepublishOutput).ToTopicRuleRepublishPtrOutputWithContext(ctx)
}

type TopicRuleRepublishPtrInput interface {
	pulumi.Input

	ToTopicRuleRepublishPtrOutput() TopicRuleRepublishPtrOutput
	ToTopicRuleRepublishPtrOutputWithContext(context.Context) TopicRuleRepublishPtrOutput
}

type topicRuleRepublishPtrType TopicRuleRepublishArgs

func TopicRuleRepublishPtr(v *TopicRuleRepublishArgs) TopicRuleRepublishPtrInput {	return (*topicRuleRepublishPtrType)(v)
}

func (*topicRuleRepublishPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleRepublish)(nil)).Elem()
}

func (i *topicRuleRepublishPtrType) ToTopicRuleRepublishPtrOutput() TopicRuleRepublishPtrOutput {
	return i.ToTopicRuleRepublishPtrOutputWithContext(context.Background())
}

func (i *topicRuleRepublishPtrType) ToTopicRuleRepublishPtrOutputWithContext(ctx context.Context) TopicRuleRepublishPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleRepublishPtrOutput)
}

type TopicRuleRepublishOutput struct { *pulumi.OutputState }

func (TopicRuleRepublishOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleRepublish)(nil)).Elem()
}

func (o TopicRuleRepublishOutput) ToTopicRuleRepublishOutput() TopicRuleRepublishOutput {
	return o
}

func (o TopicRuleRepublishOutput) ToTopicRuleRepublishOutputWithContext(ctx context.Context) TopicRuleRepublishOutput {
	return o
}

func (o TopicRuleRepublishOutput) ToTopicRuleRepublishPtrOutput() TopicRuleRepublishPtrOutput {
	return o.ToTopicRuleRepublishPtrOutputWithContext(context.Background())
}

func (o TopicRuleRepublishOutput) ToTopicRuleRepublishPtrOutputWithContext(ctx context.Context) TopicRuleRepublishPtrOutput {
	return o.ApplyT(func(v TopicRuleRepublish) *TopicRuleRepublish {
		return &v
	}).(TopicRuleRepublishPtrOutput)
}
// The ARN of the IAM role that grants access.
func (o TopicRuleRepublishOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleRepublish) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The name of the MQTT topic the message should be republished to.
func (o TopicRuleRepublishOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleRepublish) string { return v.Topic }).(pulumi.StringOutput)
}

type TopicRuleRepublishPtrOutput struct { *pulumi.OutputState}

func (TopicRuleRepublishPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleRepublish)(nil)).Elem()
}

func (o TopicRuleRepublishPtrOutput) ToTopicRuleRepublishPtrOutput() TopicRuleRepublishPtrOutput {
	return o
}

func (o TopicRuleRepublishPtrOutput) ToTopicRuleRepublishPtrOutputWithContext(ctx context.Context) TopicRuleRepublishPtrOutput {
	return o
}

func (o TopicRuleRepublishPtrOutput) Elem() TopicRuleRepublishOutput {
	return o.ApplyT(func (v *TopicRuleRepublish) TopicRuleRepublish { return *v }).(TopicRuleRepublishOutput)
}

// The ARN of the IAM role that grants access.
func (o TopicRuleRepublishPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleRepublish) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The name of the MQTT topic the message should be republished to.
func (o TopicRuleRepublishPtrOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleRepublish) string { return v.Topic }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(TopicRuleRepublishOutput{})
	pulumi.RegisterOutputType(TopicRuleRepublishPtrOutput{})
}
