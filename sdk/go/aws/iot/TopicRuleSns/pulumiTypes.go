// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package TopicRuleSns

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type TopicRuleSns struct {
	// The message format of the message to publish. Accepted values are "JSON" and "RAW".
	MessageFormat *string `pulumi:"messageFormat"`
	// The ARN of the IAM role that grants access.
	RoleArn string `pulumi:"roleArn"`
	// The ARN of the SNS topic.
	TargetArn string `pulumi:"targetArn"`
}

type TopicRuleSnsInput interface {
	pulumi.Input

	ToTopicRuleSnsOutput() TopicRuleSnsOutput
	ToTopicRuleSnsOutputWithContext(context.Context) TopicRuleSnsOutput
}

type TopicRuleSnsArgs struct {
	// The message format of the message to publish. Accepted values are "JSON" and "RAW".
	MessageFormat pulumi.StringPtrInput `pulumi:"messageFormat"`
	// The ARN of the IAM role that grants access.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The ARN of the SNS topic.
	TargetArn pulumi.StringInput `pulumi:"targetArn"`
}

func (TopicRuleSnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleSns)(nil)).Elem()
}

func (i TopicRuleSnsArgs) ToTopicRuleSnsOutput() TopicRuleSnsOutput {
	return i.ToTopicRuleSnsOutputWithContext(context.Background())
}

func (i TopicRuleSnsArgs) ToTopicRuleSnsOutputWithContext(ctx context.Context) TopicRuleSnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleSnsOutput)
}

func (i TopicRuleSnsArgs) ToTopicRuleSnsPtrOutput() TopicRuleSnsPtrOutput {
	return i.ToTopicRuleSnsPtrOutputWithContext(context.Background())
}

func (i TopicRuleSnsArgs) ToTopicRuleSnsPtrOutputWithContext(ctx context.Context) TopicRuleSnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleSnsOutput).ToTopicRuleSnsPtrOutputWithContext(ctx)
}

type TopicRuleSnsPtrInput interface {
	pulumi.Input

	ToTopicRuleSnsPtrOutput() TopicRuleSnsPtrOutput
	ToTopicRuleSnsPtrOutputWithContext(context.Context) TopicRuleSnsPtrOutput
}

type topicRuleSnsPtrType TopicRuleSnsArgs

func TopicRuleSnsPtr(v *TopicRuleSnsArgs) TopicRuleSnsPtrInput {	return (*topicRuleSnsPtrType)(v)
}

func (*topicRuleSnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleSns)(nil)).Elem()
}

func (i *topicRuleSnsPtrType) ToTopicRuleSnsPtrOutput() TopicRuleSnsPtrOutput {
	return i.ToTopicRuleSnsPtrOutputWithContext(context.Background())
}

func (i *topicRuleSnsPtrType) ToTopicRuleSnsPtrOutputWithContext(ctx context.Context) TopicRuleSnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleSnsPtrOutput)
}

type TopicRuleSnsOutput struct { *pulumi.OutputState }

func (TopicRuleSnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleSns)(nil)).Elem()
}

func (o TopicRuleSnsOutput) ToTopicRuleSnsOutput() TopicRuleSnsOutput {
	return o
}

func (o TopicRuleSnsOutput) ToTopicRuleSnsOutputWithContext(ctx context.Context) TopicRuleSnsOutput {
	return o
}

func (o TopicRuleSnsOutput) ToTopicRuleSnsPtrOutput() TopicRuleSnsPtrOutput {
	return o.ToTopicRuleSnsPtrOutputWithContext(context.Background())
}

func (o TopicRuleSnsOutput) ToTopicRuleSnsPtrOutputWithContext(ctx context.Context) TopicRuleSnsPtrOutput {
	return o.ApplyT(func(v TopicRuleSns) *TopicRuleSns {
		return &v
	}).(TopicRuleSnsPtrOutput)
}
// The message format of the message to publish. Accepted values are "JSON" and "RAW".
func (o TopicRuleSnsOutput) MessageFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func (v TopicRuleSns) *string { return v.MessageFormat }).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role that grants access.
func (o TopicRuleSnsOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleSns) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The ARN of the SNS topic.
func (o TopicRuleSnsOutput) TargetArn() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleSns) string { return v.TargetArn }).(pulumi.StringOutput)
}

type TopicRuleSnsPtrOutput struct { *pulumi.OutputState}

func (TopicRuleSnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleSns)(nil)).Elem()
}

func (o TopicRuleSnsPtrOutput) ToTopicRuleSnsPtrOutput() TopicRuleSnsPtrOutput {
	return o
}

func (o TopicRuleSnsPtrOutput) ToTopicRuleSnsPtrOutputWithContext(ctx context.Context) TopicRuleSnsPtrOutput {
	return o
}

func (o TopicRuleSnsPtrOutput) Elem() TopicRuleSnsOutput {
	return o.ApplyT(func (v *TopicRuleSns) TopicRuleSns { return *v }).(TopicRuleSnsOutput)
}

// The message format of the message to publish. Accepted values are "JSON" and "RAW".
func (o TopicRuleSnsPtrOutput) MessageFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func (v TopicRuleSns) *string { return v.MessageFormat }).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role that grants access.
func (o TopicRuleSnsPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleSns) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The ARN of the SNS topic.
func (o TopicRuleSnsPtrOutput) TargetArn() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleSns) string { return v.TargetArn }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(TopicRuleSnsOutput{})
	pulumi.RegisterOutputType(TopicRuleSnsPtrOutput{})
}
