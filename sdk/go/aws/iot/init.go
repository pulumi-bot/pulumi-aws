// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "aws:iot/certificate:Certificate":
		r, err = NewCertificate(ctx, name, nil, pulumi.URN_(urn))
	case "aws:iot/policy:Policy":
		r, err = NewPolicy(ctx, name, nil, pulumi.URN_(urn))
	case "aws:iot/policyAttachment:PolicyAttachment":
		r, err = NewPolicyAttachment(ctx, name, nil, pulumi.URN_(urn))
	case "aws:iot/roleAlias:RoleAlias":
		r, err = NewRoleAlias(ctx, name, nil, pulumi.URN_(urn))
	case "aws:iot/thing:Thing":
		r, err = NewThing(ctx, name, nil, pulumi.URN_(urn))
	case "aws:iot/thingPrincipalAttachment:ThingPrincipalAttachment":
		r, err = NewThingPrincipalAttachment(ctx, name, nil, pulumi.URN_(urn))
	case "aws:iot/thingType:ThingType":
		r, err = NewThingType(ctx, name, nil, pulumi.URN_(urn))
	case "aws:iot/topicRule:TopicRule":
		r, err = NewTopicRule(ctx, name, nil, pulumi.URN_(urn))
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	return
}

func init() {
	version, err := aws.PkgVersion()
	if err != nil {
		panic(fmt.Errorf("failed to determine package version: %v", err))
	}
	pulumi.RegisterResourceModule(
		"aws",
		"iot/certificate",
		&module{version},
	)
}
