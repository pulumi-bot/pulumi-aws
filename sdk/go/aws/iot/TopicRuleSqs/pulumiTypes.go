// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package TopicRuleSqs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type TopicRuleSqs struct {
	// The URL of the Amazon SQS queue.
	QueueUrl string `pulumi:"queueUrl"`
	// The ARN of the IAM role that grants access.
	RoleArn string `pulumi:"roleArn"`
	// Specifies whether to use Base64 encoding.
	UseBase64 bool `pulumi:"useBase64"`
}

type TopicRuleSqsInput interface {
	pulumi.Input

	ToTopicRuleSqsOutput() TopicRuleSqsOutput
	ToTopicRuleSqsOutputWithContext(context.Context) TopicRuleSqsOutput
}

type TopicRuleSqsArgs struct {
	// The URL of the Amazon SQS queue.
	QueueUrl pulumi.StringInput `pulumi:"queueUrl"`
	// The ARN of the IAM role that grants access.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// Specifies whether to use Base64 encoding.
	UseBase64 pulumi.BoolInput `pulumi:"useBase64"`
}

func (TopicRuleSqsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleSqs)(nil)).Elem()
}

func (i TopicRuleSqsArgs) ToTopicRuleSqsOutput() TopicRuleSqsOutput {
	return i.ToTopicRuleSqsOutputWithContext(context.Background())
}

func (i TopicRuleSqsArgs) ToTopicRuleSqsOutputWithContext(ctx context.Context) TopicRuleSqsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleSqsOutput)
}

func (i TopicRuleSqsArgs) ToTopicRuleSqsPtrOutput() TopicRuleSqsPtrOutput {
	return i.ToTopicRuleSqsPtrOutputWithContext(context.Background())
}

func (i TopicRuleSqsArgs) ToTopicRuleSqsPtrOutputWithContext(ctx context.Context) TopicRuleSqsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleSqsOutput).ToTopicRuleSqsPtrOutputWithContext(ctx)
}

type TopicRuleSqsPtrInput interface {
	pulumi.Input

	ToTopicRuleSqsPtrOutput() TopicRuleSqsPtrOutput
	ToTopicRuleSqsPtrOutputWithContext(context.Context) TopicRuleSqsPtrOutput
}

type topicRuleSqsPtrType TopicRuleSqsArgs

func TopicRuleSqsPtr(v *TopicRuleSqsArgs) TopicRuleSqsPtrInput {	return (*topicRuleSqsPtrType)(v)
}

func (*topicRuleSqsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleSqs)(nil)).Elem()
}

func (i *topicRuleSqsPtrType) ToTopicRuleSqsPtrOutput() TopicRuleSqsPtrOutput {
	return i.ToTopicRuleSqsPtrOutputWithContext(context.Background())
}

func (i *topicRuleSqsPtrType) ToTopicRuleSqsPtrOutputWithContext(ctx context.Context) TopicRuleSqsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleSqsPtrOutput)
}

type TopicRuleSqsOutput struct { *pulumi.OutputState }

func (TopicRuleSqsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleSqs)(nil)).Elem()
}

func (o TopicRuleSqsOutput) ToTopicRuleSqsOutput() TopicRuleSqsOutput {
	return o
}

func (o TopicRuleSqsOutput) ToTopicRuleSqsOutputWithContext(ctx context.Context) TopicRuleSqsOutput {
	return o
}

func (o TopicRuleSqsOutput) ToTopicRuleSqsPtrOutput() TopicRuleSqsPtrOutput {
	return o.ToTopicRuleSqsPtrOutputWithContext(context.Background())
}

func (o TopicRuleSqsOutput) ToTopicRuleSqsPtrOutputWithContext(ctx context.Context) TopicRuleSqsPtrOutput {
	return o.ApplyT(func(v TopicRuleSqs) *TopicRuleSqs {
		return &v
	}).(TopicRuleSqsPtrOutput)
}
// The URL of the Amazon SQS queue.
func (o TopicRuleSqsOutput) QueueUrl() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleSqs) string { return v.QueueUrl }).(pulumi.StringOutput)
}

// The ARN of the IAM role that grants access.
func (o TopicRuleSqsOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleSqs) string { return v.RoleArn }).(pulumi.StringOutput)
}

// Specifies whether to use Base64 encoding.
func (o TopicRuleSqsOutput) UseBase64() pulumi.BoolOutput {
	return o.ApplyT(func (v TopicRuleSqs) bool { return v.UseBase64 }).(pulumi.BoolOutput)
}

type TopicRuleSqsPtrOutput struct { *pulumi.OutputState}

func (TopicRuleSqsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleSqs)(nil)).Elem()
}

func (o TopicRuleSqsPtrOutput) ToTopicRuleSqsPtrOutput() TopicRuleSqsPtrOutput {
	return o
}

func (o TopicRuleSqsPtrOutput) ToTopicRuleSqsPtrOutputWithContext(ctx context.Context) TopicRuleSqsPtrOutput {
	return o
}

func (o TopicRuleSqsPtrOutput) Elem() TopicRuleSqsOutput {
	return o.ApplyT(func (v *TopicRuleSqs) TopicRuleSqs { return *v }).(TopicRuleSqsOutput)
}

// The URL of the Amazon SQS queue.
func (o TopicRuleSqsPtrOutput) QueueUrl() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleSqs) string { return v.QueueUrl }).(pulumi.StringOutput)
}

// The ARN of the IAM role that grants access.
func (o TopicRuleSqsPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func (v TopicRuleSqs) string { return v.RoleArn }).(pulumi.StringOutput)
}

// Specifies whether to use Base64 encoding.
func (o TopicRuleSqsPtrOutput) UseBase64() pulumi.BoolOutput {
	return o.ApplyT(func (v TopicRuleSqs) bool { return v.UseBase64 }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(TopicRuleSqsOutput{})
	pulumi.RegisterOutputType(TopicRuleSqsPtrOutput{})
}
