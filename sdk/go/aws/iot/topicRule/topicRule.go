// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package topicRule

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-aws/iot/TopicRuleCloudwatchAlarm"
	"https:/github.com/pulumi/pulumi-aws/iot/TopicRuleCloudwatchMetric"
	"https:/github.com/pulumi/pulumi-aws/iot/TopicRuleDynamodb"
	"https:/github.com/pulumi/pulumi-aws/iot/TopicRuleElasticsearch"
	"https:/github.com/pulumi/pulumi-aws/iot/TopicRuleFirehose"
	"https:/github.com/pulumi/pulumi-aws/iot/TopicRuleKinesis"
	"https:/github.com/pulumi/pulumi-aws/iot/TopicRuleLambda"
	"https:/github.com/pulumi/pulumi-aws/iot/TopicRuleRepublish"
	"https:/github.com/pulumi/pulumi-aws/iot/TopicRuleS3"
	"https:/github.com/pulumi/pulumi-aws/iot/TopicRuleSns"
	"https:/github.com/pulumi/pulumi-aws/iot/TopicRuleSqs"
)

type TopicRule struct {
	pulumi.CustomResourceState

	// The ARN of the topic rule
	Arn pulumi.StringOutput `pulumi:"arn"`
	CloudwatchAlarm iotTopicRuleCloudwatchAlarm.TopicRuleCloudwatchAlarmPtrOutput `pulumi:"cloudwatchAlarm"`
	CloudwatchMetric iotTopicRuleCloudwatchMetric.TopicRuleCloudwatchMetricPtrOutput `pulumi:"cloudwatchMetric"`
	// The description of the rule.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	Dynamodb iotTopicRuleDynamodb.TopicRuleDynamodbPtrOutput `pulumi:"dynamodb"`
	Elasticsearch iotTopicRuleElasticsearch.TopicRuleElasticsearchPtrOutput `pulumi:"elasticsearch"`
	// Specifies whether the rule is enabled.
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	Firehose iotTopicRuleFirehose.TopicRuleFirehosePtrOutput `pulumi:"firehose"`
	Kinesis iotTopicRuleKinesis.TopicRuleKinesisPtrOutput `pulumi:"kinesis"`
	Lambda iotTopicRuleLambda.TopicRuleLambdaPtrOutput `pulumi:"lambda"`
	// The name of the rule.
	Name pulumi.StringOutput `pulumi:"name"`
	Republish iotTopicRuleRepublish.TopicRuleRepublishPtrOutput `pulumi:"republish"`
	S3 iotTopicRuleS3.TopicRuleS3PtrOutput `pulumi:"s3"`
	Sns iotTopicRuleSns.TopicRuleSnsPtrOutput `pulumi:"sns"`
	// The SQL statement used to query the topic. For more information, see AWS IoT SQL Reference (http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference) in the AWS IoT Developer Guide.
	Sql pulumi.StringOutput `pulumi:"sql"`
	// The version of the SQL rules engine to use when evaluating the rule.
	SqlVersion pulumi.StringOutput `pulumi:"sqlVersion"`
	Sqs iotTopicRuleSqs.TopicRuleSqsPtrOutput `pulumi:"sqs"`
}

// NewTopicRule registers a new resource with the given unique name, arguments, and options.
func NewTopicRule(ctx *pulumi.Context,
	name string, args *TopicRuleArgs, opts ...pulumi.ResourceOption) (*TopicRule, error) {
	if args == nil || args.Enabled == nil {
		return nil, errors.New("missing required argument 'Enabled'")
	}
	if args == nil || args.Sql == nil {
		return nil, errors.New("missing required argument 'Sql'")
	}
	if args == nil || args.SqlVersion == nil {
		return nil, errors.New("missing required argument 'SqlVersion'")
	}
	if args == nil {
		args = &TopicRuleArgs{}
	}
	var resource TopicRule
	err := ctx.RegisterResource("aws:iot/topicRule:TopicRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTopicRule gets an existing TopicRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTopicRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TopicRuleState, opts ...pulumi.ResourceOption) (*TopicRule, error) {
	var resource TopicRule
	err := ctx.ReadResource("aws:iot/topicRule:TopicRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TopicRule resources.
type topicRuleState struct {
	// The ARN of the topic rule
	Arn *string `pulumi:"arn"`
	CloudwatchAlarm *iotTopicRuleCloudwatchAlarm.TopicRuleCloudwatchAlarm `pulumi:"cloudwatchAlarm"`
	CloudwatchMetric *iotTopicRuleCloudwatchMetric.TopicRuleCloudwatchMetric `pulumi:"cloudwatchMetric"`
	// The description of the rule.
	Description *string `pulumi:"description"`
	Dynamodb *iotTopicRuleDynamodb.TopicRuleDynamodb `pulumi:"dynamodb"`
	Elasticsearch *iotTopicRuleElasticsearch.TopicRuleElasticsearch `pulumi:"elasticsearch"`
	// Specifies whether the rule is enabled.
	Enabled *bool `pulumi:"enabled"`
	Firehose *iotTopicRuleFirehose.TopicRuleFirehose `pulumi:"firehose"`
	Kinesis *iotTopicRuleKinesis.TopicRuleKinesis `pulumi:"kinesis"`
	Lambda *iotTopicRuleLambda.TopicRuleLambda `pulumi:"lambda"`
	// The name of the rule.
	Name *string `pulumi:"name"`
	Republish *iotTopicRuleRepublish.TopicRuleRepublish `pulumi:"republish"`
	S3 *iotTopicRuleS3.TopicRuleS3 `pulumi:"s3"`
	Sns *iotTopicRuleSns.TopicRuleSns `pulumi:"sns"`
	// The SQL statement used to query the topic. For more information, see AWS IoT SQL Reference (http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference) in the AWS IoT Developer Guide.
	Sql *string `pulumi:"sql"`
	// The version of the SQL rules engine to use when evaluating the rule.
	SqlVersion *string `pulumi:"sqlVersion"`
	Sqs *iotTopicRuleSqs.TopicRuleSqs `pulumi:"sqs"`
}

type TopicRuleState struct {
	// The ARN of the topic rule
	Arn pulumi.StringPtrInput
	CloudwatchAlarm iotTopicRuleCloudwatchAlarm.TopicRuleCloudwatchAlarmPtrInput
	CloudwatchMetric iotTopicRuleCloudwatchMetric.TopicRuleCloudwatchMetricPtrInput
	// The description of the rule.
	Description pulumi.StringPtrInput
	Dynamodb iotTopicRuleDynamodb.TopicRuleDynamodbPtrInput
	Elasticsearch iotTopicRuleElasticsearch.TopicRuleElasticsearchPtrInput
	// Specifies whether the rule is enabled.
	Enabled pulumi.BoolPtrInput
	Firehose iotTopicRuleFirehose.TopicRuleFirehosePtrInput
	Kinesis iotTopicRuleKinesis.TopicRuleKinesisPtrInput
	Lambda iotTopicRuleLambda.TopicRuleLambdaPtrInput
	// The name of the rule.
	Name pulumi.StringPtrInput
	Republish iotTopicRuleRepublish.TopicRuleRepublishPtrInput
	S3 iotTopicRuleS3.TopicRuleS3PtrInput
	Sns iotTopicRuleSns.TopicRuleSnsPtrInput
	// The SQL statement used to query the topic. For more information, see AWS IoT SQL Reference (http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference) in the AWS IoT Developer Guide.
	Sql pulumi.StringPtrInput
	// The version of the SQL rules engine to use when evaluating the rule.
	SqlVersion pulumi.StringPtrInput
	Sqs iotTopicRuleSqs.TopicRuleSqsPtrInput
}

func (TopicRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*topicRuleState)(nil)).Elem()
}

type topicRuleArgs struct {
	CloudwatchAlarm *iotTopicRuleCloudwatchAlarm.TopicRuleCloudwatchAlarm `pulumi:"cloudwatchAlarm"`
	CloudwatchMetric *iotTopicRuleCloudwatchMetric.TopicRuleCloudwatchMetric `pulumi:"cloudwatchMetric"`
	// The description of the rule.
	Description *string `pulumi:"description"`
	Dynamodb *iotTopicRuleDynamodb.TopicRuleDynamodb `pulumi:"dynamodb"`
	Elasticsearch *iotTopicRuleElasticsearch.TopicRuleElasticsearch `pulumi:"elasticsearch"`
	// Specifies whether the rule is enabled.
	Enabled bool `pulumi:"enabled"`
	Firehose *iotTopicRuleFirehose.TopicRuleFirehose `pulumi:"firehose"`
	Kinesis *iotTopicRuleKinesis.TopicRuleKinesis `pulumi:"kinesis"`
	Lambda *iotTopicRuleLambda.TopicRuleLambda `pulumi:"lambda"`
	// The name of the rule.
	Name *string `pulumi:"name"`
	Republish *iotTopicRuleRepublish.TopicRuleRepublish `pulumi:"republish"`
	S3 *iotTopicRuleS3.TopicRuleS3 `pulumi:"s3"`
	Sns *iotTopicRuleSns.TopicRuleSns `pulumi:"sns"`
	// The SQL statement used to query the topic. For more information, see AWS IoT SQL Reference (http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference) in the AWS IoT Developer Guide.
	Sql string `pulumi:"sql"`
	// The version of the SQL rules engine to use when evaluating the rule.
	SqlVersion string `pulumi:"sqlVersion"`
	Sqs *iotTopicRuleSqs.TopicRuleSqs `pulumi:"sqs"`
}

// The set of arguments for constructing a TopicRule resource.
type TopicRuleArgs struct {
	CloudwatchAlarm iotTopicRuleCloudwatchAlarm.TopicRuleCloudwatchAlarmPtrInput
	CloudwatchMetric iotTopicRuleCloudwatchMetric.TopicRuleCloudwatchMetricPtrInput
	// The description of the rule.
	Description pulumi.StringPtrInput
	Dynamodb iotTopicRuleDynamodb.TopicRuleDynamodbPtrInput
	Elasticsearch iotTopicRuleElasticsearch.TopicRuleElasticsearchPtrInput
	// Specifies whether the rule is enabled.
	Enabled pulumi.BoolInput
	Firehose iotTopicRuleFirehose.TopicRuleFirehosePtrInput
	Kinesis iotTopicRuleKinesis.TopicRuleKinesisPtrInput
	Lambda iotTopicRuleLambda.TopicRuleLambdaPtrInput
	// The name of the rule.
	Name pulumi.StringPtrInput
	Republish iotTopicRuleRepublish.TopicRuleRepublishPtrInput
	S3 iotTopicRuleS3.TopicRuleS3PtrInput
	Sns iotTopicRuleSns.TopicRuleSnsPtrInput
	// The SQL statement used to query the topic. For more information, see AWS IoT SQL Reference (http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference) in the AWS IoT Developer Guide.
	Sql pulumi.StringInput
	// The version of the SQL rules engine to use when evaluating the rule.
	SqlVersion pulumi.StringInput
	Sqs iotTopicRuleSqs.TopicRuleSqsPtrInput
}

func (TopicRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*topicRuleArgs)(nil)).Elem()
}

