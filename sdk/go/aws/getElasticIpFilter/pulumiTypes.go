// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package getElasticIpFilter

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type GetElasticIpFilter struct {
	Name string `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetElasticIpFilterInput interface {
	pulumi.Input

	ToGetElasticIpFilterOutput() GetElasticIpFilterOutput
	ToGetElasticIpFilterOutputWithContext(context.Context) GetElasticIpFilterOutput
}

type GetElasticIpFilterArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetElasticIpFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticIpFilter)(nil)).Elem()
}

func (i GetElasticIpFilterArgs) ToGetElasticIpFilterOutput() GetElasticIpFilterOutput {
	return i.ToGetElasticIpFilterOutputWithContext(context.Background())
}

func (i GetElasticIpFilterArgs) ToGetElasticIpFilterOutputWithContext(ctx context.Context) GetElasticIpFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticIpFilterOutput)
}

type GetElasticIpFilterArrayInput interface {
	pulumi.Input

	ToGetElasticIpFilterArrayOutput() GetElasticIpFilterArrayOutput
	ToGetElasticIpFilterArrayOutputWithContext(context.Context) GetElasticIpFilterArrayOutput
}

type GetElasticIpFilterArray []GetElasticIpFilterInput

func (GetElasticIpFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElasticIpFilter)(nil)).Elem()
}

func (i GetElasticIpFilterArray) ToGetElasticIpFilterArrayOutput() GetElasticIpFilterArrayOutput {
	return i.ToGetElasticIpFilterArrayOutputWithContext(context.Background())
}

func (i GetElasticIpFilterArray) ToGetElasticIpFilterArrayOutputWithContext(ctx context.Context) GetElasticIpFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticIpFilterArrayOutput)
}

type GetElasticIpFilterOutput struct { *pulumi.OutputState }

func (GetElasticIpFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticIpFilter)(nil)).Elem()
}

func (o GetElasticIpFilterOutput) ToGetElasticIpFilterOutput() GetElasticIpFilterOutput {
	return o
}

func (o GetElasticIpFilterOutput) ToGetElasticIpFilterOutputWithContext(ctx context.Context) GetElasticIpFilterOutput {
	return o
}

func (o GetElasticIpFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetElasticIpFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetElasticIpFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetElasticIpFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetElasticIpFilterArrayOutput struct { *pulumi.OutputState}

func (GetElasticIpFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElasticIpFilter)(nil)).Elem()
}

func (o GetElasticIpFilterArrayOutput) ToGetElasticIpFilterArrayOutput() GetElasticIpFilterArrayOutput {
	return o
}

func (o GetElasticIpFilterArrayOutput) ToGetElasticIpFilterArrayOutputWithContext(ctx context.Context) GetElasticIpFilterArrayOutput {
	return o
}

func (o GetElasticIpFilterArrayOutput) Index(i pulumi.IntInput) GetElasticIpFilterOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetElasticIpFilter {
		return vs[0].([]GetElasticIpFilter)[vs[1].(int)]
	}).(GetElasticIpFilterOutput)
}

func init() {
	pulumi.RegisterOutputType(GetElasticIpFilterOutput{})
	pulumi.RegisterOutputType(GetElasticIpFilterArrayOutput{})
}
