// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package route53

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type VpcAssociationAuthorization struct {
	pulumi.CustomResourceState

	VpcId     pulumi.StringOutput `pulumi:"vpcId"`
	VpcRegion pulumi.StringOutput `pulumi:"vpcRegion"`
	ZoneId    pulumi.StringOutput `pulumi:"zoneId"`
}

// NewVpcAssociationAuthorization registers a new resource with the given unique name, arguments, and options.
func NewVpcAssociationAuthorization(ctx *pulumi.Context,
	name string, args *VpcAssociationAuthorizationArgs, opts ...pulumi.ResourceOption) (*VpcAssociationAuthorization, error) {
	if args == nil || args.VpcId == nil {
		return nil, errors.New("missing required argument 'VpcId'")
	}
	if args == nil || args.ZoneId == nil {
		return nil, errors.New("missing required argument 'ZoneId'")
	}
	if args == nil {
		args = &VpcAssociationAuthorizationArgs{}
	}
	var resource VpcAssociationAuthorization
	err := ctx.RegisterResource("aws:route53/vpcAssociationAuthorization:VpcAssociationAuthorization", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcAssociationAuthorization gets an existing VpcAssociationAuthorization resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcAssociationAuthorization(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcAssociationAuthorizationState, opts ...pulumi.ResourceOption) (*VpcAssociationAuthorization, error) {
	var resource VpcAssociationAuthorization
	err := ctx.ReadResource("aws:route53/vpcAssociationAuthorization:VpcAssociationAuthorization", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcAssociationAuthorization resources.
type vpcAssociationAuthorizationState struct {
	VpcId     *string `pulumi:"vpcId"`
	VpcRegion *string `pulumi:"vpcRegion"`
	ZoneId    *string `pulumi:"zoneId"`
}

type VpcAssociationAuthorizationState struct {
	VpcId     pulumi.StringPtrInput
	VpcRegion pulumi.StringPtrInput
	ZoneId    pulumi.StringPtrInput
}

func (VpcAssociationAuthorizationState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcAssociationAuthorizationState)(nil)).Elem()
}

type vpcAssociationAuthorizationArgs struct {
	VpcId     string  `pulumi:"vpcId"`
	VpcRegion *string `pulumi:"vpcRegion"`
	ZoneId    string  `pulumi:"zoneId"`
}

// The set of arguments for constructing a VpcAssociationAuthorization resource.
type VpcAssociationAuthorizationArgs struct {
	VpcId     pulumi.StringInput
	VpcRegion pulumi.StringPtrInput
	ZoneId    pulumi.StringInput
}

func (VpcAssociationAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcAssociationAuthorizationArgs)(nil)).Elem()
}
