// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package route53

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type HealthCheck struct {
	pulumi.CustomResourceState

	ChildHealthThreshold         pulumi.IntPtrOutput      `pulumi:"childHealthThreshold"`
	ChildHealthchecks            pulumi.StringArrayOutput `pulumi:"childHealthchecks"`
	CloudwatchAlarmName          pulumi.StringPtrOutput   `pulumi:"cloudwatchAlarmName"`
	CloudwatchAlarmRegion        pulumi.StringPtrOutput   `pulumi:"cloudwatchAlarmRegion"`
	EnableSni                    pulumi.BoolOutput        `pulumi:"enableSni"`
	FailureThreshold             pulumi.IntPtrOutput      `pulumi:"failureThreshold"`
	Fqdn                         pulumi.StringPtrOutput   `pulumi:"fqdn"`
	InsufficientDataHealthStatus pulumi.StringPtrOutput   `pulumi:"insufficientDataHealthStatus"`
	InvertHealthcheck            pulumi.BoolPtrOutput     `pulumi:"invertHealthcheck"`
	IpAddress                    pulumi.StringPtrOutput   `pulumi:"ipAddress"`
	MeasureLatency               pulumi.BoolPtrOutput     `pulumi:"measureLatency"`
	Port                         pulumi.IntPtrOutput      `pulumi:"port"`
	ReferenceName                pulumi.StringPtrOutput   `pulumi:"referenceName"`
	Regions                      pulumi.StringArrayOutput `pulumi:"regions"`
	RequestInterval              pulumi.IntPtrOutput      `pulumi:"requestInterval"`
	ResourcePath                 pulumi.StringPtrOutput   `pulumi:"resourcePath"`
	SearchString                 pulumi.StringPtrOutput   `pulumi:"searchString"`
	Tags                         pulumi.StringMapOutput   `pulumi:"tags"`
	Type                         pulumi.StringOutput      `pulumi:"type"`
}

// NewHealthCheck registers a new resource with the given unique name, arguments, and options.
func NewHealthCheck(ctx *pulumi.Context,
	name string, args *HealthCheckArgs, opts ...pulumi.ResourceOption) (*HealthCheck, error) {
	if args == nil || args.Type == nil {
		return nil, errors.New("missing required argument 'Type'")
	}
	if args == nil {
		args = &HealthCheckArgs{}
	}
	var resource HealthCheck
	err := ctx.RegisterResource("aws:route53/healthCheck:HealthCheck", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHealthCheck gets an existing HealthCheck resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHealthCheck(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HealthCheckState, opts ...pulumi.ResourceOption) (*HealthCheck, error) {
	var resource HealthCheck
	err := ctx.ReadResource("aws:route53/healthCheck:HealthCheck", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HealthCheck resources.
type healthCheckState struct {
	ChildHealthThreshold         *int              `pulumi:"childHealthThreshold"`
	ChildHealthchecks            []string          `pulumi:"childHealthchecks"`
	CloudwatchAlarmName          *string           `pulumi:"cloudwatchAlarmName"`
	CloudwatchAlarmRegion        *string           `pulumi:"cloudwatchAlarmRegion"`
	EnableSni                    *bool             `pulumi:"enableSni"`
	FailureThreshold             *int              `pulumi:"failureThreshold"`
	Fqdn                         *string           `pulumi:"fqdn"`
	InsufficientDataHealthStatus *string           `pulumi:"insufficientDataHealthStatus"`
	InvertHealthcheck            *bool             `pulumi:"invertHealthcheck"`
	IpAddress                    *string           `pulumi:"ipAddress"`
	MeasureLatency               *bool             `pulumi:"measureLatency"`
	Port                         *int              `pulumi:"port"`
	ReferenceName                *string           `pulumi:"referenceName"`
	Regions                      []string          `pulumi:"regions"`
	RequestInterval              *int              `pulumi:"requestInterval"`
	ResourcePath                 *string           `pulumi:"resourcePath"`
	SearchString                 *string           `pulumi:"searchString"`
	Tags                         map[string]string `pulumi:"tags"`
	Type                         *string           `pulumi:"type"`
}

type HealthCheckState struct {
	ChildHealthThreshold         pulumi.IntPtrInput
	ChildHealthchecks            pulumi.StringArrayInput
	CloudwatchAlarmName          pulumi.StringPtrInput
	CloudwatchAlarmRegion        pulumi.StringPtrInput
	EnableSni                    pulumi.BoolPtrInput
	FailureThreshold             pulumi.IntPtrInput
	Fqdn                         pulumi.StringPtrInput
	InsufficientDataHealthStatus pulumi.StringPtrInput
	InvertHealthcheck            pulumi.BoolPtrInput
	IpAddress                    pulumi.StringPtrInput
	MeasureLatency               pulumi.BoolPtrInput
	Port                         pulumi.IntPtrInput
	ReferenceName                pulumi.StringPtrInput
	Regions                      pulumi.StringArrayInput
	RequestInterval              pulumi.IntPtrInput
	ResourcePath                 pulumi.StringPtrInput
	SearchString                 pulumi.StringPtrInput
	Tags                         pulumi.StringMapInput
	Type                         pulumi.StringPtrInput
}

func (HealthCheckState) ElementType() reflect.Type {
	return reflect.TypeOf((*healthCheckState)(nil)).Elem()
}

type healthCheckArgs struct {
	ChildHealthThreshold         *int              `pulumi:"childHealthThreshold"`
	ChildHealthchecks            []string          `pulumi:"childHealthchecks"`
	CloudwatchAlarmName          *string           `pulumi:"cloudwatchAlarmName"`
	CloudwatchAlarmRegion        *string           `pulumi:"cloudwatchAlarmRegion"`
	EnableSni                    *bool             `pulumi:"enableSni"`
	FailureThreshold             *int              `pulumi:"failureThreshold"`
	Fqdn                         *string           `pulumi:"fqdn"`
	InsufficientDataHealthStatus *string           `pulumi:"insufficientDataHealthStatus"`
	InvertHealthcheck            *bool             `pulumi:"invertHealthcheck"`
	IpAddress                    *string           `pulumi:"ipAddress"`
	MeasureLatency               *bool             `pulumi:"measureLatency"`
	Port                         *int              `pulumi:"port"`
	ReferenceName                *string           `pulumi:"referenceName"`
	Regions                      []string          `pulumi:"regions"`
	RequestInterval              *int              `pulumi:"requestInterval"`
	ResourcePath                 *string           `pulumi:"resourcePath"`
	SearchString                 *string           `pulumi:"searchString"`
	Tags                         map[string]string `pulumi:"tags"`
	Type                         string            `pulumi:"type"`
}

// The set of arguments for constructing a HealthCheck resource.
type HealthCheckArgs struct {
	ChildHealthThreshold         pulumi.IntPtrInput
	ChildHealthchecks            pulumi.StringArrayInput
	CloudwatchAlarmName          pulumi.StringPtrInput
	CloudwatchAlarmRegion        pulumi.StringPtrInput
	EnableSni                    pulumi.BoolPtrInput
	FailureThreshold             pulumi.IntPtrInput
	Fqdn                         pulumi.StringPtrInput
	InsufficientDataHealthStatus pulumi.StringPtrInput
	InvertHealthcheck            pulumi.BoolPtrInput
	IpAddress                    pulumi.StringPtrInput
	MeasureLatency               pulumi.BoolPtrInput
	Port                         pulumi.IntPtrInput
	ReferenceName                pulumi.StringPtrInput
	Regions                      pulumi.StringArrayInput
	RequestInterval              pulumi.IntPtrInput
	ResourcePath                 pulumi.StringPtrInput
	SearchString                 pulumi.StringPtrInput
	Tags                         pulumi.StringMapInput
	Type                         pulumi.StringInput
}

func (HealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*healthCheckArgs)(nil)).Elem()
}
