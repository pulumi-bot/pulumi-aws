// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package inspector

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AssessmentTemplate struct {
	pulumi.CustomResourceState

	Arn              pulumi.StringOutput      `pulumi:"arn"`
	Duration         pulumi.IntOutput         `pulumi:"duration"`
	Name             pulumi.StringOutput      `pulumi:"name"`
	RulesPackageArns pulumi.StringArrayOutput `pulumi:"rulesPackageArns"`
	Tags             pulumi.StringMapOutput   `pulumi:"tags"`
	TargetArn        pulumi.StringOutput      `pulumi:"targetArn"`
}

// NewAssessmentTemplate registers a new resource with the given unique name, arguments, and options.
func NewAssessmentTemplate(ctx *pulumi.Context,
	name string, args *AssessmentTemplateArgs, opts ...pulumi.ResourceOption) (*AssessmentTemplate, error) {
	if args == nil || args.Duration == nil {
		return nil, errors.New("missing required argument 'Duration'")
	}
	if args == nil || args.RulesPackageArns == nil {
		return nil, errors.New("missing required argument 'RulesPackageArns'")
	}
	if args == nil || args.TargetArn == nil {
		return nil, errors.New("missing required argument 'TargetArn'")
	}
	if args == nil {
		args = &AssessmentTemplateArgs{}
	}
	var resource AssessmentTemplate
	err := ctx.RegisterResource("aws:inspector/assessmentTemplate:AssessmentTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAssessmentTemplate gets an existing AssessmentTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAssessmentTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AssessmentTemplateState, opts ...pulumi.ResourceOption) (*AssessmentTemplate, error) {
	var resource AssessmentTemplate
	err := ctx.ReadResource("aws:inspector/assessmentTemplate:AssessmentTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AssessmentTemplate resources.
type assessmentTemplateState struct {
	Arn              *string           `pulumi:"arn"`
	Duration         *int              `pulumi:"duration"`
	Name             *string           `pulumi:"name"`
	RulesPackageArns []string          `pulumi:"rulesPackageArns"`
	Tags             map[string]string `pulumi:"tags"`
	TargetArn        *string           `pulumi:"targetArn"`
}

type AssessmentTemplateState struct {
	Arn              pulumi.StringPtrInput
	Duration         pulumi.IntPtrInput
	Name             pulumi.StringPtrInput
	RulesPackageArns pulumi.StringArrayInput
	Tags             pulumi.StringMapInput
	TargetArn        pulumi.StringPtrInput
}

func (AssessmentTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*assessmentTemplateState)(nil)).Elem()
}

type assessmentTemplateArgs struct {
	Duration         int               `pulumi:"duration"`
	Name             *string           `pulumi:"name"`
	RulesPackageArns []string          `pulumi:"rulesPackageArns"`
	Tags             map[string]string `pulumi:"tags"`
	TargetArn        string            `pulumi:"targetArn"`
}

// The set of arguments for constructing a AssessmentTemplate resource.
type AssessmentTemplateArgs struct {
	Duration         pulumi.IntInput
	Name             pulumi.StringPtrInput
	RulesPackageArns pulumi.StringArrayInput
	Tags             pulumi.StringMapInput
	TargetArn        pulumi.StringInput
}

func (AssessmentTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*assessmentTemplateArgs)(nil)).Elem()
}
