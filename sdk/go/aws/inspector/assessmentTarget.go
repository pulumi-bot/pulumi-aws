// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package inspector

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AssessmentTarget struct {
	pulumi.CustomResourceState

	Arn              pulumi.StringOutput    `pulumi:"arn"`
	Name             pulumi.StringOutput    `pulumi:"name"`
	ResourceGroupArn pulumi.StringPtrOutput `pulumi:"resourceGroupArn"`
}

// NewAssessmentTarget registers a new resource with the given unique name, arguments, and options.
func NewAssessmentTarget(ctx *pulumi.Context,
	name string, args *AssessmentTargetArgs, opts ...pulumi.ResourceOption) (*AssessmentTarget, error) {
	if args == nil {
		args = &AssessmentTargetArgs{}
	}
	var resource AssessmentTarget
	err := ctx.RegisterResource("aws:inspector/assessmentTarget:AssessmentTarget", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAssessmentTarget gets an existing AssessmentTarget resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAssessmentTarget(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AssessmentTargetState, opts ...pulumi.ResourceOption) (*AssessmentTarget, error) {
	var resource AssessmentTarget
	err := ctx.ReadResource("aws:inspector/assessmentTarget:AssessmentTarget", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AssessmentTarget resources.
type assessmentTargetState struct {
	Arn              *string `pulumi:"arn"`
	Name             *string `pulumi:"name"`
	ResourceGroupArn *string `pulumi:"resourceGroupArn"`
}

type AssessmentTargetState struct {
	Arn              pulumi.StringPtrInput
	Name             pulumi.StringPtrInput
	ResourceGroupArn pulumi.StringPtrInput
}

func (AssessmentTargetState) ElementType() reflect.Type {
	return reflect.TypeOf((*assessmentTargetState)(nil)).Elem()
}

type assessmentTargetArgs struct {
	Name             *string `pulumi:"name"`
	ResourceGroupArn *string `pulumi:"resourceGroupArn"`
}

// The set of arguments for constructing a AssessmentTarget resource.
type AssessmentTargetArgs struct {
	Name             pulumi.StringPtrInput
	ResourceGroupArn pulumi.StringPtrInput
}

func (AssessmentTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*assessmentTargetArgs)(nil)).Elem()
}
