// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Grant struct {
	pulumi.CustomResourceState

	Constraints         GrantConstraintArrayOutput `pulumi:"constraints"`
	GrantCreationTokens pulumi.StringArrayOutput   `pulumi:"grantCreationTokens"`
	GrantId             pulumi.StringOutput        `pulumi:"grantId"`
	GrantToken          pulumi.StringOutput        `pulumi:"grantToken"`
	GranteePrincipal    pulumi.StringOutput        `pulumi:"granteePrincipal"`
	KeyId               pulumi.StringOutput        `pulumi:"keyId"`
	Name                pulumi.StringOutput        `pulumi:"name"`
	Operations          pulumi.StringArrayOutput   `pulumi:"operations"`
	RetireOnDelete      pulumi.BoolPtrOutput       `pulumi:"retireOnDelete"`
	RetiringPrincipal   pulumi.StringPtrOutput     `pulumi:"retiringPrincipal"`
}

// NewGrant registers a new resource with the given unique name, arguments, and options.
func NewGrant(ctx *pulumi.Context,
	name string, args *GrantArgs, opts ...pulumi.ResourceOption) (*Grant, error) {
	if args == nil || args.GranteePrincipal == nil {
		return nil, errors.New("missing required argument 'GranteePrincipal'")
	}
	if args == nil || args.KeyId == nil {
		return nil, errors.New("missing required argument 'KeyId'")
	}
	if args == nil || args.Operations == nil {
		return nil, errors.New("missing required argument 'Operations'")
	}
	if args == nil {
		args = &GrantArgs{}
	}
	var resource Grant
	err := ctx.RegisterResource("aws:kms/grant:Grant", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGrant gets an existing Grant resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGrant(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GrantState, opts ...pulumi.ResourceOption) (*Grant, error) {
	var resource Grant
	err := ctx.ReadResource("aws:kms/grant:Grant", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Grant resources.
type grantState struct {
	Constraints         []GrantConstraint `pulumi:"constraints"`
	GrantCreationTokens []string          `pulumi:"grantCreationTokens"`
	GrantId             *string           `pulumi:"grantId"`
	GrantToken          *string           `pulumi:"grantToken"`
	GranteePrincipal    *string           `pulumi:"granteePrincipal"`
	KeyId               *string           `pulumi:"keyId"`
	Name                *string           `pulumi:"name"`
	Operations          []string          `pulumi:"operations"`
	RetireOnDelete      *bool             `pulumi:"retireOnDelete"`
	RetiringPrincipal   *string           `pulumi:"retiringPrincipal"`
}

type GrantState struct {
	Constraints         GrantConstraintArrayInput
	GrantCreationTokens pulumi.StringArrayInput
	GrantId             pulumi.StringPtrInput
	GrantToken          pulumi.StringPtrInput
	GranteePrincipal    pulumi.StringPtrInput
	KeyId               pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	Operations          pulumi.StringArrayInput
	RetireOnDelete      pulumi.BoolPtrInput
	RetiringPrincipal   pulumi.StringPtrInput
}

func (GrantState) ElementType() reflect.Type {
	return reflect.TypeOf((*grantState)(nil)).Elem()
}

type grantArgs struct {
	Constraints         []GrantConstraint `pulumi:"constraints"`
	GrantCreationTokens []string          `pulumi:"grantCreationTokens"`
	GranteePrincipal    string            `pulumi:"granteePrincipal"`
	KeyId               string            `pulumi:"keyId"`
	Name                *string           `pulumi:"name"`
	Operations          []string          `pulumi:"operations"`
	RetireOnDelete      *bool             `pulumi:"retireOnDelete"`
	RetiringPrincipal   *string           `pulumi:"retiringPrincipal"`
}

// The set of arguments for constructing a Grant resource.
type GrantArgs struct {
	Constraints         GrantConstraintArrayInput
	GrantCreationTokens pulumi.StringArrayInput
	GranteePrincipal    pulumi.StringInput
	KeyId               pulumi.StringInput
	Name                pulumi.StringPtrInput
	Operations          pulumi.StringArrayInput
	RetireOnDelete      pulumi.BoolPtrInput
	RetiringPrincipal   pulumi.StringPtrInput
}

func (GrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*grantArgs)(nil)).Elem()
}
