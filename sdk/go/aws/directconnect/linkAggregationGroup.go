// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package directconnect

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type LinkAggregationGroup struct {
	pulumi.CustomResourceState

	Arn                  pulumi.StringOutput    `pulumi:"arn"`
	ConnectionsBandwidth pulumi.StringOutput    `pulumi:"connectionsBandwidth"`
	ForceDestroy         pulumi.BoolPtrOutput   `pulumi:"forceDestroy"`
	HasLogicalRedundancy pulumi.StringOutput    `pulumi:"hasLogicalRedundancy"`
	JumboFrameCapable    pulumi.BoolOutput      `pulumi:"jumboFrameCapable"`
	Location             pulumi.StringOutput    `pulumi:"location"`
	Name                 pulumi.StringOutput    `pulumi:"name"`
	Tags                 pulumi.StringMapOutput `pulumi:"tags"`
}

// NewLinkAggregationGroup registers a new resource with the given unique name, arguments, and options.
func NewLinkAggregationGroup(ctx *pulumi.Context,
	name string, args *LinkAggregationGroupArgs, opts ...pulumi.ResourceOption) (*LinkAggregationGroup, error) {
	if args == nil || args.ConnectionsBandwidth == nil {
		return nil, errors.New("missing required argument 'ConnectionsBandwidth'")
	}
	if args == nil || args.Location == nil {
		return nil, errors.New("missing required argument 'Location'")
	}
	if args == nil {
		args = &LinkAggregationGroupArgs{}
	}
	var resource LinkAggregationGroup
	err := ctx.RegisterResource("aws:directconnect/linkAggregationGroup:LinkAggregationGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLinkAggregationGroup gets an existing LinkAggregationGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLinkAggregationGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LinkAggregationGroupState, opts ...pulumi.ResourceOption) (*LinkAggregationGroup, error) {
	var resource LinkAggregationGroup
	err := ctx.ReadResource("aws:directconnect/linkAggregationGroup:LinkAggregationGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LinkAggregationGroup resources.
type linkAggregationGroupState struct {
	Arn                  *string           `pulumi:"arn"`
	ConnectionsBandwidth *string           `pulumi:"connectionsBandwidth"`
	ForceDestroy         *bool             `pulumi:"forceDestroy"`
	HasLogicalRedundancy *string           `pulumi:"hasLogicalRedundancy"`
	JumboFrameCapable    *bool             `pulumi:"jumboFrameCapable"`
	Location             *string           `pulumi:"location"`
	Name                 *string           `pulumi:"name"`
	Tags                 map[string]string `pulumi:"tags"`
}

type LinkAggregationGroupState struct {
	Arn                  pulumi.StringPtrInput
	ConnectionsBandwidth pulumi.StringPtrInput
	ForceDestroy         pulumi.BoolPtrInput
	HasLogicalRedundancy pulumi.StringPtrInput
	JumboFrameCapable    pulumi.BoolPtrInput
	Location             pulumi.StringPtrInput
	Name                 pulumi.StringPtrInput
	Tags                 pulumi.StringMapInput
}

func (LinkAggregationGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*linkAggregationGroupState)(nil)).Elem()
}

type linkAggregationGroupArgs struct {
	ConnectionsBandwidth string            `pulumi:"connectionsBandwidth"`
	ForceDestroy         *bool             `pulumi:"forceDestroy"`
	Location             string            `pulumi:"location"`
	Name                 *string           `pulumi:"name"`
	Tags                 map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a LinkAggregationGroup resource.
type LinkAggregationGroupArgs struct {
	ConnectionsBandwidth pulumi.StringInput
	ForceDestroy         pulumi.BoolPtrInput
	Location             pulumi.StringInput
	Name                 pulumi.StringPtrInput
	Tags                 pulumi.StringMapInput
}

func (LinkAggregationGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*linkAggregationGroupArgs)(nil)).Elem()
}
