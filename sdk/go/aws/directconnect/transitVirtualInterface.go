// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package directconnect

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type TransitVirtualInterface struct {
	pulumi.CustomResourceState

	AddressFamily     pulumi.StringOutput    `pulumi:"addressFamily"`
	AmazonAddress     pulumi.StringOutput    `pulumi:"amazonAddress"`
	AmazonSideAsn     pulumi.StringOutput    `pulumi:"amazonSideAsn"`
	Arn               pulumi.StringOutput    `pulumi:"arn"`
	AwsDevice         pulumi.StringOutput    `pulumi:"awsDevice"`
	BgpAsn            pulumi.IntOutput       `pulumi:"bgpAsn"`
	BgpAuthKey        pulumi.StringOutput    `pulumi:"bgpAuthKey"`
	ConnectionId      pulumi.StringOutput    `pulumi:"connectionId"`
	CustomerAddress   pulumi.StringOutput    `pulumi:"customerAddress"`
	DxGatewayId       pulumi.StringOutput    `pulumi:"dxGatewayId"`
	JumboFrameCapable pulumi.BoolOutput      `pulumi:"jumboFrameCapable"`
	Mtu               pulumi.IntPtrOutput    `pulumi:"mtu"`
	Name              pulumi.StringOutput    `pulumi:"name"`
	Tags              pulumi.StringMapOutput `pulumi:"tags"`
	Vlan              pulumi.IntOutput       `pulumi:"vlan"`
}

// NewTransitVirtualInterface registers a new resource with the given unique name, arguments, and options.
func NewTransitVirtualInterface(ctx *pulumi.Context,
	name string, args *TransitVirtualInterfaceArgs, opts ...pulumi.ResourceOption) (*TransitVirtualInterface, error) {
	if args == nil || args.AddressFamily == nil {
		return nil, errors.New("missing required argument 'AddressFamily'")
	}
	if args == nil || args.BgpAsn == nil {
		return nil, errors.New("missing required argument 'BgpAsn'")
	}
	if args == nil || args.ConnectionId == nil {
		return nil, errors.New("missing required argument 'ConnectionId'")
	}
	if args == nil || args.DxGatewayId == nil {
		return nil, errors.New("missing required argument 'DxGatewayId'")
	}
	if args == nil || args.Vlan == nil {
		return nil, errors.New("missing required argument 'Vlan'")
	}
	if args == nil {
		args = &TransitVirtualInterfaceArgs{}
	}
	var resource TransitVirtualInterface
	err := ctx.RegisterResource("aws:directconnect/transitVirtualInterface:TransitVirtualInterface", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransitVirtualInterface gets an existing TransitVirtualInterface resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransitVirtualInterface(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransitVirtualInterfaceState, opts ...pulumi.ResourceOption) (*TransitVirtualInterface, error) {
	var resource TransitVirtualInterface
	err := ctx.ReadResource("aws:directconnect/transitVirtualInterface:TransitVirtualInterface", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransitVirtualInterface resources.
type transitVirtualInterfaceState struct {
	AddressFamily     *string           `pulumi:"addressFamily"`
	AmazonAddress     *string           `pulumi:"amazonAddress"`
	AmazonSideAsn     *string           `pulumi:"amazonSideAsn"`
	Arn               *string           `pulumi:"arn"`
	AwsDevice         *string           `pulumi:"awsDevice"`
	BgpAsn            *int              `pulumi:"bgpAsn"`
	BgpAuthKey        *string           `pulumi:"bgpAuthKey"`
	ConnectionId      *string           `pulumi:"connectionId"`
	CustomerAddress   *string           `pulumi:"customerAddress"`
	DxGatewayId       *string           `pulumi:"dxGatewayId"`
	JumboFrameCapable *bool             `pulumi:"jumboFrameCapable"`
	Mtu               *int              `pulumi:"mtu"`
	Name              *string           `pulumi:"name"`
	Tags              map[string]string `pulumi:"tags"`
	Vlan              *int              `pulumi:"vlan"`
}

type TransitVirtualInterfaceState struct {
	AddressFamily     pulumi.StringPtrInput
	AmazonAddress     pulumi.StringPtrInput
	AmazonSideAsn     pulumi.StringPtrInput
	Arn               pulumi.StringPtrInput
	AwsDevice         pulumi.StringPtrInput
	BgpAsn            pulumi.IntPtrInput
	BgpAuthKey        pulumi.StringPtrInput
	ConnectionId      pulumi.StringPtrInput
	CustomerAddress   pulumi.StringPtrInput
	DxGatewayId       pulumi.StringPtrInput
	JumboFrameCapable pulumi.BoolPtrInput
	Mtu               pulumi.IntPtrInput
	Name              pulumi.StringPtrInput
	Tags              pulumi.StringMapInput
	Vlan              pulumi.IntPtrInput
}

func (TransitVirtualInterfaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*transitVirtualInterfaceState)(nil)).Elem()
}

type transitVirtualInterfaceArgs struct {
	AddressFamily   string            `pulumi:"addressFamily"`
	AmazonAddress   *string           `pulumi:"amazonAddress"`
	BgpAsn          int               `pulumi:"bgpAsn"`
	BgpAuthKey      *string           `pulumi:"bgpAuthKey"`
	ConnectionId    string            `pulumi:"connectionId"`
	CustomerAddress *string           `pulumi:"customerAddress"`
	DxGatewayId     string            `pulumi:"dxGatewayId"`
	Mtu             *int              `pulumi:"mtu"`
	Name            *string           `pulumi:"name"`
	Tags            map[string]string `pulumi:"tags"`
	Vlan            int               `pulumi:"vlan"`
}

// The set of arguments for constructing a TransitVirtualInterface resource.
type TransitVirtualInterfaceArgs struct {
	AddressFamily   pulumi.StringInput
	AmazonAddress   pulumi.StringPtrInput
	BgpAsn          pulumi.IntInput
	BgpAuthKey      pulumi.StringPtrInput
	ConnectionId    pulumi.StringInput
	CustomerAddress pulumi.StringPtrInput
	DxGatewayId     pulumi.StringInput
	Mtu             pulumi.IntPtrInput
	Name            pulumi.StringPtrInput
	Tags            pulumi.StringMapInput
	Vlan            pulumi.IntInput
}

func (TransitVirtualInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transitVirtualInterfaceArgs)(nil)).Elem()
}
