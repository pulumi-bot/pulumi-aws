// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package AppCampaignHook

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type AppCampaignHook struct {
	// Lambda function name or ARN to be called for delivery. Conflicts with `webUrl`
	LambdaFunctionName *string `pulumi:"lambdaFunctionName"`
	// What mode Lambda should be invoked in. Valid values for this parameter are `DELIVERY`, `FILTER`.  
	Mode *string `pulumi:"mode"`
	// Web URL to call for hook. If the URL has authentication specified it will be added as authentication to the request. Conflicts with `lambdaFunctionName`
	WebUrl *string `pulumi:"webUrl"`
}

type AppCampaignHookInput interface {
	pulumi.Input

	ToAppCampaignHookOutput() AppCampaignHookOutput
	ToAppCampaignHookOutputWithContext(context.Context) AppCampaignHookOutput
}

type AppCampaignHookArgs struct {
	// Lambda function name or ARN to be called for delivery. Conflicts with `webUrl`
	LambdaFunctionName pulumi.StringPtrInput `pulumi:"lambdaFunctionName"`
	// What mode Lambda should be invoked in. Valid values for this parameter are `DELIVERY`, `FILTER`.  
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Web URL to call for hook. If the URL has authentication specified it will be added as authentication to the request. Conflicts with `lambdaFunctionName`
	WebUrl pulumi.StringPtrInput `pulumi:"webUrl"`
}

func (AppCampaignHookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppCampaignHook)(nil)).Elem()
}

func (i AppCampaignHookArgs) ToAppCampaignHookOutput() AppCampaignHookOutput {
	return i.ToAppCampaignHookOutputWithContext(context.Background())
}

func (i AppCampaignHookArgs) ToAppCampaignHookOutputWithContext(ctx context.Context) AppCampaignHookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppCampaignHookOutput)
}

func (i AppCampaignHookArgs) ToAppCampaignHookPtrOutput() AppCampaignHookPtrOutput {
	return i.ToAppCampaignHookPtrOutputWithContext(context.Background())
}

func (i AppCampaignHookArgs) ToAppCampaignHookPtrOutputWithContext(ctx context.Context) AppCampaignHookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppCampaignHookOutput).ToAppCampaignHookPtrOutputWithContext(ctx)
}

type AppCampaignHookPtrInput interface {
	pulumi.Input

	ToAppCampaignHookPtrOutput() AppCampaignHookPtrOutput
	ToAppCampaignHookPtrOutputWithContext(context.Context) AppCampaignHookPtrOutput
}

type appCampaignHookPtrType AppCampaignHookArgs

func AppCampaignHookPtr(v *AppCampaignHookArgs) AppCampaignHookPtrInput {	return (*appCampaignHookPtrType)(v)
}

func (*appCampaignHookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppCampaignHook)(nil)).Elem()
}

func (i *appCampaignHookPtrType) ToAppCampaignHookPtrOutput() AppCampaignHookPtrOutput {
	return i.ToAppCampaignHookPtrOutputWithContext(context.Background())
}

func (i *appCampaignHookPtrType) ToAppCampaignHookPtrOutputWithContext(ctx context.Context) AppCampaignHookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppCampaignHookPtrOutput)
}

type AppCampaignHookOutput struct { *pulumi.OutputState }

func (AppCampaignHookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppCampaignHook)(nil)).Elem()
}

func (o AppCampaignHookOutput) ToAppCampaignHookOutput() AppCampaignHookOutput {
	return o
}

func (o AppCampaignHookOutput) ToAppCampaignHookOutputWithContext(ctx context.Context) AppCampaignHookOutput {
	return o
}

func (o AppCampaignHookOutput) ToAppCampaignHookPtrOutput() AppCampaignHookPtrOutput {
	return o.ToAppCampaignHookPtrOutputWithContext(context.Background())
}

func (o AppCampaignHookOutput) ToAppCampaignHookPtrOutputWithContext(ctx context.Context) AppCampaignHookPtrOutput {
	return o.ApplyT(func(v AppCampaignHook) *AppCampaignHook {
		return &v
	}).(AppCampaignHookPtrOutput)
}
// Lambda function name or ARN to be called for delivery. Conflicts with `webUrl`
func (o AppCampaignHookOutput) LambdaFunctionName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v AppCampaignHook) *string { return v.LambdaFunctionName }).(pulumi.StringPtrOutput)
}

// What mode Lambda should be invoked in. Valid values for this parameter are `DELIVERY`, `FILTER`.  
func (o AppCampaignHookOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func (v AppCampaignHook) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Web URL to call for hook. If the URL has authentication specified it will be added as authentication to the request. Conflicts with `lambdaFunctionName`
func (o AppCampaignHookOutput) WebUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func (v AppCampaignHook) *string { return v.WebUrl }).(pulumi.StringPtrOutput)
}

type AppCampaignHookPtrOutput struct { *pulumi.OutputState}

func (AppCampaignHookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppCampaignHook)(nil)).Elem()
}

func (o AppCampaignHookPtrOutput) ToAppCampaignHookPtrOutput() AppCampaignHookPtrOutput {
	return o
}

func (o AppCampaignHookPtrOutput) ToAppCampaignHookPtrOutputWithContext(ctx context.Context) AppCampaignHookPtrOutput {
	return o
}

func (o AppCampaignHookPtrOutput) Elem() AppCampaignHookOutput {
	return o.ApplyT(func (v *AppCampaignHook) AppCampaignHook { return *v }).(AppCampaignHookOutput)
}

// Lambda function name or ARN to be called for delivery. Conflicts with `webUrl`
func (o AppCampaignHookPtrOutput) LambdaFunctionName() pulumi.StringPtrOutput {
	return o.ApplyT(func (v AppCampaignHook) *string { return v.LambdaFunctionName }).(pulumi.StringPtrOutput)
}

// What mode Lambda should be invoked in. Valid values for this parameter are `DELIVERY`, `FILTER`.  
func (o AppCampaignHookPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func (v AppCampaignHook) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Web URL to call for hook. If the URL has authentication specified it will be added as authentication to the request. Conflicts with `lambdaFunctionName`
func (o AppCampaignHookPtrOutput) WebUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func (v AppCampaignHook) *string { return v.WebUrl }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AppCampaignHookOutput{})
	pulumi.RegisterOutputType(AppCampaignHookPtrOutput{})
}
