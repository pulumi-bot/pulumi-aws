// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package pinpoint

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type App struct {
	pulumi.CustomResourceState

	ApplicationId pulumi.StringOutput      `pulumi:"applicationId"`
	Arn           pulumi.StringOutput      `pulumi:"arn"`
	CampaignHook  AppCampaignHookPtrOutput `pulumi:"campaignHook"`
	Limits        AppLimitsPtrOutput       `pulumi:"limits"`
	Name          pulumi.StringOutput      `pulumi:"name"`
	NamePrefix    pulumi.StringPtrOutput   `pulumi:"namePrefix"`
	QuietTime     AppQuietTimePtrOutput    `pulumi:"quietTime"`
	Tags          pulumi.StringMapOutput   `pulumi:"tags"`
}

// NewApp registers a new resource with the given unique name, arguments, and options.
func NewApp(ctx *pulumi.Context,
	name string, args *AppArgs, opts ...pulumi.ResourceOption) (*App, error) {
	if args == nil {
		args = &AppArgs{}
	}
	var resource App
	err := ctx.RegisterResource("aws:pinpoint/app:App", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApp gets an existing App resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppState, opts ...pulumi.ResourceOption) (*App, error) {
	var resource App
	err := ctx.ReadResource("aws:pinpoint/app:App", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering App resources.
type appState struct {
	ApplicationId *string           `pulumi:"applicationId"`
	Arn           *string           `pulumi:"arn"`
	CampaignHook  *AppCampaignHook  `pulumi:"campaignHook"`
	Limits        *AppLimits        `pulumi:"limits"`
	Name          *string           `pulumi:"name"`
	NamePrefix    *string           `pulumi:"namePrefix"`
	QuietTime     *AppQuietTime     `pulumi:"quietTime"`
	Tags          map[string]string `pulumi:"tags"`
}

type AppState struct {
	ApplicationId pulumi.StringPtrInput
	Arn           pulumi.StringPtrInput
	CampaignHook  AppCampaignHookPtrInput
	Limits        AppLimitsPtrInput
	Name          pulumi.StringPtrInput
	NamePrefix    pulumi.StringPtrInput
	QuietTime     AppQuietTimePtrInput
	Tags          pulumi.StringMapInput
}

func (AppState) ElementType() reflect.Type {
	return reflect.TypeOf((*appState)(nil)).Elem()
}

type appArgs struct {
	CampaignHook *AppCampaignHook  `pulumi:"campaignHook"`
	Limits       *AppLimits        `pulumi:"limits"`
	Name         *string           `pulumi:"name"`
	NamePrefix   *string           `pulumi:"namePrefix"`
	QuietTime    *AppQuietTime     `pulumi:"quietTime"`
	Tags         map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a App resource.
type AppArgs struct {
	CampaignHook AppCampaignHookPtrInput
	Limits       AppLimitsPtrInput
	Name         pulumi.StringPtrInput
	NamePrefix   pulumi.StringPtrInput
	QuietTime    AppQuietTimePtrInput
	Tags         pulumi.StringMapInput
}

func (AppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appArgs)(nil)).Elem()
}
