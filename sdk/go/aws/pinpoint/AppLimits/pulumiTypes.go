// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package AppLimits

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type AppLimits struct {
	// The maximum number of messages that the campaign can send daily. 
	Daily *int `pulumi:"daily"`
	// The length of time (in seconds) that the campaign can run before it ends and message deliveries stop. This duration begins at the scheduled start time for the campaign. The minimum value is 60.
	MaximumDuration *int `pulumi:"maximumDuration"`
	// The number of messages that the campaign can send per second. The minimum value is 50, and the maximum is 20000.
	MessagesPerSecond *int `pulumi:"messagesPerSecond"`
	// The maximum total number of messages that the campaign can send.
	Total *int `pulumi:"total"`
}

type AppLimitsInput interface {
	pulumi.Input

	ToAppLimitsOutput() AppLimitsOutput
	ToAppLimitsOutputWithContext(context.Context) AppLimitsOutput
}

type AppLimitsArgs struct {
	// The maximum number of messages that the campaign can send daily. 
	Daily pulumi.IntPtrInput `pulumi:"daily"`
	// The length of time (in seconds) that the campaign can run before it ends and message deliveries stop. This duration begins at the scheduled start time for the campaign. The minimum value is 60.
	MaximumDuration pulumi.IntPtrInput `pulumi:"maximumDuration"`
	// The number of messages that the campaign can send per second. The minimum value is 50, and the maximum is 20000.
	MessagesPerSecond pulumi.IntPtrInput `pulumi:"messagesPerSecond"`
	// The maximum total number of messages that the campaign can send.
	Total pulumi.IntPtrInput `pulumi:"total"`
}

func (AppLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppLimits)(nil)).Elem()
}

func (i AppLimitsArgs) ToAppLimitsOutput() AppLimitsOutput {
	return i.ToAppLimitsOutputWithContext(context.Background())
}

func (i AppLimitsArgs) ToAppLimitsOutputWithContext(ctx context.Context) AppLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppLimitsOutput)
}

func (i AppLimitsArgs) ToAppLimitsPtrOutput() AppLimitsPtrOutput {
	return i.ToAppLimitsPtrOutputWithContext(context.Background())
}

func (i AppLimitsArgs) ToAppLimitsPtrOutputWithContext(ctx context.Context) AppLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppLimitsOutput).ToAppLimitsPtrOutputWithContext(ctx)
}

type AppLimitsPtrInput interface {
	pulumi.Input

	ToAppLimitsPtrOutput() AppLimitsPtrOutput
	ToAppLimitsPtrOutputWithContext(context.Context) AppLimitsPtrOutput
}

type appLimitsPtrType AppLimitsArgs

func AppLimitsPtr(v *AppLimitsArgs) AppLimitsPtrInput {	return (*appLimitsPtrType)(v)
}

func (*appLimitsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppLimits)(nil)).Elem()
}

func (i *appLimitsPtrType) ToAppLimitsPtrOutput() AppLimitsPtrOutput {
	return i.ToAppLimitsPtrOutputWithContext(context.Background())
}

func (i *appLimitsPtrType) ToAppLimitsPtrOutputWithContext(ctx context.Context) AppLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppLimitsPtrOutput)
}

type AppLimitsOutput struct { *pulumi.OutputState }

func (AppLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppLimits)(nil)).Elem()
}

func (o AppLimitsOutput) ToAppLimitsOutput() AppLimitsOutput {
	return o
}

func (o AppLimitsOutput) ToAppLimitsOutputWithContext(ctx context.Context) AppLimitsOutput {
	return o
}

func (o AppLimitsOutput) ToAppLimitsPtrOutput() AppLimitsPtrOutput {
	return o.ToAppLimitsPtrOutputWithContext(context.Background())
}

func (o AppLimitsOutput) ToAppLimitsPtrOutputWithContext(ctx context.Context) AppLimitsPtrOutput {
	return o.ApplyT(func(v AppLimits) *AppLimits {
		return &v
	}).(AppLimitsPtrOutput)
}
// The maximum number of messages that the campaign can send daily. 
func (o AppLimitsOutput) Daily() pulumi.IntPtrOutput {
	return o.ApplyT(func (v AppLimits) *int { return v.Daily }).(pulumi.IntPtrOutput)
}

// The length of time (in seconds) that the campaign can run before it ends and message deliveries stop. This duration begins at the scheduled start time for the campaign. The minimum value is 60.
func (o AppLimitsOutput) MaximumDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func (v AppLimits) *int { return v.MaximumDuration }).(pulumi.IntPtrOutput)
}

// The number of messages that the campaign can send per second. The minimum value is 50, and the maximum is 20000.
func (o AppLimitsOutput) MessagesPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func (v AppLimits) *int { return v.MessagesPerSecond }).(pulumi.IntPtrOutput)
}

// The maximum total number of messages that the campaign can send.
func (o AppLimitsOutput) Total() pulumi.IntPtrOutput {
	return o.ApplyT(func (v AppLimits) *int { return v.Total }).(pulumi.IntPtrOutput)
}

type AppLimitsPtrOutput struct { *pulumi.OutputState}

func (AppLimitsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppLimits)(nil)).Elem()
}

func (o AppLimitsPtrOutput) ToAppLimitsPtrOutput() AppLimitsPtrOutput {
	return o
}

func (o AppLimitsPtrOutput) ToAppLimitsPtrOutputWithContext(ctx context.Context) AppLimitsPtrOutput {
	return o
}

func (o AppLimitsPtrOutput) Elem() AppLimitsOutput {
	return o.ApplyT(func (v *AppLimits) AppLimits { return *v }).(AppLimitsOutput)
}

// The maximum number of messages that the campaign can send daily. 
func (o AppLimitsPtrOutput) Daily() pulumi.IntPtrOutput {
	return o.ApplyT(func (v AppLimits) *int { return v.Daily }).(pulumi.IntPtrOutput)
}

// The length of time (in seconds) that the campaign can run before it ends and message deliveries stop. This duration begins at the scheduled start time for the campaign. The minimum value is 60.
func (o AppLimitsPtrOutput) MaximumDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func (v AppLimits) *int { return v.MaximumDuration }).(pulumi.IntPtrOutput)
}

// The number of messages that the campaign can send per second. The minimum value is 50, and the maximum is 20000.
func (o AppLimitsPtrOutput) MessagesPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func (v AppLimits) *int { return v.MessagesPerSecond }).(pulumi.IntPtrOutput)
}

// The maximum total number of messages that the campaign can send.
func (o AppLimitsPtrOutput) Total() pulumi.IntPtrOutput {
	return o.ApplyT(func (v AppLimits) *int { return v.Total }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AppLimitsOutput{})
	pulumi.RegisterOutputType(AppLimitsPtrOutput{})
}
