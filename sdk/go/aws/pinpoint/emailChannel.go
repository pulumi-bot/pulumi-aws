// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package pinpoint

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type EmailChannel struct {
	pulumi.CustomResourceState

	ApplicationId     pulumi.StringOutput  `pulumi:"applicationId"`
	Enabled           pulumi.BoolPtrOutput `pulumi:"enabled"`
	FromAddress       pulumi.StringOutput  `pulumi:"fromAddress"`
	Identity          pulumi.StringOutput  `pulumi:"identity"`
	MessagesPerSecond pulumi.IntOutput     `pulumi:"messagesPerSecond"`
	RoleArn           pulumi.StringOutput  `pulumi:"roleArn"`
}

// NewEmailChannel registers a new resource with the given unique name, arguments, and options.
func NewEmailChannel(ctx *pulumi.Context,
	name string, args *EmailChannelArgs, opts ...pulumi.ResourceOption) (*EmailChannel, error) {
	if args == nil || args.ApplicationId == nil {
		return nil, errors.New("missing required argument 'ApplicationId'")
	}
	if args == nil || args.FromAddress == nil {
		return nil, errors.New("missing required argument 'FromAddress'")
	}
	if args == nil || args.Identity == nil {
		return nil, errors.New("missing required argument 'Identity'")
	}
	if args == nil || args.RoleArn == nil {
		return nil, errors.New("missing required argument 'RoleArn'")
	}
	if args == nil {
		args = &EmailChannelArgs{}
	}
	var resource EmailChannel
	err := ctx.RegisterResource("aws:pinpoint/emailChannel:EmailChannel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEmailChannel gets an existing EmailChannel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEmailChannel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EmailChannelState, opts ...pulumi.ResourceOption) (*EmailChannel, error) {
	var resource EmailChannel
	err := ctx.ReadResource("aws:pinpoint/emailChannel:EmailChannel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EmailChannel resources.
type emailChannelState struct {
	ApplicationId     *string `pulumi:"applicationId"`
	Enabled           *bool   `pulumi:"enabled"`
	FromAddress       *string `pulumi:"fromAddress"`
	Identity          *string `pulumi:"identity"`
	MessagesPerSecond *int    `pulumi:"messagesPerSecond"`
	RoleArn           *string `pulumi:"roleArn"`
}

type EmailChannelState struct {
	ApplicationId     pulumi.StringPtrInput
	Enabled           pulumi.BoolPtrInput
	FromAddress       pulumi.StringPtrInput
	Identity          pulumi.StringPtrInput
	MessagesPerSecond pulumi.IntPtrInput
	RoleArn           pulumi.StringPtrInput
}

func (EmailChannelState) ElementType() reflect.Type {
	return reflect.TypeOf((*emailChannelState)(nil)).Elem()
}

type emailChannelArgs struct {
	ApplicationId string `pulumi:"applicationId"`
	Enabled       *bool  `pulumi:"enabled"`
	FromAddress   string `pulumi:"fromAddress"`
	Identity      string `pulumi:"identity"`
	RoleArn       string `pulumi:"roleArn"`
}

// The set of arguments for constructing a EmailChannel resource.
type EmailChannelArgs struct {
	ApplicationId pulumi.StringInput
	Enabled       pulumi.BoolPtrInput
	FromAddress   pulumi.StringInput
	Identity      pulumi.StringInput
	RoleArn       pulumi.StringInput
}

func (EmailChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*emailChannelArgs)(nil)).Elem()
}
