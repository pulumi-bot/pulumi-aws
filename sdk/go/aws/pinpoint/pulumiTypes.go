// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package pinpoint

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type AppCampaignHook struct {
	// Lambda function name or ARN to be called for delivery. Conflicts with `webUrl`
	LambdaFunctionName *string `pulumi:"lambdaFunctionName"`
	// What mode Lambda should be invoked in. Valid values for this parameter are `DELIVERY`, `FILTER`.
	Mode *string `pulumi:"mode"`
	// Web URL to call for hook. If the URL has authentication specified it will be added as authentication to the request. Conflicts with `lambdaFunctionName`
	WebUrl *string `pulumi:"webUrl"`
}

type AppCampaignHookInput interface {
	pulumi.Input

	ToAppCampaignHookOutput() AppCampaignHookOutput
	ToAppCampaignHookOutputWithContext(context.Context) AppCampaignHookOutput
}

type AppCampaignHookArgs struct {
	// Lambda function name or ARN to be called for delivery. Conflicts with `webUrl`
	LambdaFunctionName pulumi.StringPtrInput `pulumi:"lambdaFunctionName"`
	// What mode Lambda should be invoked in. Valid values for this parameter are `DELIVERY`, `FILTER`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Web URL to call for hook. If the URL has authentication specified it will be added as authentication to the request. Conflicts with `lambdaFunctionName`
	WebUrl pulumi.StringPtrInput `pulumi:"webUrl"`
}

func (AppCampaignHookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppCampaignHook)(nil)).Elem()
}

func (i AppCampaignHookArgs) ToAppCampaignHookOutput() AppCampaignHookOutput {
	return i.ToAppCampaignHookOutputWithContext(context.Background())
}

func (i AppCampaignHookArgs) ToAppCampaignHookOutputWithContext(ctx context.Context) AppCampaignHookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppCampaignHookOutput)
}

func (i AppCampaignHookArgs) ToAppCampaignHookPtrOutput() AppCampaignHookPtrOutput {
	return i.ToAppCampaignHookPtrOutputWithContext(context.Background())
}

func (i AppCampaignHookArgs) ToAppCampaignHookPtrOutputWithContext(ctx context.Context) AppCampaignHookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppCampaignHookOutput).ToAppCampaignHookPtrOutputWithContext(ctx)
}

type AppCampaignHookPtrInput interface {
	pulumi.Input

	ToAppCampaignHookPtrOutput() AppCampaignHookPtrOutput
	ToAppCampaignHookPtrOutputWithContext(context.Context) AppCampaignHookPtrOutput
}

type appCampaignHookPtrType AppCampaignHookArgs

func AppCampaignHookPtr(v *AppCampaignHookArgs) AppCampaignHookPtrInput {
	return (*appCampaignHookPtrType)(v)
}

func (*appCampaignHookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppCampaignHook)(nil)).Elem()
}

func (i *appCampaignHookPtrType) ToAppCampaignHookPtrOutput() AppCampaignHookPtrOutput {
	return i.ToAppCampaignHookPtrOutputWithContext(context.Background())
}

func (i *appCampaignHookPtrType) ToAppCampaignHookPtrOutputWithContext(ctx context.Context) AppCampaignHookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppCampaignHookPtrOutput)
}

type AppCampaignHookOutput struct{ *pulumi.OutputState }

func (AppCampaignHookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppCampaignHook)(nil)).Elem()
}

func (o AppCampaignHookOutput) ToAppCampaignHookOutput() AppCampaignHookOutput {
	return o
}

func (o AppCampaignHookOutput) ToAppCampaignHookOutputWithContext(ctx context.Context) AppCampaignHookOutput {
	return o
}

func (o AppCampaignHookOutput) ToAppCampaignHookPtrOutput() AppCampaignHookPtrOutput {
	return o.ToAppCampaignHookPtrOutputWithContext(context.Background())
}

func (o AppCampaignHookOutput) ToAppCampaignHookPtrOutputWithContext(ctx context.Context) AppCampaignHookPtrOutput {
	return o.ApplyT(func(v AppCampaignHook) *AppCampaignHook {
		return &v
	}).(AppCampaignHookPtrOutput)
}

// Lambda function name or ARN to be called for delivery. Conflicts with `webUrl`
func (o AppCampaignHookOutput) LambdaFunctionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppCampaignHook) *string { return v.LambdaFunctionName }).(pulumi.StringPtrOutput)
}

// What mode Lambda should be invoked in. Valid values for this parameter are `DELIVERY`, `FILTER`.
func (o AppCampaignHookOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppCampaignHook) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Web URL to call for hook. If the URL has authentication specified it will be added as authentication to the request. Conflicts with `lambdaFunctionName`
func (o AppCampaignHookOutput) WebUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppCampaignHook) *string { return v.WebUrl }).(pulumi.StringPtrOutput)
}

type AppCampaignHookPtrOutput struct{ *pulumi.OutputState }

func (AppCampaignHookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppCampaignHook)(nil)).Elem()
}

func (o AppCampaignHookPtrOutput) ToAppCampaignHookPtrOutput() AppCampaignHookPtrOutput {
	return o
}

func (o AppCampaignHookPtrOutput) ToAppCampaignHookPtrOutputWithContext(ctx context.Context) AppCampaignHookPtrOutput {
	return o
}

func (o AppCampaignHookPtrOutput) Elem() AppCampaignHookOutput {
	return o.ApplyT(func(v *AppCampaignHook) AppCampaignHook { return *v }).(AppCampaignHookOutput)
}

// Lambda function name or ARN to be called for delivery. Conflicts with `webUrl`
func (o AppCampaignHookPtrOutput) LambdaFunctionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppCampaignHook) *string { return v.LambdaFunctionName }).(pulumi.StringPtrOutput)
}

// What mode Lambda should be invoked in. Valid values for this parameter are `DELIVERY`, `FILTER`.
func (o AppCampaignHookPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppCampaignHook) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Web URL to call for hook. If the URL has authentication specified it will be added as authentication to the request. Conflicts with `lambdaFunctionName`
func (o AppCampaignHookPtrOutput) WebUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppCampaignHook) *string { return v.WebUrl }).(pulumi.StringPtrOutput)
}

type AppCampaignHookArgs struct {
	// Lambda function name or ARN to be called for delivery. Conflicts with `webUrl`
	LambdaFunctionName *string `pulumi:"lambdaFunctionName"`
	// What mode Lambda should be invoked in. Valid values for this parameter are `DELIVERY`, `FILTER`.
	Mode *string `pulumi:"mode"`
	// Web URL to call for hook. If the URL has authentication specified it will be added as authentication to the request. Conflicts with `lambdaFunctionName`
	WebUrl *string `pulumi:"webUrl"`
}

type AppCampaignHookArgsInput interface {
	pulumi.Input

	ToAppCampaignHookArgsOutput() AppCampaignHookArgsOutput
	ToAppCampaignHookArgsOutputWithContext(context.Context) AppCampaignHookArgsOutput
}

type AppCampaignHookArgsArgs struct {
	// Lambda function name or ARN to be called for delivery. Conflicts with `webUrl`
	LambdaFunctionName pulumi.StringPtrInput `pulumi:"lambdaFunctionName"`
	// What mode Lambda should be invoked in. Valid values for this parameter are `DELIVERY`, `FILTER`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Web URL to call for hook. If the URL has authentication specified it will be added as authentication to the request. Conflicts with `lambdaFunctionName`
	WebUrl pulumi.StringPtrInput `pulumi:"webUrl"`
}

func (AppCampaignHookArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppCampaignHookArgs)(nil)).Elem()
}

func (i AppCampaignHookArgsArgs) ToAppCampaignHookArgsOutput() AppCampaignHookArgsOutput {
	return i.ToAppCampaignHookArgsOutputWithContext(context.Background())
}

func (i AppCampaignHookArgsArgs) ToAppCampaignHookArgsOutputWithContext(ctx context.Context) AppCampaignHookArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppCampaignHookArgsOutput)
}

func (i AppCampaignHookArgsArgs) ToAppCampaignHookArgsPtrOutput() AppCampaignHookArgsPtrOutput {
	return i.ToAppCampaignHookArgsPtrOutputWithContext(context.Background())
}

func (i AppCampaignHookArgsArgs) ToAppCampaignHookArgsPtrOutputWithContext(ctx context.Context) AppCampaignHookArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppCampaignHookArgsOutput).ToAppCampaignHookArgsPtrOutputWithContext(ctx)
}

type AppCampaignHookArgsPtrInput interface {
	pulumi.Input

	ToAppCampaignHookArgsPtrOutput() AppCampaignHookArgsPtrOutput
	ToAppCampaignHookArgsPtrOutputWithContext(context.Context) AppCampaignHookArgsPtrOutput
}

type appCampaignHookArgsPtrType AppCampaignHookArgsArgs

func AppCampaignHookArgsPtr(v *AppCampaignHookArgsArgs) AppCampaignHookArgsPtrInput {
	return (*appCampaignHookArgsPtrType)(v)
}

func (*appCampaignHookArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppCampaignHookArgs)(nil)).Elem()
}

func (i *appCampaignHookArgsPtrType) ToAppCampaignHookArgsPtrOutput() AppCampaignHookArgsPtrOutput {
	return i.ToAppCampaignHookArgsPtrOutputWithContext(context.Background())
}

func (i *appCampaignHookArgsPtrType) ToAppCampaignHookArgsPtrOutputWithContext(ctx context.Context) AppCampaignHookArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppCampaignHookArgsPtrOutput)
}

type AppCampaignHookArgsOutput struct{ *pulumi.OutputState }

func (AppCampaignHookArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppCampaignHookArgs)(nil)).Elem()
}

func (o AppCampaignHookArgsOutput) ToAppCampaignHookArgsOutput() AppCampaignHookArgsOutput {
	return o
}

func (o AppCampaignHookArgsOutput) ToAppCampaignHookArgsOutputWithContext(ctx context.Context) AppCampaignHookArgsOutput {
	return o
}

func (o AppCampaignHookArgsOutput) ToAppCampaignHookArgsPtrOutput() AppCampaignHookArgsPtrOutput {
	return o.ToAppCampaignHookArgsPtrOutputWithContext(context.Background())
}

func (o AppCampaignHookArgsOutput) ToAppCampaignHookArgsPtrOutputWithContext(ctx context.Context) AppCampaignHookArgsPtrOutput {
	return o.ApplyT(func(v AppCampaignHookArgs) *AppCampaignHookArgs {
		return &v
	}).(AppCampaignHookArgsPtrOutput)
}

// Lambda function name or ARN to be called for delivery. Conflicts with `webUrl`
func (o AppCampaignHookArgsOutput) LambdaFunctionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppCampaignHookArgs) *string { return v.LambdaFunctionName }).(pulumi.StringPtrOutput)
}

// What mode Lambda should be invoked in. Valid values for this parameter are `DELIVERY`, `FILTER`.
func (o AppCampaignHookArgsOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppCampaignHookArgs) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Web URL to call for hook. If the URL has authentication specified it will be added as authentication to the request. Conflicts with `lambdaFunctionName`
func (o AppCampaignHookArgsOutput) WebUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppCampaignHookArgs) *string { return v.WebUrl }).(pulumi.StringPtrOutput)
}

type AppCampaignHookArgsPtrOutput struct{ *pulumi.OutputState }

func (AppCampaignHookArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppCampaignHookArgs)(nil)).Elem()
}

func (o AppCampaignHookArgsPtrOutput) ToAppCampaignHookArgsPtrOutput() AppCampaignHookArgsPtrOutput {
	return o
}

func (o AppCampaignHookArgsPtrOutput) ToAppCampaignHookArgsPtrOutputWithContext(ctx context.Context) AppCampaignHookArgsPtrOutput {
	return o
}

func (o AppCampaignHookArgsPtrOutput) Elem() AppCampaignHookArgsOutput {
	return o.ApplyT(func(v *AppCampaignHookArgs) AppCampaignHookArgs { return *v }).(AppCampaignHookArgsOutput)
}

// Lambda function name or ARN to be called for delivery. Conflicts with `webUrl`
func (o AppCampaignHookArgsPtrOutput) LambdaFunctionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppCampaignHookArgs) *string { return v.LambdaFunctionName }).(pulumi.StringPtrOutput)
}

// What mode Lambda should be invoked in. Valid values for this parameter are `DELIVERY`, `FILTER`.
func (o AppCampaignHookArgsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppCampaignHookArgs) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Web URL to call for hook. If the URL has authentication specified it will be added as authentication to the request. Conflicts with `lambdaFunctionName`
func (o AppCampaignHookArgsPtrOutput) WebUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppCampaignHookArgs) *string { return v.WebUrl }).(pulumi.StringPtrOutput)
}

type AppCampaignHookState struct {
	// Lambda function name or ARN to be called for delivery. Conflicts with `webUrl`
	LambdaFunctionName *string `pulumi:"lambdaFunctionName"`
	// What mode Lambda should be invoked in. Valid values for this parameter are `DELIVERY`, `FILTER`.
	Mode *string `pulumi:"mode"`
	// Web URL to call for hook. If the URL has authentication specified it will be added as authentication to the request. Conflicts with `lambdaFunctionName`
	WebUrl *string `pulumi:"webUrl"`
}

type AppCampaignHookStateInput interface {
	pulumi.Input

	ToAppCampaignHookStateOutput() AppCampaignHookStateOutput
	ToAppCampaignHookStateOutputWithContext(context.Context) AppCampaignHookStateOutput
}

type AppCampaignHookStateArgs struct {
	// Lambda function name or ARN to be called for delivery. Conflicts with `webUrl`
	LambdaFunctionName pulumi.StringPtrInput `pulumi:"lambdaFunctionName"`
	// What mode Lambda should be invoked in. Valid values for this parameter are `DELIVERY`, `FILTER`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Web URL to call for hook. If the URL has authentication specified it will be added as authentication to the request. Conflicts with `lambdaFunctionName`
	WebUrl pulumi.StringPtrInput `pulumi:"webUrl"`
}

func (AppCampaignHookStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppCampaignHookState)(nil)).Elem()
}

func (i AppCampaignHookStateArgs) ToAppCampaignHookStateOutput() AppCampaignHookStateOutput {
	return i.ToAppCampaignHookStateOutputWithContext(context.Background())
}

func (i AppCampaignHookStateArgs) ToAppCampaignHookStateOutputWithContext(ctx context.Context) AppCampaignHookStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppCampaignHookStateOutput)
}

type AppCampaignHookStateOutput struct{ *pulumi.OutputState }

func (AppCampaignHookStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppCampaignHookState)(nil)).Elem()
}

func (o AppCampaignHookStateOutput) ToAppCampaignHookStateOutput() AppCampaignHookStateOutput {
	return o
}

func (o AppCampaignHookStateOutput) ToAppCampaignHookStateOutputWithContext(ctx context.Context) AppCampaignHookStateOutput {
	return o
}

// Lambda function name or ARN to be called for delivery. Conflicts with `webUrl`
func (o AppCampaignHookStateOutput) LambdaFunctionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppCampaignHookState) *string { return v.LambdaFunctionName }).(pulumi.StringPtrOutput)
}

// What mode Lambda should be invoked in. Valid values for this parameter are `DELIVERY`, `FILTER`.
func (o AppCampaignHookStateOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppCampaignHookState) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Web URL to call for hook. If the URL has authentication specified it will be added as authentication to the request. Conflicts with `lambdaFunctionName`
func (o AppCampaignHookStateOutput) WebUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppCampaignHookState) *string { return v.WebUrl }).(pulumi.StringPtrOutput)
}

type AppLimits struct {
	// The maximum number of messages that the campaign can send daily.
	Daily *int `pulumi:"daily"`
	// The length of time (in seconds) that the campaign can run before it ends and message deliveries stop. This duration begins at the scheduled start time for the campaign. The minimum value is 60.
	MaximumDuration *int `pulumi:"maximumDuration"`
	// The number of messages that the campaign can send per second. The minimum value is 50, and the maximum is 20000.
	MessagesPerSecond *int `pulumi:"messagesPerSecond"`
	// The maximum total number of messages that the campaign can send.
	Total *int `pulumi:"total"`
}

type AppLimitsInput interface {
	pulumi.Input

	ToAppLimitsOutput() AppLimitsOutput
	ToAppLimitsOutputWithContext(context.Context) AppLimitsOutput
}

type AppLimitsArgs struct {
	// The maximum number of messages that the campaign can send daily.
	Daily pulumi.IntPtrInput `pulumi:"daily"`
	// The length of time (in seconds) that the campaign can run before it ends and message deliveries stop. This duration begins at the scheduled start time for the campaign. The minimum value is 60.
	MaximumDuration pulumi.IntPtrInput `pulumi:"maximumDuration"`
	// The number of messages that the campaign can send per second. The minimum value is 50, and the maximum is 20000.
	MessagesPerSecond pulumi.IntPtrInput `pulumi:"messagesPerSecond"`
	// The maximum total number of messages that the campaign can send.
	Total pulumi.IntPtrInput `pulumi:"total"`
}

func (AppLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppLimits)(nil)).Elem()
}

func (i AppLimitsArgs) ToAppLimitsOutput() AppLimitsOutput {
	return i.ToAppLimitsOutputWithContext(context.Background())
}

func (i AppLimitsArgs) ToAppLimitsOutputWithContext(ctx context.Context) AppLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppLimitsOutput)
}

func (i AppLimitsArgs) ToAppLimitsPtrOutput() AppLimitsPtrOutput {
	return i.ToAppLimitsPtrOutputWithContext(context.Background())
}

func (i AppLimitsArgs) ToAppLimitsPtrOutputWithContext(ctx context.Context) AppLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppLimitsOutput).ToAppLimitsPtrOutputWithContext(ctx)
}

type AppLimitsPtrInput interface {
	pulumi.Input

	ToAppLimitsPtrOutput() AppLimitsPtrOutput
	ToAppLimitsPtrOutputWithContext(context.Context) AppLimitsPtrOutput
}

type appLimitsPtrType AppLimitsArgs

func AppLimitsPtr(v *AppLimitsArgs) AppLimitsPtrInput {
	return (*appLimitsPtrType)(v)
}

func (*appLimitsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppLimits)(nil)).Elem()
}

func (i *appLimitsPtrType) ToAppLimitsPtrOutput() AppLimitsPtrOutput {
	return i.ToAppLimitsPtrOutputWithContext(context.Background())
}

func (i *appLimitsPtrType) ToAppLimitsPtrOutputWithContext(ctx context.Context) AppLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppLimitsPtrOutput)
}

type AppLimitsOutput struct{ *pulumi.OutputState }

func (AppLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppLimits)(nil)).Elem()
}

func (o AppLimitsOutput) ToAppLimitsOutput() AppLimitsOutput {
	return o
}

func (o AppLimitsOutput) ToAppLimitsOutputWithContext(ctx context.Context) AppLimitsOutput {
	return o
}

func (o AppLimitsOutput) ToAppLimitsPtrOutput() AppLimitsPtrOutput {
	return o.ToAppLimitsPtrOutputWithContext(context.Background())
}

func (o AppLimitsOutput) ToAppLimitsPtrOutputWithContext(ctx context.Context) AppLimitsPtrOutput {
	return o.ApplyT(func(v AppLimits) *AppLimits {
		return &v
	}).(AppLimitsPtrOutput)
}

// The maximum number of messages that the campaign can send daily.
func (o AppLimitsOutput) Daily() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppLimits) *int { return v.Daily }).(pulumi.IntPtrOutput)
}

// The length of time (in seconds) that the campaign can run before it ends and message deliveries stop. This duration begins at the scheduled start time for the campaign. The minimum value is 60.
func (o AppLimitsOutput) MaximumDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppLimits) *int { return v.MaximumDuration }).(pulumi.IntPtrOutput)
}

// The number of messages that the campaign can send per second. The minimum value is 50, and the maximum is 20000.
func (o AppLimitsOutput) MessagesPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppLimits) *int { return v.MessagesPerSecond }).(pulumi.IntPtrOutput)
}

// The maximum total number of messages that the campaign can send.
func (o AppLimitsOutput) Total() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppLimits) *int { return v.Total }).(pulumi.IntPtrOutput)
}

type AppLimitsPtrOutput struct{ *pulumi.OutputState }

func (AppLimitsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppLimits)(nil)).Elem()
}

func (o AppLimitsPtrOutput) ToAppLimitsPtrOutput() AppLimitsPtrOutput {
	return o
}

func (o AppLimitsPtrOutput) ToAppLimitsPtrOutputWithContext(ctx context.Context) AppLimitsPtrOutput {
	return o
}

func (o AppLimitsPtrOutput) Elem() AppLimitsOutput {
	return o.ApplyT(func(v *AppLimits) AppLimits { return *v }).(AppLimitsOutput)
}

// The maximum number of messages that the campaign can send daily.
func (o AppLimitsPtrOutput) Daily() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppLimits) *int { return v.Daily }).(pulumi.IntPtrOutput)
}

// The length of time (in seconds) that the campaign can run before it ends and message deliveries stop. This duration begins at the scheduled start time for the campaign. The minimum value is 60.
func (o AppLimitsPtrOutput) MaximumDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppLimits) *int { return v.MaximumDuration }).(pulumi.IntPtrOutput)
}

// The number of messages that the campaign can send per second. The minimum value is 50, and the maximum is 20000.
func (o AppLimitsPtrOutput) MessagesPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppLimits) *int { return v.MessagesPerSecond }).(pulumi.IntPtrOutput)
}

// The maximum total number of messages that the campaign can send.
func (o AppLimitsPtrOutput) Total() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppLimits) *int { return v.Total }).(pulumi.IntPtrOutput)
}

type AppLimitsArgs struct {
	// The maximum number of messages that the campaign can send daily.
	Daily *int `pulumi:"daily"`
	// The length of time (in seconds) that the campaign can run before it ends and message deliveries stop. This duration begins at the scheduled start time for the campaign. The minimum value is 60.
	MaximumDuration *int `pulumi:"maximumDuration"`
	// The number of messages that the campaign can send per second. The minimum value is 50, and the maximum is 20000.
	MessagesPerSecond *int `pulumi:"messagesPerSecond"`
	// The maximum total number of messages that the campaign can send.
	Total *int `pulumi:"total"`
}

type AppLimitsArgsInput interface {
	pulumi.Input

	ToAppLimitsArgsOutput() AppLimitsArgsOutput
	ToAppLimitsArgsOutputWithContext(context.Context) AppLimitsArgsOutput
}

type AppLimitsArgsArgs struct {
	// The maximum number of messages that the campaign can send daily.
	Daily pulumi.IntPtrInput `pulumi:"daily"`
	// The length of time (in seconds) that the campaign can run before it ends and message deliveries stop. This duration begins at the scheduled start time for the campaign. The minimum value is 60.
	MaximumDuration pulumi.IntPtrInput `pulumi:"maximumDuration"`
	// The number of messages that the campaign can send per second. The minimum value is 50, and the maximum is 20000.
	MessagesPerSecond pulumi.IntPtrInput `pulumi:"messagesPerSecond"`
	// The maximum total number of messages that the campaign can send.
	Total pulumi.IntPtrInput `pulumi:"total"`
}

func (AppLimitsArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppLimitsArgs)(nil)).Elem()
}

func (i AppLimitsArgsArgs) ToAppLimitsArgsOutput() AppLimitsArgsOutput {
	return i.ToAppLimitsArgsOutputWithContext(context.Background())
}

func (i AppLimitsArgsArgs) ToAppLimitsArgsOutputWithContext(ctx context.Context) AppLimitsArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppLimitsArgsOutput)
}

func (i AppLimitsArgsArgs) ToAppLimitsArgsPtrOutput() AppLimitsArgsPtrOutput {
	return i.ToAppLimitsArgsPtrOutputWithContext(context.Background())
}

func (i AppLimitsArgsArgs) ToAppLimitsArgsPtrOutputWithContext(ctx context.Context) AppLimitsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppLimitsArgsOutput).ToAppLimitsArgsPtrOutputWithContext(ctx)
}

type AppLimitsArgsPtrInput interface {
	pulumi.Input

	ToAppLimitsArgsPtrOutput() AppLimitsArgsPtrOutput
	ToAppLimitsArgsPtrOutputWithContext(context.Context) AppLimitsArgsPtrOutput
}

type appLimitsArgsPtrType AppLimitsArgsArgs

func AppLimitsArgsPtr(v *AppLimitsArgsArgs) AppLimitsArgsPtrInput {
	return (*appLimitsArgsPtrType)(v)
}

func (*appLimitsArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppLimitsArgs)(nil)).Elem()
}

func (i *appLimitsArgsPtrType) ToAppLimitsArgsPtrOutput() AppLimitsArgsPtrOutput {
	return i.ToAppLimitsArgsPtrOutputWithContext(context.Background())
}

func (i *appLimitsArgsPtrType) ToAppLimitsArgsPtrOutputWithContext(ctx context.Context) AppLimitsArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppLimitsArgsPtrOutput)
}

type AppLimitsArgsOutput struct{ *pulumi.OutputState }

func (AppLimitsArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppLimitsArgs)(nil)).Elem()
}

func (o AppLimitsArgsOutput) ToAppLimitsArgsOutput() AppLimitsArgsOutput {
	return o
}

func (o AppLimitsArgsOutput) ToAppLimitsArgsOutputWithContext(ctx context.Context) AppLimitsArgsOutput {
	return o
}

func (o AppLimitsArgsOutput) ToAppLimitsArgsPtrOutput() AppLimitsArgsPtrOutput {
	return o.ToAppLimitsArgsPtrOutputWithContext(context.Background())
}

func (o AppLimitsArgsOutput) ToAppLimitsArgsPtrOutputWithContext(ctx context.Context) AppLimitsArgsPtrOutput {
	return o.ApplyT(func(v AppLimitsArgs) *AppLimitsArgs {
		return &v
	}).(AppLimitsArgsPtrOutput)
}

// The maximum number of messages that the campaign can send daily.
func (o AppLimitsArgsOutput) Daily() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppLimitsArgs) *int { return v.Daily }).(pulumi.IntPtrOutput)
}

// The length of time (in seconds) that the campaign can run before it ends and message deliveries stop. This duration begins at the scheduled start time for the campaign. The minimum value is 60.
func (o AppLimitsArgsOutput) MaximumDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppLimitsArgs) *int { return v.MaximumDuration }).(pulumi.IntPtrOutput)
}

// The number of messages that the campaign can send per second. The minimum value is 50, and the maximum is 20000.
func (o AppLimitsArgsOutput) MessagesPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppLimitsArgs) *int { return v.MessagesPerSecond }).(pulumi.IntPtrOutput)
}

// The maximum total number of messages that the campaign can send.
func (o AppLimitsArgsOutput) Total() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppLimitsArgs) *int { return v.Total }).(pulumi.IntPtrOutput)
}

type AppLimitsArgsPtrOutput struct{ *pulumi.OutputState }

func (AppLimitsArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppLimitsArgs)(nil)).Elem()
}

func (o AppLimitsArgsPtrOutput) ToAppLimitsArgsPtrOutput() AppLimitsArgsPtrOutput {
	return o
}

func (o AppLimitsArgsPtrOutput) ToAppLimitsArgsPtrOutputWithContext(ctx context.Context) AppLimitsArgsPtrOutput {
	return o
}

func (o AppLimitsArgsPtrOutput) Elem() AppLimitsArgsOutput {
	return o.ApplyT(func(v *AppLimitsArgs) AppLimitsArgs { return *v }).(AppLimitsArgsOutput)
}

// The maximum number of messages that the campaign can send daily.
func (o AppLimitsArgsPtrOutput) Daily() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppLimitsArgs) *int { return v.Daily }).(pulumi.IntPtrOutput)
}

// The length of time (in seconds) that the campaign can run before it ends and message deliveries stop. This duration begins at the scheduled start time for the campaign. The minimum value is 60.
func (o AppLimitsArgsPtrOutput) MaximumDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppLimitsArgs) *int { return v.MaximumDuration }).(pulumi.IntPtrOutput)
}

// The number of messages that the campaign can send per second. The minimum value is 50, and the maximum is 20000.
func (o AppLimitsArgsPtrOutput) MessagesPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppLimitsArgs) *int { return v.MessagesPerSecond }).(pulumi.IntPtrOutput)
}

// The maximum total number of messages that the campaign can send.
func (o AppLimitsArgsPtrOutput) Total() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppLimitsArgs) *int { return v.Total }).(pulumi.IntPtrOutput)
}

type AppLimitsState struct {
	// The maximum number of messages that the campaign can send daily.
	Daily *int `pulumi:"daily"`
	// The length of time (in seconds) that the campaign can run before it ends and message deliveries stop. This duration begins at the scheduled start time for the campaign. The minimum value is 60.
	MaximumDuration *int `pulumi:"maximumDuration"`
	// The number of messages that the campaign can send per second. The minimum value is 50, and the maximum is 20000.
	MessagesPerSecond *int `pulumi:"messagesPerSecond"`
	// The maximum total number of messages that the campaign can send.
	Total *int `pulumi:"total"`
}

type AppLimitsStateInput interface {
	pulumi.Input

	ToAppLimitsStateOutput() AppLimitsStateOutput
	ToAppLimitsStateOutputWithContext(context.Context) AppLimitsStateOutput
}

type AppLimitsStateArgs struct {
	// The maximum number of messages that the campaign can send daily.
	Daily pulumi.IntPtrInput `pulumi:"daily"`
	// The length of time (in seconds) that the campaign can run before it ends and message deliveries stop. This duration begins at the scheduled start time for the campaign. The minimum value is 60.
	MaximumDuration pulumi.IntPtrInput `pulumi:"maximumDuration"`
	// The number of messages that the campaign can send per second. The minimum value is 50, and the maximum is 20000.
	MessagesPerSecond pulumi.IntPtrInput `pulumi:"messagesPerSecond"`
	// The maximum total number of messages that the campaign can send.
	Total pulumi.IntPtrInput `pulumi:"total"`
}

func (AppLimitsStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppLimitsState)(nil)).Elem()
}

func (i AppLimitsStateArgs) ToAppLimitsStateOutput() AppLimitsStateOutput {
	return i.ToAppLimitsStateOutputWithContext(context.Background())
}

func (i AppLimitsStateArgs) ToAppLimitsStateOutputWithContext(ctx context.Context) AppLimitsStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppLimitsStateOutput)
}

type AppLimitsStateOutput struct{ *pulumi.OutputState }

func (AppLimitsStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppLimitsState)(nil)).Elem()
}

func (o AppLimitsStateOutput) ToAppLimitsStateOutput() AppLimitsStateOutput {
	return o
}

func (o AppLimitsStateOutput) ToAppLimitsStateOutputWithContext(ctx context.Context) AppLimitsStateOutput {
	return o
}

// The maximum number of messages that the campaign can send daily.
func (o AppLimitsStateOutput) Daily() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppLimitsState) *int { return v.Daily }).(pulumi.IntPtrOutput)
}

// The length of time (in seconds) that the campaign can run before it ends and message deliveries stop. This duration begins at the scheduled start time for the campaign. The minimum value is 60.
func (o AppLimitsStateOutput) MaximumDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppLimitsState) *int { return v.MaximumDuration }).(pulumi.IntPtrOutput)
}

// The number of messages that the campaign can send per second. The minimum value is 50, and the maximum is 20000.
func (o AppLimitsStateOutput) MessagesPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppLimitsState) *int { return v.MessagesPerSecond }).(pulumi.IntPtrOutput)
}

// The maximum total number of messages that the campaign can send.
func (o AppLimitsStateOutput) Total() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppLimitsState) *int { return v.Total }).(pulumi.IntPtrOutput)
}

type AppQuietTime struct {
	// The default end time for quiet time in ISO 8601 format. Required if `start` is set
	End *string `pulumi:"end"`
	// The default start time for quiet time in ISO 8601 format. Required if `end` is set
	Start *string `pulumi:"start"`
}

type AppQuietTimeInput interface {
	pulumi.Input

	ToAppQuietTimeOutput() AppQuietTimeOutput
	ToAppQuietTimeOutputWithContext(context.Context) AppQuietTimeOutput
}

type AppQuietTimeArgs struct {
	// The default end time for quiet time in ISO 8601 format. Required if `start` is set
	End pulumi.StringPtrInput `pulumi:"end"`
	// The default start time for quiet time in ISO 8601 format. Required if `end` is set
	Start pulumi.StringPtrInput `pulumi:"start"`
}

func (AppQuietTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppQuietTime)(nil)).Elem()
}

func (i AppQuietTimeArgs) ToAppQuietTimeOutput() AppQuietTimeOutput {
	return i.ToAppQuietTimeOutputWithContext(context.Background())
}

func (i AppQuietTimeArgs) ToAppQuietTimeOutputWithContext(ctx context.Context) AppQuietTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppQuietTimeOutput)
}

func (i AppQuietTimeArgs) ToAppQuietTimePtrOutput() AppQuietTimePtrOutput {
	return i.ToAppQuietTimePtrOutputWithContext(context.Background())
}

func (i AppQuietTimeArgs) ToAppQuietTimePtrOutputWithContext(ctx context.Context) AppQuietTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppQuietTimeOutput).ToAppQuietTimePtrOutputWithContext(ctx)
}

type AppQuietTimePtrInput interface {
	pulumi.Input

	ToAppQuietTimePtrOutput() AppQuietTimePtrOutput
	ToAppQuietTimePtrOutputWithContext(context.Context) AppQuietTimePtrOutput
}

type appQuietTimePtrType AppQuietTimeArgs

func AppQuietTimePtr(v *AppQuietTimeArgs) AppQuietTimePtrInput {
	return (*appQuietTimePtrType)(v)
}

func (*appQuietTimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppQuietTime)(nil)).Elem()
}

func (i *appQuietTimePtrType) ToAppQuietTimePtrOutput() AppQuietTimePtrOutput {
	return i.ToAppQuietTimePtrOutputWithContext(context.Background())
}

func (i *appQuietTimePtrType) ToAppQuietTimePtrOutputWithContext(ctx context.Context) AppQuietTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppQuietTimePtrOutput)
}

type AppQuietTimeOutput struct{ *pulumi.OutputState }

func (AppQuietTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppQuietTime)(nil)).Elem()
}

func (o AppQuietTimeOutput) ToAppQuietTimeOutput() AppQuietTimeOutput {
	return o
}

func (o AppQuietTimeOutput) ToAppQuietTimeOutputWithContext(ctx context.Context) AppQuietTimeOutput {
	return o
}

func (o AppQuietTimeOutput) ToAppQuietTimePtrOutput() AppQuietTimePtrOutput {
	return o.ToAppQuietTimePtrOutputWithContext(context.Background())
}

func (o AppQuietTimeOutput) ToAppQuietTimePtrOutputWithContext(ctx context.Context) AppQuietTimePtrOutput {
	return o.ApplyT(func(v AppQuietTime) *AppQuietTime {
		return &v
	}).(AppQuietTimePtrOutput)
}

// The default end time for quiet time in ISO 8601 format. Required if `start` is set
func (o AppQuietTimeOutput) End() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppQuietTime) *string { return v.End }).(pulumi.StringPtrOutput)
}

// The default start time for quiet time in ISO 8601 format. Required if `end` is set
func (o AppQuietTimeOutput) Start() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppQuietTime) *string { return v.Start }).(pulumi.StringPtrOutput)
}

type AppQuietTimePtrOutput struct{ *pulumi.OutputState }

func (AppQuietTimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppQuietTime)(nil)).Elem()
}

func (o AppQuietTimePtrOutput) ToAppQuietTimePtrOutput() AppQuietTimePtrOutput {
	return o
}

func (o AppQuietTimePtrOutput) ToAppQuietTimePtrOutputWithContext(ctx context.Context) AppQuietTimePtrOutput {
	return o
}

func (o AppQuietTimePtrOutput) Elem() AppQuietTimeOutput {
	return o.ApplyT(func(v *AppQuietTime) AppQuietTime { return *v }).(AppQuietTimeOutput)
}

// The default end time for quiet time in ISO 8601 format. Required if `start` is set
func (o AppQuietTimePtrOutput) End() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppQuietTime) *string { return v.End }).(pulumi.StringPtrOutput)
}

// The default start time for quiet time in ISO 8601 format. Required if `end` is set
func (o AppQuietTimePtrOutput) Start() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppQuietTime) *string { return v.Start }).(pulumi.StringPtrOutput)
}

type AppQuietTimeArgs struct {
	// The default end time for quiet time in ISO 8601 format. Required if `start` is set
	End *string `pulumi:"end"`
	// The default start time for quiet time in ISO 8601 format. Required if `end` is set
	Start *string `pulumi:"start"`
}

type AppQuietTimeArgsInput interface {
	pulumi.Input

	ToAppQuietTimeArgsOutput() AppQuietTimeArgsOutput
	ToAppQuietTimeArgsOutputWithContext(context.Context) AppQuietTimeArgsOutput
}

type AppQuietTimeArgsArgs struct {
	// The default end time for quiet time in ISO 8601 format. Required if `start` is set
	End pulumi.StringPtrInput `pulumi:"end"`
	// The default start time for quiet time in ISO 8601 format. Required if `end` is set
	Start pulumi.StringPtrInput `pulumi:"start"`
}

func (AppQuietTimeArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppQuietTimeArgs)(nil)).Elem()
}

func (i AppQuietTimeArgsArgs) ToAppQuietTimeArgsOutput() AppQuietTimeArgsOutput {
	return i.ToAppQuietTimeArgsOutputWithContext(context.Background())
}

func (i AppQuietTimeArgsArgs) ToAppQuietTimeArgsOutputWithContext(ctx context.Context) AppQuietTimeArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppQuietTimeArgsOutput)
}

func (i AppQuietTimeArgsArgs) ToAppQuietTimeArgsPtrOutput() AppQuietTimeArgsPtrOutput {
	return i.ToAppQuietTimeArgsPtrOutputWithContext(context.Background())
}

func (i AppQuietTimeArgsArgs) ToAppQuietTimeArgsPtrOutputWithContext(ctx context.Context) AppQuietTimeArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppQuietTimeArgsOutput).ToAppQuietTimeArgsPtrOutputWithContext(ctx)
}

type AppQuietTimeArgsPtrInput interface {
	pulumi.Input

	ToAppQuietTimeArgsPtrOutput() AppQuietTimeArgsPtrOutput
	ToAppQuietTimeArgsPtrOutputWithContext(context.Context) AppQuietTimeArgsPtrOutput
}

type appQuietTimeArgsPtrType AppQuietTimeArgsArgs

func AppQuietTimeArgsPtr(v *AppQuietTimeArgsArgs) AppQuietTimeArgsPtrInput {
	return (*appQuietTimeArgsPtrType)(v)
}

func (*appQuietTimeArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppQuietTimeArgs)(nil)).Elem()
}

func (i *appQuietTimeArgsPtrType) ToAppQuietTimeArgsPtrOutput() AppQuietTimeArgsPtrOutput {
	return i.ToAppQuietTimeArgsPtrOutputWithContext(context.Background())
}

func (i *appQuietTimeArgsPtrType) ToAppQuietTimeArgsPtrOutputWithContext(ctx context.Context) AppQuietTimeArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppQuietTimeArgsPtrOutput)
}

type AppQuietTimeArgsOutput struct{ *pulumi.OutputState }

func (AppQuietTimeArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppQuietTimeArgs)(nil)).Elem()
}

func (o AppQuietTimeArgsOutput) ToAppQuietTimeArgsOutput() AppQuietTimeArgsOutput {
	return o
}

func (o AppQuietTimeArgsOutput) ToAppQuietTimeArgsOutputWithContext(ctx context.Context) AppQuietTimeArgsOutput {
	return o
}

func (o AppQuietTimeArgsOutput) ToAppQuietTimeArgsPtrOutput() AppQuietTimeArgsPtrOutput {
	return o.ToAppQuietTimeArgsPtrOutputWithContext(context.Background())
}

func (o AppQuietTimeArgsOutput) ToAppQuietTimeArgsPtrOutputWithContext(ctx context.Context) AppQuietTimeArgsPtrOutput {
	return o.ApplyT(func(v AppQuietTimeArgs) *AppQuietTimeArgs {
		return &v
	}).(AppQuietTimeArgsPtrOutput)
}

// The default end time for quiet time in ISO 8601 format. Required if `start` is set
func (o AppQuietTimeArgsOutput) End() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppQuietTimeArgs) *string { return v.End }).(pulumi.StringPtrOutput)
}

// The default start time for quiet time in ISO 8601 format. Required if `end` is set
func (o AppQuietTimeArgsOutput) Start() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppQuietTimeArgs) *string { return v.Start }).(pulumi.StringPtrOutput)
}

type AppQuietTimeArgsPtrOutput struct{ *pulumi.OutputState }

func (AppQuietTimeArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppQuietTimeArgs)(nil)).Elem()
}

func (o AppQuietTimeArgsPtrOutput) ToAppQuietTimeArgsPtrOutput() AppQuietTimeArgsPtrOutput {
	return o
}

func (o AppQuietTimeArgsPtrOutput) ToAppQuietTimeArgsPtrOutputWithContext(ctx context.Context) AppQuietTimeArgsPtrOutput {
	return o
}

func (o AppQuietTimeArgsPtrOutput) Elem() AppQuietTimeArgsOutput {
	return o.ApplyT(func(v *AppQuietTimeArgs) AppQuietTimeArgs { return *v }).(AppQuietTimeArgsOutput)
}

// The default end time for quiet time in ISO 8601 format. Required if `start` is set
func (o AppQuietTimeArgsPtrOutput) End() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppQuietTimeArgs) *string { return v.End }).(pulumi.StringPtrOutput)
}

// The default start time for quiet time in ISO 8601 format. Required if `end` is set
func (o AppQuietTimeArgsPtrOutput) Start() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppQuietTimeArgs) *string { return v.Start }).(pulumi.StringPtrOutput)
}

type AppQuietTimeState struct {
	// The default end time for quiet time in ISO 8601 format. Required if `start` is set
	End *string `pulumi:"end"`
	// The default start time for quiet time in ISO 8601 format. Required if `end` is set
	Start *string `pulumi:"start"`
}

type AppQuietTimeStateInput interface {
	pulumi.Input

	ToAppQuietTimeStateOutput() AppQuietTimeStateOutput
	ToAppQuietTimeStateOutputWithContext(context.Context) AppQuietTimeStateOutput
}

type AppQuietTimeStateArgs struct {
	// The default end time for quiet time in ISO 8601 format. Required if `start` is set
	End pulumi.StringPtrInput `pulumi:"end"`
	// The default start time for quiet time in ISO 8601 format. Required if `end` is set
	Start pulumi.StringPtrInput `pulumi:"start"`
}

func (AppQuietTimeStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppQuietTimeState)(nil)).Elem()
}

func (i AppQuietTimeStateArgs) ToAppQuietTimeStateOutput() AppQuietTimeStateOutput {
	return i.ToAppQuietTimeStateOutputWithContext(context.Background())
}

func (i AppQuietTimeStateArgs) ToAppQuietTimeStateOutputWithContext(ctx context.Context) AppQuietTimeStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppQuietTimeStateOutput)
}

type AppQuietTimeStateOutput struct{ *pulumi.OutputState }

func (AppQuietTimeStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppQuietTimeState)(nil)).Elem()
}

func (o AppQuietTimeStateOutput) ToAppQuietTimeStateOutput() AppQuietTimeStateOutput {
	return o
}

func (o AppQuietTimeStateOutput) ToAppQuietTimeStateOutputWithContext(ctx context.Context) AppQuietTimeStateOutput {
	return o
}

// The default end time for quiet time in ISO 8601 format. Required if `start` is set
func (o AppQuietTimeStateOutput) End() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppQuietTimeState) *string { return v.End }).(pulumi.StringPtrOutput)
}

// The default start time for quiet time in ISO 8601 format. Required if `end` is set
func (o AppQuietTimeStateOutput) Start() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppQuietTimeState) *string { return v.Start }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AppCampaignHookOutput{})
	pulumi.RegisterOutputType(AppCampaignHookPtrOutput{})
	pulumi.RegisterOutputType(AppCampaignHookArgsOutput{})
	pulumi.RegisterOutputType(AppCampaignHookArgsPtrOutput{})
	pulumi.RegisterOutputType(AppCampaignHookStateOutput{})
	pulumi.RegisterOutputType(AppLimitsOutput{})
	pulumi.RegisterOutputType(AppLimitsPtrOutput{})
	pulumi.RegisterOutputType(AppLimitsArgsOutput{})
	pulumi.RegisterOutputType(AppLimitsArgsPtrOutput{})
	pulumi.RegisterOutputType(AppLimitsStateOutput{})
	pulumi.RegisterOutputType(AppQuietTimeOutput{})
	pulumi.RegisterOutputType(AppQuietTimePtrOutput{})
	pulumi.RegisterOutputType(AppQuietTimeArgsOutput{})
	pulumi.RegisterOutputType(AppQuietTimeArgsPtrOutput{})
	pulumi.RegisterOutputType(AppQuietTimeStateOutput{})
}
