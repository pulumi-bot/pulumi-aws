// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package efs

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type MountTarget struct {
	pulumi.CustomResourceState

	AvailabilityZoneId   pulumi.StringOutput      `pulumi:"availabilityZoneId"`
	AvailabilityZoneName pulumi.StringOutput      `pulumi:"availabilityZoneName"`
	DnsName              pulumi.StringOutput      `pulumi:"dnsName"`
	FileSystemArn        pulumi.StringOutput      `pulumi:"fileSystemArn"`
	FileSystemId         pulumi.StringOutput      `pulumi:"fileSystemId"`
	IpAddress            pulumi.StringOutput      `pulumi:"ipAddress"`
	MountTargetDnsName   pulumi.StringOutput      `pulumi:"mountTargetDnsName"`
	NetworkInterfaceId   pulumi.StringOutput      `pulumi:"networkInterfaceId"`
	OwnerId              pulumi.StringOutput      `pulumi:"ownerId"`
	SecurityGroups       pulumi.StringArrayOutput `pulumi:"securityGroups"`
	SubnetId             pulumi.StringOutput      `pulumi:"subnetId"`
}

// NewMountTarget registers a new resource with the given unique name, arguments, and options.
func NewMountTarget(ctx *pulumi.Context,
	name string, args *MountTargetArgs, opts ...pulumi.ResourceOption) (*MountTarget, error) {
	if args == nil || args.FileSystemId == nil {
		return nil, errors.New("missing required argument 'FileSystemId'")
	}
	if args == nil || args.SubnetId == nil {
		return nil, errors.New("missing required argument 'SubnetId'")
	}
	if args == nil {
		args = &MountTargetArgs{}
	}
	var resource MountTarget
	err := ctx.RegisterResource("aws:efs/mountTarget:MountTarget", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMountTarget gets an existing MountTarget resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMountTarget(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MountTargetState, opts ...pulumi.ResourceOption) (*MountTarget, error) {
	var resource MountTarget
	err := ctx.ReadResource("aws:efs/mountTarget:MountTarget", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MountTarget resources.
type mountTargetState struct {
	AvailabilityZoneId   *string  `pulumi:"availabilityZoneId"`
	AvailabilityZoneName *string  `pulumi:"availabilityZoneName"`
	DnsName              *string  `pulumi:"dnsName"`
	FileSystemArn        *string  `pulumi:"fileSystemArn"`
	FileSystemId         *string  `pulumi:"fileSystemId"`
	IpAddress            *string  `pulumi:"ipAddress"`
	MountTargetDnsName   *string  `pulumi:"mountTargetDnsName"`
	NetworkInterfaceId   *string  `pulumi:"networkInterfaceId"`
	OwnerId              *string  `pulumi:"ownerId"`
	SecurityGroups       []string `pulumi:"securityGroups"`
	SubnetId             *string  `pulumi:"subnetId"`
}

type MountTargetState struct {
	AvailabilityZoneId   pulumi.StringPtrInput
	AvailabilityZoneName pulumi.StringPtrInput
	DnsName              pulumi.StringPtrInput
	FileSystemArn        pulumi.StringPtrInput
	FileSystemId         pulumi.StringPtrInput
	IpAddress            pulumi.StringPtrInput
	MountTargetDnsName   pulumi.StringPtrInput
	NetworkInterfaceId   pulumi.StringPtrInput
	OwnerId              pulumi.StringPtrInput
	SecurityGroups       pulumi.StringArrayInput
	SubnetId             pulumi.StringPtrInput
}

func (MountTargetState) ElementType() reflect.Type {
	return reflect.TypeOf((*mountTargetState)(nil)).Elem()
}

type mountTargetArgs struct {
	FileSystemId   string   `pulumi:"fileSystemId"`
	IpAddress      *string  `pulumi:"ipAddress"`
	SecurityGroups []string `pulumi:"securityGroups"`
	SubnetId       string   `pulumi:"subnetId"`
}

// The set of arguments for constructing a MountTarget resource.
type MountTargetArgs struct {
	FileSystemId   pulumi.StringInput
	IpAddress      pulumi.StringPtrInput
	SecurityGroups pulumi.StringArrayInput
	SubnetId       pulumi.StringInput
}

func (MountTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mountTargetArgs)(nil)).Elem()
}
