// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package efs

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AccessPoint struct {
	pulumi.CustomResourceState

	Arn           pulumi.StringOutput            `pulumi:"arn"`
	FileSystemArn pulumi.StringOutput            `pulumi:"fileSystemArn"`
	FileSystemId  pulumi.StringOutput            `pulumi:"fileSystemId"`
	OwnerId       pulumi.StringOutput            `pulumi:"ownerId"`
	PosixUser     AccessPointPosixUserPtrOutput  `pulumi:"posixUser"`
	RootDirectory AccessPointRootDirectoryOutput `pulumi:"rootDirectory"`
	Tags          pulumi.StringMapOutput         `pulumi:"tags"`
}

// NewAccessPoint registers a new resource with the given unique name, arguments, and options.
func NewAccessPoint(ctx *pulumi.Context,
	name string, args *AccessPointArgs, opts ...pulumi.ResourceOption) (*AccessPoint, error) {
	if args == nil || args.FileSystemId == nil {
		return nil, errors.New("missing required argument 'FileSystemId'")
	}
	if args == nil {
		args = &AccessPointArgs{}
	}
	var resource AccessPoint
	err := ctx.RegisterResource("aws:efs/accessPoint:AccessPoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessPoint gets an existing AccessPoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessPoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessPointState, opts ...pulumi.ResourceOption) (*AccessPoint, error) {
	var resource AccessPoint
	err := ctx.ReadResource("aws:efs/accessPoint:AccessPoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessPoint resources.
type accessPointState struct {
	Arn           *string                   `pulumi:"arn"`
	FileSystemArn *string                   `pulumi:"fileSystemArn"`
	FileSystemId  *string                   `pulumi:"fileSystemId"`
	OwnerId       *string                   `pulumi:"ownerId"`
	PosixUser     *AccessPointPosixUser     `pulumi:"posixUser"`
	RootDirectory *AccessPointRootDirectory `pulumi:"rootDirectory"`
	Tags          map[string]string         `pulumi:"tags"`
}

type AccessPointState struct {
	Arn           pulumi.StringPtrInput
	FileSystemArn pulumi.StringPtrInput
	FileSystemId  pulumi.StringPtrInput
	OwnerId       pulumi.StringPtrInput
	PosixUser     AccessPointPosixUserPtrInput
	RootDirectory AccessPointRootDirectoryPtrInput
	Tags          pulumi.StringMapInput
}

func (AccessPointState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessPointState)(nil)).Elem()
}

type accessPointArgs struct {
	FileSystemId  string                    `pulumi:"fileSystemId"`
	PosixUser     *AccessPointPosixUser     `pulumi:"posixUser"`
	RootDirectory *AccessPointRootDirectory `pulumi:"rootDirectory"`
	Tags          map[string]string         `pulumi:"tags"`
}

// The set of arguments for constructing a AccessPoint resource.
type AccessPointArgs struct {
	FileSystemId  pulumi.StringInput
	PosixUser     AccessPointPosixUserPtrInput
	RootDirectory AccessPointRootDirectoryPtrInput
	Tags          pulumi.StringMapInput
}

func (AccessPointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessPointArgs)(nil)).Elem()
}
