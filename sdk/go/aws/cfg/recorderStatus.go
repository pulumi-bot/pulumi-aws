// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cfg

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type RecorderStatus struct {
	pulumi.CustomResourceState

	IsEnabled pulumi.BoolOutput   `pulumi:"isEnabled"`
	Name      pulumi.StringOutput `pulumi:"name"`
}

// NewRecorderStatus registers a new resource with the given unique name, arguments, and options.
func NewRecorderStatus(ctx *pulumi.Context,
	name string, args *RecorderStatusArgs, opts ...pulumi.ResourceOption) (*RecorderStatus, error) {
	if args == nil || args.IsEnabled == nil {
		return nil, errors.New("missing required argument 'IsEnabled'")
	}
	if args == nil {
		args = &RecorderStatusArgs{}
	}
	var resource RecorderStatus
	err := ctx.RegisterResource("aws:cfg/recorderStatus:RecorderStatus", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRecorderStatus gets an existing RecorderStatus resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRecorderStatus(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RecorderStatusState, opts ...pulumi.ResourceOption) (*RecorderStatus, error) {
	var resource RecorderStatus
	err := ctx.ReadResource("aws:cfg/recorderStatus:RecorderStatus", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RecorderStatus resources.
type recorderStatusState struct {
	IsEnabled *bool   `pulumi:"isEnabled"`
	Name      *string `pulumi:"name"`
}

type RecorderStatusState struct {
	IsEnabled pulumi.BoolPtrInput
	Name      pulumi.StringPtrInput
}

func (RecorderStatusState) ElementType() reflect.Type {
	return reflect.TypeOf((*recorderStatusState)(nil)).Elem()
}

type recorderStatusArgs struct {
	IsEnabled bool    `pulumi:"isEnabled"`
	Name      *string `pulumi:"name"`
}

// The set of arguments for constructing a RecorderStatus resource.
type RecorderStatusArgs struct {
	IsEnabled pulumi.BoolInput
	Name      pulumi.StringPtrInput
}

func (RecorderStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*recorderStatusArgs)(nil)).Elem()
}
