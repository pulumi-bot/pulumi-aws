// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package RuleSourceSourceDetail

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type RuleSourceSourceDetail struct {
	// The source of the event, such as an AWS service, that triggers AWS Config
	// to evaluate your AWS resources. This defaults to `aws.config` and is the only valid value.
	EventSource *string `pulumi:"eventSource"`
	// The frequency that you want AWS Config to run evaluations for a rule that
	// is triggered periodically. If specified, requires `messageType` to be `ScheduledNotification`.
	MaximumExecutionFrequency *string `pulumi:"maximumExecutionFrequency"`
	// The type of notification that triggers AWS Config to run an evaluation for a rule. You can specify the following notification types:
	MessageType *string `pulumi:"messageType"`
}

type RuleSourceSourceDetailInput interface {
	pulumi.Input

	ToRuleSourceSourceDetailOutput() RuleSourceSourceDetailOutput
	ToRuleSourceSourceDetailOutputWithContext(context.Context) RuleSourceSourceDetailOutput
}

type RuleSourceSourceDetailArgs struct {
	// The source of the event, such as an AWS service, that triggers AWS Config
	// to evaluate your AWS resources. This defaults to `aws.config` and is the only valid value.
	EventSource pulumi.StringPtrInput `pulumi:"eventSource"`
	// The frequency that you want AWS Config to run evaluations for a rule that
	// is triggered periodically. If specified, requires `messageType` to be `ScheduledNotification`.
	MaximumExecutionFrequency pulumi.StringPtrInput `pulumi:"maximumExecutionFrequency"`
	// The type of notification that triggers AWS Config to run an evaluation for a rule. You can specify the following notification types:
	MessageType pulumi.StringPtrInput `pulumi:"messageType"`
}

func (RuleSourceSourceDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleSourceSourceDetail)(nil)).Elem()
}

func (i RuleSourceSourceDetailArgs) ToRuleSourceSourceDetailOutput() RuleSourceSourceDetailOutput {
	return i.ToRuleSourceSourceDetailOutputWithContext(context.Background())
}

func (i RuleSourceSourceDetailArgs) ToRuleSourceSourceDetailOutputWithContext(ctx context.Context) RuleSourceSourceDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleSourceSourceDetailOutput)
}

type RuleSourceSourceDetailArrayInput interface {
	pulumi.Input

	ToRuleSourceSourceDetailArrayOutput() RuleSourceSourceDetailArrayOutput
	ToRuleSourceSourceDetailArrayOutputWithContext(context.Context) RuleSourceSourceDetailArrayOutput
}

type RuleSourceSourceDetailArray []RuleSourceSourceDetailInput

func (RuleSourceSourceDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleSourceSourceDetail)(nil)).Elem()
}

func (i RuleSourceSourceDetailArray) ToRuleSourceSourceDetailArrayOutput() RuleSourceSourceDetailArrayOutput {
	return i.ToRuleSourceSourceDetailArrayOutputWithContext(context.Background())
}

func (i RuleSourceSourceDetailArray) ToRuleSourceSourceDetailArrayOutputWithContext(ctx context.Context) RuleSourceSourceDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleSourceSourceDetailArrayOutput)
}

type RuleSourceSourceDetailOutput struct { *pulumi.OutputState }

func (RuleSourceSourceDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleSourceSourceDetail)(nil)).Elem()
}

func (o RuleSourceSourceDetailOutput) ToRuleSourceSourceDetailOutput() RuleSourceSourceDetailOutput {
	return o
}

func (o RuleSourceSourceDetailOutput) ToRuleSourceSourceDetailOutputWithContext(ctx context.Context) RuleSourceSourceDetailOutput {
	return o
}

// The source of the event, such as an AWS service, that triggers AWS Config
// to evaluate your AWS resources. This defaults to `aws.config` and is the only valid value.
func (o RuleSourceSourceDetailOutput) EventSource() pulumi.StringPtrOutput {
	return o.ApplyT(func (v RuleSourceSourceDetail) *string { return v.EventSource }).(pulumi.StringPtrOutput)
}

// The frequency that you want AWS Config to run evaluations for a rule that
// is triggered periodically. If specified, requires `messageType` to be `ScheduledNotification`.
func (o RuleSourceSourceDetailOutput) MaximumExecutionFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func (v RuleSourceSourceDetail) *string { return v.MaximumExecutionFrequency }).(pulumi.StringPtrOutput)
}

// The type of notification that triggers AWS Config to run an evaluation for a rule. You can specify the following notification types:
func (o RuleSourceSourceDetailOutput) MessageType() pulumi.StringPtrOutput {
	return o.ApplyT(func (v RuleSourceSourceDetail) *string { return v.MessageType }).(pulumi.StringPtrOutput)
}

type RuleSourceSourceDetailArrayOutput struct { *pulumi.OutputState}

func (RuleSourceSourceDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleSourceSourceDetail)(nil)).Elem()
}

func (o RuleSourceSourceDetailArrayOutput) ToRuleSourceSourceDetailArrayOutput() RuleSourceSourceDetailArrayOutput {
	return o
}

func (o RuleSourceSourceDetailArrayOutput) ToRuleSourceSourceDetailArrayOutputWithContext(ctx context.Context) RuleSourceSourceDetailArrayOutput {
	return o
}

func (o RuleSourceSourceDetailArrayOutput) Index(i pulumi.IntInput) RuleSourceSourceDetailOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) RuleSourceSourceDetail {
		return vs[0].([]RuleSourceSourceDetail)[vs[1].(int)]
	}).(RuleSourceSourceDetailOutput)
}

func init() {
	pulumi.RegisterOutputType(RuleSourceSourceDetailOutput{})
	pulumi.RegisterOutputType(RuleSourceSourceDetailArrayOutput{})
}
