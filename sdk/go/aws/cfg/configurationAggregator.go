// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cfg

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ConfigurationAggregator struct {
	pulumi.CustomResourceState

	AccountAggregationSource      ConfigurationAggregatorAccountAggregationSourcePtrOutput      `pulumi:"accountAggregationSource"`
	Arn                           pulumi.StringOutput                                           `pulumi:"arn"`
	Name                          pulumi.StringOutput                                           `pulumi:"name"`
	OrganizationAggregationSource ConfigurationAggregatorOrganizationAggregationSourcePtrOutput `pulumi:"organizationAggregationSource"`
	Tags                          pulumi.StringMapOutput                                        `pulumi:"tags"`
}

// NewConfigurationAggregator registers a new resource with the given unique name, arguments, and options.
func NewConfigurationAggregator(ctx *pulumi.Context,
	name string, args *ConfigurationAggregatorArgs, opts ...pulumi.ResourceOption) (*ConfigurationAggregator, error) {
	if args == nil {
		args = &ConfigurationAggregatorArgs{}
	}
	var resource ConfigurationAggregator
	err := ctx.RegisterResource("aws:cfg/configurationAggregator:ConfigurationAggregator", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConfigurationAggregator gets an existing ConfigurationAggregator resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfigurationAggregator(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConfigurationAggregatorState, opts ...pulumi.ResourceOption) (*ConfigurationAggregator, error) {
	var resource ConfigurationAggregator
	err := ctx.ReadResource("aws:cfg/configurationAggregator:ConfigurationAggregator", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConfigurationAggregator resources.
type configurationAggregatorState struct {
	AccountAggregationSource      *ConfigurationAggregatorAccountAggregationSource      `pulumi:"accountAggregationSource"`
	Arn                           *string                                               `pulumi:"arn"`
	Name                          *string                                               `pulumi:"name"`
	OrganizationAggregationSource *ConfigurationAggregatorOrganizationAggregationSource `pulumi:"organizationAggregationSource"`
	Tags                          map[string]string                                     `pulumi:"tags"`
}

type ConfigurationAggregatorState struct {
	AccountAggregationSource      ConfigurationAggregatorAccountAggregationSourcePtrInput
	Arn                           pulumi.StringPtrInput
	Name                          pulumi.StringPtrInput
	OrganizationAggregationSource ConfigurationAggregatorOrganizationAggregationSourcePtrInput
	Tags                          pulumi.StringMapInput
}

func (ConfigurationAggregatorState) ElementType() reflect.Type {
	return reflect.TypeOf((*configurationAggregatorState)(nil)).Elem()
}

type configurationAggregatorArgs struct {
	AccountAggregationSource      *ConfigurationAggregatorAccountAggregationSource      `pulumi:"accountAggregationSource"`
	Name                          *string                                               `pulumi:"name"`
	OrganizationAggregationSource *ConfigurationAggregatorOrganizationAggregationSource `pulumi:"organizationAggregationSource"`
	Tags                          map[string]string                                     `pulumi:"tags"`
}

// The set of arguments for constructing a ConfigurationAggregator resource.
type ConfigurationAggregatorArgs struct {
	AccountAggregationSource      ConfigurationAggregatorAccountAggregationSourcePtrInput
	Name                          pulumi.StringPtrInput
	OrganizationAggregationSource ConfigurationAggregatorOrganizationAggregationSourcePtrInput
	Tags                          pulumi.StringMapInput
}

func (ConfigurationAggregatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*configurationAggregatorArgs)(nil)).Elem()
}
