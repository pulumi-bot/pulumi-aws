// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cfg

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides an AWS Config Remediation Configuration.
//
// > **Note:** Config Remediation Configuration requires an existing [Config Rule](https://www.terraform.io/docs/providers/aws/r/config_config_rule.html) to be present.
type RemediationConfiguration struct {
	pulumi.CustomResourceState

	Arn pulumi.StringOutput `pulumi:"arn"`
	// The name of the AWS Config rule
	ConfigRuleName pulumi.StringOutput `pulumi:"configRuleName"`
	// Can be specified multiple times for each
	// parameter. Each parameter block supports fields documented below.
	Parameters RemediationConfigurationParameterArrayOutput `pulumi:"parameters"`
	// The type of a resource
	ResourceType pulumi.StringPtrOutput `pulumi:"resourceType"`
	// Target ID is the name of the public document
	TargetId pulumi.StringOutput `pulumi:"targetId"`
	// The type of the target. Target executes remediation. For example, SSM document
	TargetType pulumi.StringOutput `pulumi:"targetType"`
	// Version of the target. For example, version of the SSM document
	TargetVersion pulumi.StringPtrOutput `pulumi:"targetVersion"`
}

// NewRemediationConfiguration registers a new resource with the given unique name, arguments, and options.
func NewRemediationConfiguration(ctx *pulumi.Context,
	name string, args *RemediationConfigurationArgs, opts ...pulumi.ResourceOption) (*RemediationConfiguration, error) {
	if args == nil || args.ConfigRuleName == nil {
		return nil, errors.New("missing required argument 'ConfigRuleName'")
	}
	if args == nil || args.TargetId == nil {
		return nil, errors.New("missing required argument 'TargetId'")
	}
	if args == nil || args.TargetType == nil {
		return nil, errors.New("missing required argument 'TargetType'")
	}
	if args == nil {
		args = &RemediationConfigurationArgs{}
	}
	var resource RemediationConfiguration
	err := ctx.RegisterResource("aws:cfg/remediationConfiguration:RemediationConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRemediationConfiguration gets an existing RemediationConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRemediationConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RemediationConfigurationState, opts ...pulumi.ResourceOption) (*RemediationConfiguration, error) {
	var resource RemediationConfiguration
	err := ctx.ReadResource("aws:cfg/remediationConfiguration:RemediationConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RemediationConfiguration resources.
type remediationConfigurationState struct {
	Arn *string `pulumi:"arn"`
	// The name of the AWS Config rule
	ConfigRuleName *string `pulumi:"configRuleName"`
	// Can be specified multiple times for each
	// parameter. Each parameter block supports fields documented below.
	Parameters []RemediationConfigurationParameter `pulumi:"parameters"`
	// The type of a resource
	ResourceType *string `pulumi:"resourceType"`
	// Target ID is the name of the public document
	TargetId *string `pulumi:"targetId"`
	// The type of the target. Target executes remediation. For example, SSM document
	TargetType *string `pulumi:"targetType"`
	// Version of the target. For example, version of the SSM document
	TargetVersion *string `pulumi:"targetVersion"`
}

type RemediationConfigurationState struct {
	Arn pulumi.StringPtrInput
	// The name of the AWS Config rule
	ConfigRuleName pulumi.StringPtrInput
	// Can be specified multiple times for each
	// parameter. Each parameter block supports fields documented below.
	Parameters RemediationConfigurationParameterArrayInput
	// The type of a resource
	ResourceType pulumi.StringPtrInput
	// Target ID is the name of the public document
	TargetId pulumi.StringPtrInput
	// The type of the target. Target executes remediation. For example, SSM document
	TargetType pulumi.StringPtrInput
	// Version of the target. For example, version of the SSM document
	TargetVersion pulumi.StringPtrInput
}

func (RemediationConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*remediationConfigurationState)(nil)).Elem()
}

type remediationConfigurationArgs struct {
	// The name of the AWS Config rule
	ConfigRuleName string `pulumi:"configRuleName"`
	// Can be specified multiple times for each
	// parameter. Each parameter block supports fields documented below.
	Parameters []RemediationConfigurationParameter `pulumi:"parameters"`
	// The type of a resource
	ResourceType *string `pulumi:"resourceType"`
	// Target ID is the name of the public document
	TargetId string `pulumi:"targetId"`
	// The type of the target. Target executes remediation. For example, SSM document
	TargetType string `pulumi:"targetType"`
	// Version of the target. For example, version of the SSM document
	TargetVersion *string `pulumi:"targetVersion"`
}

// The set of arguments for constructing a RemediationConfiguration resource.
type RemediationConfigurationArgs struct {
	// The name of the AWS Config rule
	ConfigRuleName pulumi.StringInput
	// Can be specified multiple times for each
	// parameter. Each parameter block supports fields documented below.
	Parameters RemediationConfigurationParameterArrayInput
	// The type of a resource
	ResourceType pulumi.StringPtrInput
	// Target ID is the name of the public document
	TargetId pulumi.StringInput
	// The type of the target. Target executes remediation. For example, SSM document
	TargetType pulumi.StringInput
	// Version of the target. For example, version of the SSM document
	TargetVersion pulumi.StringPtrInput
}

func (RemediationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*remediationConfigurationArgs)(nil)).Elem()
}
