// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ConfigurationAggregatorAccountAggregationSource

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ConfigurationAggregatorAccountAggregationSource struct {
	// List of 12-digit account IDs of the account(s) being aggregated.
	AccountIds []string `pulumi:"accountIds"`
	// If true, aggregate existing AWS Config regions and future regions.
	AllRegions *bool `pulumi:"allRegions"`
	// List of source regions being aggregated.
	Regions []string `pulumi:"regions"`
}

type ConfigurationAggregatorAccountAggregationSourceInput interface {
	pulumi.Input

	ToConfigurationAggregatorAccountAggregationSourceOutput() ConfigurationAggregatorAccountAggregationSourceOutput
	ToConfigurationAggregatorAccountAggregationSourceOutputWithContext(context.Context) ConfigurationAggregatorAccountAggregationSourceOutput
}

type ConfigurationAggregatorAccountAggregationSourceArgs struct {
	// List of 12-digit account IDs of the account(s) being aggregated.
	AccountIds pulumi.StringArrayInput `pulumi:"accountIds"`
	// If true, aggregate existing AWS Config regions and future regions.
	AllRegions pulumi.BoolPtrInput `pulumi:"allRegions"`
	// List of source regions being aggregated.
	Regions pulumi.StringArrayInput `pulumi:"regions"`
}

func (ConfigurationAggregatorAccountAggregationSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationAggregatorAccountAggregationSource)(nil)).Elem()
}

func (i ConfigurationAggregatorAccountAggregationSourceArgs) ToConfigurationAggregatorAccountAggregationSourceOutput() ConfigurationAggregatorAccountAggregationSourceOutput {
	return i.ToConfigurationAggregatorAccountAggregationSourceOutputWithContext(context.Background())
}

func (i ConfigurationAggregatorAccountAggregationSourceArgs) ToConfigurationAggregatorAccountAggregationSourceOutputWithContext(ctx context.Context) ConfigurationAggregatorAccountAggregationSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationAggregatorAccountAggregationSourceOutput)
}

func (i ConfigurationAggregatorAccountAggregationSourceArgs) ToConfigurationAggregatorAccountAggregationSourcePtrOutput() ConfigurationAggregatorAccountAggregationSourcePtrOutput {
	return i.ToConfigurationAggregatorAccountAggregationSourcePtrOutputWithContext(context.Background())
}

func (i ConfigurationAggregatorAccountAggregationSourceArgs) ToConfigurationAggregatorAccountAggregationSourcePtrOutputWithContext(ctx context.Context) ConfigurationAggregatorAccountAggregationSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationAggregatorAccountAggregationSourceOutput).ToConfigurationAggregatorAccountAggregationSourcePtrOutputWithContext(ctx)
}

type ConfigurationAggregatorAccountAggregationSourcePtrInput interface {
	pulumi.Input

	ToConfigurationAggregatorAccountAggregationSourcePtrOutput() ConfigurationAggregatorAccountAggregationSourcePtrOutput
	ToConfigurationAggregatorAccountAggregationSourcePtrOutputWithContext(context.Context) ConfigurationAggregatorAccountAggregationSourcePtrOutput
}

type configurationAggregatorAccountAggregationSourcePtrType ConfigurationAggregatorAccountAggregationSourceArgs

func ConfigurationAggregatorAccountAggregationSourcePtr(v *ConfigurationAggregatorAccountAggregationSourceArgs) ConfigurationAggregatorAccountAggregationSourcePtrInput {	return (*configurationAggregatorAccountAggregationSourcePtrType)(v)
}

func (*configurationAggregatorAccountAggregationSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationAggregatorAccountAggregationSource)(nil)).Elem()
}

func (i *configurationAggregatorAccountAggregationSourcePtrType) ToConfigurationAggregatorAccountAggregationSourcePtrOutput() ConfigurationAggregatorAccountAggregationSourcePtrOutput {
	return i.ToConfigurationAggregatorAccountAggregationSourcePtrOutputWithContext(context.Background())
}

func (i *configurationAggregatorAccountAggregationSourcePtrType) ToConfigurationAggregatorAccountAggregationSourcePtrOutputWithContext(ctx context.Context) ConfigurationAggregatorAccountAggregationSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationAggregatorAccountAggregationSourcePtrOutput)
}

type ConfigurationAggregatorAccountAggregationSourceOutput struct { *pulumi.OutputState }

func (ConfigurationAggregatorAccountAggregationSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationAggregatorAccountAggregationSource)(nil)).Elem()
}

func (o ConfigurationAggregatorAccountAggregationSourceOutput) ToConfigurationAggregatorAccountAggregationSourceOutput() ConfigurationAggregatorAccountAggregationSourceOutput {
	return o
}

func (o ConfigurationAggregatorAccountAggregationSourceOutput) ToConfigurationAggregatorAccountAggregationSourceOutputWithContext(ctx context.Context) ConfigurationAggregatorAccountAggregationSourceOutput {
	return o
}

func (o ConfigurationAggregatorAccountAggregationSourceOutput) ToConfigurationAggregatorAccountAggregationSourcePtrOutput() ConfigurationAggregatorAccountAggregationSourcePtrOutput {
	return o.ToConfigurationAggregatorAccountAggregationSourcePtrOutputWithContext(context.Background())
}

func (o ConfigurationAggregatorAccountAggregationSourceOutput) ToConfigurationAggregatorAccountAggregationSourcePtrOutputWithContext(ctx context.Context) ConfigurationAggregatorAccountAggregationSourcePtrOutput {
	return o.ApplyT(func(v ConfigurationAggregatorAccountAggregationSource) *ConfigurationAggregatorAccountAggregationSource {
		return &v
	}).(ConfigurationAggregatorAccountAggregationSourcePtrOutput)
}
// List of 12-digit account IDs of the account(s) being aggregated.
func (o ConfigurationAggregatorAccountAggregationSourceOutput) AccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ConfigurationAggregatorAccountAggregationSource) []string { return v.AccountIds }).(pulumi.StringArrayOutput)
}

// If true, aggregate existing AWS Config regions and future regions.
func (o ConfigurationAggregatorAccountAggregationSourceOutput) AllRegions() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ConfigurationAggregatorAccountAggregationSource) *bool { return v.AllRegions }).(pulumi.BoolPtrOutput)
}

// List of source regions being aggregated.
func (o ConfigurationAggregatorAccountAggregationSourceOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ConfigurationAggregatorAccountAggregationSource) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

type ConfigurationAggregatorAccountAggregationSourcePtrOutput struct { *pulumi.OutputState}

func (ConfigurationAggregatorAccountAggregationSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationAggregatorAccountAggregationSource)(nil)).Elem()
}

func (o ConfigurationAggregatorAccountAggregationSourcePtrOutput) ToConfigurationAggregatorAccountAggregationSourcePtrOutput() ConfigurationAggregatorAccountAggregationSourcePtrOutput {
	return o
}

func (o ConfigurationAggregatorAccountAggregationSourcePtrOutput) ToConfigurationAggregatorAccountAggregationSourcePtrOutputWithContext(ctx context.Context) ConfigurationAggregatorAccountAggregationSourcePtrOutput {
	return o
}

func (o ConfigurationAggregatorAccountAggregationSourcePtrOutput) Elem() ConfigurationAggregatorAccountAggregationSourceOutput {
	return o.ApplyT(func (v *ConfigurationAggregatorAccountAggregationSource) ConfigurationAggregatorAccountAggregationSource { return *v }).(ConfigurationAggregatorAccountAggregationSourceOutput)
}

// List of 12-digit account IDs of the account(s) being aggregated.
func (o ConfigurationAggregatorAccountAggregationSourcePtrOutput) AccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ConfigurationAggregatorAccountAggregationSource) []string { return v.AccountIds }).(pulumi.StringArrayOutput)
}

// If true, aggregate existing AWS Config regions and future regions.
func (o ConfigurationAggregatorAccountAggregationSourcePtrOutput) AllRegions() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ConfigurationAggregatorAccountAggregationSource) *bool { return v.AllRegions }).(pulumi.BoolPtrOutput)
}

// List of source regions being aggregated.
func (o ConfigurationAggregatorAccountAggregationSourcePtrOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ConfigurationAggregatorAccountAggregationSource) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ConfigurationAggregatorAccountAggregationSourceOutput{})
	pulumi.RegisterOutputType(ConfigurationAggregatorAccountAggregationSourcePtrOutput{})
}
