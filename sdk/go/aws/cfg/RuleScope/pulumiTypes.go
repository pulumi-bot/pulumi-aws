// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package RuleScope

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type RuleScope struct {
	// The IDs of the only AWS resource that you want to trigger an evaluation for the rule.
	// If you specify a resource ID, you must specify one resource type for `complianceResourceTypes`.
	ComplianceResourceId *string `pulumi:"complianceResourceId"`
	// A list of resource types of only those AWS resources that you want to trigger an
	// evaluation for the rule. e.g. `AWS::EC2::Instance`. You can only specify one type if you also specify
	// a resource ID for `complianceResourceId`. See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types.
	ComplianceResourceTypes []string `pulumi:"complianceResourceTypes"`
	// The tag key that is applied to only those AWS resources that you want you
	// want to trigger an evaluation for the rule.
	TagKey *string `pulumi:"tagKey"`
	// The tag value applied to only those AWS resources that you want to trigger an evaluation for the rule.
	TagValue *string `pulumi:"tagValue"`
}

type RuleScopeInput interface {
	pulumi.Input

	ToRuleScopeOutput() RuleScopeOutput
	ToRuleScopeOutputWithContext(context.Context) RuleScopeOutput
}

type RuleScopeArgs struct {
	// The IDs of the only AWS resource that you want to trigger an evaluation for the rule.
	// If you specify a resource ID, you must specify one resource type for `complianceResourceTypes`.
	ComplianceResourceId pulumi.StringPtrInput `pulumi:"complianceResourceId"`
	// A list of resource types of only those AWS resources that you want to trigger an
	// evaluation for the rule. e.g. `AWS::EC2::Instance`. You can only specify one type if you also specify
	// a resource ID for `complianceResourceId`. See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types.
	ComplianceResourceTypes pulumi.StringArrayInput `pulumi:"complianceResourceTypes"`
	// The tag key that is applied to only those AWS resources that you want you
	// want to trigger an evaluation for the rule.
	TagKey pulumi.StringPtrInput `pulumi:"tagKey"`
	// The tag value applied to only those AWS resources that you want to trigger an evaluation for the rule.
	TagValue pulumi.StringPtrInput `pulumi:"tagValue"`
}

func (RuleScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleScope)(nil)).Elem()
}

func (i RuleScopeArgs) ToRuleScopeOutput() RuleScopeOutput {
	return i.ToRuleScopeOutputWithContext(context.Background())
}

func (i RuleScopeArgs) ToRuleScopeOutputWithContext(ctx context.Context) RuleScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleScopeOutput)
}

func (i RuleScopeArgs) ToRuleScopePtrOutput() RuleScopePtrOutput {
	return i.ToRuleScopePtrOutputWithContext(context.Background())
}

func (i RuleScopeArgs) ToRuleScopePtrOutputWithContext(ctx context.Context) RuleScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleScopeOutput).ToRuleScopePtrOutputWithContext(ctx)
}

type RuleScopePtrInput interface {
	pulumi.Input

	ToRuleScopePtrOutput() RuleScopePtrOutput
	ToRuleScopePtrOutputWithContext(context.Context) RuleScopePtrOutput
}

type ruleScopePtrType RuleScopeArgs

func RuleScopePtr(v *RuleScopeArgs) RuleScopePtrInput {	return (*ruleScopePtrType)(v)
}

func (*ruleScopePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleScope)(nil)).Elem()
}

func (i *ruleScopePtrType) ToRuleScopePtrOutput() RuleScopePtrOutput {
	return i.ToRuleScopePtrOutputWithContext(context.Background())
}

func (i *ruleScopePtrType) ToRuleScopePtrOutputWithContext(ctx context.Context) RuleScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleScopePtrOutput)
}

type RuleScopeOutput struct { *pulumi.OutputState }

func (RuleScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleScope)(nil)).Elem()
}

func (o RuleScopeOutput) ToRuleScopeOutput() RuleScopeOutput {
	return o
}

func (o RuleScopeOutput) ToRuleScopeOutputWithContext(ctx context.Context) RuleScopeOutput {
	return o
}

func (o RuleScopeOutput) ToRuleScopePtrOutput() RuleScopePtrOutput {
	return o.ToRuleScopePtrOutputWithContext(context.Background())
}

func (o RuleScopeOutput) ToRuleScopePtrOutputWithContext(ctx context.Context) RuleScopePtrOutput {
	return o.ApplyT(func(v RuleScope) *RuleScope {
		return &v
	}).(RuleScopePtrOutput)
}
// The IDs of the only AWS resource that you want to trigger an evaluation for the rule.
// If you specify a resource ID, you must specify one resource type for `complianceResourceTypes`.
func (o RuleScopeOutput) ComplianceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v RuleScope) *string { return v.ComplianceResourceId }).(pulumi.StringPtrOutput)
}

// A list of resource types of only those AWS resources that you want to trigger an
// evaluation for the rule. e.g. `AWS::EC2::Instance`. You can only specify one type if you also specify
// a resource ID for `complianceResourceId`. See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types.
func (o RuleScopeOutput) ComplianceResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func (v RuleScope) []string { return v.ComplianceResourceTypes }).(pulumi.StringArrayOutput)
}

// The tag key that is applied to only those AWS resources that you want you
// want to trigger an evaluation for the rule.
func (o RuleScopeOutput) TagKey() pulumi.StringPtrOutput {
	return o.ApplyT(func (v RuleScope) *string { return v.TagKey }).(pulumi.StringPtrOutput)
}

// The tag value applied to only those AWS resources that you want to trigger an evaluation for the rule.
func (o RuleScopeOutput) TagValue() pulumi.StringPtrOutput {
	return o.ApplyT(func (v RuleScope) *string { return v.TagValue }).(pulumi.StringPtrOutput)
}

type RuleScopePtrOutput struct { *pulumi.OutputState}

func (RuleScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleScope)(nil)).Elem()
}

func (o RuleScopePtrOutput) ToRuleScopePtrOutput() RuleScopePtrOutput {
	return o
}

func (o RuleScopePtrOutput) ToRuleScopePtrOutputWithContext(ctx context.Context) RuleScopePtrOutput {
	return o
}

func (o RuleScopePtrOutput) Elem() RuleScopeOutput {
	return o.ApplyT(func (v *RuleScope) RuleScope { return *v }).(RuleScopeOutput)
}

// The IDs of the only AWS resource that you want to trigger an evaluation for the rule.
// If you specify a resource ID, you must specify one resource type for `complianceResourceTypes`.
func (o RuleScopePtrOutput) ComplianceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v RuleScope) *string { return v.ComplianceResourceId }).(pulumi.StringPtrOutput)
}

// A list of resource types of only those AWS resources that you want to trigger an
// evaluation for the rule. e.g. `AWS::EC2::Instance`. You can only specify one type if you also specify
// a resource ID for `complianceResourceId`. See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types.
func (o RuleScopePtrOutput) ComplianceResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func (v RuleScope) []string { return v.ComplianceResourceTypes }).(pulumi.StringArrayOutput)
}

// The tag key that is applied to only those AWS resources that you want you
// want to trigger an evaluation for the rule.
func (o RuleScopePtrOutput) TagKey() pulumi.StringPtrOutput {
	return o.ApplyT(func (v RuleScope) *string { return v.TagKey }).(pulumi.StringPtrOutput)
}

// The tag value applied to only those AWS resources that you want to trigger an evaluation for the rule.
func (o RuleScopePtrOutput) TagValue() pulumi.StringPtrOutput {
	return o.ApplyT(func (v RuleScope) *string { return v.TagValue }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(RuleScopeOutput{})
	pulumi.RegisterOutputType(RuleScopePtrOutput{})
}
