// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package SecretRotationRules

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type SecretRotationRules struct {
	// Specifies the number of days between automatic scheduled rotations of the secret.
	AutomaticallyAfterDays int `pulumi:"automaticallyAfterDays"`
}

type SecretRotationRulesInput interface {
	pulumi.Input

	ToSecretRotationRulesOutput() SecretRotationRulesOutput
	ToSecretRotationRulesOutputWithContext(context.Context) SecretRotationRulesOutput
}

type SecretRotationRulesArgs struct {
	// Specifies the number of days between automatic scheduled rotations of the secret.
	AutomaticallyAfterDays pulumi.IntInput `pulumi:"automaticallyAfterDays"`
}

func (SecretRotationRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationRules)(nil)).Elem()
}

func (i SecretRotationRulesArgs) ToSecretRotationRulesOutput() SecretRotationRulesOutput {
	return i.ToSecretRotationRulesOutputWithContext(context.Background())
}

func (i SecretRotationRulesArgs) ToSecretRotationRulesOutputWithContext(ctx context.Context) SecretRotationRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationRulesOutput)
}

func (i SecretRotationRulesArgs) ToSecretRotationRulesPtrOutput() SecretRotationRulesPtrOutput {
	return i.ToSecretRotationRulesPtrOutputWithContext(context.Background())
}

func (i SecretRotationRulesArgs) ToSecretRotationRulesPtrOutputWithContext(ctx context.Context) SecretRotationRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationRulesOutput).ToSecretRotationRulesPtrOutputWithContext(ctx)
}

type SecretRotationRulesPtrInput interface {
	pulumi.Input

	ToSecretRotationRulesPtrOutput() SecretRotationRulesPtrOutput
	ToSecretRotationRulesPtrOutputWithContext(context.Context) SecretRotationRulesPtrOutput
}

type secretRotationRulesPtrType SecretRotationRulesArgs

func SecretRotationRulesPtr(v *SecretRotationRulesArgs) SecretRotationRulesPtrInput {	return (*secretRotationRulesPtrType)(v)
}

func (*secretRotationRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationRules)(nil)).Elem()
}

func (i *secretRotationRulesPtrType) ToSecretRotationRulesPtrOutput() SecretRotationRulesPtrOutput {
	return i.ToSecretRotationRulesPtrOutputWithContext(context.Background())
}

func (i *secretRotationRulesPtrType) ToSecretRotationRulesPtrOutputWithContext(ctx context.Context) SecretRotationRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretRotationRulesPtrOutput)
}

type SecretRotationRulesOutput struct { *pulumi.OutputState }

func (SecretRotationRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretRotationRules)(nil)).Elem()
}

func (o SecretRotationRulesOutput) ToSecretRotationRulesOutput() SecretRotationRulesOutput {
	return o
}

func (o SecretRotationRulesOutput) ToSecretRotationRulesOutputWithContext(ctx context.Context) SecretRotationRulesOutput {
	return o
}

func (o SecretRotationRulesOutput) ToSecretRotationRulesPtrOutput() SecretRotationRulesPtrOutput {
	return o.ToSecretRotationRulesPtrOutputWithContext(context.Background())
}

func (o SecretRotationRulesOutput) ToSecretRotationRulesPtrOutputWithContext(ctx context.Context) SecretRotationRulesPtrOutput {
	return o.ApplyT(func(v SecretRotationRules) *SecretRotationRules {
		return &v
	}).(SecretRotationRulesPtrOutput)
}
// Specifies the number of days between automatic scheduled rotations of the secret.
func (o SecretRotationRulesOutput) AutomaticallyAfterDays() pulumi.IntOutput {
	return o.ApplyT(func (v SecretRotationRules) int { return v.AutomaticallyAfterDays }).(pulumi.IntOutput)
}

type SecretRotationRulesPtrOutput struct { *pulumi.OutputState}

func (SecretRotationRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretRotationRules)(nil)).Elem()
}

func (o SecretRotationRulesPtrOutput) ToSecretRotationRulesPtrOutput() SecretRotationRulesPtrOutput {
	return o
}

func (o SecretRotationRulesPtrOutput) ToSecretRotationRulesPtrOutputWithContext(ctx context.Context) SecretRotationRulesPtrOutput {
	return o
}

func (o SecretRotationRulesPtrOutput) Elem() SecretRotationRulesOutput {
	return o.ApplyT(func (v *SecretRotationRules) SecretRotationRules { return *v }).(SecretRotationRulesOutput)
}

// Specifies the number of days between automatic scheduled rotations of the secret.
func (o SecretRotationRulesPtrOutput) AutomaticallyAfterDays() pulumi.IntOutput {
	return o.ApplyT(func (v SecretRotationRules) int { return v.AutomaticallyAfterDays }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(SecretRotationRulesOutput{})
	pulumi.RegisterOutputType(SecretRotationRulesPtrOutput{})
}
