// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package LifecyclePolicyPolicyDetails

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"https:/github.com/pulumi/pulumi-aws/dlm/LifecyclePolicyPolicyDetailsSchedule"
	"https:/github.com/pulumi/pulumi-aws/dlm/LifecyclePolicyPolicyDetailsScheduleCreateRule"
	"https:/github.com/pulumi/pulumi-aws/dlm/LifecyclePolicyPolicyDetailsScheduleRetainRule"
)

type LifecyclePolicyPolicyDetails struct {
	// A list of resource types that should be targeted by the lifecycle policy. `VOLUME` is currently the only allowed value.
	ResourceTypes []string `pulumi:"resourceTypes"`
	// See the `schedule` configuration block.
	Schedules []dlmLifecyclePolicyPolicyDetailsSchedule.LifecyclePolicyPolicyDetailsSchedule `pulumi:"schedules"`
	// A mapping of tag keys and their values. Any resources that match the `resourceTypes` and are tagged with _any_ of these tags will be targeted.
	TargetTags map[string]interface{} `pulumi:"targetTags"`
}

type LifecyclePolicyPolicyDetailsInput interface {
	pulumi.Input

	ToLifecyclePolicyPolicyDetailsOutput() LifecyclePolicyPolicyDetailsOutput
	ToLifecyclePolicyPolicyDetailsOutputWithContext(context.Context) LifecyclePolicyPolicyDetailsOutput
}

type LifecyclePolicyPolicyDetailsArgs struct {
	// A list of resource types that should be targeted by the lifecycle policy. `VOLUME` is currently the only allowed value.
	ResourceTypes pulumi.StringArrayInput `pulumi:"resourceTypes"`
	// See the `schedule` configuration block.
	Schedules dlmLifecyclePolicyPolicyDetailsSchedule.LifecyclePolicyPolicyDetailsScheduleArrayInput `pulumi:"schedules"`
	// A mapping of tag keys and their values. Any resources that match the `resourceTypes` and are tagged with _any_ of these tags will be targeted.
	TargetTags pulumi.MapInput `pulumi:"targetTags"`
}

func (LifecyclePolicyPolicyDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyPolicyDetails)(nil)).Elem()
}

func (i LifecyclePolicyPolicyDetailsArgs) ToLifecyclePolicyPolicyDetailsOutput() LifecyclePolicyPolicyDetailsOutput {
	return i.ToLifecyclePolicyPolicyDetailsOutputWithContext(context.Background())
}

func (i LifecyclePolicyPolicyDetailsArgs) ToLifecyclePolicyPolicyDetailsOutputWithContext(ctx context.Context) LifecyclePolicyPolicyDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyPolicyDetailsOutput)
}

func (i LifecyclePolicyPolicyDetailsArgs) ToLifecyclePolicyPolicyDetailsPtrOutput() LifecyclePolicyPolicyDetailsPtrOutput {
	return i.ToLifecyclePolicyPolicyDetailsPtrOutputWithContext(context.Background())
}

func (i LifecyclePolicyPolicyDetailsArgs) ToLifecyclePolicyPolicyDetailsPtrOutputWithContext(ctx context.Context) LifecyclePolicyPolicyDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyPolicyDetailsOutput).ToLifecyclePolicyPolicyDetailsPtrOutputWithContext(ctx)
}

type LifecyclePolicyPolicyDetailsPtrInput interface {
	pulumi.Input

	ToLifecyclePolicyPolicyDetailsPtrOutput() LifecyclePolicyPolicyDetailsPtrOutput
	ToLifecyclePolicyPolicyDetailsPtrOutputWithContext(context.Context) LifecyclePolicyPolicyDetailsPtrOutput
}

type lifecyclePolicyPolicyDetailsPtrType LifecyclePolicyPolicyDetailsArgs

func LifecyclePolicyPolicyDetailsPtr(v *LifecyclePolicyPolicyDetailsArgs) LifecyclePolicyPolicyDetailsPtrInput {	return (*lifecyclePolicyPolicyDetailsPtrType)(v)
}

func (*lifecyclePolicyPolicyDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecyclePolicyPolicyDetails)(nil)).Elem()
}

func (i *lifecyclePolicyPolicyDetailsPtrType) ToLifecyclePolicyPolicyDetailsPtrOutput() LifecyclePolicyPolicyDetailsPtrOutput {
	return i.ToLifecyclePolicyPolicyDetailsPtrOutputWithContext(context.Background())
}

func (i *lifecyclePolicyPolicyDetailsPtrType) ToLifecyclePolicyPolicyDetailsPtrOutputWithContext(ctx context.Context) LifecyclePolicyPolicyDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyPolicyDetailsPtrOutput)
}

type LifecyclePolicyPolicyDetailsOutput struct { *pulumi.OutputState }

func (LifecyclePolicyPolicyDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyPolicyDetails)(nil)).Elem()
}

func (o LifecyclePolicyPolicyDetailsOutput) ToLifecyclePolicyPolicyDetailsOutput() LifecyclePolicyPolicyDetailsOutput {
	return o
}

func (o LifecyclePolicyPolicyDetailsOutput) ToLifecyclePolicyPolicyDetailsOutputWithContext(ctx context.Context) LifecyclePolicyPolicyDetailsOutput {
	return o
}

func (o LifecyclePolicyPolicyDetailsOutput) ToLifecyclePolicyPolicyDetailsPtrOutput() LifecyclePolicyPolicyDetailsPtrOutput {
	return o.ToLifecyclePolicyPolicyDetailsPtrOutputWithContext(context.Background())
}

func (o LifecyclePolicyPolicyDetailsOutput) ToLifecyclePolicyPolicyDetailsPtrOutputWithContext(ctx context.Context) LifecyclePolicyPolicyDetailsPtrOutput {
	return o.ApplyT(func(v LifecyclePolicyPolicyDetails) *LifecyclePolicyPolicyDetails {
		return &v
	}).(LifecyclePolicyPolicyDetailsPtrOutput)
}
// A list of resource types that should be targeted by the lifecycle policy. `VOLUME` is currently the only allowed value.
func (o LifecyclePolicyPolicyDetailsOutput) ResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func (v LifecyclePolicyPolicyDetails) []string { return v.ResourceTypes }).(pulumi.StringArrayOutput)
}

// See the `schedule` configuration block.
func (o LifecyclePolicyPolicyDetailsOutput) Schedules() dlmLifecyclePolicyPolicyDetailsSchedule.LifecyclePolicyPolicyDetailsScheduleArrayOutput {
	return o.ApplyT(func (v LifecyclePolicyPolicyDetails) []dlmLifecyclePolicyPolicyDetailsSchedule.LifecyclePolicyPolicyDetailsSchedule { return v.Schedules }).(dlmLifecyclePolicyPolicyDetailsSchedule.LifecyclePolicyPolicyDetailsScheduleArrayOutput)
}

// A mapping of tag keys and their values. Any resources that match the `resourceTypes` and are tagged with _any_ of these tags will be targeted.
func (o LifecyclePolicyPolicyDetailsOutput) TargetTags() pulumi.MapOutput {
	return o.ApplyT(func (v LifecyclePolicyPolicyDetails) map[string]interface{} { return v.TargetTags }).(pulumi.MapOutput)
}

type LifecyclePolicyPolicyDetailsPtrOutput struct { *pulumi.OutputState}

func (LifecyclePolicyPolicyDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecyclePolicyPolicyDetails)(nil)).Elem()
}

func (o LifecyclePolicyPolicyDetailsPtrOutput) ToLifecyclePolicyPolicyDetailsPtrOutput() LifecyclePolicyPolicyDetailsPtrOutput {
	return o
}

func (o LifecyclePolicyPolicyDetailsPtrOutput) ToLifecyclePolicyPolicyDetailsPtrOutputWithContext(ctx context.Context) LifecyclePolicyPolicyDetailsPtrOutput {
	return o
}

func (o LifecyclePolicyPolicyDetailsPtrOutput) Elem() LifecyclePolicyPolicyDetailsOutput {
	return o.ApplyT(func (v *LifecyclePolicyPolicyDetails) LifecyclePolicyPolicyDetails { return *v }).(LifecyclePolicyPolicyDetailsOutput)
}

// A list of resource types that should be targeted by the lifecycle policy. `VOLUME` is currently the only allowed value.
func (o LifecyclePolicyPolicyDetailsPtrOutput) ResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func (v LifecyclePolicyPolicyDetails) []string { return v.ResourceTypes }).(pulumi.StringArrayOutput)
}

// See the `schedule` configuration block.
func (o LifecyclePolicyPolicyDetailsPtrOutput) Schedules() dlmLifecyclePolicyPolicyDetailsSchedule.LifecyclePolicyPolicyDetailsScheduleArrayOutput {
	return o.ApplyT(func (v LifecyclePolicyPolicyDetails) []dlmLifecyclePolicyPolicyDetailsSchedule.LifecyclePolicyPolicyDetailsSchedule { return v.Schedules }).(dlmLifecyclePolicyPolicyDetailsSchedule.LifecyclePolicyPolicyDetailsScheduleArrayOutput)
}

// A mapping of tag keys and their values. Any resources that match the `resourceTypes` and are tagged with _any_ of these tags will be targeted.
func (o LifecyclePolicyPolicyDetailsPtrOutput) TargetTags() pulumi.MapOutput {
	return o.ApplyT(func (v LifecyclePolicyPolicyDetails) map[string]interface{} { return v.TargetTags }).(pulumi.MapOutput)
}

func init() {
	pulumi.RegisterOutputType(LifecyclePolicyPolicyDetailsOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyPolicyDetailsPtrOutput{})
}
