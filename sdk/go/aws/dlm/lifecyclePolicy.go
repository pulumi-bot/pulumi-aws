// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package dlm

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type LifecyclePolicy struct {
	pulumi.CustomResourceState

	Arn              pulumi.StringOutput                `pulumi:"arn"`
	Description      pulumi.StringOutput                `pulumi:"description"`
	ExecutionRoleArn pulumi.StringOutput                `pulumi:"executionRoleArn"`
	PolicyDetails    LifecyclePolicyPolicyDetailsOutput `pulumi:"policyDetails"`
	State            pulumi.StringPtrOutput             `pulumi:"state"`
	Tags             pulumi.StringMapOutput             `pulumi:"tags"`
}

// NewLifecyclePolicy registers a new resource with the given unique name, arguments, and options.
func NewLifecyclePolicy(ctx *pulumi.Context,
	name string, args *LifecyclePolicyArgs, opts ...pulumi.ResourceOption) (*LifecyclePolicy, error) {
	if args == nil || args.Description == nil {
		return nil, errors.New("missing required argument 'Description'")
	}
	if args == nil || args.ExecutionRoleArn == nil {
		return nil, errors.New("missing required argument 'ExecutionRoleArn'")
	}
	if args == nil || args.PolicyDetails == nil {
		return nil, errors.New("missing required argument 'PolicyDetails'")
	}
	if args == nil {
		args = &LifecyclePolicyArgs{}
	}
	var resource LifecyclePolicy
	err := ctx.RegisterResource("aws:dlm/lifecyclePolicy:LifecyclePolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLifecyclePolicy gets an existing LifecyclePolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLifecyclePolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LifecyclePolicyState, opts ...pulumi.ResourceOption) (*LifecyclePolicy, error) {
	var resource LifecyclePolicy
	err := ctx.ReadResource("aws:dlm/lifecyclePolicy:LifecyclePolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LifecyclePolicy resources.
type lifecyclePolicyState struct {
	Arn              *string                       `pulumi:"arn"`
	Description      *string                       `pulumi:"description"`
	ExecutionRoleArn *string                       `pulumi:"executionRoleArn"`
	PolicyDetails    *LifecyclePolicyPolicyDetails `pulumi:"policyDetails"`
	State            *string                       `pulumi:"state"`
	Tags             map[string]string             `pulumi:"tags"`
}

type LifecyclePolicyState struct {
	Arn              pulumi.StringPtrInput
	Description      pulumi.StringPtrInput
	ExecutionRoleArn pulumi.StringPtrInput
	PolicyDetails    LifecyclePolicyPolicyDetailsPtrInput
	State            pulumi.StringPtrInput
	Tags             pulumi.StringMapInput
}

func (LifecyclePolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*lifecyclePolicyState)(nil)).Elem()
}

type lifecyclePolicyArgs struct {
	Description      string                       `pulumi:"description"`
	ExecutionRoleArn string                       `pulumi:"executionRoleArn"`
	PolicyDetails    LifecyclePolicyPolicyDetails `pulumi:"policyDetails"`
	State            *string                      `pulumi:"state"`
	Tags             map[string]string            `pulumi:"tags"`
}

// The set of arguments for constructing a LifecyclePolicy resource.
type LifecyclePolicyArgs struct {
	Description      pulumi.StringInput
	ExecutionRoleArn pulumi.StringInput
	PolicyDetails    LifecyclePolicyPolicyDetailsInput
	State            pulumi.StringPtrInput
	Tags             pulumi.StringMapInput
}

func (LifecyclePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lifecyclePolicyArgs)(nil)).Elem()
}
