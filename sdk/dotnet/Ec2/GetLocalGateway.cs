// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    public static class GetLocalGateway
    {
        public static Task<GetLocalGatewayResult> InvokeAsync(GetLocalGatewayArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetLocalGatewayResult>("aws:ec2/getLocalGateway:getLocalGateway", args ?? new GetLocalGatewayArgs(), options.WithVersion());
    }


    public sealed class GetLocalGatewayArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetLocalGatewayFilterArgs>? _filters;
        public List<Inputs.GetLocalGatewayFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetLocalGatewayFilterArgs>());
            set => _filters = value;
        }

        [Input("id")]
        public string? Id { get; set; }

        [Input("state")]
        public string? State { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetLocalGatewayArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetLocalGatewayResult
    {
        public readonly ImmutableArray<Outputs.GetLocalGatewayFilterResult> Filters;
        public readonly string Id;
        public readonly string OutpostArn;
        public readonly string OwnerId;
        public readonly string State;
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetLocalGatewayResult(
            ImmutableArray<Outputs.GetLocalGatewayFilterResult> filters,

            string id,

            string outpostArn,

            string ownerId,

            string state,

            ImmutableDictionary<string, string> tags)
        {
            Filters = filters;
            Id = id;
            OutpostArn = outpostArn;
            OwnerId = ownerId;
            State = state;
            Tags = tags;
        }
    }
}
