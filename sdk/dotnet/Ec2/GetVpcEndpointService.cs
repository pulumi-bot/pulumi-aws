// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    public static class GetVpcEndpointService
    {
        public static Task<GetVpcEndpointServiceResult> InvokeAsync(GetVpcEndpointServiceArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetVpcEndpointServiceResult>("aws:ec2/getVpcEndpointService:getVpcEndpointService", args ?? new GetVpcEndpointServiceArgs(), options.WithVersion());
    }


    public sealed class GetVpcEndpointServiceArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetVpcEndpointServiceFilterArgs>? _filters;
        public List<Inputs.GetVpcEndpointServiceFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetVpcEndpointServiceFilterArgs>());
            set => _filters = value;
        }

        [Input("service")]
        public string? Service { get; set; }

        [Input("serviceName")]
        public string? ServiceName { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetVpcEndpointServiceArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetVpcEndpointServiceResult
    {
        public readonly bool AcceptanceRequired;
        public readonly string Arn;
        public readonly ImmutableArray<string> AvailabilityZones;
        public readonly ImmutableArray<string> BaseEndpointDnsNames;
        public readonly ImmutableArray<Outputs.GetVpcEndpointServiceFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool ManagesVpcEndpoints;
        public readonly string Owner;
        public readonly string PrivateDnsName;
        public readonly string? Service;
        public readonly string ServiceId;
        public readonly string ServiceName;
        public readonly string ServiceType;
        public readonly ImmutableDictionary<string, string> Tags;
        public readonly bool VpcEndpointPolicySupported;

        [OutputConstructor]
        private GetVpcEndpointServiceResult(
            bool acceptanceRequired,

            string arn,

            ImmutableArray<string> availabilityZones,

            ImmutableArray<string> baseEndpointDnsNames,

            ImmutableArray<Outputs.GetVpcEndpointServiceFilterResult> filters,

            string id,

            bool managesVpcEndpoints,

            string owner,

            string privateDnsName,

            string? service,

            string serviceId,

            string serviceName,

            string serviceType,

            ImmutableDictionary<string, string> tags,

            bool vpcEndpointPolicySupported)
        {
            AcceptanceRequired = acceptanceRequired;
            Arn = arn;
            AvailabilityZones = availabilityZones;
            BaseEndpointDnsNames = baseEndpointDnsNames;
            Filters = filters;
            Id = id;
            ManagesVpcEndpoints = managesVpcEndpoints;
            Owner = owner;
            PrivateDnsName = privateDnsName;
            Service = service;
            ServiceId = serviceId;
            ServiceName = serviceName;
            ServiceType = serviceType;
            Tags = tags;
            VpcEndpointPolicySupported = vpcEndpointPolicySupported;
        }
    }
}
