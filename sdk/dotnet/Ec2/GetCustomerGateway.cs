// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    public static class GetCustomerGateway
    {
        public static Task<GetCustomerGatewayResult> InvokeAsync(GetCustomerGatewayArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCustomerGatewayResult>("aws:ec2/getCustomerGateway:getCustomerGateway", args ?? new GetCustomerGatewayArgs(), options.WithVersion());
    }


    public sealed class GetCustomerGatewayArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetCustomerGatewayFilterArgs>? _filters;
        public List<Inputs.GetCustomerGatewayFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetCustomerGatewayFilterArgs>());
            set => _filters = value;
        }

        [Input("id")]
        public string? Id { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetCustomerGatewayArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCustomerGatewayResult
    {
        public readonly string Arn;
        public readonly int BgpAsn;
        public readonly ImmutableArray<Outputs.GetCustomerGatewayFilterResult> Filters;
        public readonly string? Id;
        public readonly string IpAddress;
        public readonly ImmutableDictionary<string, string> Tags;
        public readonly string Type;

        [OutputConstructor]
        private GetCustomerGatewayResult(
            string arn,

            int bgpAsn,

            ImmutableArray<Outputs.GetCustomerGatewayFilterResult> filters,

            string? id,

            string ipAddress,

            ImmutableDictionary<string, string> tags,

            string type)
        {
            Arn = arn;
            BgpAsn = bgpAsn;
            Filters = filters;
            Id = id;
            IpAddress = ipAddress;
            Tags = tags;
            Type = type;
        }
    }
}
