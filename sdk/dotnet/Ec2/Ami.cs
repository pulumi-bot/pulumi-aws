// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    public partial class Ami : Pulumi.CustomResource
    {
        [Output("architecture")]
        public Output<string?> Architecture { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("ebsBlockDevices")]
        public Output<ImmutableArray<Outputs.AmiEbsBlockDevice>> EbsBlockDevices { get; private set; } = null!;

        [Output("enaSupport")]
        public Output<bool?> EnaSupport { get; private set; } = null!;

        [Output("ephemeralBlockDevices")]
        public Output<ImmutableArray<Outputs.AmiEphemeralBlockDevice>> EphemeralBlockDevices { get; private set; } = null!;

        [Output("imageLocation")]
        public Output<string> ImageLocation { get; private set; } = null!;

        [Output("kernelId")]
        public Output<string?> KernelId { get; private set; } = null!;

        [Output("manageEbsSnapshots")]
        public Output<bool> ManageEbsSnapshots { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("ramdiskId")]
        public Output<string?> RamdiskId { get; private set; } = null!;

        [Output("rootDeviceName")]
        public Output<string?> RootDeviceName { get; private set; } = null!;

        [Output("rootSnapshotId")]
        public Output<string> RootSnapshotId { get; private set; } = null!;

        [Output("sriovNetSupport")]
        public Output<string?> SriovNetSupport { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("virtualizationType")]
        public Output<string?> VirtualizationType { get; private set; } = null!;


        /// <summary>
        /// Create a Ami resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Ami(string name, AmiArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:ec2/ami:Ami", name, args ?? new AmiArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Ami(string name, Input<string> id, AmiState? state = null, CustomResourceOptions? options = null)
            : base("aws:ec2/ami:Ami", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Ami resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Ami Get(string name, Input<string> id, AmiState? state = null, CustomResourceOptions? options = null)
        {
            return new Ami(name, id, state, options);
        }
    }

    public sealed class AmiArgs : Pulumi.ResourceArgs
    {
        [Input("architecture")]
        public Input<string>? Architecture { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("ebsBlockDevices")]
        private InputList<Inputs.AmiEbsBlockDeviceArgs>? _ebsBlockDevices;
        public InputList<Inputs.AmiEbsBlockDeviceArgs> EbsBlockDevices
        {
            get => _ebsBlockDevices ?? (_ebsBlockDevices = new InputList<Inputs.AmiEbsBlockDeviceArgs>());
            set => _ebsBlockDevices = value;
        }

        [Input("enaSupport")]
        public Input<bool>? EnaSupport { get; set; }

        [Input("ephemeralBlockDevices")]
        private InputList<Inputs.AmiEphemeralBlockDeviceArgs>? _ephemeralBlockDevices;
        public InputList<Inputs.AmiEphemeralBlockDeviceArgs> EphemeralBlockDevices
        {
            get => _ephemeralBlockDevices ?? (_ephemeralBlockDevices = new InputList<Inputs.AmiEphemeralBlockDeviceArgs>());
            set => _ephemeralBlockDevices = value;
        }

        [Input("imageLocation")]
        public Input<string>? ImageLocation { get; set; }

        [Input("kernelId")]
        public Input<string>? KernelId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("ramdiskId")]
        public Input<string>? RamdiskId { get; set; }

        [Input("rootDeviceName")]
        public Input<string>? RootDeviceName { get; set; }

        [Input("sriovNetSupport")]
        public Input<string>? SriovNetSupport { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("virtualizationType")]
        public Input<string>? VirtualizationType { get; set; }

        public AmiArgs()
        {
        }
    }

    public sealed class AmiState : Pulumi.ResourceArgs
    {
        [Input("architecture")]
        public Input<string>? Architecture { get; set; }

        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("ebsBlockDevices")]
        private InputList<Inputs.AmiEbsBlockDeviceGetArgs>? _ebsBlockDevices;
        public InputList<Inputs.AmiEbsBlockDeviceGetArgs> EbsBlockDevices
        {
            get => _ebsBlockDevices ?? (_ebsBlockDevices = new InputList<Inputs.AmiEbsBlockDeviceGetArgs>());
            set => _ebsBlockDevices = value;
        }

        [Input("enaSupport")]
        public Input<bool>? EnaSupport { get; set; }

        [Input("ephemeralBlockDevices")]
        private InputList<Inputs.AmiEphemeralBlockDeviceGetArgs>? _ephemeralBlockDevices;
        public InputList<Inputs.AmiEphemeralBlockDeviceGetArgs> EphemeralBlockDevices
        {
            get => _ephemeralBlockDevices ?? (_ephemeralBlockDevices = new InputList<Inputs.AmiEphemeralBlockDeviceGetArgs>());
            set => _ephemeralBlockDevices = value;
        }

        [Input("imageLocation")]
        public Input<string>? ImageLocation { get; set; }

        [Input("kernelId")]
        public Input<string>? KernelId { get; set; }

        [Input("manageEbsSnapshots")]
        public Input<bool>? ManageEbsSnapshots { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("ramdiskId")]
        public Input<string>? RamdiskId { get; set; }

        [Input("rootDeviceName")]
        public Input<string>? RootDeviceName { get; set; }

        [Input("rootSnapshotId")]
        public Input<string>? RootSnapshotId { get; set; }

        [Input("sriovNetSupport")]
        public Input<string>? SriovNetSupport { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("virtualizationType")]
        public Input<string>? VirtualizationType { get; set; }

        public AmiState()
        {
        }
    }
}
