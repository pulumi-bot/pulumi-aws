// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    public partial class SpotFleetRequest : Pulumi.CustomResource
    {
        [Output("allocationStrategy")]
        public Output<string?> AllocationStrategy { get; private set; } = null!;

        [Output("clientToken")]
        public Output<string> ClientToken { get; private set; } = null!;

        [Output("excessCapacityTerminationPolicy")]
        public Output<string?> ExcessCapacityTerminationPolicy { get; private set; } = null!;

        [Output("fleetType")]
        public Output<string?> FleetType { get; private set; } = null!;

        [Output("iamFleetRole")]
        public Output<string> IamFleetRole { get; private set; } = null!;

        [Output("instanceInterruptionBehaviour")]
        public Output<string?> InstanceInterruptionBehaviour { get; private set; } = null!;

        [Output("instancePoolsToUseCount")]
        public Output<int?> InstancePoolsToUseCount { get; private set; } = null!;

        [Output("launchSpecifications")]
        public Output<ImmutableArray<Outputs.SpotFleetRequestLaunchSpecification>> LaunchSpecifications { get; private set; } = null!;

        [Output("launchTemplateConfigs")]
        public Output<ImmutableArray<Outputs.SpotFleetRequestLaunchTemplateConfig>> LaunchTemplateConfigs { get; private set; } = null!;

        [Output("loadBalancers")]
        public Output<ImmutableArray<string>> LoadBalancers { get; private set; } = null!;

        [Output("replaceUnhealthyInstances")]
        public Output<bool?> ReplaceUnhealthyInstances { get; private set; } = null!;

        [Output("spotPrice")]
        public Output<string?> SpotPrice { get; private set; } = null!;

        [Output("spotRequestState")]
        public Output<string> SpotRequestState { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("targetCapacity")]
        public Output<int> TargetCapacity { get; private set; } = null!;

        [Output("targetGroupArns")]
        public Output<ImmutableArray<string>> TargetGroupArns { get; private set; } = null!;

        [Output("terminateInstancesWithExpiration")]
        public Output<bool?> TerminateInstancesWithExpiration { get; private set; } = null!;

        [Output("validFrom")]
        public Output<string?> ValidFrom { get; private set; } = null!;

        [Output("validUntil")]
        public Output<string?> ValidUntil { get; private set; } = null!;

        [Output("waitForFulfillment")]
        public Output<bool?> WaitForFulfillment { get; private set; } = null!;


        /// <summary>
        /// Create a SpotFleetRequest resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SpotFleetRequest(string name, SpotFleetRequestArgs args, CustomResourceOptions? options = null)
            : base("aws:ec2/spotFleetRequest:SpotFleetRequest", name, args ?? new SpotFleetRequestArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SpotFleetRequest(string name, Input<string> id, SpotFleetRequestState? state = null, CustomResourceOptions? options = null)
            : base("aws:ec2/spotFleetRequest:SpotFleetRequest", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SpotFleetRequest resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SpotFleetRequest Get(string name, Input<string> id, SpotFleetRequestState? state = null, CustomResourceOptions? options = null)
        {
            return new SpotFleetRequest(name, id, state, options);
        }
    }

    public sealed class SpotFleetRequestArgs : Pulumi.ResourceArgs
    {
        [Input("allocationStrategy")]
        public Input<string>? AllocationStrategy { get; set; }

        [Input("excessCapacityTerminationPolicy")]
        public Input<string>? ExcessCapacityTerminationPolicy { get; set; }

        [Input("fleetType")]
        public Input<string>? FleetType { get; set; }

        [Input("iamFleetRole", required: true)]
        public Input<string> IamFleetRole { get; set; } = null!;

        [Input("instanceInterruptionBehaviour")]
        public Input<string>? InstanceInterruptionBehaviour { get; set; }

        [Input("instancePoolsToUseCount")]
        public Input<int>? InstancePoolsToUseCount { get; set; }

        [Input("launchSpecifications")]
        private InputList<Inputs.SpotFleetRequestLaunchSpecificationArgs>? _launchSpecifications;
        public InputList<Inputs.SpotFleetRequestLaunchSpecificationArgs> LaunchSpecifications
        {
            get => _launchSpecifications ?? (_launchSpecifications = new InputList<Inputs.SpotFleetRequestLaunchSpecificationArgs>());
            set => _launchSpecifications = value;
        }

        [Input("launchTemplateConfigs")]
        private InputList<Inputs.SpotFleetRequestLaunchTemplateConfigArgs>? _launchTemplateConfigs;
        public InputList<Inputs.SpotFleetRequestLaunchTemplateConfigArgs> LaunchTemplateConfigs
        {
            get => _launchTemplateConfigs ?? (_launchTemplateConfigs = new InputList<Inputs.SpotFleetRequestLaunchTemplateConfigArgs>());
            set => _launchTemplateConfigs = value;
        }

        [Input("loadBalancers")]
        private InputList<string>? _loadBalancers;
        public InputList<string> LoadBalancers
        {
            get => _loadBalancers ?? (_loadBalancers = new InputList<string>());
            set => _loadBalancers = value;
        }

        [Input("replaceUnhealthyInstances")]
        public Input<bool>? ReplaceUnhealthyInstances { get; set; }

        [Input("spotPrice")]
        public Input<string>? SpotPrice { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("targetCapacity", required: true)]
        public Input<int> TargetCapacity { get; set; } = null!;

        [Input("targetGroupArns")]
        private InputList<string>? _targetGroupArns;
        public InputList<string> TargetGroupArns
        {
            get => _targetGroupArns ?? (_targetGroupArns = new InputList<string>());
            set => _targetGroupArns = value;
        }

        [Input("terminateInstancesWithExpiration")]
        public Input<bool>? TerminateInstancesWithExpiration { get; set; }

        [Input("validFrom")]
        public Input<string>? ValidFrom { get; set; }

        [Input("validUntil")]
        public Input<string>? ValidUntil { get; set; }

        [Input("waitForFulfillment")]
        public Input<bool>? WaitForFulfillment { get; set; }

        public SpotFleetRequestArgs()
        {
        }
    }

    public sealed class SpotFleetRequestState : Pulumi.ResourceArgs
    {
        [Input("allocationStrategy")]
        public Input<string>? AllocationStrategy { get; set; }

        [Input("clientToken")]
        public Input<string>? ClientToken { get; set; }

        [Input("excessCapacityTerminationPolicy")]
        public Input<string>? ExcessCapacityTerminationPolicy { get; set; }

        [Input("fleetType")]
        public Input<string>? FleetType { get; set; }

        [Input("iamFleetRole")]
        public Input<string>? IamFleetRole { get; set; }

        [Input("instanceInterruptionBehaviour")]
        public Input<string>? InstanceInterruptionBehaviour { get; set; }

        [Input("instancePoolsToUseCount")]
        public Input<int>? InstancePoolsToUseCount { get; set; }

        [Input("launchSpecifications")]
        private InputList<Inputs.SpotFleetRequestLaunchSpecificationGetArgs>? _launchSpecifications;
        public InputList<Inputs.SpotFleetRequestLaunchSpecificationGetArgs> LaunchSpecifications
        {
            get => _launchSpecifications ?? (_launchSpecifications = new InputList<Inputs.SpotFleetRequestLaunchSpecificationGetArgs>());
            set => _launchSpecifications = value;
        }

        [Input("launchTemplateConfigs")]
        private InputList<Inputs.SpotFleetRequestLaunchTemplateConfigGetArgs>? _launchTemplateConfigs;
        public InputList<Inputs.SpotFleetRequestLaunchTemplateConfigGetArgs> LaunchTemplateConfigs
        {
            get => _launchTemplateConfigs ?? (_launchTemplateConfigs = new InputList<Inputs.SpotFleetRequestLaunchTemplateConfigGetArgs>());
            set => _launchTemplateConfigs = value;
        }

        [Input("loadBalancers")]
        private InputList<string>? _loadBalancers;
        public InputList<string> LoadBalancers
        {
            get => _loadBalancers ?? (_loadBalancers = new InputList<string>());
            set => _loadBalancers = value;
        }

        [Input("replaceUnhealthyInstances")]
        public Input<bool>? ReplaceUnhealthyInstances { get; set; }

        [Input("spotPrice")]
        public Input<string>? SpotPrice { get; set; }

        [Input("spotRequestState")]
        public Input<string>? SpotRequestState { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("targetCapacity")]
        public Input<int>? TargetCapacity { get; set; }

        [Input("targetGroupArns")]
        private InputList<string>? _targetGroupArns;
        public InputList<string> TargetGroupArns
        {
            get => _targetGroupArns ?? (_targetGroupArns = new InputList<string>());
            set => _targetGroupArns = value;
        }

        [Input("terminateInstancesWithExpiration")]
        public Input<bool>? TerminateInstancesWithExpiration { get; set; }

        [Input("validFrom")]
        public Input<string>? ValidFrom { get; set; }

        [Input("validUntil")]
        public Input<string>? ValidUntil { get; set; }

        [Input("waitForFulfillment")]
        public Input<bool>? WaitForFulfillment { get; set; }

        public SpotFleetRequestState()
        {
        }
    }
}
