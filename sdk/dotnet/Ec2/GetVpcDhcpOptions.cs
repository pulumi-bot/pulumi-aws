// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    public static class GetVpcDhcpOptions
    {
        public static Task<GetVpcDhcpOptionsResult> InvokeAsync(GetVpcDhcpOptionsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetVpcDhcpOptionsResult>("aws:ec2/getVpcDhcpOptions:getVpcDhcpOptions", args ?? new GetVpcDhcpOptionsArgs(), options.WithVersion());
    }


    public sealed class GetVpcDhcpOptionsArgs : Pulumi.InvokeArgs
    {
        [Input("dhcpOptionsId")]
        public string? DhcpOptionsId { get; set; }

        [Input("filters")]
        private List<Inputs.GetVpcDhcpOptionsFilterArgs>? _filters;
        public List<Inputs.GetVpcDhcpOptionsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetVpcDhcpOptionsFilterArgs>());
            set => _filters = value;
        }

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetVpcDhcpOptionsArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetVpcDhcpOptionsResult
    {
        public readonly string Arn;
        public readonly string DhcpOptionsId;
        public readonly string DomainName;
        public readonly ImmutableArray<string> DomainNameServers;
        public readonly ImmutableArray<Outputs.GetVpcDhcpOptionsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> NetbiosNameServers;
        public readonly string NetbiosNodeType;
        public readonly ImmutableArray<string> NtpServers;
        public readonly string OwnerId;
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetVpcDhcpOptionsResult(
            string arn,

            string dhcpOptionsId,

            string domainName,

            ImmutableArray<string> domainNameServers,

            ImmutableArray<Outputs.GetVpcDhcpOptionsFilterResult> filters,

            string id,

            ImmutableArray<string> netbiosNameServers,

            string netbiosNodeType,

            ImmutableArray<string> ntpServers,

            string ownerId,

            ImmutableDictionary<string, string> tags)
        {
            Arn = arn;
            DhcpOptionsId = dhcpOptionsId;
            DomainName = domainName;
            DomainNameServers = domainNameServers;
            Filters = filters;
            Id = id;
            NetbiosNameServers = netbiosNameServers;
            NetbiosNodeType = netbiosNodeType;
            NtpServers = ntpServers;
            OwnerId = ownerId;
            Tags = tags;
        }
    }
}
