// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    public static class GetInstances
    {
        public static Task<GetInstancesResult> InvokeAsync(GetInstancesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetInstancesResult>("aws:ec2/getInstances:getInstances", args ?? new GetInstancesArgs(), options.WithVersion());
    }


    public sealed class GetInstancesArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetInstancesFilterArgs>? _filters;
        public List<Inputs.GetInstancesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetInstancesFilterArgs>());
            set => _filters = value;
        }

        [Input("instanceStateNames")]
        private List<string>? _instanceStateNames;
        public List<string> InstanceStateNames
        {
            get => _instanceStateNames ?? (_instanceStateNames = new List<string>());
            set => _instanceStateNames = value;
        }

        [Input("instanceTags")]
        private Dictionary<string, string>? _instanceTags;
        public Dictionary<string, string> InstanceTags
        {
            get => _instanceTags ?? (_instanceTags = new Dictionary<string, string>());
            set => _instanceTags = value;
        }

        public GetInstancesArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetInstancesResult
    {
        public readonly ImmutableArray<Outputs.GetInstancesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly ImmutableArray<string> InstanceStateNames;
        public readonly ImmutableDictionary<string, string> InstanceTags;
        public readonly ImmutableArray<string> PrivateIps;
        public readonly ImmutableArray<string> PublicIps;

        [OutputConstructor]
        private GetInstancesResult(
            ImmutableArray<Outputs.GetInstancesFilterResult> filters,

            string id,

            ImmutableArray<string> ids,

            ImmutableArray<string> instanceStateNames,

            ImmutableDictionary<string, string> instanceTags,

            ImmutableArray<string> privateIps,

            ImmutableArray<string> publicIps)
        {
            Filters = filters;
            Id = id;
            Ids = ids;
            InstanceStateNames = instanceStateNames;
            InstanceTags = instanceTags;
            PrivateIps = privateIps;
            PublicIps = publicIps;
        }
    }
}
