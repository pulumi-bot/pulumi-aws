// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.AutoScaling
{
    public static class GetGroup
    {
        public static Task<GetGroupResult> InvokeAsync(GetGroupArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetGroupResult>("aws:autoscaling/getGroup:getGroup", args ?? new GetGroupArgs(), options.WithVersion());
    }


    public sealed class GetGroupArgs : Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetGroupArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetGroupResult
    {
        public readonly string Arn;
        public readonly ImmutableArray<string> AvailabilityZones;
        public readonly int DefaultCooldown;
        public readonly int DesiredCapacity;
        public readonly int HealthCheckGracePeriod;
        public readonly string HealthCheckType;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string LaunchConfiguration;
        public readonly ImmutableArray<string> LoadBalancers;
        public readonly int MaxSize;
        public readonly int MinSize;
        public readonly string Name;
        public readonly bool NewInstancesProtectedFromScaleIn;
        public readonly string PlacementGroup;
        public readonly string ServiceLinkedRoleArn;
        public readonly string Status;
        public readonly ImmutableArray<string> TargetGroupArns;
        public readonly ImmutableArray<string> TerminationPolicies;
        public readonly string VpcZoneIdentifier;

        [OutputConstructor]
        private GetGroupResult(
            string arn,

            ImmutableArray<string> availabilityZones,

            int defaultCooldown,

            int desiredCapacity,

            int healthCheckGracePeriod,

            string healthCheckType,

            string id,

            string launchConfiguration,

            ImmutableArray<string> loadBalancers,

            int maxSize,

            int minSize,

            string name,

            bool newInstancesProtectedFromScaleIn,

            string placementGroup,

            string serviceLinkedRoleArn,

            string status,

            ImmutableArray<string> targetGroupArns,

            ImmutableArray<string> terminationPolicies,

            string vpcZoneIdentifier)
        {
            Arn = arn;
            AvailabilityZones = availabilityZones;
            DefaultCooldown = defaultCooldown;
            DesiredCapacity = desiredCapacity;
            HealthCheckGracePeriod = healthCheckGracePeriod;
            HealthCheckType = healthCheckType;
            Id = id;
            LaunchConfiguration = launchConfiguration;
            LoadBalancers = loadBalancers;
            MaxSize = maxSize;
            MinSize = minSize;
            Name = name;
            NewInstancesProtectedFromScaleIn = newInstancesProtectedFromScaleIn;
            PlacementGroup = placementGroup;
            ServiceLinkedRoleArn = serviceLinkedRoleArn;
            Status = status;
            TargetGroupArns = targetGroupArns;
            TerminationPolicies = terminationPolicies;
            VpcZoneIdentifier = vpcZoneIdentifier;
        }
    }
}
