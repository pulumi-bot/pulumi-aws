// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ebs
{
    public static class GetEbsVolumes
    {
        public static Task<GetEbsVolumesResult> InvokeAsync(GetEbsVolumesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetEbsVolumesResult>("aws:ebs/getEbsVolumes:getEbsVolumes", args ?? new GetEbsVolumesArgs(), options.WithVersion());
    }


    public sealed class GetEbsVolumesArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetEbsVolumesFilterArgs>? _filters;
        public List<Inputs.GetEbsVolumesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetEbsVolumesFilterArgs>());
            set => _filters = value;
        }

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetEbsVolumesArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetEbsVolumesResult
    {
        public readonly ImmutableArray<Outputs.GetEbsVolumesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly ImmutableDictionary<string, string>? Tags;

        [OutputConstructor]
        private GetEbsVolumesResult(
            ImmutableArray<Outputs.GetEbsVolumesFilterResult> filters,

            string id,

            ImmutableArray<string> ids,

            ImmutableDictionary<string, string>? tags)
        {
            Filters = filters;
            Id = id;
            Ids = ids;
            Tags = tags;
        }
    }
}
