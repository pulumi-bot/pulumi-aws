// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws
{
    public static class GetAvailabilityZones
    {
        public static Task<GetAvailabilityZonesResult> InvokeAsync(GetAvailabilityZonesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAvailabilityZonesResult>("aws:index/getAvailabilityZones:getAvailabilityZones", args ?? new GetAvailabilityZonesArgs(), options.WithVersion());
    }


    public sealed class GetAvailabilityZonesArgs : Pulumi.InvokeArgs
    {
        [Input("allAvailabilityZones")]
        public bool? AllAvailabilityZones { get; set; }

        [Input("excludeNames")]
        private List<string>? _excludeNames;
        public List<string> ExcludeNames
        {
            get => _excludeNames ?? (_excludeNames = new List<string>());
            set => _excludeNames = value;
        }

        [Input("excludeZoneIds")]
        private List<string>? _excludeZoneIds;
        public List<string> ExcludeZoneIds
        {
            get => _excludeZoneIds ?? (_excludeZoneIds = new List<string>());
            set => _excludeZoneIds = value;
        }

        [Input("filters")]
        private List<Inputs.GetAvailabilityZonesFilterArgs>? _filters;
        public List<Inputs.GetAvailabilityZonesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetAvailabilityZonesFilterArgs>());
            set => _filters = value;
        }

        [Input("state")]
        public string? State { get; set; }

        public GetAvailabilityZonesArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAvailabilityZonesResult
    {
        public readonly bool? AllAvailabilityZones;
        public readonly ImmutableArray<string> ExcludeNames;
        public readonly ImmutableArray<string> ExcludeZoneIds;
        public readonly ImmutableArray<Outputs.GetAvailabilityZonesFilterResult> Filters;
        public readonly ImmutableArray<string> GroupNames;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Names;
        public readonly string? State;
        public readonly ImmutableArray<string> ZoneIds;

        [OutputConstructor]
        private GetAvailabilityZonesResult(
            bool? allAvailabilityZones,

            ImmutableArray<string> excludeNames,

            ImmutableArray<string> excludeZoneIds,

            ImmutableArray<Outputs.GetAvailabilityZonesFilterResult> filters,

            ImmutableArray<string> groupNames,

            string id,

            ImmutableArray<string> names,

            string? state,

            ImmutableArray<string> zoneIds)
        {
            AllAvailabilityZones = allAvailabilityZones;
            ExcludeNames = excludeNames;
            ExcludeZoneIds = excludeZoneIds;
            Filters = filters;
            GroupNames = groupNames;
            Id = id;
            Names = names;
            State = state;
            ZoneIds = zoneIds;
        }
    }
}
