// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Acmpca
{
    public static class GetCertificateAuthority
    {
        public static Task<GetCertificateAuthorityResult> InvokeAsync(GetCertificateAuthorityArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCertificateAuthorityResult>("aws:acmpca/getCertificateAuthority:getCertificateAuthority", args ?? new GetCertificateAuthorityArgs(), options.WithVersion());
    }


    public sealed class GetCertificateAuthorityArgs : Pulumi.InvokeArgs
    {
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        [Input("revocationConfigurations")]
        private List<Inputs.GetCertificateAuthorityRevocationConfigurationArgs>? _revocationConfigurations;
        public List<Inputs.GetCertificateAuthorityRevocationConfigurationArgs> RevocationConfigurations
        {
            get => _revocationConfigurations ?? (_revocationConfigurations = new List<Inputs.GetCertificateAuthorityRevocationConfigurationArgs>());
            set => _revocationConfigurations = value;
        }

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetCertificateAuthorityArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCertificateAuthorityResult
    {
        public readonly string Arn;
        public readonly string Certificate;
        public readonly string CertificateChain;
        public readonly string CertificateSigningRequest;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string NotAfter;
        public readonly string NotBefore;
        public readonly ImmutableArray<Outputs.GetCertificateAuthorityRevocationConfigurationResult> RevocationConfigurations;
        public readonly string Serial;
        public readonly string Status;
        public readonly ImmutableDictionary<string, string> Tags;
        public readonly string Type;

        [OutputConstructor]
        private GetCertificateAuthorityResult(
            string arn,

            string certificate,

            string certificateChain,

            string certificateSigningRequest,

            string id,

            string notAfter,

            string notBefore,

            ImmutableArray<Outputs.GetCertificateAuthorityRevocationConfigurationResult> revocationConfigurations,

            string serial,

            string status,

            ImmutableDictionary<string, string> tags,

            string type)
        {
            Arn = arn;
            Certificate = certificate;
            CertificateChain = certificateChain;
            CertificateSigningRequest = certificateSigningRequest;
            Id = id;
            NotAfter = notAfter;
            NotBefore = notBefore;
            RevocationConfigurations = revocationConfigurations;
            Serial = serial;
            Status = status;
            Tags = tags;
            Type = type;
        }
    }
}
