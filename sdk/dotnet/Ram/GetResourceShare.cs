// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ram
{
    public static class GetResourceShare
    {
        public static Task<GetResourceShareResult> InvokeAsync(GetResourceShareArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetResourceShareResult>("aws:ram/getResourceShare:getResourceShare", args ?? new GetResourceShareArgs(), options.WithVersion());
    }


    public sealed class GetResourceShareArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetResourceShareFilterArgs>? _filters;
        public List<Inputs.GetResourceShareFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetResourceShareFilterArgs>());
            set => _filters = value;
        }

        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("resourceOwner", required: true)]
        public string ResourceOwner { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetResourceShareArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetResourceShareResult
    {
        public readonly string Arn;
        public readonly ImmutableArray<Outputs.GetResourceShareFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string OwningAccountId;
        public readonly string ResourceOwner;
        public readonly string Status;
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetResourceShareResult(
            string arn,

            ImmutableArray<Outputs.GetResourceShareFilterResult> filters,

            string id,

            string name,

            string owningAccountId,

            string resourceOwner,

            string status,

            ImmutableDictionary<string, string> tags)
        {
            Arn = arn;
            Filters = filters;
            Id = id;
            Name = name;
            OwningAccountId = owningAccountId;
            ResourceOwner = resourceOwner;
            Status = status;
            Tags = tags;
        }
    }
}
