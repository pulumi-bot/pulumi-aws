// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.StorageGateway
{
    public partial class SmbFileShare : Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("authentication")]
        public Output<string?> Authentication { get; private set; } = null!;

        [Output("defaultStorageClass")]
        public Output<string?> DefaultStorageClass { get; private set; } = null!;

        [Output("fileshareId")]
        public Output<string> FileshareId { get; private set; } = null!;

        [Output("gatewayArn")]
        public Output<string> GatewayArn { get; private set; } = null!;

        [Output("guessMimeTypeEnabled")]
        public Output<bool?> GuessMimeTypeEnabled { get; private set; } = null!;

        [Output("invalidUserLists")]
        public Output<ImmutableArray<string>> InvalidUserLists { get; private set; } = null!;

        [Output("kmsEncrypted")]
        public Output<bool?> KmsEncrypted { get; private set; } = null!;

        [Output("kmsKeyArn")]
        public Output<string?> KmsKeyArn { get; private set; } = null!;

        [Output("locationArn")]
        public Output<string> LocationArn { get; private set; } = null!;

        [Output("objectAcl")]
        public Output<string?> ObjectAcl { get; private set; } = null!;

        [Output("path")]
        public Output<string> Path { get; private set; } = null!;

        [Output("readOnly")]
        public Output<bool?> ReadOnly { get; private set; } = null!;

        [Output("requesterPays")]
        public Output<bool?> RequesterPays { get; private set; } = null!;

        [Output("roleArn")]
        public Output<string> RoleArn { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("validUserLists")]
        public Output<ImmutableArray<string>> ValidUserLists { get; private set; } = null!;


        /// <summary>
        /// Create a SmbFileShare resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SmbFileShare(string name, SmbFileShareArgs args, CustomResourceOptions? options = null)
            : base("aws:storagegateway/smbFileShare:SmbFileShare", name, args ?? new SmbFileShareArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SmbFileShare(string name, Input<string> id, SmbFileShareState? state = null, CustomResourceOptions? options = null)
            : base("aws:storagegateway/smbFileShare:SmbFileShare", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SmbFileShare resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SmbFileShare Get(string name, Input<string> id, SmbFileShareState? state = null, CustomResourceOptions? options = null)
        {
            return new SmbFileShare(name, id, state, options);
        }
    }

    public sealed class SmbFileShareArgs : Pulumi.ResourceArgs
    {
        [Input("authentication")]
        public Input<string>? Authentication { get; set; }

        [Input("defaultStorageClass")]
        public Input<string>? DefaultStorageClass { get; set; }

        [Input("gatewayArn", required: true)]
        public Input<string> GatewayArn { get; set; } = null!;

        [Input("guessMimeTypeEnabled")]
        public Input<bool>? GuessMimeTypeEnabled { get; set; }

        [Input("invalidUserLists")]
        private InputList<string>? _invalidUserLists;
        public InputList<string> InvalidUserLists
        {
            get => _invalidUserLists ?? (_invalidUserLists = new InputList<string>());
            set => _invalidUserLists = value;
        }

        [Input("kmsEncrypted")]
        public Input<bool>? KmsEncrypted { get; set; }

        [Input("kmsKeyArn")]
        public Input<string>? KmsKeyArn { get; set; }

        [Input("locationArn", required: true)]
        public Input<string> LocationArn { get; set; } = null!;

        [Input("objectAcl")]
        public Input<string>? ObjectAcl { get; set; }

        [Input("readOnly")]
        public Input<bool>? ReadOnly { get; set; }

        [Input("requesterPays")]
        public Input<bool>? RequesterPays { get; set; }

        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("validUserLists")]
        private InputList<string>? _validUserLists;
        public InputList<string> ValidUserLists
        {
            get => _validUserLists ?? (_validUserLists = new InputList<string>());
            set => _validUserLists = value;
        }

        public SmbFileShareArgs()
        {
        }
    }

    public sealed class SmbFileShareState : Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("authentication")]
        public Input<string>? Authentication { get; set; }

        [Input("defaultStorageClass")]
        public Input<string>? DefaultStorageClass { get; set; }

        [Input("fileshareId")]
        public Input<string>? FileshareId { get; set; }

        [Input("gatewayArn")]
        public Input<string>? GatewayArn { get; set; }

        [Input("guessMimeTypeEnabled")]
        public Input<bool>? GuessMimeTypeEnabled { get; set; }

        [Input("invalidUserLists")]
        private InputList<string>? _invalidUserLists;
        public InputList<string> InvalidUserLists
        {
            get => _invalidUserLists ?? (_invalidUserLists = new InputList<string>());
            set => _invalidUserLists = value;
        }

        [Input("kmsEncrypted")]
        public Input<bool>? KmsEncrypted { get; set; }

        [Input("kmsKeyArn")]
        public Input<string>? KmsKeyArn { get; set; }

        [Input("locationArn")]
        public Input<string>? LocationArn { get; set; }

        [Input("objectAcl")]
        public Input<string>? ObjectAcl { get; set; }

        [Input("path")]
        public Input<string>? Path { get; set; }

        [Input("readOnly")]
        public Input<bool>? ReadOnly { get; set; }

        [Input("requesterPays")]
        public Input<bool>? RequesterPays { get; set; }

        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("validUserLists")]
        private InputList<string>? _validUserLists;
        public InputList<string> ValidUserLists
        {
            get => _validUserLists ?? (_validUserLists = new InputList<string>());
            set => _validUserLists = value;
        }

        public SmbFileShareState()
        {
        }
    }
}
