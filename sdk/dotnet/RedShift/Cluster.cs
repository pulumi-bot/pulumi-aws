// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.RedShift
{
    public partial class Cluster : Pulumi.CustomResource
    {
        [Output("allowVersionUpgrade")]
        public Output<bool?> AllowVersionUpgrade { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("automatedSnapshotRetentionPeriod")]
        public Output<int?> AutomatedSnapshotRetentionPeriod { get; private set; } = null!;

        [Output("availabilityZone")]
        public Output<string> AvailabilityZone { get; private set; } = null!;

        [Output("clusterIdentifier")]
        public Output<string> ClusterIdentifier { get; private set; } = null!;

        [Output("clusterParameterGroupName")]
        public Output<string> ClusterParameterGroupName { get; private set; } = null!;

        [Output("clusterPublicKey")]
        public Output<string> ClusterPublicKey { get; private set; } = null!;

        [Output("clusterRevisionNumber")]
        public Output<string> ClusterRevisionNumber { get; private set; } = null!;

        [Output("clusterSecurityGroups")]
        public Output<ImmutableArray<string>> ClusterSecurityGroups { get; private set; } = null!;

        [Output("clusterSubnetGroupName")]
        public Output<string> ClusterSubnetGroupName { get; private set; } = null!;

        [Output("clusterType")]
        public Output<string> ClusterType { get; private set; } = null!;

        [Output("clusterVersion")]
        public Output<string?> ClusterVersion { get; private set; } = null!;

        [Output("databaseName")]
        public Output<string> DatabaseName { get; private set; } = null!;

        [Output("dnsName")]
        public Output<string> DnsName { get; private set; } = null!;

        [Output("elasticIp")]
        public Output<string?> ElasticIp { get; private set; } = null!;

        [Output("encrypted")]
        public Output<bool?> Encrypted { get; private set; } = null!;

        [Output("endpoint")]
        public Output<string> Endpoint { get; private set; } = null!;

        [Output("enhancedVpcRouting")]
        public Output<bool> EnhancedVpcRouting { get; private set; } = null!;

        [Output("finalSnapshotIdentifier")]
        public Output<string?> FinalSnapshotIdentifier { get; private set; } = null!;

        [Output("iamRoles")]
        public Output<ImmutableArray<string>> IamRoles { get; private set; } = null!;

        [Output("kmsKeyId")]
        public Output<string> KmsKeyId { get; private set; } = null!;

        [Output("logging")]
        public Output<Outputs.ClusterLogging?> Logging { get; private set; } = null!;

        [Output("masterPassword")]
        public Output<string?> MasterPassword { get; private set; } = null!;

        [Output("masterUsername")]
        public Output<string?> MasterUsername { get; private set; } = null!;

        [Output("nodeType")]
        public Output<string> NodeType { get; private set; } = null!;

        [Output("numberOfNodes")]
        public Output<int?> NumberOfNodes { get; private set; } = null!;

        [Output("ownerAccount")]
        public Output<string?> OwnerAccount { get; private set; } = null!;

        [Output("port")]
        public Output<int?> Port { get; private set; } = null!;

        [Output("preferredMaintenanceWindow")]
        public Output<string> PreferredMaintenanceWindow { get; private set; } = null!;

        [Output("publiclyAccessible")]
        public Output<bool?> PubliclyAccessible { get; private set; } = null!;

        [Output("skipFinalSnapshot")]
        public Output<bool?> SkipFinalSnapshot { get; private set; } = null!;

        [Output("snapshotClusterIdentifier")]
        public Output<string?> SnapshotClusterIdentifier { get; private set; } = null!;

        [Output("snapshotCopy")]
        public Output<Outputs.ClusterSnapshotCopy?> SnapshotCopy { get; private set; } = null!;

        [Output("snapshotIdentifier")]
        public Output<string?> SnapshotIdentifier { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("vpcSecurityGroupIds")]
        public Output<ImmutableArray<string>> VpcSecurityGroupIds { get; private set; } = null!;


        /// <summary>
        /// Create a Cluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Cluster(string name, ClusterArgs args, CustomResourceOptions? options = null)
            : base("aws:redshift/cluster:Cluster", name, args ?? new ClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Cluster(string name, Input<string> id, ClusterState? state = null, CustomResourceOptions? options = null)
            : base("aws:redshift/cluster:Cluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Cluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Cluster Get(string name, Input<string> id, ClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new Cluster(name, id, state, options);
        }
    }

    public sealed class ClusterArgs : Pulumi.ResourceArgs
    {
        [Input("allowVersionUpgrade")]
        public Input<bool>? AllowVersionUpgrade { get; set; }

        [Input("automatedSnapshotRetentionPeriod")]
        public Input<int>? AutomatedSnapshotRetentionPeriod { get; set; }

        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        [Input("clusterIdentifier", required: true)]
        public Input<string> ClusterIdentifier { get; set; } = null!;

        [Input("clusterParameterGroupName")]
        public Input<string>? ClusterParameterGroupName { get; set; }

        [Input("clusterPublicKey")]
        public Input<string>? ClusterPublicKey { get; set; }

        [Input("clusterRevisionNumber")]
        public Input<string>? ClusterRevisionNumber { get; set; }

        [Input("clusterSecurityGroups")]
        private InputList<string>? _clusterSecurityGroups;
        public InputList<string> ClusterSecurityGroups
        {
            get => _clusterSecurityGroups ?? (_clusterSecurityGroups = new InputList<string>());
            set => _clusterSecurityGroups = value;
        }

        [Input("clusterSubnetGroupName")]
        public Input<string>? ClusterSubnetGroupName { get; set; }

        [Input("clusterType")]
        public Input<string>? ClusterType { get; set; }

        [Input("clusterVersion")]
        public Input<string>? ClusterVersion { get; set; }

        [Input("databaseName")]
        public Input<string>? DatabaseName { get; set; }

        [Input("elasticIp")]
        public Input<string>? ElasticIp { get; set; }

        [Input("encrypted")]
        public Input<bool>? Encrypted { get; set; }

        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        [Input("enhancedVpcRouting")]
        public Input<bool>? EnhancedVpcRouting { get; set; }

        [Input("finalSnapshotIdentifier")]
        public Input<string>? FinalSnapshotIdentifier { get; set; }

        [Input("iamRoles")]
        private InputList<string>? _iamRoles;
        public InputList<string> IamRoles
        {
            get => _iamRoles ?? (_iamRoles = new InputList<string>());
            set => _iamRoles = value;
        }

        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        [Input("logging")]
        public Input<Inputs.ClusterLoggingArgs>? Logging { get; set; }

        [Input("masterPassword")]
        public Input<string>? MasterPassword { get; set; }

        [Input("masterUsername")]
        public Input<string>? MasterUsername { get; set; }

        [Input("nodeType", required: true)]
        public Input<string> NodeType { get; set; } = null!;

        [Input("numberOfNodes")]
        public Input<int>? NumberOfNodes { get; set; }

        [Input("ownerAccount")]
        public Input<string>? OwnerAccount { get; set; }

        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("preferredMaintenanceWindow")]
        public Input<string>? PreferredMaintenanceWindow { get; set; }

        [Input("publiclyAccessible")]
        public Input<bool>? PubliclyAccessible { get; set; }

        [Input("skipFinalSnapshot")]
        public Input<bool>? SkipFinalSnapshot { get; set; }

        [Input("snapshotClusterIdentifier")]
        public Input<string>? SnapshotClusterIdentifier { get; set; }

        [Input("snapshotCopy")]
        public Input<Inputs.ClusterSnapshotCopyArgs>? SnapshotCopy { get; set; }

        [Input("snapshotIdentifier")]
        public Input<string>? SnapshotIdentifier { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("vpcSecurityGroupIds")]
        private InputList<string>? _vpcSecurityGroupIds;
        public InputList<string> VpcSecurityGroupIds
        {
            get => _vpcSecurityGroupIds ?? (_vpcSecurityGroupIds = new InputList<string>());
            set => _vpcSecurityGroupIds = value;
        }

        public ClusterArgs()
        {
        }
    }

    public sealed class ClusterState : Pulumi.ResourceArgs
    {
        [Input("allowVersionUpgrade")]
        public Input<bool>? AllowVersionUpgrade { get; set; }

        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("automatedSnapshotRetentionPeriod")]
        public Input<int>? AutomatedSnapshotRetentionPeriod { get; set; }

        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        [Input("clusterIdentifier")]
        public Input<string>? ClusterIdentifier { get; set; }

        [Input("clusterParameterGroupName")]
        public Input<string>? ClusterParameterGroupName { get; set; }

        [Input("clusterPublicKey")]
        public Input<string>? ClusterPublicKey { get; set; }

        [Input("clusterRevisionNumber")]
        public Input<string>? ClusterRevisionNumber { get; set; }

        [Input("clusterSecurityGroups")]
        private InputList<string>? _clusterSecurityGroups;
        public InputList<string> ClusterSecurityGroups
        {
            get => _clusterSecurityGroups ?? (_clusterSecurityGroups = new InputList<string>());
            set => _clusterSecurityGroups = value;
        }

        [Input("clusterSubnetGroupName")]
        public Input<string>? ClusterSubnetGroupName { get; set; }

        [Input("clusterType")]
        public Input<string>? ClusterType { get; set; }

        [Input("clusterVersion")]
        public Input<string>? ClusterVersion { get; set; }

        [Input("databaseName")]
        public Input<string>? DatabaseName { get; set; }

        [Input("dnsName")]
        public Input<string>? DnsName { get; set; }

        [Input("elasticIp")]
        public Input<string>? ElasticIp { get; set; }

        [Input("encrypted")]
        public Input<bool>? Encrypted { get; set; }

        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        [Input("enhancedVpcRouting")]
        public Input<bool>? EnhancedVpcRouting { get; set; }

        [Input("finalSnapshotIdentifier")]
        public Input<string>? FinalSnapshotIdentifier { get; set; }

        [Input("iamRoles")]
        private InputList<string>? _iamRoles;
        public InputList<string> IamRoles
        {
            get => _iamRoles ?? (_iamRoles = new InputList<string>());
            set => _iamRoles = value;
        }

        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        [Input("logging")]
        public Input<Inputs.ClusterLoggingGetArgs>? Logging { get; set; }

        [Input("masterPassword")]
        public Input<string>? MasterPassword { get; set; }

        [Input("masterUsername")]
        public Input<string>? MasterUsername { get; set; }

        [Input("nodeType")]
        public Input<string>? NodeType { get; set; }

        [Input("numberOfNodes")]
        public Input<int>? NumberOfNodes { get; set; }

        [Input("ownerAccount")]
        public Input<string>? OwnerAccount { get; set; }

        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("preferredMaintenanceWindow")]
        public Input<string>? PreferredMaintenanceWindow { get; set; }

        [Input("publiclyAccessible")]
        public Input<bool>? PubliclyAccessible { get; set; }

        [Input("skipFinalSnapshot")]
        public Input<bool>? SkipFinalSnapshot { get; set; }

        [Input("snapshotClusterIdentifier")]
        public Input<string>? SnapshotClusterIdentifier { get; set; }

        [Input("snapshotCopy")]
        public Input<Inputs.ClusterSnapshotCopyGetArgs>? SnapshotCopy { get; set; }

        [Input("snapshotIdentifier")]
        public Input<string>? SnapshotIdentifier { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("vpcSecurityGroupIds")]
        private InputList<string>? _vpcSecurityGroupIds;
        public InputList<string> VpcSecurityGroupIds
        {
            get => _vpcSecurityGroupIds ?? (_vpcSecurityGroupIds = new InputList<string>());
            set => _vpcSecurityGroupIds = value;
        }

        public ClusterState()
        {
        }
    }
}
