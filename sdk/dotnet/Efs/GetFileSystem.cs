// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Efs
{
    public static class GetFileSystem
    {
        public static Task<GetFileSystemResult> InvokeAsync(GetFileSystemArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetFileSystemResult>("aws:efs/getFileSystem:getFileSystem", args ?? new GetFileSystemArgs(), options.WithVersion());
    }


    public sealed class GetFileSystemArgs : Pulumi.InvokeArgs
    {
        [Input("creationToken")]
        public string? CreationToken { get; set; }

        [Input("fileSystemId")]
        public string? FileSystemId { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetFileSystemArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetFileSystemResult
    {
        public readonly string Arn;
        public readonly string CreationToken;
        public readonly string DnsName;
        public readonly bool Encrypted;
        public readonly string FileSystemId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string KmsKeyId;
        public readonly Outputs.GetFileSystemLifecyclePolicyResult LifecyclePolicy;
        public readonly string PerformanceMode;
        public readonly double ProvisionedThroughputInMibps;
        public readonly int SizeInBytes;
        public readonly ImmutableDictionary<string, string> Tags;
        public readonly string ThroughputMode;

        [OutputConstructor]
        private GetFileSystemResult(
            string arn,

            string creationToken,

            string dnsName,

            bool encrypted,

            string fileSystemId,

            string id,

            string kmsKeyId,

            Outputs.GetFileSystemLifecyclePolicyResult lifecyclePolicy,

            string performanceMode,

            double provisionedThroughputInMibps,

            int sizeInBytes,

            ImmutableDictionary<string, string> tags,

            string throughputMode)
        {
            Arn = arn;
            CreationToken = creationToken;
            DnsName = dnsName;
            Encrypted = encrypted;
            FileSystemId = fileSystemId;
            Id = id;
            KmsKeyId = kmsKeyId;
            LifecyclePolicy = lifecyclePolicy;
            PerformanceMode = performanceMode;
            ProvisionedThroughputInMibps = provisionedThroughputInMibps;
            SizeInBytes = sizeInBytes;
            Tags = tags;
            ThroughputMode = throughputMode;
        }
    }
}
