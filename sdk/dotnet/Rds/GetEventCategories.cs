// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Rds
{
    public static class GetEventCategories
    {
        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// List the event categories of all the RDS resources.
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var exampleEventCategories = Output.Create(Aws.Rds.GetEventCategories.InvokeAsync());
        ///         this.Example = exampleEventCategories.Apply(exampleEventCategories =&gt; exampleEventCategories.EventCategories);
        ///     }
        /// 
        ///     [Output("example")]
        ///     public Output&lt;string&gt; Example { get; set; }
        /// }
        /// ```
        /// 
        /// List the event categories specific to the RDS resource `db-snapshot`.
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var exampleEventCategories = Output.Create(Aws.Rds.GetEventCategories.InvokeAsync(new Aws.Rds.GetEventCategoriesArgs
        ///         {
        ///             SourceType = "db-snapshot",
        ///         }));
        ///         this.Example = exampleEventCategories.Apply(exampleEventCategories =&gt; exampleEventCategories.EventCategories);
        ///     }
        /// 
        ///     [Output("example")]
        ///     public Output&lt;string&gt; Example { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetEventCategoriesResult> InvokeAsync(GetEventCategoriesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetEventCategoriesResult>("aws:rds/getEventCategories:getEventCategories", args ?? new GetEventCategoriesArgs(), options.WithVersion());

        public static Output<GetEventCategoriesResult> Apply(GetEventCategoriesApplyArgs? args = null, InvokeOptions? options = null)
        {
            args = args ?? new GetEventCategoriesApplyArgs();
            return Pulumi.Output.All(
                args.SourceType.Box()
            ).Apply(a => {
                    var args = new GetEventCategoriesArgs();
                    a[0].Set(args, nameof(args.SourceType));
                    return InvokeAsync(args, options);
            });
        }
    }


    public sealed class GetEventCategoriesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The type of source that will be generating the events. Valid options are db-instance, db-security-group, db-parameter-group, db-snapshot, db-cluster or db-cluster-snapshot.
        /// </summary>
        [Input("sourceType")]
        public string? SourceType { get; set; }

        public GetEventCategoriesArgs()
        {
        }
    }

    public sealed class GetEventCategoriesApplyArgs
    {
        /// <summary>
        /// The type of source that will be generating the events. Valid options are db-instance, db-security-group, db-parameter-group, db-snapshot, db-cluster or db-cluster-snapshot.
        /// </summary>
        [Input("sourceType")]
        public Input<string>? SourceType { get; set; }

        public GetEventCategoriesApplyArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetEventCategoriesResult
    {
        /// <summary>
        /// A list of the event categories.
        /// </summary>
        public readonly ImmutableArray<string> EventCategories;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? SourceType;

        [OutputConstructor]
        private GetEventCategoriesResult(
            ImmutableArray<string> eventCategories,

            string id,

            string? sourceType)
        {
            EventCategories = eventCategories;
            Id = id;
            SourceType = sourceType;
        }
    }
}
