// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ecr
{
    public static class GetRepository
    {
        public static Task<GetRepositoryResult> InvokeAsync(GetRepositoryArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRepositoryResult>("aws:ecr/getRepository:getRepository", args ?? new GetRepositoryArgs(), options.WithVersion());
    }


    public sealed class GetRepositoryArgs : Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("registryId")]
        public string? RegistryId { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetRepositoryArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetRepositoryResult
    {
        public readonly string Arn;
        public readonly ImmutableArray<Outputs.GetRepositoryEncryptionConfigurationResult> EncryptionConfigurations;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetRepositoryImageScanningConfigurationResult> ImageScanningConfigurations;
        public readonly string ImageTagMutability;
        public readonly string Name;
        public readonly string RegistryId;
        public readonly string RepositoryUrl;
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetRepositoryResult(
            string arn,

            ImmutableArray<Outputs.GetRepositoryEncryptionConfigurationResult> encryptionConfigurations,

            string id,

            ImmutableArray<Outputs.GetRepositoryImageScanningConfigurationResult> imageScanningConfigurations,

            string imageTagMutability,

            string name,

            string registryId,

            string repositoryUrl,

            ImmutableDictionary<string, string> tags)
        {
            Arn = arn;
            EncryptionConfigurations = encryptionConfigurations;
            Id = id;
            ImageScanningConfigurations = imageScanningConfigurations;
            ImageTagMutability = imageTagMutability;
            Name = name;
            RegistryId = registryId;
            RepositoryUrl = repositoryUrl;
            Tags = tags;
        }
    }
}
