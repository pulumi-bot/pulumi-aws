// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Iot
{
    public static class GetEndpoint
    {
        /// <summary>
        /// Returns a unique endpoint specific to the AWS account making the call.
        /// </summary>
        public static Task<GetEndpointResult> InvokeAsync(GetEndpointArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetEndpointResult>("aws:iot/getEndpoint:getEndpoint", args ?? new GetEndpointArgs(), options.WithVersion());

        public static Output<GetEndpointResult> Apply(GetEndpointApplyArgs? args = null, InvokeOptions? options = null)
        {
            args = args ?? new GetEndpointApplyArgs();
            return Pulumi.Output.All(
                args.EndpointType.Box()
            ).Apply(a => {
                    var args = new GetEndpointArgs();
                    a[0].Set(args, nameof(args.EndpointType));
                    return InvokeAsync(args, options);
            });
        }
    }


    public sealed class GetEndpointArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Endpoint type. Valid values: `iot:CredentialProvider`, `iot:Data`, `iot:Data-ATS`, `iot:Job`.
        /// </summary>
        [Input("endpointType")]
        public string? EndpointType { get; set; }

        public GetEndpointArgs()
        {
        }
    }

    public sealed class GetEndpointApplyArgs
    {
        /// <summary>
        /// Endpoint type. Valid values: `iot:CredentialProvider`, `iot:Data`, `iot:Data-ATS`, `iot:Job`.
        /// </summary>
        [Input("endpointType")]
        public Input<string>? EndpointType { get; set; }

        public GetEndpointApplyArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetEndpointResult
    {
        /// <summary>
        /// The endpoint based on `endpoint_type`:
        /// * No `endpoint_type`: Either `iot:Data` or `iot:Data-ATS` [depending on region](https://aws.amazon.com/blogs/iot/aws-iot-core-ats-endpoints/)
        /// * `iot:CredentialsProvider`: `IDENTIFIER.credentials.iot.REGION.amazonaws.com`
        /// * `iot:Data`: `IDENTIFIER.iot.REGION.amazonaws.com`
        /// * `iot:Data-ATS`: `IDENTIFIER-ats.iot.REGION.amazonaws.com`
        /// * `iot:Job`: `IDENTIFIER.jobs.iot.REGION.amazonaws.com`
        /// </summary>
        public readonly string EndpointAddress;
        public readonly string? EndpointType;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetEndpointResult(
            string endpointAddress,

            string? endpointType,

            string id)
        {
            EndpointAddress = endpointAddress;
            EndpointType = endpointType;
            Id = id;
        }
    }
}
