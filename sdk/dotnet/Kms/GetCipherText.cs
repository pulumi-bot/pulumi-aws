// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Kms
{
    public static class GetCipherText
    {
        public static Task<GetCipherTextResult> InvokeAsync(GetCipherTextArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCipherTextResult>("aws:kms/getCipherText:getCipherText", args ?? new GetCipherTextArgs(), options.WithVersion());
    }


    public sealed class GetCipherTextArgs : Pulumi.InvokeArgs
    {
        [Input("context")]
        private Dictionary<string, string>? _context;
        public Dictionary<string, string> Context
        {
            get => _context ?? (_context = new Dictionary<string, string>());
            set => _context = value;
        }

        [Input("keyId", required: true)]
        public string KeyId { get; set; } = null!;

        [Input("plaintext", required: true)]
        public string Plaintext { get; set; } = null!;

        public GetCipherTextArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCipherTextResult
    {
        public readonly string CiphertextBlob;
        public readonly ImmutableDictionary<string, string>? Context;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string KeyId;
        public readonly string Plaintext;

        [OutputConstructor]
        private GetCipherTextResult(
            string ciphertextBlob,

            ImmutableDictionary<string, string>? context,

            string id,

            string keyId,

            string plaintext)
        {
            CiphertextBlob = ciphertextBlob;
            Context = context;
            Id = id;
            KeyId = keyId;
            Plaintext = plaintext;
        }
    }
}
