# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'EventDestinationCloudwatchDestination',
    'EventDestinationKinesisDestination',
    'EventDestinationSnsDestination',
    'ReceiptRuleAddHeaderAction',
    'ReceiptRuleBounceAction',
    'ReceiptRuleLambdaAction',
    'ReceiptRuleS3Action',
    'ReceiptRuleSnsAction',
    'ReceiptRuleStopAction',
    'ReceiptRuleWorkmailAction',
]

@pulumi.output_type
class EventDestinationCloudwatchDestination(dict):
    default_value: str = pulumi.output_property("defaultValue")
    """
    The default value for the event
    """
    dimension_name: str = pulumi.output_property("dimensionName")
    """
    The name for the dimension
    """
    value_source: str = pulumi.output_property("valueSource")
    """
    The source for the value. It can be either `"messageTag"` or `"emailHeader"`
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class EventDestinationKinesisDestination(dict):
    role_arn: str = pulumi.output_property("roleArn")
    """
    The ARN of the role that has permissions to access the Kinesis Stream
    """
    stream_arn: str = pulumi.output_property("streamArn")
    """
    The ARN of the Kinesis Stream
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class EventDestinationSnsDestination(dict):
    topic_arn: str = pulumi.output_property("topicArn")
    """
    The ARN of the SNS topic
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ReceiptRuleAddHeaderAction(dict):
    header_name: str = pulumi.output_property("headerName")
    """
    The name of the header to add
    """
    header_value: str = pulumi.output_property("headerValue")
    """
    The value of the header to add
    """
    position: float = pulumi.output_property("position")
    """
    The position of the action in the receipt rule
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ReceiptRuleBounceAction(dict):
    message: str = pulumi.output_property("message")
    """
    The message to send
    """
    position: float = pulumi.output_property("position")
    """
    The position of the action in the receipt rule
    """
    sender: str = pulumi.output_property("sender")
    """
    The email address of the sender
    """
    smtp_reply_code: str = pulumi.output_property("smtpReplyCode")
    """
    The RFC 5321 SMTP reply code
    """
    status_code: Optional[str] = pulumi.output_property("statusCode")
    """
    The RFC 3463 SMTP enhanced status code
    """
    topic_arn: Optional[str] = pulumi.output_property("topicArn")
    """
    The ARN of an SNS topic to notify
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ReceiptRuleLambdaAction(dict):
    function_arn: str = pulumi.output_property("functionArn")
    """
    The ARN of the Lambda function to invoke
    """
    invocation_type: Optional[str] = pulumi.output_property("invocationType")
    """
    Event or RequestResponse
    """
    position: float = pulumi.output_property("position")
    """
    The position of the action in the receipt rule
    """
    topic_arn: Optional[str] = pulumi.output_property("topicArn")
    """
    The ARN of an SNS topic to notify
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ReceiptRuleS3Action(dict):
    bucket_name: str = pulumi.output_property("bucketName")
    """
    The name of the S3 bucket
    """
    kms_key_arn: Optional[str] = pulumi.output_property("kmsKeyArn")
    """
    The ARN of the KMS key
    """
    object_key_prefix: Optional[str] = pulumi.output_property("objectKeyPrefix")
    """
    The key prefix of the S3 bucket
    """
    position: float = pulumi.output_property("position")
    """
    The position of the action in the receipt rule
    """
    topic_arn: Optional[str] = pulumi.output_property("topicArn")
    """
    The ARN of an SNS topic to notify
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ReceiptRuleSnsAction(dict):
    position: float = pulumi.output_property("position")
    """
    The position of the action in the receipt rule
    """
    topic_arn: str = pulumi.output_property("topicArn")
    """
    The ARN of an SNS topic to notify
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ReceiptRuleStopAction(dict):
    position: float = pulumi.output_property("position")
    """
    The position of the action in the receipt rule
    """
    scope: str = pulumi.output_property("scope")
    """
    The scope to apply
    """
    topic_arn: Optional[str] = pulumi.output_property("topicArn")
    """
    The ARN of an SNS topic to notify
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ReceiptRuleWorkmailAction(dict):
    organization_arn: str = pulumi.output_property("organizationArn")
    """
    The ARN of the WorkMail organization
    """
    position: float = pulumi.output_property("position")
    """
    The position of the action in the receipt rule
    """
    topic_arn: Optional[str] = pulumi.output_property("topicArn")
    """
    The ARN of an SNS topic to notify
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


