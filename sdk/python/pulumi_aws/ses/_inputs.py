# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'EventDestinationCloudwatchDestinationArgs',
    'EventDestinationKinesisDestinationArgs',
    'EventDestinationSnsDestinationArgs',
    'ReceiptRuleAddHeaderActionArgs',
    'ReceiptRuleBounceActionArgs',
    'ReceiptRuleLambdaActionArgs',
    'ReceiptRuleS3ActionArgs',
    'ReceiptRuleSnsActionArgs',
    'ReceiptRuleStopActionArgs',
    'ReceiptRuleWorkmailActionArgs',
]

@pulumi.input_type
class EventDestinationCloudwatchDestinationArgs:
    default_value: pulumi.Input[str] = pulumi.input_property("defaultValue")
    """
    The default value for the event
    """
    dimension_name: pulumi.Input[str] = pulumi.input_property("dimensionName")
    """
    The name for the dimension
    """
    value_source: pulumi.Input[str] = pulumi.input_property("valueSource")
    """
    The source for the value. It can be either `"messageTag"` or `"emailHeader"`
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, default_value: pulumi.Input[str], dimension_name: pulumi.Input[str], value_source: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] default_value: The default value for the event
        :param pulumi.Input[str] dimension_name: The name for the dimension
        :param pulumi.Input[str] value_source: The source for the value. It can be either `"messageTag"` or `"emailHeader"`
        """
        __self__.default_value = default_value
        __self__.dimension_name = dimension_name
        __self__.value_source = value_source

@pulumi.input_type
class EventDestinationKinesisDestinationArgs:
    role_arn: pulumi.Input[str] = pulumi.input_property("roleArn")
    """
    The ARN of the role that has permissions to access the Kinesis Stream
    """
    stream_arn: pulumi.Input[str] = pulumi.input_property("streamArn")
    """
    The ARN of the Kinesis Stream
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, role_arn: pulumi.Input[str], stream_arn: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] role_arn: The ARN of the role that has permissions to access the Kinesis Stream
        :param pulumi.Input[str] stream_arn: The ARN of the Kinesis Stream
        """
        __self__.role_arn = role_arn
        __self__.stream_arn = stream_arn

@pulumi.input_type
class EventDestinationSnsDestinationArgs:
    topic_arn: pulumi.Input[str] = pulumi.input_property("topicArn")
    """
    The ARN of the SNS topic
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, topic_arn: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] topic_arn: The ARN of the SNS topic
        """
        __self__.topic_arn = topic_arn

@pulumi.input_type
class ReceiptRuleAddHeaderActionArgs:
    header_name: pulumi.Input[str] = pulumi.input_property("headerName")
    """
    The name of the header to add
    """
    header_value: pulumi.Input[str] = pulumi.input_property("headerValue")
    """
    The value of the header to add
    """
    position: pulumi.Input[float] = pulumi.input_property("position")
    """
    The position of the action in the receipt rule
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, header_name: pulumi.Input[str], header_value: pulumi.Input[str], position: pulumi.Input[float]) -> None:
        """
        :param pulumi.Input[str] header_name: The name of the header to add
        :param pulumi.Input[str] header_value: The value of the header to add
        :param pulumi.Input[float] position: The position of the action in the receipt rule
        """
        __self__.header_name = header_name
        __self__.header_value = header_value
        __self__.position = position

@pulumi.input_type
class ReceiptRuleBounceActionArgs:
    message: pulumi.Input[str] = pulumi.input_property("message")
    """
    The message to send
    """
    position: pulumi.Input[float] = pulumi.input_property("position")
    """
    The position of the action in the receipt rule
    """
    sender: pulumi.Input[str] = pulumi.input_property("sender")
    """
    The email address of the sender
    """
    smtp_reply_code: pulumi.Input[str] = pulumi.input_property("smtpReplyCode")
    """
    The RFC 5321 SMTP reply code
    """
    status_code: Optional[pulumi.Input[str]] = pulumi.input_property("statusCode")
    """
    The RFC 3463 SMTP enhanced status code
    """
    topic_arn: Optional[pulumi.Input[str]] = pulumi.input_property("topicArn")
    """
    The ARN of an SNS topic to notify
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, message: pulumi.Input[str], position: pulumi.Input[float], sender: pulumi.Input[str], smtp_reply_code: pulumi.Input[str], status_code: Optional[pulumi.Input[str]] = None, topic_arn: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] message: The message to send
        :param pulumi.Input[float] position: The position of the action in the receipt rule
        :param pulumi.Input[str] sender: The email address of the sender
        :param pulumi.Input[str] smtp_reply_code: The RFC 5321 SMTP reply code
        :param pulumi.Input[str] status_code: The RFC 3463 SMTP enhanced status code
        :param pulumi.Input[str] topic_arn: The ARN of an SNS topic to notify
        """
        __self__.message = message
        __self__.position = position
        __self__.sender = sender
        __self__.smtp_reply_code = smtp_reply_code
        __self__.status_code = status_code
        __self__.topic_arn = topic_arn

@pulumi.input_type
class ReceiptRuleLambdaActionArgs:
    function_arn: pulumi.Input[str] = pulumi.input_property("functionArn")
    """
    The ARN of the Lambda function to invoke
    """
    position: pulumi.Input[float] = pulumi.input_property("position")
    """
    The position of the action in the receipt rule
    """
    invocation_type: Optional[pulumi.Input[str]] = pulumi.input_property("invocationType")
    """
    Event or RequestResponse
    """
    topic_arn: Optional[pulumi.Input[str]] = pulumi.input_property("topicArn")
    """
    The ARN of an SNS topic to notify
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, function_arn: pulumi.Input[str], position: pulumi.Input[float], invocation_type: Optional[pulumi.Input[str]] = None, topic_arn: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] function_arn: The ARN of the Lambda function to invoke
        :param pulumi.Input[float] position: The position of the action in the receipt rule
        :param pulumi.Input[str] invocation_type: Event or RequestResponse
        :param pulumi.Input[str] topic_arn: The ARN of an SNS topic to notify
        """
        __self__.function_arn = function_arn
        __self__.position = position
        __self__.invocation_type = invocation_type
        __self__.topic_arn = topic_arn

@pulumi.input_type
class ReceiptRuleS3ActionArgs:
    bucket_name: pulumi.Input[str] = pulumi.input_property("bucketName")
    """
    The name of the S3 bucket
    """
    position: pulumi.Input[float] = pulumi.input_property("position")
    """
    The position of the action in the receipt rule
    """
    kms_key_arn: Optional[pulumi.Input[str]] = pulumi.input_property("kmsKeyArn")
    """
    The ARN of the KMS key
    """
    object_key_prefix: Optional[pulumi.Input[str]] = pulumi.input_property("objectKeyPrefix")
    """
    The key prefix of the S3 bucket
    """
    topic_arn: Optional[pulumi.Input[str]] = pulumi.input_property("topicArn")
    """
    The ARN of an SNS topic to notify
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, bucket_name: pulumi.Input[str], position: pulumi.Input[float], kms_key_arn: Optional[pulumi.Input[str]] = None, object_key_prefix: Optional[pulumi.Input[str]] = None, topic_arn: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] bucket_name: The name of the S3 bucket
        :param pulumi.Input[float] position: The position of the action in the receipt rule
        :param pulumi.Input[str] kms_key_arn: The ARN of the KMS key
        :param pulumi.Input[str] object_key_prefix: The key prefix of the S3 bucket
        :param pulumi.Input[str] topic_arn: The ARN of an SNS topic to notify
        """
        __self__.bucket_name = bucket_name
        __self__.position = position
        __self__.kms_key_arn = kms_key_arn
        __self__.object_key_prefix = object_key_prefix
        __self__.topic_arn = topic_arn

@pulumi.input_type
class ReceiptRuleSnsActionArgs:
    position: pulumi.Input[float] = pulumi.input_property("position")
    """
    The position of the action in the receipt rule
    """
    topic_arn: pulumi.Input[str] = pulumi.input_property("topicArn")
    """
    The ARN of an SNS topic to notify
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, position: pulumi.Input[float], topic_arn: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[float] position: The position of the action in the receipt rule
        :param pulumi.Input[str] topic_arn: The ARN of an SNS topic to notify
        """
        __self__.position = position
        __self__.topic_arn = topic_arn

@pulumi.input_type
class ReceiptRuleStopActionArgs:
    position: pulumi.Input[float] = pulumi.input_property("position")
    """
    The position of the action in the receipt rule
    """
    scope: pulumi.Input[str] = pulumi.input_property("scope")
    """
    The scope to apply
    """
    topic_arn: Optional[pulumi.Input[str]] = pulumi.input_property("topicArn")
    """
    The ARN of an SNS topic to notify
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, position: pulumi.Input[float], scope: pulumi.Input[str], topic_arn: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[float] position: The position of the action in the receipt rule
        :param pulumi.Input[str] scope: The scope to apply
        :param pulumi.Input[str] topic_arn: The ARN of an SNS topic to notify
        """
        __self__.position = position
        __self__.scope = scope
        __self__.topic_arn = topic_arn

@pulumi.input_type
class ReceiptRuleWorkmailActionArgs:
    organization_arn: pulumi.Input[str] = pulumi.input_property("organizationArn")
    """
    The ARN of the WorkMail organization
    """
    position: pulumi.Input[float] = pulumi.input_property("position")
    """
    The position of the action in the receipt rule
    """
    topic_arn: Optional[pulumi.Input[str]] = pulumi.input_property("topicArn")
    """
    The ARN of an SNS topic to notify
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, organization_arn: pulumi.Input[str], position: pulumi.Input[float], topic_arn: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] organization_arn: The ARN of the WorkMail organization
        :param pulumi.Input[float] position: The position of the action in the receipt rule
        :param pulumi.Input[str] topic_arn: The ARN of an SNS topic to notify
        """
        __self__.organization_arn = organization_arn
        __self__.position = position
        __self__.topic_arn = topic_arn

