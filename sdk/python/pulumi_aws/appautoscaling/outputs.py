# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'PolicyStepScalingPolicyConfiguration',
    'PolicyStepScalingPolicyConfigurationStepAdjustment',
    'PolicyTargetTrackingScalingPolicyConfiguration',
    'PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification',
    'PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimension',
    'PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification',
    'ScheduledActionScalableTargetAction',
]

@pulumi.output_type
class PolicyStepScalingPolicyConfiguration(dict):
    adjustment_type: Optional[str] = pulumi.output_property("adjustmentType")
    """
    Specifies whether the adjustment is an absolute number or a percentage of the current capacity. Valid values are `ChangeInCapacity`, `ExactCapacity`, and `PercentChangeInCapacity`.
    """
    cooldown: Optional[float] = pulumi.output_property("cooldown")
    """
    The amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.
    """
    metric_aggregation_type: Optional[str] = pulumi.output_property("metricAggregationType")
    """
    The aggregation type for the policy's metrics. Valid values are "Minimum", "Maximum", and "Average". Without a value, AWS will treat the aggregation type as "Average".
    """
    min_adjustment_magnitude: Optional[float] = pulumi.output_property("minAdjustmentMagnitude")
    """
    The minimum number to adjust your scalable dimension as a result of a scaling activity. If the adjustment type is PercentChangeInCapacity, the scaling policy changes the scalable dimension of the scalable target by this amount.
    """
    step_adjustments: Optional[List['outputs.PolicyStepScalingPolicyConfigurationStepAdjustment']] = pulumi.output_property("stepAdjustments")
    """
    A set of adjustments that manage scaling. These have the following structure:
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class PolicyStepScalingPolicyConfigurationStepAdjustment(dict):
    metric_interval_lower_bound: Optional[str] = pulumi.output_property("metricIntervalLowerBound")
    """
    The lower bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as negative infinity.
    """
    metric_interval_upper_bound: Optional[str] = pulumi.output_property("metricIntervalUpperBound")
    """
    The upper bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as infinity. The upper bound must be greater than the lower bound.
    """
    scaling_adjustment: float = pulumi.output_property("scalingAdjustment")
    """
    The number of members by which to scale, when the adjustment bounds are breached. A positive value scales up. A negative value scales down.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class PolicyTargetTrackingScalingPolicyConfiguration(dict):
    customized_metric_specification: Optional['outputs.PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification'] = pulumi.output_property("customizedMetricSpecification")
    """
    A custom CloudWatch metric. Documentation can be found  at: [AWS Customized Metric Specification](https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_CustomizedMetricSpecification.html). See supported fields below.
    """
    disable_scale_in: Optional[bool] = pulumi.output_property("disableScaleIn")
    """
    Indicates whether scale in by the target tracking policy is disabled. If the value is true, scale in is disabled and the target tracking policy won't remove capacity from the scalable resource. Otherwise, scale in is enabled and the target tracking policy can remove capacity from the scalable resource. The default value is `false`.
    """
    predefined_metric_specification: Optional['outputs.PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification'] = pulumi.output_property("predefinedMetricSpecification")
    """
    A predefined metric. See supported fields below.
    """
    scale_in_cooldown: Optional[float] = pulumi.output_property("scaleInCooldown")
    """
    The amount of time, in seconds, after a scale in activity completes before another scale in activity can start.
    """
    scale_out_cooldown: Optional[float] = pulumi.output_property("scaleOutCooldown")
    """
    The amount of time, in seconds, after a scale out activity completes before another scale out activity can start.
    """
    target_value: float = pulumi.output_property("targetValue")
    """
    The target value for the metric.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification(dict):
    dimensions: Optional[List['outputs.PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimension']] = pulumi.output_property("dimensions")
    """
    Configuration block(s) with the dimensions of the metric if the metric was published with dimensions. Detailed below.
    """
    metric_name: str = pulumi.output_property("metricName")
    """
    The name of the metric.
    """
    namespace: str = pulumi.output_property("namespace")
    """
    The namespace of the metric.
    """
    statistic: str = pulumi.output_property("statistic")
    """
    The statistic of the metric. Valid values: `Average`, `Minimum`, `Maximum`, `SampleCount`, and `Sum`.
    """
    unit: Optional[str] = pulumi.output_property("unit")
    """
    The unit of the metric.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimension(dict):
    name: str = pulumi.output_property("name")
    """
    The name of the policy.
    """
    value: str = pulumi.output_property("value")
    """
    Value of the dimension.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification(dict):
    predefined_metric_type: str = pulumi.output_property("predefinedMetricType")
    """
    The metric type.
    """
    resource_label: Optional[str] = pulumi.output_property("resourceLabel")
    """
    Reserved for future use.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ScheduledActionScalableTargetAction(dict):
    max_capacity: Optional[float] = pulumi.output_property("maxCapacity")
    """
    The maximum capacity.
    """
    min_capacity: Optional[float] = pulumi.output_property("minCapacity")
    """
    The minimum capacity.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


