# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'AccountThrottleSettingsArgs',
    'DocumentationPartLocationArgs',
    'DomainNameEndpointConfigurationArgs',
    'MethodSettingsSettingsArgs',
    'RestApiEndpointConfigurationArgs',
    'StageAccessLogSettingsArgs',
    'UsagePlanApiStageArgs',
    'UsagePlanQuotaSettingsArgs',
    'UsagePlanThrottleSettingsArgs',
]

@pulumi.input_type
class AccountThrottleSettingsArgs:
    burst_limit: Optional[pulumi.Input[float]] = pulumi.input_property("burstLimit")
    """
    The absolute maximum number of times API Gateway allows the API to be called per second (RPS).
    """
    rate_limit: Optional[pulumi.Input[float]] = pulumi.input_property("rateLimit")
    """
    The number of times API Gateway allows the API to be called per second on average (RPS).
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, burst_limit: Optional[pulumi.Input[float]] = None, rate_limit: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[float] burst_limit: The absolute maximum number of times API Gateway allows the API to be called per second (RPS).
        :param pulumi.Input[float] rate_limit: The number of times API Gateway allows the API to be called per second on average (RPS).
        """
        __self__.burst_limit = burst_limit
        __self__.rate_limit = rate_limit

@pulumi.input_type
class DocumentationPartLocationArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    The type of API entity to which the documentation content applies. e.g. `API`, `METHOD` or `REQUEST_BODY`
    """
    method: Optional[pulumi.Input[str]] = pulumi.input_property("method")
    """
    The HTTP verb of a method. The default value is `*` for any method.
    """
    name: Optional[pulumi.Input[str]] = pulumi.input_property("name")
    """
    The name of the targeted API entity.
    """
    path: Optional[pulumi.Input[str]] = pulumi.input_property("path")
    """
    The URL path of the target. The default value is `/` for the root resource.
    """
    status_code: Optional[pulumi.Input[str]] = pulumi.input_property("statusCode")
    """
    The HTTP status code of a response. The default value is `*` for any status code.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str], method: Optional[pulumi.Input[str]] = None, name: Optional[pulumi.Input[str]] = None, path: Optional[pulumi.Input[str]] = None, status_code: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] type: The type of API entity to which the documentation content applies. e.g. `API`, `METHOD` or `REQUEST_BODY`
        :param pulumi.Input[str] method: The HTTP verb of a method. The default value is `*` for any method.
        :param pulumi.Input[str] name: The name of the targeted API entity.
        :param pulumi.Input[str] path: The URL path of the target. The default value is `/` for the root resource.
        :param pulumi.Input[str] status_code: The HTTP status code of a response. The default value is `*` for any status code.
        """
        __self__.type = type
        __self__.method = method
        __self__.name = name
        __self__.path = path
        __self__.status_code = status_code

@pulumi.input_type
class DomainNameEndpointConfigurationArgs:
    types: pulumi.Input[str] = pulumi.input_property("types")
    """
    A list of endpoint types. This resource currently only supports managing a single value. Valid values: `EDGE` or `REGIONAL`. If unspecified, defaults to `EDGE`. Must be declared as `REGIONAL` in non-Commercial partitions. Refer to the [documentation](https://docs.aws.amazon.com/apigateway/latest/developerguide/create-regional-api.html) for more information on the difference between edge-optimized and regional APIs.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, types: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] types: A list of endpoint types. This resource currently only supports managing a single value. Valid values: `EDGE` or `REGIONAL`. If unspecified, defaults to `EDGE`. Must be declared as `REGIONAL` in non-Commercial partitions. Refer to the [documentation](https://docs.aws.amazon.com/apigateway/latest/developerguide/create-regional-api.html) for more information on the difference between edge-optimized and regional APIs.
        """
        __self__.types = types

@pulumi.input_type
class MethodSettingsSettingsArgs:
    cache_data_encrypted: Optional[pulumi.Input[bool]] = pulumi.input_property("cacheDataEncrypted")
    """
    Specifies whether the cached responses are encrypted.
    """
    cache_ttl_in_seconds: Optional[pulumi.Input[float]] = pulumi.input_property("cacheTtlInSeconds")
    """
    Specifies the time to live (TTL), in seconds, for cached responses. The higher the TTL, the longer the response will be cached.
    """
    caching_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("cachingEnabled")
    """
    Specifies whether responses should be cached and returned for requests. A cache cluster must be enabled on the stage for responses to be cached.
    """
    data_trace_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("dataTraceEnabled")
    """
    Specifies whether data trace logging is enabled for this method, which effects the log entries pushed to Amazon CloudWatch Logs.
    """
    logging_level: Optional[pulumi.Input[str]] = pulumi.input_property("loggingLevel")
    """
    Specifies the logging level for this method, which effects the log entries pushed to Amazon CloudWatch Logs. The available levels are `OFF`, `ERROR`, and `INFO`.
    """
    metrics_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("metricsEnabled")
    """
    Specifies whether Amazon CloudWatch metrics are enabled for this method.
    """
    require_authorization_for_cache_control: Optional[pulumi.Input[bool]] = pulumi.input_property("requireAuthorizationForCacheControl")
    """
    Specifies whether authorization is required for a cache invalidation request.
    """
    throttling_burst_limit: Optional[pulumi.Input[float]] = pulumi.input_property("throttlingBurstLimit")
    """
    Specifies the throttling burst limit.
    """
    throttling_rate_limit: Optional[pulumi.Input[float]] = pulumi.input_property("throttlingRateLimit")
    """
    Specifies the throttling rate limit.
    """
    unauthorized_cache_control_header_strategy: Optional[pulumi.Input[str]] = pulumi.input_property("unauthorizedCacheControlHeaderStrategy")
    """
    Specifies how to handle unauthorized requests for cache invalidation. The available values are `FAIL_WITH_403`, `SUCCEED_WITH_RESPONSE_HEADER`, `SUCCEED_WITHOUT_RESPONSE_HEADER`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, cache_data_encrypted: Optional[pulumi.Input[bool]] = None, cache_ttl_in_seconds: Optional[pulumi.Input[float]] = None, caching_enabled: Optional[pulumi.Input[bool]] = None, data_trace_enabled: Optional[pulumi.Input[bool]] = None, logging_level: Optional[pulumi.Input[str]] = None, metrics_enabled: Optional[pulumi.Input[bool]] = None, require_authorization_for_cache_control: Optional[pulumi.Input[bool]] = None, throttling_burst_limit: Optional[pulumi.Input[float]] = None, throttling_rate_limit: Optional[pulumi.Input[float]] = None, unauthorized_cache_control_header_strategy: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[bool] cache_data_encrypted: Specifies whether the cached responses are encrypted.
        :param pulumi.Input[float] cache_ttl_in_seconds: Specifies the time to live (TTL), in seconds, for cached responses. The higher the TTL, the longer the response will be cached.
        :param pulumi.Input[bool] caching_enabled: Specifies whether responses should be cached and returned for requests. A cache cluster must be enabled on the stage for responses to be cached.
        :param pulumi.Input[bool] data_trace_enabled: Specifies whether data trace logging is enabled for this method, which effects the log entries pushed to Amazon CloudWatch Logs.
        :param pulumi.Input[str] logging_level: Specifies the logging level for this method, which effects the log entries pushed to Amazon CloudWatch Logs. The available levels are `OFF`, `ERROR`, and `INFO`.
        :param pulumi.Input[bool] metrics_enabled: Specifies whether Amazon CloudWatch metrics are enabled for this method.
        :param pulumi.Input[bool] require_authorization_for_cache_control: Specifies whether authorization is required for a cache invalidation request.
        :param pulumi.Input[float] throttling_burst_limit: Specifies the throttling burst limit.
        :param pulumi.Input[float] throttling_rate_limit: Specifies the throttling rate limit.
        :param pulumi.Input[str] unauthorized_cache_control_header_strategy: Specifies how to handle unauthorized requests for cache invalidation. The available values are `FAIL_WITH_403`, `SUCCEED_WITH_RESPONSE_HEADER`, `SUCCEED_WITHOUT_RESPONSE_HEADER`.
        """
        __self__.cache_data_encrypted = cache_data_encrypted
        __self__.cache_ttl_in_seconds = cache_ttl_in_seconds
        __self__.caching_enabled = caching_enabled
        __self__.data_trace_enabled = data_trace_enabled
        __self__.logging_level = logging_level
        __self__.metrics_enabled = metrics_enabled
        __self__.require_authorization_for_cache_control = require_authorization_for_cache_control
        __self__.throttling_burst_limit = throttling_burst_limit
        __self__.throttling_rate_limit = throttling_rate_limit
        __self__.unauthorized_cache_control_header_strategy = unauthorized_cache_control_header_strategy

@pulumi.input_type
class RestApiEndpointConfigurationArgs:
    types: pulumi.Input[str] = pulumi.input_property("types")
    """
    A list of endpoint types. This resource currently only supports managing a single value. Valid values: `EDGE`, `REGIONAL` or `PRIVATE`. If unspecified, defaults to `EDGE`. Must be declared as `REGIONAL` in non-Commercial partitions. Refer to the [documentation](https://docs.aws.amazon.com/apigateway/latest/developerguide/create-regional-api.html) for more information on the difference between edge-optimized and regional APIs.
    """
    vpc_endpoint_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("vpcEndpointIds")
    """
    A list of VPC Endpoint Ids. It is only supported for PRIVATE endpoint type.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, types: pulumi.Input[str], vpc_endpoint_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] types: A list of endpoint types. This resource currently only supports managing a single value. Valid values: `EDGE`, `REGIONAL` or `PRIVATE`. If unspecified, defaults to `EDGE`. Must be declared as `REGIONAL` in non-Commercial partitions. Refer to the [documentation](https://docs.aws.amazon.com/apigateway/latest/developerguide/create-regional-api.html) for more information on the difference between edge-optimized and regional APIs.
        :param pulumi.Input[List[pulumi.Input[str]]] vpc_endpoint_ids: A list of VPC Endpoint Ids. It is only supported for PRIVATE endpoint type.
        """
        __self__.types = types
        __self__.vpc_endpoint_ids = vpc_endpoint_ids

@pulumi.input_type
class StageAccessLogSettingsArgs:
    destination_arn: pulumi.Input[str] = pulumi.input_property("destinationArn")
    """
    The Amazon Resource Name (ARN) of the CloudWatch Logs log group or Kinesis Data Firehose delivery stream to receive access logs. If you specify a Kinesis Data Firehose delivery stream, the stream name must begin with `amazon-apigateway-`. Automatically removes trailing `:*` if present.
    """
    format: pulumi.Input[str] = pulumi.input_property("format")
    """
    The formatting and values recorded in the logs. 
    For more information on configuring the log format rules visit the AWS [documentation](https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html)
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, destination_arn: pulumi.Input[str], format: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] destination_arn: The Amazon Resource Name (ARN) of the CloudWatch Logs log group or Kinesis Data Firehose delivery stream to receive access logs. If you specify a Kinesis Data Firehose delivery stream, the stream name must begin with `amazon-apigateway-`. Automatically removes trailing `:*` if present.
        :param pulumi.Input[str] format: The formatting and values recorded in the logs. 
               For more information on configuring the log format rules visit the AWS [documentation](https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html)
        """
        __self__.destination_arn = destination_arn
        __self__.format = format

@pulumi.input_type
class UsagePlanApiStageArgs:
    api_id: pulumi.Input[str] = pulumi.input_property("apiId")
    """
    API Id of the associated API stage in a usage plan.
    """
    stage: pulumi.Input[str] = pulumi.input_property("stage")
    """
    API stage name of the associated API stage in a usage plan.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, api_id: pulumi.Input[str], stage: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] api_id: API Id of the associated API stage in a usage plan.
        :param pulumi.Input[str] stage: API stage name of the associated API stage in a usage plan.
        """
        __self__.api_id = api_id
        __self__.stage = stage

@pulumi.input_type
class UsagePlanQuotaSettingsArgs:
    limit: pulumi.Input[float] = pulumi.input_property("limit")
    """
    The maximum number of requests that can be made in a given time period.
    """
    period: pulumi.Input[str] = pulumi.input_property("period")
    """
    The time period in which the limit applies. Valid values are "DAY", "WEEK" or "MONTH".
    """
    offset: Optional[pulumi.Input[float]] = pulumi.input_property("offset")
    """
    The number of requests subtracted from the given limit in the initial time period.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, limit: pulumi.Input[float], period: pulumi.Input[str], offset: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[float] limit: The maximum number of requests that can be made in a given time period.
        :param pulumi.Input[str] period: The time period in which the limit applies. Valid values are "DAY", "WEEK" or "MONTH".
        :param pulumi.Input[float] offset: The number of requests subtracted from the given limit in the initial time period.
        """
        __self__.limit = limit
        __self__.period = period
        __self__.offset = offset

@pulumi.input_type
class UsagePlanThrottleSettingsArgs:
    burst_limit: Optional[pulumi.Input[float]] = pulumi.input_property("burstLimit")
    """
    The API request burst limit, the maximum rate limit over a time ranging from one to a few seconds, depending upon whether the underlying token bucket is at its full capacity.
    """
    rate_limit: Optional[pulumi.Input[float]] = pulumi.input_property("rateLimit")
    """
    The API request steady-state rate limit.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, burst_limit: Optional[pulumi.Input[float]] = None, rate_limit: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[float] burst_limit: The API request burst limit, the maximum rate limit over a time ranging from one to a few seconds, depending upon whether the underlying token bucket is at its full capacity.
        :param pulumi.Input[float] rate_limit: The API request steady-state rate limit.
        """
        __self__.burst_limit = burst_limit
        __self__.rate_limit = rate_limit

