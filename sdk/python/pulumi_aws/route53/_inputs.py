# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'RecordAliasArgs',
    'RecordFailoverRoutingPolicyArgs',
    'RecordGeolocationRoutingPolicyArgs',
    'RecordLatencyRoutingPolicyArgs',
    'RecordWeightedRoutingPolicyArgs',
    'ResolverEndpointIpAddressArgs',
    'ResolverRuleTargetIpArgs',
    'ZoneVpcArgs',
]

@pulumi.input_type
class RecordAliasArgs:
    evaluate_target_health: pulumi.Input[bool] = pulumi.input_property("evaluateTargetHealth")
    """
    Set to `true` if you want Route 53 to determine whether to respond to DNS queries using this resource record set by checking the health of the resource record set. Some resources have special requirements, see [related part of documentation](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resource-record-sets-values.html#rrsets-values-alias-evaluate-target-health).
    """
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    DNS domain name for a CloudFront distribution, S3 bucket, ELB, or another resource record set in this hosted zone.
    """
    zone_id: pulumi.Input[str] = pulumi.input_property("zoneId")
    """
    Hosted zone ID for a CloudFront distribution, S3 bucket, ELB, or Route 53 hosted zone. See `resource_elb.zone_id` for example.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, evaluate_target_health: pulumi.Input[bool], name: pulumi.Input[str], zone_id: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[bool] evaluate_target_health: Set to `true` if you want Route 53 to determine whether to respond to DNS queries using this resource record set by checking the health of the resource record set. Some resources have special requirements, see [related part of documentation](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resource-record-sets-values.html#rrsets-values-alias-evaluate-target-health).
        :param pulumi.Input[str] name: DNS domain name for a CloudFront distribution, S3 bucket, ELB, or another resource record set in this hosted zone.
        :param pulumi.Input[str] zone_id: Hosted zone ID for a CloudFront distribution, S3 bucket, ELB, or Route 53 hosted zone. See `resource_elb.zone_id` for example.
        """
        __self__.evaluate_target_health = evaluate_target_health
        __self__.name = name
        __self__.zone_id = zone_id

@pulumi.input_type
class RecordFailoverRoutingPolicyArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    `PRIMARY` or `SECONDARY`. A `PRIMARY` record will be served if its healthcheck is passing, otherwise the `SECONDARY` will be served. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-configuring-options.html#dns-failover-failover-rrsets
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] type: `PRIMARY` or `SECONDARY`. A `PRIMARY` record will be served if its healthcheck is passing, otherwise the `SECONDARY` will be served. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-configuring-options.html#dns-failover-failover-rrsets
        """
        __self__.type = type

@pulumi.input_type
class RecordGeolocationRoutingPolicyArgs:
    continent: Optional[pulumi.Input[str]] = pulumi.input_property("continent")
    """
    A two-letter continent code. See http://docs.aws.amazon.com/Route53/latest/APIReference/API_GetGeoLocation.html for code details. Either `continent` or `country` must be specified.
    """
    country: Optional[pulumi.Input[str]] = pulumi.input_property("country")
    """
    A two-character country code or `*` to indicate a default resource record set.
    """
    subdivision: Optional[pulumi.Input[str]] = pulumi.input_property("subdivision")
    """
    A subdivision code for a country.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, continent: Optional[pulumi.Input[str]] = None, country: Optional[pulumi.Input[str]] = None, subdivision: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] continent: A two-letter continent code. See http://docs.aws.amazon.com/Route53/latest/APIReference/API_GetGeoLocation.html for code details. Either `continent` or `country` must be specified.
        :param pulumi.Input[str] country: A two-character country code or `*` to indicate a default resource record set.
        :param pulumi.Input[str] subdivision: A subdivision code for a country.
        """
        __self__.continent = continent
        __self__.country = country
        __self__.subdivision = subdivision

@pulumi.input_type
class RecordLatencyRoutingPolicyArgs:
    region: pulumi.Input[str] = pulumi.input_property("region")
    """
    An AWS region from which to measure latency. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-latency
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, region: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] region: An AWS region from which to measure latency. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-latency
        """
        __self__.region = region

@pulumi.input_type
class RecordWeightedRoutingPolicyArgs:
    weight: pulumi.Input[float] = pulumi.input_property("weight")
    """
    A numeric value indicating the relative weight of the record. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-weighted.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, weight: pulumi.Input[float]) -> None:
        """
        :param pulumi.Input[float] weight: A numeric value indicating the relative weight of the record. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-weighted.
        """
        __self__.weight = weight

@pulumi.input_type
class ResolverEndpointIpAddressArgs:
    subnet_id: pulumi.Input[str] = pulumi.input_property("subnetId")
    """
    The ID of the subnet that contains the IP address.
    """
    ip: Optional[pulumi.Input[str]] = pulumi.input_property("ip")
    """
    The IP address in the subnet that you want to use for DNS queries.
    """
    ip_id: Optional[pulumi.Input[str]] = pulumi.input_property("ipId")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, subnet_id: pulumi.Input[str], ip: Optional[pulumi.Input[str]] = None, ip_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] subnet_id: The ID of the subnet that contains the IP address.
        :param pulumi.Input[str] ip: The IP address in the subnet that you want to use for DNS queries.
        """
        __self__.subnet_id = subnet_id
        __self__.ip = ip
        __self__.ip_id = ip_id

@pulumi.input_type
class ResolverRuleTargetIpArgs:
    ip: pulumi.Input[str] = pulumi.input_property("ip")
    """
    One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.
    """
    port: Optional[pulumi.Input[float]] = pulumi.input_property("port")
    """
    The port at `ip` that you want to forward DNS queries to. Default value is `53`
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, ip: pulumi.Input[str], port: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[str] ip: One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.
        :param pulumi.Input[float] port: The port at `ip` that you want to forward DNS queries to. Default value is `53`
        """
        __self__.ip = ip
        __self__.port = port

@pulumi.input_type
class ZoneVpcArgs:
    vpc_id: pulumi.Input[str] = pulumi.input_property("vpcId")
    """
    ID of the VPC to associate.
    """
    vpc_region: Optional[pulumi.Input[str]] = pulumi.input_property("vpcRegion")
    """
    Region of the VPC to associate. Defaults to AWS provider region.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, vpc_id: pulumi.Input[str], vpc_region: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] vpc_id: ID of the VPC to associate.
        :param pulumi.Input[str] vpc_region: Region of the VPC to associate. Defaults to AWS provider region.
        """
        __self__.vpc_id = vpc_id
        __self__.vpc_region = vpc_region

