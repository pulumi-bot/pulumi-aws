# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'DirectorySelfServicePermissionsArgs',
    'IpGroupRuleArgs',
    'WorkspaceWorkspacePropertiesArgs',
]

@pulumi.input_type
class DirectorySelfServicePermissionsArgs:
    change_compute_type: Optional[pulumi.Input[bool]] = pulumi.input_property("changeComputeType")
    """
    Whether WorkSpaces directory users can change the compute type (bundle) for their workspace. Default `false`.
    """
    increase_volume_size: Optional[pulumi.Input[bool]] = pulumi.input_property("increaseVolumeSize")
    """
    Whether WorkSpaces directory users can increase the volume size of the drives on their workspace. Default `false`.
    """
    rebuild_workspace: Optional[pulumi.Input[bool]] = pulumi.input_property("rebuildWorkspace")
    """
    Whether WorkSpaces directory users can rebuild the operating system of a workspace to its original state. Default `false`.
    """
    restart_workspace: Optional[pulumi.Input[bool]] = pulumi.input_property("restartWorkspace")
    """
    Whether WorkSpaces directory users can restart their workspace. Default `true`.
    """
    switch_running_mode: Optional[pulumi.Input[bool]] = pulumi.input_property("switchRunningMode")
    """
    Whether WorkSpaces directory users can switch the running mode of their workspace. Default `false`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, change_compute_type: Optional[pulumi.Input[bool]] = None, increase_volume_size: Optional[pulumi.Input[bool]] = None, rebuild_workspace: Optional[pulumi.Input[bool]] = None, restart_workspace: Optional[pulumi.Input[bool]] = None, switch_running_mode: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[bool] change_compute_type: Whether WorkSpaces directory users can change the compute type (bundle) for their workspace. Default `false`.
        :param pulumi.Input[bool] increase_volume_size: Whether WorkSpaces directory users can increase the volume size of the drives on their workspace. Default `false`.
        :param pulumi.Input[bool] rebuild_workspace: Whether WorkSpaces directory users can rebuild the operating system of a workspace to its original state. Default `false`.
        :param pulumi.Input[bool] restart_workspace: Whether WorkSpaces directory users can restart their workspace. Default `true`.
        :param pulumi.Input[bool] switch_running_mode: Whether WorkSpaces directory users can switch the running mode of their workspace. Default `false`.
        """
        __self__.change_compute_type = change_compute_type
        __self__.increase_volume_size = increase_volume_size
        __self__.rebuild_workspace = rebuild_workspace
        __self__.restart_workspace = restart_workspace
        __self__.switch_running_mode = switch_running_mode

@pulumi.input_type
class IpGroupRuleArgs:
    source: pulumi.Input[str] = pulumi.input_property("source")
    """
    The IP address range, in CIDR notation, e.g. `10.0.0.0/16`
    """
    description: Optional[pulumi.Input[str]] = pulumi.input_property("description")
    """
    The description.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, source: pulumi.Input[str], description: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] source: The IP address range, in CIDR notation, e.g. `10.0.0.0/16`
        :param pulumi.Input[str] description: The description.
        """
        __self__.source = source
        __self__.description = description

@pulumi.input_type
class WorkspaceWorkspacePropertiesArgs:
    compute_type_name: Optional[pulumi.Input[str]] = pulumi.input_property("computeTypeName")
    """
    The compute type. For more information, see [Amazon WorkSpaces Bundles](http://aws.amazon.com/workspaces/details/#Amazon_WorkSpaces_Bundles). Valid values are `VALUE`, `STANDARD`, `PERFORMANCE`, `POWER`, `GRAPHICS`, `POWERPRO` and `GRAPHICSPRO`.
    """
    root_volume_size_gib: Optional[pulumi.Input[float]] = pulumi.input_property("rootVolumeSizeGib")
    """
    The size of the root volume.
    """
    running_mode: Optional[pulumi.Input[str]] = pulumi.input_property("runningMode")
    """
    The running mode. For more information, see [Manage the WorkSpace Running Mode](https://docs.aws.amazon.com/workspaces/latest/adminguide/running-mode.html). Valid values are `AUTO_STOP` and `ALWAYS_ON`.
    """
    running_mode_auto_stop_timeout_in_minutes: Optional[pulumi.Input[float]] = pulumi.input_property("runningModeAutoStopTimeoutInMinutes")
    """
    The time after a user logs off when WorkSpaces are automatically stopped. Configured in 60-minute intervals.
    """
    user_volume_size_gib: Optional[pulumi.Input[float]] = pulumi.input_property("userVolumeSizeGib")
    """
    The size of the user storage.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, compute_type_name: Optional[pulumi.Input[str]] = None, root_volume_size_gib: Optional[pulumi.Input[float]] = None, running_mode: Optional[pulumi.Input[str]] = None, running_mode_auto_stop_timeout_in_minutes: Optional[pulumi.Input[float]] = None, user_volume_size_gib: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[str] compute_type_name: The compute type. For more information, see [Amazon WorkSpaces Bundles](http://aws.amazon.com/workspaces/details/#Amazon_WorkSpaces_Bundles). Valid values are `VALUE`, `STANDARD`, `PERFORMANCE`, `POWER`, `GRAPHICS`, `POWERPRO` and `GRAPHICSPRO`.
        :param pulumi.Input[float] root_volume_size_gib: The size of the root volume.
        :param pulumi.Input[str] running_mode: The running mode. For more information, see [Manage the WorkSpace Running Mode](https://docs.aws.amazon.com/workspaces/latest/adminguide/running-mode.html). Valid values are `AUTO_STOP` and `ALWAYS_ON`.
        :param pulumi.Input[float] running_mode_auto_stop_timeout_in_minutes: The time after a user logs off when WorkSpaces are automatically stopped. Configured in 60-minute intervals.
        :param pulumi.Input[float] user_volume_size_gib: The size of the user storage.
        """
        __self__.compute_type_name = compute_type_name
        __self__.root_volume_size_gib = root_volume_size_gib
        __self__.running_mode = running_mode
        __self__.running_mode_auto_stop_timeout_in_minutes = running_mode_auto_stop_timeout_in_minutes
        __self__.user_volume_size_gib = user_volume_size_gib

