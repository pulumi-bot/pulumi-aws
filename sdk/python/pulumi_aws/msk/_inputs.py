# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'ClusterBrokerNodeGroupInfoArgs',
    'ClusterClientAuthenticationArgs',
    'ClusterClientAuthenticationTlsArgs',
    'ClusterConfigurationInfoArgs',
    'ClusterEncryptionInfoArgs',
    'ClusterEncryptionInfoEncryptionInTransitArgs',
    'ClusterLoggingInfoArgs',
    'ClusterLoggingInfoBrokerLogsArgs',
    'ClusterLoggingInfoBrokerLogsCloudwatchLogsArgs',
    'ClusterLoggingInfoBrokerLogsFirehoseArgs',
    'ClusterLoggingInfoBrokerLogsS3Args',
    'ClusterOpenMonitoringArgs',
    'ClusterOpenMonitoringPrometheusArgs',
    'ClusterOpenMonitoringPrometheusJmxExporterArgs',
    'ClusterOpenMonitoringPrometheusNodeExporterArgs',
]

@pulumi.input_type
class ClusterBrokerNodeGroupInfoArgs:
    client_subnets: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("clientSubnets")
    """
    A list of subnets to connect to in client VPC ([documentation](https://docs.aws.amazon.com/msk/1.0/apireference/clusters.html#clusters-prop-brokernodegroupinfo-clientsubnets)).
    """
    ebs_volume_size: pulumi.Input[float] = pulumi.input_property("ebsVolumeSize")
    """
    The size in GiB of the EBS volume for the data drive on each broker node.
    """
    instance_type: pulumi.Input[str] = pulumi.input_property("instanceType")
    """
    Specify the instance type to use for the kafka brokers. e.g. kafka.m5.large. ([Pricing info](https://aws.amazon.com/msk/pricing/))
    """
    security_groups: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("securityGroups")
    """
    A list of the security groups to associate with the elastic network interfaces to control who can communicate with the cluster.
    """
    az_distribution: Optional[pulumi.Input[str]] = pulumi.input_property("azDistribution")
    """
    The distribution of broker nodes across availability zones ([documentation](https://docs.aws.amazon.com/msk/1.0/apireference/clusters.html#clusters-model-brokerazdistribution)). Currently the only valid value is `DEFAULT`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, client_subnets: pulumi.Input[List[pulumi.Input[str]]], ebs_volume_size: pulumi.Input[float], instance_type: pulumi.Input[str], security_groups: pulumi.Input[List[pulumi.Input[str]]], az_distribution: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] client_subnets: A list of subnets to connect to in client VPC ([documentation](https://docs.aws.amazon.com/msk/1.0/apireference/clusters.html#clusters-prop-brokernodegroupinfo-clientsubnets)).
        :param pulumi.Input[float] ebs_volume_size: The size in GiB of the EBS volume for the data drive on each broker node.
        :param pulumi.Input[str] instance_type: Specify the instance type to use for the kafka brokers. e.g. kafka.m5.large. ([Pricing info](https://aws.amazon.com/msk/pricing/))
        :param pulumi.Input[List[pulumi.Input[str]]] security_groups: A list of the security groups to associate with the elastic network interfaces to control who can communicate with the cluster.
        :param pulumi.Input[str] az_distribution: The distribution of broker nodes across availability zones ([documentation](https://docs.aws.amazon.com/msk/1.0/apireference/clusters.html#clusters-model-brokerazdistribution)). Currently the only valid value is `DEFAULT`.
        """
        __self__.client_subnets = client_subnets
        __self__.ebs_volume_size = ebs_volume_size
        __self__.instance_type = instance_type
        __self__.security_groups = security_groups
        __self__.az_distribution = az_distribution

@pulumi.input_type
class ClusterClientAuthenticationArgs:
    tls: Optional[pulumi.Input['ClusterClientAuthenticationTlsArgs']] = pulumi.input_property("tls")
    """
    Configuration block for specifying TLS client authentication. See below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, tls: Optional[pulumi.Input['ClusterClientAuthenticationTlsArgs']] = None) -> None:
        """
        :param pulumi.Input['ClusterClientAuthenticationTlsArgs'] tls: Configuration block for specifying TLS client authentication. See below.
        """
        __self__.tls = tls

@pulumi.input_type
class ClusterClientAuthenticationTlsArgs:
    certificate_authority_arns: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("certificateAuthorityArns")
    """
    List of ACM Certificate Authority Amazon Resource Names (ARNs).
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, certificate_authority_arns: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] certificate_authority_arns: List of ACM Certificate Authority Amazon Resource Names (ARNs).
        """
        __self__.certificate_authority_arns = certificate_authority_arns

@pulumi.input_type
class ClusterConfigurationInfoArgs:
    arn: pulumi.Input[str] = pulumi.input_property("arn")
    """
    Amazon Resource Name (ARN) of the MSK Configuration to use in the cluster.
    """
    revision: pulumi.Input[float] = pulumi.input_property("revision")
    """
    Revision of the MSK Configuration to use in the cluster.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, arn: pulumi.Input[str], revision: pulumi.Input[float]) -> None:
        """
        :param pulumi.Input[str] arn: Amazon Resource Name (ARN) of the MSK Configuration to use in the cluster.
        :param pulumi.Input[float] revision: Revision of the MSK Configuration to use in the cluster.
        """
        __self__.arn = arn
        __self__.revision = revision

@pulumi.input_type
class ClusterEncryptionInfoArgs:
    encryption_at_rest_kms_key_arn: Optional[pulumi.Input[str]] = pulumi.input_property("encryptionAtRestKmsKeyArn")
    """
    You may specify a KMS key short ID or ARN (it will always output an ARN) to use for encrypting your data at rest.  If no key is specified, an AWS managed KMS ('aws/msk' managed service) key will be used for encrypting the data at rest.
    """
    encryption_in_transit: Optional[pulumi.Input['ClusterEncryptionInfoEncryptionInTransitArgs']] = pulumi.input_property("encryptionInTransit")
    """
    Configuration block to specify encryption in transit. See below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, encryption_at_rest_kms_key_arn: Optional[pulumi.Input[str]] = None, encryption_in_transit: Optional[pulumi.Input['ClusterEncryptionInfoEncryptionInTransitArgs']] = None) -> None:
        """
        :param pulumi.Input[str] encryption_at_rest_kms_key_arn: You may specify a KMS key short ID or ARN (it will always output an ARN) to use for encrypting your data at rest.  If no key is specified, an AWS managed KMS ('aws/msk' managed service) key will be used for encrypting the data at rest.
        :param pulumi.Input['ClusterEncryptionInfoEncryptionInTransitArgs'] encryption_in_transit: Configuration block to specify encryption in transit. See below.
        """
        __self__.encryption_at_rest_kms_key_arn = encryption_at_rest_kms_key_arn
        __self__.encryption_in_transit = encryption_in_transit

@pulumi.input_type
class ClusterEncryptionInfoEncryptionInTransitArgs:
    client_broker: Optional[pulumi.Input[str]] = pulumi.input_property("clientBroker")
    """
    Encryption setting for data in transit between clients and brokers. Valid values: `TLS`, `TLS_PLAINTEXT`, and `PLAINTEXT`. Default value is `TLS_PLAINTEXT` when `encryption_in_transit` block defined, but `TLS` when `encryption_in_transit` block omitted.
    """
    in_cluster: Optional[pulumi.Input[bool]] = pulumi.input_property("inCluster")
    """
    Whether data communication among broker nodes is encrypted. Default value: `true`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, client_broker: Optional[pulumi.Input[str]] = None, in_cluster: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[str] client_broker: Encryption setting for data in transit between clients and brokers. Valid values: `TLS`, `TLS_PLAINTEXT`, and `PLAINTEXT`. Default value is `TLS_PLAINTEXT` when `encryption_in_transit` block defined, but `TLS` when `encryption_in_transit` block omitted.
        :param pulumi.Input[bool] in_cluster: Whether data communication among broker nodes is encrypted. Default value: `true`.
        """
        __self__.client_broker = client_broker
        __self__.in_cluster = in_cluster

@pulumi.input_type
class ClusterLoggingInfoArgs:
    broker_logs: pulumi.Input['ClusterLoggingInfoBrokerLogsArgs'] = pulumi.input_property("brokerLogs")
    """
    Configuration block for Broker Logs settings for logging info. See below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, broker_logs: pulumi.Input['ClusterLoggingInfoBrokerLogsArgs']) -> None:
        """
        :param pulumi.Input['ClusterLoggingInfoBrokerLogsArgs'] broker_logs: Configuration block for Broker Logs settings for logging info. See below.
        """
        __self__.broker_logs = broker_logs

@pulumi.input_type
class ClusterLoggingInfoBrokerLogsArgs:
    cloudwatch_logs: Optional[pulumi.Input['ClusterLoggingInfoBrokerLogsCloudwatchLogsArgs']] = pulumi.input_property("cloudwatchLogs")
    firehose: Optional[pulumi.Input['ClusterLoggingInfoBrokerLogsFirehoseArgs']] = pulumi.input_property("firehose")
    s3: Optional[pulumi.Input['ClusterLoggingInfoBrokerLogsS3Args']] = pulumi.input_property("s3")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, cloudwatch_logs: Optional[pulumi.Input['ClusterLoggingInfoBrokerLogsCloudwatchLogsArgs']] = None, firehose: Optional[pulumi.Input['ClusterLoggingInfoBrokerLogsFirehoseArgs']] = None, s3: Optional[pulumi.Input['ClusterLoggingInfoBrokerLogsS3Args']] = None) -> None:
        __self__.cloudwatch_logs = cloudwatch_logs
        __self__.firehose = firehose
        __self__.s3 = s3

@pulumi.input_type
class ClusterLoggingInfoBrokerLogsCloudwatchLogsArgs:
    enabled: pulumi.Input[bool] = pulumi.input_property("enabled")
    """
    Indicates whether you want to enable or disable streaming broker logs to Cloudwatch Logs.
    """
    log_group: Optional[pulumi.Input[str]] = pulumi.input_property("logGroup")
    """
    Name of the Cloudwatch Log Group to deliver logs to.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled: pulumi.Input[bool], log_group: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[bool] enabled: Indicates whether you want to enable or disable streaming broker logs to Cloudwatch Logs.
        :param pulumi.Input[str] log_group: Name of the Cloudwatch Log Group to deliver logs to.
        """
        __self__.enabled = enabled
        __self__.log_group = log_group

@pulumi.input_type
class ClusterLoggingInfoBrokerLogsFirehoseArgs:
    enabled: pulumi.Input[bool] = pulumi.input_property("enabled")
    """
    Indicates whether you want to enable or disable streaming broker logs to Cloudwatch Logs.
    """
    delivery_stream: Optional[pulumi.Input[str]] = pulumi.input_property("deliveryStream")
    """
    Name of the Kinesis Data Firehose delivery stream to deliver logs to.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled: pulumi.Input[bool], delivery_stream: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[bool] enabled: Indicates whether you want to enable or disable streaming broker logs to Cloudwatch Logs.
        :param pulumi.Input[str] delivery_stream: Name of the Kinesis Data Firehose delivery stream to deliver logs to.
        """
        __self__.enabled = enabled
        __self__.delivery_stream = delivery_stream

@pulumi.input_type
class ClusterLoggingInfoBrokerLogsS3Args:
    enabled: pulumi.Input[bool] = pulumi.input_property("enabled")
    """
    Indicates whether you want to enable or disable streaming broker logs to Cloudwatch Logs.
    """
    bucket: Optional[pulumi.Input[str]] = pulumi.input_property("bucket")
    """
    Name of the S3 bucket to deliver logs to.
    """
    prefix: Optional[pulumi.Input[str]] = pulumi.input_property("prefix")
    """
    Prefix to append to the folder name.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled: pulumi.Input[bool], bucket: Optional[pulumi.Input[str]] = None, prefix: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[bool] enabled: Indicates whether you want to enable or disable streaming broker logs to Cloudwatch Logs.
        :param pulumi.Input[str] bucket: Name of the S3 bucket to deliver logs to.
        :param pulumi.Input[str] prefix: Prefix to append to the folder name.
        """
        __self__.enabled = enabled
        __self__.bucket = bucket
        __self__.prefix = prefix

@pulumi.input_type
class ClusterOpenMonitoringArgs:
    prometheus: pulumi.Input['ClusterOpenMonitoringPrometheusArgs'] = pulumi.input_property("prometheus")
    """
    Configuration block for Prometheus settings for open monitoring. See below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, prometheus: pulumi.Input['ClusterOpenMonitoringPrometheusArgs']) -> None:
        """
        :param pulumi.Input['ClusterOpenMonitoringPrometheusArgs'] prometheus: Configuration block for Prometheus settings for open monitoring. See below.
        """
        __self__.prometheus = prometheus

@pulumi.input_type
class ClusterOpenMonitoringPrometheusArgs:
    jmx_exporter: Optional[pulumi.Input['ClusterOpenMonitoringPrometheusJmxExporterArgs']] = pulumi.input_property("jmxExporter")
    """
    Configuration block for JMX Exporter. See below.
    """
    node_exporter: Optional[pulumi.Input['ClusterOpenMonitoringPrometheusNodeExporterArgs']] = pulumi.input_property("nodeExporter")
    """
    Configuration block for Node Exporter. See below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, jmx_exporter: Optional[pulumi.Input['ClusterOpenMonitoringPrometheusJmxExporterArgs']] = None, node_exporter: Optional[pulumi.Input['ClusterOpenMonitoringPrometheusNodeExporterArgs']] = None) -> None:
        """
        :param pulumi.Input['ClusterOpenMonitoringPrometheusJmxExporterArgs'] jmx_exporter: Configuration block for JMX Exporter. See below.
        :param pulumi.Input['ClusterOpenMonitoringPrometheusNodeExporterArgs'] node_exporter: Configuration block for Node Exporter. See below.
        """
        __self__.jmx_exporter = jmx_exporter
        __self__.node_exporter = node_exporter

@pulumi.input_type
class ClusterOpenMonitoringPrometheusJmxExporterArgs:
    enabled_in_broker: pulumi.Input[bool] = pulumi.input_property("enabledInBroker")
    """
    Indicates whether you want to enable or disable the JMX Exporter.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled_in_broker: pulumi.Input[bool]) -> None:
        """
        :param pulumi.Input[bool] enabled_in_broker: Indicates whether you want to enable or disable the JMX Exporter.
        """
        __self__.enabled_in_broker = enabled_in_broker

@pulumi.input_type
class ClusterOpenMonitoringPrometheusNodeExporterArgs:
    enabled_in_broker: pulumi.Input[bool] = pulumi.input_property("enabledInBroker")
    """
    Indicates whether you want to enable or disable the JMX Exporter.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled_in_broker: pulumi.Input[bool]) -> None:
        """
        :param pulumi.Input[bool] enabled_in_broker: Indicates whether you want to enable or disable the JMX Exporter.
        """
        __self__.enabled_in_broker = enabled_in_broker

