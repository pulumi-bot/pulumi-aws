# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'PipelineArtifactStore',
    'PipelineArtifactStoreEncryptionKey',
    'PipelineStage',
    'PipelineStageAction',
    'WebhookAuthenticationConfiguration',
    'WebhookFilter',
]

@pulumi.output_type
class PipelineArtifactStore(dict):
    encryption_key: Optional['outputs.PipelineArtifactStoreEncryptionKey'] = pulumi.output_property("encryptionKey")
    """
    The encryption key block AWS CodePipeline uses to encrypt the data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. If you don't specify a key, AWS CodePipeline uses the default key for Amazon Simple Storage Service (Amazon S3). An `encryption_key` block is documented below.
    """
    location: str = pulumi.output_property("location")
    """
    The location where AWS CodePipeline stores artifacts for a pipeline; currently only `S3` is supported.
    """
    region: Optional[str] = pulumi.output_property("region")
    """
    The region where the artifact store is located. Required for a cross-region CodePipeline, do not provide for a single-region CodePipeline.
    """
    type: str = pulumi.output_property("type")
    """
    The type of the artifact store, such as Amazon S3
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class PipelineArtifactStoreEncryptionKey(dict):
    id: str = pulumi.output_property("id")
    """
    The KMS key ARN or ID
    """
    type: str = pulumi.output_property("type")
    """
    The type of key; currently only `KMS` is supported
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class PipelineStage(dict):
    actions: List['outputs.PipelineStageAction'] = pulumi.output_property("actions")
    """
    The action(s) to include in the stage. Defined as an `action` block below
    """
    name: str = pulumi.output_property("name")
    """
    The name of the stage.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class PipelineStageAction(dict):
    category: str = pulumi.output_property("category")
    """
    A category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Possible values are `Approval`, `Build`, `Deploy`, `Invoke`, `Source` and `Test`.
    """
    configuration: Optional[Dict[str, str]] = pulumi.output_property("configuration")
    """
    A Map of the action declaration's configuration. Find out more about configuring action configurations in the [Reference Pipeline Structure documentation](http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements).
    """
    input_artifacts: Optional[List[str]] = pulumi.output_property("inputArtifacts")
    """
    A list of artifact names to be worked on.
    """
    name: str = pulumi.output_property("name")
    """
    The action declaration's name.
    """
    namespace: Optional[str] = pulumi.output_property("namespace")
    """
    The namespace all output variables will be accessed from.
    """
    output_artifacts: Optional[List[str]] = pulumi.output_property("outputArtifacts")
    """
    A list of artifact names to output. Output artifact names must be unique within a pipeline.
    """
    owner: str = pulumi.output_property("owner")
    """
    The creator of the action being called. Possible values are `AWS`, `Custom` and `ThirdParty`.
    """
    provider: str = pulumi.output_property("provider")
    """
    The provider of the service being called by the action. Valid providers are determined by the action category. For example, an action in the Deploy category type might have a provider of AWS CodeDeploy, which would be specified as CodeDeploy.
    """
    region: Optional[str] = pulumi.output_property("region")
    """
    The region in which to run the action.
    """
    role_arn: Optional[str] = pulumi.output_property("roleArn")
    """
    The ARN of the IAM service role that will perform the declared action. This is assumed through the roleArn for the pipeline.
    """
    run_order: Optional[float] = pulumi.output_property("runOrder")
    """
    The order in which actions are run.
    """
    version: str = pulumi.output_property("version")
    """
    A string that identifies the action type.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class WebhookAuthenticationConfiguration(dict):
    allowed_ip_range: Optional[str] = pulumi.output_property("allowedIpRange")
    """
    A valid CIDR block for `IP` filtering. Required for `IP`.
    """
    secret_token: Optional[str] = pulumi.output_property("secretToken")
    """
    The shared secret for the GitHub repository webhook. Set this as `secret` in your `github_repository_webhook`'s `configuration` block. Required for `GITHUB_HMAC`.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class WebhookFilter(dict):
    json_path: str = pulumi.output_property("jsonPath")
    """
    The [JSON path](https://github.com/json-path/JsonPath) to filter on.
    """
    match_equals: str = pulumi.output_property("matchEquals")
    """
    The value to match on (e.g. `refs/heads/{Branch}`). See [AWS docs](https://docs.aws.amazon.com/codepipeline/latest/APIReference/API_WebhookFilterRule.html) for details.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


