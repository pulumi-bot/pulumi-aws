# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'AliasRoutingConfigArgs',
    'EventSourceMappingDestinationConfigArgs',
    'EventSourceMappingDestinationConfigOnFailureArgs',
    'FunctionDeadLetterConfigArgs',
    'FunctionEnvironmentArgs',
    'FunctionEventInvokeConfigDestinationConfigArgs',
    'FunctionEventInvokeConfigDestinationConfigOnFailureArgs',
    'FunctionEventInvokeConfigDestinationConfigOnSuccessArgs',
    'FunctionFileSystemConfigArgs',
    'FunctionTracingConfigArgs',
    'FunctionVpcConfigArgs',
]

@pulumi.input_type
class AliasRoutingConfigArgs:
    additional_version_weights: Optional[pulumi.Input[Dict[str, pulumi.Input[float]]]] = pulumi.input_property("additionalVersionWeights")
    """
    A map that defines the proportion of events that should be sent to different versions of a lambda function.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, additional_version_weights: Optional[pulumi.Input[Dict[str, pulumi.Input[float]]]] = None) -> None:
        """
        :param pulumi.Input[Dict[str, pulumi.Input[float]]] additional_version_weights: A map that defines the proportion of events that should be sent to different versions of a lambda function.
        """
        __self__.additional_version_weights = additional_version_weights

@pulumi.input_type
class EventSourceMappingDestinationConfigArgs:
    on_failure: Optional[pulumi.Input['EventSourceMappingDestinationConfigOnFailureArgs']] = pulumi.input_property("onFailure")
    """
    The destination configuration for failed invocations. Detailed below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, on_failure: Optional[pulumi.Input['EventSourceMappingDestinationConfigOnFailureArgs']] = None) -> None:
        """
        :param pulumi.Input['EventSourceMappingDestinationConfigOnFailureArgs'] on_failure: The destination configuration for failed invocations. Detailed below.
        """
        __self__.on_failure = on_failure

@pulumi.input_type
class EventSourceMappingDestinationConfigOnFailureArgs:
    destination_arn: pulumi.Input[str] = pulumi.input_property("destinationArn")
    """
    The Amazon Resource Name (ARN) of the destination resource.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, destination_arn: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] destination_arn: The Amazon Resource Name (ARN) of the destination resource.
        """
        __self__.destination_arn = destination_arn

@pulumi.input_type
class FunctionDeadLetterConfigArgs:
    target_arn: pulumi.Input[str] = pulumi.input_property("targetArn")
    """
    The ARN of an SNS topic or SQS queue to notify when an invocation fails. If this
    option is used, the function's IAM role must be granted suitable access to write to the target object,
    which means allowing either the `sns:Publish` or `sqs:SendMessage` action on this ARN, depending on
    which service is targeted.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, target_arn: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] target_arn: The ARN of an SNS topic or SQS queue to notify when an invocation fails. If this
               option is used, the function's IAM role must be granted suitable access to write to the target object,
               which means allowing either the `sns:Publish` or `sqs:SendMessage` action on this ARN, depending on
               which service is targeted.
        """
        __self__.target_arn = target_arn

@pulumi.input_type
class FunctionEnvironmentArgs:
    variables: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("variables")
    """
    A map that defines environment variables for the Lambda function.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, variables: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] variables: A map that defines environment variables for the Lambda function.
        """
        __self__.variables = variables

@pulumi.input_type
class FunctionEventInvokeConfigDestinationConfigArgs:
    on_failure: Optional[pulumi.Input['FunctionEventInvokeConfigDestinationConfigOnFailureArgs']] = pulumi.input_property("onFailure")
    """
    Configuration block with destination configuration for failed asynchronous invocations. See below for details.
    """
    on_success: Optional[pulumi.Input['FunctionEventInvokeConfigDestinationConfigOnSuccessArgs']] = pulumi.input_property("onSuccess")
    """
    Configuration block with destination configuration for successful asynchronous invocations. See below for details.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, on_failure: Optional[pulumi.Input['FunctionEventInvokeConfigDestinationConfigOnFailureArgs']] = None, on_success: Optional[pulumi.Input['FunctionEventInvokeConfigDestinationConfigOnSuccessArgs']] = None) -> None:
        """
        :param pulumi.Input['FunctionEventInvokeConfigDestinationConfigOnFailureArgs'] on_failure: Configuration block with destination configuration for failed asynchronous invocations. See below for details.
        :param pulumi.Input['FunctionEventInvokeConfigDestinationConfigOnSuccessArgs'] on_success: Configuration block with destination configuration for successful asynchronous invocations. See below for details.
        """
        __self__.on_failure = on_failure
        __self__.on_success = on_success

@pulumi.input_type
class FunctionEventInvokeConfigDestinationConfigOnFailureArgs:
    destination: pulumi.Input[str] = pulumi.input_property("destination")
    """
    Amazon Resource Name (ARN) of the destination resource. See the [Lambda Developer Guide](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations) for acceptable resource types and associated IAM permissions.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, destination: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] destination: Amazon Resource Name (ARN) of the destination resource. See the [Lambda Developer Guide](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations) for acceptable resource types and associated IAM permissions.
        """
        __self__.destination = destination

@pulumi.input_type
class FunctionEventInvokeConfigDestinationConfigOnSuccessArgs:
    destination: pulumi.Input[str] = pulumi.input_property("destination")
    """
    Amazon Resource Name (ARN) of the destination resource. See the [Lambda Developer Guide](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations) for acceptable resource types and associated IAM permissions.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, destination: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] destination: Amazon Resource Name (ARN) of the destination resource. See the [Lambda Developer Guide](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations) for acceptable resource types and associated IAM permissions.
        """
        __self__.destination = destination

@pulumi.input_type
class FunctionFileSystemConfigArgs:
    arn: pulumi.Input[str] = pulumi.input_property("arn")
    """
    The Amazon Resource Name (ARN) of the Amazon EFS Access Point that provides access to the file system.
    """
    local_mount_path: pulumi.Input[str] = pulumi.input_property("localMountPath")
    """
    The path where the function can access the file system, starting with /mnt/.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, arn: pulumi.Input[str], local_mount_path: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] arn: The Amazon Resource Name (ARN) of the Amazon EFS Access Point that provides access to the file system.
        :param pulumi.Input[str] local_mount_path: The path where the function can access the file system, starting with /mnt/.
        """
        __self__.arn = arn
        __self__.local_mount_path = local_mount_path

@pulumi.input_type
class FunctionTracingConfigArgs:
    mode: pulumi.Input[str] = pulumi.input_property("mode")
    """
    Can be either `PassThrough` or `Active`. If PassThrough, Lambda will only trace
    the request from an upstream service if it contains a tracing header with
    "sampled=1". If Active, Lambda will respect any tracing header it receives
    from an upstream service. If no tracing header is received, Lambda will call
    X-Ray for a tracing decision.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, mode: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] mode: Can be either `PassThrough` or `Active`. If PassThrough, Lambda will only trace
               the request from an upstream service if it contains a tracing header with
               "sampled=1". If Active, Lambda will respect any tracing header it receives
               from an upstream service. If no tracing header is received, Lambda will call
               X-Ray for a tracing decision.
        """
        __self__.mode = mode

@pulumi.input_type
class FunctionVpcConfigArgs:
    security_group_ids: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("securityGroupIds")
    """
    A list of security group IDs associated with the Lambda function.
    """
    subnet_ids: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("subnetIds")
    """
    A list of subnet IDs associated with the Lambda function.
    """
    vpc_id: Optional[pulumi.Input[str]] = pulumi.input_property("vpcId")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, security_group_ids: pulumi.Input[List[pulumi.Input[str]]], subnet_ids: pulumi.Input[List[pulumi.Input[str]]], vpc_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] security_group_ids: A list of security group IDs associated with the Lambda function.
        :param pulumi.Input[List[pulumi.Input[str]]] subnet_ids: A list of subnet IDs associated with the Lambda function.
        """
        __self__.security_group_ids = security_group_ids
        __self__.subnet_ids = subnet_ids
        __self__.vpc_id = vpc_id

