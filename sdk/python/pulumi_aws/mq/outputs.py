# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'BrokerConfiguration',
    'BrokerEncryptionOptions',
    'BrokerInstance',
    'BrokerLogs',
    'BrokerMaintenanceWindowStartTime',
    'BrokerUser',
    'GetBrokerConfiguration',
    'GetBrokerEncryptionOption',
    'GetBrokerInstance',
    'GetBrokerLogs',
    'GetBrokerMaintenanceWindowStartTime',
    'GetBrokerUser',
]

@pulumi.output_type
class BrokerConfiguration(dict):
    id: Optional[str] = pulumi.output_property("id")
    """
    The Configuration ID.
    """
    revision: Optional[float] = pulumi.output_property("revision")
    """
    Revision of the Configuration.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class BrokerEncryptionOptions(dict):
    kms_key_id: Optional[str] = pulumi.output_property("kmsKeyId")
    """
    Amazon Resource Name (ARN) of Key Management Service (KMS) Customer Master Key (CMK) to use for encryption at rest. Requires setting `use_aws_owned_key` to `false`. To perform drift detection when AWS managed CMKs or customer managed CMKs are in use, this value must be configured.
    """
    use_aws_owned_key: Optional[bool] = pulumi.output_property("useAwsOwnedKey")
    """
    Boolean to enable an AWS owned Key Management Service (KMS) Customer Master Key (CMK) that is not in your account. Defaults to `true`. Setting to `false` without configuring `kms_key_id` will create an AWS managed Customer Master Key (CMK) aliased to `aws/mq` in your account.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class BrokerInstance(dict):
    console_url: Optional[str] = pulumi.output_property("consoleUrl")
    endpoints: Optional[List[str]] = pulumi.output_property("endpoints")
    ip_address: Optional[str] = pulumi.output_property("ipAddress")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class BrokerLogs(dict):
    audit: Optional[bool] = pulumi.output_property("audit")
    """
    Enables audit logging. User management action made using JMX or the ActiveMQ Web Console is logged. Defaults to `false`.
    """
    general: Optional[bool] = pulumi.output_property("general")
    """
    Enables general logging via CloudWatch. Defaults to `false`.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class BrokerMaintenanceWindowStartTime(dict):
    day_of_week: str = pulumi.output_property("dayOfWeek")
    """
    The day of the week. e.g. `MONDAY`, `TUESDAY`, or `WEDNESDAY`
    """
    time_of_day: str = pulumi.output_property("timeOfDay")
    """
    The time, in 24-hour format. e.g. `02:00`
    """
    time_zone: str = pulumi.output_property("timeZone")
    """
    The time zone, UTC by default, in either the Country/City format, or the UTC offset format. e.g. `CET`
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class BrokerUser(dict):
    console_access: Optional[bool] = pulumi.output_property("consoleAccess")
    """
    Whether to enable access to the [ActiveMQ Web Console](http://activemq.apache.org/web-console.html) for the user.
    """
    groups: Optional[List[str]] = pulumi.output_property("groups")
    """
    The list of groups (20 maximum) to which the ActiveMQ user belongs.
    """
    password: str = pulumi.output_property("password")
    """
    The password of the user. It must be 12 to 250 characters long, at least 4 unique characters, and must not contain commas.
    """
    username: str = pulumi.output_property("username")
    """
    The username of the user.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetBrokerConfiguration(dict):
    id: str = pulumi.output_property("id")
    revision: float = pulumi.output_property("revision")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetBrokerEncryptionOption(dict):
    kms_key_id: str = pulumi.output_property("kmsKeyId")
    use_aws_owned_key: bool = pulumi.output_property("useAwsOwnedKey")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetBrokerInstance(dict):
    console_url: str = pulumi.output_property("consoleUrl")
    endpoints: List[str] = pulumi.output_property("endpoints")
    ip_address: str = pulumi.output_property("ipAddress")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetBrokerLogs(dict):
    audit: bool = pulumi.output_property("audit")
    general: bool = pulumi.output_property("general")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetBrokerMaintenanceWindowStartTime(dict):
    day_of_week: str = pulumi.output_property("dayOfWeek")
    time_of_day: str = pulumi.output_property("timeOfDay")
    time_zone: str = pulumi.output_property("timeZone")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetBrokerUser(dict):
    console_access: bool = pulumi.output_property("consoleAccess")
    groups: List[str] = pulumi.output_property("groups")
    username: str = pulumi.output_property("username")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


