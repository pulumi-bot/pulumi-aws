# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Mapping, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'GlobalTableReplica',
    'TableAttribute',
    'TableGlobalSecondaryIndex',
    'TableLocalSecondaryIndex',
    'TablePointInTimeRecovery',
    'TableReplica',
    'TableServerSideEncryption',
    'TableTtl',
    'GetTableAttributeResult',
    'GetTableGlobalSecondaryIndexResult',
    'GetTableLocalSecondaryIndexResult',
    'GetTablePointInTimeRecoveryResult',
    'GetTableReplicaResult',
    'GetTableServerSideEncryptionResult',
    'GetTableTtlResult',
]

@pulumi.output_type
class GlobalTableReplica(dict):
    @property
    @pulumi.getter(name="regionName")
    def region_name(self) -> str:
        """
        AWS region name of replica DynamoDB Table. e.g. `us-east-1`
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class TableAttribute(dict):
    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the index
        """
        ...

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        Attribute type, which must be a scalar type: `S`, `N`, or `B` for (S)tring, (N)umber or (B)inary data
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class TableGlobalSecondaryIndex(dict):
    @property
    @pulumi.getter(name="hashKey")
    def hash_key(self) -> str:
        """
        The name of the hash key in the index; must be
        defined as an attribute in the resource.
        """
        ...

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the index
        """
        ...

    @property
    @pulumi.getter(name="nonKeyAttributes")
    def non_key_attributes(self) -> Optional[List[str]]:
        """
        Only required with `INCLUDE` as a
        projection type; a list of attributes to project into the index. These
        do not need to be defined as attributes on the table.
        """
        ...

    @property
    @pulumi.getter(name="projectionType")
    def projection_type(self) -> str:
        """
        One of `ALL`, `INCLUDE` or `KEYS_ONLY`
        where `ALL` projects every attribute into the index, `KEYS_ONLY`
        projects just the hash and range key into the index, and `INCLUDE`
        projects only the keys specified in the _non_key_attributes_
        parameter.
        """
        ...

    @property
    @pulumi.getter(name="rangeKey")
    def range_key(self) -> Optional[str]:
        """
        The name of the range key; must be defined
        """
        ...

    @property
    @pulumi.getter(name="readCapacity")
    def read_capacity(self) -> Optional[float]:
        """
        The number of read units for this index. Must be set if billing_mode is set to PROVISIONED.
        """
        ...

    @property
    @pulumi.getter(name="writeCapacity")
    def write_capacity(self) -> Optional[float]:
        """
        The number of write units for this index. Must be set if billing_mode is set to PROVISIONED.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class TableLocalSecondaryIndex(dict):
    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the index
        """
        ...

    @property
    @pulumi.getter(name="nonKeyAttributes")
    def non_key_attributes(self) -> Optional[List[str]]:
        """
        Only required with `INCLUDE` as a
        projection type; a list of attributes to project into the index. These
        do not need to be defined as attributes on the table.
        """
        ...

    @property
    @pulumi.getter(name="projectionType")
    def projection_type(self) -> str:
        """
        One of `ALL`, `INCLUDE` or `KEYS_ONLY`
        where `ALL` projects every attribute into the index, `KEYS_ONLY`
        projects just the hash and range key into the index, and `INCLUDE`
        projects only the keys specified in the _non_key_attributes_
        parameter.
        """
        ...

    @property
    @pulumi.getter(name="rangeKey")
    def range_key(self) -> str:
        """
        The name of the range key; must be defined
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class TablePointInTimeRecovery(dict):
    @property
    @pulumi.getter
    def enabled(self) -> bool:
        """
        Indicates whether ttl is enabled (true) or disabled (false).
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class TableReplica(dict):
    @property
    @pulumi.getter(name="regionName")
    def region_name(self) -> str:
        """
        Region name of the replica.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class TableServerSideEncryption(dict):
    @property
    @pulumi.getter
    def enabled(self) -> bool:
        """
        Indicates whether ttl is enabled (true) or disabled (false).
        """
        ...

    @property
    @pulumi.getter(name="kmsKeyArn")
    def kms_key_arn(self) -> Optional[str]:
        """
        The ARN of the CMK that should be used for the AWS KMS encryption.
        This attribute should only be specified if the key is different from the default DynamoDB CMK, `alias/aws/dynamodb`.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class TableTtl(dict):
    @property
    @pulumi.getter(name="attributeName")
    def attribute_name(self) -> str:
        """
        The name of the table attribute to store the TTL timestamp in.
        """
        ...

    @property
    @pulumi.getter
    def enabled(self) -> Optional[bool]:
        """
        Indicates whether ttl is enabled (true) or disabled (false).
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetTableAttributeResult(dict):
    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the DynamoDB table.
        """
        ...

    @property
    @pulumi.getter
    def type(self) -> str:
        ...


@pulumi.output_type
class GetTableGlobalSecondaryIndexResult(dict):
    @property
    @pulumi.getter(name="hashKey")
    def hash_key(self) -> str:
        ...

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the DynamoDB table.
        """
        ...

    @property
    @pulumi.getter(name="nonKeyAttributes")
    def non_key_attributes(self) -> List[str]:
        ...

    @property
    @pulumi.getter(name="projectionType")
    def projection_type(self) -> str:
        ...

    @property
    @pulumi.getter(name="rangeKey")
    def range_key(self) -> str:
        ...

    @property
    @pulumi.getter(name="readCapacity")
    def read_capacity(self) -> float:
        ...

    @property
    @pulumi.getter(name="writeCapacity")
    def write_capacity(self) -> float:
        ...


@pulumi.output_type
class GetTableLocalSecondaryIndexResult(dict):
    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the DynamoDB table.
        """
        ...

    @property
    @pulumi.getter(name="nonKeyAttributes")
    def non_key_attributes(self) -> List[str]:
        ...

    @property
    @pulumi.getter(name="projectionType")
    def projection_type(self) -> str:
        ...

    @property
    @pulumi.getter(name="rangeKey")
    def range_key(self) -> str:
        ...


@pulumi.output_type
class GetTablePointInTimeRecoveryResult(dict):
    @property
    @pulumi.getter
    def enabled(self) -> bool:
        ...


@pulumi.output_type
class GetTableReplicaResult(dict):
    @property
    @pulumi.getter(name="regionName")
    def region_name(self) -> str:
        ...


@pulumi.output_type
class GetTableServerSideEncryptionResult(dict):
    @property
    @pulumi.getter
    def enabled(self) -> bool:
        ...

    @property
    @pulumi.getter(name="kmsKeyArn")
    def kms_key_arn(self) -> str:
        ...


@pulumi.output_type
class GetTableTtlResult(dict):
    @property
    @pulumi.getter(name="attributeName")
    def attribute_name(self) -> str:
        ...

    @property
    @pulumi.getter
    def enabled(self) -> bool:
        ...


