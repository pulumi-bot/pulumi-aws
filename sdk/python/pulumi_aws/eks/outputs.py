# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'ClusterCertificateAuthority',
    'ClusterEncryptionConfig',
    'ClusterEncryptionConfigProvider',
    'ClusterIdentity',
    'ClusterIdentityOidc',
    'ClusterVpcConfig',
    'FargateProfileSelector',
    'NodeGroupRemoteAccess',
    'NodeGroupResource',
    'NodeGroupResourceAutoscalingGroup',
    'NodeGroupScalingConfig',
    'GetClusterCertificateAuthority',
    'GetClusterIdentity',
    'GetClusterIdentityOidc',
    'GetClusterVpcConfig',
]

@pulumi.output_type
class ClusterCertificateAuthority(dict):
    data: Optional[str] = pulumi.output_property("data")
    """
    The base64 encoded certificate data required to communicate with your cluster. Add this to the `certificate-authority-data` section of the `kubeconfig` file for your cluster.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ClusterEncryptionConfig(dict):
    provider: 'outputs.ClusterEncryptionConfigProvider' = pulumi.output_property("provider")
    """
    Configuration block with provider for encryption. Detailed below.
    """
    resources: List[str] = pulumi.output_property("resources")
    """
    List of strings with resources to be encrypted. Valid values: `secrets`
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ClusterEncryptionConfigProvider(dict):
    key_arn: str = pulumi.output_property("keyArn")
    """
    Amazon Resource Name (ARN) of the Key Management Service (KMS) customer master key (CMK). The CMK must be symmetric, created in the same region as the cluster, and if the CMK was created in a different account, the user must have access to the CMK. For more information, see [Allowing Users in Other Accounts to Use a CMK in the AWS Key Management Service Developer Guide](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-modifying-external-accounts.html).
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ClusterIdentity(dict):
    oidcs: Optional[List['outputs.ClusterIdentityOidc']] = pulumi.output_property("oidcs")
    """
    Nested attribute containing [OpenID Connect](https://openid.net/connect/) identity provider information for the cluster.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ClusterIdentityOidc(dict):
    issuer: Optional[str] = pulumi.output_property("issuer")
    """
    Issuer URL for the OpenID Connect identity provider.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ClusterVpcConfig(dict):
    cluster_security_group_id: Optional[str] = pulumi.output_property("clusterSecurityGroupId")
    """
    The cluster security group that was created by Amazon EKS for the cluster.
    """
    endpoint_private_access: Optional[bool] = pulumi.output_property("endpointPrivateAccess")
    """
    Indicates whether or not the Amazon EKS private API server endpoint is enabled. Default is `false`.
    """
    endpoint_public_access: Optional[bool] = pulumi.output_property("endpointPublicAccess")
    """
    Indicates whether or not the Amazon EKS public API server endpoint is enabled. Default is `true`.
    """
    public_access_cidrs: Optional[List[str]] = pulumi.output_property("publicAccessCidrs")
    """
    List of CIDR blocks. Indicates which CIDR blocks can access the Amazon EKS public API server endpoint when enabled. EKS defaults this to a list with `0.0.0.0/0`. This provider will only perform drift detection of its value when present in a configuration.
    """
    security_group_ids: Optional[List[str]] = pulumi.output_property("securityGroupIds")
    """
    List of security group IDs for the cross-account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane.
    """
    subnet_ids: List[str] = pulumi.output_property("subnetIds")
    """
    List of subnet IDs. Must be in at least two different availability zones. Amazon EKS creates cross-account elastic network interfaces in these subnets to allow communication between your worker nodes and the Kubernetes control plane.
    """
    vpc_id: Optional[str] = pulumi.output_property("vpcId")
    """
    The VPC associated with your cluster.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class FargateProfileSelector(dict):
    labels: Optional[Dict[str, str]] = pulumi.output_property("labels")
    """
    Key-value map of Kubernetes labels for selection.
    """
    namespace: str = pulumi.output_property("namespace")
    """
    Kubernetes namespace for selection.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class NodeGroupRemoteAccess(dict):
    ec2_ssh_key: Optional[str] = pulumi.output_property("ec2SshKey")
    """
    EC2 Key Pair name that provides access for SSH communication with the worker nodes in the EKS Node Group. If you specify this configuration, but do not specify `source_security_group_ids` when you create an EKS Node Group, port 22 on the worker nodes is opened to the Internet (0.0.0.0/0).
    """
    source_security_group_ids: Optional[List[str]] = pulumi.output_property("sourceSecurityGroupIds")
    """
    Set of EC2 Security Group IDs to allow SSH access (port 22) from on the worker nodes. If you specify `ec2_ssh_key`, but do not specify this configuration when you create an EKS Node Group, port 22 on the worker nodes is opened to the Internet (0.0.0.0/0).
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class NodeGroupResource(dict):
    autoscaling_groups: Optional[List['outputs.NodeGroupResourceAutoscalingGroup']] = pulumi.output_property("autoscalingGroups")
    """
    List of objects containing information about AutoScaling Groups.
    """
    remote_access_security_group_id: Optional[str] = pulumi.output_property("remoteAccessSecurityGroupId")
    """
    Identifier of the remote access EC2 Security Group.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class NodeGroupResourceAutoscalingGroup(dict):
    name: Optional[str] = pulumi.output_property("name")
    """
    Name of the AutoScaling Group.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class NodeGroupScalingConfig(dict):
    desired_size: float = pulumi.output_property("desiredSize")
    """
    Desired number of worker nodes.
    """
    max_size: float = pulumi.output_property("maxSize")
    """
    Maximum number of worker nodes.
    """
    min_size: float = pulumi.output_property("minSize")
    """
    Minimum number of worker nodes.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetClusterCertificateAuthority(dict):
    data: str = pulumi.output_property("data")
    """
    The base64 encoded certificate data required to communicate with your cluster. Add this to the `certificate-authority-data` section of the `kubeconfig` file for your cluster.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetClusterIdentity(dict):
    oidcs: List['outputs.GetClusterIdentityOidc'] = pulumi.output_property("oidcs")
    """
    Nested attribute containing [OpenID Connect](https://openid.net/connect/) identity provider information for the cluster.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetClusterIdentityOidc(dict):
    issuer: str = pulumi.output_property("issuer")
    """
    Issuer URL for the OpenID Connect identity provider.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetClusterVpcConfig(dict):
    cluster_security_group_id: str = pulumi.output_property("clusterSecurityGroupId")
    """
    The cluster security group that was created by Amazon EKS for the cluster.
    """
    endpoint_private_access: bool = pulumi.output_property("endpointPrivateAccess")
    """
    Indicates whether or not the Amazon EKS private API server endpoint is enabled.
    """
    endpoint_public_access: bool = pulumi.output_property("endpointPublicAccess")
    """
    Indicates whether or not the Amazon EKS public API server endpoint is enabled.
    """
    public_access_cidrs: List[str] = pulumi.output_property("publicAccessCidrs")
    """
    List of CIDR blocks. Indicates which CIDR blocks can access the Amazon EKS public API server endpoint.
    """
    security_group_ids: List[str] = pulumi.output_property("securityGroupIds")
    """
    List of security group IDs
    """
    subnet_ids: List[str] = pulumi.output_property("subnetIds")
    """
    List of subnet IDs
    """
    vpc_id: str = pulumi.output_property("vpcId")
    """
    The VPC associated with your cluster.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


