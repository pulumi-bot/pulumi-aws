# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'ClusterCertificateAuthorityArgs',
    'ClusterEncryptionConfigArgs',
    'ClusterEncryptionConfigProviderArgs',
    'ClusterIdentityArgs',
    'ClusterIdentityOidcArgs',
    'ClusterVpcConfigArgs',
    'FargateProfileSelectorArgs',
    'NodeGroupRemoteAccessArgs',
    'NodeGroupResourceArgs',
    'NodeGroupResourceAutoscalingGroupArgs',
    'NodeGroupScalingConfigArgs',
]

@pulumi.input_type
class ClusterCertificateAuthorityArgs:
    data: Optional[pulumi.Input[str]] = pulumi.input_property("data")
    """
    The base64 encoded certificate data required to communicate with your cluster. Add this to the `certificate-authority-data` section of the `kubeconfig` file for your cluster.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, data: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] data: The base64 encoded certificate data required to communicate with your cluster. Add this to the `certificate-authority-data` section of the `kubeconfig` file for your cluster.
        """
        __self__.data = data

@pulumi.input_type
class ClusterEncryptionConfigArgs:
    provider: pulumi.Input['ClusterEncryptionConfigProviderArgs'] = pulumi.input_property("provider")
    """
    Configuration block with provider for encryption. Detailed below.
    """
    resources: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("resources")
    """
    List of strings with resources to be encrypted. Valid values: `secrets`
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, provider: pulumi.Input['ClusterEncryptionConfigProviderArgs'], resources: pulumi.Input[List[pulumi.Input[str]]]) -> None:
        """
        :param pulumi.Input['ClusterEncryptionConfigProviderArgs'] provider: Configuration block with provider for encryption. Detailed below.
        :param pulumi.Input[List[pulumi.Input[str]]] resources: List of strings with resources to be encrypted. Valid values: `secrets`
        """
        __self__.provider = provider
        __self__.resources = resources

@pulumi.input_type
class ClusterEncryptionConfigProviderArgs:
    key_arn: pulumi.Input[str] = pulumi.input_property("keyArn")
    """
    Amazon Resource Name (ARN) of the Key Management Service (KMS) customer master key (CMK). The CMK must be symmetric, created in the same region as the cluster, and if the CMK was created in a different account, the user must have access to the CMK. For more information, see [Allowing Users in Other Accounts to Use a CMK in the AWS Key Management Service Developer Guide](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-modifying-external-accounts.html).
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, key_arn: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] key_arn: Amazon Resource Name (ARN) of the Key Management Service (KMS) customer master key (CMK). The CMK must be symmetric, created in the same region as the cluster, and if the CMK was created in a different account, the user must have access to the CMK. For more information, see [Allowing Users in Other Accounts to Use a CMK in the AWS Key Management Service Developer Guide](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-modifying-external-accounts.html).
        """
        __self__.key_arn = key_arn

@pulumi.input_type
class ClusterIdentityArgs:
    oidcs: Optional[pulumi.Input[List[pulumi.Input['ClusterIdentityOidcArgs']]]] = pulumi.input_property("oidcs")
    """
    Nested attribute containing [OpenID Connect](https://openid.net/connect/) identity provider information for the cluster.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, oidcs: Optional[pulumi.Input[List[pulumi.Input['ClusterIdentityOidcArgs']]]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input['ClusterIdentityOidcArgs']]] oidcs: Nested attribute containing [OpenID Connect](https://openid.net/connect/) identity provider information for the cluster.
        """
        __self__.oidcs = oidcs

@pulumi.input_type
class ClusterIdentityOidcArgs:
    issuer: Optional[pulumi.Input[str]] = pulumi.input_property("issuer")
    """
    Issuer URL for the OpenID Connect identity provider.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, issuer: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] issuer: Issuer URL for the OpenID Connect identity provider.
        """
        __self__.issuer = issuer

@pulumi.input_type
class ClusterVpcConfigArgs:
    subnet_ids: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("subnetIds")
    """
    List of subnet IDs. Must be in at least two different availability zones. Amazon EKS creates cross-account elastic network interfaces in these subnets to allow communication between your worker nodes and the Kubernetes control plane.
    """
    cluster_security_group_id: Optional[pulumi.Input[str]] = pulumi.input_property("clusterSecurityGroupId")
    """
    The cluster security group that was created by Amazon EKS for the cluster.
    """
    endpoint_private_access: Optional[pulumi.Input[bool]] = pulumi.input_property("endpointPrivateAccess")
    """
    Indicates whether or not the Amazon EKS private API server endpoint is enabled. Default is `false`.
    """
    endpoint_public_access: Optional[pulumi.Input[bool]] = pulumi.input_property("endpointPublicAccess")
    """
    Indicates whether or not the Amazon EKS public API server endpoint is enabled. Default is `true`.
    """
    public_access_cidrs: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("publicAccessCidrs")
    """
    List of CIDR blocks. Indicates which CIDR blocks can access the Amazon EKS public API server endpoint when enabled. EKS defaults this to a list with `0.0.0.0/0`. This provider will only perform drift detection of its value when present in a configuration.
    """
    security_group_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("securityGroupIds")
    """
    List of security group IDs for the cross-account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane.
    """
    vpc_id: Optional[pulumi.Input[str]] = pulumi.input_property("vpcId")
    """
    The VPC associated with your cluster.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, subnet_ids: pulumi.Input[List[pulumi.Input[str]]], cluster_security_group_id: Optional[pulumi.Input[str]] = None, endpoint_private_access: Optional[pulumi.Input[bool]] = None, endpoint_public_access: Optional[pulumi.Input[bool]] = None, public_access_cidrs: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, security_group_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, vpc_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] subnet_ids: List of subnet IDs. Must be in at least two different availability zones. Amazon EKS creates cross-account elastic network interfaces in these subnets to allow communication between your worker nodes and the Kubernetes control plane.
        :param pulumi.Input[str] cluster_security_group_id: The cluster security group that was created by Amazon EKS for the cluster.
        :param pulumi.Input[bool] endpoint_private_access: Indicates whether or not the Amazon EKS private API server endpoint is enabled. Default is `false`.
        :param pulumi.Input[bool] endpoint_public_access: Indicates whether or not the Amazon EKS public API server endpoint is enabled. Default is `true`.
        :param pulumi.Input[List[pulumi.Input[str]]] public_access_cidrs: List of CIDR blocks. Indicates which CIDR blocks can access the Amazon EKS public API server endpoint when enabled. EKS defaults this to a list with `0.0.0.0/0`. This provider will only perform drift detection of its value when present in a configuration.
        :param pulumi.Input[List[pulumi.Input[str]]] security_group_ids: List of security group IDs for the cross-account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane.
        :param pulumi.Input[str] vpc_id: The VPC associated with your cluster.
        """
        __self__.subnet_ids = subnet_ids
        __self__.cluster_security_group_id = cluster_security_group_id
        __self__.endpoint_private_access = endpoint_private_access
        __self__.endpoint_public_access = endpoint_public_access
        __self__.public_access_cidrs = public_access_cidrs
        __self__.security_group_ids = security_group_ids
        __self__.vpc_id = vpc_id

@pulumi.input_type
class FargateProfileSelectorArgs:
    namespace: pulumi.Input[str] = pulumi.input_property("namespace")
    """
    Kubernetes namespace for selection.
    """
    labels: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("labels")
    """
    Key-value map of Kubernetes labels for selection.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, namespace: pulumi.Input[str], labels: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] namespace: Kubernetes namespace for selection.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] labels: Key-value map of Kubernetes labels for selection.
        """
        __self__.namespace = namespace
        __self__.labels = labels

@pulumi.input_type
class NodeGroupRemoteAccessArgs:
    ec2_ssh_key: Optional[pulumi.Input[str]] = pulumi.input_property("ec2SshKey")
    """
    EC2 Key Pair name that provides access for SSH communication with the worker nodes in the EKS Node Group. If you specify this configuration, but do not specify `source_security_group_ids` when you create an EKS Node Group, port 22 on the worker nodes is opened to the Internet (0.0.0.0/0).
    """
    source_security_group_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("sourceSecurityGroupIds")
    """
    Set of EC2 Security Group IDs to allow SSH access (port 22) from on the worker nodes. If you specify `ec2_ssh_key`, but do not specify this configuration when you create an EKS Node Group, port 22 on the worker nodes is opened to the Internet (0.0.0.0/0).
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, ec2_ssh_key: Optional[pulumi.Input[str]] = None, source_security_group_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] ec2_ssh_key: EC2 Key Pair name that provides access for SSH communication with the worker nodes in the EKS Node Group. If you specify this configuration, but do not specify `source_security_group_ids` when you create an EKS Node Group, port 22 on the worker nodes is opened to the Internet (0.0.0.0/0).
        :param pulumi.Input[List[pulumi.Input[str]]] source_security_group_ids: Set of EC2 Security Group IDs to allow SSH access (port 22) from on the worker nodes. If you specify `ec2_ssh_key`, but do not specify this configuration when you create an EKS Node Group, port 22 on the worker nodes is opened to the Internet (0.0.0.0/0).
        """
        __self__.ec2_ssh_key = ec2_ssh_key
        __self__.source_security_group_ids = source_security_group_ids

@pulumi.input_type
class NodeGroupResourceArgs:
    autoscaling_groups: Optional[pulumi.Input[List[pulumi.Input['NodeGroupResourceAutoscalingGroupArgs']]]] = pulumi.input_property("autoscalingGroups")
    """
    List of objects containing information about AutoScaling Groups.
    """
    remote_access_security_group_id: Optional[pulumi.Input[str]] = pulumi.input_property("remoteAccessSecurityGroupId")
    """
    Identifier of the remote access EC2 Security Group.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, autoscaling_groups: Optional[pulumi.Input[List[pulumi.Input['NodeGroupResourceAutoscalingGroupArgs']]]] = None, remote_access_security_group_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input['NodeGroupResourceAutoscalingGroupArgs']]] autoscaling_groups: List of objects containing information about AutoScaling Groups.
        :param pulumi.Input[str] remote_access_security_group_id: Identifier of the remote access EC2 Security Group.
        """
        __self__.autoscaling_groups = autoscaling_groups
        __self__.remote_access_security_group_id = remote_access_security_group_id

@pulumi.input_type
class NodeGroupResourceAutoscalingGroupArgs:
    name: Optional[pulumi.Input[str]] = pulumi.input_property("name")
    """
    Name of the AutoScaling Group.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] name: Name of the AutoScaling Group.
        """
        __self__.name = name

@pulumi.input_type
class NodeGroupScalingConfigArgs:
    desired_size: pulumi.Input[float] = pulumi.input_property("desiredSize")
    """
    Desired number of worker nodes.
    """
    max_size: pulumi.Input[float] = pulumi.input_property("maxSize")
    """
    Maximum number of worker nodes.
    """
    min_size: pulumi.Input[float] = pulumi.input_property("minSize")
    """
    Minimum number of worker nodes.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, desired_size: pulumi.Input[float], max_size: pulumi.Input[float], min_size: pulumi.Input[float]) -> None:
        """
        :param pulumi.Input[float] desired_size: Desired number of worker nodes.
        :param pulumi.Input[float] max_size: Maximum number of worker nodes.
        :param pulumi.Input[float] min_size: Minimum number of worker nodes.
        """
        __self__.desired_size = desired_size
        __self__.max_size = max_size
        __self__.min_size = min_size

