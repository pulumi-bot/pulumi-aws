# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'ClusterParameterGroupParameterArgs',
    'ParameterGroupParameterArgs',
]

@pulumi.input_type
class ClusterParameterGroupParameterArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The name of the neptune parameter.
    """
    value: pulumi.Input[str] = pulumi.input_property("value")
    """
    The value of the neptune parameter.
    """
    apply_method: Optional[pulumi.Input[str]] = pulumi.input_property("applyMethod")
    """
    Valid values are `immediate` and `pending-reboot`. Defaults to `pending-reboot`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], value: pulumi.Input[str], apply_method: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] name: The name of the neptune parameter.
        :param pulumi.Input[str] value: The value of the neptune parameter.
        :param pulumi.Input[str] apply_method: Valid values are `immediate` and `pending-reboot`. Defaults to `pending-reboot`.
        """
        __self__.name = name
        __self__.value = value
        __self__.apply_method = apply_method

@pulumi.input_type
class ParameterGroupParameterArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The name of the Neptune parameter.
    """
    value: pulumi.Input[str] = pulumi.input_property("value")
    """
    The value of the Neptune parameter.
    """
    apply_method: Optional[pulumi.Input[str]] = pulumi.input_property("applyMethod")
    """
    The apply method of the Neptune parameter. Valid values are `immediate` and `pending-reboot`. Defaults to `pending-reboot`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], value: pulumi.Input[str], apply_method: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] name: The name of the Neptune parameter.
        :param pulumi.Input[str] value: The value of the Neptune parameter.
        :param pulumi.Input[str] apply_method: The apply method of the Neptune parameter. Valid values are `immediate` and `pending-reboot`. Defaults to `pending-reboot`.
        """
        __self__.name = name
        __self__.value = value
        __self__.apply_method = apply_method

