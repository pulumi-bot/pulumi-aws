# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'EndpointElasticsearchSettingsArgs',
    'EndpointKafkaSettingsArgs',
    'EndpointKinesisSettingsArgs',
    'EndpointMongodbSettingsArgs',
    'EndpointS3SettingsArgs',
]

@pulumi.input_type
class EndpointElasticsearchSettingsArgs:
    endpoint_uri: pulumi.Input[str] = pulumi.input_property("endpointUri")
    """
    Endpoint for the Elasticsearch cluster.
    """
    service_access_role_arn: pulumi.Input[str] = pulumi.input_property("serviceAccessRoleArn")
    """
    Amazon Resource Name (ARN) of the IAM Role with permissions to write to the Elasticsearch cluster.
    """
    error_retry_duration: Optional[pulumi.Input[float]] = pulumi.input_property("errorRetryDuration")
    """
    Maximum number of seconds for which DMS retries failed API requests to the Elasticsearch cluster. Defaults to `300`.
    """
    full_load_error_percentage: Optional[pulumi.Input[float]] = pulumi.input_property("fullLoadErrorPercentage")
    """
    Maximum percentage of records that can fail to be written before a full load operation stops. Defaults to `10`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, endpoint_uri: pulumi.Input[str], service_access_role_arn: pulumi.Input[str], error_retry_duration: Optional[pulumi.Input[float]] = None, full_load_error_percentage: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[str] endpoint_uri: Endpoint for the Elasticsearch cluster.
        :param pulumi.Input[str] service_access_role_arn: Amazon Resource Name (ARN) of the IAM Role with permissions to write to the Elasticsearch cluster.
        :param pulumi.Input[float] error_retry_duration: Maximum number of seconds for which DMS retries failed API requests to the Elasticsearch cluster. Defaults to `300`.
        :param pulumi.Input[float] full_load_error_percentage: Maximum percentage of records that can fail to be written before a full load operation stops. Defaults to `10`.
        """
        __self__.endpoint_uri = endpoint_uri
        __self__.service_access_role_arn = service_access_role_arn
        __self__.error_retry_duration = error_retry_duration
        __self__.full_load_error_percentage = full_load_error_percentage

@pulumi.input_type
class EndpointKafkaSettingsArgs:
    broker: pulumi.Input[str] = pulumi.input_property("broker")
    """
    Kafka broker location. Specify in the form broker-hostname-or-ip:port.
    """
    topic: Optional[pulumi.Input[str]] = pulumi.input_property("topic")
    """
    Kafka topic for migration. Defaults to `kafka-default-topic`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, broker: pulumi.Input[str], topic: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] broker: Kafka broker location. Specify in the form broker-hostname-or-ip:port.
        :param pulumi.Input[str] topic: Kafka topic for migration. Defaults to `kafka-default-topic`.
        """
        __self__.broker = broker
        __self__.topic = topic

@pulumi.input_type
class EndpointKinesisSettingsArgs:
    message_format: Optional[pulumi.Input[str]] = pulumi.input_property("messageFormat")
    """
    Output format for the records created. Defaults to `json`. Valid values are `json` and `json_unformatted` (a single line with no tab).
    """
    service_access_role_arn: Optional[pulumi.Input[str]] = pulumi.input_property("serviceAccessRoleArn")
    """
    Amazon Resource Name (ARN) of the IAM Role with permissions to write to the Kinesis data stream.
    """
    stream_arn: Optional[pulumi.Input[str]] = pulumi.input_property("streamArn")
    """
    Amazon Resource Name (ARN) of the Kinesis data stream.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, message_format: Optional[pulumi.Input[str]] = None, service_access_role_arn: Optional[pulumi.Input[str]] = None, stream_arn: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] message_format: Output format for the records created. Defaults to `json`. Valid values are `json` and `json_unformatted` (a single line with no tab).
        :param pulumi.Input[str] service_access_role_arn: Amazon Resource Name (ARN) of the IAM Role with permissions to write to the Kinesis data stream.
        :param pulumi.Input[str] stream_arn: Amazon Resource Name (ARN) of the Kinesis data stream.
        """
        __self__.message_format = message_format
        __self__.service_access_role_arn = service_access_role_arn
        __self__.stream_arn = stream_arn

@pulumi.input_type
class EndpointMongodbSettingsArgs:
    auth_mechanism: Optional[pulumi.Input[str]] = pulumi.input_property("authMechanism")
    """
    Authentication mechanism to access the MongoDB source endpoint. Defaults to `default`.
    """
    auth_source: Optional[pulumi.Input[str]] = pulumi.input_property("authSource")
    """
    Authentication database name. Not used when `auth_type` is `no`. Defaults to `admin`.
    """
    auth_type: Optional[pulumi.Input[str]] = pulumi.input_property("authType")
    """
    Authentication type to access the MongoDB source endpoint. Defaults to `password`.
    """
    docs_to_investigate: Optional[pulumi.Input[str]] = pulumi.input_property("docsToInvestigate")
    """
    Number of documents to preview to determine the document organization. Use this setting when `nesting_level` is set to `one`. Defaults to `1000`.
    """
    extract_doc_id: Optional[pulumi.Input[str]] = pulumi.input_property("extractDocId")
    """
    Document ID. Use this setting when `nesting_level` is set to `none`. Defaults to `false`.
    """
    nesting_level: Optional[pulumi.Input[str]] = pulumi.input_property("nestingLevel")
    """
    Specifies either document or table mode. Defaults to `none`. Valid values are `one` (table mode) and `none` (document mode).
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, auth_mechanism: Optional[pulumi.Input[str]] = None, auth_source: Optional[pulumi.Input[str]] = None, auth_type: Optional[pulumi.Input[str]] = None, docs_to_investigate: Optional[pulumi.Input[str]] = None, extract_doc_id: Optional[pulumi.Input[str]] = None, nesting_level: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] auth_mechanism: Authentication mechanism to access the MongoDB source endpoint. Defaults to `default`.
        :param pulumi.Input[str] auth_source: Authentication database name. Not used when `auth_type` is `no`. Defaults to `admin`.
        :param pulumi.Input[str] auth_type: Authentication type to access the MongoDB source endpoint. Defaults to `password`.
        :param pulumi.Input[str] docs_to_investigate: Number of documents to preview to determine the document organization. Use this setting when `nesting_level` is set to `one`. Defaults to `1000`.
        :param pulumi.Input[str] extract_doc_id: Document ID. Use this setting when `nesting_level` is set to `none`. Defaults to `false`.
        :param pulumi.Input[str] nesting_level: Specifies either document or table mode. Defaults to `none`. Valid values are `one` (table mode) and `none` (document mode).
        """
        __self__.auth_mechanism = auth_mechanism
        __self__.auth_source = auth_source
        __self__.auth_type = auth_type
        __self__.docs_to_investigate = docs_to_investigate
        __self__.extract_doc_id = extract_doc_id
        __self__.nesting_level = nesting_level

@pulumi.input_type
class EndpointS3SettingsArgs:
    bucket_folder: Optional[pulumi.Input[str]] = pulumi.input_property("bucketFolder")
    """
    S3 Bucket Object prefix.
    """
    bucket_name: Optional[pulumi.Input[str]] = pulumi.input_property("bucketName")
    """
    S3 Bucket name.
    """
    compression_type: Optional[pulumi.Input[str]] = pulumi.input_property("compressionType")
    """
    Set to compress target files. Defaults to `NONE`. Valid values are `GZIP` and `NONE`.
    """
    csv_delimiter: Optional[pulumi.Input[str]] = pulumi.input_property("csvDelimiter")
    """
    Delimiter used to separate columns in the source files. Defaults to `,`.
    """
    csv_row_delimiter: Optional[pulumi.Input[str]] = pulumi.input_property("csvRowDelimiter")
    """
    Delimiter used to separate rows in the source files. Defaults to `\n`.
    """
    external_table_definition: Optional[pulumi.Input[str]] = pulumi.input_property("externalTableDefinition")
    """
    JSON document that describes how AWS DMS should interpret the data.
    """
    service_access_role_arn: Optional[pulumi.Input[str]] = pulumi.input_property("serviceAccessRoleArn")
    """
    Amazon Resource Name (ARN) of the IAM Role with permissions to read from or write to the S3 Bucket.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, bucket_folder: Optional[pulumi.Input[str]] = None, bucket_name: Optional[pulumi.Input[str]] = None, compression_type: Optional[pulumi.Input[str]] = None, csv_delimiter: Optional[pulumi.Input[str]] = None, csv_row_delimiter: Optional[pulumi.Input[str]] = None, external_table_definition: Optional[pulumi.Input[str]] = None, service_access_role_arn: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] bucket_folder: S3 Bucket Object prefix.
        :param pulumi.Input[str] bucket_name: S3 Bucket name.
        :param pulumi.Input[str] compression_type: Set to compress target files. Defaults to `NONE`. Valid values are `GZIP` and `NONE`.
        :param pulumi.Input[str] csv_delimiter: Delimiter used to separate columns in the source files. Defaults to `,`.
        :param pulumi.Input[str] csv_row_delimiter: Delimiter used to separate rows in the source files. Defaults to `\n`.
        :param pulumi.Input[str] external_table_definition: JSON document that describes how AWS DMS should interpret the data.
        :param pulumi.Input[str] service_access_role_arn: Amazon Resource Name (ARN) of the IAM Role with permissions to read from or write to the S3 Bucket.
        """
        __self__.bucket_folder = bucket_folder
        __self__.bucket_name = bucket_name
        __self__.compression_type = compression_type
        __self__.csv_delimiter = csv_delimiter
        __self__.csv_row_delimiter = csv_row_delimiter
        __self__.external_table_definition = external_table_definition
        __self__.service_access_role_arn = service_access_role_arn

