# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'EndpointConfigurationProductionVariantArgs',
    'ModelContainerArgs',
    'ModelPrimaryContainerArgs',
    'ModelVpcConfigArgs',
]

@pulumi.input_type
class EndpointConfigurationProductionVariantArgs:
    initial_instance_count: pulumi.Input[float] = pulumi.input_property("initialInstanceCount")
    """
    Initial number of instances used for auto-scaling.
    """
    instance_type: pulumi.Input[str] = pulumi.input_property("instanceType")
    """
    The type of instance to start.
    """
    model_name: pulumi.Input[str] = pulumi.input_property("modelName")
    """
    The name of the model to use.
    """
    accelerator_type: Optional[pulumi.Input[str]] = pulumi.input_property("acceleratorType")
    """
    The size of the Elastic Inference (EI) instance to use for the production variant.
    """
    initial_variant_weight: Optional[pulumi.Input[float]] = pulumi.input_property("initialVariantWeight")
    """
    Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. If unspecified, it defaults to 1.0.
    """
    variant_name: Optional[pulumi.Input[str]] = pulumi.input_property("variantName")
    """
    The name of the variant. If omitted, this provider will assign a random, unique name.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, initial_instance_count: pulumi.Input[float], instance_type: pulumi.Input[str], model_name: pulumi.Input[str], accelerator_type: Optional[pulumi.Input[str]] = None, initial_variant_weight: Optional[pulumi.Input[float]] = None, variant_name: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[float] initial_instance_count: Initial number of instances used for auto-scaling.
        :param pulumi.Input[str] instance_type: The type of instance to start.
        :param pulumi.Input[str] model_name: The name of the model to use.
        :param pulumi.Input[str] accelerator_type: The size of the Elastic Inference (EI) instance to use for the production variant.
        :param pulumi.Input[float] initial_variant_weight: Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. If unspecified, it defaults to 1.0.
        :param pulumi.Input[str] variant_name: The name of the variant. If omitted, this provider will assign a random, unique name.
        """
        __self__.initial_instance_count = initial_instance_count
        __self__.instance_type = instance_type
        __self__.model_name = model_name
        __self__.accelerator_type = accelerator_type
        __self__.initial_variant_weight = initial_variant_weight
        __self__.variant_name = variant_name

@pulumi.input_type
class ModelContainerArgs:
    image: pulumi.Input[str] = pulumi.input_property("image")
    """
    The registry path where the inference code image is stored in Amazon ECR.
    """
    container_hostname: Optional[pulumi.Input[str]] = pulumi.input_property("containerHostname")
    """
    The DNS host name for the container.
    """
    environment: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("environment")
    """
    Environment variables for the Docker container.
    A list of key value pairs.
    """
    model_data_url: Optional[pulumi.Input[str]] = pulumi.input_property("modelDataUrl")
    """
    The URL for the S3 location where model artifacts are stored.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, image: pulumi.Input[str], container_hostname: Optional[pulumi.Input[str]] = None, environment: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, model_data_url: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] image: The registry path where the inference code image is stored in Amazon ECR.
        :param pulumi.Input[str] container_hostname: The DNS host name for the container.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] environment: Environment variables for the Docker container.
               A list of key value pairs.
        :param pulumi.Input[str] model_data_url: The URL for the S3 location where model artifacts are stored.
        """
        __self__.image = image
        __self__.container_hostname = container_hostname
        __self__.environment = environment
        __self__.model_data_url = model_data_url

@pulumi.input_type
class ModelPrimaryContainerArgs:
    image: pulumi.Input[str] = pulumi.input_property("image")
    """
    The registry path where the inference code image is stored in Amazon ECR.
    """
    container_hostname: Optional[pulumi.Input[str]] = pulumi.input_property("containerHostname")
    """
    The DNS host name for the container.
    """
    environment: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("environment")
    """
    Environment variables for the Docker container.
    A list of key value pairs.
    """
    model_data_url: Optional[pulumi.Input[str]] = pulumi.input_property("modelDataUrl")
    """
    The URL for the S3 location where model artifacts are stored.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, image: pulumi.Input[str], container_hostname: Optional[pulumi.Input[str]] = None, environment: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, model_data_url: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] image: The registry path where the inference code image is stored in Amazon ECR.
        :param pulumi.Input[str] container_hostname: The DNS host name for the container.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] environment: Environment variables for the Docker container.
               A list of key value pairs.
        :param pulumi.Input[str] model_data_url: The URL for the S3 location where model artifacts are stored.
        """
        __self__.image = image
        __self__.container_hostname = container_hostname
        __self__.environment = environment
        __self__.model_data_url = model_data_url

@pulumi.input_type
class ModelVpcConfigArgs:
    security_group_ids: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("securityGroupIds")
    subnets: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("subnets")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, security_group_ids: pulumi.Input[List[pulumi.Input[str]]], subnets: pulumi.Input[List[pulumi.Input[str]]]) -> None:
        __self__.security_group_ids = security_group_ids
        __self__.subnets = subnets

