# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'CertificateAuthorityCertificateAuthorityConfigurationArgs',
    'CertificateAuthorityCertificateAuthorityConfigurationSubjectArgs',
    'CertificateAuthorityRevocationConfigurationArgs',
    'CertificateAuthorityRevocationConfigurationCrlConfigurationArgs',
    'GetCertificateAuthorityRevocationConfigurationArgs',
    'GetCertificateAuthorityRevocationConfigurationCrlConfigurationArgs',
]

@pulumi.input_type
class CertificateAuthorityCertificateAuthorityConfigurationArgs:
    key_algorithm: pulumi.Input[str] = pulumi.input_property("keyAlgorithm")
    """
    Type of the public key algorithm and size, in bits, of the key pair that your key pair creates when it issues a certificate. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CertificateAuthorityConfiguration.html).
    """
    signing_algorithm: pulumi.Input[str] = pulumi.input_property("signingAlgorithm")
    """
    Name of the algorithm your private CA uses to sign certificate requests. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CertificateAuthorityConfiguration.html).
    """
    subject: pulumi.Input['CertificateAuthorityCertificateAuthorityConfigurationSubjectArgs'] = pulumi.input_property("subject")
    """
    Nested argument that contains X.500 distinguished name information. At least one nested attribute must be specified.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, key_algorithm: pulumi.Input[str], signing_algorithm: pulumi.Input[str], subject: pulumi.Input['CertificateAuthorityCertificateAuthorityConfigurationSubjectArgs']) -> None:
        """
        :param pulumi.Input[str] key_algorithm: Type of the public key algorithm and size, in bits, of the key pair that your key pair creates when it issues a certificate. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CertificateAuthorityConfiguration.html).
        :param pulumi.Input[str] signing_algorithm: Name of the algorithm your private CA uses to sign certificate requests. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CertificateAuthorityConfiguration.html).
        :param pulumi.Input['CertificateAuthorityCertificateAuthorityConfigurationSubjectArgs'] subject: Nested argument that contains X.500 distinguished name information. At least one nested attribute must be specified.
        """
        __self__.key_algorithm = key_algorithm
        __self__.signing_algorithm = signing_algorithm
        __self__.subject = subject

@pulumi.input_type
class CertificateAuthorityCertificateAuthorityConfigurationSubjectArgs:
    common_name: Optional[pulumi.Input[str]] = pulumi.input_property("commonName")
    """
    Fully qualified domain name (FQDN) associated with the certificate subject.
    """
    country: Optional[pulumi.Input[str]] = pulumi.input_property("country")
    """
    Two digit code that specifies the country in which the certificate subject located.
    """
    distinguished_name_qualifier: Optional[pulumi.Input[str]] = pulumi.input_property("distinguishedNameQualifier")
    """
    Disambiguating information for the certificate subject.
    """
    generation_qualifier: Optional[pulumi.Input[str]] = pulumi.input_property("generationQualifier")
    """
    Typically a qualifier appended to the name of an individual. Examples include Jr. for junior, Sr. for senior, and III for third.
    """
    given_name: Optional[pulumi.Input[str]] = pulumi.input_property("givenName")
    """
    First name.
    """
    initials: Optional[pulumi.Input[str]] = pulumi.input_property("initials")
    """
    Concatenation that typically contains the first letter of the `given_name`, the first letter of the middle name if one exists, and the first letter of the `surname`.
    """
    locality: Optional[pulumi.Input[str]] = pulumi.input_property("locality")
    """
    The locality (such as a city or town) in which the certificate subject is located.
    """
    organization: Optional[pulumi.Input[str]] = pulumi.input_property("organization")
    """
    Legal name of the organization with which the certificate subject is affiliated.
    """
    organizational_unit: Optional[pulumi.Input[str]] = pulumi.input_property("organizationalUnit")
    """
    A subdivision or unit of the organization (such as sales or finance) with which the certificate subject is affiliated.
    """
    pseudonym: Optional[pulumi.Input[str]] = pulumi.input_property("pseudonym")
    """
    Typically a shortened version of a longer `given_name`. For example, Jonathan is often shortened to John. Elizabeth is often shortened to Beth, Liz, or Eliza.
    """
    state: Optional[pulumi.Input[str]] = pulumi.input_property("state")
    """
    State in which the subject of the certificate is located.
    """
    surname: Optional[pulumi.Input[str]] = pulumi.input_property("surname")
    """
    Family name. In the US and the UK for example, the surname of an individual is ordered last. In Asian cultures the surname is typically ordered first.
    """
    title: Optional[pulumi.Input[str]] = pulumi.input_property("title")
    """
    A title such as Mr. or Ms. which is pre-pended to the name to refer formally to the certificate subject.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, common_name: Optional[pulumi.Input[str]] = None, country: Optional[pulumi.Input[str]] = None, distinguished_name_qualifier: Optional[pulumi.Input[str]] = None, generation_qualifier: Optional[pulumi.Input[str]] = None, given_name: Optional[pulumi.Input[str]] = None, initials: Optional[pulumi.Input[str]] = None, locality: Optional[pulumi.Input[str]] = None, organization: Optional[pulumi.Input[str]] = None, organizational_unit: Optional[pulumi.Input[str]] = None, pseudonym: Optional[pulumi.Input[str]] = None, state: Optional[pulumi.Input[str]] = None, surname: Optional[pulumi.Input[str]] = None, title: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] common_name: Fully qualified domain name (FQDN) associated with the certificate subject.
        :param pulumi.Input[str] country: Two digit code that specifies the country in which the certificate subject located.
        :param pulumi.Input[str] distinguished_name_qualifier: Disambiguating information for the certificate subject.
        :param pulumi.Input[str] generation_qualifier: Typically a qualifier appended to the name of an individual. Examples include Jr. for junior, Sr. for senior, and III for third.
        :param pulumi.Input[str] given_name: First name.
        :param pulumi.Input[str] initials: Concatenation that typically contains the first letter of the `given_name`, the first letter of the middle name if one exists, and the first letter of the `surname`.
        :param pulumi.Input[str] locality: The locality (such as a city or town) in which the certificate subject is located.
        :param pulumi.Input[str] organization: Legal name of the organization with which the certificate subject is affiliated.
        :param pulumi.Input[str] organizational_unit: A subdivision or unit of the organization (such as sales or finance) with which the certificate subject is affiliated.
        :param pulumi.Input[str] pseudonym: Typically a shortened version of a longer `given_name`. For example, Jonathan is often shortened to John. Elizabeth is often shortened to Beth, Liz, or Eliza.
        :param pulumi.Input[str] state: State in which the subject of the certificate is located.
        :param pulumi.Input[str] surname: Family name. In the US and the UK for example, the surname of an individual is ordered last. In Asian cultures the surname is typically ordered first.
        :param pulumi.Input[str] title: A title such as Mr. or Ms. which is pre-pended to the name to refer formally to the certificate subject.
        """
        __self__.common_name = common_name
        __self__.country = country
        __self__.distinguished_name_qualifier = distinguished_name_qualifier
        __self__.generation_qualifier = generation_qualifier
        __self__.given_name = given_name
        __self__.initials = initials
        __self__.locality = locality
        __self__.organization = organization
        __self__.organizational_unit = organizational_unit
        __self__.pseudonym = pseudonym
        __self__.state = state
        __self__.surname = surname
        __self__.title = title

@pulumi.input_type
class CertificateAuthorityRevocationConfigurationArgs:
    crl_configuration: Optional[pulumi.Input['CertificateAuthorityRevocationConfigurationCrlConfigurationArgs']] = pulumi.input_property("crlConfiguration")
    """
    Nested argument containing configuration of the certificate revocation list (CRL), if any, maintained by the certificate authority. Defined below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, crl_configuration: Optional[pulumi.Input['CertificateAuthorityRevocationConfigurationCrlConfigurationArgs']] = None) -> None:
        """
        :param pulumi.Input['CertificateAuthorityRevocationConfigurationCrlConfigurationArgs'] crl_configuration: Nested argument containing configuration of the certificate revocation list (CRL), if any, maintained by the certificate authority. Defined below.
        """
        __self__.crl_configuration = crl_configuration

@pulumi.input_type
class CertificateAuthorityRevocationConfigurationCrlConfigurationArgs:
    expiration_in_days: pulumi.Input[float] = pulumi.input_property("expirationInDays")
    """
    Number of days until a certificate expires. Must be between 1 and 5000.
    """
    custom_cname: Optional[pulumi.Input[str]] = pulumi.input_property("customCname")
    """
    Name inserted into the certificate CRL Distribution Points extension that enables the use of an alias for the CRL distribution point. Use this value if you don't want the name of your S3 bucket to be public.
    """
    enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("enabled")
    """
    Boolean value that specifies whether certificate revocation lists (CRLs) are enabled. Defaults to `false`.
    """
    s3_bucket_name: Optional[pulumi.Input[str]] = pulumi.input_property("s3BucketName")
    """
    Name of the S3 bucket that contains the CRL. If you do not provide a value for the `custom_cname` argument, the name of your S3 bucket is placed into the CRL Distribution Points extension of the issued certificate. You must specify a bucket policy that allows ACM PCA to write the CRL to your bucket.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, expiration_in_days: pulumi.Input[float], custom_cname: Optional[pulumi.Input[str]] = None, enabled: Optional[pulumi.Input[bool]] = None, s3_bucket_name: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[float] expiration_in_days: Number of days until a certificate expires. Must be between 1 and 5000.
        :param pulumi.Input[str] custom_cname: Name inserted into the certificate CRL Distribution Points extension that enables the use of an alias for the CRL distribution point. Use this value if you don't want the name of your S3 bucket to be public.
        :param pulumi.Input[bool] enabled: Boolean value that specifies whether certificate revocation lists (CRLs) are enabled. Defaults to `false`.
        :param pulumi.Input[str] s3_bucket_name: Name of the S3 bucket that contains the CRL. If you do not provide a value for the `custom_cname` argument, the name of your S3 bucket is placed into the CRL Distribution Points extension of the issued certificate. You must specify a bucket policy that allows ACM PCA to write the CRL to your bucket.
        """
        __self__.expiration_in_days = expiration_in_days
        __self__.custom_cname = custom_cname
        __self__.enabled = enabled
        __self__.s3_bucket_name = s3_bucket_name

@pulumi.input_type
class GetCertificateAuthorityRevocationConfigurationArgs:
    crl_configurations: List['GetCertificateAuthorityRevocationConfigurationCrlConfigurationArgs'] = pulumi.input_property("crlConfigurations")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, crl_configurations: List['GetCertificateAuthorityRevocationConfigurationCrlConfigurationArgs']) -> None:
        __self__.crl_configurations = crl_configurations

@pulumi.input_type
class GetCertificateAuthorityRevocationConfigurationCrlConfigurationArgs:
    custom_cname: str = pulumi.input_property("customCname")
    enabled: bool = pulumi.input_property("enabled")
    expiration_in_days: float = pulumi.input_property("expirationInDays")
    s3_bucket_name: str = pulumi.input_property("s3BucketName")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, custom_cname: str, enabled: bool, expiration_in_days: float, s3_bucket_name: str) -> None:
        __self__.custom_cname = custom_cname
        __self__.enabled = enabled
        __self__.expiration_in_days = expiration_in_days
        __self__.s3_bucket_name = s3_bucket_name

