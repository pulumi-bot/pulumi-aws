# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'AccessPointPublicAccessBlockConfigurationArgs',
    'AccessPointVpcConfigurationArgs',
    'AnalyticsConfigurationFilterArgs',
    'AnalyticsConfigurationStorageClassAnalysisArgs',
    'AnalyticsConfigurationStorageClassAnalysisDataExportArgs',
    'AnalyticsConfigurationStorageClassAnalysisDataExportDestinationArgs',
    'AnalyticsConfigurationStorageClassAnalysisDataExportDestinationS3BucketDestinationArgs',
    'BucketCorsRuleArgs',
    'BucketGrantArgs',
    'BucketLifecycleRuleArgs',
    'BucketLifecycleRuleExpirationArgs',
    'BucketLifecycleRuleNoncurrentVersionExpirationArgs',
    'BucketLifecycleRuleNoncurrentVersionTransitionArgs',
    'BucketLifecycleRuleTransitionArgs',
    'BucketLoggingArgs',
    'BucketMetricFilterArgs',
    'BucketNotificationLambdaFunctionArgs',
    'BucketNotificationQueueArgs',
    'BucketNotificationTopicArgs',
    'BucketObjectLockConfigurationArgs',
    'BucketObjectLockConfigurationRuleArgs',
    'BucketObjectLockConfigurationRuleDefaultRetentionArgs',
    'BucketReplicationConfigurationArgs',
    'BucketReplicationConfigurationRuleArgs',
    'BucketReplicationConfigurationRuleDestinationArgs',
    'BucketReplicationConfigurationRuleDestinationAccessControlTranslationArgs',
    'BucketReplicationConfigurationRuleFilterArgs',
    'BucketReplicationConfigurationRuleSourceSelectionCriteriaArgs',
    'BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsArgs',
    'BucketServerSideEncryptionConfigurationArgs',
    'BucketServerSideEncryptionConfigurationRuleArgs',
    'BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs',
    'BucketVersioningArgs',
    'BucketWebsiteArgs',
    'InventoryDestinationArgs',
    'InventoryDestinationBucketArgs',
    'InventoryDestinationBucketEncryptionArgs',
    'InventoryDestinationBucketEncryptionSseKmsArgs',
    'InventoryDestinationBucketEncryptionSseS3Args',
    'InventoryFilterArgs',
    'InventoryScheduleArgs',
]

@pulumi.input_type
class AccessPointPublicAccessBlockConfigurationArgs:
    block_public_acls: Optional[pulumi.Input[bool]] = pulumi.input_property("blockPublicAcls")
    """
    Whether Amazon S3 should block public ACLs for buckets in this account. Defaults to `true`. Enabling this setting does not affect existing policies or ACLs. When set to `true` causes the following behavior:
    * PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.
    * PUT Object calls fail if the request includes a public ACL.
    * PUT Bucket calls fail if the request includes a public ACL.
    """
    block_public_policy: Optional[pulumi.Input[bool]] = pulumi.input_property("blockPublicPolicy")
    """
    Whether Amazon S3 should block public bucket policies for buckets in this account. Defaults to `true`. Enabling this setting does not affect existing bucket policies. When set to `true` causes Amazon S3 to:
    * Reject calls to PUT Bucket policy if the specified bucket policy allows public access.
    """
    ignore_public_acls: Optional[pulumi.Input[bool]] = pulumi.input_property("ignorePublicAcls")
    """
    Whether Amazon S3 should ignore public ACLs for buckets in this account. Defaults to `true`. Enabling this setting does not affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set. When set to `true` causes Amazon S3 to:
    * Ignore all public ACLs on buckets in this account and any objects that they contain.
    """
    restrict_public_buckets: Optional[pulumi.Input[bool]] = pulumi.input_property("restrictPublicBuckets")
    """
    Whether Amazon S3 should restrict public bucket policies for buckets in this account. Defaults to `true`. Enabling this setting does not affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked. When set to `true`:
    * Only the bucket owner and AWS Services can access buckets with public policies.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, block_public_acls: Optional[pulumi.Input[bool]] = None, block_public_policy: Optional[pulumi.Input[bool]] = None, ignore_public_acls: Optional[pulumi.Input[bool]] = None, restrict_public_buckets: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[bool] block_public_acls: Whether Amazon S3 should block public ACLs for buckets in this account. Defaults to `true`. Enabling this setting does not affect existing policies or ACLs. When set to `true` causes the following behavior:
               * PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.
               * PUT Object calls fail if the request includes a public ACL.
               * PUT Bucket calls fail if the request includes a public ACL.
        :param pulumi.Input[bool] block_public_policy: Whether Amazon S3 should block public bucket policies for buckets in this account. Defaults to `true`. Enabling this setting does not affect existing bucket policies. When set to `true` causes Amazon S3 to:
               * Reject calls to PUT Bucket policy if the specified bucket policy allows public access.
        :param pulumi.Input[bool] ignore_public_acls: Whether Amazon S3 should ignore public ACLs for buckets in this account. Defaults to `true`. Enabling this setting does not affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set. When set to `true` causes Amazon S3 to:
               * Ignore all public ACLs on buckets in this account and any objects that they contain.
        :param pulumi.Input[bool] restrict_public_buckets: Whether Amazon S3 should restrict public bucket policies for buckets in this account. Defaults to `true`. Enabling this setting does not affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked. When set to `true`:
               * Only the bucket owner and AWS Services can access buckets with public policies.
        """
        __self__.block_public_acls = block_public_acls
        __self__.block_public_policy = block_public_policy
        __self__.ignore_public_acls = ignore_public_acls
        __self__.restrict_public_buckets = restrict_public_buckets

@pulumi.input_type
class AccessPointVpcConfigurationArgs:
    vpc_id: pulumi.Input[str] = pulumi.input_property("vpcId")
    """
    This access point will only allow connections from the specified VPC ID.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, vpc_id: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] vpc_id: This access point will only allow connections from the specified VPC ID.
        """
        __self__.vpc_id = vpc_id

@pulumi.input_type
class AnalyticsConfigurationFilterArgs:
    prefix: Optional[pulumi.Input[str]] = pulumi.input_property("prefix")
    """
    Object prefix for filtering.
    """
    tags: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("tags")
    """
    Set of object tags for filtering.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, prefix: Optional[pulumi.Input[str]] = None, tags: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] prefix: Object prefix for filtering.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] tags: Set of object tags for filtering.
        """
        __self__.prefix = prefix
        __self__.tags = tags

@pulumi.input_type
class AnalyticsConfigurationStorageClassAnalysisArgs:
    data_export: pulumi.Input['AnalyticsConfigurationStorageClassAnalysisDataExportArgs'] = pulumi.input_property("dataExport")
    """
    Data export configuration (documented below).
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, data_export: pulumi.Input['AnalyticsConfigurationStorageClassAnalysisDataExportArgs']) -> None:
        """
        :param pulumi.Input['AnalyticsConfigurationStorageClassAnalysisDataExportArgs'] data_export: Data export configuration (documented below).
        """
        __self__.data_export = data_export

@pulumi.input_type
class AnalyticsConfigurationStorageClassAnalysisDataExportArgs:
    destination: pulumi.Input['AnalyticsConfigurationStorageClassAnalysisDataExportDestinationArgs'] = pulumi.input_property("destination")
    """
    Specifies the destination for the exported analytics data (documented below).
    """
    output_schema_version: Optional[pulumi.Input[str]] = pulumi.input_property("outputSchemaVersion")
    """
    The schema version of exported analytics data. Allowed values: `V_1`. Default value: `V_1`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, destination: pulumi.Input['AnalyticsConfigurationStorageClassAnalysisDataExportDestinationArgs'], output_schema_version: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input['AnalyticsConfigurationStorageClassAnalysisDataExportDestinationArgs'] destination: Specifies the destination for the exported analytics data (documented below).
        :param pulumi.Input[str] output_schema_version: The schema version of exported analytics data. Allowed values: `V_1`. Default value: `V_1`.
        """
        __self__.destination = destination
        __self__.output_schema_version = output_schema_version

@pulumi.input_type
class AnalyticsConfigurationStorageClassAnalysisDataExportDestinationArgs:
    s3_bucket_destination: pulumi.Input['AnalyticsConfigurationStorageClassAnalysisDataExportDestinationS3BucketDestinationArgs'] = pulumi.input_property("s3BucketDestination")
    """
    Analytics data export currently only supports an S3 bucket destination (documented below).
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, s3_bucket_destination: pulumi.Input['AnalyticsConfigurationStorageClassAnalysisDataExportDestinationS3BucketDestinationArgs']) -> None:
        """
        :param pulumi.Input['AnalyticsConfigurationStorageClassAnalysisDataExportDestinationS3BucketDestinationArgs'] s3_bucket_destination: Analytics data export currently only supports an S3 bucket destination (documented below).
        """
        __self__.s3_bucket_destination = s3_bucket_destination

@pulumi.input_type
class AnalyticsConfigurationStorageClassAnalysisDataExportDestinationS3BucketDestinationArgs:
    bucket_arn: pulumi.Input[str] = pulumi.input_property("bucketArn")
    """
    The ARN of the destination bucket.
    """
    bucket_account_id: Optional[pulumi.Input[str]] = pulumi.input_property("bucketAccountId")
    """
    The account ID that owns the destination bucket.
    """
    format: Optional[pulumi.Input[str]] = pulumi.input_property("format")
    """
    The output format of exported analytics data. Allowed values: `CSV`. Default value: `CSV`.
    """
    prefix: Optional[pulumi.Input[str]] = pulumi.input_property("prefix")
    """
    Object prefix for filtering.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, bucket_arn: pulumi.Input[str], bucket_account_id: Optional[pulumi.Input[str]] = None, format: Optional[pulumi.Input[str]] = None, prefix: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] bucket_arn: The ARN of the destination bucket.
        :param pulumi.Input[str] bucket_account_id: The account ID that owns the destination bucket.
        :param pulumi.Input[str] format: The output format of exported analytics data. Allowed values: `CSV`. Default value: `CSV`.
        :param pulumi.Input[str] prefix: Object prefix for filtering.
        """
        __self__.bucket_arn = bucket_arn
        __self__.bucket_account_id = bucket_account_id
        __self__.format = format
        __self__.prefix = prefix

@pulumi.input_type
class BucketCorsRuleArgs:
    allowed_methods: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("allowedMethods")
    """
    Specifies which methods are allowed. Can be `GET`, `PUT`, `POST`, `DELETE` or `HEAD`.
    """
    allowed_origins: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("allowedOrigins")
    """
    Specifies which origins are allowed.
    """
    allowed_headers: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("allowedHeaders")
    """
    Specifies which headers are allowed.
    """
    expose_headers: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("exposeHeaders")
    """
    Specifies expose header in the response.
    """
    max_age_seconds: Optional[pulumi.Input[float]] = pulumi.input_property("maxAgeSeconds")
    """
    Specifies time in seconds that browser can cache the response for a preflight request.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, allowed_methods: pulumi.Input[List[pulumi.Input[str]]], allowed_origins: pulumi.Input[List[pulumi.Input[str]]], allowed_headers: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, expose_headers: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, max_age_seconds: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] allowed_methods: Specifies which methods are allowed. Can be `GET`, `PUT`, `POST`, `DELETE` or `HEAD`.
        :param pulumi.Input[List[pulumi.Input[str]]] allowed_origins: Specifies which origins are allowed.
        :param pulumi.Input[List[pulumi.Input[str]]] allowed_headers: Specifies which headers are allowed.
        :param pulumi.Input[List[pulumi.Input[str]]] expose_headers: Specifies expose header in the response.
        :param pulumi.Input[float] max_age_seconds: Specifies time in seconds that browser can cache the response for a preflight request.
        """
        __self__.allowed_methods = allowed_methods
        __self__.allowed_origins = allowed_origins
        __self__.allowed_headers = allowed_headers
        __self__.expose_headers = expose_headers
        __self__.max_age_seconds = max_age_seconds

@pulumi.input_type
class BucketGrantArgs:
    permissions: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("permissions")
    """
    List of permissions to apply for grantee. Valid values are `READ`, `WRITE`, `READ_ACP`, `WRITE_ACP`, `FULL_CONTROL`.
    """
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    - Type of grantee to apply for. Valid values are `CanonicalUser` and `Group`. `AmazonCustomerByEmail` is not supported.
    """
    id: Optional[pulumi.Input[str]] = pulumi.input_property("id")
    """
    Canonical user id to grant for. Used only when `type` is `CanonicalUser`.
    """
    uri: Optional[pulumi.Input[str]] = pulumi.input_property("uri")
    """
    Uri address to grant for. Used only when `type` is `Group`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, permissions: pulumi.Input[List[pulumi.Input[str]]], type: pulumi.Input[str], id: Optional[pulumi.Input[str]] = None, uri: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] permissions: List of permissions to apply for grantee. Valid values are `READ`, `WRITE`, `READ_ACP`, `WRITE_ACP`, `FULL_CONTROL`.
        :param pulumi.Input[str] type: - Type of grantee to apply for. Valid values are `CanonicalUser` and `Group`. `AmazonCustomerByEmail` is not supported.
        :param pulumi.Input[str] id: Canonical user id to grant for. Used only when `type` is `CanonicalUser`.
        :param pulumi.Input[str] uri: Uri address to grant for. Used only when `type` is `Group`.
        """
        __self__.permissions = permissions
        __self__.type = type
        __self__.id = id
        __self__.uri = uri

@pulumi.input_type
class BucketLifecycleRuleArgs:
    enabled: pulumi.Input[bool] = pulumi.input_property("enabled")
    """
    Specifies lifecycle rule status.
    """
    abort_incomplete_multipart_upload_days: Optional[pulumi.Input[float]] = pulumi.input_property("abortIncompleteMultipartUploadDays")
    """
    Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
    """
    expiration: Optional[pulumi.Input['BucketLifecycleRuleExpirationArgs']] = pulumi.input_property("expiration")
    """
    Specifies a period in the object's expire (documented below).
    """
    id: Optional[pulumi.Input[str]] = pulumi.input_property("id")
    """
    Unique identifier for the rule.
    """
    noncurrent_version_expiration: Optional[pulumi.Input['BucketLifecycleRuleNoncurrentVersionExpirationArgs']] = pulumi.input_property("noncurrentVersionExpiration")
    """
    Specifies when noncurrent object versions expire (documented below).
    """
    noncurrent_version_transitions: Optional[pulumi.Input[List[pulumi.Input['BucketLifecycleRuleNoncurrentVersionTransitionArgs']]]] = pulumi.input_property("noncurrentVersionTransitions")
    """
    Specifies when noncurrent object versions transitions (documented below).
    """
    prefix: Optional[pulumi.Input[str]] = pulumi.input_property("prefix")
    """
    Object key prefix identifying one or more objects to which the rule applies.
    """
    tags: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("tags")
    """
    Specifies object tags key and value.
    """
    transitions: Optional[pulumi.Input[List[pulumi.Input['BucketLifecycleRuleTransitionArgs']]]] = pulumi.input_property("transitions")
    """
    Specifies a period in the object's transitions (documented below).
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled: pulumi.Input[bool], abort_incomplete_multipart_upload_days: Optional[pulumi.Input[float]] = None, expiration: Optional[pulumi.Input['BucketLifecycleRuleExpirationArgs']] = None, id: Optional[pulumi.Input[str]] = None, noncurrent_version_expiration: Optional[pulumi.Input['BucketLifecycleRuleNoncurrentVersionExpirationArgs']] = None, noncurrent_version_transitions: Optional[pulumi.Input[List[pulumi.Input['BucketLifecycleRuleNoncurrentVersionTransitionArgs']]]] = None, prefix: Optional[pulumi.Input[str]] = None, tags: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, transitions: Optional[pulumi.Input[List[pulumi.Input['BucketLifecycleRuleTransitionArgs']]]] = None) -> None:
        """
        :param pulumi.Input[bool] enabled: Specifies lifecycle rule status.
        :param pulumi.Input[float] abort_incomplete_multipart_upload_days: Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
        :param pulumi.Input['BucketLifecycleRuleExpirationArgs'] expiration: Specifies a period in the object's expire (documented below).
        :param pulumi.Input[str] id: Unique identifier for the rule.
        :param pulumi.Input['BucketLifecycleRuleNoncurrentVersionExpirationArgs'] noncurrent_version_expiration: Specifies when noncurrent object versions expire (documented below).
        :param pulumi.Input[List[pulumi.Input['BucketLifecycleRuleNoncurrentVersionTransitionArgs']]] noncurrent_version_transitions: Specifies when noncurrent object versions transitions (documented below).
        :param pulumi.Input[str] prefix: Object key prefix identifying one or more objects to which the rule applies.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] tags: Specifies object tags key and value.
        :param pulumi.Input[List[pulumi.Input['BucketLifecycleRuleTransitionArgs']]] transitions: Specifies a period in the object's transitions (documented below).
        """
        __self__.enabled = enabled
        __self__.abort_incomplete_multipart_upload_days = abort_incomplete_multipart_upload_days
        __self__.expiration = expiration
        __self__.id = id
        __self__.noncurrent_version_expiration = noncurrent_version_expiration
        __self__.noncurrent_version_transitions = noncurrent_version_transitions
        __self__.prefix = prefix
        __self__.tags = tags
        __self__.transitions = transitions

@pulumi.input_type
class BucketLifecycleRuleExpirationArgs:
    date: Optional[pulumi.Input[str]] = pulumi.input_property("date")
    """
    Specifies the date after which you want the corresponding action to take effect.
    """
    days: Optional[pulumi.Input[float]] = pulumi.input_property("days")
    """
    Specifies the number of days after object creation when the specific rule action takes effect.
    """
    expired_object_delete_marker: Optional[pulumi.Input[bool]] = pulumi.input_property("expiredObjectDeleteMarker")
    """
    On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Amazon S3 to delete expired object delete markers.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, date: Optional[pulumi.Input[str]] = None, days: Optional[pulumi.Input[float]] = None, expired_object_delete_marker: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[str] date: Specifies the date after which you want the corresponding action to take effect.
        :param pulumi.Input[float] days: Specifies the number of days after object creation when the specific rule action takes effect.
        :param pulumi.Input[bool] expired_object_delete_marker: On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Amazon S3 to delete expired object delete markers.
        """
        __self__.date = date
        __self__.days = days
        __self__.expired_object_delete_marker = expired_object_delete_marker

@pulumi.input_type
class BucketLifecycleRuleNoncurrentVersionExpirationArgs:
    days: Optional[pulumi.Input[float]] = pulumi.input_property("days")
    """
    Specifies the number of days noncurrent object versions expire.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, days: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[float] days: Specifies the number of days noncurrent object versions expire.
        """
        __self__.days = days

@pulumi.input_type
class BucketLifecycleRuleNoncurrentVersionTransitionArgs:
    storage_class: pulumi.Input[str] = pulumi.input_property("storageClass")
    """
    Specifies the Amazon S3 storage class to which you want the noncurrent object versions to transition. Can be `ONEZONE_IA`, `STANDARD_IA`, `INTELLIGENT_TIERING`, `GLACIER`, or `DEEP_ARCHIVE`.
    """
    days: Optional[pulumi.Input[float]] = pulumi.input_property("days")
    """
    Specifies the number of days noncurrent object versions transition.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, storage_class: pulumi.Input[str], days: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[str] storage_class: Specifies the Amazon S3 storage class to which you want the noncurrent object versions to transition. Can be `ONEZONE_IA`, `STANDARD_IA`, `INTELLIGENT_TIERING`, `GLACIER`, or `DEEP_ARCHIVE`.
        :param pulumi.Input[float] days: Specifies the number of days noncurrent object versions transition.
        """
        __self__.storage_class = storage_class
        __self__.days = days

@pulumi.input_type
class BucketLifecycleRuleTransitionArgs:
    storage_class: pulumi.Input[str] = pulumi.input_property("storageClass")
    """
    Specifies the Amazon S3 storage class to which you want the object to transition. Can be `ONEZONE_IA`, `STANDARD_IA`, `INTELLIGENT_TIERING`, `GLACIER`, or `DEEP_ARCHIVE`.
    """
    date: Optional[pulumi.Input[str]] = pulumi.input_property("date")
    """
    Specifies the date after which you want the corresponding action to take effect.
    """
    days: Optional[pulumi.Input[float]] = pulumi.input_property("days")
    """
    Specifies the number of days after object creation when the specific rule action takes effect.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, storage_class: pulumi.Input[str], date: Optional[pulumi.Input[str]] = None, days: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[str] storage_class: Specifies the Amazon S3 storage class to which you want the object to transition. Can be `ONEZONE_IA`, `STANDARD_IA`, `INTELLIGENT_TIERING`, `GLACIER`, or `DEEP_ARCHIVE`.
        :param pulumi.Input[str] date: Specifies the date after which you want the corresponding action to take effect.
        :param pulumi.Input[float] days: Specifies the number of days after object creation when the specific rule action takes effect.
        """
        __self__.storage_class = storage_class
        __self__.date = date
        __self__.days = days

@pulumi.input_type
class BucketLoggingArgs:
    target_bucket: pulumi.Input[str] = pulumi.input_property("targetBucket")
    """
    The name of the bucket that will receive the log objects.
    """
    target_prefix: Optional[pulumi.Input[str]] = pulumi.input_property("targetPrefix")
    """
    To specify a key prefix for log objects.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, target_bucket: pulumi.Input[str], target_prefix: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] target_bucket: The name of the bucket that will receive the log objects.
        :param pulumi.Input[str] target_prefix: To specify a key prefix for log objects.
        """
        __self__.target_bucket = target_bucket
        __self__.target_prefix = target_prefix

@pulumi.input_type
class BucketMetricFilterArgs:
    prefix: Optional[pulumi.Input[str]] = pulumi.input_property("prefix")
    """
    Object prefix for filtering (singular).
    """
    tags: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("tags")
    """
    Object tags for filtering (up to 10).
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, prefix: Optional[pulumi.Input[str]] = None, tags: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] prefix: Object prefix for filtering (singular).
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] tags: Object tags for filtering (up to 10).
        """
        __self__.prefix = prefix
        __self__.tags = tags

@pulumi.input_type
class BucketNotificationLambdaFunctionArgs:
    events: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("events")
    """
    Specifies [event](http://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html#notification-how-to-event-types-and-destinations) for which to send notifications.
    """
    filter_prefix: Optional[pulumi.Input[str]] = pulumi.input_property("filterPrefix")
    """
    Specifies object key name prefix.
    """
    filter_suffix: Optional[pulumi.Input[str]] = pulumi.input_property("filterSuffix")
    """
    Specifies object key name suffix.
    """
    id: Optional[pulumi.Input[str]] = pulumi.input_property("id")
    """
    Specifies unique identifier for each of the notification configurations.
    """
    lambda_function_arn: Optional[pulumi.Input[str]] = pulumi.input_property("lambdaFunctionArn")
    """
    Specifies Amazon Lambda function ARN.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, events: pulumi.Input[List[pulumi.Input[str]]], filter_prefix: Optional[pulumi.Input[str]] = None, filter_suffix: Optional[pulumi.Input[str]] = None, id: Optional[pulumi.Input[str]] = None, lambda_function_arn: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] events: Specifies [event](http://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html#notification-how-to-event-types-and-destinations) for which to send notifications.
        :param pulumi.Input[str] filter_prefix: Specifies object key name prefix.
        :param pulumi.Input[str] filter_suffix: Specifies object key name suffix.
        :param pulumi.Input[str] id: Specifies unique identifier for each of the notification configurations.
        :param pulumi.Input[str] lambda_function_arn: Specifies Amazon Lambda function ARN.
        """
        __self__.events = events
        __self__.filter_prefix = filter_prefix
        __self__.filter_suffix = filter_suffix
        __self__.id = id
        __self__.lambda_function_arn = lambda_function_arn

@pulumi.input_type
class BucketNotificationQueueArgs:
    events: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("events")
    """
    Specifies [event](http://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html#notification-how-to-event-types-and-destinations) for which to send notifications.
    """
    queue_arn: pulumi.Input[str] = pulumi.input_property("queueArn")
    """
    Specifies Amazon SQS queue ARN.
    """
    filter_prefix: Optional[pulumi.Input[str]] = pulumi.input_property("filterPrefix")
    """
    Specifies object key name prefix.
    """
    filter_suffix: Optional[pulumi.Input[str]] = pulumi.input_property("filterSuffix")
    """
    Specifies object key name suffix.
    """
    id: Optional[pulumi.Input[str]] = pulumi.input_property("id")
    """
    Specifies unique identifier for each of the notification configurations.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, events: pulumi.Input[List[pulumi.Input[str]]], queue_arn: pulumi.Input[str], filter_prefix: Optional[pulumi.Input[str]] = None, filter_suffix: Optional[pulumi.Input[str]] = None, id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] events: Specifies [event](http://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html#notification-how-to-event-types-and-destinations) for which to send notifications.
        :param pulumi.Input[str] queue_arn: Specifies Amazon SQS queue ARN.
        :param pulumi.Input[str] filter_prefix: Specifies object key name prefix.
        :param pulumi.Input[str] filter_suffix: Specifies object key name suffix.
        :param pulumi.Input[str] id: Specifies unique identifier for each of the notification configurations.
        """
        __self__.events = events
        __self__.queue_arn = queue_arn
        __self__.filter_prefix = filter_prefix
        __self__.filter_suffix = filter_suffix
        __self__.id = id

@pulumi.input_type
class BucketNotificationTopicArgs:
    events: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("events")
    """
    Specifies [event](http://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html#notification-how-to-event-types-and-destinations) for which to send notifications.
    """
    topic_arn: pulumi.Input[str] = pulumi.input_property("topicArn")
    """
    Specifies Amazon SNS topic ARN.
    """
    filter_prefix: Optional[pulumi.Input[str]] = pulumi.input_property("filterPrefix")
    """
    Specifies object key name prefix.
    """
    filter_suffix: Optional[pulumi.Input[str]] = pulumi.input_property("filterSuffix")
    """
    Specifies object key name suffix.
    """
    id: Optional[pulumi.Input[str]] = pulumi.input_property("id")
    """
    Specifies unique identifier for each of the notification configurations.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, events: pulumi.Input[List[pulumi.Input[str]]], topic_arn: pulumi.Input[str], filter_prefix: Optional[pulumi.Input[str]] = None, filter_suffix: Optional[pulumi.Input[str]] = None, id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] events: Specifies [event](http://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html#notification-how-to-event-types-and-destinations) for which to send notifications.
        :param pulumi.Input[str] topic_arn: Specifies Amazon SNS topic ARN.
        :param pulumi.Input[str] filter_prefix: Specifies object key name prefix.
        :param pulumi.Input[str] filter_suffix: Specifies object key name suffix.
        :param pulumi.Input[str] id: Specifies unique identifier for each of the notification configurations.
        """
        __self__.events = events
        __self__.topic_arn = topic_arn
        __self__.filter_prefix = filter_prefix
        __self__.filter_suffix = filter_suffix
        __self__.id = id

@pulumi.input_type
class BucketObjectLockConfigurationArgs:
    object_lock_enabled: pulumi.Input[str] = pulumi.input_property("objectLockEnabled")
    """
    Indicates whether this bucket has an Object Lock configuration enabled. Valid value is `Enabled`.
    """
    rule: Optional[pulumi.Input['BucketObjectLockConfigurationRuleArgs']] = pulumi.input_property("rule")
    """
    The Object Lock rule in place for this bucket.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, object_lock_enabled: pulumi.Input[str], rule: Optional[pulumi.Input['BucketObjectLockConfigurationRuleArgs']] = None) -> None:
        """
        :param pulumi.Input[str] object_lock_enabled: Indicates whether this bucket has an Object Lock configuration enabled. Valid value is `Enabled`.
        :param pulumi.Input['BucketObjectLockConfigurationRuleArgs'] rule: The Object Lock rule in place for this bucket.
        """
        __self__.object_lock_enabled = object_lock_enabled
        __self__.rule = rule

@pulumi.input_type
class BucketObjectLockConfigurationRuleArgs:
    default_retention: pulumi.Input['BucketObjectLockConfigurationRuleDefaultRetentionArgs'] = pulumi.input_property("defaultRetention")
    """
    The default retention period that you want to apply to new objects placed in this bucket.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, default_retention: pulumi.Input['BucketObjectLockConfigurationRuleDefaultRetentionArgs']) -> None:
        """
        :param pulumi.Input['BucketObjectLockConfigurationRuleDefaultRetentionArgs'] default_retention: The default retention period that you want to apply to new objects placed in this bucket.
        """
        __self__.default_retention = default_retention

@pulumi.input_type
class BucketObjectLockConfigurationRuleDefaultRetentionArgs:
    mode: pulumi.Input[str] = pulumi.input_property("mode")
    """
    The default Object Lock retention mode you want to apply to new objects placed in this bucket. Valid values are `GOVERNANCE` and `COMPLIANCE`.
    """
    days: Optional[pulumi.Input[float]] = pulumi.input_property("days")
    """
    The number of days that you want to specify for the default retention period.
    """
    years: Optional[pulumi.Input[float]] = pulumi.input_property("years")
    """
    The number of years that you want to specify for the default retention period.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, mode: pulumi.Input[str], days: Optional[pulumi.Input[float]] = None, years: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[str] mode: The default Object Lock retention mode you want to apply to new objects placed in this bucket. Valid values are `GOVERNANCE` and `COMPLIANCE`.
        :param pulumi.Input[float] days: The number of days that you want to specify for the default retention period.
        :param pulumi.Input[float] years: The number of years that you want to specify for the default retention period.
        """
        __self__.mode = mode
        __self__.days = days
        __self__.years = years

@pulumi.input_type
class BucketReplicationConfigurationArgs:
    role: pulumi.Input[str] = pulumi.input_property("role")
    """
    The ARN of the IAM role for Amazon S3 to assume when replicating the objects.
    """
    rules: pulumi.Input[List[pulumi.Input['BucketReplicationConfigurationRuleArgs']]] = pulumi.input_property("rules")
    """
    Specifies the rules managing the replication (documented below).
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, role: pulumi.Input[str], rules: pulumi.Input[List[pulumi.Input['BucketReplicationConfigurationRuleArgs']]]) -> None:
        """
        :param pulumi.Input[str] role: The ARN of the IAM role for Amazon S3 to assume when replicating the objects.
        :param pulumi.Input[List[pulumi.Input['BucketReplicationConfigurationRuleArgs']]] rules: Specifies the rules managing the replication (documented below).
        """
        __self__.role = role
        __self__.rules = rules

@pulumi.input_type
class BucketReplicationConfigurationRuleArgs:
    destination: pulumi.Input['BucketReplicationConfigurationRuleDestinationArgs'] = pulumi.input_property("destination")
    """
    Specifies the destination for the rule (documented below).
    """
    status: pulumi.Input[str] = pulumi.input_property("status")
    """
    The status of the rule. Either `Enabled` or `Disabled`. The rule is ignored if status is not Enabled.
    """
    filter: Optional[pulumi.Input['BucketReplicationConfigurationRuleFilterArgs']] = pulumi.input_property("filter")
    """
    Filter that identifies subset of objects to which the replication rule applies (documented below).
    """
    id: Optional[pulumi.Input[str]] = pulumi.input_property("id")
    """
    Unique identifier for the rule.
    """
    prefix: Optional[pulumi.Input[str]] = pulumi.input_property("prefix")
    """
    Object keyname prefix identifying one or more objects to which the rule applies.
    """
    priority: Optional[pulumi.Input[float]] = pulumi.input_property("priority")
    """
    is optional (with a default value of `0`) but must be unique between multiple rules
    """
    source_selection_criteria: Optional[pulumi.Input['BucketReplicationConfigurationRuleSourceSelectionCriteriaArgs']] = pulumi.input_property("sourceSelectionCriteria")
    """
    Specifies special object selection criteria (documented below).
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, destination: pulumi.Input['BucketReplicationConfigurationRuleDestinationArgs'], status: pulumi.Input[str], filter: Optional[pulumi.Input['BucketReplicationConfigurationRuleFilterArgs']] = None, id: Optional[pulumi.Input[str]] = None, prefix: Optional[pulumi.Input[str]] = None, priority: Optional[pulumi.Input[float]] = None, source_selection_criteria: Optional[pulumi.Input['BucketReplicationConfigurationRuleSourceSelectionCriteriaArgs']] = None) -> None:
        """
        :param pulumi.Input['BucketReplicationConfigurationRuleDestinationArgs'] destination: Specifies the destination for the rule (documented below).
        :param pulumi.Input[str] status: The status of the rule. Either `Enabled` or `Disabled`. The rule is ignored if status is not Enabled.
        :param pulumi.Input['BucketReplicationConfigurationRuleFilterArgs'] filter: Filter that identifies subset of objects to which the replication rule applies (documented below).
        :param pulumi.Input[str] id: Unique identifier for the rule.
        :param pulumi.Input[str] prefix: Object keyname prefix identifying one or more objects to which the rule applies.
        :param pulumi.Input[float] priority: is optional (with a default value of `0`) but must be unique between multiple rules
        :param pulumi.Input['BucketReplicationConfigurationRuleSourceSelectionCriteriaArgs'] source_selection_criteria: Specifies special object selection criteria (documented below).
        """
        __self__.destination = destination
        __self__.status = status
        __self__.filter = filter
        __self__.id = id
        __self__.prefix = prefix
        __self__.priority = priority
        __self__.source_selection_criteria = source_selection_criteria

@pulumi.input_type
class BucketReplicationConfigurationRuleDestinationArgs:
    bucket: pulumi.Input[str] = pulumi.input_property("bucket")
    """
    The ARN of the S3 bucket where you want Amazon S3 to store replicas of the object identified by the rule.
    """
    access_control_translation: Optional[pulumi.Input['BucketReplicationConfigurationRuleDestinationAccessControlTranslationArgs']] = pulumi.input_property("accessControlTranslation")
    """
    Specifies the overrides to use for object owners on replication. Must be used in conjunction with `account_id` owner override configuration.
    """
    account_id: Optional[pulumi.Input[str]] = pulumi.input_property("accountId")
    """
    The Account ID to use for overriding the object owner on replication. Must be used in conjunction with `access_control_translation` override configuration.
    """
    replica_kms_key_id: Optional[pulumi.Input[str]] = pulumi.input_property("replicaKmsKeyId")
    """
    Destination KMS encryption key ARN for SSE-KMS replication. Must be used in conjunction with
    `sse_kms_encrypted_objects` source selection criteria.
    """
    storage_class: Optional[pulumi.Input[str]] = pulumi.input_property("storageClass")
    """
    The class of storage used to store the object. Can be `STANDARD`, `REDUCED_REDUNDANCY`, `STANDARD_IA`, `ONEZONE_IA`, `INTELLIGENT_TIERING`, `GLACIER`, or `DEEP_ARCHIVE`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, bucket: pulumi.Input[str], access_control_translation: Optional[pulumi.Input['BucketReplicationConfigurationRuleDestinationAccessControlTranslationArgs']] = None, account_id: Optional[pulumi.Input[str]] = None, replica_kms_key_id: Optional[pulumi.Input[str]] = None, storage_class: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] bucket: The ARN of the S3 bucket where you want Amazon S3 to store replicas of the object identified by the rule.
        :param pulumi.Input['BucketReplicationConfigurationRuleDestinationAccessControlTranslationArgs'] access_control_translation: Specifies the overrides to use for object owners on replication. Must be used in conjunction with `account_id` owner override configuration.
        :param pulumi.Input[str] account_id: The Account ID to use for overriding the object owner on replication. Must be used in conjunction with `access_control_translation` override configuration.
        :param pulumi.Input[str] replica_kms_key_id: Destination KMS encryption key ARN for SSE-KMS replication. Must be used in conjunction with
               `sse_kms_encrypted_objects` source selection criteria.
        :param pulumi.Input[str] storage_class: The class of storage used to store the object. Can be `STANDARD`, `REDUCED_REDUNDANCY`, `STANDARD_IA`, `ONEZONE_IA`, `INTELLIGENT_TIERING`, `GLACIER`, or `DEEP_ARCHIVE`.
        """
        __self__.bucket = bucket
        __self__.access_control_translation = access_control_translation
        __self__.account_id = account_id
        __self__.replica_kms_key_id = replica_kms_key_id
        __self__.storage_class = storage_class

@pulumi.input_type
class BucketReplicationConfigurationRuleDestinationAccessControlTranslationArgs:
    owner: pulumi.Input[str] = pulumi.input_property("owner")
    """
    The override value for the owner on replicated objects. Currently only `Destination` is supported.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, owner: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] owner: The override value for the owner on replicated objects. Currently only `Destination` is supported.
        """
        __self__.owner = owner

@pulumi.input_type
class BucketReplicationConfigurationRuleFilterArgs:
    prefix: Optional[pulumi.Input[str]] = pulumi.input_property("prefix")
    """
    Object keyname prefix that identifies subset of objects to which the rule applies.
    """
    tags: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("tags")
    """
    A map of tags that identifies subset of objects to which the rule applies.
    The rule applies only to objects having all the tags in its tagset.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, prefix: Optional[pulumi.Input[str]] = None, tags: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] prefix: Object keyname prefix that identifies subset of objects to which the rule applies.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] tags: A map of tags that identifies subset of objects to which the rule applies.
               The rule applies only to objects having all the tags in its tagset.
        """
        __self__.prefix = prefix
        __self__.tags = tags

@pulumi.input_type
class BucketReplicationConfigurationRuleSourceSelectionCriteriaArgs:
    sse_kms_encrypted_objects: Optional[pulumi.Input['BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsArgs']] = pulumi.input_property("sseKmsEncryptedObjects")
    """
    Match SSE-KMS encrypted objects (documented below). If specified, `replica_kms_key_id`
    in `destination` must be specified as well.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, sse_kms_encrypted_objects: Optional[pulumi.Input['BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsArgs']] = None) -> None:
        """
        :param pulumi.Input['BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsArgs'] sse_kms_encrypted_objects: Match SSE-KMS encrypted objects (documented below). If specified, `replica_kms_key_id`
               in `destination` must be specified as well.
        """
        __self__.sse_kms_encrypted_objects = sse_kms_encrypted_objects

@pulumi.input_type
class BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsArgs:
    enabled: pulumi.Input[bool] = pulumi.input_property("enabled")
    """
    Boolean which indicates if this criteria is enabled.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled: pulumi.Input[bool]) -> None:
        """
        :param pulumi.Input[bool] enabled: Boolean which indicates if this criteria is enabled.
        """
        __self__.enabled = enabled

@pulumi.input_type
class BucketServerSideEncryptionConfigurationArgs:
    rule: pulumi.Input['BucketServerSideEncryptionConfigurationRuleArgs'] = pulumi.input_property("rule")
    """
    A single object for server-side encryption by default configuration. (documented below)
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, rule: pulumi.Input['BucketServerSideEncryptionConfigurationRuleArgs']) -> None:
        """
        :param pulumi.Input['BucketServerSideEncryptionConfigurationRuleArgs'] rule: A single object for server-side encryption by default configuration. (documented below)
        """
        __self__.rule = rule

@pulumi.input_type
class BucketServerSideEncryptionConfigurationRuleArgs:
    apply_server_side_encryption_by_default: pulumi.Input['BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs'] = pulumi.input_property("applyServerSideEncryptionByDefault")
    """
    A single object for setting server-side encryption by default. (documented below)
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, apply_server_side_encryption_by_default: pulumi.Input['BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs']) -> None:
        """
        :param pulumi.Input['BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs'] apply_server_side_encryption_by_default: A single object for setting server-side encryption by default. (documented below)
        """
        __self__.apply_server_side_encryption_by_default = apply_server_side_encryption_by_default

@pulumi.input_type
class BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs:
    sse_algorithm: pulumi.Input[str] = pulumi.input_property("sseAlgorithm")
    """
    The server-side encryption algorithm to use. Valid values are `AES256` and `aws:kms`
    """
    kms_master_key_id: Optional[pulumi.Input[str]] = pulumi.input_property("kmsMasterKeyId")
    """
    The AWS KMS master key ID used for the SSE-KMS encryption. This can only be used when you set the value of `sse_algorithm` as `aws:kms`. The default `aws/s3` AWS KMS master key is used if this element is absent while the `sse_algorithm` is `aws:kms`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, sse_algorithm: pulumi.Input[str], kms_master_key_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] sse_algorithm: The server-side encryption algorithm to use. Valid values are `AES256` and `aws:kms`
        :param pulumi.Input[str] kms_master_key_id: The AWS KMS master key ID used for the SSE-KMS encryption. This can only be used when you set the value of `sse_algorithm` as `aws:kms`. The default `aws/s3` AWS KMS master key is used if this element is absent while the `sse_algorithm` is `aws:kms`.
        """
        __self__.sse_algorithm = sse_algorithm
        __self__.kms_master_key_id = kms_master_key_id

@pulumi.input_type
class BucketVersioningArgs:
    enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("enabled")
    """
    Enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket.
    """
    mfa_delete: Optional[pulumi.Input[bool]] = pulumi.input_property("mfaDelete")
    """
    Enable MFA delete for either `Change the versioning state of your bucket` or `Permanently delete an object version`. Default is `false`. This cannot be used to toggle this setting but is available to allow managed buckets to reflect the state in AWS
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled: Optional[pulumi.Input[bool]] = None, mfa_delete: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[bool] enabled: Enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket.
        :param pulumi.Input[bool] mfa_delete: Enable MFA delete for either `Change the versioning state of your bucket` or `Permanently delete an object version`. Default is `false`. This cannot be used to toggle this setting but is available to allow managed buckets to reflect the state in AWS
        """
        __self__.enabled = enabled
        __self__.mfa_delete = mfa_delete

@pulumi.input_type
class BucketWebsiteArgs:
    error_document: Optional[pulumi.Input[str]] = pulumi.input_property("errorDocument")
    """
    An absolute path to the document to return in case of a 4XX error.
    """
    index_document: Optional[pulumi.Input[str]] = pulumi.input_property("indexDocument")
    """
    Amazon S3 returns this index document when requests are made to the root domain or any of the subfolders.
    """
    redirect_all_requests_to: Optional[pulumi.Input[str]] = pulumi.input_property("redirectAllRequestsTo")
    """
    A hostname to redirect all website requests for this bucket to. Hostname can optionally be prefixed with a protocol (`http://` or `https://`) to use when redirecting requests. The default is the protocol that is used in the original request.
    """
    routing_rules: Optional[pulumi.Input[Union[str, List[pulumi.Input[str]]]]] = pulumi.input_property("routingRules")
    """
    A json array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)
    describing redirect behavior and when redirects are applied.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, error_document: Optional[pulumi.Input[str]] = None, index_document: Optional[pulumi.Input[str]] = None, redirect_all_requests_to: Optional[pulumi.Input[str]] = None, routing_rules: Optional[pulumi.Input[Union[str, List[pulumi.Input[str]]]]] = None) -> None:
        """
        :param pulumi.Input[str] error_document: An absolute path to the document to return in case of a 4XX error.
        :param pulumi.Input[str] index_document: Amazon S3 returns this index document when requests are made to the root domain or any of the subfolders.
        :param pulumi.Input[str] redirect_all_requests_to: A hostname to redirect all website requests for this bucket to. Hostname can optionally be prefixed with a protocol (`http://` or `https://`) to use when redirecting requests. The default is the protocol that is used in the original request.
        :param pulumi.Input[Union[str, List[pulumi.Input[str]]]] routing_rules: A json array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)
               describing redirect behavior and when redirects are applied.
        """
        __self__.error_document = error_document
        __self__.index_document = index_document
        __self__.redirect_all_requests_to = redirect_all_requests_to
        __self__.routing_rules = routing_rules

@pulumi.input_type
class InventoryDestinationArgs:
    bucket: pulumi.Input['InventoryDestinationBucketArgs'] = pulumi.input_property("bucket")
    """
    The S3 bucket configuration where inventory results are published (documented below).
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, bucket: pulumi.Input['InventoryDestinationBucketArgs']) -> None:
        """
        :param pulumi.Input['InventoryDestinationBucketArgs'] bucket: The S3 bucket configuration where inventory results are published (documented below).
        """
        __self__.bucket = bucket

@pulumi.input_type
class InventoryDestinationBucketArgs:
    bucket_arn: pulumi.Input[str] = pulumi.input_property("bucketArn")
    """
    The Amazon S3 bucket ARN of the destination.
    """
    format: pulumi.Input[str] = pulumi.input_property("format")
    """
    Specifies the output format of the inventory results. Can be `CSV`, [`ORC`](https://orc.apache.org/) or [`Parquet`](https://parquet.apache.org/).
    """
    account_id: Optional[pulumi.Input[str]] = pulumi.input_property("accountId")
    """
    The ID of the account that owns the destination bucket. Recommended to be set to prevent problems if the destination bucket ownership changes.
    """
    encryption: Optional[pulumi.Input['InventoryDestinationBucketEncryptionArgs']] = pulumi.input_property("encryption")
    """
    Contains the type of server-side encryption to use to encrypt the inventory (documented below).
    """
    prefix: Optional[pulumi.Input[str]] = pulumi.input_property("prefix")
    """
    The prefix that is prepended to all inventory results.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, bucket_arn: pulumi.Input[str], format: pulumi.Input[str], account_id: Optional[pulumi.Input[str]] = None, encryption: Optional[pulumi.Input['InventoryDestinationBucketEncryptionArgs']] = None, prefix: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] bucket_arn: The Amazon S3 bucket ARN of the destination.
        :param pulumi.Input[str] format: Specifies the output format of the inventory results. Can be `CSV`, [`ORC`](https://orc.apache.org/) or [`Parquet`](https://parquet.apache.org/).
        :param pulumi.Input[str] account_id: The ID of the account that owns the destination bucket. Recommended to be set to prevent problems if the destination bucket ownership changes.
        :param pulumi.Input['InventoryDestinationBucketEncryptionArgs'] encryption: Contains the type of server-side encryption to use to encrypt the inventory (documented below).
        :param pulumi.Input[str] prefix: The prefix that is prepended to all inventory results.
        """
        __self__.bucket_arn = bucket_arn
        __self__.format = format
        __self__.account_id = account_id
        __self__.encryption = encryption
        __self__.prefix = prefix

@pulumi.input_type
class InventoryDestinationBucketEncryptionArgs:
    sse_kms: Optional[pulumi.Input['InventoryDestinationBucketEncryptionSseKmsArgs']] = pulumi.input_property("sseKms")
    """
    Specifies to use server-side encryption with AWS KMS-managed keys to encrypt the inventory file (documented below).
    """
    sse_s3: Optional[pulumi.Input['InventoryDestinationBucketEncryptionSseS3Args']] = pulumi.input_property("sseS3")
    """
    Specifies to use server-side encryption with Amazon S3-managed keys (SSE-S3) to encrypt the inventory file.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, sse_kms: Optional[pulumi.Input['InventoryDestinationBucketEncryptionSseKmsArgs']] = None, sse_s3: Optional[pulumi.Input['InventoryDestinationBucketEncryptionSseS3Args']] = None) -> None:
        """
        :param pulumi.Input['InventoryDestinationBucketEncryptionSseKmsArgs'] sse_kms: Specifies to use server-side encryption with AWS KMS-managed keys to encrypt the inventory file (documented below).
        :param pulumi.Input['InventoryDestinationBucketEncryptionSseS3Args'] sse_s3: Specifies to use server-side encryption with Amazon S3-managed keys (SSE-S3) to encrypt the inventory file.
        """
        __self__.sse_kms = sse_kms
        __self__.sse_s3 = sse_s3

@pulumi.input_type
class InventoryDestinationBucketEncryptionSseKmsArgs:
    key_id: pulumi.Input[str] = pulumi.input_property("keyId")
    """
    The ARN of the KMS customer master key (CMK) used to encrypt the inventory file.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, key_id: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] key_id: The ARN of the KMS customer master key (CMK) used to encrypt the inventory file.
        """
        __self__.key_id = key_id

@pulumi.input_type
class InventoryDestinationBucketEncryptionSseS3Args:
    # pylint: disable=no-self-argument
    def __init__(__self__) -> None:
        pass


@pulumi.input_type
class InventoryFilterArgs:
    prefix: Optional[pulumi.Input[str]] = pulumi.input_property("prefix")
    """
    The prefix that an object must have to be included in the inventory results.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, prefix: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] prefix: The prefix that an object must have to be included in the inventory results.
        """
        __self__.prefix = prefix

@pulumi.input_type
class InventoryScheduleArgs:
    frequency: pulumi.Input[str] = pulumi.input_property("frequency")
    """
    Specifies how frequently inventory results are produced. Valid values: `Daily`, `Weekly`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, frequency: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] frequency: Specifies how frequently inventory results are produced. Valid values: `Daily`, `Weekly`.
        """
        __self__.frequency = frequency

