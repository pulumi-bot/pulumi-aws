# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'ConfigurationAggregatorAccountAggregationSource',
    'ConfigurationAggregatorOrganizationAggregationSource',
    'DeliveryChannelSnapshotDeliveryProperties',
    'RecorderRecordingGroup',
    'RuleScope',
    'RuleSource',
    'RuleSourceSourceDetail',
]

@pulumi.output_type
class ConfigurationAggregatorAccountAggregationSource(dict):
    account_ids: List[str] = pulumi.output_property("accountIds")
    """
    List of 12-digit account IDs of the account(s) being aggregated.
    """
    all_regions: Optional[bool] = pulumi.output_property("allRegions")
    """
    If true, aggregate existing AWS Config regions and future regions.
    """
    regions: Optional[List[str]] = pulumi.output_property("regions")
    """
    List of source regions being aggregated.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ConfigurationAggregatorOrganizationAggregationSource(dict):
    all_regions: Optional[bool] = pulumi.output_property("allRegions")
    """
    If true, aggregate existing AWS Config regions and future regions.
    """
    regions: Optional[List[str]] = pulumi.output_property("regions")
    """
    List of source regions being aggregated.
    """
    role_arn: str = pulumi.output_property("roleArn")
    """
    ARN of the IAM role used to retrieve AWS Organization details associated with the aggregator account.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DeliveryChannelSnapshotDeliveryProperties(dict):
    delivery_frequency: Optional[str] = pulumi.output_property("deliveryFrequency")
    """
    - The frequency with which AWS Config recurringly delivers configuration snapshots.
    e.g. `One_Hour` or `Three_Hours`.
    Valid values are listed [here](https://docs.aws.amazon.com/config/latest/APIReference/API_ConfigSnapshotDeliveryProperties.html#API_ConfigSnapshotDeliveryProperties_Contents).
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class RecorderRecordingGroup(dict):
    all_supported: Optional[bool] = pulumi.output_property("allSupported")
    """
    Specifies whether AWS Config records configuration changes
    for every supported type of regional resource (which includes any new type that will become supported in the future).
    Conflicts with `resource_types`. Defaults to `true`.
    """
    include_global_resource_types: Optional[bool] = pulumi.output_property("includeGlobalResourceTypes")
    """
    Specifies whether AWS Config includes all supported types of *global resources*
    with the resources that it records. Requires `all_supported = true`. Conflicts with `resource_types`.
    """
    resource_types: Optional[List[str]] = pulumi.output_property("resourceTypes")
    """
    A list that specifies the types of AWS resources for which
    AWS Config records configuration changes (for example, `AWS::EC2::Instance` or `AWS::CloudTrail::Trail`).
    See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class RuleScope(dict):
    compliance_resource_id: Optional[str] = pulumi.output_property("complianceResourceId")
    """
    The IDs of the only AWS resource that you want to trigger an evaluation for the rule.
    If you specify a resource ID, you must specify one resource type for `compliance_resource_types`.
    """
    compliance_resource_types: Optional[List[str]] = pulumi.output_property("complianceResourceTypes")
    """
    A list of resource types of only those AWS resources that you want to trigger an
    evaluation for the rule. e.g. `AWS::EC2::Instance`. You can only specify one type if you also specify
    a resource ID for `compliance_resource_id`. See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types.
    """
    tag_key: Optional[str] = pulumi.output_property("tagKey")
    """
    The tag key that is applied to only those AWS resources that you want you
    want to trigger an evaluation for the rule.
    """
    tag_value: Optional[str] = pulumi.output_property("tagValue")
    """
    The tag value applied to only those AWS resources that you want to trigger an evaluation for the rule.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class RuleSource(dict):
    owner: str = pulumi.output_property("owner")
    """
    Indicates whether AWS or the customer owns and manages the AWS Config rule. Valid values are `AWS` or `CUSTOM_LAMBDA`. For more information about managed rules, see the [AWS Config Managed Rules documentation](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html). For more information about custom rules, see the [AWS Config Custom Rules documentation](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_develop-rules.html). Custom Lambda Functions require permissions to allow the AWS Config service to invoke them, e.g. via the `lambda.Permission` resource.
    """
    source_details: Optional[List['outputs.RuleSourceSourceDetail']] = pulumi.output_property("sourceDetails")
    """
    Provides the source and type of the event that causes AWS Config to evaluate your AWS resources. Only valid if `owner` is `CUSTOM_LAMBDA`.
    """
    source_identifier: str = pulumi.output_property("sourceIdentifier")
    """
    For AWS Config managed rules, a predefined identifier, e.g `IAM_PASSWORD_POLICY`. For custom Lambda rules, the identifier is the ARN of the Lambda Function, such as `arn:aws:lambda:us-east-1:123456789012:function:custom_rule_name` or the `arn` attribute of the `lambda.Function` resource.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class RuleSourceSourceDetail(dict):
    event_source: Optional[str] = pulumi.output_property("eventSource")
    """
    The source of the event, such as an AWS service, that triggers AWS Config
    to evaluate your AWS resources. This defaults to `aws.config` and is the only valid value.
    """
    maximum_execution_frequency: Optional[str] = pulumi.output_property("maximumExecutionFrequency")
    """
    The frequency that you want AWS Config to run evaluations for a rule that
    is triggered periodically. If specified, requires `message_type` to be `ScheduledNotification`.
    """
    message_type: Optional[str] = pulumi.output_property("messageType")
    """
    The type of notification that triggers AWS Config to run an evaluation for a rule. You can specify the following notification types:
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


