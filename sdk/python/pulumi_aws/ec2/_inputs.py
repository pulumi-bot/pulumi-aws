# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'AmiCopyEbsBlockDeviceArgs',
    'AmiCopyEphemeralBlockDeviceArgs',
    'AmiEbsBlockDeviceArgs',
    'AmiEphemeralBlockDeviceArgs',
    'AmiFromInstanceEbsBlockDeviceArgs',
    'AmiFromInstanceEphemeralBlockDeviceArgs',
    'DefaultNetworkAclEgressArgs',
    'DefaultNetworkAclIngressArgs',
    'DefaultRouteTableRouteArgs',
    'DefaultSecurityGroupEgressArgs',
    'DefaultSecurityGroupIngressArgs',
    'FleetLaunchTemplateConfigArgs',
    'FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs',
    'FleetLaunchTemplateConfigOverrideArgs',
    'FleetOnDemandOptionsArgs',
    'FleetSpotOptionsArgs',
    'FleetTargetCapacitySpecificationArgs',
    'InstanceCreditSpecificationArgs',
    'InstanceEbsBlockDeviceArgs',
    'InstanceEphemeralBlockDeviceArgs',
    'InstanceMetadataOptionsArgs',
    'InstanceNetworkInterfaceArgs',
    'InstanceRootBlockDeviceArgs',
    'LaunchConfigurationEbsBlockDeviceArgs',
    'LaunchConfigurationEphemeralBlockDeviceArgs',
    'LaunchConfigurationRootBlockDeviceArgs',
    'LaunchTemplateBlockDeviceMappingArgs',
    'LaunchTemplateBlockDeviceMappingEbsArgs',
    'LaunchTemplateCapacityReservationSpecificationArgs',
    'LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs',
    'LaunchTemplateCpuOptionsArgs',
    'LaunchTemplateCreditSpecificationArgs',
    'LaunchTemplateElasticGpuSpecificationArgs',
    'LaunchTemplateElasticInferenceAcceleratorArgs',
    'LaunchTemplateHibernationOptionsArgs',
    'LaunchTemplateIamInstanceProfileArgs',
    'LaunchTemplateInstanceMarketOptionsArgs',
    'LaunchTemplateInstanceMarketOptionsSpotOptionsArgs',
    'LaunchTemplateLicenseSpecificationArgs',
    'LaunchTemplateMetadataOptionsArgs',
    'LaunchTemplateMonitoringArgs',
    'LaunchTemplateNetworkInterfaceArgs',
    'LaunchTemplatePlacementArgs',
    'LaunchTemplateTagSpecificationArgs',
    'NetworkAclEgressArgs',
    'NetworkAclIngressArgs',
    'NetworkInterfaceAttachmentArgs',
    'PeeringConnectionOptionsAccepterArgs',
    'PeeringConnectionOptionsRequesterArgs',
    'RouteTableRouteArgs',
    'SecurityGroupEgressArgs',
    'SecurityGroupIngressArgs',
    'SpotFleetRequestLaunchSpecificationArgs',
    'SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs',
    'SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs',
    'SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs',
    'SpotFleetRequestLaunchTemplateConfigArgs',
    'SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationArgs',
    'SpotFleetRequestLaunchTemplateConfigOverrideArgs',
    'SpotInstanceRequestCreditSpecificationArgs',
    'SpotInstanceRequestEbsBlockDeviceArgs',
    'SpotInstanceRequestEphemeralBlockDeviceArgs',
    'SpotInstanceRequestMetadataOptionsArgs',
    'SpotInstanceRequestNetworkInterfaceArgs',
    'SpotInstanceRequestRootBlockDeviceArgs',
    'TrafficMirrorFilterRuleDestinationPortRangeArgs',
    'TrafficMirrorFilterRuleSourcePortRangeArgs',
    'VpcEndpointDnsEntryArgs',
    'VpcPeeringConnectionAccepterArgs',
    'VpcPeeringConnectionAccepterAccepterArgs',
    'VpcPeeringConnectionAccepterRequesterArgs',
    'VpcPeeringConnectionRequesterArgs',
    'VpnConnectionRouteArgs',
    'VpnConnectionVgwTelemetryArgs',
    'GetCoipPoolFilterArgs',
    'GetCoipPoolsFilterArgs',
    'GetCustomerGatewayFilterArgs',
    'GetInstanceFilterArgs',
    'GetInstanceTypeOfferingFilterArgs',
    'GetInstanceTypeOfferingsFilterArgs',
    'GetInstancesFilterArgs',
    'GetInternetGatewayFilterArgs',
    'GetLaunchTemplateFilterArgs',
    'GetLocalGatewayFilterArgs',
    'GetLocalGatewayRouteTableFilterArgs',
    'GetLocalGatewayRouteTablesFilterArgs',
    'GetLocalGatewayVirtualInterfaceFilterArgs',
    'GetLocalGatewayVirtualInterfaceGroupFilterArgs',
    'GetLocalGatewayVirtualInterfaceGroupsFilterArgs',
    'GetLocalGatewaysFilterArgs',
    'GetNatGatewayFilterArgs',
    'GetNetworkAclsFilterArgs',
    'GetNetworkInterfaceFilterArgs',
    'GetNetworkInterfacesFilterArgs',
    'GetRouteTableFilterArgs',
    'GetRouteTablesFilterArgs',
    'GetSecurityGroupFilterArgs',
    'GetSecurityGroupsFilterArgs',
    'GetSubnetFilterArgs',
    'GetSubnetIdsFilterArgs',
    'GetVpcDhcpOptionsFilterArgs',
    'GetVpcEndpointFilterArgs',
    'GetVpcEndpointServiceFilterArgs',
    'GetVpcFilterArgs',
    'GetVpcPeeringConnectionFilterArgs',
    'GetVpcsFilterArgs',
    'GetVpnGatewayFilterArgs',
]

@pulumi.input_type
class AmiCopyEbsBlockDeviceArgs:
    delete_on_termination: Optional[pulumi.Input[bool]] = pulumi.input_property("deleteOnTermination")
    """
    Boolean controlling whether the EBS volumes created to
    support each created instance will be deleted once that instance is terminated.
    """
    device_name: Optional[pulumi.Input[str]] = pulumi.input_property("deviceName")
    """
    The path at which the device is exposed to created instances.
    """
    encrypted: Optional[pulumi.Input[bool]] = pulumi.input_property("encrypted")
    """
    Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshot_id`.
    """
    iops: Optional[pulumi.Input[float]] = pulumi.input_property("iops")
    """
    Number of I/O operations per second the
    created volumes will support.
    """
    snapshot_id: Optional[pulumi.Input[str]] = pulumi.input_property("snapshotId")
    """
    The id of an EBS snapshot that will be used to initialize the created
    EBS volumes. If set, the `volume_size` attribute must be at least as large as the referenced
    snapshot.
    """
    volume_size: Optional[pulumi.Input[float]] = pulumi.input_property("volumeSize")
    """
    The size of created volumes in GiB.
    If `snapshot_id` is set and `volume_size` is omitted then the volume will have the same size
    as the selected snapshot.
    """
    volume_type: Optional[pulumi.Input[str]] = pulumi.input_property("volumeType")
    """
    The type of EBS volume to create. Can be one of "standard" (the
    default), "io1" or "gp2".
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, delete_on_termination: Optional[pulumi.Input[bool]] = None, device_name: Optional[pulumi.Input[str]] = None, encrypted: Optional[pulumi.Input[bool]] = None, iops: Optional[pulumi.Input[float]] = None, snapshot_id: Optional[pulumi.Input[str]] = None, volume_size: Optional[pulumi.Input[float]] = None, volume_type: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[bool] delete_on_termination: Boolean controlling whether the EBS volumes created to
               support each created instance will be deleted once that instance is terminated.
        :param pulumi.Input[str] device_name: The path at which the device is exposed to created instances.
        :param pulumi.Input[bool] encrypted: Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshot_id`.
        :param pulumi.Input[float] iops: Number of I/O operations per second the
               created volumes will support.
        :param pulumi.Input[str] snapshot_id: The id of an EBS snapshot that will be used to initialize the created
               EBS volumes. If set, the `volume_size` attribute must be at least as large as the referenced
               snapshot.
        :param pulumi.Input[float] volume_size: The size of created volumes in GiB.
               If `snapshot_id` is set and `volume_size` is omitted then the volume will have the same size
               as the selected snapshot.
        :param pulumi.Input[str] volume_type: The type of EBS volume to create. Can be one of "standard" (the
               default), "io1" or "gp2".
        """
        __self__.delete_on_termination = delete_on_termination
        __self__.device_name = device_name
        __self__.encrypted = encrypted
        __self__.iops = iops
        __self__.snapshot_id = snapshot_id
        __self__.volume_size = volume_size
        __self__.volume_type = volume_type

@pulumi.input_type
class AmiCopyEphemeralBlockDeviceArgs:
    device_name: Optional[pulumi.Input[str]] = pulumi.input_property("deviceName")
    """
    The path at which the device is exposed to created instances.
    """
    virtual_name: Optional[pulumi.Input[str]] = pulumi.input_property("virtualName")
    """
    A name for the ephemeral device, of the form "ephemeralN" where
    *N* is a volume number starting from zero.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, device_name: Optional[pulumi.Input[str]] = None, virtual_name: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] device_name: The path at which the device is exposed to created instances.
        :param pulumi.Input[str] virtual_name: A name for the ephemeral device, of the form "ephemeralN" where
               *N* is a volume number starting from zero.
        """
        __self__.device_name = device_name
        __self__.virtual_name = virtual_name

@pulumi.input_type
class AmiEbsBlockDeviceArgs:
    device_name: pulumi.Input[str] = pulumi.input_property("deviceName")
    """
    The path at which the device is exposed to created instances.
    """
    delete_on_termination: Optional[pulumi.Input[bool]] = pulumi.input_property("deleteOnTermination")
    """
    Boolean controlling whether the EBS volumes created to
    support each created instance will be deleted once that instance is terminated.
    """
    encrypted: Optional[pulumi.Input[bool]] = pulumi.input_property("encrypted")
    """
    Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshot_id`.
    """
    iops: Optional[pulumi.Input[float]] = pulumi.input_property("iops")
    """
    Number of I/O operations per second the
    created volumes will support.
    """
    snapshot_id: Optional[pulumi.Input[str]] = pulumi.input_property("snapshotId")
    """
    The id of an EBS snapshot that will be used to initialize the created
    EBS volumes. If set, the `volume_size` attribute must be at least as large as the referenced
    snapshot.
    """
    volume_size: Optional[pulumi.Input[float]] = pulumi.input_property("volumeSize")
    """
    The size of created volumes in GiB.
    If `snapshot_id` is set and `volume_size` is omitted then the volume will have the same size
    as the selected snapshot.
    """
    volume_type: Optional[pulumi.Input[str]] = pulumi.input_property("volumeType")
    """
    The type of EBS volume to create. Can be one of "standard" (the
    default), "io1" or "gp2".
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, device_name: pulumi.Input[str], delete_on_termination: Optional[pulumi.Input[bool]] = None, encrypted: Optional[pulumi.Input[bool]] = None, iops: Optional[pulumi.Input[float]] = None, snapshot_id: Optional[pulumi.Input[str]] = None, volume_size: Optional[pulumi.Input[float]] = None, volume_type: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] device_name: The path at which the device is exposed to created instances.
        :param pulumi.Input[bool] delete_on_termination: Boolean controlling whether the EBS volumes created to
               support each created instance will be deleted once that instance is terminated.
        :param pulumi.Input[bool] encrypted: Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshot_id`.
        :param pulumi.Input[float] iops: Number of I/O operations per second the
               created volumes will support.
        :param pulumi.Input[str] snapshot_id: The id of an EBS snapshot that will be used to initialize the created
               EBS volumes. If set, the `volume_size` attribute must be at least as large as the referenced
               snapshot.
        :param pulumi.Input[float] volume_size: The size of created volumes in GiB.
               If `snapshot_id` is set and `volume_size` is omitted then the volume will have the same size
               as the selected snapshot.
        :param pulumi.Input[str] volume_type: The type of EBS volume to create. Can be one of "standard" (the
               default), "io1" or "gp2".
        """
        __self__.device_name = device_name
        __self__.delete_on_termination = delete_on_termination
        __self__.encrypted = encrypted
        __self__.iops = iops
        __self__.snapshot_id = snapshot_id
        __self__.volume_size = volume_size
        __self__.volume_type = volume_type

@pulumi.input_type
class AmiEphemeralBlockDeviceArgs:
    device_name: pulumi.Input[str] = pulumi.input_property("deviceName")
    """
    The path at which the device is exposed to created instances.
    """
    virtual_name: pulumi.Input[str] = pulumi.input_property("virtualName")
    """
    A name for the ephemeral device, of the form "ephemeralN" where
    *N* is a volume number starting from zero.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, device_name: pulumi.Input[str], virtual_name: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] device_name: The path at which the device is exposed to created instances.
        :param pulumi.Input[str] virtual_name: A name for the ephemeral device, of the form "ephemeralN" where
               *N* is a volume number starting from zero.
        """
        __self__.device_name = device_name
        __self__.virtual_name = virtual_name

@pulumi.input_type
class AmiFromInstanceEbsBlockDeviceArgs:
    delete_on_termination: Optional[pulumi.Input[bool]] = pulumi.input_property("deleteOnTermination")
    """
    Boolean controlling whether the EBS volumes created to
    support each created instance will be deleted once that instance is terminated.
    """
    device_name: Optional[pulumi.Input[str]] = pulumi.input_property("deviceName")
    """
    The path at which the device is exposed to created instances.
    """
    encrypted: Optional[pulumi.Input[bool]] = pulumi.input_property("encrypted")
    """
    Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshot_id`.
    """
    iops: Optional[pulumi.Input[float]] = pulumi.input_property("iops")
    """
    Number of I/O operations per second the
    created volumes will support.
    """
    snapshot_id: Optional[pulumi.Input[str]] = pulumi.input_property("snapshotId")
    """
    The id of an EBS snapshot that will be used to initialize the created
    EBS volumes. If set, the `volume_size` attribute must be at least as large as the referenced
    snapshot.
    """
    volume_size: Optional[pulumi.Input[float]] = pulumi.input_property("volumeSize")
    """
    The size of created volumes in GiB.
    If `snapshot_id` is set and `volume_size` is omitted then the volume will have the same size
    as the selected snapshot.
    """
    volume_type: Optional[pulumi.Input[str]] = pulumi.input_property("volumeType")
    """
    The type of EBS volume to create. Can be one of "standard" (the
    default), "io1" or "gp2".
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, delete_on_termination: Optional[pulumi.Input[bool]] = None, device_name: Optional[pulumi.Input[str]] = None, encrypted: Optional[pulumi.Input[bool]] = None, iops: Optional[pulumi.Input[float]] = None, snapshot_id: Optional[pulumi.Input[str]] = None, volume_size: Optional[pulumi.Input[float]] = None, volume_type: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[bool] delete_on_termination: Boolean controlling whether the EBS volumes created to
               support each created instance will be deleted once that instance is terminated.
        :param pulumi.Input[str] device_name: The path at which the device is exposed to created instances.
        :param pulumi.Input[bool] encrypted: Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshot_id`.
        :param pulumi.Input[float] iops: Number of I/O operations per second the
               created volumes will support.
        :param pulumi.Input[str] snapshot_id: The id of an EBS snapshot that will be used to initialize the created
               EBS volumes. If set, the `volume_size` attribute must be at least as large as the referenced
               snapshot.
        :param pulumi.Input[float] volume_size: The size of created volumes in GiB.
               If `snapshot_id` is set and `volume_size` is omitted then the volume will have the same size
               as the selected snapshot.
        :param pulumi.Input[str] volume_type: The type of EBS volume to create. Can be one of "standard" (the
               default), "io1" or "gp2".
        """
        __self__.delete_on_termination = delete_on_termination
        __self__.device_name = device_name
        __self__.encrypted = encrypted
        __self__.iops = iops
        __self__.snapshot_id = snapshot_id
        __self__.volume_size = volume_size
        __self__.volume_type = volume_type

@pulumi.input_type
class AmiFromInstanceEphemeralBlockDeviceArgs:
    device_name: Optional[pulumi.Input[str]] = pulumi.input_property("deviceName")
    """
    The path at which the device is exposed to created instances.
    """
    virtual_name: Optional[pulumi.Input[str]] = pulumi.input_property("virtualName")
    """
    A name for the ephemeral device, of the form "ephemeralN" where
    *N* is a volume number starting from zero.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, device_name: Optional[pulumi.Input[str]] = None, virtual_name: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] device_name: The path at which the device is exposed to created instances.
        :param pulumi.Input[str] virtual_name: A name for the ephemeral device, of the form "ephemeralN" where
               *N* is a volume number starting from zero.
        """
        __self__.device_name = device_name
        __self__.virtual_name = virtual_name

@pulumi.input_type
class DefaultNetworkAclEgressArgs:
    action: pulumi.Input[str] = pulumi.input_property("action")
    """
    The action to take.
    """
    from_port: pulumi.Input[float] = pulumi.input_property("fromPort")
    """
    The from port to match.
    """
    protocol: pulumi.Input[str] = pulumi.input_property("protocol")
    """
    The protocol to match. If using the -1 'all'
    protocol, you must specify a from and to port of 0.
    """
    rule_no: pulumi.Input[float] = pulumi.input_property("ruleNo")
    """
    The rule number. Used for ordering.
    """
    to_port: pulumi.Input[float] = pulumi.input_property("toPort")
    """
    The to port to match.
    """
    cidr_block: Optional[pulumi.Input[str]] = pulumi.input_property("cidrBlock")
    """
    The CIDR block to match. This must be a
    valid network mask.
    """
    icmp_code: Optional[pulumi.Input[float]] = pulumi.input_property("icmpCode")
    """
    The ICMP type code to be used. Default 0.
    """
    icmp_type: Optional[pulumi.Input[float]] = pulumi.input_property("icmpType")
    """
    The ICMP type to be used. Default 0.
    """
    ipv6_cidr_block: Optional[pulumi.Input[str]] = pulumi.input_property("ipv6CidrBlock")
    """
    The IPv6 CIDR block.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, action: pulumi.Input[str], from_port: pulumi.Input[float], protocol: pulumi.Input[str], rule_no: pulumi.Input[float], to_port: pulumi.Input[float], cidr_block: Optional[pulumi.Input[str]] = None, icmp_code: Optional[pulumi.Input[float]] = None, icmp_type: Optional[pulumi.Input[float]] = None, ipv6_cidr_block: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] action: The action to take.
        :param pulumi.Input[float] from_port: The from port to match.
        :param pulumi.Input[str] protocol: The protocol to match. If using the -1 'all'
               protocol, you must specify a from and to port of 0.
        :param pulumi.Input[float] rule_no: The rule number. Used for ordering.
        :param pulumi.Input[float] to_port: The to port to match.
        :param pulumi.Input[str] cidr_block: The CIDR block to match. This must be a
               valid network mask.
        :param pulumi.Input[float] icmp_code: The ICMP type code to be used. Default 0.
        :param pulumi.Input[float] icmp_type: The ICMP type to be used. Default 0.
        :param pulumi.Input[str] ipv6_cidr_block: The IPv6 CIDR block.
        """
        __self__.action = action
        __self__.from_port = from_port
        __self__.protocol = protocol
        __self__.rule_no = rule_no
        __self__.to_port = to_port
        __self__.cidr_block = cidr_block
        __self__.icmp_code = icmp_code
        __self__.icmp_type = icmp_type
        __self__.ipv6_cidr_block = ipv6_cidr_block

@pulumi.input_type
class DefaultNetworkAclIngressArgs:
    action: pulumi.Input[str] = pulumi.input_property("action")
    """
    The action to take.
    """
    from_port: pulumi.Input[float] = pulumi.input_property("fromPort")
    """
    The from port to match.
    """
    protocol: pulumi.Input[str] = pulumi.input_property("protocol")
    """
    The protocol to match. If using the -1 'all'
    protocol, you must specify a from and to port of 0.
    """
    rule_no: pulumi.Input[float] = pulumi.input_property("ruleNo")
    """
    The rule number. Used for ordering.
    """
    to_port: pulumi.Input[float] = pulumi.input_property("toPort")
    """
    The to port to match.
    """
    cidr_block: Optional[pulumi.Input[str]] = pulumi.input_property("cidrBlock")
    """
    The CIDR block to match. This must be a
    valid network mask.
    """
    icmp_code: Optional[pulumi.Input[float]] = pulumi.input_property("icmpCode")
    """
    The ICMP type code to be used. Default 0.
    """
    icmp_type: Optional[pulumi.Input[float]] = pulumi.input_property("icmpType")
    """
    The ICMP type to be used. Default 0.
    """
    ipv6_cidr_block: Optional[pulumi.Input[str]] = pulumi.input_property("ipv6CidrBlock")
    """
    The IPv6 CIDR block.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, action: pulumi.Input[str], from_port: pulumi.Input[float], protocol: pulumi.Input[str], rule_no: pulumi.Input[float], to_port: pulumi.Input[float], cidr_block: Optional[pulumi.Input[str]] = None, icmp_code: Optional[pulumi.Input[float]] = None, icmp_type: Optional[pulumi.Input[float]] = None, ipv6_cidr_block: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] action: The action to take.
        :param pulumi.Input[float] from_port: The from port to match.
        :param pulumi.Input[str] protocol: The protocol to match. If using the -1 'all'
               protocol, you must specify a from and to port of 0.
        :param pulumi.Input[float] rule_no: The rule number. Used for ordering.
        :param pulumi.Input[float] to_port: The to port to match.
        :param pulumi.Input[str] cidr_block: The CIDR block to match. This must be a
               valid network mask.
        :param pulumi.Input[float] icmp_code: The ICMP type code to be used. Default 0.
        :param pulumi.Input[float] icmp_type: The ICMP type to be used. Default 0.
        :param pulumi.Input[str] ipv6_cidr_block: The IPv6 CIDR block.
        """
        __self__.action = action
        __self__.from_port = from_port
        __self__.protocol = protocol
        __self__.rule_no = rule_no
        __self__.to_port = to_port
        __self__.cidr_block = cidr_block
        __self__.icmp_code = icmp_code
        __self__.icmp_type = icmp_type
        __self__.ipv6_cidr_block = ipv6_cidr_block

@pulumi.input_type
class DefaultRouteTableRouteArgs:
    cidr_block: Optional[pulumi.Input[str]] = pulumi.input_property("cidrBlock")
    """
    The CIDR block of the route.
    """
    egress_only_gateway_id: Optional[pulumi.Input[str]] = pulumi.input_property("egressOnlyGatewayId")
    """
    Identifier of a VPC Egress Only Internet Gateway.
    """
    gateway_id: Optional[pulumi.Input[str]] = pulumi.input_property("gatewayId")
    """
    Identifier of a VPC internet gateway or a virtual private gateway.
    """
    instance_id: Optional[pulumi.Input[str]] = pulumi.input_property("instanceId")
    """
    Identifier of an EC2 instance.
    """
    ipv6_cidr_block: Optional[pulumi.Input[str]] = pulumi.input_property("ipv6CidrBlock")
    """
    The Ipv6 CIDR block of the route
    """
    nat_gateway_id: Optional[pulumi.Input[str]] = pulumi.input_property("natGatewayId")
    """
    Identifier of a VPC NAT gateway.
    """
    network_interface_id: Optional[pulumi.Input[str]] = pulumi.input_property("networkInterfaceId")
    """
    Identifier of an EC2 network interface.
    """
    transit_gateway_id: Optional[pulumi.Input[str]] = pulumi.input_property("transitGatewayId")
    """
    Identifier of an EC2 Transit Gateway.
    """
    vpc_peering_connection_id: Optional[pulumi.Input[str]] = pulumi.input_property("vpcPeeringConnectionId")
    """
    Identifier of a VPC peering connection.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, cidr_block: Optional[pulumi.Input[str]] = None, egress_only_gateway_id: Optional[pulumi.Input[str]] = None, gateway_id: Optional[pulumi.Input[str]] = None, instance_id: Optional[pulumi.Input[str]] = None, ipv6_cidr_block: Optional[pulumi.Input[str]] = None, nat_gateway_id: Optional[pulumi.Input[str]] = None, network_interface_id: Optional[pulumi.Input[str]] = None, transit_gateway_id: Optional[pulumi.Input[str]] = None, vpc_peering_connection_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] cidr_block: The CIDR block of the route.
        :param pulumi.Input[str] egress_only_gateway_id: Identifier of a VPC Egress Only Internet Gateway.
        :param pulumi.Input[str] gateway_id: Identifier of a VPC internet gateway or a virtual private gateway.
        :param pulumi.Input[str] instance_id: Identifier of an EC2 instance.
        :param pulumi.Input[str] ipv6_cidr_block: The Ipv6 CIDR block of the route
        :param pulumi.Input[str] nat_gateway_id: Identifier of a VPC NAT gateway.
        :param pulumi.Input[str] network_interface_id: Identifier of an EC2 network interface.
        :param pulumi.Input[str] transit_gateway_id: Identifier of an EC2 Transit Gateway.
        :param pulumi.Input[str] vpc_peering_connection_id: Identifier of a VPC peering connection.
        """
        __self__.cidr_block = cidr_block
        __self__.egress_only_gateway_id = egress_only_gateway_id
        __self__.gateway_id = gateway_id
        __self__.instance_id = instance_id
        __self__.ipv6_cidr_block = ipv6_cidr_block
        __self__.nat_gateway_id = nat_gateway_id
        __self__.network_interface_id = network_interface_id
        __self__.transit_gateway_id = transit_gateway_id
        __self__.vpc_peering_connection_id = vpc_peering_connection_id

@pulumi.input_type
class DefaultSecurityGroupEgressArgs:
    from_port: pulumi.Input[float] = pulumi.input_property("fromPort")
    protocol: pulumi.Input[str] = pulumi.input_property("protocol")
    to_port: pulumi.Input[float] = pulumi.input_property("toPort")
    cidr_blocks: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("cidrBlocks")
    description: Optional[pulumi.Input[str]] = pulumi.input_property("description")
    """
    The description of the security group
    """
    ipv6_cidr_blocks: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("ipv6CidrBlocks")
    prefix_list_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("prefixListIds")
    security_groups: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("securityGroups")
    self: Optional[pulumi.Input[bool]] = pulumi.input_property("self")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, from_port: pulumi.Input[float], protocol: pulumi.Input[str], to_port: pulumi.Input[float], cidr_blocks: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, description: Optional[pulumi.Input[str]] = None, ipv6_cidr_blocks: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, prefix_list_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, security_groups: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, self: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[str] description: The description of the security group
        """
        __self__.from_port = from_port
        __self__.protocol = protocol
        __self__.to_port = to_port
        __self__.cidr_blocks = cidr_blocks
        __self__.description = description
        __self__.ipv6_cidr_blocks = ipv6_cidr_blocks
        __self__.prefix_list_ids = prefix_list_ids
        __self__.security_groups = security_groups
        __self__.self = self

@pulumi.input_type
class DefaultSecurityGroupIngressArgs:
    from_port: pulumi.Input[float] = pulumi.input_property("fromPort")
    protocol: pulumi.Input[str] = pulumi.input_property("protocol")
    to_port: pulumi.Input[float] = pulumi.input_property("toPort")
    cidr_blocks: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("cidrBlocks")
    description: Optional[pulumi.Input[str]] = pulumi.input_property("description")
    """
    The description of the security group
    """
    ipv6_cidr_blocks: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("ipv6CidrBlocks")
    prefix_list_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("prefixListIds")
    security_groups: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("securityGroups")
    self: Optional[pulumi.Input[bool]] = pulumi.input_property("self")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, from_port: pulumi.Input[float], protocol: pulumi.Input[str], to_port: pulumi.Input[float], cidr_blocks: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, description: Optional[pulumi.Input[str]] = None, ipv6_cidr_blocks: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, prefix_list_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, security_groups: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, self: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[str] description: The description of the security group
        """
        __self__.from_port = from_port
        __self__.protocol = protocol
        __self__.to_port = to_port
        __self__.cidr_blocks = cidr_blocks
        __self__.description = description
        __self__.ipv6_cidr_blocks = ipv6_cidr_blocks
        __self__.prefix_list_ids = prefix_list_ids
        __self__.security_groups = security_groups
        __self__.self = self

@pulumi.input_type
class FleetLaunchTemplateConfigArgs:
    launch_template_specification: pulumi.Input['FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs'] = pulumi.input_property("launchTemplateSpecification")
    """
    Nested argument containing EC2 Launch Template to use. Defined below.
    """
    overrides: Optional[pulumi.Input[List[pulumi.Input['FleetLaunchTemplateConfigOverrideArgs']]]] = pulumi.input_property("overrides")
    """
    Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, launch_template_specification: pulumi.Input['FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs'], overrides: Optional[pulumi.Input[List[pulumi.Input['FleetLaunchTemplateConfigOverrideArgs']]]] = None) -> None:
        """
        :param pulumi.Input['FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs'] launch_template_specification: Nested argument containing EC2 Launch Template to use. Defined below.
        :param pulumi.Input[List[pulumi.Input['FleetLaunchTemplateConfigOverrideArgs']]] overrides: Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
        """
        __self__.launch_template_specification = launch_template_specification
        __self__.overrides = overrides

@pulumi.input_type
class FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs:
    version: pulumi.Input[str] = pulumi.input_property("version")
    """
    Version number of the launch template.
    """
    launch_template_id: Optional[pulumi.Input[str]] = pulumi.input_property("launchTemplateId")
    """
    ID of the launch template.
    """
    launch_template_name: Optional[pulumi.Input[str]] = pulumi.input_property("launchTemplateName")
    """
    Name of the launch template.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, version: pulumi.Input[str], launch_template_id: Optional[pulumi.Input[str]] = None, launch_template_name: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] version: Version number of the launch template.
        :param pulumi.Input[str] launch_template_id: ID of the launch template.
        :param pulumi.Input[str] launch_template_name: Name of the launch template.
        """
        __self__.version = version
        __self__.launch_template_id = launch_template_id
        __self__.launch_template_name = launch_template_name

@pulumi.input_type
class FleetLaunchTemplateConfigOverrideArgs:
    availability_zone: Optional[pulumi.Input[str]] = pulumi.input_property("availabilityZone")
    """
    Availability Zone in which to launch the instances.
    """
    instance_type: Optional[pulumi.Input[str]] = pulumi.input_property("instanceType")
    """
    Instance type.
    """
    max_price: Optional[pulumi.Input[str]] = pulumi.input_property("maxPrice")
    """
    Maximum price per unit hour that you are willing to pay for a Spot Instance.
    """
    priority: Optional[pulumi.Input[float]] = pulumi.input_property("priority")
    """
    Priority for the launch template override. If `on_demand_options` `allocation_strategy` is set to `prioritized`, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
    """
    subnet_id: Optional[pulumi.Input[str]] = pulumi.input_property("subnetId")
    """
    ID of the subnet in which to launch the instances.
    """
    weighted_capacity: Optional[pulumi.Input[float]] = pulumi.input_property("weightedCapacity")
    """
    Number of units provided by the specified instance type.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, availability_zone: Optional[pulumi.Input[str]] = None, instance_type: Optional[pulumi.Input[str]] = None, max_price: Optional[pulumi.Input[str]] = None, priority: Optional[pulumi.Input[float]] = None, subnet_id: Optional[pulumi.Input[str]] = None, weighted_capacity: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[str] availability_zone: Availability Zone in which to launch the instances.
        :param pulumi.Input[str] instance_type: Instance type.
        :param pulumi.Input[str] max_price: Maximum price per unit hour that you are willing to pay for a Spot Instance.
        :param pulumi.Input[float] priority: Priority for the launch template override. If `on_demand_options` `allocation_strategy` is set to `prioritized`, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
        :param pulumi.Input[str] subnet_id: ID of the subnet in which to launch the instances.
        :param pulumi.Input[float] weighted_capacity: Number of units provided by the specified instance type.
        """
        __self__.availability_zone = availability_zone
        __self__.instance_type = instance_type
        __self__.max_price = max_price
        __self__.priority = priority
        __self__.subnet_id = subnet_id
        __self__.weighted_capacity = weighted_capacity

@pulumi.input_type
class FleetOnDemandOptionsArgs:
    allocation_strategy: Optional[pulumi.Input[str]] = pulumi.input_property("allocationStrategy")
    """
    How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, allocation_strategy: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] allocation_strategy: How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
        """
        __self__.allocation_strategy = allocation_strategy

@pulumi.input_type
class FleetSpotOptionsArgs:
    allocation_strategy: Optional[pulumi.Input[str]] = pulumi.input_property("allocationStrategy")
    """
    How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
    """
    instance_interruption_behavior: Optional[pulumi.Input[str]] = pulumi.input_property("instanceInterruptionBehavior")
    """
    Behavior when a Spot Instance is interrupted. Valid values: `hibernate`, `stop`, `terminate`. Default: `terminate`.
    """
    instance_pools_to_use_count: Optional[pulumi.Input[float]] = pulumi.input_property("instancePoolsToUseCount")
    """
    Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot `allocation_strategy` is set to `lowestPrice`. Default: `1`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, allocation_strategy: Optional[pulumi.Input[str]] = None, instance_interruption_behavior: Optional[pulumi.Input[str]] = None, instance_pools_to_use_count: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[str] allocation_strategy: How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
        :param pulumi.Input[str] instance_interruption_behavior: Behavior when a Spot Instance is interrupted. Valid values: `hibernate`, `stop`, `terminate`. Default: `terminate`.
        :param pulumi.Input[float] instance_pools_to_use_count: Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot `allocation_strategy` is set to `lowestPrice`. Default: `1`.
        """
        __self__.allocation_strategy = allocation_strategy
        __self__.instance_interruption_behavior = instance_interruption_behavior
        __self__.instance_pools_to_use_count = instance_pools_to_use_count

@pulumi.input_type
class FleetTargetCapacitySpecificationArgs:
    default_target_capacity_type: pulumi.Input[str] = pulumi.input_property("defaultTargetCapacityType")
    """
    Default target capacity type. Valid values: `on-demand`, `spot`.
    """
    total_target_capacity: pulumi.Input[float] = pulumi.input_property("totalTargetCapacity")
    """
    The number of units to request, filled using `default_target_capacity_type`.
    """
    on_demand_target_capacity: Optional[pulumi.Input[float]] = pulumi.input_property("onDemandTargetCapacity")
    """
    The number of On-Demand units to request.
    """
    spot_target_capacity: Optional[pulumi.Input[float]] = pulumi.input_property("spotTargetCapacity")
    """
    The number of Spot units to request.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, default_target_capacity_type: pulumi.Input[str], total_target_capacity: pulumi.Input[float], on_demand_target_capacity: Optional[pulumi.Input[float]] = None, spot_target_capacity: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[str] default_target_capacity_type: Default target capacity type. Valid values: `on-demand`, `spot`.
        :param pulumi.Input[float] total_target_capacity: The number of units to request, filled using `default_target_capacity_type`.
        :param pulumi.Input[float] on_demand_target_capacity: The number of On-Demand units to request.
        :param pulumi.Input[float] spot_target_capacity: The number of Spot units to request.
        """
        __self__.default_target_capacity_type = default_target_capacity_type
        __self__.total_target_capacity = total_target_capacity
        __self__.on_demand_target_capacity = on_demand_target_capacity
        __self__.spot_target_capacity = spot_target_capacity

@pulumi.input_type
class InstanceCreditSpecificationArgs:
    cpu_credits: Optional[pulumi.Input[str]] = pulumi.input_property("cpuCredits")
    """
    The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, cpu_credits: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] cpu_credits: The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
        """
        __self__.cpu_credits = cpu_credits

@pulumi.input_type
class InstanceEbsBlockDeviceArgs:
    device_name: pulumi.Input[str] = pulumi.input_property("deviceName")
    """
    The name of the device to mount.
    """
    delete_on_termination: Optional[pulumi.Input[bool]] = pulumi.input_property("deleteOnTermination")
    """
    Whether the volume should be destroyed
    on instance termination (Default: `true`).
    """
    encrypted: Optional[pulumi.Input[bool]] = pulumi.input_property("encrypted")
    """
    Enables [EBS
    encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
    on the volume (Default: `false`). Cannot be used with `snapshot_id`. Must be configured to perform drift detection.
    """
    iops: Optional[pulumi.Input[float]] = pulumi.input_property("iops")
    """
    The amount of provisioned
    [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
    This must be set with a `volume_type` of `"io1"`.
    """
    kms_key_id: Optional[pulumi.Input[str]] = pulumi.input_property("kmsKeyId")
    """
    Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
    """
    snapshot_id: Optional[pulumi.Input[str]] = pulumi.input_property("snapshotId")
    """
    The Snapshot ID to mount.
    """
    volume_id: Optional[pulumi.Input[str]] = pulumi.input_property("volumeId")
    volume_size: Optional[pulumi.Input[float]] = pulumi.input_property("volumeSize")
    """
    The size of the volume in gibibytes (GiB).
    """
    volume_type: Optional[pulumi.Input[str]] = pulumi.input_property("volumeType")
    """
    The type of volume. Can be `"standard"`, `"gp2"`,
    or `"io1"`. (Default: `"gp2"`).
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, device_name: pulumi.Input[str], delete_on_termination: Optional[pulumi.Input[bool]] = None, encrypted: Optional[pulumi.Input[bool]] = None, iops: Optional[pulumi.Input[float]] = None, kms_key_id: Optional[pulumi.Input[str]] = None, snapshot_id: Optional[pulumi.Input[str]] = None, volume_id: Optional[pulumi.Input[str]] = None, volume_size: Optional[pulumi.Input[float]] = None, volume_type: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] device_name: The name of the device to mount.
        :param pulumi.Input[bool] delete_on_termination: Whether the volume should be destroyed
               on instance termination (Default: `true`).
        :param pulumi.Input[bool] encrypted: Enables [EBS
               encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
               on the volume (Default: `false`). Cannot be used with `snapshot_id`. Must be configured to perform drift detection.
        :param pulumi.Input[float] iops: The amount of provisioned
               [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
               This must be set with a `volume_type` of `"io1"`.
        :param pulumi.Input[str] kms_key_id: Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
        :param pulumi.Input[str] snapshot_id: The Snapshot ID to mount.
        :param pulumi.Input[float] volume_size: The size of the volume in gibibytes (GiB).
        :param pulumi.Input[str] volume_type: The type of volume. Can be `"standard"`, `"gp2"`,
               or `"io1"`. (Default: `"gp2"`).
        """
        __self__.device_name = device_name
        __self__.delete_on_termination = delete_on_termination
        __self__.encrypted = encrypted
        __self__.iops = iops
        __self__.kms_key_id = kms_key_id
        __self__.snapshot_id = snapshot_id
        __self__.volume_id = volume_id
        __self__.volume_size = volume_size
        __self__.volume_type = volume_type

@pulumi.input_type
class InstanceEphemeralBlockDeviceArgs:
    device_name: pulumi.Input[str] = pulumi.input_property("deviceName")
    """
    The name of the block device to mount on the instance.
    """
    no_device: Optional[pulumi.Input[bool]] = pulumi.input_property("noDevice")
    """
    Suppresses the specified device included in the AMI's block device mapping.
    """
    virtual_name: Optional[pulumi.Input[str]] = pulumi.input_property("virtualName")
    """
    The [Instance Store Device
    Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
    (e.g. `"ephemeral0"`).
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, device_name: pulumi.Input[str], no_device: Optional[pulumi.Input[bool]] = None, virtual_name: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] device_name: The name of the block device to mount on the instance.
        :param pulumi.Input[bool] no_device: Suppresses the specified device included in the AMI's block device mapping.
        :param pulumi.Input[str] virtual_name: The [Instance Store Device
               Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
               (e.g. `"ephemeral0"`).
        """
        __self__.device_name = device_name
        __self__.no_device = no_device
        __self__.virtual_name = virtual_name

@pulumi.input_type
class InstanceMetadataOptionsArgs:
    http_endpoint: Optional[pulumi.Input[str]] = pulumi.input_property("httpEndpoint")
    """
    Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
    """
    http_put_response_hop_limit: Optional[pulumi.Input[float]] = pulumi.input_property("httpPutResponseHopLimit")
    """
    The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
    """
    http_tokens: Optional[pulumi.Input[str]] = pulumi.input_property("httpTokens")
    """
    Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, http_endpoint: Optional[pulumi.Input[str]] = None, http_put_response_hop_limit: Optional[pulumi.Input[float]] = None, http_tokens: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] http_endpoint: Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
        :param pulumi.Input[float] http_put_response_hop_limit: The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
        :param pulumi.Input[str] http_tokens: Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
        """
        __self__.http_endpoint = http_endpoint
        __self__.http_put_response_hop_limit = http_put_response_hop_limit
        __self__.http_tokens = http_tokens

@pulumi.input_type
class InstanceNetworkInterfaceArgs:
    device_index: pulumi.Input[float] = pulumi.input_property("deviceIndex")
    """
    The integer index of the network interface attachment. Limited by instance type.
    """
    network_interface_id: pulumi.Input[str] = pulumi.input_property("networkInterfaceId")
    """
    The ID of the network interface to attach.
    """
    delete_on_termination: Optional[pulumi.Input[bool]] = pulumi.input_property("deleteOnTermination")
    """
    Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, device_index: pulumi.Input[float], network_interface_id: pulumi.Input[str], delete_on_termination: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[float] device_index: The integer index of the network interface attachment. Limited by instance type.
        :param pulumi.Input[str] network_interface_id: The ID of the network interface to attach.
        :param pulumi.Input[bool] delete_on_termination: Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
        """
        __self__.device_index = device_index
        __self__.network_interface_id = network_interface_id
        __self__.delete_on_termination = delete_on_termination

@pulumi.input_type
class InstanceRootBlockDeviceArgs:
    delete_on_termination: Optional[pulumi.Input[bool]] = pulumi.input_property("deleteOnTermination")
    """
    Whether the volume should be destroyed
    on instance termination (Default: `true`).
    """
    device_name: Optional[pulumi.Input[str]] = pulumi.input_property("deviceName")
    """
    The name of the device to mount.
    """
    encrypted: Optional[pulumi.Input[bool]] = pulumi.input_property("encrypted")
    """
    Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
    """
    iops: Optional[pulumi.Input[float]] = pulumi.input_property("iops")
    """
    The amount of provisioned
    [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
    This is only valid for `volume_type` of `"io1"`, and must be specified if
    using that type
    """
    kms_key_id: Optional[pulumi.Input[str]] = pulumi.input_property("kmsKeyId")
    """
    Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
    """
    volume_id: Optional[pulumi.Input[str]] = pulumi.input_property("volumeId")
    volume_size: Optional[pulumi.Input[float]] = pulumi.input_property("volumeSize")
    """
    The size of the volume in gibibytes (GiB).
    """
    volume_type: Optional[pulumi.Input[str]] = pulumi.input_property("volumeType")
    """
    The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, delete_on_termination: Optional[pulumi.Input[bool]] = None, device_name: Optional[pulumi.Input[str]] = None, encrypted: Optional[pulumi.Input[bool]] = None, iops: Optional[pulumi.Input[float]] = None, kms_key_id: Optional[pulumi.Input[str]] = None, volume_id: Optional[pulumi.Input[str]] = None, volume_size: Optional[pulumi.Input[float]] = None, volume_type: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[bool] delete_on_termination: Whether the volume should be destroyed
               on instance termination (Default: `true`).
        :param pulumi.Input[str] device_name: The name of the device to mount.
        :param pulumi.Input[bool] encrypted: Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
        :param pulumi.Input[float] iops: The amount of provisioned
               [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
               This is only valid for `volume_type` of `"io1"`, and must be specified if
               using that type
        :param pulumi.Input[str] kms_key_id: Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
        :param pulumi.Input[float] volume_size: The size of the volume in gibibytes (GiB).
        :param pulumi.Input[str] volume_type: The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
        """
        __self__.delete_on_termination = delete_on_termination
        __self__.device_name = device_name
        __self__.encrypted = encrypted
        __self__.iops = iops
        __self__.kms_key_id = kms_key_id
        __self__.volume_id = volume_id
        __self__.volume_size = volume_size
        __self__.volume_type = volume_type

@pulumi.input_type
class LaunchConfigurationEbsBlockDeviceArgs:
    device_name: pulumi.Input[str] = pulumi.input_property("deviceName")
    delete_on_termination: Optional[pulumi.Input[bool]] = pulumi.input_property("deleteOnTermination")
    encrypted: Optional[pulumi.Input[bool]] = pulumi.input_property("encrypted")
    iops: Optional[pulumi.Input[float]] = pulumi.input_property("iops")
    no_device: Optional[pulumi.Input[bool]] = pulumi.input_property("noDevice")
    snapshot_id: Optional[pulumi.Input[str]] = pulumi.input_property("snapshotId")
    volume_size: Optional[pulumi.Input[float]] = pulumi.input_property("volumeSize")
    volume_type: Optional[pulumi.Input[str]] = pulumi.input_property("volumeType")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, device_name: pulumi.Input[str], delete_on_termination: Optional[pulumi.Input[bool]] = None, encrypted: Optional[pulumi.Input[bool]] = None, iops: Optional[pulumi.Input[float]] = None, no_device: Optional[pulumi.Input[bool]] = None, snapshot_id: Optional[pulumi.Input[str]] = None, volume_size: Optional[pulumi.Input[float]] = None, volume_type: Optional[pulumi.Input[str]] = None) -> None:
        __self__.device_name = device_name
        __self__.delete_on_termination = delete_on_termination
        __self__.encrypted = encrypted
        __self__.iops = iops
        __self__.no_device = no_device
        __self__.snapshot_id = snapshot_id
        __self__.volume_size = volume_size
        __self__.volume_type = volume_type

@pulumi.input_type
class LaunchConfigurationEphemeralBlockDeviceArgs:
    device_name: pulumi.Input[str] = pulumi.input_property("deviceName")
    virtual_name: pulumi.Input[str] = pulumi.input_property("virtualName")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, device_name: pulumi.Input[str], virtual_name: pulumi.Input[str]) -> None:
        __self__.device_name = device_name
        __self__.virtual_name = virtual_name

@pulumi.input_type
class LaunchConfigurationRootBlockDeviceArgs:
    delete_on_termination: Optional[pulumi.Input[bool]] = pulumi.input_property("deleteOnTermination")
    encrypted: Optional[pulumi.Input[bool]] = pulumi.input_property("encrypted")
    iops: Optional[pulumi.Input[float]] = pulumi.input_property("iops")
    volume_size: Optional[pulumi.Input[float]] = pulumi.input_property("volumeSize")
    volume_type: Optional[pulumi.Input[str]] = pulumi.input_property("volumeType")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, delete_on_termination: Optional[pulumi.Input[bool]] = None, encrypted: Optional[pulumi.Input[bool]] = None, iops: Optional[pulumi.Input[float]] = None, volume_size: Optional[pulumi.Input[float]] = None, volume_type: Optional[pulumi.Input[str]] = None) -> None:
        __self__.delete_on_termination = delete_on_termination
        __self__.encrypted = encrypted
        __self__.iops = iops
        __self__.volume_size = volume_size
        __self__.volume_type = volume_type

@pulumi.input_type
class LaunchTemplateBlockDeviceMappingArgs:
    device_name: Optional[pulumi.Input[str]] = pulumi.input_property("deviceName")
    """
    The name of the device to mount.
    """
    ebs: Optional[pulumi.Input['LaunchTemplateBlockDeviceMappingEbsArgs']] = pulumi.input_property("ebs")
    """
    Configure EBS volume properties.
    """
    no_device: Optional[pulumi.Input[str]] = pulumi.input_property("noDevice")
    """
    Suppresses the specified device included in the AMI's block device mapping.
    """
    virtual_name: Optional[pulumi.Input[str]] = pulumi.input_property("virtualName")
    """
    The [Instance Store Device
    Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
    (e.g. `"ephemeral0"`).
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, device_name: Optional[pulumi.Input[str]] = None, ebs: Optional[pulumi.Input['LaunchTemplateBlockDeviceMappingEbsArgs']] = None, no_device: Optional[pulumi.Input[str]] = None, virtual_name: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] device_name: The name of the device to mount.
        :param pulumi.Input['LaunchTemplateBlockDeviceMappingEbsArgs'] ebs: Configure EBS volume properties.
        :param pulumi.Input[str] no_device: Suppresses the specified device included in the AMI's block device mapping.
        :param pulumi.Input[str] virtual_name: The [Instance Store Device
               Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
               (e.g. `"ephemeral0"`).
        """
        __self__.device_name = device_name
        __self__.ebs = ebs
        __self__.no_device = no_device
        __self__.virtual_name = virtual_name

@pulumi.input_type
class LaunchTemplateBlockDeviceMappingEbsArgs:
    delete_on_termination: Optional[pulumi.Input[str]] = pulumi.input_property("deleteOnTermination")
    """
    Whether the volume should be destroyed on instance termination. Defaults to `false` if not set. See [Preserving Amazon EBS Volumes on Instance Termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) for more information.
    """
    encrypted: Optional[pulumi.Input[str]] = pulumi.input_property("encrypted")
    """
    Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
    on the volume (Default: `false`). Cannot be used with `snapshot_id`.
    """
    iops: Optional[pulumi.Input[float]] = pulumi.input_property("iops")
    """
    The amount of provisioned
    [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
    This must be set with a `volume_type` of `"io1"`.
    """
    kms_key_id: Optional[pulumi.Input[str]] = pulumi.input_property("kmsKeyId")
    """
    The ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
    `encrypted` must be set to `true` when this is set.
    """
    snapshot_id: Optional[pulumi.Input[str]] = pulumi.input_property("snapshotId")
    """
    The Snapshot ID to mount.
    """
    volume_size: Optional[pulumi.Input[float]] = pulumi.input_property("volumeSize")
    """
    The size of the volume in gigabytes.
    """
    volume_type: Optional[pulumi.Input[str]] = pulumi.input_property("volumeType")
    """
    The type of volume. Can be `"standard"`, `"gp2"`, or `"io1"`. (Default: `"standard"`).
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, delete_on_termination: Optional[pulumi.Input[str]] = None, encrypted: Optional[pulumi.Input[str]] = None, iops: Optional[pulumi.Input[float]] = None, kms_key_id: Optional[pulumi.Input[str]] = None, snapshot_id: Optional[pulumi.Input[str]] = None, volume_size: Optional[pulumi.Input[float]] = None, volume_type: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] delete_on_termination: Whether the volume should be destroyed on instance termination. Defaults to `false` if not set. See [Preserving Amazon EBS Volumes on Instance Termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) for more information.
        :param pulumi.Input[str] encrypted: Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
               on the volume (Default: `false`). Cannot be used with `snapshot_id`.
        :param pulumi.Input[float] iops: The amount of provisioned
               [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
               This must be set with a `volume_type` of `"io1"`.
        :param pulumi.Input[str] kms_key_id: The ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
               `encrypted` must be set to `true` when this is set.
        :param pulumi.Input[str] snapshot_id: The Snapshot ID to mount.
        :param pulumi.Input[float] volume_size: The size of the volume in gigabytes.
        :param pulumi.Input[str] volume_type: The type of volume. Can be `"standard"`, `"gp2"`, or `"io1"`. (Default: `"standard"`).
        """
        __self__.delete_on_termination = delete_on_termination
        __self__.encrypted = encrypted
        __self__.iops = iops
        __self__.kms_key_id = kms_key_id
        __self__.snapshot_id = snapshot_id
        __self__.volume_size = volume_size
        __self__.volume_type = volume_type

@pulumi.input_type
class LaunchTemplateCapacityReservationSpecificationArgs:
    capacity_reservation_preference: Optional[pulumi.Input[str]] = pulumi.input_property("capacityReservationPreference")
    """
    Indicates the instance's Capacity Reservation preferences. Can be `open` or `none`. (Default `none`).
    """
    capacity_reservation_target: Optional[pulumi.Input['LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs']] = pulumi.input_property("capacityReservationTarget")
    """
    Used to target a specific Capacity Reservation:
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, capacity_reservation_preference: Optional[pulumi.Input[str]] = None, capacity_reservation_target: Optional[pulumi.Input['LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs']] = None) -> None:
        """
        :param pulumi.Input[str] capacity_reservation_preference: Indicates the instance's Capacity Reservation preferences. Can be `open` or `none`. (Default `none`).
        :param pulumi.Input['LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs'] capacity_reservation_target: Used to target a specific Capacity Reservation:
        """
        __self__.capacity_reservation_preference = capacity_reservation_preference
        __self__.capacity_reservation_target = capacity_reservation_target

@pulumi.input_type
class LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs:
    capacity_reservation_id: Optional[pulumi.Input[str]] = pulumi.input_property("capacityReservationId")
    """
    The ID of the Capacity Reservation to target.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, capacity_reservation_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] capacity_reservation_id: The ID of the Capacity Reservation to target.
        """
        __self__.capacity_reservation_id = capacity_reservation_id

@pulumi.input_type
class LaunchTemplateCpuOptionsArgs:
    core_count: Optional[pulumi.Input[float]] = pulumi.input_property("coreCount")
    """
    The number of CPU cores for the instance.
    """
    threads_per_core: Optional[pulumi.Input[float]] = pulumi.input_property("threadsPerCore")
    """
    The number of threads per CPU core. To disable Intel Hyper-Threading Technology for the instance, specify a value of 1.
    Otherwise, specify the default value of 2.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, core_count: Optional[pulumi.Input[float]] = None, threads_per_core: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[float] core_count: The number of CPU cores for the instance.
        :param pulumi.Input[float] threads_per_core: The number of threads per CPU core. To disable Intel Hyper-Threading Technology for the instance, specify a value of 1.
               Otherwise, specify the default value of 2.
        """
        __self__.core_count = core_count
        __self__.threads_per_core = threads_per_core

@pulumi.input_type
class LaunchTemplateCreditSpecificationArgs:
    cpu_credits: Optional[pulumi.Input[str]] = pulumi.input_property("cpuCredits")
    """
    The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, cpu_credits: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] cpu_credits: The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
        """
        __self__.cpu_credits = cpu_credits

@pulumi.input_type
class LaunchTemplateElasticGpuSpecificationArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    The [Elastic GPU Type](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-gpus.html#elastic-gpus-basics)
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] type: The [Elastic GPU Type](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-gpus.html#elastic-gpus-basics)
        """
        __self__.type = type

@pulumi.input_type
class LaunchTemplateElasticInferenceAcceleratorArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    Accelerator type.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] type: Accelerator type.
        """
        __self__.type = type

@pulumi.input_type
class LaunchTemplateHibernationOptionsArgs:
    configured: pulumi.Input[bool] = pulumi.input_property("configured")
    """
    If set to `true`, the launched EC2 instance will hibernation enabled.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, configured: pulumi.Input[bool]) -> None:
        """
        :param pulumi.Input[bool] configured: If set to `true`, the launched EC2 instance will hibernation enabled.
        """
        __self__.configured = configured

@pulumi.input_type
class LaunchTemplateIamInstanceProfileArgs:
    arn: Optional[pulumi.Input[str]] = pulumi.input_property("arn")
    """
    The Amazon Resource Name (ARN) of the instance profile.
    """
    name: Optional[pulumi.Input[str]] = pulumi.input_property("name")
    """
    The name of the instance profile.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, arn: Optional[pulumi.Input[str]] = None, name: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] arn: The Amazon Resource Name (ARN) of the instance profile.
        :param pulumi.Input[str] name: The name of the instance profile.
        """
        __self__.arn = arn
        __self__.name = name

@pulumi.input_type
class LaunchTemplateInstanceMarketOptionsArgs:
    market_type: Optional[pulumi.Input[str]] = pulumi.input_property("marketType")
    """
    The market type. Can be `spot`.
    """
    spot_options: Optional[pulumi.Input['LaunchTemplateInstanceMarketOptionsSpotOptionsArgs']] = pulumi.input_property("spotOptions")
    """
    The options for [Spot Instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html)
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, market_type: Optional[pulumi.Input[str]] = None, spot_options: Optional[pulumi.Input['LaunchTemplateInstanceMarketOptionsSpotOptionsArgs']] = None) -> None:
        """
        :param pulumi.Input[str] market_type: The market type. Can be `spot`.
        :param pulumi.Input['LaunchTemplateInstanceMarketOptionsSpotOptionsArgs'] spot_options: The options for [Spot Instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html)
        """
        __self__.market_type = market_type
        __self__.spot_options = spot_options

@pulumi.input_type
class LaunchTemplateInstanceMarketOptionsSpotOptionsArgs:
    block_duration_minutes: Optional[pulumi.Input[float]] = pulumi.input_property("blockDurationMinutes")
    """
    The required duration in minutes. This value must be a multiple of 60.
    """
    instance_interruption_behavior: Optional[pulumi.Input[str]] = pulumi.input_property("instanceInterruptionBehavior")
    """
    The behavior when a Spot Instance is interrupted. Can be `hibernate`,
    `stop`, or `terminate`. (Default: `terminate`).
    """
    max_price: Optional[pulumi.Input[str]] = pulumi.input_property("maxPrice")
    """
    The maximum hourly price you're willing to pay for the Spot Instances.
    """
    spot_instance_type: Optional[pulumi.Input[str]] = pulumi.input_property("spotInstanceType")
    """
    The Spot Instance request type. Can be `one-time`, or `persistent`.
    """
    valid_until: Optional[pulumi.Input[str]] = pulumi.input_property("validUntil")
    """
    The end date of the request.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, block_duration_minutes: Optional[pulumi.Input[float]] = None, instance_interruption_behavior: Optional[pulumi.Input[str]] = None, max_price: Optional[pulumi.Input[str]] = None, spot_instance_type: Optional[pulumi.Input[str]] = None, valid_until: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[float] block_duration_minutes: The required duration in minutes. This value must be a multiple of 60.
        :param pulumi.Input[str] instance_interruption_behavior: The behavior when a Spot Instance is interrupted. Can be `hibernate`,
               `stop`, or `terminate`. (Default: `terminate`).
        :param pulumi.Input[str] max_price: The maximum hourly price you're willing to pay for the Spot Instances.
        :param pulumi.Input[str] spot_instance_type: The Spot Instance request type. Can be `one-time`, or `persistent`.
        :param pulumi.Input[str] valid_until: The end date of the request.
        """
        __self__.block_duration_minutes = block_duration_minutes
        __self__.instance_interruption_behavior = instance_interruption_behavior
        __self__.max_price = max_price
        __self__.spot_instance_type = spot_instance_type
        __self__.valid_until = valid_until

@pulumi.input_type
class LaunchTemplateLicenseSpecificationArgs:
    license_configuration_arn: pulumi.Input[str] = pulumi.input_property("licenseConfigurationArn")
    """
    ARN of the license configuration.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, license_configuration_arn: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] license_configuration_arn: ARN of the license configuration.
        """
        __self__.license_configuration_arn = license_configuration_arn

@pulumi.input_type
class LaunchTemplateMetadataOptionsArgs:
    http_endpoint: Optional[pulumi.Input[str]] = pulumi.input_property("httpEndpoint")
    """
    Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
    """
    http_put_response_hop_limit: Optional[pulumi.Input[float]] = pulumi.input_property("httpPutResponseHopLimit")
    """
    The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
    """
    http_tokens: Optional[pulumi.Input[str]] = pulumi.input_property("httpTokens")
    """
    Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, http_endpoint: Optional[pulumi.Input[str]] = None, http_put_response_hop_limit: Optional[pulumi.Input[float]] = None, http_tokens: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] http_endpoint: Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
        :param pulumi.Input[float] http_put_response_hop_limit: The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
        :param pulumi.Input[str] http_tokens: Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
        """
        __self__.http_endpoint = http_endpoint
        __self__.http_put_response_hop_limit = http_put_response_hop_limit
        __self__.http_tokens = http_tokens

@pulumi.input_type
class LaunchTemplateMonitoringArgs:
    enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("enabled")
    """
    If `true`, the launched EC2 instance will have detailed monitoring enabled.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, enabled: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[bool] enabled: If `true`, the launched EC2 instance will have detailed monitoring enabled.
        """
        __self__.enabled = enabled

@pulumi.input_type
class LaunchTemplateNetworkInterfaceArgs:
    associate_public_ip_address: Optional[pulumi.Input[str]] = pulumi.input_property("associatePublicIpAddress")
    """
    Associate a public ip address with the network interface.  Boolean value.
    """
    delete_on_termination: Optional[pulumi.Input[bool]] = pulumi.input_property("deleteOnTermination")
    """
    Whether the network interface should be destroyed on instance termination. Defaults to `false` if not set.
    """
    description: Optional[pulumi.Input[str]] = pulumi.input_property("description")
    """
    Description of the network interface.
    """
    device_index: Optional[pulumi.Input[float]] = pulumi.input_property("deviceIndex")
    """
    The integer index of the network interface attachment.
    """
    ipv4_address_count: Optional[pulumi.Input[float]] = pulumi.input_property("ipv4AddressCount")
    """
    The number of secondary private IPv4 addresses to assign to a network interface. Conflicts with `ipv4_addresses`
    """
    ipv4_addresses: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("ipv4Addresses")
    """
    One or more private IPv4 addresses to associate. Conflicts with `ipv4_address_count`
    """
    ipv6_address_count: Optional[pulumi.Input[float]] = pulumi.input_property("ipv6AddressCount")
    """
    The number of IPv6 addresses to assign to a network interface. Conflicts with `ipv6_addresses`
    """
    ipv6_addresses: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("ipv6Addresses")
    """
    One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Conflicts with `ipv6_address_count`
    """
    network_interface_id: Optional[pulumi.Input[str]] = pulumi.input_property("networkInterfaceId")
    """
    The ID of the network interface to attach.
    """
    private_ip_address: Optional[pulumi.Input[str]] = pulumi.input_property("privateIpAddress")
    """
    The primary private IPv4 address.
    """
    security_groups: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("securityGroups")
    """
    A list of security group IDs to associate.
    """
    subnet_id: Optional[pulumi.Input[str]] = pulumi.input_property("subnetId")
    """
    The VPC Subnet ID to associate.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, associate_public_ip_address: Optional[pulumi.Input[str]] = None, delete_on_termination: Optional[pulumi.Input[bool]] = None, description: Optional[pulumi.Input[str]] = None, device_index: Optional[pulumi.Input[float]] = None, ipv4_address_count: Optional[pulumi.Input[float]] = None, ipv4_addresses: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, ipv6_address_count: Optional[pulumi.Input[float]] = None, ipv6_addresses: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, network_interface_id: Optional[pulumi.Input[str]] = None, private_ip_address: Optional[pulumi.Input[str]] = None, security_groups: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, subnet_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] associate_public_ip_address: Associate a public ip address with the network interface.  Boolean value.
        :param pulumi.Input[bool] delete_on_termination: Whether the network interface should be destroyed on instance termination. Defaults to `false` if not set.
        :param pulumi.Input[str] description: Description of the network interface.
        :param pulumi.Input[float] device_index: The integer index of the network interface attachment.
        :param pulumi.Input[float] ipv4_address_count: The number of secondary private IPv4 addresses to assign to a network interface. Conflicts with `ipv4_addresses`
        :param pulumi.Input[List[pulumi.Input[str]]] ipv4_addresses: One or more private IPv4 addresses to associate. Conflicts with `ipv4_address_count`
        :param pulumi.Input[float] ipv6_address_count: The number of IPv6 addresses to assign to a network interface. Conflicts with `ipv6_addresses`
        :param pulumi.Input[List[pulumi.Input[str]]] ipv6_addresses: One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Conflicts with `ipv6_address_count`
        :param pulumi.Input[str] network_interface_id: The ID of the network interface to attach.
        :param pulumi.Input[str] private_ip_address: The primary private IPv4 address.
        :param pulumi.Input[List[pulumi.Input[str]]] security_groups: A list of security group IDs to associate.
        :param pulumi.Input[str] subnet_id: The VPC Subnet ID to associate.
        """
        __self__.associate_public_ip_address = associate_public_ip_address
        __self__.delete_on_termination = delete_on_termination
        __self__.description = description
        __self__.device_index = device_index
        __self__.ipv4_address_count = ipv4_address_count
        __self__.ipv4_addresses = ipv4_addresses
        __self__.ipv6_address_count = ipv6_address_count
        __self__.ipv6_addresses = ipv6_addresses
        __self__.network_interface_id = network_interface_id
        __self__.private_ip_address = private_ip_address
        __self__.security_groups = security_groups
        __self__.subnet_id = subnet_id

@pulumi.input_type
class LaunchTemplatePlacementArgs:
    affinity: Optional[pulumi.Input[str]] = pulumi.input_property("affinity")
    """
    The affinity setting for an instance on a Dedicated Host.
    """
    availability_zone: Optional[pulumi.Input[str]] = pulumi.input_property("availabilityZone")
    """
    The Availability Zone for the instance.
    """
    group_name: Optional[pulumi.Input[str]] = pulumi.input_property("groupName")
    """
    The name of the placement group for the instance.
    """
    host_id: Optional[pulumi.Input[str]] = pulumi.input_property("hostId")
    """
    The ID of the Dedicated Host for the instance.
    """
    partition_number: Optional[pulumi.Input[float]] = pulumi.input_property("partitionNumber")
    """
    The number of the partition the instance should launch in. Valid only if the placement group strategy is set to partition.
    """
    spread_domain: Optional[pulumi.Input[str]] = pulumi.input_property("spreadDomain")
    """
    Reserved for future use.
    """
    tenancy: Optional[pulumi.Input[str]] = pulumi.input_property("tenancy")
    """
    The tenancy of the instance (if the instance is running in a VPC). Can be `default`, `dedicated`, or `host`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, affinity: Optional[pulumi.Input[str]] = None, availability_zone: Optional[pulumi.Input[str]] = None, group_name: Optional[pulumi.Input[str]] = None, host_id: Optional[pulumi.Input[str]] = None, partition_number: Optional[pulumi.Input[float]] = None, spread_domain: Optional[pulumi.Input[str]] = None, tenancy: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] affinity: The affinity setting for an instance on a Dedicated Host.
        :param pulumi.Input[str] availability_zone: The Availability Zone for the instance.
        :param pulumi.Input[str] group_name: The name of the placement group for the instance.
        :param pulumi.Input[str] host_id: The ID of the Dedicated Host for the instance.
        :param pulumi.Input[float] partition_number: The number of the partition the instance should launch in. Valid only if the placement group strategy is set to partition.
        :param pulumi.Input[str] spread_domain: Reserved for future use.
        :param pulumi.Input[str] tenancy: The tenancy of the instance (if the instance is running in a VPC). Can be `default`, `dedicated`, or `host`.
        """
        __self__.affinity = affinity
        __self__.availability_zone = availability_zone
        __self__.group_name = group_name
        __self__.host_id = host_id
        __self__.partition_number = partition_number
        __self__.spread_domain = spread_domain
        __self__.tenancy = tenancy

@pulumi.input_type
class LaunchTemplateTagSpecificationArgs:
    resource_type: Optional[pulumi.Input[str]] = pulumi.input_property("resourceType")
    """
    The type of resource to tag. Valid values are `instance` and `volume`.
    """
    tags: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("tags")
    """
    A map of tags to assign to the resource.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, resource_type: Optional[pulumi.Input[str]] = None, tags: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] resource_type: The type of resource to tag. Valid values are `instance` and `volume`.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] tags: A map of tags to assign to the resource.
        """
        __self__.resource_type = resource_type
        __self__.tags = tags

@pulumi.input_type
class NetworkAclEgressArgs:
    action: pulumi.Input[str] = pulumi.input_property("action")
    """
    The action to take.
    """
    from_port: pulumi.Input[float] = pulumi.input_property("fromPort")
    """
    The from port to match.
    """
    protocol: pulumi.Input[str] = pulumi.input_property("protocol")
    """
    The protocol to match. If using the -1 'all'
    protocol, you must specify a from and to port of 0.
    """
    rule_no: pulumi.Input[float] = pulumi.input_property("ruleNo")
    """
    The rule number. Used for ordering.
    """
    to_port: pulumi.Input[float] = pulumi.input_property("toPort")
    """
    The to port to match.
    """
    cidr_block: Optional[pulumi.Input[str]] = pulumi.input_property("cidrBlock")
    """
    The CIDR block to match. This must be a
    valid network mask.
    """
    icmp_code: Optional[pulumi.Input[float]] = pulumi.input_property("icmpCode")
    """
    The ICMP type code to be used. Default 0.
    """
    icmp_type: Optional[pulumi.Input[float]] = pulumi.input_property("icmpType")
    """
    The ICMP type to be used. Default 0.
    """
    ipv6_cidr_block: Optional[pulumi.Input[str]] = pulumi.input_property("ipv6CidrBlock")
    """
    The IPv6 CIDR block.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, action: pulumi.Input[str], from_port: pulumi.Input[float], protocol: pulumi.Input[str], rule_no: pulumi.Input[float], to_port: pulumi.Input[float], cidr_block: Optional[pulumi.Input[str]] = None, icmp_code: Optional[pulumi.Input[float]] = None, icmp_type: Optional[pulumi.Input[float]] = None, ipv6_cidr_block: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] action: The action to take.
        :param pulumi.Input[float] from_port: The from port to match.
        :param pulumi.Input[str] protocol: The protocol to match. If using the -1 'all'
               protocol, you must specify a from and to port of 0.
        :param pulumi.Input[float] rule_no: The rule number. Used for ordering.
        :param pulumi.Input[float] to_port: The to port to match.
        :param pulumi.Input[str] cidr_block: The CIDR block to match. This must be a
               valid network mask.
        :param pulumi.Input[float] icmp_code: The ICMP type code to be used. Default 0.
        :param pulumi.Input[float] icmp_type: The ICMP type to be used. Default 0.
        :param pulumi.Input[str] ipv6_cidr_block: The IPv6 CIDR block.
        """
        __self__.action = action
        __self__.from_port = from_port
        __self__.protocol = protocol
        __self__.rule_no = rule_no
        __self__.to_port = to_port
        __self__.cidr_block = cidr_block
        __self__.icmp_code = icmp_code
        __self__.icmp_type = icmp_type
        __self__.ipv6_cidr_block = ipv6_cidr_block

@pulumi.input_type
class NetworkAclIngressArgs:
    action: pulumi.Input[str] = pulumi.input_property("action")
    """
    The action to take.
    """
    from_port: pulumi.Input[float] = pulumi.input_property("fromPort")
    """
    The from port to match.
    """
    protocol: pulumi.Input[str] = pulumi.input_property("protocol")
    """
    The protocol to match. If using the -1 'all'
    protocol, you must specify a from and to port of 0.
    """
    rule_no: pulumi.Input[float] = pulumi.input_property("ruleNo")
    """
    The rule number. Used for ordering.
    """
    to_port: pulumi.Input[float] = pulumi.input_property("toPort")
    """
    The to port to match.
    """
    cidr_block: Optional[pulumi.Input[str]] = pulumi.input_property("cidrBlock")
    """
    The CIDR block to match. This must be a
    valid network mask.
    """
    icmp_code: Optional[pulumi.Input[float]] = pulumi.input_property("icmpCode")
    """
    The ICMP type code to be used. Default 0.
    """
    icmp_type: Optional[pulumi.Input[float]] = pulumi.input_property("icmpType")
    """
    The ICMP type to be used. Default 0.
    """
    ipv6_cidr_block: Optional[pulumi.Input[str]] = pulumi.input_property("ipv6CidrBlock")
    """
    The IPv6 CIDR block.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, action: pulumi.Input[str], from_port: pulumi.Input[float], protocol: pulumi.Input[str], rule_no: pulumi.Input[float], to_port: pulumi.Input[float], cidr_block: Optional[pulumi.Input[str]] = None, icmp_code: Optional[pulumi.Input[float]] = None, icmp_type: Optional[pulumi.Input[float]] = None, ipv6_cidr_block: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] action: The action to take.
        :param pulumi.Input[float] from_port: The from port to match.
        :param pulumi.Input[str] protocol: The protocol to match. If using the -1 'all'
               protocol, you must specify a from and to port of 0.
        :param pulumi.Input[float] rule_no: The rule number. Used for ordering.
        :param pulumi.Input[float] to_port: The to port to match.
        :param pulumi.Input[str] cidr_block: The CIDR block to match. This must be a
               valid network mask.
        :param pulumi.Input[float] icmp_code: The ICMP type code to be used. Default 0.
        :param pulumi.Input[float] icmp_type: The ICMP type to be used. Default 0.
        :param pulumi.Input[str] ipv6_cidr_block: The IPv6 CIDR block.
        """
        __self__.action = action
        __self__.from_port = from_port
        __self__.protocol = protocol
        __self__.rule_no = rule_no
        __self__.to_port = to_port
        __self__.cidr_block = cidr_block
        __self__.icmp_code = icmp_code
        __self__.icmp_type = icmp_type
        __self__.ipv6_cidr_block = ipv6_cidr_block

@pulumi.input_type
class NetworkInterfaceAttachmentArgs:
    device_index: pulumi.Input[float] = pulumi.input_property("deviceIndex")
    """
    Integer to define the devices index.
    """
    instance: pulumi.Input[str] = pulumi.input_property("instance")
    """
    ID of the instance to attach to.
    """
    attachment_id: Optional[pulumi.Input[str]] = pulumi.input_property("attachmentId")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, device_index: pulumi.Input[float], instance: pulumi.Input[str], attachment_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[float] device_index: Integer to define the devices index.
        :param pulumi.Input[str] instance: ID of the instance to attach to.
        """
        __self__.device_index = device_index
        __self__.instance = instance
        __self__.attachment_id = attachment_id

@pulumi.input_type
class PeeringConnectionOptionsAccepterArgs:
    allow_classic_link_to_remote_vpc: Optional[pulumi.Input[bool]] = pulumi.input_property("allowClassicLinkToRemoteVpc")
    """
    Allow a local linked EC2-Classic instance to communicate
    with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
    to the remote VPC. This option is not supported for inter-region VPC peering.
    """
    allow_remote_vpc_dns_resolution: Optional[pulumi.Input[bool]] = pulumi.input_property("allowRemoteVpcDnsResolution")
    """
    Allow a local VPC to resolve public DNS hostnames to
    private IP addresses when queried from instances in the peer VPC.
    """
    allow_vpc_to_remote_classic_link: Optional[pulumi.Input[bool]] = pulumi.input_property("allowVpcToRemoteClassicLink")
    """
    Allow a local VPC to communicate with a linked EC2-Classic
    instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
    connection. This option is not supported for inter-region VPC peering.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, allow_classic_link_to_remote_vpc: Optional[pulumi.Input[bool]] = None, allow_remote_vpc_dns_resolution: Optional[pulumi.Input[bool]] = None, allow_vpc_to_remote_classic_link: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[bool] allow_classic_link_to_remote_vpc: Allow a local linked EC2-Classic instance to communicate
               with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
               to the remote VPC. This option is not supported for inter-region VPC peering.
        :param pulumi.Input[bool] allow_remote_vpc_dns_resolution: Allow a local VPC to resolve public DNS hostnames to
               private IP addresses when queried from instances in the peer VPC.
        :param pulumi.Input[bool] allow_vpc_to_remote_classic_link: Allow a local VPC to communicate with a linked EC2-Classic
               instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
               connection. This option is not supported for inter-region VPC peering.
        """
        __self__.allow_classic_link_to_remote_vpc = allow_classic_link_to_remote_vpc
        __self__.allow_remote_vpc_dns_resolution = allow_remote_vpc_dns_resolution
        __self__.allow_vpc_to_remote_classic_link = allow_vpc_to_remote_classic_link

@pulumi.input_type
class PeeringConnectionOptionsRequesterArgs:
    allow_classic_link_to_remote_vpc: Optional[pulumi.Input[bool]] = pulumi.input_property("allowClassicLinkToRemoteVpc")
    """
    Allow a local linked EC2-Classic instance to communicate
    with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
    to the remote VPC. This option is not supported for inter-region VPC peering.
    """
    allow_remote_vpc_dns_resolution: Optional[pulumi.Input[bool]] = pulumi.input_property("allowRemoteVpcDnsResolution")
    """
    Allow a local VPC to resolve public DNS hostnames to
    private IP addresses when queried from instances in the peer VPC.
    """
    allow_vpc_to_remote_classic_link: Optional[pulumi.Input[bool]] = pulumi.input_property("allowVpcToRemoteClassicLink")
    """
    Allow a local VPC to communicate with a linked EC2-Classic
    instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
    connection. This option is not supported for inter-region VPC peering.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, allow_classic_link_to_remote_vpc: Optional[pulumi.Input[bool]] = None, allow_remote_vpc_dns_resolution: Optional[pulumi.Input[bool]] = None, allow_vpc_to_remote_classic_link: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[bool] allow_classic_link_to_remote_vpc: Allow a local linked EC2-Classic instance to communicate
               with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
               to the remote VPC. This option is not supported for inter-region VPC peering.
        :param pulumi.Input[bool] allow_remote_vpc_dns_resolution: Allow a local VPC to resolve public DNS hostnames to
               private IP addresses when queried from instances in the peer VPC.
        :param pulumi.Input[bool] allow_vpc_to_remote_classic_link: Allow a local VPC to communicate with a linked EC2-Classic
               instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
               connection. This option is not supported for inter-region VPC peering.
        """
        __self__.allow_classic_link_to_remote_vpc = allow_classic_link_to_remote_vpc
        __self__.allow_remote_vpc_dns_resolution = allow_remote_vpc_dns_resolution
        __self__.allow_vpc_to_remote_classic_link = allow_vpc_to_remote_classic_link

@pulumi.input_type
class RouteTableRouteArgs:
    cidr_block: Optional[pulumi.Input[str]] = pulumi.input_property("cidrBlock")
    """
    The CIDR block of the route.
    """
    egress_only_gateway_id: Optional[pulumi.Input[str]] = pulumi.input_property("egressOnlyGatewayId")
    """
    Identifier of a VPC Egress Only Internet Gateway.
    """
    gateway_id: Optional[pulumi.Input[str]] = pulumi.input_property("gatewayId")
    """
    Identifier of a VPC internet gateway or a virtual private gateway.
    """
    instance_id: Optional[pulumi.Input[str]] = pulumi.input_property("instanceId")
    """
    Identifier of an EC2 instance.
    """
    ipv6_cidr_block: Optional[pulumi.Input[str]] = pulumi.input_property("ipv6CidrBlock")
    """
    The Ipv6 CIDR block of the route.
    """
    nat_gateway_id: Optional[pulumi.Input[str]] = pulumi.input_property("natGatewayId")
    """
    Identifier of a VPC NAT gateway.
    """
    network_interface_id: Optional[pulumi.Input[str]] = pulumi.input_property("networkInterfaceId")
    """
    Identifier of an EC2 network interface.
    """
    transit_gateway_id: Optional[pulumi.Input[str]] = pulumi.input_property("transitGatewayId")
    """
    Identifier of an EC2 Transit Gateway.
    """
    vpc_peering_connection_id: Optional[pulumi.Input[str]] = pulumi.input_property("vpcPeeringConnectionId")
    """
    Identifier of a VPC peering connection.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, cidr_block: Optional[pulumi.Input[str]] = None, egress_only_gateway_id: Optional[pulumi.Input[str]] = None, gateway_id: Optional[pulumi.Input[str]] = None, instance_id: Optional[pulumi.Input[str]] = None, ipv6_cidr_block: Optional[pulumi.Input[str]] = None, nat_gateway_id: Optional[pulumi.Input[str]] = None, network_interface_id: Optional[pulumi.Input[str]] = None, transit_gateway_id: Optional[pulumi.Input[str]] = None, vpc_peering_connection_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] cidr_block: The CIDR block of the route.
        :param pulumi.Input[str] egress_only_gateway_id: Identifier of a VPC Egress Only Internet Gateway.
        :param pulumi.Input[str] gateway_id: Identifier of a VPC internet gateway or a virtual private gateway.
        :param pulumi.Input[str] instance_id: Identifier of an EC2 instance.
        :param pulumi.Input[str] ipv6_cidr_block: The Ipv6 CIDR block of the route.
        :param pulumi.Input[str] nat_gateway_id: Identifier of a VPC NAT gateway.
        :param pulumi.Input[str] network_interface_id: Identifier of an EC2 network interface.
        :param pulumi.Input[str] transit_gateway_id: Identifier of an EC2 Transit Gateway.
        :param pulumi.Input[str] vpc_peering_connection_id: Identifier of a VPC peering connection.
        """
        __self__.cidr_block = cidr_block
        __self__.egress_only_gateway_id = egress_only_gateway_id
        __self__.gateway_id = gateway_id
        __self__.instance_id = instance_id
        __self__.ipv6_cidr_block = ipv6_cidr_block
        __self__.nat_gateway_id = nat_gateway_id
        __self__.network_interface_id = network_interface_id
        __self__.transit_gateway_id = transit_gateway_id
        __self__.vpc_peering_connection_id = vpc_peering_connection_id

@pulumi.input_type
class SecurityGroupEgressArgs:
    from_port: pulumi.Input[float] = pulumi.input_property("fromPort")
    """
    The start port (or ICMP type number if protocol is "icmp")
    """
    protocol: pulumi.Input[str] = pulumi.input_property("protocol")
    """
    The protocol. If you select a protocol of
    "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "from_port" and "to_port" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
    """
    to_port: pulumi.Input[float] = pulumi.input_property("toPort")
    """
    The end range port (or ICMP code if protocol is "icmp").
    """
    cidr_blocks: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("cidrBlocks")
    """
    List of CIDR blocks.
    """
    description: Optional[pulumi.Input[str]] = pulumi.input_property("description")
    """
    Description of this egress rule.
    """
    ipv6_cidr_blocks: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("ipv6CidrBlocks")
    """
    List of IPv6 CIDR blocks.
    """
    prefix_list_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("prefixListIds")
    """
    List of prefix list IDs (for allowing access to VPC endpoints)
    """
    security_groups: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("securityGroups")
    """
    List of security group Group Names if using
    EC2-Classic, or Group IDs if using a VPC.
    """
    self: Optional[pulumi.Input[bool]] = pulumi.input_property("self")
    """
    If true, the security group itself will be added as
    a source to this egress rule.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, from_port: pulumi.Input[float], protocol: pulumi.Input[str], to_port: pulumi.Input[float], cidr_blocks: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, description: Optional[pulumi.Input[str]] = None, ipv6_cidr_blocks: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, prefix_list_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, security_groups: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, self: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[float] from_port: The start port (or ICMP type number if protocol is "icmp")
        :param pulumi.Input[str] protocol: The protocol. If you select a protocol of
               "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "from_port" and "to_port" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
        :param pulumi.Input[float] to_port: The end range port (or ICMP code if protocol is "icmp").
        :param pulumi.Input[List[pulumi.Input[str]]] cidr_blocks: List of CIDR blocks.
        :param pulumi.Input[str] description: Description of this egress rule.
        :param pulumi.Input[List[pulumi.Input[str]]] ipv6_cidr_blocks: List of IPv6 CIDR blocks.
        :param pulumi.Input[List[pulumi.Input[str]]] prefix_list_ids: List of prefix list IDs (for allowing access to VPC endpoints)
        :param pulumi.Input[List[pulumi.Input[str]]] security_groups: List of security group Group Names if using
               EC2-Classic, or Group IDs if using a VPC.
        :param pulumi.Input[bool] self: If true, the security group itself will be added as
               a source to this egress rule.
        """
        __self__.from_port = from_port
        __self__.protocol = protocol
        __self__.to_port = to_port
        __self__.cidr_blocks = cidr_blocks
        __self__.description = description
        __self__.ipv6_cidr_blocks = ipv6_cidr_blocks
        __self__.prefix_list_ids = prefix_list_ids
        __self__.security_groups = security_groups
        __self__.self = self

@pulumi.input_type
class SecurityGroupIngressArgs:
    from_port: pulumi.Input[float] = pulumi.input_property("fromPort")
    """
    The start port (or ICMP type number if protocol is "icmp")
    """
    protocol: pulumi.Input[str] = pulumi.input_property("protocol")
    """
    The protocol. If you select a protocol of
    "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "from_port" and "to_port" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
    """
    to_port: pulumi.Input[float] = pulumi.input_property("toPort")
    """
    The end range port (or ICMP code if protocol is "icmp").
    """
    cidr_blocks: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("cidrBlocks")
    """
    List of CIDR blocks.
    """
    description: Optional[pulumi.Input[str]] = pulumi.input_property("description")
    """
    Description of this egress rule.
    """
    ipv6_cidr_blocks: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("ipv6CidrBlocks")
    """
    List of IPv6 CIDR blocks.
    """
    prefix_list_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("prefixListIds")
    """
    List of prefix list IDs (for allowing access to VPC endpoints)
    """
    security_groups: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("securityGroups")
    """
    List of security group Group Names if using
    EC2-Classic, or Group IDs if using a VPC.
    """
    self: Optional[pulumi.Input[bool]] = pulumi.input_property("self")
    """
    If true, the security group itself will be added as
    a source to this egress rule.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, from_port: pulumi.Input[float], protocol: pulumi.Input[str], to_port: pulumi.Input[float], cidr_blocks: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, description: Optional[pulumi.Input[str]] = None, ipv6_cidr_blocks: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, prefix_list_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, security_groups: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, self: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[float] from_port: The start port (or ICMP type number if protocol is "icmp")
        :param pulumi.Input[str] protocol: The protocol. If you select a protocol of
               "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "from_port" and "to_port" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
        :param pulumi.Input[float] to_port: The end range port (or ICMP code if protocol is "icmp").
        :param pulumi.Input[List[pulumi.Input[str]]] cidr_blocks: List of CIDR blocks.
        :param pulumi.Input[str] description: Description of this egress rule.
        :param pulumi.Input[List[pulumi.Input[str]]] ipv6_cidr_blocks: List of IPv6 CIDR blocks.
        :param pulumi.Input[List[pulumi.Input[str]]] prefix_list_ids: List of prefix list IDs (for allowing access to VPC endpoints)
        :param pulumi.Input[List[pulumi.Input[str]]] security_groups: List of security group Group Names if using
               EC2-Classic, or Group IDs if using a VPC.
        :param pulumi.Input[bool] self: If true, the security group itself will be added as
               a source to this egress rule.
        """
        __self__.from_port = from_port
        __self__.protocol = protocol
        __self__.to_port = to_port
        __self__.cidr_blocks = cidr_blocks
        __self__.description = description
        __self__.ipv6_cidr_blocks = ipv6_cidr_blocks
        __self__.prefix_list_ids = prefix_list_ids
        __self__.security_groups = security_groups
        __self__.self = self

@pulumi.input_type
class SpotFleetRequestLaunchSpecificationArgs:
    ami: pulumi.Input[str] = pulumi.input_property("ami")
    instance_type: pulumi.Input[str] = pulumi.input_property("instanceType")
    """
    The type of instance to request.
    """
    associate_public_ip_address: Optional[pulumi.Input[bool]] = pulumi.input_property("associatePublicIpAddress")
    availability_zone: Optional[pulumi.Input[str]] = pulumi.input_property("availabilityZone")
    """
    The availability zone in which to place the request.
    """
    ebs_block_devices: Optional[pulumi.Input[List[pulumi.Input['SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs']]]] = pulumi.input_property("ebsBlockDevices")
    ebs_optimized: Optional[pulumi.Input[bool]] = pulumi.input_property("ebsOptimized")
    ephemeral_block_devices: Optional[pulumi.Input[List[pulumi.Input['SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs']]]] = pulumi.input_property("ephemeralBlockDevices")
    iam_instance_profile: Optional[pulumi.Input[str]] = pulumi.input_property("iamInstanceProfile")
    iam_instance_profile_arn: Optional[pulumi.Input[str]] = pulumi.input_property("iamInstanceProfileArn")
    key_name: Optional[pulumi.Input[str]] = pulumi.input_property("keyName")
    monitoring: Optional[pulumi.Input[bool]] = pulumi.input_property("monitoring")
    placement_group: Optional[pulumi.Input[str]] = pulumi.input_property("placementGroup")
    placement_tenancy: Optional[pulumi.Input[str]] = pulumi.input_property("placementTenancy")
    root_block_devices: Optional[pulumi.Input[List[pulumi.Input['SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs']]]] = pulumi.input_property("rootBlockDevices")
    spot_price: Optional[pulumi.Input[str]] = pulumi.input_property("spotPrice")
    """
    The maximum spot bid for this override request.
    """
    subnet_id: Optional[pulumi.Input[str]] = pulumi.input_property("subnetId")
    """
    The subnet in which to launch the requested instance.
    """
    tags: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = pulumi.input_property("tags")
    """
    A map of tags to assign to the resource.
    """
    user_data: Optional[pulumi.Input[str]] = pulumi.input_property("userData")
    vpc_security_group_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("vpcSecurityGroupIds")
    weighted_capacity: Optional[pulumi.Input[str]] = pulumi.input_property("weightedCapacity")
    """
    The capacity added to the fleet by a fulfilled request.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, ami: pulumi.Input[str], instance_type: pulumi.Input[str], associate_public_ip_address: Optional[pulumi.Input[bool]] = None, availability_zone: Optional[pulumi.Input[str]] = None, ebs_block_devices: Optional[pulumi.Input[List[pulumi.Input['SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs']]]] = None, ebs_optimized: Optional[pulumi.Input[bool]] = None, ephemeral_block_devices: Optional[pulumi.Input[List[pulumi.Input['SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs']]]] = None, iam_instance_profile: Optional[pulumi.Input[str]] = None, iam_instance_profile_arn: Optional[pulumi.Input[str]] = None, key_name: Optional[pulumi.Input[str]] = None, monitoring: Optional[pulumi.Input[bool]] = None, placement_group: Optional[pulumi.Input[str]] = None, placement_tenancy: Optional[pulumi.Input[str]] = None, root_block_devices: Optional[pulumi.Input[List[pulumi.Input['SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs']]]] = None, spot_price: Optional[pulumi.Input[str]] = None, subnet_id: Optional[pulumi.Input[str]] = None, tags: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, user_data: Optional[pulumi.Input[str]] = None, vpc_security_group_ids: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, weighted_capacity: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] instance_type: The type of instance to request.
        :param pulumi.Input[str] availability_zone: The availability zone in which to place the request.
        :param pulumi.Input[str] spot_price: The maximum spot bid for this override request.
        :param pulumi.Input[str] subnet_id: The subnet in which to launch the requested instance.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] tags: A map of tags to assign to the resource.
        :param pulumi.Input[str] weighted_capacity: The capacity added to the fleet by a fulfilled request.
        """
        __self__.ami = ami
        __self__.instance_type = instance_type
        __self__.associate_public_ip_address = associate_public_ip_address
        __self__.availability_zone = availability_zone
        __self__.ebs_block_devices = ebs_block_devices
        __self__.ebs_optimized = ebs_optimized
        __self__.ephemeral_block_devices = ephemeral_block_devices
        __self__.iam_instance_profile = iam_instance_profile
        __self__.iam_instance_profile_arn = iam_instance_profile_arn
        __self__.key_name = key_name
        __self__.monitoring = monitoring
        __self__.placement_group = placement_group
        __self__.placement_tenancy = placement_tenancy
        __self__.root_block_devices = root_block_devices
        __self__.spot_price = spot_price
        __self__.subnet_id = subnet_id
        __self__.tags = tags
        __self__.user_data = user_data
        __self__.vpc_security_group_ids = vpc_security_group_ids
        __self__.weighted_capacity = weighted_capacity

@pulumi.input_type
class SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs:
    device_name: pulumi.Input[str] = pulumi.input_property("deviceName")
    delete_on_termination: Optional[pulumi.Input[bool]] = pulumi.input_property("deleteOnTermination")
    encrypted: Optional[pulumi.Input[bool]] = pulumi.input_property("encrypted")
    iops: Optional[pulumi.Input[float]] = pulumi.input_property("iops")
    kms_key_id: Optional[pulumi.Input[str]] = pulumi.input_property("kmsKeyId")
    snapshot_id: Optional[pulumi.Input[str]] = pulumi.input_property("snapshotId")
    volume_size: Optional[pulumi.Input[float]] = pulumi.input_property("volumeSize")
    volume_type: Optional[pulumi.Input[str]] = pulumi.input_property("volumeType")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, device_name: pulumi.Input[str], delete_on_termination: Optional[pulumi.Input[bool]] = None, encrypted: Optional[pulumi.Input[bool]] = None, iops: Optional[pulumi.Input[float]] = None, kms_key_id: Optional[pulumi.Input[str]] = None, snapshot_id: Optional[pulumi.Input[str]] = None, volume_size: Optional[pulumi.Input[float]] = None, volume_type: Optional[pulumi.Input[str]] = None) -> None:
        __self__.device_name = device_name
        __self__.delete_on_termination = delete_on_termination
        __self__.encrypted = encrypted
        __self__.iops = iops
        __self__.kms_key_id = kms_key_id
        __self__.snapshot_id = snapshot_id
        __self__.volume_size = volume_size
        __self__.volume_type = volume_type

@pulumi.input_type
class SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs:
    device_name: pulumi.Input[str] = pulumi.input_property("deviceName")
    virtual_name: pulumi.Input[str] = pulumi.input_property("virtualName")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, device_name: pulumi.Input[str], virtual_name: pulumi.Input[str]) -> None:
        __self__.device_name = device_name
        __self__.virtual_name = virtual_name

@pulumi.input_type
class SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs:
    delete_on_termination: Optional[pulumi.Input[bool]] = pulumi.input_property("deleteOnTermination")
    encrypted: Optional[pulumi.Input[bool]] = pulumi.input_property("encrypted")
    iops: Optional[pulumi.Input[float]] = pulumi.input_property("iops")
    kms_key_id: Optional[pulumi.Input[str]] = pulumi.input_property("kmsKeyId")
    volume_size: Optional[pulumi.Input[float]] = pulumi.input_property("volumeSize")
    volume_type: Optional[pulumi.Input[str]] = pulumi.input_property("volumeType")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, delete_on_termination: Optional[pulumi.Input[bool]] = None, encrypted: Optional[pulumi.Input[bool]] = None, iops: Optional[pulumi.Input[float]] = None, kms_key_id: Optional[pulumi.Input[str]] = None, volume_size: Optional[pulumi.Input[float]] = None, volume_type: Optional[pulumi.Input[str]] = None) -> None:
        __self__.delete_on_termination = delete_on_termination
        __self__.encrypted = encrypted
        __self__.iops = iops
        __self__.kms_key_id = kms_key_id
        __self__.volume_size = volume_size
        __self__.volume_type = volume_type

@pulumi.input_type
class SpotFleetRequestLaunchTemplateConfigArgs:
    launch_template_specification: pulumi.Input['SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationArgs'] = pulumi.input_property("launchTemplateSpecification")
    """
    Launch template specification. See Launch Template Specification below for more details.
    """
    overrides: Optional[pulumi.Input[List[pulumi.Input['SpotFleetRequestLaunchTemplateConfigOverrideArgs']]]] = pulumi.input_property("overrides")
    """
    One or more override configurations. See Overrides below for more details.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, launch_template_specification: pulumi.Input['SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationArgs'], overrides: Optional[pulumi.Input[List[pulumi.Input['SpotFleetRequestLaunchTemplateConfigOverrideArgs']]]] = None) -> None:
        """
        :param pulumi.Input['SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationArgs'] launch_template_specification: Launch template specification. See Launch Template Specification below for more details.
        :param pulumi.Input[List[pulumi.Input['SpotFleetRequestLaunchTemplateConfigOverrideArgs']]] overrides: One or more override configurations. See Overrides below for more details.
        """
        __self__.launch_template_specification = launch_template_specification
        __self__.overrides = overrides

@pulumi.input_type
class SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecificationArgs:
    id: Optional[pulumi.Input[str]] = pulumi.input_property("id")
    """
    The ID of the launch template. Conflicts with `name`.
    """
    name: Optional[pulumi.Input[str]] = pulumi.input_property("name")
    """
    The name of the launch template. Conflicts with `id`.
    """
    version: Optional[pulumi.Input[str]] = pulumi.input_property("version")
    """
    Template version. Unlike the autoscaling equivalent, does not support `$Latest` or `$Default`, so use the launch_template resource's attribute, e.g. `"${aws_launch_template.foo.latest_version}"`. It will use the default version if omitted.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, id: Optional[pulumi.Input[str]] = None, name: Optional[pulumi.Input[str]] = None, version: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] id: The ID of the launch template. Conflicts with `name`.
        :param pulumi.Input[str] name: The name of the launch template. Conflicts with `id`.
        :param pulumi.Input[str] version: Template version. Unlike the autoscaling equivalent, does not support `$Latest` or `$Default`, so use the launch_template resource's attribute, e.g. `"${aws_launch_template.foo.latest_version}"`. It will use the default version if omitted.
        """
        __self__.id = id
        __self__.name = name
        __self__.version = version

@pulumi.input_type
class SpotFleetRequestLaunchTemplateConfigOverrideArgs:
    availability_zone: Optional[pulumi.Input[str]] = pulumi.input_property("availabilityZone")
    """
    The availability zone in which to place the request.
    """
    instance_type: Optional[pulumi.Input[str]] = pulumi.input_property("instanceType")
    """
    The type of instance to request.
    """
    priority: Optional[pulumi.Input[float]] = pulumi.input_property("priority")
    """
    The priority for the launch template override. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority.
    """
    spot_price: Optional[pulumi.Input[str]] = pulumi.input_property("spotPrice")
    """
    The maximum spot bid for this override request.
    """
    subnet_id: Optional[pulumi.Input[str]] = pulumi.input_property("subnetId")
    """
    The subnet in which to launch the requested instance.
    """
    weighted_capacity: Optional[pulumi.Input[float]] = pulumi.input_property("weightedCapacity")
    """
    The capacity added to the fleet by a fulfilled request.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, availability_zone: Optional[pulumi.Input[str]] = None, instance_type: Optional[pulumi.Input[str]] = None, priority: Optional[pulumi.Input[float]] = None, spot_price: Optional[pulumi.Input[str]] = None, subnet_id: Optional[pulumi.Input[str]] = None, weighted_capacity: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[str] availability_zone: The availability zone in which to place the request.
        :param pulumi.Input[str] instance_type: The type of instance to request.
        :param pulumi.Input[float] priority: The priority for the launch template override. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority.
        :param pulumi.Input[str] spot_price: The maximum spot bid for this override request.
        :param pulumi.Input[str] subnet_id: The subnet in which to launch the requested instance.
        :param pulumi.Input[float] weighted_capacity: The capacity added to the fleet by a fulfilled request.
        """
        __self__.availability_zone = availability_zone
        __self__.instance_type = instance_type
        __self__.priority = priority
        __self__.spot_price = spot_price
        __self__.subnet_id = subnet_id
        __self__.weighted_capacity = weighted_capacity

@pulumi.input_type
class SpotInstanceRequestCreditSpecificationArgs:
    cpu_credits: Optional[pulumi.Input[str]] = pulumi.input_property("cpuCredits")
    """
    The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, cpu_credits: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] cpu_credits: The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
        """
        __self__.cpu_credits = cpu_credits

@pulumi.input_type
class SpotInstanceRequestEbsBlockDeviceArgs:
    device_name: pulumi.Input[str] = pulumi.input_property("deviceName")
    """
    The name of the device to mount.
    """
    delete_on_termination: Optional[pulumi.Input[bool]] = pulumi.input_property("deleteOnTermination")
    """
    Whether the volume should be destroyed
    on instance termination (Default: `true`).
    """
    encrypted: Optional[pulumi.Input[bool]] = pulumi.input_property("encrypted")
    """
    Enables [EBS
    encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
    on the volume (Default: `false`). Cannot be used with `snapshot_id`. Must be configured to perform drift detection.
    """
    iops: Optional[pulumi.Input[float]] = pulumi.input_property("iops")
    """
    The amount of provisioned
    [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
    This must be set with a `volume_type` of `"io1"`.
    """
    kms_key_id: Optional[pulumi.Input[str]] = pulumi.input_property("kmsKeyId")
    """
    Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
    """
    snapshot_id: Optional[pulumi.Input[str]] = pulumi.input_property("snapshotId")
    """
    The Snapshot ID to mount.
    """
    volume_id: Optional[pulumi.Input[str]] = pulumi.input_property("volumeId")
    volume_size: Optional[pulumi.Input[float]] = pulumi.input_property("volumeSize")
    """
    The size of the volume in gibibytes (GiB).
    """
    volume_type: Optional[pulumi.Input[str]] = pulumi.input_property("volumeType")
    """
    The type of volume. Can be `"standard"`, `"gp2"`,
    or `"io1"`. (Default: `"gp2"`).
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, device_name: pulumi.Input[str], delete_on_termination: Optional[pulumi.Input[bool]] = None, encrypted: Optional[pulumi.Input[bool]] = None, iops: Optional[pulumi.Input[float]] = None, kms_key_id: Optional[pulumi.Input[str]] = None, snapshot_id: Optional[pulumi.Input[str]] = None, volume_id: Optional[pulumi.Input[str]] = None, volume_size: Optional[pulumi.Input[float]] = None, volume_type: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] device_name: The name of the device to mount.
        :param pulumi.Input[bool] delete_on_termination: Whether the volume should be destroyed
               on instance termination (Default: `true`).
        :param pulumi.Input[bool] encrypted: Enables [EBS
               encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
               on the volume (Default: `false`). Cannot be used with `snapshot_id`. Must be configured to perform drift detection.
        :param pulumi.Input[float] iops: The amount of provisioned
               [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
               This must be set with a `volume_type` of `"io1"`.
        :param pulumi.Input[str] kms_key_id: Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
        :param pulumi.Input[str] snapshot_id: The Snapshot ID to mount.
        :param pulumi.Input[float] volume_size: The size of the volume in gibibytes (GiB).
        :param pulumi.Input[str] volume_type: The type of volume. Can be `"standard"`, `"gp2"`,
               or `"io1"`. (Default: `"gp2"`).
        """
        __self__.device_name = device_name
        __self__.delete_on_termination = delete_on_termination
        __self__.encrypted = encrypted
        __self__.iops = iops
        __self__.kms_key_id = kms_key_id
        __self__.snapshot_id = snapshot_id
        __self__.volume_id = volume_id
        __self__.volume_size = volume_size
        __self__.volume_type = volume_type

@pulumi.input_type
class SpotInstanceRequestEphemeralBlockDeviceArgs:
    device_name: pulumi.Input[str] = pulumi.input_property("deviceName")
    """
    The name of the block device to mount on the instance.
    """
    no_device: Optional[pulumi.Input[bool]] = pulumi.input_property("noDevice")
    """
    Suppresses the specified device included in the AMI's block device mapping.
    """
    virtual_name: Optional[pulumi.Input[str]] = pulumi.input_property("virtualName")
    """
    The [Instance Store Device
    Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
    (e.g. `"ephemeral0"`).
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, device_name: pulumi.Input[str], no_device: Optional[pulumi.Input[bool]] = None, virtual_name: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] device_name: The name of the block device to mount on the instance.
        :param pulumi.Input[bool] no_device: Suppresses the specified device included in the AMI's block device mapping.
        :param pulumi.Input[str] virtual_name: The [Instance Store Device
               Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
               (e.g. `"ephemeral0"`).
        """
        __self__.device_name = device_name
        __self__.no_device = no_device
        __self__.virtual_name = virtual_name

@pulumi.input_type
class SpotInstanceRequestMetadataOptionsArgs:
    http_endpoint: Optional[pulumi.Input[str]] = pulumi.input_property("httpEndpoint")
    """
    Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
    """
    http_put_response_hop_limit: Optional[pulumi.Input[float]] = pulumi.input_property("httpPutResponseHopLimit")
    """
    The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
    """
    http_tokens: Optional[pulumi.Input[str]] = pulumi.input_property("httpTokens")
    """
    Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, http_endpoint: Optional[pulumi.Input[str]] = None, http_put_response_hop_limit: Optional[pulumi.Input[float]] = None, http_tokens: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] http_endpoint: Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
        :param pulumi.Input[float] http_put_response_hop_limit: The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
        :param pulumi.Input[str] http_tokens: Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
        """
        __self__.http_endpoint = http_endpoint
        __self__.http_put_response_hop_limit = http_put_response_hop_limit
        __self__.http_tokens = http_tokens

@pulumi.input_type
class SpotInstanceRequestNetworkInterfaceArgs:
    device_index: pulumi.Input[float] = pulumi.input_property("deviceIndex")
    """
    The integer index of the network interface attachment. Limited by instance type.
    """
    network_interface_id: pulumi.Input[str] = pulumi.input_property("networkInterfaceId")
    """
    The ID of the network interface to attach.
    """
    delete_on_termination: Optional[pulumi.Input[bool]] = pulumi.input_property("deleteOnTermination")
    """
    Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, device_index: pulumi.Input[float], network_interface_id: pulumi.Input[str], delete_on_termination: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[float] device_index: The integer index of the network interface attachment. Limited by instance type.
        :param pulumi.Input[str] network_interface_id: The ID of the network interface to attach.
        :param pulumi.Input[bool] delete_on_termination: Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
        """
        __self__.device_index = device_index
        __self__.network_interface_id = network_interface_id
        __self__.delete_on_termination = delete_on_termination

@pulumi.input_type
class SpotInstanceRequestRootBlockDeviceArgs:
    delete_on_termination: Optional[pulumi.Input[bool]] = pulumi.input_property("deleteOnTermination")
    """
    Whether the volume should be destroyed
    on instance termination (Default: `true`).
    """
    device_name: Optional[pulumi.Input[str]] = pulumi.input_property("deviceName")
    """
    The name of the device to mount.
    """
    encrypted: Optional[pulumi.Input[bool]] = pulumi.input_property("encrypted")
    """
    Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
    """
    iops: Optional[pulumi.Input[float]] = pulumi.input_property("iops")
    """
    The amount of provisioned
    [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
    This is only valid for `volume_type` of `"io1"`, and must be specified if
    using that type
    """
    kms_key_id: Optional[pulumi.Input[str]] = pulumi.input_property("kmsKeyId")
    """
    Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
    """
    volume_id: Optional[pulumi.Input[str]] = pulumi.input_property("volumeId")
    volume_size: Optional[pulumi.Input[float]] = pulumi.input_property("volumeSize")
    """
    The size of the volume in gibibytes (GiB).
    """
    volume_type: Optional[pulumi.Input[str]] = pulumi.input_property("volumeType")
    """
    The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, delete_on_termination: Optional[pulumi.Input[bool]] = None, device_name: Optional[pulumi.Input[str]] = None, encrypted: Optional[pulumi.Input[bool]] = None, iops: Optional[pulumi.Input[float]] = None, kms_key_id: Optional[pulumi.Input[str]] = None, volume_id: Optional[pulumi.Input[str]] = None, volume_size: Optional[pulumi.Input[float]] = None, volume_type: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[bool] delete_on_termination: Whether the volume should be destroyed
               on instance termination (Default: `true`).
        :param pulumi.Input[str] device_name: The name of the device to mount.
        :param pulumi.Input[bool] encrypted: Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
        :param pulumi.Input[float] iops: The amount of provisioned
               [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
               This is only valid for `volume_type` of `"io1"`, and must be specified if
               using that type
        :param pulumi.Input[str] kms_key_id: Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
        :param pulumi.Input[float] volume_size: The size of the volume in gibibytes (GiB).
        :param pulumi.Input[str] volume_type: The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
        """
        __self__.delete_on_termination = delete_on_termination
        __self__.device_name = device_name
        __self__.encrypted = encrypted
        __self__.iops = iops
        __self__.kms_key_id = kms_key_id
        __self__.volume_id = volume_id
        __self__.volume_size = volume_size
        __self__.volume_type = volume_type

@pulumi.input_type
class TrafficMirrorFilterRuleDestinationPortRangeArgs:
    from_port: Optional[pulumi.Input[float]] = pulumi.input_property("fromPort")
    """
    Starting port of the range
    """
    to_port: Optional[pulumi.Input[float]] = pulumi.input_property("toPort")
    """
    Ending port of the range
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, from_port: Optional[pulumi.Input[float]] = None, to_port: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[float] from_port: Starting port of the range
        :param pulumi.Input[float] to_port: Ending port of the range
        """
        __self__.from_port = from_port
        __self__.to_port = to_port

@pulumi.input_type
class TrafficMirrorFilterRuleSourcePortRangeArgs:
    from_port: Optional[pulumi.Input[float]] = pulumi.input_property("fromPort")
    """
    Starting port of the range
    """
    to_port: Optional[pulumi.Input[float]] = pulumi.input_property("toPort")
    """
    Ending port of the range
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, from_port: Optional[pulumi.Input[float]] = None, to_port: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[float] from_port: Starting port of the range
        :param pulumi.Input[float] to_port: Ending port of the range
        """
        __self__.from_port = from_port
        __self__.to_port = to_port

@pulumi.input_type
class VpcEndpointDnsEntryArgs:
    dns_name: Optional[pulumi.Input[str]] = pulumi.input_property("dnsName")
    """
    The DNS name.
    """
    hosted_zone_id: Optional[pulumi.Input[str]] = pulumi.input_property("hostedZoneId")
    """
    The ID of the private hosted zone.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, dns_name: Optional[pulumi.Input[str]] = None, hosted_zone_id: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] dns_name: The DNS name.
        :param pulumi.Input[str] hosted_zone_id: The ID of the private hosted zone.
        """
        __self__.dns_name = dns_name
        __self__.hosted_zone_id = hosted_zone_id

@pulumi.input_type
class VpcPeeringConnectionAccepterArgs:
    allow_classic_link_to_remote_vpc: Optional[pulumi.Input[bool]] = pulumi.input_property("allowClassicLinkToRemoteVpc")
    """
    Allow a local linked EC2-Classic instance to communicate
    with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
    to the remote VPC.
    """
    allow_remote_vpc_dns_resolution: Optional[pulumi.Input[bool]] = pulumi.input_property("allowRemoteVpcDnsResolution")
    """
    Allow a local VPC to resolve public DNS hostnames to
    private IP addresses when queried from instances in the peer VPC. This is
    [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
    inter-region VPC peering.
    """
    allow_vpc_to_remote_classic_link: Optional[pulumi.Input[bool]] = pulumi.input_property("allowVpcToRemoteClassicLink")
    """
    Allow a local VPC to communicate with a linked EC2-Classic
    instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
    connection.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, allow_classic_link_to_remote_vpc: Optional[pulumi.Input[bool]] = None, allow_remote_vpc_dns_resolution: Optional[pulumi.Input[bool]] = None, allow_vpc_to_remote_classic_link: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[bool] allow_classic_link_to_remote_vpc: Allow a local linked EC2-Classic instance to communicate
               with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
               to the remote VPC.
        :param pulumi.Input[bool] allow_remote_vpc_dns_resolution: Allow a local VPC to resolve public DNS hostnames to
               private IP addresses when queried from instances in the peer VPC. This is
               [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
               inter-region VPC peering.
        :param pulumi.Input[bool] allow_vpc_to_remote_classic_link: Allow a local VPC to communicate with a linked EC2-Classic
               instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
               connection.
        """
        __self__.allow_classic_link_to_remote_vpc = allow_classic_link_to_remote_vpc
        __self__.allow_remote_vpc_dns_resolution = allow_remote_vpc_dns_resolution
        __self__.allow_vpc_to_remote_classic_link = allow_vpc_to_remote_classic_link

@pulumi.input_type
class VpcPeeringConnectionAccepterAccepterArgs:
    allow_classic_link_to_remote_vpc: Optional[pulumi.Input[bool]] = pulumi.input_property("allowClassicLinkToRemoteVpc")
    """
    Indicates whether a local ClassicLink connection can communicate
    with the peer VPC over the VPC Peering Connection.
    """
    allow_remote_vpc_dns_resolution: Optional[pulumi.Input[bool]] = pulumi.input_property("allowRemoteVpcDnsResolution")
    """
    Indicates whether a local VPC can resolve public DNS hostnames to
    private IP addresses when queried from instances in a peer VPC.
    """
    allow_vpc_to_remote_classic_link: Optional[pulumi.Input[bool]] = pulumi.input_property("allowVpcToRemoteClassicLink")
    """
    Indicates whether a local VPC can communicate with a ClassicLink
    connection in the peer VPC over the VPC Peering Connection.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, allow_classic_link_to_remote_vpc: Optional[pulumi.Input[bool]] = None, allow_remote_vpc_dns_resolution: Optional[pulumi.Input[bool]] = None, allow_vpc_to_remote_classic_link: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[bool] allow_classic_link_to_remote_vpc: Indicates whether a local ClassicLink connection can communicate
               with the peer VPC over the VPC Peering Connection.
        :param pulumi.Input[bool] allow_remote_vpc_dns_resolution: Indicates whether a local VPC can resolve public DNS hostnames to
               private IP addresses when queried from instances in a peer VPC.
        :param pulumi.Input[bool] allow_vpc_to_remote_classic_link: Indicates whether a local VPC can communicate with a ClassicLink
               connection in the peer VPC over the VPC Peering Connection.
        """
        __self__.allow_classic_link_to_remote_vpc = allow_classic_link_to_remote_vpc
        __self__.allow_remote_vpc_dns_resolution = allow_remote_vpc_dns_resolution
        __self__.allow_vpc_to_remote_classic_link = allow_vpc_to_remote_classic_link

@pulumi.input_type
class VpcPeeringConnectionAccepterRequesterArgs:
    allow_classic_link_to_remote_vpc: Optional[pulumi.Input[bool]] = pulumi.input_property("allowClassicLinkToRemoteVpc")
    """
    Indicates whether a local ClassicLink connection can communicate
    with the peer VPC over the VPC Peering Connection.
    """
    allow_remote_vpc_dns_resolution: Optional[pulumi.Input[bool]] = pulumi.input_property("allowRemoteVpcDnsResolution")
    """
    Indicates whether a local VPC can resolve public DNS hostnames to
    private IP addresses when queried from instances in a peer VPC.
    """
    allow_vpc_to_remote_classic_link: Optional[pulumi.Input[bool]] = pulumi.input_property("allowVpcToRemoteClassicLink")
    """
    Indicates whether a local VPC can communicate with a ClassicLink
    connection in the peer VPC over the VPC Peering Connection.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, allow_classic_link_to_remote_vpc: Optional[pulumi.Input[bool]] = None, allow_remote_vpc_dns_resolution: Optional[pulumi.Input[bool]] = None, allow_vpc_to_remote_classic_link: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[bool] allow_classic_link_to_remote_vpc: Indicates whether a local ClassicLink connection can communicate
               with the peer VPC over the VPC Peering Connection.
        :param pulumi.Input[bool] allow_remote_vpc_dns_resolution: Indicates whether a local VPC can resolve public DNS hostnames to
               private IP addresses when queried from instances in a peer VPC.
        :param pulumi.Input[bool] allow_vpc_to_remote_classic_link: Indicates whether a local VPC can communicate with a ClassicLink
               connection in the peer VPC over the VPC Peering Connection.
        """
        __self__.allow_classic_link_to_remote_vpc = allow_classic_link_to_remote_vpc
        __self__.allow_remote_vpc_dns_resolution = allow_remote_vpc_dns_resolution
        __self__.allow_vpc_to_remote_classic_link = allow_vpc_to_remote_classic_link

@pulumi.input_type
class VpcPeeringConnectionRequesterArgs:
    allow_classic_link_to_remote_vpc: Optional[pulumi.Input[bool]] = pulumi.input_property("allowClassicLinkToRemoteVpc")
    """
    Allow a local linked EC2-Classic instance to communicate
    with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
    to the remote VPC.
    """
    allow_remote_vpc_dns_resolution: Optional[pulumi.Input[bool]] = pulumi.input_property("allowRemoteVpcDnsResolution")
    """
    Allow a local VPC to resolve public DNS hostnames to
    private IP addresses when queried from instances in the peer VPC. This is
    [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
    inter-region VPC peering.
    """
    allow_vpc_to_remote_classic_link: Optional[pulumi.Input[bool]] = pulumi.input_property("allowVpcToRemoteClassicLink")
    """
    Allow a local VPC to communicate with a linked EC2-Classic
    instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
    connection.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, allow_classic_link_to_remote_vpc: Optional[pulumi.Input[bool]] = None, allow_remote_vpc_dns_resolution: Optional[pulumi.Input[bool]] = None, allow_vpc_to_remote_classic_link: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[bool] allow_classic_link_to_remote_vpc: Allow a local linked EC2-Classic instance to communicate
               with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
               to the remote VPC.
        :param pulumi.Input[bool] allow_remote_vpc_dns_resolution: Allow a local VPC to resolve public DNS hostnames to
               private IP addresses when queried from instances in the peer VPC. This is
               [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
               inter-region VPC peering.
        :param pulumi.Input[bool] allow_vpc_to_remote_classic_link: Allow a local VPC to communicate with a linked EC2-Classic
               instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
               connection.
        """
        __self__.allow_classic_link_to_remote_vpc = allow_classic_link_to_remote_vpc
        __self__.allow_remote_vpc_dns_resolution = allow_remote_vpc_dns_resolution
        __self__.allow_vpc_to_remote_classic_link = allow_vpc_to_remote_classic_link

@pulumi.input_type
class VpnConnectionRouteArgs:
    destination_cidr_block: Optional[pulumi.Input[str]] = pulumi.input_property("destinationCidrBlock")
    source: Optional[pulumi.Input[str]] = pulumi.input_property("source")
    state: Optional[pulumi.Input[str]] = pulumi.input_property("state")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, destination_cidr_block: Optional[pulumi.Input[str]] = None, source: Optional[pulumi.Input[str]] = None, state: Optional[pulumi.Input[str]] = None) -> None:
        __self__.destination_cidr_block = destination_cidr_block
        __self__.source = source
        __self__.state = state

@pulumi.input_type
class VpnConnectionVgwTelemetryArgs:
    accepted_route_count: Optional[pulumi.Input[float]] = pulumi.input_property("acceptedRouteCount")
    last_status_change: Optional[pulumi.Input[str]] = pulumi.input_property("lastStatusChange")
    outside_ip_address: Optional[pulumi.Input[str]] = pulumi.input_property("outsideIpAddress")
    status: Optional[pulumi.Input[str]] = pulumi.input_property("status")
    status_message: Optional[pulumi.Input[str]] = pulumi.input_property("statusMessage")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, accepted_route_count: Optional[pulumi.Input[float]] = None, last_status_change: Optional[pulumi.Input[str]] = None, outside_ip_address: Optional[pulumi.Input[str]] = None, status: Optional[pulumi.Input[str]] = None, status_message: Optional[pulumi.Input[str]] = None) -> None:
        __self__.accepted_route_count = accepted_route_count
        __self__.last_status_change = last_status_change
        __self__.outside_ip_address = outside_ip_address
        __self__.status = status
        __self__.status_message = status_message

@pulumi.input_type
class GetCoipPoolFilterArgs:
    name: str = pulumi.input_property("name")
    """
    The name of the field to filter by, as defined by
    [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCoipPools.html).
    """
    values: List[str] = pulumi.input_property("values")
    """
    Set of values that are accepted for the given field.
    A COIP Pool will be selected if any one of the given values matches.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        """
        :param str name: The name of the field to filter by, as defined by
               [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCoipPools.html).
        :param List[str] values: Set of values that are accepted for the given field.
               A COIP Pool will be selected if any one of the given values matches.
        """
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetCoipPoolsFilterArgs:
    name: str = pulumi.input_property("name")
    """
    The name of the field to filter by, as defined by
    [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCoipPools.html).
    """
    values: List[str] = pulumi.input_property("values")
    """
    Set of values that are accepted for the given field.
    A COIP Pool will be selected if any one of the given values matches.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        """
        :param str name: The name of the field to filter by, as defined by
               [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCoipPools.html).
        :param List[str] values: Set of values that are accepted for the given field.
               A COIP Pool will be selected if any one of the given values matches.
        """
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetCustomerGatewayFilterArgs:
    name: str = pulumi.input_property("name")
    values: List[str] = pulumi.input_property("values")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetInstanceFilterArgs:
    name: str = pulumi.input_property("name")
    values: List[str] = pulumi.input_property("values")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetInstanceTypeOfferingFilterArgs:
    name: str = pulumi.input_property("name")
    """
    Name of the filter. The `location` filter depends on the top-level `location_type` argument and if not specified, defaults to the current region.
    """
    values: List[str] = pulumi.input_property("values")
    """
    List of one or more values for the filter.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        """
        :param str name: Name of the filter. The `location` filter depends on the top-level `location_type` argument and if not specified, defaults to the current region.
        :param List[str] values: List of one or more values for the filter.
        """
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetInstanceTypeOfferingsFilterArgs:
    name: str = pulumi.input_property("name")
    """
    Name of the filter. The `location` filter depends on the top-level `location_type` argument and if not specified, defaults to the current region.
    """
    values: List[str] = pulumi.input_property("values")
    """
    List of one or more values for the filter.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        """
        :param str name: Name of the filter. The `location` filter depends on the top-level `location_type` argument and if not specified, defaults to the current region.
        :param List[str] values: List of one or more values for the filter.
        """
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetInstancesFilterArgs:
    name: str = pulumi.input_property("name")
    values: List[str] = pulumi.input_property("values")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetInternetGatewayFilterArgs:
    name: str = pulumi.input_property("name")
    """
    The name of the field to filter by, as defined by
    [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInternetGateways.html).
    """
    values: List[str] = pulumi.input_property("values")
    """
    Set of values that are accepted for the given field.
    An Internet Gateway will be selected if any one of the given values matches.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        """
        :param str name: The name of the field to filter by, as defined by
               [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInternetGateways.html).
        :param List[str] values: Set of values that are accepted for the given field.
               An Internet Gateway will be selected if any one of the given values matches.
        """
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetLaunchTemplateFilterArgs:
    name: str = pulumi.input_property("name")
    """
    The name of the filter field. Valid values can be found in the [EC2 DescribeLaunchTemplates API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html).
    """
    values: List[str] = pulumi.input_property("values")
    """
    Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        """
        :param str name: The name of the filter field. Valid values can be found in the [EC2 DescribeLaunchTemplates API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html).
        :param List[str] values: Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
        """
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetLocalGatewayFilterArgs:
    name: str = pulumi.input_property("name")
    """
    The name of the field to filter by, as defined by
    [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGateways.html).
    """
    values: List[str] = pulumi.input_property("values")
    """
    Set of values that are accepted for the given field.
    A Local Gateway will be selected if any one of the given values matches.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        """
        :param str name: The name of the field to filter by, as defined by
               [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGateways.html).
        :param List[str] values: Set of values that are accepted for the given field.
               A Local Gateway will be selected if any one of the given values matches.
        """
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetLocalGatewayRouteTableFilterArgs:
    name: str = pulumi.input_property("name")
    """
    The name of the field to filter by, as defined by
    [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayRouteTables.html).
    """
    values: List[str] = pulumi.input_property("values")
    """
    Set of values that are accepted for the given field.
    A local gateway route table will be selected if any one of the given values matches.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        """
        :param str name: The name of the field to filter by, as defined by
               [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayRouteTables.html).
        :param List[str] values: Set of values that are accepted for the given field.
               A local gateway route table will be selected if any one of the given values matches.
        """
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetLocalGatewayRouteTablesFilterArgs:
    name: str = pulumi.input_property("name")
    """
    The name of the field to filter by, as defined by
    [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayRouteTables.html).
    """
    values: List[str] = pulumi.input_property("values")
    """
    Set of values that are accepted for the given field.
    A Local Gateway Route Table will be selected if any one of the given values matches.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        """
        :param str name: The name of the field to filter by, as defined by
               [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayRouteTables.html).
        :param List[str] values: Set of values that are accepted for the given field.
               A Local Gateway Route Table will be selected if any one of the given values matches.
        """
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetLocalGatewayVirtualInterfaceFilterArgs:
    name: str = pulumi.input_property("name")
    """
    Name of the filter.
    """
    values: List[str] = pulumi.input_property("values")
    """
    List of one or more values for the filter.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        """
        :param str name: Name of the filter.
        :param List[str] values: List of one or more values for the filter.
        """
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetLocalGatewayVirtualInterfaceGroupFilterArgs:
    name: str = pulumi.input_property("name")
    """
    Name of the filter.
    """
    values: List[str] = pulumi.input_property("values")
    """
    List of one or more values for the filter.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        """
        :param str name: Name of the filter.
        :param List[str] values: List of one or more values for the filter.
        """
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetLocalGatewayVirtualInterfaceGroupsFilterArgs:
    name: str = pulumi.input_property("name")
    """
    Name of the filter.
    """
    values: List[str] = pulumi.input_property("values")
    """
    List of one or more values for the filter.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        """
        :param str name: Name of the filter.
        :param List[str] values: List of one or more values for the filter.
        """
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetLocalGatewaysFilterArgs:
    name: str = pulumi.input_property("name")
    """
    The name of the field to filter by, as defined by
    [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGateways.html).
    """
    values: List[str] = pulumi.input_property("values")
    """
    Set of values that are accepted for the given field.
    A Local Gateway will be selected if any one of the given values matches.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        """
        :param str name: The name of the field to filter by, as defined by
               [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGateways.html).
        :param List[str] values: Set of values that are accepted for the given field.
               A Local Gateway will be selected if any one of the given values matches.
        """
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetNatGatewayFilterArgs:
    name: str = pulumi.input_property("name")
    """
    The name of the field to filter by, as defined by
    [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNatGateways.html).
    """
    values: List[str] = pulumi.input_property("values")
    """
    Set of values that are accepted for the given field.
    An Nat Gateway will be selected if any one of the given values matches.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        """
        :param str name: The name of the field to filter by, as defined by
               [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNatGateways.html).
        :param List[str] values: Set of values that are accepted for the given field.
               An Nat Gateway will be selected if any one of the given values matches.
        """
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetNetworkAclsFilterArgs:
    name: str = pulumi.input_property("name")
    """
    The name of the field to filter by, as defined by
    [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkAcls.html).
    """
    values: List[str] = pulumi.input_property("values")
    """
    Set of values that are accepted for the given field.
    A VPC will be selected if any one of the given values matches.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        """
        :param str name: The name of the field to filter by, as defined by
               [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkAcls.html).
        :param List[str] values: Set of values that are accepted for the given field.
               A VPC will be selected if any one of the given values matches.
        """
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetNetworkInterfaceFilterArgs:
    name: str = pulumi.input_property("name")
    values: List[str] = pulumi.input_property("values")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetNetworkInterfacesFilterArgs:
    name: str = pulumi.input_property("name")
    """
    The name of the field to filter by, as defined by
    [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfaces.html).
    """
    values: List[str] = pulumi.input_property("values")
    """
    Set of values that are accepted for the given field.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        """
        :param str name: The name of the field to filter by, as defined by
               [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfaces.html).
        :param List[str] values: Set of values that are accepted for the given field.
        """
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetRouteTableFilterArgs:
    name: str = pulumi.input_property("name")
    """
    The name of the field to filter by, as defined by
    [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).
    """
    values: List[str] = pulumi.input_property("values")
    """
    Set of values that are accepted for the given field.
    A Route Table will be selected if any one of the given values matches.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        """
        :param str name: The name of the field to filter by, as defined by
               [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).
        :param List[str] values: Set of values that are accepted for the given field.
               A Route Table will be selected if any one of the given values matches.
        """
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetRouteTablesFilterArgs:
    name: str = pulumi.input_property("name")
    """
    The name of the field to filter by, as defined by
    [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).
    """
    values: List[str] = pulumi.input_property("values")
    """
    Set of values that are accepted for the given field.
    A Route Table will be selected if any one of the given values matches.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        """
        :param str name: The name of the field to filter by, as defined by
               [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).
        :param List[str] values: Set of values that are accepted for the given field.
               A Route Table will be selected if any one of the given values matches.
        """
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetSecurityGroupFilterArgs:
    name: str = pulumi.input_property("name")
    """
    The name of the field to filter by, as defined by
    [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html).
    """
    values: List[str] = pulumi.input_property("values")
    """
    Set of values that are accepted for the given field.
    A Security Group will be selected if any one of the given values matches.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        """
        :param str name: The name of the field to filter by, as defined by
               [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html).
        :param List[str] values: Set of values that are accepted for the given field.
               A Security Group will be selected if any one of the given values matches.
        """
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetSecurityGroupsFilterArgs:
    name: str = pulumi.input_property("name")
    values: List[str] = pulumi.input_property("values")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetSubnetFilterArgs:
    name: str = pulumi.input_property("name")
    """
    The name of the field to filter by, as defined by
    [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
    For example, if matching against tag `Name`, use:
    """
    values: List[str] = pulumi.input_property("values")
    """
    Set of values that are accepted for the given field.
    A subnet will be selected if any one of the given values matches.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        """
        :param str name: The name of the field to filter by, as defined by
               [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
               For example, if matching against tag `Name`, use:
        :param List[str] values: Set of values that are accepted for the given field.
               A subnet will be selected if any one of the given values matches.
        """
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetSubnetIdsFilterArgs:
    name: str = pulumi.input_property("name")
    """
    The name of the field to filter by, as defined by
    [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
    For example, if matching against tag `Name`, use:
    """
    values: List[str] = pulumi.input_property("values")
    """
    Set of values that are accepted for the given field.
    Subnet IDs will be selected if any one of the given values match.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        """
        :param str name: The name of the field to filter by, as defined by
               [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
               For example, if matching against tag `Name`, use:
        :param List[str] values: Set of values that are accepted for the given field.
               Subnet IDs will be selected if any one of the given values match.
        """
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetVpcDhcpOptionsFilterArgs:
    name: str = pulumi.input_property("name")
    """
    The name of the field to filter.
    """
    values: List[str] = pulumi.input_property("values")
    """
    Set of values for filtering.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        """
        :param str name: The name of the field to filter.
        :param List[str] values: Set of values for filtering.
        """
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetVpcEndpointFilterArgs:
    name: str = pulumi.input_property("name")
    """
    The name of the field to filter by, as defined by
    [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpoints.html).
    """
    values: List[str] = pulumi.input_property("values")
    """
    Set of values that are accepted for the given field.
    A VPC Endpoint will be selected if any one of the given values matches.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        """
        :param str name: The name of the field to filter by, as defined by
               [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpoints.html).
        :param List[str] values: Set of values that are accepted for the given field.
               A VPC Endpoint will be selected if any one of the given values matches.
        """
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetVpcEndpointServiceFilterArgs:
    name: str = pulumi.input_property("name")
    """
    The name of the filter field. Valid values can be found in the [EC2 DescribeVpcEndpointServices API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServices.html).
    """
    values: List[str] = pulumi.input_property("values")
    """
    Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        """
        :param str name: The name of the filter field. Valid values can be found in the [EC2 DescribeVpcEndpointServices API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServices.html).
        :param List[str] values: Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
        """
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetVpcFilterArgs:
    name: str = pulumi.input_property("name")
    """
    The name of the field to filter by, as defined by
    [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).
    """
    values: List[str] = pulumi.input_property("values")
    """
    Set of values that are accepted for the given field.
    A VPC will be selected if any one of the given values matches.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        """
        :param str name: The name of the field to filter by, as defined by
               [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).
        :param List[str] values: Set of values that are accepted for the given field.
               A VPC will be selected if any one of the given values matches.
        """
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetVpcPeeringConnectionFilterArgs:
    name: str = pulumi.input_property("name")
    """
    The name of the field to filter by, as defined by
    [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html).
    """
    values: List[str] = pulumi.input_property("values")
    """
    Set of values that are accepted for the given field.
    A VPC Peering Connection will be selected if any one of the given values matches.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        """
        :param str name: The name of the field to filter by, as defined by
               [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html).
        :param List[str] values: Set of values that are accepted for the given field.
               A VPC Peering Connection will be selected if any one of the given values matches.
        """
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetVpcsFilterArgs:
    name: str = pulumi.input_property("name")
    """
    The name of the field to filter by, as defined by
    [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).
    """
    values: List[str] = pulumi.input_property("values")
    """
    Set of values that are accepted for the given field.
    A VPC will be selected if any one of the given values matches.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        """
        :param str name: The name of the field to filter by, as defined by
               [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).
        :param List[str] values: Set of values that are accepted for the given field.
               A VPC will be selected if any one of the given values matches.
        """
        __self__.name = name
        __self__.values = values

@pulumi.input_type
class GetVpnGatewayFilterArgs:
    name: str = pulumi.input_property("name")
    """
    The name of the field to filter by, as defined by
    [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnGateways.html).
    """
    values: List[str] = pulumi.input_property("values")
    """
    Set of values that are accepted for the given field.
    A VPN Gateway will be selected if any one of the given values matches.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: str, values: List[str]) -> None:
        """
        :param str name: The name of the field to filter by, as defined by
               [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnGateways.html).
        :param List[str] values: Set of values that are accepted for the given field.
               A VPN Gateway will be selected if any one of the given values matches.
        """
        __self__.name = name
        __self__.values = values

