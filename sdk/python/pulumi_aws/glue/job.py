# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables
from . import outputs
from ._inputs import *

__all__ = ['Job']


class Job(pulumi.CustomResource):
    allocated_capacity: pulumi.Output[float] = pulumi.output_property("allocatedCapacity")
    """
    **DEPRECATED** (Optional) The number of AWS Glue data processing units (DPUs) to allocate to this Job. At least 2 DPUs need to be allocated; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory.
    """
    arn: pulumi.Output[str] = pulumi.output_property("arn")
    """
    Amazon Resource Name (ARN) of Glue Job
    """
    command: pulumi.Output['outputs.JobCommand'] = pulumi.output_property("command")
    """
    The command of the job. Defined below.
    """
    connections: pulumi.Output[Optional[List[str]]] = pulumi.output_property("connections")
    """
    The list of connections used for this job.
    """
    default_arguments: pulumi.Output[Optional[Dict[str, str]]] = pulumi.output_property("defaultArguments")
    """
    The map of default arguments for this job. You can specify arguments here that your own job-execution script consumes, as well as arguments that AWS Glue itself consumes. For information about how to specify and consume your own Job arguments, see the [Calling AWS Glue APIs in Python](http://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-calling.html) topic in the developer guide. For information about the key-value pairs that AWS Glue consumes to set up your job, see the [Special Parameters Used by AWS Glue](http://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-glue-arguments.html) topic in the developer guide.
    """
    description: pulumi.Output[Optional[str]] = pulumi.output_property("description")
    """
    Description of the job.
    """
    execution_property: pulumi.Output['outputs.JobExecutionProperty'] = pulumi.output_property("executionProperty")
    """
    Execution property of the job. Defined below.
    """
    glue_version: pulumi.Output[str] = pulumi.output_property("glueVersion")
    """
    The version of glue to use, for example "1.0". For information about available versions, see the [AWS Glue Release Notes](https://docs.aws.amazon.com/glue/latest/dg/release-notes.html).
    """
    max_capacity: pulumi.Output[float] = pulumi.output_property("maxCapacity")
    """
    The maximum number of AWS Glue data processing units (DPUs) that can be allocated when this job runs. `Required` when `pythonshell` is set, accept either `0.0625` or `1.0`.
    """
    max_retries: pulumi.Output[Optional[float]] = pulumi.output_property("maxRetries")
    """
    The maximum number of times to retry this job if it fails.
    """
    name: pulumi.Output[str] = pulumi.output_property("name")
    """
    The name you assign to this job. It must be unique in your account.
    """
    notification_property: pulumi.Output['outputs.JobNotificationProperty'] = pulumi.output_property("notificationProperty")
    """
    Notification property of the job. Defined below.
    """
    number_of_workers: pulumi.Output[Optional[float]] = pulumi.output_property("numberOfWorkers")
    """
    The number of workers of a defined workerType that are allocated when a job runs.
    """
    role_arn: pulumi.Output[str] = pulumi.output_property("roleArn")
    """
    The ARN of the IAM role associated with this job.
    """
    security_configuration: pulumi.Output[Optional[str]] = pulumi.output_property("securityConfiguration")
    """
    The name of the Security Configuration to be associated with the job.
    """
    tags: pulumi.Output[Optional[Dict[str, str]]] = pulumi.output_property("tags")
    """
    Key-value map of resource tags
    """
    timeout: pulumi.Output[Optional[float]] = pulumi.output_property("timeout")
    """
    The job timeout in minutes. The default is 2880 minutes (48 hours).
    """
    worker_type: pulumi.Output[Optional[str]] = pulumi.output_property("workerType")
    """
    The type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, or G.2X.
    """
    # pylint: disable=no-self-argument
    def __init__(__self__, resource_name, opts: Optional[pulumi.ResourceOptions] = None, allocated_capacity: Optional[pulumi.Input[float]] = None, command: Optional[pulumi.Input[pulumi.InputType['JobCommandArgs']]] = None, connections: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, default_arguments: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, description: Optional[pulumi.Input[str]] = None, execution_property: Optional[pulumi.Input[pulumi.InputType['JobExecutionPropertyArgs']]] = None, glue_version: Optional[pulumi.Input[str]] = None, max_capacity: Optional[pulumi.Input[float]] = None, max_retries: Optional[pulumi.Input[float]] = None, name: Optional[pulumi.Input[str]] = None, notification_property: Optional[pulumi.Input[pulumi.InputType['JobNotificationPropertyArgs']]] = None, number_of_workers: Optional[pulumi.Input[float]] = None, role_arn: Optional[pulumi.Input[str]] = None, security_configuration: Optional[pulumi.Input[str]] = None, tags: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, timeout: Optional[pulumi.Input[float]] = None, worker_type: Optional[pulumi.Input[str]] = None, __props__=None, __name__=None, __opts__=None) -> None:
        """
        Provides a Glue Job resource.

        > Glue functionality, such as monitoring and logging of jobs, is typically managed with the `default_arguments` argument. See the [Special Parameters Used by AWS Glue](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html) topic in the Glue developer guide for additional information.

        ## Example Usage
        ### Python Job

        ```python
        import pulumi
        import pulumi_aws as aws

        example = aws.glue.Job("example",
            command={
                "scriptLocation": f"s3://{aws_s3_bucket['example']['bucket']}/example.py",
            },
            role_arn=aws_iam_role["example"]["arn"])
        ```
        ### Scala Job

        ```python
        import pulumi
        import pulumi_aws as aws

        example = aws.glue.Job("example",
            command={
                "scriptLocation": f"s3://{aws_s3_bucket['example']['bucket']}/example.scala",
            },
            default_arguments={
                "--job-language": "scala",
            },
            role_arn=aws_iam_role["example"]["arn"])
        ```
        ### Enabling CloudWatch Logs and Metrics

        ```python
        import pulumi
        import pulumi_aws as aws

        example_log_group = aws.cloudwatch.LogGroup("exampleLogGroup", retention_in_days=14)
        example_job = aws.glue.Job("exampleJob", default_arguments={
            "--continuous-log-logGroup": example_log_group.name,
            "--enable-continuous-cloudwatch-log": "true",
            "--enable-continuous-log-filter": "true",
            "--enable-metrics": "",
        })
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[float] allocated_capacity: **DEPRECATED** (Optional) The number of AWS Glue data processing units (DPUs) to allocate to this Job. At least 2 DPUs need to be allocated; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory.
        :param pulumi.Input[pulumi.InputType['JobCommandArgs']] command: The command of the job. Defined below.
        :param pulumi.Input[List[pulumi.Input[str]]] connections: The list of connections used for this job.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] default_arguments: The map of default arguments for this job. You can specify arguments here that your own job-execution script consumes, as well as arguments that AWS Glue itself consumes. For information about how to specify and consume your own Job arguments, see the [Calling AWS Glue APIs in Python](http://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-calling.html) topic in the developer guide. For information about the key-value pairs that AWS Glue consumes to set up your job, see the [Special Parameters Used by AWS Glue](http://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-glue-arguments.html) topic in the developer guide.
        :param pulumi.Input[str] description: Description of the job.
        :param pulumi.Input[pulumi.InputType['JobExecutionPropertyArgs']] execution_property: Execution property of the job. Defined below.
        :param pulumi.Input[str] glue_version: The version of glue to use, for example "1.0". For information about available versions, see the [AWS Glue Release Notes](https://docs.aws.amazon.com/glue/latest/dg/release-notes.html).
        :param pulumi.Input[float] max_capacity: The maximum number of AWS Glue data processing units (DPUs) that can be allocated when this job runs. `Required` when `pythonshell` is set, accept either `0.0625` or `1.0`.
        :param pulumi.Input[float] max_retries: The maximum number of times to retry this job if it fails.
        :param pulumi.Input[str] name: The name you assign to this job. It must be unique in your account.
        :param pulumi.Input[pulumi.InputType['JobNotificationPropertyArgs']] notification_property: Notification property of the job. Defined below.
        :param pulumi.Input[float] number_of_workers: The number of workers of a defined workerType that are allocated when a job runs.
        :param pulumi.Input[str] role_arn: The ARN of the IAM role associated with this job.
        :param pulumi.Input[str] security_configuration: The name of the Security Configuration to be associated with the job.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] tags: Key-value map of resource tags
        :param pulumi.Input[float] timeout: The job timeout in minutes. The default is 2880 minutes (48 hours).
        :param pulumi.Input[str] worker_type: The type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, or G.2X.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            if allocated_capacity is not None:
                warnings.warn("Please use attribute `max_capacity' instead. This attribute might be removed in future releases.", DeprecationWarning)
                pulumi.log.warn("allocated_capacity is deprecated: Please use attribute `max_capacity' instead. This attribute might be removed in future releases.")
            __props__['allocated_capacity'] = allocated_capacity
            if command is None:
                raise TypeError("Missing required property 'command'")
            __props__['command'] = command
            __props__['connections'] = connections
            __props__['default_arguments'] = default_arguments
            __props__['description'] = description
            __props__['execution_property'] = execution_property
            __props__['glue_version'] = glue_version
            __props__['max_capacity'] = max_capacity
            __props__['max_retries'] = max_retries
            __props__['name'] = name
            __props__['notification_property'] = notification_property
            __props__['number_of_workers'] = number_of_workers
            if role_arn is None:
                raise TypeError("Missing required property 'role_arn'")
            __props__['role_arn'] = role_arn
            __props__['security_configuration'] = security_configuration
            __props__['tags'] = tags
            __props__['timeout'] = timeout
            __props__['worker_type'] = worker_type
            __props__['arn'] = None
        super(Job, __self__).__init__(
            'aws:glue/job:Job',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str, id: str, opts: Optional[pulumi.ResourceOptions] = None, allocated_capacity: Optional[pulumi.Input[float]] = None, arn: Optional[pulumi.Input[str]] = None, command: Optional[pulumi.Input[pulumi.InputType['JobCommandArgs']]] = None, connections: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, default_arguments: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, description: Optional[pulumi.Input[str]] = None, execution_property: Optional[pulumi.Input[pulumi.InputType['JobExecutionPropertyArgs']]] = None, glue_version: Optional[pulumi.Input[str]] = None, max_capacity: Optional[pulumi.Input[float]] = None, max_retries: Optional[pulumi.Input[float]] = None, name: Optional[pulumi.Input[str]] = None, notification_property: Optional[pulumi.Input[pulumi.InputType['JobNotificationPropertyArgs']]] = None, number_of_workers: Optional[pulumi.Input[float]] = None, role_arn: Optional[pulumi.Input[str]] = None, security_configuration: Optional[pulumi.Input[str]] = None, tags: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, timeout: Optional[pulumi.Input[float]] = None, worker_type: Optional[pulumi.Input[str]] = None) -> 'Job':
        """
        Get an existing Job resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[float] allocated_capacity: **DEPRECATED** (Optional) The number of AWS Glue data processing units (DPUs) to allocate to this Job. At least 2 DPUs need to be allocated; the default is 10. A DPU is a relative measure of processing power that consists of 4 vCPUs of compute capacity and 16 GB of memory.
        :param pulumi.Input[str] arn: Amazon Resource Name (ARN) of Glue Job
        :param pulumi.Input[pulumi.InputType['JobCommandArgs']] command: The command of the job. Defined below.
        :param pulumi.Input[List[pulumi.Input[str]]] connections: The list of connections used for this job.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] default_arguments: The map of default arguments for this job. You can specify arguments here that your own job-execution script consumes, as well as arguments that AWS Glue itself consumes. For information about how to specify and consume your own Job arguments, see the [Calling AWS Glue APIs in Python](http://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-calling.html) topic in the developer guide. For information about the key-value pairs that AWS Glue consumes to set up your job, see the [Special Parameters Used by AWS Glue](http://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-glue-arguments.html) topic in the developer guide.
        :param pulumi.Input[str] description: Description of the job.
        :param pulumi.Input[pulumi.InputType['JobExecutionPropertyArgs']] execution_property: Execution property of the job. Defined below.
        :param pulumi.Input[str] glue_version: The version of glue to use, for example "1.0". For information about available versions, see the [AWS Glue Release Notes](https://docs.aws.amazon.com/glue/latest/dg/release-notes.html).
        :param pulumi.Input[float] max_capacity: The maximum number of AWS Glue data processing units (DPUs) that can be allocated when this job runs. `Required` when `pythonshell` is set, accept either `0.0625` or `1.0`.
        :param pulumi.Input[float] max_retries: The maximum number of times to retry this job if it fails.
        :param pulumi.Input[str] name: The name you assign to this job. It must be unique in your account.
        :param pulumi.Input[pulumi.InputType['JobNotificationPropertyArgs']] notification_property: Notification property of the job. Defined below.
        :param pulumi.Input[float] number_of_workers: The number of workers of a defined workerType that are allocated when a job runs.
        :param pulumi.Input[str] role_arn: The ARN of the IAM role associated with this job.
        :param pulumi.Input[str] security_configuration: The name of the Security Configuration to be associated with the job.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] tags: Key-value map of resource tags
        :param pulumi.Input[float] timeout: The job timeout in minutes. The default is 2880 minutes (48 hours).
        :param pulumi.Input[str] worker_type: The type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, or G.2X.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["allocated_capacity"] = allocated_capacity
        __props__["arn"] = arn
        __props__["command"] = command
        __props__["connections"] = connections
        __props__["default_arguments"] = default_arguments
        __props__["description"] = description
        __props__["execution_property"] = execution_property
        __props__["glue_version"] = glue_version
        __props__["max_capacity"] = max_capacity
        __props__["max_retries"] = max_retries
        __props__["name"] = name
        __props__["notification_property"] = notification_property
        __props__["number_of_workers"] = number_of_workers
        __props__["role_arn"] = role_arn
        __props__["security_configuration"] = security_configuration
        __props__["tags"] = tags
        __props__["timeout"] = timeout
        __props__["worker_type"] = worker_type
        return Job(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

