# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'DistributionCustomErrorResponse',
    'DistributionDefaultCacheBehavior',
    'DistributionDefaultCacheBehaviorForwardedValues',
    'DistributionDefaultCacheBehaviorForwardedValuesCookies',
    'DistributionDefaultCacheBehaviorLambdaFunctionAssociation',
    'DistributionLoggingConfig',
    'DistributionOrderedCacheBehavior',
    'DistributionOrderedCacheBehaviorForwardedValues',
    'DistributionOrderedCacheBehaviorForwardedValuesCookies',
    'DistributionOrderedCacheBehaviorLambdaFunctionAssociation',
    'DistributionOrigin',
    'DistributionOriginCustomHeader',
    'DistributionOriginCustomOriginConfig',
    'DistributionOriginGroup',
    'DistributionOriginGroupFailoverCriteria',
    'DistributionOriginGroupMember',
    'DistributionOriginS3OriginConfig',
    'DistributionRestrictions',
    'DistributionRestrictionsGeoRestriction',
    'DistributionViewerCertificate',
]

@pulumi.output_type
class DistributionCustomErrorResponse(dict):
    error_caching_min_ttl: Optional[float] = pulumi.output_property("errorCachingMinTtl")
    """
    The minimum amount of time you want
    HTTP error codes to stay in CloudFront caches before CloudFront queries your
    origin to see whether the object has been updated.
    """
    error_code: float = pulumi.output_property("errorCode")
    """
    The 4xx or 5xx HTTP status code that you want to
    customize.
    """
    response_code: Optional[float] = pulumi.output_property("responseCode")
    """
    The HTTP status code that you want CloudFront
    to return with the custom error page to the viewer.
    """
    response_page_path: Optional[str] = pulumi.output_property("responsePagePath")
    """
    The path of the custom error page (for
    example, `/custom_404.html`).
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DistributionDefaultCacheBehavior(dict):
    allowed_methods: List[str] = pulumi.output_property("allowedMethods")
    """
    Controls which HTTP methods CloudFront
    processes and forwards to your Amazon S3 bucket or your custom origin.
    """
    cached_methods: List[str] = pulumi.output_property("cachedMethods")
    """
    Controls whether CloudFront caches the
    response to requests using the specified HTTP methods.
    """
    compress: Optional[bool] = pulumi.output_property("compress")
    """
    Whether you want CloudFront to automatically
    compress content for web requests that include `Accept-Encoding: gzip` in
    the request header (default: `false`).
    """
    default_ttl: Optional[float] = pulumi.output_property("defaultTtl")
    """
    The default amount of time (in seconds) that an
    object is in a CloudFront cache before CloudFront forwards another request
    in the absence of an `Cache-Control max-age` or `Expires` header. Defaults to
    1 day.
    """
    field_level_encryption_id: Optional[str] = pulumi.output_property("fieldLevelEncryptionId")
    """
    Field level encryption configuration ID
    """
    forwarded_values: 'outputs.DistributionDefaultCacheBehaviorForwardedValues' = pulumi.output_property("forwardedValues")
    """
    The forwarded values configuration that specifies how CloudFront
    handles query strings, cookies and headers (maximum one).
    """
    lambda_function_associations: Optional[List['outputs.DistributionDefaultCacheBehaviorLambdaFunctionAssociation']] = pulumi.output_property("lambdaFunctionAssociations")
    """
    A config block that triggers a lambda function with
    specific actions. Defined below, maximum 4.
    """
    max_ttl: Optional[float] = pulumi.output_property("maxTtl")
    """
    The maximum amount of time (in seconds) that an
    object is in a CloudFront cache before CloudFront forwards another request
    to your origin to determine whether the object has been updated. Only
    effective in the presence of `Cache-Control max-age`, `Cache-Control
    s-maxage`, and `Expires` headers. Defaults to 365 days.
    """
    min_ttl: Optional[float] = pulumi.output_property("minTtl")
    """
    The minimum amount of time that you want objects to
    stay in CloudFront caches before CloudFront queries your origin to see
    whether the object has been updated. Defaults to 0 seconds.
    """
    smooth_streaming: Optional[bool] = pulumi.output_property("smoothStreaming")
    """
    Indicates whether you want to distribute
    media files in Microsoft Smooth Streaming format using the origin that is
    associated with this cache behavior.
    """
    target_origin_id: str = pulumi.output_property("targetOriginId")
    """
    The value of ID for the origin that you want
    CloudFront to route requests to when a request matches the path pattern
    either for a cache behavior or for the default cache behavior.
    """
    trusted_signers: Optional[List[str]] = pulumi.output_property("trustedSigners")
    """
    The AWS accounts, if any, that you want to
    allow to create signed URLs for private content.
    """
    viewer_protocol_policy: str = pulumi.output_property("viewerProtocolPolicy")
    """
    Use this element to specify the
    protocol that users can use to access the files in the origin specified by
    TargetOriginId when a request matches the path pattern in PathPattern. One
    of `allow-all`, `https-only`, or `redirect-to-https`.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DistributionDefaultCacheBehaviorForwardedValues(dict):
    cookies: 'outputs.DistributionDefaultCacheBehaviorForwardedValuesCookies' = pulumi.output_property("cookies")
    """
    The forwarded values cookies
    that specifies how CloudFront handles cookies (maximum one).
    """
    headers: Optional[List[str]] = pulumi.output_property("headers")
    """
    Specifies the Headers, if any, that you want
    CloudFront to vary upon for this cache behavior. Specify `*` to include all
    headers.
    """
    query_string: bool = pulumi.output_property("queryString")
    """
    Indicates whether you want CloudFront to forward
    query strings to the origin that is associated with this cache behavior.
    """
    query_string_cache_keys: Optional[List[str]] = pulumi.output_property("queryStringCacheKeys")
    """
    When specified, along with a value of
    `true` for `query_string`, all query strings are forwarded, however only the
    query string keys listed in this argument are cached. When omitted with a
    value of `true` for `query_string`, all query string keys are cached.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DistributionDefaultCacheBehaviorForwardedValuesCookies(dict):
    forward: str = pulumi.output_property("forward")
    """
    Specifies whether you want CloudFront to forward
    cookies to the origin that is associated with this cache behavior. You can
    specify `all`, `none` or `whitelist`. If `whitelist`, you must include the
    subsequent `whitelisted_names`
    """
    whitelisted_names: Optional[List[str]] = pulumi.output_property("whitelistedNames")
    """
    If you have specified `whitelist` to
    `forward`, the whitelisted cookies that you want CloudFront to forward to
    your origin.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DistributionDefaultCacheBehaviorLambdaFunctionAssociation(dict):
    event_type: str = pulumi.output_property("eventType")
    """
    The specific event to trigger this function.
    Valid values: `viewer-request`, `origin-request`, `viewer-response`,
    `origin-response`
    """
    include_body: Optional[bool] = pulumi.output_property("includeBody")
    """
    When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: `true`, `false`.
    """
    lambda_arn: str = pulumi.output_property("lambdaArn")
    """
    ARN of the Lambda function.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DistributionLoggingConfig(dict):
    bucket: str = pulumi.output_property("bucket")
    """
    The Amazon S3 bucket to store the access logs in, for
    example, `myawslogbucket.s3.amazonaws.com`.
    """
    include_cookies: Optional[bool] = pulumi.output_property("includeCookies")
    """
    Specifies whether you want CloudFront to
    include cookies in access logs (default: `false`).
    """
    prefix: Optional[str] = pulumi.output_property("prefix")
    """
    An optional string that you want CloudFront to prefix
    to the access log filenames for this distribution, for example, `myprefix/`.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DistributionOrderedCacheBehavior(dict):
    allowed_methods: List[str] = pulumi.output_property("allowedMethods")
    """
    Controls which HTTP methods CloudFront
    processes and forwards to your Amazon S3 bucket or your custom origin.
    """
    cached_methods: List[str] = pulumi.output_property("cachedMethods")
    """
    Controls whether CloudFront caches the
    response to requests using the specified HTTP methods.
    """
    compress: Optional[bool] = pulumi.output_property("compress")
    """
    Whether you want CloudFront to automatically
    compress content for web requests that include `Accept-Encoding: gzip` in
    the request header (default: `false`).
    """
    default_ttl: Optional[float] = pulumi.output_property("defaultTtl")
    """
    The default amount of time (in seconds) that an
    object is in a CloudFront cache before CloudFront forwards another request
    in the absence of an `Cache-Control max-age` or `Expires` header. Defaults to
    1 day.
    """
    field_level_encryption_id: Optional[str] = pulumi.output_property("fieldLevelEncryptionId")
    """
    Field level encryption configuration ID
    """
    forwarded_values: 'outputs.DistributionOrderedCacheBehaviorForwardedValues' = pulumi.output_property("forwardedValues")
    """
    The forwarded values configuration that specifies how CloudFront
    handles query strings, cookies and headers (maximum one).
    """
    lambda_function_associations: Optional[List['outputs.DistributionOrderedCacheBehaviorLambdaFunctionAssociation']] = pulumi.output_property("lambdaFunctionAssociations")
    """
    A config block that triggers a lambda function with
    specific actions. Defined below, maximum 4.
    """
    max_ttl: Optional[float] = pulumi.output_property("maxTtl")
    """
    The maximum amount of time (in seconds) that an
    object is in a CloudFront cache before CloudFront forwards another request
    to your origin to determine whether the object has been updated. Only
    effective in the presence of `Cache-Control max-age`, `Cache-Control
    s-maxage`, and `Expires` headers. Defaults to 365 days.
    """
    min_ttl: Optional[float] = pulumi.output_property("minTtl")
    """
    The minimum amount of time that you want objects to
    stay in CloudFront caches before CloudFront queries your origin to see
    whether the object has been updated. Defaults to 0 seconds.
    """
    path_pattern: str = pulumi.output_property("pathPattern")
    """
    The pattern (for example, `images/*.jpg)` that
    specifies which requests you want this cache behavior to apply to.
    """
    smooth_streaming: Optional[bool] = pulumi.output_property("smoothStreaming")
    """
    Indicates whether you want to distribute
    media files in Microsoft Smooth Streaming format using the origin that is
    associated with this cache behavior.
    """
    target_origin_id: str = pulumi.output_property("targetOriginId")
    """
    The value of ID for the origin that you want
    CloudFront to route requests to when a request matches the path pattern
    either for a cache behavior or for the default cache behavior.
    """
    trusted_signers: Optional[List[str]] = pulumi.output_property("trustedSigners")
    """
    The AWS accounts, if any, that you want to
    allow to create signed URLs for private content.
    """
    viewer_protocol_policy: str = pulumi.output_property("viewerProtocolPolicy")
    """
    Use this element to specify the
    protocol that users can use to access the files in the origin specified by
    TargetOriginId when a request matches the path pattern in PathPattern. One
    of `allow-all`, `https-only`, or `redirect-to-https`.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DistributionOrderedCacheBehaviorForwardedValues(dict):
    cookies: 'outputs.DistributionOrderedCacheBehaviorForwardedValuesCookies' = pulumi.output_property("cookies")
    """
    The forwarded values cookies
    that specifies how CloudFront handles cookies (maximum one).
    """
    headers: Optional[List[str]] = pulumi.output_property("headers")
    """
    Specifies the Headers, if any, that you want
    CloudFront to vary upon for this cache behavior. Specify `*` to include all
    headers.
    """
    query_string: bool = pulumi.output_property("queryString")
    """
    Indicates whether you want CloudFront to forward
    query strings to the origin that is associated with this cache behavior.
    """
    query_string_cache_keys: Optional[List[str]] = pulumi.output_property("queryStringCacheKeys")
    """
    When specified, along with a value of
    `true` for `query_string`, all query strings are forwarded, however only the
    query string keys listed in this argument are cached. When omitted with a
    value of `true` for `query_string`, all query string keys are cached.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DistributionOrderedCacheBehaviorForwardedValuesCookies(dict):
    forward: str = pulumi.output_property("forward")
    """
    Specifies whether you want CloudFront to forward
    cookies to the origin that is associated with this cache behavior. You can
    specify `all`, `none` or `whitelist`. If `whitelist`, you must include the
    subsequent `whitelisted_names`
    """
    whitelisted_names: Optional[List[str]] = pulumi.output_property("whitelistedNames")
    """
    If you have specified `whitelist` to
    `forward`, the whitelisted cookies that you want CloudFront to forward to
    your origin.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DistributionOrderedCacheBehaviorLambdaFunctionAssociation(dict):
    event_type: str = pulumi.output_property("eventType")
    """
    The specific event to trigger this function.
    Valid values: `viewer-request`, `origin-request`, `viewer-response`,
    `origin-response`
    """
    include_body: Optional[bool] = pulumi.output_property("includeBody")
    """
    When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: `true`, `false`.
    """
    lambda_arn: str = pulumi.output_property("lambdaArn")
    """
    ARN of the Lambda function.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DistributionOrigin(dict):
    custom_headers: Optional[List['outputs.DistributionOriginCustomHeader']] = pulumi.output_property("customHeaders")
    """
    One or more sub-resources with `name` and
    `value` parameters that specify header data that will be sent to the origin
    (multiples allowed).
    """
    custom_origin_config: Optional['outputs.DistributionOriginCustomOriginConfig'] = pulumi.output_property("customOriginConfig")
    """
    The CloudFront custom
    origin configuration information. If an S3
    origin is required, use `s3_origin_config` instead.
    """
    domain_name: str = pulumi.output_property("domainName")
    """
    The DNS domain name of either the S3 bucket, or
    web site of your custom origin.
    """
    origin_id: str = pulumi.output_property("originId")
    """
    The unique identifier of the member origin
    """
    origin_path: Optional[str] = pulumi.output_property("originPath")
    """
    An optional element that causes CloudFront to
    request your content from a directory in your Amazon S3 bucket or your
    custom origin.
    """
    s3_origin_config: Optional['outputs.DistributionOriginS3OriginConfig'] = pulumi.output_property("s3OriginConfig")
    """
    The CloudFront S3 origin
    configuration information. If a custom origin is required, use
    `custom_origin_config` instead.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DistributionOriginCustomHeader(dict):
    name: str = pulumi.output_property("name")
    value: str = pulumi.output_property("value")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DistributionOriginCustomOriginConfig(dict):
    http_port: float = pulumi.output_property("httpPort")
    """
    The HTTP port the custom origin listens on.
    """
    https_port: float = pulumi.output_property("httpsPort")
    """
    The HTTPS port the custom origin listens on.
    """
    origin_keepalive_timeout: Optional[float] = pulumi.output_property("originKeepaliveTimeout")
    """
    The Custom KeepAlive timeout, in seconds. By default, AWS enforces a limit of `60`. But you can request an [increase](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-request-timeout).
    """
    origin_protocol_policy: str = pulumi.output_property("originProtocolPolicy")
    """
    The origin protocol policy to apply to
    your origin. One of `http-only`, `https-only`, or `match-viewer`.
    """
    origin_read_timeout: Optional[float] = pulumi.output_property("originReadTimeout")
    """
    The Custom Read timeout, in seconds. By default, AWS enforces a limit of `60`. But you can request an [increase](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-request-timeout).
    """
    origin_ssl_protocols: List[str] = pulumi.output_property("originSslProtocols")
    """
    The SSL/TLS protocols that you want
    CloudFront to use when communicating with your origin over HTTPS. A list of
    one or more of `SSLv3`, `TLSv1`, `TLSv1.1`, and `TLSv1.2`.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DistributionOriginGroup(dict):
    failover_criteria: 'outputs.DistributionOriginGroupFailoverCriteria' = pulumi.output_property("failoverCriteria")
    """
    The failover criteria for when to failover to the secondary origin
    """
    members: List['outputs.DistributionOriginGroupMember'] = pulumi.output_property("members")
    """
    Ordered member configuration blocks assigned to the origin group, where the first member is the primary origin. You must specify two members.
    """
    origin_id: str = pulumi.output_property("originId")
    """
    The unique identifier of the member origin
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DistributionOriginGroupFailoverCriteria(dict):
    status_codes: List[float] = pulumi.output_property("statusCodes")
    """
    A list of HTTP status codes for the origin group
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DistributionOriginGroupMember(dict):
    origin_id: str = pulumi.output_property("originId")
    """
    The unique identifier of the member origin
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DistributionOriginS3OriginConfig(dict):
    origin_access_identity: str = pulumi.output_property("originAccessIdentity")
    """
    The [CloudFront origin access
    identity][5] to associate with the origin.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DistributionRestrictions(dict):
    geo_restriction: 'outputs.DistributionRestrictionsGeoRestriction' = pulumi.output_property("geoRestriction")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DistributionRestrictionsGeoRestriction(dict):
    locations: Optional[List[str]] = pulumi.output_property("locations")
    """
    The [ISO 3166-1-alpha-2 codes][4] for which you
    want CloudFront either to distribute your content (`whitelist`) or not
    distribute your content (`blacklist`).
    """
    restriction_type: str = pulumi.output_property("restrictionType")
    """
    The method that you want to use to restrict
    distribution of your content by country: `none`, `whitelist`, or
    `blacklist`.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DistributionViewerCertificate(dict):
    acm_certificate_arn: Optional[str] = pulumi.output_property("acmCertificateArn")
    """
    The ARN of the [AWS Certificate Manager](https://aws.amazon.com/certificate-manager/)
    certificate that you wish to use with this distribution. Specify this,
    `cloudfront_default_certificate`, or `iam_certificate_id`.  The ACM
    certificate must be in  US-EAST-1.
    """
    cloudfront_default_certificate: Optional[bool] = pulumi.output_property("cloudfrontDefaultCertificate")
    """
    `true` if you want viewers to use HTTPS
    to request your objects and you're using the CloudFront domain name for your
    distribution. Specify this, `acm_certificate_arn`, or `iam_certificate_id`.
    """
    iam_certificate_id: Optional[str] = pulumi.output_property("iamCertificateId")
    """
    The IAM certificate identifier of the custom viewer
    certificate for this distribution if you are using a custom domain. Specify
    this, `acm_certificate_arn`, or `cloudfront_default_certificate`.
    """
    minimum_protocol_version: Optional[str] = pulumi.output_property("minimumProtocolVersion")
    """
    The minimum version of the SSL protocol that
    you want CloudFront to use for HTTPS connections. Can only be set if
    `cloudfront_default_certificate = false`. One of `SSLv3`, `TLSv1`,
    `TLSv1_2016`, `TLSv1.1_2016` or `TLSv1.2_2018`. Default: `TLSv1`. **NOTE**:
    If you are using a custom certificate (specified with `acm_certificate_arn`
    or `iam_certificate_id`), and have specified `sni-only` in
    `ssl_support_method`, `TLSv1` or later must be specified. If you have
    specified `vip` in `ssl_support_method`, only `SSLv3` or `TLSv1` can be
    specified. If you have specified `cloudfront_default_certificate`, `TLSv1`
    must be specified.
    """
    ssl_support_method: Optional[str] = pulumi.output_property("sslSupportMethod")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


