# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables
from . import outputs
from ._inputs import *

__all__ = ['Distribution']


class Distribution(pulumi.CustomResource):
    active_trusted_signers: pulumi.Output[Dict[str, str]] = pulumi.output_property("activeTrustedSigners")
    """
    The key pair IDs that CloudFront is aware of for
    each trusted signer, if the distribution is set up to serve private content
    with signed URLs.
    """
    aliases: pulumi.Output[Optional[List[str]]] = pulumi.output_property("aliases")
    """
    Extra CNAMEs (alternate domain names), if any, for
    this distribution.
    """
    arn: pulumi.Output[str] = pulumi.output_property("arn")
    """
    The ARN (Amazon Resource Name) for the distribution. For example: `arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5`, where `123456789012` is your AWS account ID.
    """
    caller_reference: pulumi.Output[str] = pulumi.output_property("callerReference")
    """
    Internal value used by CloudFront to allow future
    updates to the distribution configuration.
    """
    comment: pulumi.Output[Optional[str]] = pulumi.output_property("comment")
    """
    Any comments you want to include about the
    distribution.
    """
    custom_error_responses: pulumi.Output[Optional[List['outputs.DistributionCustomErrorResponse']]] = pulumi.output_property("customErrorResponses")
    """
    One or more custom error response elements (multiples allowed).
    """
    default_cache_behavior: pulumi.Output['outputs.DistributionDefaultCacheBehavior'] = pulumi.output_property("defaultCacheBehavior")
    """
    The default cache behavior for this distribution (maximum
    one).
    """
    default_root_object: pulumi.Output[Optional[str]] = pulumi.output_property("defaultRootObject")
    """
    The object that you want CloudFront to
    return (for example, index.html) when an end user requests the root URL.
    """
    domain_name: pulumi.Output[str] = pulumi.output_property("domainName")
    """
    The DNS domain name of either the S3 bucket, or
    web site of your custom origin.
    """
    enabled: pulumi.Output[bool] = pulumi.output_property("enabled")
    """
    Whether the distribution is enabled to accept end
    user requests for content.
    """
    etag: pulumi.Output[str] = pulumi.output_property("etag")
    """
    The current version of the distribution's information. For example:
    `E2QWRUHAPOMQZL`.
    """
    hosted_zone_id: pulumi.Output[str] = pulumi.output_property("hostedZoneId")
    """
    The CloudFront Route 53 zone ID that can be used to
    route an [Alias Resource Record Set](http://docs.aws.amazon.com/Route53/latest/APIReference/CreateAliasRRSAPI.html) to. This attribute is simply an
    alias for the zone ID `Z2FDTNDATAQYW2`.
    """
    http_version: pulumi.Output[Optional[str]] = pulumi.output_property("httpVersion")
    """
    The maximum HTTP version to support on the
    distribution. Allowed values are `http1.1` and `http2`. The default is
    `http2`.
    """
    in_progress_validation_batches: pulumi.Output[float] = pulumi.output_property("inProgressValidationBatches")
    """
    The number of invalidation batches
    currently in progress.
    """
    is_ipv6_enabled: pulumi.Output[Optional[bool]] = pulumi.output_property("isIpv6Enabled")
    """
    Whether the IPv6 is enabled for the distribution.
    """
    last_modified_time: pulumi.Output[str] = pulumi.output_property("lastModifiedTime")
    """
    The date and time the distribution was last modified.
    """
    logging_config: pulumi.Output[Optional['outputs.DistributionLoggingConfig']] = pulumi.output_property("loggingConfig")
    """
    The logging
    configuration that controls how logs are written
    to your distribution (maximum one).
    """
    ordered_cache_behaviors: pulumi.Output[Optional[List['outputs.DistributionOrderedCacheBehavior']]] = pulumi.output_property("orderedCacheBehaviors")
    """
    An ordered list of cache behaviors
    resource for this distribution. List from top to bottom
    in order of precedence. The topmost cache behavior will have precedence 0.
    """
    origin_groups: pulumi.Output[Optional[List['outputs.DistributionOriginGroup']]] = pulumi.output_property("originGroups")
    """
    One or more origin_group for this
    distribution (multiples allowed).
    """
    origins: pulumi.Output[List['outputs.DistributionOrigin']] = pulumi.output_property("origins")
    """
    One or more origins for this
    distribution (multiples allowed).
    """
    price_class: pulumi.Output[Optional[str]] = pulumi.output_property("priceClass")
    """
    The price class for this distribution. One of
    `PriceClass_All`, `PriceClass_200`, `PriceClass_100`
    """
    restrictions: pulumi.Output['outputs.DistributionRestrictions'] = pulumi.output_property("restrictions")
    """
    The restriction
    configuration for this distribution (maximum one).
    """
    retain_on_delete: pulumi.Output[Optional[bool]] = pulumi.output_property("retainOnDelete")
    """
    Disables the distribution instead of
    deleting it when destroying the resource. If this is set,
    the distribution needs to be deleted manually afterwards. Default: `false`.
    """
    status: pulumi.Output[str] = pulumi.output_property("status")
    """
    The current status of the distribution. `Deployed` if the
    distribution's information is fully propagated throughout the Amazon
    CloudFront system.
    """
    tags: pulumi.Output[Optional[Dict[str, str]]] = pulumi.output_property("tags")
    """
    A map of tags to assign to the resource.
    """
    viewer_certificate: pulumi.Output['outputs.DistributionViewerCertificate'] = pulumi.output_property("viewerCertificate")
    """
    The SSL
    configuration for this distribution (maximum
    one).
    """
    wait_for_deployment: pulumi.Output[Optional[bool]] = pulumi.output_property("waitForDeployment")
    """
    If enabled, the resource will wait for
    the distribution status to change from `InProgress` to `Deployed`. Setting
    this to`false` will skip the process. Default: `true`.
    """
    web_acl_id: pulumi.Output[Optional[str]] = pulumi.output_property("webAclId")
    """
    If you're using AWS WAF to filter CloudFront
    requests, the Id of the AWS WAF web ACL that is associated with the
    distribution. The WAF Web ACL must exist in the WAF Global (CloudFront)
    region and the credentials configuring this argument must have
    `waf:GetWebACL` permissions assigned. If using WAFv2, provide the ARN of the web ACL.
    """
    # pylint: disable=no-self-argument
    def __init__(__self__, resource_name, opts: Optional[pulumi.ResourceOptions] = None, aliases: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, comment: Optional[pulumi.Input[str]] = None, custom_error_responses: Optional[pulumi.Input[List[pulumi.Input[pulumi.InputType['DistributionCustomErrorResponseArgs']]]]] = None, default_cache_behavior: Optional[pulumi.Input[pulumi.InputType['DistributionDefaultCacheBehaviorArgs']]] = None, default_root_object: Optional[pulumi.Input[str]] = None, enabled: Optional[pulumi.Input[bool]] = None, http_version: Optional[pulumi.Input[str]] = None, is_ipv6_enabled: Optional[pulumi.Input[bool]] = None, logging_config: Optional[pulumi.Input[pulumi.InputType['DistributionLoggingConfigArgs']]] = None, ordered_cache_behaviors: Optional[pulumi.Input[List[pulumi.Input[pulumi.InputType['DistributionOrderedCacheBehaviorArgs']]]]] = None, origin_groups: Optional[pulumi.Input[List[pulumi.Input[pulumi.InputType['DistributionOriginGroupArgs']]]]] = None, origins: Optional[pulumi.Input[List[pulumi.Input[pulumi.InputType['DistributionOriginArgs']]]]] = None, price_class: Optional[pulumi.Input[str]] = None, restrictions: Optional[pulumi.Input[pulumi.InputType['DistributionRestrictionsArgs']]] = None, retain_on_delete: Optional[pulumi.Input[bool]] = None, tags: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, viewer_certificate: Optional[pulumi.Input[pulumi.InputType['DistributionViewerCertificateArgs']]] = None, wait_for_deployment: Optional[pulumi.Input[bool]] = None, web_acl_id: Optional[pulumi.Input[str]] = None, __props__=None, __name__=None, __opts__=None) -> None:
        """
        Creates an Amazon CloudFront web distribution.

        For information about CloudFront distributions, see the
        [Amazon CloudFront Developer Guide](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Introduction.html). For specific information about creating
        CloudFront web distributions, see the [POST Distribution](https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_CreateDistribution.html) page in the Amazon
        CloudFront API Reference.

        > **NOTE:** CloudFront distributions take about 15 minutes to a deployed state
        after creation or modification. During this time, deletes to resources will be
        blocked. If you need to delete a distribution that is enabled and you do not
        want to wait, you need to use the `retain_on_delete` flag.

        ## Example Usage

        The following example below creates a CloudFront distribution with an S3 origin.

        ```python
        import pulumi
        import pulumi_aws as aws

        bucket = aws.s3.Bucket("bucket",
            acl="private",
            tags={
                "Name": "My bucket",
            })
        s3_origin_id = "myS3Origin"
        s3_distribution = aws.cloudfront.Distribution("s3Distribution",
            aliases=[
                "mysite.example.com",
                "yoursite.example.com",
            ],
            comment="Some comment",
            default_cache_behavior={
                "allowedMethods": [
                    "DELETE",
                    "GET",
                    "HEAD",
                    "OPTIONS",
                    "PATCH",
                    "POST",
                    "PUT",
                ],
                "cachedMethods": [
                    "GET",
                    "HEAD",
                ],
                "defaultTtl": 3600,
                "forwardedValues": {
                    "cookies": {
                        "forward": "none",
                    },
                    "queryString": False,
                },
                "maxTtl": 86400,
                "minTtl": 0,
                "targetOriginId": s3_origin_id,
                "viewerProtocolPolicy": "allow-all",
            },
            default_root_object="index.html",
            enabled=True,
            is_ipv6_enabled=True,
            logging_config={
                "bucket": "mylogs.s3.amazonaws.com",
                "includeCookies": False,
                "prefix": "myprefix",
            },
            ordered_cache_behaviors=[
                {
                    "allowedMethods": [
                        "GET",
                        "HEAD",
                        "OPTIONS",
                    ],
                    "cachedMethods": [
                        "GET",
                        "HEAD",
                        "OPTIONS",
                    ],
                    "compress": True,
                    "defaultTtl": 86400,
                    "forwardedValues": {
                        "cookies": {
                            "forward": "none",
                        },
                        "headers": ["Origin"],
                        "queryString": False,
                    },
                    "maxTtl": 31536000,
                    "minTtl": 0,
                    "pathPattern": "/content/immutable/*",
                    "targetOriginId": s3_origin_id,
                    "viewerProtocolPolicy": "redirect-to-https",
                },
                {
                    "allowedMethods": [
                        "GET",
                        "HEAD",
                        "OPTIONS",
                    ],
                    "cachedMethods": [
                        "GET",
                        "HEAD",
                    ],
                    "compress": True,
                    "defaultTtl": 3600,
                    "forwardedValues": {
                        "cookies": {
                            "forward": "none",
                        },
                        "queryString": False,
                    },
                    "maxTtl": 86400,
                    "minTtl": 0,
                    "pathPattern": "/content/*",
                    "targetOriginId": s3_origin_id,
                    "viewerProtocolPolicy": "redirect-to-https",
                },
            ],
            origins=[{
                "domain_name": bucket.bucket_regional_domain_name,
                "originId": s3_origin_id,
                "s3OriginConfig": {
                    "originAccessIdentity": "origin-access-identity/cloudfront/ABCDEFG1234567",
                },
            }],
            price_class="PriceClass_200",
            restrictions={
                "geoRestriction": {
                    "locations": [
                        "US",
                        "CA",
                        "GB",
                        "DE",
                    ],
                    "restrictionType": "whitelist",
                },
            },
            tags={
                "Environment": "production",
            },
            viewer_certificate={
                "cloudfrontDefaultCertificate": True,
            })
        ```

        The following example below creates a Cloudfront distribution with an origin group for failover routing:

        ```python
        import pulumi
        import pulumi_aws as aws

        s3_distribution = aws.cloudfront.Distribution("s3Distribution",
            default_cache_behavior={
                "targetOriginId": "groupS3",
            },
            origins=[
                {
                    "domain_name": aws_s3_bucket["primary"]["bucket_regional_domain_name"],
                    "originId": "primaryS3",
                    "s3OriginConfig": {
                        "originAccessIdentity": aws_cloudfront_origin_access_identity["default"]["cloudfront_access_identity_path"],
                    },
                },
                {
                    "domain_name": aws_s3_bucket["failover"]["bucket_regional_domain_name"],
                    "originId": "failoverS3",
                    "s3OriginConfig": {
                        "originAccessIdentity": aws_cloudfront_origin_access_identity["default"]["cloudfront_access_identity_path"],
                    },
                },
            ],
            origin_groups=[{
                "failoverCriteria": {
                    "statusCodes": [
                        403,
                        404,
                        500,
                        502,
                    ],
                },
                "members": [
                    {
                        "originId": "primaryS3",
                    },
                    {
                        "originId": "failoverS3",
                    },
                ],
                "originId": "groupS3",
            }])
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[List[pulumi.Input[str]]] aliases: Extra CNAMEs (alternate domain names), if any, for
               this distribution.
        :param pulumi.Input[str] comment: Any comments you want to include about the
               distribution.
        :param pulumi.Input[List[pulumi.Input[pulumi.InputType['DistributionCustomErrorResponseArgs']]]] custom_error_responses: One or more custom error response elements (multiples allowed).
        :param pulumi.Input[pulumi.InputType['DistributionDefaultCacheBehaviorArgs']] default_cache_behavior: The default cache behavior for this distribution (maximum
               one).
        :param pulumi.Input[str] default_root_object: The object that you want CloudFront to
               return (for example, index.html) when an end user requests the root URL.
        :param pulumi.Input[bool] enabled: Whether the distribution is enabled to accept end
               user requests for content.
        :param pulumi.Input[str] http_version: The maximum HTTP version to support on the
               distribution. Allowed values are `http1.1` and `http2`. The default is
               `http2`.
        :param pulumi.Input[bool] is_ipv6_enabled: Whether the IPv6 is enabled for the distribution.
        :param pulumi.Input[pulumi.InputType['DistributionLoggingConfigArgs']] logging_config: The logging
               configuration that controls how logs are written
               to your distribution (maximum one).
        :param pulumi.Input[List[pulumi.Input[pulumi.InputType['DistributionOrderedCacheBehaviorArgs']]]] ordered_cache_behaviors: An ordered list of cache behaviors
               resource for this distribution. List from top to bottom
               in order of precedence. The topmost cache behavior will have precedence 0.
        :param pulumi.Input[List[pulumi.Input[pulumi.InputType['DistributionOriginGroupArgs']]]] origin_groups: One or more origin_group for this
               distribution (multiples allowed).
        :param pulumi.Input[List[pulumi.Input[pulumi.InputType['DistributionOriginArgs']]]] origins: One or more origins for this
               distribution (multiples allowed).
        :param pulumi.Input[str] price_class: The price class for this distribution. One of
               `PriceClass_All`, `PriceClass_200`, `PriceClass_100`
        :param pulumi.Input[pulumi.InputType['DistributionRestrictionsArgs']] restrictions: The restriction
               configuration for this distribution (maximum one).
        :param pulumi.Input[bool] retain_on_delete: Disables the distribution instead of
               deleting it when destroying the resource. If this is set,
               the distribution needs to be deleted manually afterwards. Default: `false`.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] tags: A map of tags to assign to the resource.
        :param pulumi.Input[pulumi.InputType['DistributionViewerCertificateArgs']] viewer_certificate: The SSL
               configuration for this distribution (maximum
               one).
        :param pulumi.Input[bool] wait_for_deployment: If enabled, the resource will wait for
               the distribution status to change from `InProgress` to `Deployed`. Setting
               this to`false` will skip the process. Default: `true`.
        :param pulumi.Input[str] web_acl_id: If you're using AWS WAF to filter CloudFront
               requests, the Id of the AWS WAF web ACL that is associated with the
               distribution. The WAF Web ACL must exist in the WAF Global (CloudFront)
               region and the credentials configuring this argument must have
               `waf:GetWebACL` permissions assigned. If using WAFv2, provide the ARN of the web ACL.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['aliases'] = aliases
            __props__['comment'] = comment
            __props__['custom_error_responses'] = custom_error_responses
            if default_cache_behavior is None:
                raise TypeError("Missing required property 'default_cache_behavior'")
            __props__['default_cache_behavior'] = default_cache_behavior
            __props__['default_root_object'] = default_root_object
            if enabled is None:
                raise TypeError("Missing required property 'enabled'")
            __props__['enabled'] = enabled
            __props__['http_version'] = http_version
            __props__['is_ipv6_enabled'] = is_ipv6_enabled
            __props__['logging_config'] = logging_config
            __props__['ordered_cache_behaviors'] = ordered_cache_behaviors
            __props__['origin_groups'] = origin_groups
            if origins is None:
                raise TypeError("Missing required property 'origins'")
            __props__['origins'] = origins
            __props__['price_class'] = price_class
            if restrictions is None:
                raise TypeError("Missing required property 'restrictions'")
            __props__['restrictions'] = restrictions
            __props__['retain_on_delete'] = retain_on_delete
            __props__['tags'] = tags
            if viewer_certificate is None:
                raise TypeError("Missing required property 'viewer_certificate'")
            __props__['viewer_certificate'] = viewer_certificate
            __props__['wait_for_deployment'] = wait_for_deployment
            __props__['web_acl_id'] = web_acl_id
            __props__['active_trusted_signers'] = None
            __props__['arn'] = None
            __props__['caller_reference'] = None
            __props__['domain_name'] = None
            __props__['etag'] = None
            __props__['hosted_zone_id'] = None
            __props__['in_progress_validation_batches'] = None
            __props__['last_modified_time'] = None
            __props__['status'] = None
        super(Distribution, __self__).__init__(
            'aws:cloudfront/distribution:Distribution',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str, id: str, opts: Optional[pulumi.ResourceOptions] = None, active_trusted_signers: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, aliases: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, arn: Optional[pulumi.Input[str]] = None, caller_reference: Optional[pulumi.Input[str]] = None, comment: Optional[pulumi.Input[str]] = None, custom_error_responses: Optional[pulumi.Input[List[pulumi.Input[pulumi.InputType['DistributionCustomErrorResponseArgs']]]]] = None, default_cache_behavior: Optional[pulumi.Input[pulumi.InputType['DistributionDefaultCacheBehaviorArgs']]] = None, default_root_object: Optional[pulumi.Input[str]] = None, domain_name: Optional[pulumi.Input[str]] = None, enabled: Optional[pulumi.Input[bool]] = None, etag: Optional[pulumi.Input[str]] = None, hosted_zone_id: Optional[pulumi.Input[str]] = None, http_version: Optional[pulumi.Input[str]] = None, in_progress_validation_batches: Optional[pulumi.Input[float]] = None, is_ipv6_enabled: Optional[pulumi.Input[bool]] = None, last_modified_time: Optional[pulumi.Input[str]] = None, logging_config: Optional[pulumi.Input[pulumi.InputType['DistributionLoggingConfigArgs']]] = None, ordered_cache_behaviors: Optional[pulumi.Input[List[pulumi.Input[pulumi.InputType['DistributionOrderedCacheBehaviorArgs']]]]] = None, origin_groups: Optional[pulumi.Input[List[pulumi.Input[pulumi.InputType['DistributionOriginGroupArgs']]]]] = None, origins: Optional[pulumi.Input[List[pulumi.Input[pulumi.InputType['DistributionOriginArgs']]]]] = None, price_class: Optional[pulumi.Input[str]] = None, restrictions: Optional[pulumi.Input[pulumi.InputType['DistributionRestrictionsArgs']]] = None, retain_on_delete: Optional[pulumi.Input[bool]] = None, status: Optional[pulumi.Input[str]] = None, tags: Optional[pulumi.Input[Dict[str, pulumi.Input[str]]]] = None, viewer_certificate: Optional[pulumi.Input[pulumi.InputType['DistributionViewerCertificateArgs']]] = None, wait_for_deployment: Optional[pulumi.Input[bool]] = None, web_acl_id: Optional[pulumi.Input[str]] = None) -> 'Distribution':
        """
        Get an existing Distribution resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] active_trusted_signers: The key pair IDs that CloudFront is aware of for
               each trusted signer, if the distribution is set up to serve private content
               with signed URLs.
        :param pulumi.Input[List[pulumi.Input[str]]] aliases: Extra CNAMEs (alternate domain names), if any, for
               this distribution.
        :param pulumi.Input[str] arn: The ARN (Amazon Resource Name) for the distribution. For example: `arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5`, where `123456789012` is your AWS account ID.
        :param pulumi.Input[str] caller_reference: Internal value used by CloudFront to allow future
               updates to the distribution configuration.
        :param pulumi.Input[str] comment: Any comments you want to include about the
               distribution.
        :param pulumi.Input[List[pulumi.Input[pulumi.InputType['DistributionCustomErrorResponseArgs']]]] custom_error_responses: One or more custom error response elements (multiples allowed).
        :param pulumi.Input[pulumi.InputType['DistributionDefaultCacheBehaviorArgs']] default_cache_behavior: The default cache behavior for this distribution (maximum
               one).
        :param pulumi.Input[str] default_root_object: The object that you want CloudFront to
               return (for example, index.html) when an end user requests the root URL.
        :param pulumi.Input[str] domain_name: The DNS domain name of either the S3 bucket, or
               web site of your custom origin.
        :param pulumi.Input[bool] enabled: Whether the distribution is enabled to accept end
               user requests for content.
        :param pulumi.Input[str] etag: The current version of the distribution's information. For example:
               `E2QWRUHAPOMQZL`.
        :param pulumi.Input[str] hosted_zone_id: The CloudFront Route 53 zone ID that can be used to
               route an [Alias Resource Record Set](http://docs.aws.amazon.com/Route53/latest/APIReference/CreateAliasRRSAPI.html) to. This attribute is simply an
               alias for the zone ID `Z2FDTNDATAQYW2`.
        :param pulumi.Input[str] http_version: The maximum HTTP version to support on the
               distribution. Allowed values are `http1.1` and `http2`. The default is
               `http2`.
        :param pulumi.Input[float] in_progress_validation_batches: The number of invalidation batches
               currently in progress.
        :param pulumi.Input[bool] is_ipv6_enabled: Whether the IPv6 is enabled for the distribution.
        :param pulumi.Input[str] last_modified_time: The date and time the distribution was last modified.
        :param pulumi.Input[pulumi.InputType['DistributionLoggingConfigArgs']] logging_config: The logging
               configuration that controls how logs are written
               to your distribution (maximum one).
        :param pulumi.Input[List[pulumi.Input[pulumi.InputType['DistributionOrderedCacheBehaviorArgs']]]] ordered_cache_behaviors: An ordered list of cache behaviors
               resource for this distribution. List from top to bottom
               in order of precedence. The topmost cache behavior will have precedence 0.
        :param pulumi.Input[List[pulumi.Input[pulumi.InputType['DistributionOriginGroupArgs']]]] origin_groups: One or more origin_group for this
               distribution (multiples allowed).
        :param pulumi.Input[List[pulumi.Input[pulumi.InputType['DistributionOriginArgs']]]] origins: One or more origins for this
               distribution (multiples allowed).
        :param pulumi.Input[str] price_class: The price class for this distribution. One of
               `PriceClass_All`, `PriceClass_200`, `PriceClass_100`
        :param pulumi.Input[pulumi.InputType['DistributionRestrictionsArgs']] restrictions: The restriction
               configuration for this distribution (maximum one).
        :param pulumi.Input[bool] retain_on_delete: Disables the distribution instead of
               deleting it when destroying the resource. If this is set,
               the distribution needs to be deleted manually afterwards. Default: `false`.
        :param pulumi.Input[str] status: The current status of the distribution. `Deployed` if the
               distribution's information is fully propagated throughout the Amazon
               CloudFront system.
        :param pulumi.Input[Dict[str, pulumi.Input[str]]] tags: A map of tags to assign to the resource.
        :param pulumi.Input[pulumi.InputType['DistributionViewerCertificateArgs']] viewer_certificate: The SSL
               configuration for this distribution (maximum
               one).
        :param pulumi.Input[bool] wait_for_deployment: If enabled, the resource will wait for
               the distribution status to change from `InProgress` to `Deployed`. Setting
               this to`false` will skip the process. Default: `true`.
        :param pulumi.Input[str] web_acl_id: If you're using AWS WAF to filter CloudFront
               requests, the Id of the AWS WAF web ACL that is associated with the
               distribution. The WAF Web ACL must exist in the WAF Global (CloudFront)
               region and the credentials configuring this argument must have
               `waf:GetWebACL` permissions assigned. If using WAFv2, provide the ARN of the web ACL.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["active_trusted_signers"] = active_trusted_signers
        __props__["aliases"] = aliases
        __props__["arn"] = arn
        __props__["caller_reference"] = caller_reference
        __props__["comment"] = comment
        __props__["custom_error_responses"] = custom_error_responses
        __props__["default_cache_behavior"] = default_cache_behavior
        __props__["default_root_object"] = default_root_object
        __props__["domain_name"] = domain_name
        __props__["enabled"] = enabled
        __props__["etag"] = etag
        __props__["hosted_zone_id"] = hosted_zone_id
        __props__["http_version"] = http_version
        __props__["in_progress_validation_batches"] = in_progress_validation_batches
        __props__["is_ipv6_enabled"] = is_ipv6_enabled
        __props__["last_modified_time"] = last_modified_time
        __props__["logging_config"] = logging_config
        __props__["ordered_cache_behaviors"] = ordered_cache_behaviors
        __props__["origin_groups"] = origin_groups
        __props__["origins"] = origins
        __props__["price_class"] = price_class
        __props__["restrictions"] = restrictions
        __props__["retain_on_delete"] = retain_on_delete
        __props__["status"] = status
        __props__["tags"] = tags
        __props__["viewer_certificate"] = viewer_certificate
        __props__["wait_for_deployment"] = wait_for_deployment
        __props__["web_acl_id"] = web_acl_id
        return Distribution(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

