# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'DistributionCustomErrorResponseArgs',
    'DistributionDefaultCacheBehaviorArgs',
    'DistributionDefaultCacheBehaviorForwardedValuesArgs',
    'DistributionDefaultCacheBehaviorForwardedValuesCookiesArgs',
    'DistributionDefaultCacheBehaviorLambdaFunctionAssociationArgs',
    'DistributionLoggingConfigArgs',
    'DistributionOrderedCacheBehaviorArgs',
    'DistributionOrderedCacheBehaviorForwardedValuesArgs',
    'DistributionOrderedCacheBehaviorForwardedValuesCookiesArgs',
    'DistributionOrderedCacheBehaviorLambdaFunctionAssociationArgs',
    'DistributionOriginArgs',
    'DistributionOriginCustomHeaderArgs',
    'DistributionOriginCustomOriginConfigArgs',
    'DistributionOriginGroupArgs',
    'DistributionOriginGroupFailoverCriteriaArgs',
    'DistributionOriginGroupMemberArgs',
    'DistributionOriginS3OriginConfigArgs',
    'DistributionRestrictionsArgs',
    'DistributionRestrictionsGeoRestrictionArgs',
    'DistributionViewerCertificateArgs',
]

@pulumi.input_type
class DistributionCustomErrorResponseArgs:
    error_code: pulumi.Input[float] = pulumi.input_property("errorCode")
    """
    The 4xx or 5xx HTTP status code that you want to
    customize.
    """
    error_caching_min_ttl: Optional[pulumi.Input[float]] = pulumi.input_property("errorCachingMinTtl")
    """
    The minimum amount of time you want
    HTTP error codes to stay in CloudFront caches before CloudFront queries your
    origin to see whether the object has been updated.
    """
    response_code: Optional[pulumi.Input[float]] = pulumi.input_property("responseCode")
    """
    The HTTP status code that you want CloudFront
    to return with the custom error page to the viewer.
    """
    response_page_path: Optional[pulumi.Input[str]] = pulumi.input_property("responsePagePath")
    """
    The path of the custom error page (for
    example, `/custom_404.html`).
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, error_code: pulumi.Input[float], error_caching_min_ttl: Optional[pulumi.Input[float]] = None, response_code: Optional[pulumi.Input[float]] = None, response_page_path: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[float] error_code: The 4xx or 5xx HTTP status code that you want to
               customize.
        :param pulumi.Input[float] error_caching_min_ttl: The minimum amount of time you want
               HTTP error codes to stay in CloudFront caches before CloudFront queries your
               origin to see whether the object has been updated.
        :param pulumi.Input[float] response_code: The HTTP status code that you want CloudFront
               to return with the custom error page to the viewer.
        :param pulumi.Input[str] response_page_path: The path of the custom error page (for
               example, `/custom_404.html`).
        """
        __self__.error_code = error_code
        __self__.error_caching_min_ttl = error_caching_min_ttl
        __self__.response_code = response_code
        __self__.response_page_path = response_page_path

@pulumi.input_type
class DistributionDefaultCacheBehaviorArgs:
    allowed_methods: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("allowedMethods")
    """
    Controls which HTTP methods CloudFront
    processes and forwards to your Amazon S3 bucket or your custom origin.
    """
    cached_methods: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("cachedMethods")
    """
    Controls whether CloudFront caches the
    response to requests using the specified HTTP methods.
    """
    forwarded_values: pulumi.Input['DistributionDefaultCacheBehaviorForwardedValuesArgs'] = pulumi.input_property("forwardedValues")
    """
    The forwarded values configuration that specifies how CloudFront
    handles query strings, cookies and headers (maximum one).
    """
    target_origin_id: pulumi.Input[str] = pulumi.input_property("targetOriginId")
    """
    The value of ID for the origin that you want
    CloudFront to route requests to when a request matches the path pattern
    either for a cache behavior or for the default cache behavior.
    """
    viewer_protocol_policy: pulumi.Input[str] = pulumi.input_property("viewerProtocolPolicy")
    """
    Use this element to specify the
    protocol that users can use to access the files in the origin specified by
    TargetOriginId when a request matches the path pattern in PathPattern. One
    of `allow-all`, `https-only`, or `redirect-to-https`.
    """
    compress: Optional[pulumi.Input[bool]] = pulumi.input_property("compress")
    """
    Whether you want CloudFront to automatically
    compress content for web requests that include `Accept-Encoding: gzip` in
    the request header (default: `false`).
    """
    default_ttl: Optional[pulumi.Input[float]] = pulumi.input_property("defaultTtl")
    """
    The default amount of time (in seconds) that an
    object is in a CloudFront cache before CloudFront forwards another request
    in the absence of an `Cache-Control max-age` or `Expires` header. Defaults to
    1 day.
    """
    field_level_encryption_id: Optional[pulumi.Input[str]] = pulumi.input_property("fieldLevelEncryptionId")
    """
    Field level encryption configuration ID
    """
    lambda_function_associations: Optional[pulumi.Input[List[pulumi.Input['DistributionDefaultCacheBehaviorLambdaFunctionAssociationArgs']]]] = pulumi.input_property("lambdaFunctionAssociations")
    """
    A config block that triggers a lambda function with
    specific actions. Defined below, maximum 4.
    """
    max_ttl: Optional[pulumi.Input[float]] = pulumi.input_property("maxTtl")
    """
    The maximum amount of time (in seconds) that an
    object is in a CloudFront cache before CloudFront forwards another request
    to your origin to determine whether the object has been updated. Only
    effective in the presence of `Cache-Control max-age`, `Cache-Control
    s-maxage`, and `Expires` headers. Defaults to 365 days.
    """
    min_ttl: Optional[pulumi.Input[float]] = pulumi.input_property("minTtl")
    """
    The minimum amount of time that you want objects to
    stay in CloudFront caches before CloudFront queries your origin to see
    whether the object has been updated. Defaults to 0 seconds.
    """
    smooth_streaming: Optional[pulumi.Input[bool]] = pulumi.input_property("smoothStreaming")
    """
    Indicates whether you want to distribute
    media files in Microsoft Smooth Streaming format using the origin that is
    associated with this cache behavior.
    """
    trusted_signers: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("trustedSigners")
    """
    The AWS accounts, if any, that you want to
    allow to create signed URLs for private content.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, allowed_methods: pulumi.Input[List[pulumi.Input[str]]], cached_methods: pulumi.Input[List[pulumi.Input[str]]], forwarded_values: pulumi.Input['DistributionDefaultCacheBehaviorForwardedValuesArgs'], target_origin_id: pulumi.Input[str], viewer_protocol_policy: pulumi.Input[str], compress: Optional[pulumi.Input[bool]] = None, default_ttl: Optional[pulumi.Input[float]] = None, field_level_encryption_id: Optional[pulumi.Input[str]] = None, lambda_function_associations: Optional[pulumi.Input[List[pulumi.Input['DistributionDefaultCacheBehaviorLambdaFunctionAssociationArgs']]]] = None, max_ttl: Optional[pulumi.Input[float]] = None, min_ttl: Optional[pulumi.Input[float]] = None, smooth_streaming: Optional[pulumi.Input[bool]] = None, trusted_signers: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] allowed_methods: Controls which HTTP methods CloudFront
               processes and forwards to your Amazon S3 bucket or your custom origin.
        :param pulumi.Input[List[pulumi.Input[str]]] cached_methods: Controls whether CloudFront caches the
               response to requests using the specified HTTP methods.
        :param pulumi.Input['DistributionDefaultCacheBehaviorForwardedValuesArgs'] forwarded_values: The forwarded values configuration that specifies how CloudFront
               handles query strings, cookies and headers (maximum one).
        :param pulumi.Input[str] target_origin_id: The value of ID for the origin that you want
               CloudFront to route requests to when a request matches the path pattern
               either for a cache behavior or for the default cache behavior.
        :param pulumi.Input[str] viewer_protocol_policy: Use this element to specify the
               protocol that users can use to access the files in the origin specified by
               TargetOriginId when a request matches the path pattern in PathPattern. One
               of `allow-all`, `https-only`, or `redirect-to-https`.
        :param pulumi.Input[bool] compress: Whether you want CloudFront to automatically
               compress content for web requests that include `Accept-Encoding: gzip` in
               the request header (default: `false`).
        :param pulumi.Input[float] default_ttl: The default amount of time (in seconds) that an
               object is in a CloudFront cache before CloudFront forwards another request
               in the absence of an `Cache-Control max-age` or `Expires` header. Defaults to
               1 day.
        :param pulumi.Input[str] field_level_encryption_id: Field level encryption configuration ID
        :param pulumi.Input[List[pulumi.Input['DistributionDefaultCacheBehaviorLambdaFunctionAssociationArgs']]] lambda_function_associations: A config block that triggers a lambda function with
               specific actions. Defined below, maximum 4.
        :param pulumi.Input[float] max_ttl: The maximum amount of time (in seconds) that an
               object is in a CloudFront cache before CloudFront forwards another request
               to your origin to determine whether the object has been updated. Only
               effective in the presence of `Cache-Control max-age`, `Cache-Control
               s-maxage`, and `Expires` headers. Defaults to 365 days.
        :param pulumi.Input[float] min_ttl: The minimum amount of time that you want objects to
               stay in CloudFront caches before CloudFront queries your origin to see
               whether the object has been updated. Defaults to 0 seconds.
        :param pulumi.Input[bool] smooth_streaming: Indicates whether you want to distribute
               media files in Microsoft Smooth Streaming format using the origin that is
               associated with this cache behavior.
        :param pulumi.Input[List[pulumi.Input[str]]] trusted_signers: The AWS accounts, if any, that you want to
               allow to create signed URLs for private content.
        """
        __self__.allowed_methods = allowed_methods
        __self__.cached_methods = cached_methods
        __self__.forwarded_values = forwarded_values
        __self__.target_origin_id = target_origin_id
        __self__.viewer_protocol_policy = viewer_protocol_policy
        __self__.compress = compress
        __self__.default_ttl = default_ttl
        __self__.field_level_encryption_id = field_level_encryption_id
        __self__.lambda_function_associations = lambda_function_associations
        __self__.max_ttl = max_ttl
        __self__.min_ttl = min_ttl
        __self__.smooth_streaming = smooth_streaming
        __self__.trusted_signers = trusted_signers

@pulumi.input_type
class DistributionDefaultCacheBehaviorForwardedValuesArgs:
    cookies: pulumi.Input['DistributionDefaultCacheBehaviorForwardedValuesCookiesArgs'] = pulumi.input_property("cookies")
    """
    The forwarded values cookies
    that specifies how CloudFront handles cookies (maximum one).
    """
    query_string: pulumi.Input[bool] = pulumi.input_property("queryString")
    """
    Indicates whether you want CloudFront to forward
    query strings to the origin that is associated with this cache behavior.
    """
    headers: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("headers")
    """
    Specifies the Headers, if any, that you want
    CloudFront to vary upon for this cache behavior. Specify `*` to include all
    headers.
    """
    query_string_cache_keys: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("queryStringCacheKeys")
    """
    When specified, along with a value of
    `true` for `query_string`, all query strings are forwarded, however only the
    query string keys listed in this argument are cached. When omitted with a
    value of `true` for `query_string`, all query string keys are cached.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, cookies: pulumi.Input['DistributionDefaultCacheBehaviorForwardedValuesCookiesArgs'], query_string: pulumi.Input[bool], headers: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, query_string_cache_keys: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input['DistributionDefaultCacheBehaviorForwardedValuesCookiesArgs'] cookies: The forwarded values cookies
               that specifies how CloudFront handles cookies (maximum one).
        :param pulumi.Input[bool] query_string: Indicates whether you want CloudFront to forward
               query strings to the origin that is associated with this cache behavior.
        :param pulumi.Input[List[pulumi.Input[str]]] headers: Specifies the Headers, if any, that you want
               CloudFront to vary upon for this cache behavior. Specify `*` to include all
               headers.
        :param pulumi.Input[List[pulumi.Input[str]]] query_string_cache_keys: When specified, along with a value of
               `true` for `query_string`, all query strings are forwarded, however only the
               query string keys listed in this argument are cached. When omitted with a
               value of `true` for `query_string`, all query string keys are cached.
        """
        __self__.cookies = cookies
        __self__.query_string = query_string
        __self__.headers = headers
        __self__.query_string_cache_keys = query_string_cache_keys

@pulumi.input_type
class DistributionDefaultCacheBehaviorForwardedValuesCookiesArgs:
    forward: pulumi.Input[str] = pulumi.input_property("forward")
    """
    Specifies whether you want CloudFront to forward
    cookies to the origin that is associated with this cache behavior. You can
    specify `all`, `none` or `whitelist`. If `whitelist`, you must include the
    subsequent `whitelisted_names`
    """
    whitelisted_names: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("whitelistedNames")
    """
    If you have specified `whitelist` to
    `forward`, the whitelisted cookies that you want CloudFront to forward to
    your origin.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, forward: pulumi.Input[str], whitelisted_names: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] forward: Specifies whether you want CloudFront to forward
               cookies to the origin that is associated with this cache behavior. You can
               specify `all`, `none` or `whitelist`. If `whitelist`, you must include the
               subsequent `whitelisted_names`
        :param pulumi.Input[List[pulumi.Input[str]]] whitelisted_names: If you have specified `whitelist` to
               `forward`, the whitelisted cookies that you want CloudFront to forward to
               your origin.
        """
        __self__.forward = forward
        __self__.whitelisted_names = whitelisted_names

@pulumi.input_type
class DistributionDefaultCacheBehaviorLambdaFunctionAssociationArgs:
    event_type: pulumi.Input[str] = pulumi.input_property("eventType")
    """
    The specific event to trigger this function.
    Valid values: `viewer-request`, `origin-request`, `viewer-response`,
    `origin-response`
    """
    lambda_arn: pulumi.Input[str] = pulumi.input_property("lambdaArn")
    """
    ARN of the Lambda function.
    """
    include_body: Optional[pulumi.Input[bool]] = pulumi.input_property("includeBody")
    """
    When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: `true`, `false`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, event_type: pulumi.Input[str], lambda_arn: pulumi.Input[str], include_body: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[str] event_type: The specific event to trigger this function.
               Valid values: `viewer-request`, `origin-request`, `viewer-response`,
               `origin-response`
        :param pulumi.Input[str] lambda_arn: ARN of the Lambda function.
        :param pulumi.Input[bool] include_body: When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: `true`, `false`.
        """
        __self__.event_type = event_type
        __self__.lambda_arn = lambda_arn
        __self__.include_body = include_body

@pulumi.input_type
class DistributionLoggingConfigArgs:
    bucket: pulumi.Input[str] = pulumi.input_property("bucket")
    """
    The Amazon S3 bucket to store the access logs in, for
    example, `myawslogbucket.s3.amazonaws.com`.
    """
    include_cookies: Optional[pulumi.Input[bool]] = pulumi.input_property("includeCookies")
    """
    Specifies whether you want CloudFront to
    include cookies in access logs (default: `false`).
    """
    prefix: Optional[pulumi.Input[str]] = pulumi.input_property("prefix")
    """
    An optional string that you want CloudFront to prefix
    to the access log filenames for this distribution, for example, `myprefix/`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, bucket: pulumi.Input[str], include_cookies: Optional[pulumi.Input[bool]] = None, prefix: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] bucket: The Amazon S3 bucket to store the access logs in, for
               example, `myawslogbucket.s3.amazonaws.com`.
        :param pulumi.Input[bool] include_cookies: Specifies whether you want CloudFront to
               include cookies in access logs (default: `false`).
        :param pulumi.Input[str] prefix: An optional string that you want CloudFront to prefix
               to the access log filenames for this distribution, for example, `myprefix/`.
        """
        __self__.bucket = bucket
        __self__.include_cookies = include_cookies
        __self__.prefix = prefix

@pulumi.input_type
class DistributionOrderedCacheBehaviorArgs:
    allowed_methods: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("allowedMethods")
    """
    Controls which HTTP methods CloudFront
    processes and forwards to your Amazon S3 bucket or your custom origin.
    """
    cached_methods: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("cachedMethods")
    """
    Controls whether CloudFront caches the
    response to requests using the specified HTTP methods.
    """
    forwarded_values: pulumi.Input['DistributionOrderedCacheBehaviorForwardedValuesArgs'] = pulumi.input_property("forwardedValues")
    """
    The forwarded values configuration that specifies how CloudFront
    handles query strings, cookies and headers (maximum one).
    """
    path_pattern: pulumi.Input[str] = pulumi.input_property("pathPattern")
    """
    The pattern (for example, `images/*.jpg)` that
    specifies which requests you want this cache behavior to apply to.
    """
    target_origin_id: pulumi.Input[str] = pulumi.input_property("targetOriginId")
    """
    The value of ID for the origin that you want
    CloudFront to route requests to when a request matches the path pattern
    either for a cache behavior or for the default cache behavior.
    """
    viewer_protocol_policy: pulumi.Input[str] = pulumi.input_property("viewerProtocolPolicy")
    """
    Use this element to specify the
    protocol that users can use to access the files in the origin specified by
    TargetOriginId when a request matches the path pattern in PathPattern. One
    of `allow-all`, `https-only`, or `redirect-to-https`.
    """
    compress: Optional[pulumi.Input[bool]] = pulumi.input_property("compress")
    """
    Whether you want CloudFront to automatically
    compress content for web requests that include `Accept-Encoding: gzip` in
    the request header (default: `false`).
    """
    default_ttl: Optional[pulumi.Input[float]] = pulumi.input_property("defaultTtl")
    """
    The default amount of time (in seconds) that an
    object is in a CloudFront cache before CloudFront forwards another request
    in the absence of an `Cache-Control max-age` or `Expires` header. Defaults to
    1 day.
    """
    field_level_encryption_id: Optional[pulumi.Input[str]] = pulumi.input_property("fieldLevelEncryptionId")
    """
    Field level encryption configuration ID
    """
    lambda_function_associations: Optional[pulumi.Input[List[pulumi.Input['DistributionOrderedCacheBehaviorLambdaFunctionAssociationArgs']]]] = pulumi.input_property("lambdaFunctionAssociations")
    """
    A config block that triggers a lambda function with
    specific actions. Defined below, maximum 4.
    """
    max_ttl: Optional[pulumi.Input[float]] = pulumi.input_property("maxTtl")
    """
    The maximum amount of time (in seconds) that an
    object is in a CloudFront cache before CloudFront forwards another request
    to your origin to determine whether the object has been updated. Only
    effective in the presence of `Cache-Control max-age`, `Cache-Control
    s-maxage`, and `Expires` headers. Defaults to 365 days.
    """
    min_ttl: Optional[pulumi.Input[float]] = pulumi.input_property("minTtl")
    """
    The minimum amount of time that you want objects to
    stay in CloudFront caches before CloudFront queries your origin to see
    whether the object has been updated. Defaults to 0 seconds.
    """
    smooth_streaming: Optional[pulumi.Input[bool]] = pulumi.input_property("smoothStreaming")
    """
    Indicates whether you want to distribute
    media files in Microsoft Smooth Streaming format using the origin that is
    associated with this cache behavior.
    """
    trusted_signers: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("trustedSigners")
    """
    The AWS accounts, if any, that you want to
    allow to create signed URLs for private content.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, allowed_methods: pulumi.Input[List[pulumi.Input[str]]], cached_methods: pulumi.Input[List[pulumi.Input[str]]], forwarded_values: pulumi.Input['DistributionOrderedCacheBehaviorForwardedValuesArgs'], path_pattern: pulumi.Input[str], target_origin_id: pulumi.Input[str], viewer_protocol_policy: pulumi.Input[str], compress: Optional[pulumi.Input[bool]] = None, default_ttl: Optional[pulumi.Input[float]] = None, field_level_encryption_id: Optional[pulumi.Input[str]] = None, lambda_function_associations: Optional[pulumi.Input[List[pulumi.Input['DistributionOrderedCacheBehaviorLambdaFunctionAssociationArgs']]]] = None, max_ttl: Optional[pulumi.Input[float]] = None, min_ttl: Optional[pulumi.Input[float]] = None, smooth_streaming: Optional[pulumi.Input[bool]] = None, trusted_signers: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] allowed_methods: Controls which HTTP methods CloudFront
               processes and forwards to your Amazon S3 bucket or your custom origin.
        :param pulumi.Input[List[pulumi.Input[str]]] cached_methods: Controls whether CloudFront caches the
               response to requests using the specified HTTP methods.
        :param pulumi.Input['DistributionOrderedCacheBehaviorForwardedValuesArgs'] forwarded_values: The forwarded values configuration that specifies how CloudFront
               handles query strings, cookies and headers (maximum one).
        :param pulumi.Input[str] path_pattern: The pattern (for example, `images/*.jpg)` that
               specifies which requests you want this cache behavior to apply to.
        :param pulumi.Input[str] target_origin_id: The value of ID for the origin that you want
               CloudFront to route requests to when a request matches the path pattern
               either for a cache behavior or for the default cache behavior.
        :param pulumi.Input[str] viewer_protocol_policy: Use this element to specify the
               protocol that users can use to access the files in the origin specified by
               TargetOriginId when a request matches the path pattern in PathPattern. One
               of `allow-all`, `https-only`, or `redirect-to-https`.
        :param pulumi.Input[bool] compress: Whether you want CloudFront to automatically
               compress content for web requests that include `Accept-Encoding: gzip` in
               the request header (default: `false`).
        :param pulumi.Input[float] default_ttl: The default amount of time (in seconds) that an
               object is in a CloudFront cache before CloudFront forwards another request
               in the absence of an `Cache-Control max-age` or `Expires` header. Defaults to
               1 day.
        :param pulumi.Input[str] field_level_encryption_id: Field level encryption configuration ID
        :param pulumi.Input[List[pulumi.Input['DistributionOrderedCacheBehaviorLambdaFunctionAssociationArgs']]] lambda_function_associations: A config block that triggers a lambda function with
               specific actions. Defined below, maximum 4.
        :param pulumi.Input[float] max_ttl: The maximum amount of time (in seconds) that an
               object is in a CloudFront cache before CloudFront forwards another request
               to your origin to determine whether the object has been updated. Only
               effective in the presence of `Cache-Control max-age`, `Cache-Control
               s-maxage`, and `Expires` headers. Defaults to 365 days.
        :param pulumi.Input[float] min_ttl: The minimum amount of time that you want objects to
               stay in CloudFront caches before CloudFront queries your origin to see
               whether the object has been updated. Defaults to 0 seconds.
        :param pulumi.Input[bool] smooth_streaming: Indicates whether you want to distribute
               media files in Microsoft Smooth Streaming format using the origin that is
               associated with this cache behavior.
        :param pulumi.Input[List[pulumi.Input[str]]] trusted_signers: The AWS accounts, if any, that you want to
               allow to create signed URLs for private content.
        """
        __self__.allowed_methods = allowed_methods
        __self__.cached_methods = cached_methods
        __self__.forwarded_values = forwarded_values
        __self__.path_pattern = path_pattern
        __self__.target_origin_id = target_origin_id
        __self__.viewer_protocol_policy = viewer_protocol_policy
        __self__.compress = compress
        __self__.default_ttl = default_ttl
        __self__.field_level_encryption_id = field_level_encryption_id
        __self__.lambda_function_associations = lambda_function_associations
        __self__.max_ttl = max_ttl
        __self__.min_ttl = min_ttl
        __self__.smooth_streaming = smooth_streaming
        __self__.trusted_signers = trusted_signers

@pulumi.input_type
class DistributionOrderedCacheBehaviorForwardedValuesArgs:
    cookies: pulumi.Input['DistributionOrderedCacheBehaviorForwardedValuesCookiesArgs'] = pulumi.input_property("cookies")
    """
    The forwarded values cookies
    that specifies how CloudFront handles cookies (maximum one).
    """
    query_string: pulumi.Input[bool] = pulumi.input_property("queryString")
    """
    Indicates whether you want CloudFront to forward
    query strings to the origin that is associated with this cache behavior.
    """
    headers: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("headers")
    """
    Specifies the Headers, if any, that you want
    CloudFront to vary upon for this cache behavior. Specify `*` to include all
    headers.
    """
    query_string_cache_keys: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("queryStringCacheKeys")
    """
    When specified, along with a value of
    `true` for `query_string`, all query strings are forwarded, however only the
    query string keys listed in this argument are cached. When omitted with a
    value of `true` for `query_string`, all query string keys are cached.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, cookies: pulumi.Input['DistributionOrderedCacheBehaviorForwardedValuesCookiesArgs'], query_string: pulumi.Input[bool], headers: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, query_string_cache_keys: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input['DistributionOrderedCacheBehaviorForwardedValuesCookiesArgs'] cookies: The forwarded values cookies
               that specifies how CloudFront handles cookies (maximum one).
        :param pulumi.Input[bool] query_string: Indicates whether you want CloudFront to forward
               query strings to the origin that is associated with this cache behavior.
        :param pulumi.Input[List[pulumi.Input[str]]] headers: Specifies the Headers, if any, that you want
               CloudFront to vary upon for this cache behavior. Specify `*` to include all
               headers.
        :param pulumi.Input[List[pulumi.Input[str]]] query_string_cache_keys: When specified, along with a value of
               `true` for `query_string`, all query strings are forwarded, however only the
               query string keys listed in this argument are cached. When omitted with a
               value of `true` for `query_string`, all query string keys are cached.
        """
        __self__.cookies = cookies
        __self__.query_string = query_string
        __self__.headers = headers
        __self__.query_string_cache_keys = query_string_cache_keys

@pulumi.input_type
class DistributionOrderedCacheBehaviorForwardedValuesCookiesArgs:
    forward: pulumi.Input[str] = pulumi.input_property("forward")
    """
    Specifies whether you want CloudFront to forward
    cookies to the origin that is associated with this cache behavior. You can
    specify `all`, `none` or `whitelist`. If `whitelist`, you must include the
    subsequent `whitelisted_names`
    """
    whitelisted_names: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("whitelistedNames")
    """
    If you have specified `whitelist` to
    `forward`, the whitelisted cookies that you want CloudFront to forward to
    your origin.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, forward: pulumi.Input[str], whitelisted_names: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] forward: Specifies whether you want CloudFront to forward
               cookies to the origin that is associated with this cache behavior. You can
               specify `all`, `none` or `whitelist`. If `whitelist`, you must include the
               subsequent `whitelisted_names`
        :param pulumi.Input[List[pulumi.Input[str]]] whitelisted_names: If you have specified `whitelist` to
               `forward`, the whitelisted cookies that you want CloudFront to forward to
               your origin.
        """
        __self__.forward = forward
        __self__.whitelisted_names = whitelisted_names

@pulumi.input_type
class DistributionOrderedCacheBehaviorLambdaFunctionAssociationArgs:
    event_type: pulumi.Input[str] = pulumi.input_property("eventType")
    """
    The specific event to trigger this function.
    Valid values: `viewer-request`, `origin-request`, `viewer-response`,
    `origin-response`
    """
    lambda_arn: pulumi.Input[str] = pulumi.input_property("lambdaArn")
    """
    ARN of the Lambda function.
    """
    include_body: Optional[pulumi.Input[bool]] = pulumi.input_property("includeBody")
    """
    When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: `true`, `false`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, event_type: pulumi.Input[str], lambda_arn: pulumi.Input[str], include_body: Optional[pulumi.Input[bool]] = None) -> None:
        """
        :param pulumi.Input[str] event_type: The specific event to trigger this function.
               Valid values: `viewer-request`, `origin-request`, `viewer-response`,
               `origin-response`
        :param pulumi.Input[str] lambda_arn: ARN of the Lambda function.
        :param pulumi.Input[bool] include_body: When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: `true`, `false`.
        """
        __self__.event_type = event_type
        __self__.lambda_arn = lambda_arn
        __self__.include_body = include_body

@pulumi.input_type
class DistributionOriginArgs:
    domain_name: pulumi.Input[str] = pulumi.input_property("domainName")
    """
    The DNS domain name of either the S3 bucket, or
    web site of your custom origin.
    """
    origin_id: pulumi.Input[str] = pulumi.input_property("originId")
    """
    The unique identifier of the member origin
    """
    custom_headers: Optional[pulumi.Input[List[pulumi.Input['DistributionOriginCustomHeaderArgs']]]] = pulumi.input_property("customHeaders")
    """
    One or more sub-resources with `name` and
    `value` parameters that specify header data that will be sent to the origin
    (multiples allowed).
    """
    custom_origin_config: Optional[pulumi.Input['DistributionOriginCustomOriginConfigArgs']] = pulumi.input_property("customOriginConfig")
    """
    The CloudFront custom
    origin configuration information. If an S3
    origin is required, use `s3_origin_config` instead.
    """
    origin_path: Optional[pulumi.Input[str]] = pulumi.input_property("originPath")
    """
    An optional element that causes CloudFront to
    request your content from a directory in your Amazon S3 bucket or your
    custom origin.
    """
    s3_origin_config: Optional[pulumi.Input['DistributionOriginS3OriginConfigArgs']] = pulumi.input_property("s3OriginConfig")
    """
    The CloudFront S3 origin
    configuration information. If a custom origin is required, use
    `custom_origin_config` instead.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, domain_name: pulumi.Input[str], origin_id: pulumi.Input[str], custom_headers: Optional[pulumi.Input[List[pulumi.Input['DistributionOriginCustomHeaderArgs']]]] = None, custom_origin_config: Optional[pulumi.Input['DistributionOriginCustomOriginConfigArgs']] = None, origin_path: Optional[pulumi.Input[str]] = None, s3_origin_config: Optional[pulumi.Input['DistributionOriginS3OriginConfigArgs']] = None) -> None:
        """
        :param pulumi.Input[str] domain_name: The DNS domain name of either the S3 bucket, or
               web site of your custom origin.
        :param pulumi.Input[str] origin_id: The unique identifier of the member origin
        :param pulumi.Input[List[pulumi.Input['DistributionOriginCustomHeaderArgs']]] custom_headers: One or more sub-resources with `name` and
               `value` parameters that specify header data that will be sent to the origin
               (multiples allowed).
        :param pulumi.Input['DistributionOriginCustomOriginConfigArgs'] custom_origin_config: The CloudFront custom
               origin configuration information. If an S3
               origin is required, use `s3_origin_config` instead.
        :param pulumi.Input[str] origin_path: An optional element that causes CloudFront to
               request your content from a directory in your Amazon S3 bucket or your
               custom origin.
        :param pulumi.Input['DistributionOriginS3OriginConfigArgs'] s3_origin_config: The CloudFront S3 origin
               configuration information. If a custom origin is required, use
               `custom_origin_config` instead.
        """
        __self__.domain_name = domain_name
        __self__.origin_id = origin_id
        __self__.custom_headers = custom_headers
        __self__.custom_origin_config = custom_origin_config
        __self__.origin_path = origin_path
        __self__.s3_origin_config = s3_origin_config

@pulumi.input_type
class DistributionOriginCustomHeaderArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    value: pulumi.Input[str] = pulumi.input_property("value")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], value: pulumi.Input[str]) -> None:
        __self__.name = name
        __self__.value = value

@pulumi.input_type
class DistributionOriginCustomOriginConfigArgs:
    http_port: pulumi.Input[float] = pulumi.input_property("httpPort")
    """
    The HTTP port the custom origin listens on.
    """
    https_port: pulumi.Input[float] = pulumi.input_property("httpsPort")
    """
    The HTTPS port the custom origin listens on.
    """
    origin_protocol_policy: pulumi.Input[str] = pulumi.input_property("originProtocolPolicy")
    """
    The origin protocol policy to apply to
    your origin. One of `http-only`, `https-only`, or `match-viewer`.
    """
    origin_ssl_protocols: pulumi.Input[List[pulumi.Input[str]]] = pulumi.input_property("originSslProtocols")
    """
    The SSL/TLS protocols that you want
    CloudFront to use when communicating with your origin over HTTPS. A list of
    one or more of `SSLv3`, `TLSv1`, `TLSv1.1`, and `TLSv1.2`.
    """
    origin_keepalive_timeout: Optional[pulumi.Input[float]] = pulumi.input_property("originKeepaliveTimeout")
    """
    The Custom KeepAlive timeout, in seconds. By default, AWS enforces a limit of `60`. But you can request an [increase](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-request-timeout).
    """
    origin_read_timeout: Optional[pulumi.Input[float]] = pulumi.input_property("originReadTimeout")
    """
    The Custom Read timeout, in seconds. By default, AWS enforces a limit of `60`. But you can request an [increase](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-request-timeout).
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, http_port: pulumi.Input[float], https_port: pulumi.Input[float], origin_protocol_policy: pulumi.Input[str], origin_ssl_protocols: pulumi.Input[List[pulumi.Input[str]]], origin_keepalive_timeout: Optional[pulumi.Input[float]] = None, origin_read_timeout: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[float] http_port: The HTTP port the custom origin listens on.
        :param pulumi.Input[float] https_port: The HTTPS port the custom origin listens on.
        :param pulumi.Input[str] origin_protocol_policy: The origin protocol policy to apply to
               your origin. One of `http-only`, `https-only`, or `match-viewer`.
        :param pulumi.Input[List[pulumi.Input[str]]] origin_ssl_protocols: The SSL/TLS protocols that you want
               CloudFront to use when communicating with your origin over HTTPS. A list of
               one or more of `SSLv3`, `TLSv1`, `TLSv1.1`, and `TLSv1.2`.
        :param pulumi.Input[float] origin_keepalive_timeout: The Custom KeepAlive timeout, in seconds. By default, AWS enforces a limit of `60`. But you can request an [increase](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-request-timeout).
        :param pulumi.Input[float] origin_read_timeout: The Custom Read timeout, in seconds. By default, AWS enforces a limit of `60`. But you can request an [increase](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-request-timeout).
        """
        __self__.http_port = http_port
        __self__.https_port = https_port
        __self__.origin_protocol_policy = origin_protocol_policy
        __self__.origin_ssl_protocols = origin_ssl_protocols
        __self__.origin_keepalive_timeout = origin_keepalive_timeout
        __self__.origin_read_timeout = origin_read_timeout

@pulumi.input_type
class DistributionOriginGroupArgs:
    failover_criteria: pulumi.Input['DistributionOriginGroupFailoverCriteriaArgs'] = pulumi.input_property("failoverCriteria")
    """
    The failover criteria for when to failover to the secondary origin
    """
    members: pulumi.Input[List[pulumi.Input['DistributionOriginGroupMemberArgs']]] = pulumi.input_property("members")
    """
    Ordered member configuration blocks assigned to the origin group, where the first member is the primary origin. You must specify two members.
    """
    origin_id: pulumi.Input[str] = pulumi.input_property("originId")
    """
    The unique identifier of the member origin
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, failover_criteria: pulumi.Input['DistributionOriginGroupFailoverCriteriaArgs'], members: pulumi.Input[List[pulumi.Input['DistributionOriginGroupMemberArgs']]], origin_id: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input['DistributionOriginGroupFailoverCriteriaArgs'] failover_criteria: The failover criteria for when to failover to the secondary origin
        :param pulumi.Input[List[pulumi.Input['DistributionOriginGroupMemberArgs']]] members: Ordered member configuration blocks assigned to the origin group, where the first member is the primary origin. You must specify two members.
        :param pulumi.Input[str] origin_id: The unique identifier of the member origin
        """
        __self__.failover_criteria = failover_criteria
        __self__.members = members
        __self__.origin_id = origin_id

@pulumi.input_type
class DistributionOriginGroupFailoverCriteriaArgs:
    status_codes: pulumi.Input[List[pulumi.Input[float]]] = pulumi.input_property("statusCodes")
    """
    A list of HTTP status codes for the origin group
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, status_codes: pulumi.Input[List[pulumi.Input[float]]]) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[float]]] status_codes: A list of HTTP status codes for the origin group
        """
        __self__.status_codes = status_codes

@pulumi.input_type
class DistributionOriginGroupMemberArgs:
    origin_id: pulumi.Input[str] = pulumi.input_property("originId")
    """
    The unique identifier of the member origin
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, origin_id: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] origin_id: The unique identifier of the member origin
        """
        __self__.origin_id = origin_id

@pulumi.input_type
class DistributionOriginS3OriginConfigArgs:
    origin_access_identity: pulumi.Input[str] = pulumi.input_property("originAccessIdentity")
    """
    The [CloudFront origin access
    identity][5] to associate with the origin.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, origin_access_identity: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] origin_access_identity: The [CloudFront origin access
               identity][5] to associate with the origin.
        """
        __self__.origin_access_identity = origin_access_identity

@pulumi.input_type
class DistributionRestrictionsArgs:
    geo_restriction: pulumi.Input['DistributionRestrictionsGeoRestrictionArgs'] = pulumi.input_property("geoRestriction")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, geo_restriction: pulumi.Input['DistributionRestrictionsGeoRestrictionArgs']) -> None:
        __self__.geo_restriction = geo_restriction

@pulumi.input_type
class DistributionRestrictionsGeoRestrictionArgs:
    restriction_type: pulumi.Input[str] = pulumi.input_property("restrictionType")
    """
    The method that you want to use to restrict
    distribution of your content by country: `none`, `whitelist`, or
    `blacklist`.
    """
    locations: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("locations")
    """
    The [ISO 3166-1-alpha-2 codes][4] for which you
    want CloudFront either to distribute your content (`whitelist`) or not
    distribute your content (`blacklist`).
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, restriction_type: pulumi.Input[str], locations: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None) -> None:
        """
        :param pulumi.Input[str] restriction_type: The method that you want to use to restrict
               distribution of your content by country: `none`, `whitelist`, or
               `blacklist`.
        :param pulumi.Input[List[pulumi.Input[str]]] locations: The [ISO 3166-1-alpha-2 codes][4] for which you
               want CloudFront either to distribute your content (`whitelist`) or not
               distribute your content (`blacklist`).
        """
        __self__.restriction_type = restriction_type
        __self__.locations = locations

@pulumi.input_type
class DistributionViewerCertificateArgs:
    acm_certificate_arn: Optional[pulumi.Input[str]] = pulumi.input_property("acmCertificateArn")
    """
    The ARN of the [AWS Certificate Manager](https://aws.amazon.com/certificate-manager/)
    certificate that you wish to use with this distribution. Specify this,
    `cloudfront_default_certificate`, or `iam_certificate_id`.  The ACM
    certificate must be in  US-EAST-1.
    """
    cloudfront_default_certificate: Optional[pulumi.Input[bool]] = pulumi.input_property("cloudfrontDefaultCertificate")
    """
    `true` if you want viewers to use HTTPS
    to request your objects and you're using the CloudFront domain name for your
    distribution. Specify this, `acm_certificate_arn`, or `iam_certificate_id`.
    """
    iam_certificate_id: Optional[pulumi.Input[str]] = pulumi.input_property("iamCertificateId")
    """
    The IAM certificate identifier of the custom viewer
    certificate for this distribution if you are using a custom domain. Specify
    this, `acm_certificate_arn`, or `cloudfront_default_certificate`.
    """
    minimum_protocol_version: Optional[pulumi.Input[str]] = pulumi.input_property("minimumProtocolVersion")
    """
    The minimum version of the SSL protocol that
    you want CloudFront to use for HTTPS connections. Can only be set if
    `cloudfront_default_certificate = false`. One of `SSLv3`, `TLSv1`,
    `TLSv1_2016`, `TLSv1.1_2016` or `TLSv1.2_2018`. Default: `TLSv1`. **NOTE**:
    If you are using a custom certificate (specified with `acm_certificate_arn`
    or `iam_certificate_id`), and have specified `sni-only` in
    `ssl_support_method`, `TLSv1` or later must be specified. If you have
    specified `vip` in `ssl_support_method`, only `SSLv3` or `TLSv1` can be
    specified. If you have specified `cloudfront_default_certificate`, `TLSv1`
    must be specified.
    """
    ssl_support_method: Optional[pulumi.Input[str]] = pulumi.input_property("sslSupportMethod")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, acm_certificate_arn: Optional[pulumi.Input[str]] = None, cloudfront_default_certificate: Optional[pulumi.Input[bool]] = None, iam_certificate_id: Optional[pulumi.Input[str]] = None, minimum_protocol_version: Optional[pulumi.Input[str]] = None, ssl_support_method: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] acm_certificate_arn: The ARN of the [AWS Certificate Manager](https://aws.amazon.com/certificate-manager/)
               certificate that you wish to use with this distribution. Specify this,
               `cloudfront_default_certificate`, or `iam_certificate_id`.  The ACM
               certificate must be in  US-EAST-1.
        :param pulumi.Input[bool] cloudfront_default_certificate: `true` if you want viewers to use HTTPS
               to request your objects and you're using the CloudFront domain name for your
               distribution. Specify this, `acm_certificate_arn`, or `iam_certificate_id`.
        :param pulumi.Input[str] iam_certificate_id: The IAM certificate identifier of the custom viewer
               certificate for this distribution if you are using a custom domain. Specify
               this, `acm_certificate_arn`, or `cloudfront_default_certificate`.
        :param pulumi.Input[str] minimum_protocol_version: The minimum version of the SSL protocol that
               you want CloudFront to use for HTTPS connections. Can only be set if
               `cloudfront_default_certificate = false`. One of `SSLv3`, `TLSv1`,
               `TLSv1_2016`, `TLSv1.1_2016` or `TLSv1.2_2018`. Default: `TLSv1`. **NOTE**:
               If you are using a custom certificate (specified with `acm_certificate_arn`
               or `iam_certificate_id`), and have specified `sni-only` in
               `ssl_support_method`, `TLSv1` or later must be specified. If you have
               specified `vip` in `ssl_support_method`, only `SSLv3` or `TLSv1` can be
               specified. If you have specified `cloudfront_default_certificate`, `TLSv1`
               must be specified.
        """
        __self__.acm_certificate_arn = acm_certificate_arn
        __self__.cloudfront_default_certificate = cloudfront_default_certificate
        __self__.iam_certificate_id = iam_certificate_id
        __self__.minimum_protocol_version = minimum_protocol_version
        __self__.ssl_support_method = ssl_support_method

