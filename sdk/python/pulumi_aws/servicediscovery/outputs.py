# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'ServiceDnsConfig',
    'ServiceDnsConfigDnsRecord',
    'ServiceHealthCheckConfig',
    'ServiceHealthCheckCustomConfig',
]

@pulumi.output_type
class ServiceDnsConfig(dict):
    dns_records: List['outputs.ServiceDnsConfigDnsRecord'] = pulumi.output_property("dnsRecords")
    """
    An array that contains one DnsRecord object for each resource record set.
    """
    namespace_id: str = pulumi.output_property("namespaceId")
    """
    The ID of the namespace to use for DNS configuration.
    """
    routing_policy: Optional[str] = pulumi.output_property("routingPolicy")
    """
    The routing policy that you want to apply to all records that Route 53 creates when you register an instance and specify the service. Valid Values: MULTIVALUE, WEIGHTED
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ServiceDnsConfigDnsRecord(dict):
    ttl: float = pulumi.output_property("ttl")
    """
    The amount of time, in seconds, that you want DNS resolvers to cache the settings for this resource record set.
    """
    type: str = pulumi.output_property("type")
    """
    The type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy. Valid Values: HTTP, HTTPS, TCP
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ServiceHealthCheckConfig(dict):
    failure_threshold: Optional[float] = pulumi.output_property("failureThreshold")
    """
    The number of 30-second intervals that you want service discovery to wait before it changes the health status of a service instance.  Maximum value of 10.
    """
    resource_path: Optional[str] = pulumi.output_property("resourcePath")
    """
    The path that you want Route 53 to request when performing health checks. Route 53 automatically adds the DNS name for the service. If you don't specify a value, the default value is /.
    """
    type: Optional[str] = pulumi.output_property("type")
    """
    The type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy. Valid Values: HTTP, HTTPS, TCP
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ServiceHealthCheckCustomConfig(dict):
    failure_threshold: Optional[float] = pulumi.output_property("failureThreshold")
    """
    The number of 30-second intervals that you want service discovery to wait before it changes the health status of a service instance.  Maximum value of 10.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


