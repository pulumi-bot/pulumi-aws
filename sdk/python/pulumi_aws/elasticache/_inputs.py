# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'ClusterCacheNodeArgs',
    'ParameterGroupParameterArgs',
    'ReplicationGroupClusterModeArgs',
]

@pulumi.input_type
class ClusterCacheNodeArgs:
    address: Optional[pulumi.Input[str]] = pulumi.input_property("address")
    availability_zone: Optional[pulumi.Input[str]] = pulumi.input_property("availabilityZone")
    """
    The Availability Zone for the cache cluster. If you want to create cache nodes in multi-az, use `preferred_availability_zones` instead. Default: System chosen Availability Zone.
    """
    id: Optional[pulumi.Input[str]] = pulumi.input_property("id")
    port: Optional[pulumi.Input[float]] = pulumi.input_property("port")
    """
    The port number on which each of the cache nodes will accept connections. For Memcache the default is 11211, and for Redis the default port is 6379. Cannot be provided with `replication_group_id`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, address: Optional[pulumi.Input[str]] = None, availability_zone: Optional[pulumi.Input[str]] = None, id: Optional[pulumi.Input[str]] = None, port: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[str] availability_zone: The Availability Zone for the cache cluster. If you want to create cache nodes in multi-az, use `preferred_availability_zones` instead. Default: System chosen Availability Zone.
        :param pulumi.Input[float] port: The port number on which each of the cache nodes will accept connections. For Memcache the default is 11211, and for Redis the default port is 6379. Cannot be provided with `replication_group_id`.
        """
        __self__.address = address
        __self__.availability_zone = availability_zone
        __self__.id = id
        __self__.port = port

@pulumi.input_type
class ParameterGroupParameterArgs:
    name: pulumi.Input[str] = pulumi.input_property("name")
    """
    The name of the ElastiCache parameter.
    """
    value: pulumi.Input[str] = pulumi.input_property("value")
    """
    The value of the ElastiCache parameter.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, name: pulumi.Input[str], value: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] name: The name of the ElastiCache parameter.
        :param pulumi.Input[str] value: The value of the ElastiCache parameter.
        """
        __self__.name = name
        __self__.value = value

@pulumi.input_type
class ReplicationGroupClusterModeArgs:
    num_node_groups: pulumi.Input[float] = pulumi.input_property("numNodeGroups")
    """
    Specify the number of node groups (shards) for this Redis replication group. Changing this number will trigger an online resizing operation before other settings modifications.
    """
    replicas_per_node_group: pulumi.Input[float] = pulumi.input_property("replicasPerNodeGroup")
    """
    Specify the number of replica nodes in each node group. Valid values are 0 to 5. Changing this number will force a new resource.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, num_node_groups: pulumi.Input[float], replicas_per_node_group: pulumi.Input[float]) -> None:
        """
        :param pulumi.Input[float] num_node_groups: Specify the number of node groups (shards) for this Redis replication group. Changing this number will trigger an online resizing operation before other settings modifications.
        :param pulumi.Input[float] replicas_per_node_group: Specify the number of replica nodes in each node group. Valid values are 0 to 5. Changing this number will force a new resource.
        """
        __self__.num_node_groups = num_node_groups
        __self__.replicas_per_node_group = replicas_per_node_group

