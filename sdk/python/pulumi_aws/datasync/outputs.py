# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'EfsLocationEc2Config',
    'LocationSmbMountOptions',
    'NfsLocationOnPremConfig',
    'S3LocationS3Config',
    'TaskOptions',
]

@pulumi.output_type
class EfsLocationEc2Config(dict):
    security_group_arns: List[str] = pulumi.output_property("securityGroupArns")
    """
    List of Amazon Resource Names (ARNs) of the EC2 Security Groups that are associated with the EFS Mount Target.
    """
    subnet_arn: str = pulumi.output_property("subnetArn")
    """
    Amazon Resource Name (ARN) of the EC2 Subnet that is associated with the EFS Mount Target.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class LocationSmbMountOptions(dict):
    version: Optional[str] = pulumi.output_property("version")
    """
    The specific SMB version that you want DataSync to use for mounting your SMB share. Valid values: `AUTOMATIC`, `SMB2`, and `SMB3`. Default: `AUTOMATIC`
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class NfsLocationOnPremConfig(dict):
    agent_arns: List[str] = pulumi.output_property("agentArns")
    """
    List of Amazon Resource Names (ARNs) of the DataSync Agents used to connect to the NFS server.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class S3LocationS3Config(dict):
    bucket_access_role_arn: str = pulumi.output_property("bucketAccessRoleArn")
    """
    Amazon Resource Names (ARN) of the IAM Role used to connect to the S3 Bucket.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class TaskOptions(dict):
    atime: Optional[str] = pulumi.output_property("atime")
    """
    A file metadata that shows the last time a file was accessed (that is when the file was read or written to). If set to `BEST_EFFORT`, the DataSync Task attempts to preserve the original (that is, the version before sync `PREPARING` phase) `atime` attribute on all source files. Valid values: `BEST_EFFORT`, `NONE`. Default: `BEST_EFFORT`.
    """
    bytes_per_second: Optional[float] = pulumi.output_property("bytesPerSecond")
    """
    Limits the bandwidth utilized. For example, to set a maximum of 1 MB, set this value to `1048576`. Value values: `-1` or greater. Default: `-1` (unlimited).
    """
    gid: Optional[str] = pulumi.output_property("gid")
    """
    Group identifier of the file's owners. Valid values: `BOTH`, `INT_VALUE`, `NAME`, `NONE`. Default: `INT_VALUE` (preserve integer value of the ID).
    """
    mtime: Optional[str] = pulumi.output_property("mtime")
    """
    A file metadata that indicates the last time a file was modified (written to) before the sync `PREPARING` phase. Value values: `NONE`, `PRESERVE`. Default: `PRESERVE`.
    """
    posix_permissions: Optional[str] = pulumi.output_property("posixPermissions")
    """
    Determines which users or groups can access a file for a specific purpose such as reading, writing, or execution of the file. Valid values: `NONE`, `PRESERVE`. Default: `PRESERVE`.
    """
    preserve_deleted_files: Optional[str] = pulumi.output_property("preserveDeletedFiles")
    """
    Whether files deleted in the source should be removed or preserved in the destination file system. Valid values: `PRESERVE`, `REMOVE`. Default: `PRESERVE`.
    """
    preserve_devices: Optional[str] = pulumi.output_property("preserveDevices")
    """
    Whether the DataSync Task should preserve the metadata of block and character devices in the source files system, and recreate the files with that device name and metadata on the destination. The DataSync Task can’t sync the actual contents of such devices, because many of the devices are non-terminal and don’t return an end of file (EOF) marker. Valid values: `NONE`, `PRESERVE`. Default: `NONE` (ignore special devices).
    """
    uid: Optional[str] = pulumi.output_property("uid")
    """
    User identifier of the file's owners. Valid values: `BOTH`, `INT_VALUE`, `NAME`, `NONE`. Default: `INT_VALUE` (preserve integer value of the ID).
    """
    verify_mode: Optional[str] = pulumi.output_property("verifyMode")
    """
    Whether a data integrity verification should be performed at the end of a task execution after all data and metadata have been transferred. Valid values: `NONE`, `POINT_IN_TIME_CONSISTENT`, `ONLY_FILES_TRANSFERRED`. Default: `POINT_IN_TIME_CONSISTENT`.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


