# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'ClusterLogging',
    'ClusterSnapshotCopy',
    'ParameterGroupParameter',
    'SecurityGroupIngress',
]

@pulumi.output_type
class ClusterLogging(dict):
    bucket_name: Optional[str] = pulumi.output_property("bucketName")
    """
    The name of an existing S3 bucket where the log files are to be stored. Must be in the same region as the cluster and the cluster must have read bucket and put object permissions.
    For more information on the permissions required for the bucket, please read the AWS [documentation](http://docs.aws.amazon.com/redshift/latest/mgmt/db-auditing.html#db-auditing-enable-logging)
    """
    enable: bool = pulumi.output_property("enable")
    """
    Enables logging information such as queries and connection attempts, for the specified Amazon Redshift cluster.
    """
    s3_key_prefix: Optional[str] = pulumi.output_property("s3KeyPrefix")
    """
    The prefix applied to the log file names.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ClusterSnapshotCopy(dict):
    destination_region: str = pulumi.output_property("destinationRegion")
    """
    The destination region that you want to copy snapshots to.
    """
    grant_name: Optional[str] = pulumi.output_property("grantName")
    """
    The name of the snapshot copy grant to use when snapshots of an AWS KMS-encrypted cluster are copied to the destination region.
    """
    retention_period: Optional[float] = pulumi.output_property("retentionPeriod")
    """
    The number of days to retain automated snapshots in the destination region after they are copied from the source region. Defaults to `7`.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ParameterGroupParameter(dict):
    name: str = pulumi.output_property("name")
    """
    The name of the Redshift parameter.
    """
    value: str = pulumi.output_property("value")
    """
    The value of the Redshift parameter.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class SecurityGroupIngress(dict):
    cidr: Optional[str] = pulumi.output_property("cidr")
    """
    The CIDR block to accept
    """
    security_group_name: Optional[str] = pulumi.output_property("securityGroupName")
    """
    The name of the security group to authorize
    """
    security_group_owner_id: Optional[str] = pulumi.output_property("securityGroupOwnerId")
    """
    The owner Id of the security group provided
    by `security_group_name`.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


