# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'ByteMatchSetByteMatchTupleArgs',
    'ByteMatchSetByteMatchTupleFieldToMatchArgs',
    'GeoMatchSetGeoMatchConstraintArgs',
    'IpSetIpSetDescriptorArgs',
    'RateBasedRulePredicateArgs',
    'RegexMatchSetRegexMatchTupleArgs',
    'RegexMatchSetRegexMatchTupleFieldToMatchArgs',
    'RuleGroupActivatedRuleArgs',
    'RuleGroupActivatedRuleActionArgs',
    'RulePredicateArgs',
    'SizeConstraintSetSizeConstraintArgs',
    'SizeConstraintSetSizeConstraintFieldToMatchArgs',
    'SqlInjectionMatchSetSqlInjectionMatchTupleArgs',
    'SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs',
    'WebAclDefaultActionArgs',
    'WebAclLoggingConfigurationArgs',
    'WebAclLoggingConfigurationRedactedFieldsArgs',
    'WebAclLoggingConfigurationRedactedFieldsFieldToMatchArgs',
    'WebAclRuleArgs',
    'WebAclRuleActionArgs',
    'WebAclRuleOverrideActionArgs',
    'XssMatchSetXssMatchTupleArgs',
    'XssMatchSetXssMatchTupleFieldToMatchArgs',
]

@pulumi.input_type
class ByteMatchSetByteMatchTupleArgs:
    field_to_match: pulumi.Input['ByteMatchSetByteMatchTupleFieldToMatchArgs'] = pulumi.input_property("fieldToMatch")
    """
    Settings for the ByteMatchTuple. FieldToMatch documented below.
    """
    positional_constraint: pulumi.Input[str] = pulumi.input_property("positionalConstraint")
    """
    Within the portion of a web request that you want to search.
    """
    text_transformation: pulumi.Input[str] = pulumi.input_property("textTransformation")
    """
    The formatting way for web request.
    """
    target_string: Optional[pulumi.Input[str]] = pulumi.input_property("targetString")
    """
    The value that you want AWS WAF to search for. The maximum length of the value is 50 bytes.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, field_to_match: pulumi.Input['ByteMatchSetByteMatchTupleFieldToMatchArgs'], positional_constraint: pulumi.Input[str], text_transformation: pulumi.Input[str], target_string: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input['ByteMatchSetByteMatchTupleFieldToMatchArgs'] field_to_match: Settings for the ByteMatchTuple. FieldToMatch documented below.
        :param pulumi.Input[str] positional_constraint: Within the portion of a web request that you want to search.
        :param pulumi.Input[str] text_transformation: The formatting way for web request.
        :param pulumi.Input[str] target_string: The value that you want AWS WAF to search for. The maximum length of the value is 50 bytes.
        """
        __self__.field_to_match = field_to_match
        __self__.positional_constraint = positional_constraint
        __self__.text_transformation = text_transformation
        __self__.target_string = target_string

@pulumi.input_type
class ByteMatchSetByteMatchTupleFieldToMatchArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    The part of the web request that you want AWS WAF to search for a specified string.
    """
    data: Optional[pulumi.Input[str]] = pulumi.input_property("data")
    """
    When the value of Type is HEADER, enter the name of the header that you want AWS WAF to search, for example, User-Agent or Referer. If the value of Type is any other value, omit Data.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str], data: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] type: The part of the web request that you want AWS WAF to search for a specified string.
        :param pulumi.Input[str] data: When the value of Type is HEADER, enter the name of the header that you want AWS WAF to search, for example, User-Agent or Referer. If the value of Type is any other value, omit Data.
        """
        __self__.type = type
        __self__.data = data

@pulumi.input_type
class GeoMatchSetGeoMatchConstraintArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    The type of geographical area you want AWS WAF to search for. Currently Country is the only valid value.
    """
    value: pulumi.Input[str] = pulumi.input_property("value")
    """
    The country that you want AWS WAF to search for.
    This is the two-letter country code, e.g. `US`, `CA`, `RU`, `CN`, etc.
    See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_GeoMatchConstraint.html) for all supported values.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str], value: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] type: The type of geographical area you want AWS WAF to search for. Currently Country is the only valid value.
        :param pulumi.Input[str] value: The country that you want AWS WAF to search for.
               This is the two-letter country code, e.g. `US`, `CA`, `RU`, `CN`, etc.
               See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_GeoMatchConstraint.html) for all supported values.
        """
        __self__.type = type
        __self__.value = value

@pulumi.input_type
class IpSetIpSetDescriptorArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    The string like IPV4 or IPV6.
    """
    value: pulumi.Input[str] = pulumi.input_property("value")
    """
    The CIDR notation.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str], value: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] type: The string like IPV4 or IPV6.
        :param pulumi.Input[str] value: The CIDR notation.
        """
        __self__.type = type
        __self__.value = value

@pulumi.input_type
class RateBasedRulePredicateArgs:
    data_id: pulumi.Input[str] = pulumi.input_property("dataId")
    """
    A unique identifier for a predicate in the rule, such as Byte Match Set ID or IPSet ID.
    """
    negated: pulumi.Input[bool] = pulumi.input_property("negated")
    """
    Set this to `false` if you want to allow, block, or count requests
    based on the settings in the specified `ByteMatchSet`, `IPSet`, `SqlInjectionMatchSet`, `XssMatchSet`, or `SizeConstraintSet`.
    For example, if an IPSet includes the IP address `192.0.2.44`, AWS WAF will allow or block requests based on that IP address.
    If set to `true`, AWS WAF will allow, block, or count requests based on all IP addresses _except_ `192.0.2.44`.
    """
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    The type of predicate in a rule. Valid values: `ByteMatch`, `GeoMatch`, `IPMatch`, `RegexMatch`, `SizeConstraint`, `SqlInjectionMatch`, or `XssMatch`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, data_id: pulumi.Input[str], negated: pulumi.Input[bool], type: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] data_id: A unique identifier for a predicate in the rule, such as Byte Match Set ID or IPSet ID.
        :param pulumi.Input[bool] negated: Set this to `false` if you want to allow, block, or count requests
               based on the settings in the specified `ByteMatchSet`, `IPSet`, `SqlInjectionMatchSet`, `XssMatchSet`, or `SizeConstraintSet`.
               For example, if an IPSet includes the IP address `192.0.2.44`, AWS WAF will allow or block requests based on that IP address.
               If set to `true`, AWS WAF will allow, block, or count requests based on all IP addresses _except_ `192.0.2.44`.
        :param pulumi.Input[str] type: The type of predicate in a rule. Valid values: `ByteMatch`, `GeoMatch`, `IPMatch`, `RegexMatch`, `SizeConstraint`, `SqlInjectionMatch`, or `XssMatch`.
        """
        __self__.data_id = data_id
        __self__.negated = negated
        __self__.type = type

@pulumi.input_type
class RegexMatchSetRegexMatchTupleArgs:
    field_to_match: pulumi.Input['RegexMatchSetRegexMatchTupleFieldToMatchArgs'] = pulumi.input_property("fieldToMatch")
    """
    The part of a web request that you want to search, such as a specified header or a query string.
    """
    regex_pattern_set_id: pulumi.Input[str] = pulumi.input_property("regexPatternSetId")
    """
    The ID of a `WAF Regex Pattern Set`.
    """
    text_transformation: pulumi.Input[str] = pulumi.input_property("textTransformation")
    """
    Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
    e.g. `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
    See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_ByteMatchTuple.html#WAF-Type-ByteMatchTuple-TextTransformation)
    for all supported values.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, field_to_match: pulumi.Input['RegexMatchSetRegexMatchTupleFieldToMatchArgs'], regex_pattern_set_id: pulumi.Input[str], text_transformation: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input['RegexMatchSetRegexMatchTupleFieldToMatchArgs'] field_to_match: The part of a web request that you want to search, such as a specified header or a query string.
        :param pulumi.Input[str] regex_pattern_set_id: The ID of a `WAF Regex Pattern Set`.
        :param pulumi.Input[str] text_transformation: Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
               e.g. `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
               See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_ByteMatchTuple.html#WAF-Type-ByteMatchTuple-TextTransformation)
               for all supported values.
        """
        __self__.field_to_match = field_to_match
        __self__.regex_pattern_set_id = regex_pattern_set_id
        __self__.text_transformation = text_transformation

@pulumi.input_type
class RegexMatchSetRegexMatchTupleFieldToMatchArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    The part of the web request that you want AWS WAF to search for a specified string.
    e.g. `HEADER`, `METHOD` or `BODY`.
    See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
    for all supported values.
    """
    data: Optional[pulumi.Input[str]] = pulumi.input_property("data")
    """
    When `type` is `HEADER`, enter the name of the header that you want to search, e.g. `User-Agent` or `Referer`.
    If `type` is any other value, omit this field.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str], data: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] type: The part of the web request that you want AWS WAF to search for a specified string.
               e.g. `HEADER`, `METHOD` or `BODY`.
               See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
               for all supported values.
        :param pulumi.Input[str] data: When `type` is `HEADER`, enter the name of the header that you want to search, e.g. `User-Agent` or `Referer`.
               If `type` is any other value, omit this field.
        """
        __self__.type = type
        __self__.data = data

@pulumi.input_type
class RuleGroupActivatedRuleArgs:
    action: pulumi.Input['RuleGroupActivatedRuleActionArgs'] = pulumi.input_property("action")
    """
    Specifies the action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule.
    """
    priority: pulumi.Input[float] = pulumi.input_property("priority")
    """
    Specifies the order in which the rules are evaluated. Rules with a lower value are evaluated before rules with a higher value.
    """
    rule_id: pulumi.Input[str] = pulumi.input_property("ruleId")
    """
    The ID of a `waf_regional_rule`
    """
    type: Optional[pulumi.Input[str]] = pulumi.input_property("type")
    """
    The rule type, either `REGULAR`, `RATE_BASED`, or `GROUP`. Defaults to `REGULAR`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, action: pulumi.Input['RuleGroupActivatedRuleActionArgs'], priority: pulumi.Input[float], rule_id: pulumi.Input[str], type: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input['RuleGroupActivatedRuleActionArgs'] action: Specifies the action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule.
        :param pulumi.Input[float] priority: Specifies the order in which the rules are evaluated. Rules with a lower value are evaluated before rules with a higher value.
        :param pulumi.Input[str] rule_id: The ID of a `waf_regional_rule`
        :param pulumi.Input[str] type: The rule type, either `REGULAR`, `RATE_BASED`, or `GROUP`. Defaults to `REGULAR`.
        """
        __self__.action = action
        __self__.priority = priority
        __self__.rule_id = rule_id
        __self__.type = type

@pulumi.input_type
class RuleGroupActivatedRuleActionArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    The rule type, either `REGULAR`, `RATE_BASED`, or `GROUP`. Defaults to `REGULAR`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] type: The rule type, either `REGULAR`, `RATE_BASED`, or `GROUP`. Defaults to `REGULAR`.
        """
        __self__.type = type

@pulumi.input_type
class RulePredicateArgs:
    data_id: pulumi.Input[str] = pulumi.input_property("dataId")
    negated: pulumi.Input[bool] = pulumi.input_property("negated")
    type: pulumi.Input[str] = pulumi.input_property("type")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, data_id: pulumi.Input[str], negated: pulumi.Input[bool], type: pulumi.Input[str]) -> None:
        __self__.data_id = data_id
        __self__.negated = negated
        __self__.type = type

@pulumi.input_type
class SizeConstraintSetSizeConstraintArgs:
    comparison_operator: pulumi.Input[str] = pulumi.input_property("comparisonOperator")
    """
    The type of comparison you want to perform.
    e.g. `EQ`, `NE`, `LT`, `GT`.
    See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_SizeConstraint.html) for all supported values.
    """
    field_to_match: pulumi.Input['SizeConstraintSetSizeConstraintFieldToMatchArgs'] = pulumi.input_property("fieldToMatch")
    """
    Specifies where in a web request to look for the size constraint.
    """
    size: pulumi.Input[float] = pulumi.input_property("size")
    """
    The size in bytes that you want to compare against the size of the specified `field_to_match`.
    Valid values are between 0 - 21474836480 bytes (0 - 20 GB).
    """
    text_transformation: pulumi.Input[str] = pulumi.input_property("textTransformation")
    """
    Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
    If you specify a transformation, AWS WAF performs the transformation on `field_to_match` before inspecting a request for a match.
    e.g. `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
    See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_SizeConstraint.html#WAF-Type-SizeConstraint-TextTransformation)
    for all supported values.
    **Note:** if you choose `BODY` as `type`, you must choose `NONE` because CloudFront forwards only the first 8192 bytes for inspection.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, comparison_operator: pulumi.Input[str], field_to_match: pulumi.Input['SizeConstraintSetSizeConstraintFieldToMatchArgs'], size: pulumi.Input[float], text_transformation: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] comparison_operator: The type of comparison you want to perform.
               e.g. `EQ`, `NE`, `LT`, `GT`.
               See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_SizeConstraint.html) for all supported values.
        :param pulumi.Input['SizeConstraintSetSizeConstraintFieldToMatchArgs'] field_to_match: Specifies where in a web request to look for the size constraint.
        :param pulumi.Input[float] size: The size in bytes that you want to compare against the size of the specified `field_to_match`.
               Valid values are between 0 - 21474836480 bytes (0 - 20 GB).
        :param pulumi.Input[str] text_transformation: Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
               If you specify a transformation, AWS WAF performs the transformation on `field_to_match` before inspecting a request for a match.
               e.g. `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
               See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_SizeConstraint.html#WAF-Type-SizeConstraint-TextTransformation)
               for all supported values.
               **Note:** if you choose `BODY` as `type`, you must choose `NONE` because CloudFront forwards only the first 8192 bytes for inspection.
        """
        __self__.comparison_operator = comparison_operator
        __self__.field_to_match = field_to_match
        __self__.size = size
        __self__.text_transformation = text_transformation

@pulumi.input_type
class SizeConstraintSetSizeConstraintFieldToMatchArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    The part of the web request that you want AWS WAF to search for a specified string.
    e.g. `HEADER`, `METHOD` or `BODY`.
    See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
    for all supported values.
    """
    data: Optional[pulumi.Input[str]] = pulumi.input_property("data")
    """
    When `type` is `HEADER`, enter the name of the header that you want to search, e.g. `User-Agent` or `Referer`.
    If `type` is any other value, omit this field.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str], data: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] type: The part of the web request that you want AWS WAF to search for a specified string.
               e.g. `HEADER`, `METHOD` or `BODY`.
               See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
               for all supported values.
        :param pulumi.Input[str] data: When `type` is `HEADER`, enter the name of the header that you want to search, e.g. `User-Agent` or `Referer`.
               If `type` is any other value, omit this field.
        """
        __self__.type = type
        __self__.data = data

@pulumi.input_type
class SqlInjectionMatchSetSqlInjectionMatchTupleArgs:
    field_to_match: pulumi.Input['SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs'] = pulumi.input_property("fieldToMatch")
    """
    Specifies where in a web request to look for snippets of malicious SQL code.
    """
    text_transformation: pulumi.Input[str] = pulumi.input_property("textTransformation")
    """
    Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
    If you specify a transformation, AWS WAF performs the transformation on `field_to_match` before inspecting a request for a match.
    e.g. `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
    See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_regional_SqlInjectionMatchTuple.html#WAF-Type-regional_SqlInjectionMatchTuple-TextTransformation)
    for all supported values.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, field_to_match: pulumi.Input['SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs'], text_transformation: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input['SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs'] field_to_match: Specifies where in a web request to look for snippets of malicious SQL code.
        :param pulumi.Input[str] text_transformation: Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
               If you specify a transformation, AWS WAF performs the transformation on `field_to_match` before inspecting a request for a match.
               e.g. `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
               See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_regional_SqlInjectionMatchTuple.html#WAF-Type-regional_SqlInjectionMatchTuple-TextTransformation)
               for all supported values.
        """
        __self__.field_to_match = field_to_match
        __self__.text_transformation = text_transformation

@pulumi.input_type
class SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatchArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    The part of the web request that you want AWS WAF to search for a specified string.
    e.g. `HEADER`, `METHOD` or `BODY`.
    See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_regional_FieldToMatch.html)
    for all supported values.
    """
    data: Optional[pulumi.Input[str]] = pulumi.input_property("data")
    """
    When `type` is `HEADER`, enter the name of the header that you want to search, e.g. `User-Agent` or `Referer`.
    If `type` is any other value, omit this field.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str], data: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] type: The part of the web request that you want AWS WAF to search for a specified string.
               e.g. `HEADER`, `METHOD` or `BODY`.
               See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_regional_FieldToMatch.html)
               for all supported values.
        :param pulumi.Input[str] data: When `type` is `HEADER`, enter the name of the header that you want to search, e.g. `User-Agent` or `Referer`.
               If `type` is any other value, omit this field.
        """
        __self__.type = type
        __self__.data = data

@pulumi.input_type
class WebAclDefaultActionArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    Specifies how you want AWS WAF Regional to respond to requests that match the settings in a rule. e.g. `ALLOW`, `BLOCK` or `COUNT`
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] type: Specifies how you want AWS WAF Regional to respond to requests that match the settings in a rule. e.g. `ALLOW`, `BLOCK` or `COUNT`
        """
        __self__.type = type

@pulumi.input_type
class WebAclLoggingConfigurationArgs:
    log_destination: pulumi.Input[str] = pulumi.input_property("logDestination")
    """
    Amazon Resource Name (ARN) of Kinesis Firehose Delivery Stream
    """
    redacted_fields: Optional[pulumi.Input['WebAclLoggingConfigurationRedactedFieldsArgs']] = pulumi.input_property("redactedFields")
    """
    Configuration block containing parts of the request that you want redacted from the logs. Detailed below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, log_destination: pulumi.Input[str], redacted_fields: Optional[pulumi.Input['WebAclLoggingConfigurationRedactedFieldsArgs']] = None) -> None:
        """
        :param pulumi.Input[str] log_destination: Amazon Resource Name (ARN) of Kinesis Firehose Delivery Stream
        :param pulumi.Input['WebAclLoggingConfigurationRedactedFieldsArgs'] redacted_fields: Configuration block containing parts of the request that you want redacted from the logs. Detailed below.
        """
        __self__.log_destination = log_destination
        __self__.redacted_fields = redacted_fields

@pulumi.input_type
class WebAclLoggingConfigurationRedactedFieldsArgs:
    field_to_matches: pulumi.Input[List[pulumi.Input['WebAclLoggingConfigurationRedactedFieldsFieldToMatchArgs']]] = pulumi.input_property("fieldToMatches")
    """
    Set of configuration blocks for fields to redact. Detailed below.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, field_to_matches: pulumi.Input[List[pulumi.Input['WebAclLoggingConfigurationRedactedFieldsFieldToMatchArgs']]]) -> None:
        """
        :param pulumi.Input[List[pulumi.Input['WebAclLoggingConfigurationRedactedFieldsFieldToMatchArgs']]] field_to_matches: Set of configuration blocks for fields to redact. Detailed below.
        """
        __self__.field_to_matches = field_to_matches

@pulumi.input_type
class WebAclLoggingConfigurationRedactedFieldsFieldToMatchArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    Specifies how you want AWS WAF Regional to respond to requests that match the settings in a rule. e.g. `ALLOW`, `BLOCK` or `COUNT`
    """
    data: Optional[pulumi.Input[str]] = pulumi.input_property("data")
    """
    When the value of `type` is `HEADER`, enter the name of the header that you want the WAF to search, for example, `User-Agent` or `Referer`. If the value of `type` is any other value, omit `data`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str], data: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] type: Specifies how you want AWS WAF Regional to respond to requests that match the settings in a rule. e.g. `ALLOW`, `BLOCK` or `COUNT`
        :param pulumi.Input[str] data: When the value of `type` is `HEADER`, enter the name of the header that you want the WAF to search, for example, `User-Agent` or `Referer`. If the value of `type` is any other value, omit `data`.
        """
        __self__.type = type
        __self__.data = data

@pulumi.input_type
class WebAclRuleArgs:
    priority: pulumi.Input[float] = pulumi.input_property("priority")
    """
    Specifies the order in which the rules in a WebACL are evaluated.
    Rules with a lower value are evaluated before rules with a higher value.
    """
    rule_id: pulumi.Input[str] = pulumi.input_property("ruleId")
    """
    ID of the associated WAF (Regional) rule (e.g. `wafregional.Rule`). WAF (Global) rules cannot be used.
    """
    action: Optional[pulumi.Input['WebAclRuleActionArgs']] = pulumi.input_property("action")
    """
    Configuration block of the action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule.  Not used if `type` is `GROUP`. Detailed below.
    """
    override_action: Optional[pulumi.Input['WebAclRuleOverrideActionArgs']] = pulumi.input_property("overrideAction")
    """
    Configuration block of the override the action that a group requests CloudFront or AWS WAF takes when a web request matches the conditions in the rule.  Only used if `type` is `GROUP`. Detailed below.
    """
    type: Optional[pulumi.Input[str]] = pulumi.input_property("type")
    """
    Specifies how you want AWS WAF Regional to respond to requests that match the settings in a rule. e.g. `ALLOW`, `BLOCK` or `COUNT`
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, priority: pulumi.Input[float], rule_id: pulumi.Input[str], action: Optional[pulumi.Input['WebAclRuleActionArgs']] = None, override_action: Optional[pulumi.Input['WebAclRuleOverrideActionArgs']] = None, type: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[float] priority: Specifies the order in which the rules in a WebACL are evaluated.
               Rules with a lower value are evaluated before rules with a higher value.
        :param pulumi.Input[str] rule_id: ID of the associated WAF (Regional) rule (e.g. `wafregional.Rule`). WAF (Global) rules cannot be used.
        :param pulumi.Input['WebAclRuleActionArgs'] action: Configuration block of the action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule.  Not used if `type` is `GROUP`. Detailed below.
        :param pulumi.Input['WebAclRuleOverrideActionArgs'] override_action: Configuration block of the override the action that a group requests CloudFront or AWS WAF takes when a web request matches the conditions in the rule.  Only used if `type` is `GROUP`. Detailed below.
        :param pulumi.Input[str] type: Specifies how you want AWS WAF Regional to respond to requests that match the settings in a rule. e.g. `ALLOW`, `BLOCK` or `COUNT`
        """
        __self__.priority = priority
        __self__.rule_id = rule_id
        __self__.action = action
        __self__.override_action = override_action
        __self__.type = type

@pulumi.input_type
class WebAclRuleActionArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    Specifies how you want AWS WAF Regional to respond to requests that match the settings in a rule. e.g. `ALLOW`, `BLOCK` or `COUNT`
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] type: Specifies how you want AWS WAF Regional to respond to requests that match the settings in a rule. e.g. `ALLOW`, `BLOCK` or `COUNT`
        """
        __self__.type = type

@pulumi.input_type
class WebAclRuleOverrideActionArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    Specifies how you want AWS WAF Regional to respond to requests that match the settings in a rule. e.g. `ALLOW`, `BLOCK` or `COUNT`
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] type: Specifies how you want AWS WAF Regional to respond to requests that match the settings in a rule. e.g. `ALLOW`, `BLOCK` or `COUNT`
        """
        __self__.type = type

@pulumi.input_type
class XssMatchSetXssMatchTupleArgs:
    field_to_match: pulumi.Input['XssMatchSetXssMatchTupleFieldToMatchArgs'] = pulumi.input_property("fieldToMatch")
    """
    Specifies where in a web request to look for cross-site scripting attacks.
    """
    text_transformation: pulumi.Input[str] = pulumi.input_property("textTransformation")
    """
    Which text transformation, if any, to perform on the web request before inspecting the request for cross-site scripting attacks.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, field_to_match: pulumi.Input['XssMatchSetXssMatchTupleFieldToMatchArgs'], text_transformation: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input['XssMatchSetXssMatchTupleFieldToMatchArgs'] field_to_match: Specifies where in a web request to look for cross-site scripting attacks.
        :param pulumi.Input[str] text_transformation: Which text transformation, if any, to perform on the web request before inspecting the request for cross-site scripting attacks.
        """
        __self__.field_to_match = field_to_match
        __self__.text_transformation = text_transformation

@pulumi.input_type
class XssMatchSetXssMatchTupleFieldToMatchArgs:
    type: pulumi.Input[str] = pulumi.input_property("type")
    """
    The part of the web request that you want AWS WAF to search for a specified string. e.g. `HEADER` or `METHOD`
    """
    data: Optional[pulumi.Input[str]] = pulumi.input_property("data")
    """
    When the value of `type` is `HEADER`, enter the name of the header that you want the WAF to search, for example, `User-Agent` or `Referer`. If the value of `type` is any other value, omit `data`.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, type: pulumi.Input[str], data: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] type: The part of the web request that you want AWS WAF to search for a specified string. e.g. `HEADER` or `METHOD`
        :param pulumi.Input[str] data: When the value of `type` is `HEADER`, enter the name of the header that you want the WAF to search, for example, `User-Agent` or `Referer`. If the value of `type` is any other value, omit `data`.
        """
        __self__.type = type
        __self__.data = data

