# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Mapping, Optional, Tuple, Union
from .. import _utilities, _tables
from . import outputs

__all__ = [
    'ByteMatchSetByteMatchTuple',
    'ByteMatchSetByteMatchTupleFieldToMatch',
    'GeoMatchSetGeoMatchConstraint',
    'IpSetIpSetDescriptor',
    'RateBasedRulePredicate',
    'RegexMatchSetRegexMatchTuple',
    'RegexMatchSetRegexMatchTupleFieldToMatch',
    'RuleGroupActivatedRule',
    'RuleGroupActivatedRuleAction',
    'RulePredicate',
    'SizeConstraintSetSizeConstraint',
    'SizeConstraintSetSizeConstraintFieldToMatch',
    'SqlInjectionMatchSetSqlInjectionMatchTuple',
    'SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch',
    'WebAclDefaultAction',
    'WebAclLoggingConfiguration',
    'WebAclLoggingConfigurationRedactedFields',
    'WebAclLoggingConfigurationRedactedFieldsFieldToMatch',
    'WebAclRule',
    'WebAclRuleAction',
    'WebAclRuleOverrideAction',
    'XssMatchSetXssMatchTuple',
    'XssMatchSetXssMatchTupleFieldToMatch',
]

@pulumi.output_type
class ByteMatchSetByteMatchTuple(dict):
    @property
    @pulumi.getter(name="fieldToMatch")
    def field_to_match(self) -> 'outputs.ByteMatchSetByteMatchTupleFieldToMatch':
        """
        Settings for the ByteMatchTuple. FieldToMatch documented below.
        """
        ...

    @property
    @pulumi.getter(name="positionalConstraint")
    def positional_constraint(self) -> str:
        """
        Within the portion of a web request that you want to search.
        """
        ...

    @property
    @pulumi.getter(name="targetString")
    def target_string(self) -> Optional[str]:
        """
        The value that you want AWS WAF to search for. The maximum length of the value is 50 bytes.
        """
        ...

    @property
    @pulumi.getter(name="textTransformation")
    def text_transformation(self) -> str:
        """
        The formatting way for web request.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ByteMatchSetByteMatchTupleFieldToMatch(dict):
    @property
    @pulumi.getter
    def data(self) -> Optional[str]:
        """
        When the value of Type is HEADER, enter the name of the header that you want AWS WAF to search, for example, User-Agent or Referer. If the value of Type is any other value, omit Data.
        """
        ...

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        The part of the web request that you want AWS WAF to search for a specified string.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GeoMatchSetGeoMatchConstraint(dict):
    @property
    @pulumi.getter
    def type(self) -> str:
        """
        The type of geographical area you want AWS WAF to search for. Currently Country is the only valid value.
        """
        ...

    @property
    @pulumi.getter
    def value(self) -> str:
        """
        The country that you want AWS WAF to search for.
        This is the two-letter country code, e.g. `US`, `CA`, `RU`, `CN`, etc.
        See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_GeoMatchConstraint.html) for all supported values.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class IpSetIpSetDescriptor(dict):
    @property
    @pulumi.getter
    def type(self) -> str:
        """
        The string like IPV4 or IPV6.
        """
        ...

    @property
    @pulumi.getter
    def value(self) -> str:
        """
        The CIDR notation.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class RateBasedRulePredicate(dict):
    @property
    @pulumi.getter(name="dataId")
    def data_id(self) -> str:
        """
        A unique identifier for a predicate in the rule, such as Byte Match Set ID or IPSet ID.
        """
        ...

    @property
    @pulumi.getter
    def negated(self) -> bool:
        """
        Set this to `false` if you want to allow, block, or count requests
        based on the settings in the specified `ByteMatchSet`, `IPSet`, `SqlInjectionMatchSet`, `XssMatchSet`, or `SizeConstraintSet`.
        For example, if an IPSet includes the IP address `192.0.2.44`, AWS WAF will allow or block requests based on that IP address.
        If set to `true`, AWS WAF will allow, block, or count requests based on all IP addresses _except_ `192.0.2.44`.
        """
        ...

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        The type of predicate in a rule. Valid values: `ByteMatch`, `GeoMatch`, `IPMatch`, `RegexMatch`, `SizeConstraint`, `SqlInjectionMatch`, or `XssMatch`.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class RegexMatchSetRegexMatchTuple(dict):
    @property
    @pulumi.getter(name="fieldToMatch")
    def field_to_match(self) -> 'outputs.RegexMatchSetRegexMatchTupleFieldToMatch':
        """
        The part of a web request that you want to search, such as a specified header or a query string.
        """
        ...

    @property
    @pulumi.getter(name="regexPatternSetId")
    def regex_pattern_set_id(self) -> str:
        """
        The ID of a `WAF Regex Pattern Set`.
        """
        ...

    @property
    @pulumi.getter(name="textTransformation")
    def text_transformation(self) -> str:
        """
        Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
        e.g. `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
        See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_ByteMatchTuple.html#WAF-Type-ByteMatchTuple-TextTransformation)
        for all supported values.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class RegexMatchSetRegexMatchTupleFieldToMatch(dict):
    @property
    @pulumi.getter
    def data(self) -> Optional[str]:
        """
        When `type` is `HEADER`, enter the name of the header that you want to search, e.g. `User-Agent` or `Referer`.
        If `type` is any other value, omit this field.
        """
        ...

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        The part of the web request that you want AWS WAF to search for a specified string.
        e.g. `HEADER`, `METHOD` or `BODY`.
        See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
        for all supported values.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class RuleGroupActivatedRule(dict):
    @property
    @pulumi.getter
    def action(self) -> 'outputs.RuleGroupActivatedRuleAction':
        """
        Specifies the action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule.
        """
        ...

    @property
    @pulumi.getter
    def priority(self) -> float:
        """
        Specifies the order in which the rules are evaluated. Rules with a lower value are evaluated before rules with a higher value.
        """
        ...

    @property
    @pulumi.getter(name="ruleId")
    def rule_id(self) -> str:
        """
        The ID of a `waf_regional_rule`
        """
        ...

    @property
    @pulumi.getter
    def type(self) -> Optional[str]:
        """
        The rule type, either `REGULAR`, `RATE_BASED`, or `GROUP`. Defaults to `REGULAR`.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class RuleGroupActivatedRuleAction(dict):
    @property
    @pulumi.getter
    def type(self) -> str:
        """
        The rule type, either `REGULAR`, `RATE_BASED`, or `GROUP`. Defaults to `REGULAR`.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class RulePredicate(dict):
    @property
    @pulumi.getter(name="dataId")
    def data_id(self) -> str:
        ...

    @property
    @pulumi.getter
    def negated(self) -> bool:
        ...

    @property
    @pulumi.getter
    def type(self) -> str:
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class SizeConstraintSetSizeConstraint(dict):
    @property
    @pulumi.getter(name="comparisonOperator")
    def comparison_operator(self) -> str:
        """
        The type of comparison you want to perform.
        e.g. `EQ`, `NE`, `LT`, `GT`.
        See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_wafRegional_SizeConstraint.html) for all supported values.
        """
        ...

    @property
    @pulumi.getter(name="fieldToMatch")
    def field_to_match(self) -> 'outputs.SizeConstraintSetSizeConstraintFieldToMatch':
        """
        Specifies where in a web request to look for the size constraint.
        """
        ...

    @property
    @pulumi.getter
    def size(self) -> float:
        """
        The size in bytes that you want to compare against the size of the specified `field_to_match`.
        Valid values are between 0 - 21474836480 bytes (0 - 20 GB).
        """
        ...

    @property
    @pulumi.getter(name="textTransformation")
    def text_transformation(self) -> str:
        """
        Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
        If you specify a transformation, AWS WAF performs the transformation on `field_to_match` before inspecting a request for a match.
        e.g. `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
        See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_SizeConstraint.html#WAF-Type-SizeConstraint-TextTransformation)
        for all supported values.
        **Note:** if you choose `BODY` as `type`, you must choose `NONE` because CloudFront forwards only the first 8192 bytes for inspection.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class SizeConstraintSetSizeConstraintFieldToMatch(dict):
    @property
    @pulumi.getter
    def data(self) -> Optional[str]:
        """
        When `type` is `HEADER`, enter the name of the header that you want to search, e.g. `User-Agent` or `Referer`.
        If `type` is any other value, omit this field.
        """
        ...

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        The part of the web request that you want AWS WAF to search for a specified string.
        e.g. `HEADER`, `METHOD` or `BODY`.
        See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
        for all supported values.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class SqlInjectionMatchSetSqlInjectionMatchTuple(dict):
    @property
    @pulumi.getter(name="fieldToMatch")
    def field_to_match(self) -> 'outputs.SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch':
        """
        Specifies where in a web request to look for snippets of malicious SQL code.
        """
        ...

    @property
    @pulumi.getter(name="textTransformation")
    def text_transformation(self) -> str:
        """
        Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
        If you specify a transformation, AWS WAF performs the transformation on `field_to_match` before inspecting a request for a match.
        e.g. `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
        See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_regional_SqlInjectionMatchTuple.html#WAF-Type-regional_SqlInjectionMatchTuple-TextTransformation)
        for all supported values.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch(dict):
    @property
    @pulumi.getter
    def data(self) -> Optional[str]:
        """
        When `type` is `HEADER`, enter the name of the header that you want to search, e.g. `User-Agent` or `Referer`.
        If `type` is any other value, omit this field.
        """
        ...

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        The part of the web request that you want AWS WAF to search for a specified string.
        e.g. `HEADER`, `METHOD` or `BODY`.
        See [docs](https://docs.aws.amazon.com/waf/latest/APIReference/API_regional_FieldToMatch.html)
        for all supported values.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class WebAclDefaultAction(dict):
    @property
    @pulumi.getter
    def type(self) -> str:
        """
        Specifies how you want AWS WAF Regional to respond to requests that match the settings in a rule. e.g. `ALLOW`, `BLOCK` or `COUNT`
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class WebAclLoggingConfiguration(dict):
    @property
    @pulumi.getter(name="logDestination")
    def log_destination(self) -> str:
        """
        Amazon Resource Name (ARN) of Kinesis Firehose Delivery Stream
        """
        ...

    @property
    @pulumi.getter(name="redactedFields")
    def redacted_fields(self) -> Optional['outputs.WebAclLoggingConfigurationRedactedFields']:
        """
        Configuration block containing parts of the request that you want redacted from the logs. Detailed below.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class WebAclLoggingConfigurationRedactedFields(dict):
    @property
    @pulumi.getter(name="fieldToMatches")
    def field_to_matches(self) -> List['outputs.WebAclLoggingConfigurationRedactedFieldsFieldToMatch']:
        """
        Set of configuration blocks for fields to redact. Detailed below.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class WebAclLoggingConfigurationRedactedFieldsFieldToMatch(dict):
    @property
    @pulumi.getter
    def data(self) -> Optional[str]:
        """
        When the value of `type` is `HEADER`, enter the name of the header that you want the WAF to search, for example, `User-Agent` or `Referer`. If the value of `type` is any other value, omit `data`.
        """
        ...

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        Specifies how you want AWS WAF Regional to respond to requests that match the settings in a rule. e.g. `ALLOW`, `BLOCK` or `COUNT`
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class WebAclRule(dict):
    @property
    @pulumi.getter
    def action(self) -> Optional['outputs.WebAclRuleAction']:
        """
        Configuration block of the action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule.  Not used if `type` is `GROUP`. Detailed below.
        """
        ...

    @property
    @pulumi.getter(name="overrideAction")
    def override_action(self) -> Optional['outputs.WebAclRuleOverrideAction']:
        """
        Configuration block of the override the action that a group requests CloudFront or AWS WAF takes when a web request matches the conditions in the rule.  Only used if `type` is `GROUP`. Detailed below.
        """
        ...

    @property
    @pulumi.getter
    def priority(self) -> float:
        """
        Specifies the order in which the rules in a WebACL are evaluated.
        Rules with a lower value are evaluated before rules with a higher value.
        """
        ...

    @property
    @pulumi.getter(name="ruleId")
    def rule_id(self) -> str:
        """
        ID of the associated WAF (Regional) rule (e.g. `wafregional.Rule`). WAF (Global) rules cannot be used.
        """
        ...

    @property
    @pulumi.getter
    def type(self) -> Optional[str]:
        """
        Specifies how you want AWS WAF Regional to respond to requests that match the settings in a rule. e.g. `ALLOW`, `BLOCK` or `COUNT`
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class WebAclRuleAction(dict):
    @property
    @pulumi.getter
    def type(self) -> str:
        """
        Specifies how you want AWS WAF Regional to respond to requests that match the settings in a rule. e.g. `ALLOW`, `BLOCK` or `COUNT`
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class WebAclRuleOverrideAction(dict):
    @property
    @pulumi.getter
    def type(self) -> str:
        """
        Specifies how you want AWS WAF Regional to respond to requests that match the settings in a rule. e.g. `ALLOW`, `BLOCK` or `COUNT`
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class XssMatchSetXssMatchTuple(dict):
    @property
    @pulumi.getter(name="fieldToMatch")
    def field_to_match(self) -> 'outputs.XssMatchSetXssMatchTupleFieldToMatch':
        """
        Specifies where in a web request to look for cross-site scripting attacks.
        """
        ...

    @property
    @pulumi.getter(name="textTransformation")
    def text_transformation(self) -> str:
        """
        Which text transformation, if any, to perform on the web request before inspecting the request for cross-site scripting attacks.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class XssMatchSetXssMatchTupleFieldToMatch(dict):
    @property
    @pulumi.getter
    def data(self) -> Optional[str]:
        """
        When the value of `type` is `HEADER`, enter the name of the header that you want the WAF to search, for example, `User-Agent` or `Referer`. If the value of `type` is any other value, omit `data`.
        """
        ...

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        The part of the web request that you want AWS WAF to search for a specified string. e.g. `HEADER` or `METHOD`
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


