# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'DirectoryConnectSettings',
    'DirectoryVpcSettings',
    'GetDirectoryConnectSetting',
    'GetDirectoryVpcSetting',
]

@pulumi.output_type
class DirectoryConnectSettings(dict):
    availability_zones: Optional[List[str]] = pulumi.output_property("availabilityZones")
    connect_ips: Optional[List[str]] = pulumi.output_property("connectIps")
    """
    The IP addresses of the AD Connector servers.
    """
    customer_dns_ips: List[str] = pulumi.output_property("customerDnsIps")
    """
    The DNS IP addresses of the domain to connect to.
    """
    customer_username: str = pulumi.output_property("customerUsername")
    """
    The username corresponding to the password provided.
    """
    subnet_ids: List[str] = pulumi.output_property("subnetIds")
    """
    The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
    """
    vpc_id: str = pulumi.output_property("vpcId")
    """
    The identifier of the VPC that the directory is in.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DirectoryVpcSettings(dict):
    availability_zones: Optional[List[str]] = pulumi.output_property("availabilityZones")
    subnet_ids: List[str] = pulumi.output_property("subnetIds")
    """
    The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
    """
    vpc_id: str = pulumi.output_property("vpcId")
    """
    The identifier of the VPC that the directory is in.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetDirectoryConnectSetting(dict):
    availability_zones: List[str] = pulumi.output_property("availabilityZones")
    connect_ips: List[str] = pulumi.output_property("connectIps")
    """
    The IP addresses of the AD Connector servers.
    """
    customer_dns_ips: List[str] = pulumi.output_property("customerDnsIps")
    """
    The DNS IP addresses of the domain to connect to.
    """
    customer_username: str = pulumi.output_property("customerUsername")
    """
    The username corresponding to the password provided.
    """
    subnet_ids: List[str] = pulumi.output_property("subnetIds")
    """
    The identifiers of the subnets for the connector servers (2 subnets in 2 different AZs).
    """
    vpc_id: str = pulumi.output_property("vpcId")
    """
    The ID of the VPC that the connector is in.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetDirectoryVpcSetting(dict):
    availability_zones: List[str] = pulumi.output_property("availabilityZones")
    subnet_ids: List[str] = pulumi.output_property("subnetIds")
    """
    The identifiers of the subnets for the connector servers (2 subnets in 2 different AZs).
    """
    vpc_id: str = pulumi.output_property("vpcId")
    """
    The ID of the VPC that the connector is in.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


