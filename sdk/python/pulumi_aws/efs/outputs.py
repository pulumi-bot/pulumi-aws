# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'AccessPointPosixUser',
    'AccessPointRootDirectory',
    'AccessPointRootDirectoryCreationInfo',
    'FileSystemLifecyclePolicy',
    'GetAccessPointPosixUser',
    'GetAccessPointRootDirectory',
    'GetAccessPointRootDirectoryCreationInfo',
    'GetFileSystemLifecyclePolicy',
]

@pulumi.output_type
class AccessPointPosixUser(dict):
    gid: float = pulumi.output_property("gid")
    """
    The POSIX group ID used for all file system operations using this access point.
    """
    secondary_gids: Optional[List[float]] = pulumi.output_property("secondaryGids")
    """
    Secondary POSIX group IDs used for all file system operations using this access point.
    """
    uid: float = pulumi.output_property("uid")
    """
    The POSIX user ID used for all file system operations using this access point.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class AccessPointRootDirectory(dict):
    creation_info: Optional['outputs.AccessPointRootDirectoryCreationInfo'] = pulumi.output_property("creationInfo")
    """
    Specifies the POSIX IDs and permissions to apply to the access point's Root Directory. See Creation Info below.
    """
    path: Optional[str] = pulumi.output_property("path")
    """
    Specifies the path on the EFS file system to expose as the root directory to NFS clients using the access point to access the EFS file system. A path can have up to four subdirectories. If the specified path does not exist, you are required to provide `creation_info`.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class AccessPointRootDirectoryCreationInfo(dict):
    owner_gid: float = pulumi.output_property("ownerGid")
    """
    Specifies the POSIX group ID to apply to the `root_directory`.
    """
    owner_uid: float = pulumi.output_property("ownerUid")
    """
    Specifies the POSIX user ID to apply to the `root_directory`.
    """
    permissions: str = pulumi.output_property("permissions")
    """
    Specifies the POSIX permissions to apply to the RootDirectory, in the format of an octal number representing the file's mode bits.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class FileSystemLifecyclePolicy(dict):
    transition_to_ia: str = pulumi.output_property("transitionToIa")
    """
    Indicates how long it takes to transition files to the IA storage class. Valid values: `AFTER_7_DAYS`, `AFTER_14_DAYS`, `AFTER_30_DAYS`, `AFTER_60_DAYS`, or `AFTER_90_DAYS`.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetAccessPointPosixUser(dict):
    gid: float = pulumi.output_property("gid")
    """
    Group ID
    """
    secondary_gids: List[float] = pulumi.output_property("secondaryGids")
    """
    Secondary group IDs
    """
    uid: float = pulumi.output_property("uid")
    """
    User Id
    * `root_directory`- Single element list containing information on the directory on the Amazon EFS file system that the access point provides access to.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetAccessPointRootDirectory(dict):
    creation_infos: List['outputs.GetAccessPointRootDirectoryCreationInfo'] = pulumi.output_property("creationInfos")
    """
    Single element list containing information on the creation permissions of the directory
    """
    path: str = pulumi.output_property("path")
    """
    Path exposed as the root directory
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetAccessPointRootDirectoryCreationInfo(dict):
    owner_gid: float = pulumi.output_property("ownerGid")
    """
    POSIX owner group ID
    """
    owner_uid: float = pulumi.output_property("ownerUid")
    """
    POSIX owner user ID
    """
    permissions: str = pulumi.output_property("permissions")
    """
    POSIX permissions mode
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetFileSystemLifecyclePolicy(dict):
    transition_to_ia: str = pulumi.output_property("transitionToIa")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


