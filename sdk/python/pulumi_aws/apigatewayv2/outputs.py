# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'ApiCorsConfiguration',
    'AuthorizerJwtConfiguration',
    'DomainNameDomainNameConfiguration',
    'StageAccessLogSettings',
    'StageDefaultRouteSettings',
    'StageRouteSetting',
]

@pulumi.output_type
class ApiCorsConfiguration(dict):
    allow_credentials: Optional[bool] = pulumi.output_property("allowCredentials")
    """
    Whether credentials are included in the CORS request.
    """
    allow_headers: Optional[List[str]] = pulumi.output_property("allowHeaders")
    """
    The set of allowed HTTP headers.
    """
    allow_methods: Optional[List[str]] = pulumi.output_property("allowMethods")
    """
    The set of allowed HTTP methods.
    """
    allow_origins: Optional[List[str]] = pulumi.output_property("allowOrigins")
    """
    The set of allowed origins.
    """
    expose_headers: Optional[List[str]] = pulumi.output_property("exposeHeaders")
    """
    The set of exposed HTTP headers.
    """
    max_age: Optional[float] = pulumi.output_property("maxAge")
    """
    The number of seconds that the browser should cache preflight request results.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class AuthorizerJwtConfiguration(dict):
    audiences: Optional[List[str]] = pulumi.output_property("audiences")
    """
    A list of the intended recipients of the JWT. A valid JWT must provide an aud that matches at least one entry in this list.
    """
    issuer: Optional[str] = pulumi.output_property("issuer")
    """
    The base domain of the identity provider that issues JSON Web Tokens, such as the `endpoint` attribute of the `cognito.UserPool` resource.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DomainNameDomainNameConfiguration(dict):
    certificate_arn: str = pulumi.output_property("certificateArn")
    """
    The ARN of an AWS-managed certificate that will be used by the endpoint for the domain name. AWS Certificate Manager is the only supported source.
    Use the `acm.Certificate` resource to configure an ACM certificate.
    """
    endpoint_type: str = pulumi.output_property("endpointType")
    """
    The endpoint type. Valid values: `REGIONAL`.
    """
    hosted_zone_id: Optional[str] = pulumi.output_property("hostedZoneId")
    """
    The Amazon Route 53 Hosted Zone ID of the endpoint.
    """
    security_policy: str = pulumi.output_property("securityPolicy")
    """
    The Transport Layer Security (TLS) version of the [security policy](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-custom-domain-tls-version.html) for the domain name. Valid values: `TLS_1_2`.
    """
    target_domain_name: Optional[str] = pulumi.output_property("targetDomainName")
    """
    The target domain name.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class StageAccessLogSettings(dict):
    destination_arn: str = pulumi.output_property("destinationArn")
    """
    The ARN of the CloudWatch Logs log group to receive access logs. Any trailing `:*` is trimmed from the ARN.
    """
    format: str = pulumi.output_property("format")
    """
    A single line [format](https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html#apigateway-cloudwatch-log-formats) of the access logs of data, as specified by [selected $context variables](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-logging.html).
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class StageDefaultRouteSettings(dict):
    data_trace_enabled: Optional[bool] = pulumi.output_property("dataTraceEnabled")
    """
    Whether data trace logging is enabled for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
    Defaults to `false`. Supported only for WebSocket APIs.
    """
    detailed_metrics_enabled: Optional[bool] = pulumi.output_property("detailedMetricsEnabled")
    """
    Whether detailed metrics are enabled for the default route. Defaults to `false`.
    """
    logging_level: Optional[str] = pulumi.output_property("loggingLevel")
    """
    The logging level for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
    Valid values: `ERROR`, `INFO`, `OFF`. Defaults to `OFF`. Supported only for WebSocket APIs.
    """
    throttling_burst_limit: Optional[float] = pulumi.output_property("throttlingBurstLimit")
    """
    The throttling burst limit for the default route.
    """
    throttling_rate_limit: Optional[float] = pulumi.output_property("throttlingRateLimit")
    """
    The throttling rate limit for the default route.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class StageRouteSetting(dict):
    data_trace_enabled: Optional[bool] = pulumi.output_property("dataTraceEnabled")
    """
    Whether data trace logging is enabled for the route. Affects the log entries pushed to Amazon CloudWatch Logs.
    Defaults to `false`. Supported only for WebSocket APIs.
    """
    detailed_metrics_enabled: Optional[bool] = pulumi.output_property("detailedMetricsEnabled")
    """
    Whether detailed metrics are enabled for the route. Defaults to `false`.
    """
    logging_level: Optional[str] = pulumi.output_property("loggingLevel")
    """
    The logging level for the route. Affects the log entries pushed to Amazon CloudWatch Logs.
    Valid values: `ERROR`, `INFO`, `OFF`. Defaults to `OFF`. Supported only for WebSocket APIs.
    """
    route_key: str = pulumi.output_property("routeKey")
    """
    Route key.
    """
    throttling_burst_limit: Optional[float] = pulumi.output_property("throttlingBurstLimit")
    """
    The throttling burst limit for the route.
    """
    throttling_rate_limit: Optional[float] = pulumi.output_property("throttlingRateLimit")
    """
    The throttling rate limit for the route.
    """

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


