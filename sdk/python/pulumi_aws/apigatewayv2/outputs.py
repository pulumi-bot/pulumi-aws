# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Mapping, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'ApiCorsConfiguration',
    'AuthorizerJwtConfiguration',
    'DomainNameDomainNameConfiguration',
    'StageAccessLogSettings',
    'StageDefaultRouteSettings',
    'StageRouteSetting',
]

@pulumi.output_type
class ApiCorsConfiguration(dict):
    @property
    @pulumi.getter(name="allowCredentials")
    def allow_credentials(self) -> Optional[bool]:
        """
        Whether credentials are included in the CORS request.
        """
        ...

    @property
    @pulumi.getter(name="allowHeaders")
    def allow_headers(self) -> Optional[List[str]]:
        """
        The set of allowed HTTP headers.
        """
        ...

    @property
    @pulumi.getter(name="allowMethods")
    def allow_methods(self) -> Optional[List[str]]:
        """
        The set of allowed HTTP methods.
        """
        ...

    @property
    @pulumi.getter(name="allowOrigins")
    def allow_origins(self) -> Optional[List[str]]:
        """
        The set of allowed origins.
        """
        ...

    @property
    @pulumi.getter(name="exposeHeaders")
    def expose_headers(self) -> Optional[List[str]]:
        """
        The set of exposed HTTP headers.
        """
        ...

    @property
    @pulumi.getter(name="maxAge")
    def max_age(self) -> Optional[float]:
        """
        The number of seconds that the browser should cache preflight request results.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class AuthorizerJwtConfiguration(dict):
    @property
    @pulumi.getter
    def audiences(self) -> Optional[List[str]]:
        """
        A list of the intended recipients of the JWT. A valid JWT must provide an aud that matches at least one entry in this list.
        """
        ...

    @property
    @pulumi.getter
    def issuer(self) -> Optional[str]:
        """
        The base domain of the identity provider that issues JSON Web Tokens, such as the `endpoint` attribute of the `cognito.UserPool` resource.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class DomainNameDomainNameConfiguration(dict):
    @property
    @pulumi.getter(name="certificateArn")
    def certificate_arn(self) -> str:
        """
        The ARN of an AWS-managed certificate that will be used by the endpoint for the domain name. AWS Certificate Manager is the only supported source.
        Use the `acm.Certificate` resource to configure an ACM certificate.
        """
        ...

    @property
    @pulumi.getter(name="endpointType")
    def endpoint_type(self) -> str:
        """
        The endpoint type. Valid values: `REGIONAL`.
        """
        ...

    @property
    @pulumi.getter(name="hostedZoneId")
    def hosted_zone_id(self) -> Optional[str]:
        """
        The Amazon Route 53 Hosted Zone ID of the endpoint.
        """
        ...

    @property
    @pulumi.getter(name="securityPolicy")
    def security_policy(self) -> str:
        """
        The Transport Layer Security (TLS) version of the [security policy](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-custom-domain-tls-version.html) for the domain name. Valid values: `TLS_1_2`.
        """
        ...

    @property
    @pulumi.getter(name="targetDomainName")
    def target_domain_name(self) -> Optional[str]:
        """
        The target domain name.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class StageAccessLogSettings(dict):
    @property
    @pulumi.getter(name="destinationArn")
    def destination_arn(self) -> str:
        """
        The ARN of the CloudWatch Logs log group to receive access logs. Any trailing `:*` is trimmed from the ARN.
        """
        ...

    @property
    @pulumi.getter
    def format(self) -> str:
        """
        A single line [format](https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html#apigateway-cloudwatch-log-formats) of the access logs of data, as specified by [selected $context variables](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-logging.html).
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class StageDefaultRouteSettings(dict):
    @property
    @pulumi.getter(name="dataTraceEnabled")
    def data_trace_enabled(self) -> Optional[bool]:
        """
        Whether data trace logging is enabled for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
        Defaults to `false`. Supported only for WebSocket APIs.
        """
        ...

    @property
    @pulumi.getter(name="detailedMetricsEnabled")
    def detailed_metrics_enabled(self) -> Optional[bool]:
        """
        Whether detailed metrics are enabled for the default route. Defaults to `false`.
        """
        ...

    @property
    @pulumi.getter(name="loggingLevel")
    def logging_level(self) -> Optional[str]:
        """
        The logging level for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
        Valid values: `ERROR`, `INFO`, `OFF`. Defaults to `OFF`. Supported only for WebSocket APIs.
        """
        ...

    @property
    @pulumi.getter(name="throttlingBurstLimit")
    def throttling_burst_limit(self) -> Optional[float]:
        """
        The throttling burst limit for the default route.
        """
        ...

    @property
    @pulumi.getter(name="throttlingRateLimit")
    def throttling_rate_limit(self) -> Optional[float]:
        """
        The throttling rate limit for the default route.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class StageRouteSetting(dict):
    @property
    @pulumi.getter(name="dataTraceEnabled")
    def data_trace_enabled(self) -> Optional[bool]:
        """
        Whether data trace logging is enabled for the route. Affects the log entries pushed to Amazon CloudWatch Logs.
        Defaults to `false`. Supported only for WebSocket APIs.
        """
        ...

    @property
    @pulumi.getter(name="detailedMetricsEnabled")
    def detailed_metrics_enabled(self) -> Optional[bool]:
        """
        Whether detailed metrics are enabled for the route. Defaults to `false`.
        """
        ...

    @property
    @pulumi.getter(name="loggingLevel")
    def logging_level(self) -> Optional[str]:
        """
        The logging level for the route. Affects the log entries pushed to Amazon CloudWatch Logs.
        Valid values: `ERROR`, `INFO`, `OFF`. Defaults to `OFF`. Supported only for WebSocket APIs.
        """
        ...

    @property
    @pulumi.getter(name="routeKey")
    def route_key(self) -> str:
        """
        Route key.
        """
        ...

    @property
    @pulumi.getter(name="throttlingBurstLimit")
    def throttling_burst_limit(self) -> Optional[float]:
        """
        The throttling burst limit for the route.
        """
        ...

    @property
    @pulumi.getter(name="throttlingRateLimit")
    def throttling_rate_limit(self) -> Optional[float]:
        """
        The throttling rate limit for the route.
        """
        ...

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


