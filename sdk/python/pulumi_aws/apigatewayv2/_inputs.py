# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'ApiCorsConfigurationArgs',
    'AuthorizerJwtConfigurationArgs',
    'DomainNameDomainNameConfigurationArgs',
    'StageAccessLogSettingsArgs',
    'StageDefaultRouteSettingsArgs',
    'StageRouteSettingArgs',
]

@pulumi.input_type
class ApiCorsConfigurationArgs:
    allow_credentials: Optional[pulumi.Input[bool]] = pulumi.input_property("allowCredentials")
    """
    Whether credentials are included in the CORS request.
    """
    allow_headers: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("allowHeaders")
    """
    The set of allowed HTTP headers.
    """
    allow_methods: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("allowMethods")
    """
    The set of allowed HTTP methods.
    """
    allow_origins: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("allowOrigins")
    """
    The set of allowed origins.
    """
    expose_headers: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("exposeHeaders")
    """
    The set of exposed HTTP headers.
    """
    max_age: Optional[pulumi.Input[float]] = pulumi.input_property("maxAge")
    """
    The number of seconds that the browser should cache preflight request results.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, allow_credentials: Optional[pulumi.Input[bool]] = None, allow_headers: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, allow_methods: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, allow_origins: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, expose_headers: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, max_age: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[bool] allow_credentials: Whether credentials are included in the CORS request.
        :param pulumi.Input[List[pulumi.Input[str]]] allow_headers: The set of allowed HTTP headers.
        :param pulumi.Input[List[pulumi.Input[str]]] allow_methods: The set of allowed HTTP methods.
        :param pulumi.Input[List[pulumi.Input[str]]] allow_origins: The set of allowed origins.
        :param pulumi.Input[List[pulumi.Input[str]]] expose_headers: The set of exposed HTTP headers.
        :param pulumi.Input[float] max_age: The number of seconds that the browser should cache preflight request results.
        """
        __self__.allow_credentials = allow_credentials
        __self__.allow_headers = allow_headers
        __self__.allow_methods = allow_methods
        __self__.allow_origins = allow_origins
        __self__.expose_headers = expose_headers
        __self__.max_age = max_age

@pulumi.input_type
class AuthorizerJwtConfigurationArgs:
    audiences: Optional[pulumi.Input[List[pulumi.Input[str]]]] = pulumi.input_property("audiences")
    """
    A list of the intended recipients of the JWT. A valid JWT must provide an aud that matches at least one entry in this list.
    """
    issuer: Optional[pulumi.Input[str]] = pulumi.input_property("issuer")
    """
    The base domain of the identity provider that issues JSON Web Tokens, such as the `endpoint` attribute of the `cognito.UserPool` resource.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, audiences: Optional[pulumi.Input[List[pulumi.Input[str]]]] = None, issuer: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[List[pulumi.Input[str]]] audiences: A list of the intended recipients of the JWT. A valid JWT must provide an aud that matches at least one entry in this list.
        :param pulumi.Input[str] issuer: The base domain of the identity provider that issues JSON Web Tokens, such as the `endpoint` attribute of the `cognito.UserPool` resource.
        """
        __self__.audiences = audiences
        __self__.issuer = issuer

@pulumi.input_type
class DomainNameDomainNameConfigurationArgs:
    certificate_arn: pulumi.Input[str] = pulumi.input_property("certificateArn")
    """
    The ARN of an AWS-managed certificate that will be used by the endpoint for the domain name. AWS Certificate Manager is the only supported source.
    Use the `acm.Certificate` resource to configure an ACM certificate.
    """
    endpoint_type: pulumi.Input[str] = pulumi.input_property("endpointType")
    """
    The endpoint type. Valid values: `REGIONAL`.
    """
    security_policy: pulumi.Input[str] = pulumi.input_property("securityPolicy")
    """
    The Transport Layer Security (TLS) version of the [security policy](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-custom-domain-tls-version.html) for the domain name. Valid values: `TLS_1_2`.
    """
    hosted_zone_id: Optional[pulumi.Input[str]] = pulumi.input_property("hostedZoneId")
    """
    The Amazon Route 53 Hosted Zone ID of the endpoint.
    """
    target_domain_name: Optional[pulumi.Input[str]] = pulumi.input_property("targetDomainName")
    """
    The target domain name.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, certificate_arn: pulumi.Input[str], endpoint_type: pulumi.Input[str], security_policy: pulumi.Input[str], hosted_zone_id: Optional[pulumi.Input[str]] = None, target_domain_name: Optional[pulumi.Input[str]] = None) -> None:
        """
        :param pulumi.Input[str] certificate_arn: The ARN of an AWS-managed certificate that will be used by the endpoint for the domain name. AWS Certificate Manager is the only supported source.
               Use the `acm.Certificate` resource to configure an ACM certificate.
        :param pulumi.Input[str] endpoint_type: The endpoint type. Valid values: `REGIONAL`.
        :param pulumi.Input[str] security_policy: The Transport Layer Security (TLS) version of the [security policy](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-custom-domain-tls-version.html) for the domain name. Valid values: `TLS_1_2`.
        :param pulumi.Input[str] hosted_zone_id: The Amazon Route 53 Hosted Zone ID of the endpoint.
        :param pulumi.Input[str] target_domain_name: The target domain name.
        """
        __self__.certificate_arn = certificate_arn
        __self__.endpoint_type = endpoint_type
        __self__.security_policy = security_policy
        __self__.hosted_zone_id = hosted_zone_id
        __self__.target_domain_name = target_domain_name

@pulumi.input_type
class StageAccessLogSettingsArgs:
    destination_arn: pulumi.Input[str] = pulumi.input_property("destinationArn")
    """
    The ARN of the CloudWatch Logs log group to receive access logs. Any trailing `:*` is trimmed from the ARN.
    """
    format: pulumi.Input[str] = pulumi.input_property("format")
    """
    A single line [format](https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html#apigateway-cloudwatch-log-formats) of the access logs of data, as specified by [selected $context variables](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-logging.html).
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, destination_arn: pulumi.Input[str], format: pulumi.Input[str]) -> None:
        """
        :param pulumi.Input[str] destination_arn: The ARN of the CloudWatch Logs log group to receive access logs. Any trailing `:*` is trimmed from the ARN.
        :param pulumi.Input[str] format: A single line [format](https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html#apigateway-cloudwatch-log-formats) of the access logs of data, as specified by [selected $context variables](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-logging.html).
        """
        __self__.destination_arn = destination_arn
        __self__.format = format

@pulumi.input_type
class StageDefaultRouteSettingsArgs:
    data_trace_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("dataTraceEnabled")
    """
    Whether data trace logging is enabled for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
    Defaults to `false`. Supported only for WebSocket APIs.
    """
    detailed_metrics_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("detailedMetricsEnabled")
    """
    Whether detailed metrics are enabled for the default route. Defaults to `false`.
    """
    logging_level: Optional[pulumi.Input[str]] = pulumi.input_property("loggingLevel")
    """
    The logging level for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
    Valid values: `ERROR`, `INFO`, `OFF`. Defaults to `OFF`. Supported only for WebSocket APIs.
    """
    throttling_burst_limit: Optional[pulumi.Input[float]] = pulumi.input_property("throttlingBurstLimit")
    """
    The throttling burst limit for the default route.
    """
    throttling_rate_limit: Optional[pulumi.Input[float]] = pulumi.input_property("throttlingRateLimit")
    """
    The throttling rate limit for the default route.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, data_trace_enabled: Optional[pulumi.Input[bool]] = None, detailed_metrics_enabled: Optional[pulumi.Input[bool]] = None, logging_level: Optional[pulumi.Input[str]] = None, throttling_burst_limit: Optional[pulumi.Input[float]] = None, throttling_rate_limit: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[bool] data_trace_enabled: Whether data trace logging is enabled for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
               Defaults to `false`. Supported only for WebSocket APIs.
        :param pulumi.Input[bool] detailed_metrics_enabled: Whether detailed metrics are enabled for the default route. Defaults to `false`.
        :param pulumi.Input[str] logging_level: The logging level for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
               Valid values: `ERROR`, `INFO`, `OFF`. Defaults to `OFF`. Supported only for WebSocket APIs.
        :param pulumi.Input[float] throttling_burst_limit: The throttling burst limit for the default route.
        :param pulumi.Input[float] throttling_rate_limit: The throttling rate limit for the default route.
        """
        __self__.data_trace_enabled = data_trace_enabled
        __self__.detailed_metrics_enabled = detailed_metrics_enabled
        __self__.logging_level = logging_level
        __self__.throttling_burst_limit = throttling_burst_limit
        __self__.throttling_rate_limit = throttling_rate_limit

@pulumi.input_type
class StageRouteSettingArgs:
    route_key: pulumi.Input[str] = pulumi.input_property("routeKey")
    """
    Route key.
    """
    data_trace_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("dataTraceEnabled")
    """
    Whether data trace logging is enabled for the route. Affects the log entries pushed to Amazon CloudWatch Logs.
    Defaults to `false`. Supported only for WebSocket APIs.
    """
    detailed_metrics_enabled: Optional[pulumi.Input[bool]] = pulumi.input_property("detailedMetricsEnabled")
    """
    Whether detailed metrics are enabled for the route. Defaults to `false`.
    """
    logging_level: Optional[pulumi.Input[str]] = pulumi.input_property("loggingLevel")
    """
    The logging level for the route. Affects the log entries pushed to Amazon CloudWatch Logs.
    Valid values: `ERROR`, `INFO`, `OFF`. Defaults to `OFF`. Supported only for WebSocket APIs.
    """
    throttling_burst_limit: Optional[pulumi.Input[float]] = pulumi.input_property("throttlingBurstLimit")
    """
    The throttling burst limit for the route.
    """
    throttling_rate_limit: Optional[pulumi.Input[float]] = pulumi.input_property("throttlingRateLimit")
    """
    The throttling rate limit for the route.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, route_key: pulumi.Input[str], data_trace_enabled: Optional[pulumi.Input[bool]] = None, detailed_metrics_enabled: Optional[pulumi.Input[bool]] = None, logging_level: Optional[pulumi.Input[str]] = None, throttling_burst_limit: Optional[pulumi.Input[float]] = None, throttling_rate_limit: Optional[pulumi.Input[float]] = None) -> None:
        """
        :param pulumi.Input[str] route_key: Route key.
        :param pulumi.Input[bool] data_trace_enabled: Whether data trace logging is enabled for the route. Affects the log entries pushed to Amazon CloudWatch Logs.
               Defaults to `false`. Supported only for WebSocket APIs.
        :param pulumi.Input[bool] detailed_metrics_enabled: Whether detailed metrics are enabled for the route. Defaults to `false`.
        :param pulumi.Input[str] logging_level: The logging level for the route. Affects the log entries pushed to Amazon CloudWatch Logs.
               Valid values: `ERROR`, `INFO`, `OFF`. Defaults to `OFF`. Supported only for WebSocket APIs.
        :param pulumi.Input[float] throttling_burst_limit: The throttling burst limit for the route.
        :param pulumi.Input[float] throttling_rate_limit: The throttling rate limit for the route.
        """
        __self__.route_key = route_key
        __self__.data_trace_enabled = data_trace_enabled
        __self__.detailed_metrics_enabled = detailed_metrics_enabled
        __self__.logging_level = logging_level
        __self__.throttling_burst_limit = throttling_burst_limit
        __self__.throttling_rate_limit = throttling_rate_limit

