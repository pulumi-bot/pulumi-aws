# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Mapping, Optional, Tuple, Union
from .. import _utilities, _tables

__all__ = [
    'TriggerTrigger',
]

@pulumi.output_type
class TriggerTrigger(dict):
    def __init__(__self__, *,
                 destination_arn: str,
                 events: List[str],
                 name: str,
                 branches: Optional[List[str]] = None,
                 custom_data: Optional[str] = None):
        pulumi.set(__self__, "destination_arn", destination_arn)
        pulumi.set(__self__, "events", events)
        pulumi.set(__self__, "name", name)
        if branches is not None:
            pulumi.set(__self__, "branches", branches)
        if custom_data is not None:
            pulumi.set(__self__, "custom_data", custom_data)

    @property
    @pulumi.getter(name="destinationArn")
    def destination_arn(self) -> str:
        return pulumi.get(self, "destination_arn")

    @property
    @pulumi.getter
    def events(self) -> List[str]:
        return pulumi.get(self, "events")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def branches(self) -> Optional[List[str]]:
        return pulumi.get(self, "branches")

    @property
    @pulumi.getter(name="customData")
    def custom_data(self) -> Optional[str]:
        return pulumi.get(self, "custom_data")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


