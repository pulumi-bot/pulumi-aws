// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class Eip extends pulumi.CustomResource {
    /**
     * Get an existing Eip resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EipState, opts?: pulumi.CustomResourceOptions): Eip {
        return new Eip(name, <any>state, { ...opts, id: id });
    }

    public /*out*/ readonly allocationId: pulumi.Output<string>;
    public readonly associateWithPrivateIp: pulumi.Output<string | undefined>;
    public /*out*/ readonly associationId: pulumi.Output<string>;
    public /*out*/ readonly domain: pulumi.Output<string>;
    public readonly instance: pulumi.Output<string>;
    public readonly networkInterface: pulumi.Output<string>;
    public /*out*/ readonly privateIp: pulumi.Output<string>;
    public /*out*/ readonly publicIp: pulumi.Output<string>;
    public readonly publicIpv4Pool: pulumi.Output<string>;
    public readonly tags: pulumi.Output<{[key: string]: any} | undefined>;
    public readonly vpc: pulumi.Output<boolean>;

    /**
     * Create a Eip resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: EipArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EipArgs | EipState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: EipState = argsOrState as EipState | undefined;
            inputs["allocationId"] = state ? state.allocationId : undefined;
            inputs["associateWithPrivateIp"] = state ? state.associateWithPrivateIp : undefined;
            inputs["associationId"] = state ? state.associationId : undefined;
            inputs["domain"] = state ? state.domain : undefined;
            inputs["instance"] = state ? state.instance : undefined;
            inputs["networkInterface"] = state ? state.networkInterface : undefined;
            inputs["privateIp"] = state ? state.privateIp : undefined;
            inputs["publicIp"] = state ? state.publicIp : undefined;
            inputs["publicIpv4Pool"] = state ? state.publicIpv4Pool : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["vpc"] = state ? state.vpc : undefined;
        } else {
            const args = argsOrState as EipArgs | undefined;
            inputs["associateWithPrivateIp"] = args ? args.associateWithPrivateIp : undefined;
            inputs["instance"] = args ? args.instance : undefined;
            inputs["networkInterface"] = args ? args.networkInterface : undefined;
            inputs["publicIpv4Pool"] = args ? args.publicIpv4Pool : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["vpc"] = args ? args.vpc : undefined;
            inputs["allocationId"] = undefined /*out*/;
            inputs["associationId"] = undefined /*out*/;
            inputs["domain"] = undefined /*out*/;
            inputs["privateIp"] = undefined /*out*/;
            inputs["publicIp"] = undefined /*out*/;
        }
        super("aws:ec2/eip:Eip", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Eip resources.
 */
export interface EipState {
    readonly allocationId?: pulumi.Input<string>;
    readonly associateWithPrivateIp?: pulumi.Input<string>;
    readonly associationId?: pulumi.Input<string>;
    readonly domain?: pulumi.Input<string>;
    readonly instance?: pulumi.Input<string>;
    readonly networkInterface?: pulumi.Input<string>;
    readonly privateIp?: pulumi.Input<string>;
    readonly publicIp?: pulumi.Input<string>;
    readonly publicIpv4Pool?: pulumi.Input<string>;
    readonly tags?: pulumi.Input<{[key: string]: any}>;
    readonly vpc?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a Eip resource.
 */
export interface EipArgs {
    readonly associateWithPrivateIp?: pulumi.Input<string>;
    readonly instance?: pulumi.Input<string>;
    readonly networkInterface?: pulumi.Input<string>;
    readonly publicIpv4Pool?: pulumi.Input<string>;
    readonly tags?: pulumi.Input<{[key: string]: any}>;
    readonly vpc?: pulumi.Input<boolean>;
}
