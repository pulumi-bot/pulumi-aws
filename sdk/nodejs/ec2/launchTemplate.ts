// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class LaunchTemplate extends pulumi.CustomResource {
    /**
     * Get an existing LaunchTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LaunchTemplateState, opts?: pulumi.CustomResourceOptions): LaunchTemplate {
        return new LaunchTemplate(name, <any>state, { ...opts, id: id });
    }

    public /*out*/ readonly arn: pulumi.Output<string>;
    public readonly blockDeviceMappings: pulumi.Output<{ deviceName?: string, ebs?: { deleteOnTermination?: string, encrypted?: string, iops: number, kmsKeyId?: string, snapshotId?: string, volumeSize: number, volumeType: string }, noDevice?: string, virtualName?: string }[] | undefined>;
    public readonly capacityReservationSpecification: pulumi.Output<{ capacityReservationPreference?: string, capacityReservationTarget?: { capacityReservationId?: string } } | undefined>;
    public readonly creditSpecification: pulumi.Output<{ cpuCredits?: string } | undefined>;
    public /*out*/ readonly defaultVersion: pulumi.Output<number>;
    public readonly description: pulumi.Output<string | undefined>;
    public readonly disableApiTermination: pulumi.Output<boolean | undefined>;
    public readonly ebsOptimized: pulumi.Output<string | undefined>;
    public readonly elasticGpuSpecifications: pulumi.Output<{ type: string }[] | undefined>;
    public readonly iamInstanceProfile: pulumi.Output<{ arn?: string, name?: string } | undefined>;
    public readonly imageId: pulumi.Output<string | undefined>;
    public readonly instanceInitiatedShutdownBehavior: pulumi.Output<string | undefined>;
    public readonly instanceMarketOptions: pulumi.Output<{ marketType?: string, spotOptions?: { blockDurationMinutes?: number, instanceInterruptionBehavior?: string, maxPrice?: string, spotInstanceType?: string, validUntil: string } } | undefined>;
    public readonly instanceType: pulumi.Output<string | undefined>;
    public readonly kernelId: pulumi.Output<string | undefined>;
    public readonly keyName: pulumi.Output<string | undefined>;
    public /*out*/ readonly latestVersion: pulumi.Output<number>;
    public readonly licenseSpecifications: pulumi.Output<{ licenseConfigurationArn: string }[] | undefined>;
    public readonly monitoring: pulumi.Output<{ enabled?: boolean } | undefined>;
    public readonly name: pulumi.Output<string>;
    public readonly namePrefix: pulumi.Output<string | undefined>;
    public readonly networkInterfaces: pulumi.Output<{ associatePublicIpAddress?: boolean, deleteOnTermination?: boolean, description?: string, deviceIndex?: number, ipv4AddressCount?: number, ipv4Addresses?: string[], ipv6AddressCount?: number, ipv6Addresses?: string[], networkInterfaceId?: string, privateIpAddress?: string, securityGroups?: string[], subnetId?: string }[] | undefined>;
    public readonly placement: pulumi.Output<{ affinity?: string, availabilityZone?: string, groupName?: string, hostId?: string, spreadDomain?: string, tenancy?: string } | undefined>;
    public readonly ramDiskId: pulumi.Output<string | undefined>;
    public readonly securityGroupNames: pulumi.Output<string[] | undefined>;
    public readonly tagSpecifications: pulumi.Output<{ resourceType?: string, tags?: {[key: string]: any} }[] | undefined>;
    public readonly tags: pulumi.Output<{[key: string]: any} | undefined>;
    public readonly userData: pulumi.Output<string | undefined>;
    public readonly vpcSecurityGroupIds: pulumi.Output<string[] | undefined>;

    /**
     * Create a LaunchTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: LaunchTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LaunchTemplateArgs | LaunchTemplateState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: LaunchTemplateState = argsOrState as LaunchTemplateState | undefined;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["blockDeviceMappings"] = state ? state.blockDeviceMappings : undefined;
            inputs["capacityReservationSpecification"] = state ? state.capacityReservationSpecification : undefined;
            inputs["creditSpecification"] = state ? state.creditSpecification : undefined;
            inputs["defaultVersion"] = state ? state.defaultVersion : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["disableApiTermination"] = state ? state.disableApiTermination : undefined;
            inputs["ebsOptimized"] = state ? state.ebsOptimized : undefined;
            inputs["elasticGpuSpecifications"] = state ? state.elasticGpuSpecifications : undefined;
            inputs["iamInstanceProfile"] = state ? state.iamInstanceProfile : undefined;
            inputs["imageId"] = state ? state.imageId : undefined;
            inputs["instanceInitiatedShutdownBehavior"] = state ? state.instanceInitiatedShutdownBehavior : undefined;
            inputs["instanceMarketOptions"] = state ? state.instanceMarketOptions : undefined;
            inputs["instanceType"] = state ? state.instanceType : undefined;
            inputs["kernelId"] = state ? state.kernelId : undefined;
            inputs["keyName"] = state ? state.keyName : undefined;
            inputs["latestVersion"] = state ? state.latestVersion : undefined;
            inputs["licenseSpecifications"] = state ? state.licenseSpecifications : undefined;
            inputs["monitoring"] = state ? state.monitoring : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["namePrefix"] = state ? state.namePrefix : undefined;
            inputs["networkInterfaces"] = state ? state.networkInterfaces : undefined;
            inputs["placement"] = state ? state.placement : undefined;
            inputs["ramDiskId"] = state ? state.ramDiskId : undefined;
            inputs["securityGroupNames"] = state ? state.securityGroupNames : undefined;
            inputs["tagSpecifications"] = state ? state.tagSpecifications : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["userData"] = state ? state.userData : undefined;
            inputs["vpcSecurityGroupIds"] = state ? state.vpcSecurityGroupIds : undefined;
        } else {
            const args = argsOrState as LaunchTemplateArgs | undefined;
            inputs["blockDeviceMappings"] = args ? args.blockDeviceMappings : undefined;
            inputs["capacityReservationSpecification"] = args ? args.capacityReservationSpecification : undefined;
            inputs["creditSpecification"] = args ? args.creditSpecification : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["disableApiTermination"] = args ? args.disableApiTermination : undefined;
            inputs["ebsOptimized"] = args ? args.ebsOptimized : undefined;
            inputs["elasticGpuSpecifications"] = args ? args.elasticGpuSpecifications : undefined;
            inputs["iamInstanceProfile"] = args ? args.iamInstanceProfile : undefined;
            inputs["imageId"] = args ? args.imageId : undefined;
            inputs["instanceInitiatedShutdownBehavior"] = args ? args.instanceInitiatedShutdownBehavior : undefined;
            inputs["instanceMarketOptions"] = args ? args.instanceMarketOptions : undefined;
            inputs["instanceType"] = args ? args.instanceType : undefined;
            inputs["kernelId"] = args ? args.kernelId : undefined;
            inputs["keyName"] = args ? args.keyName : undefined;
            inputs["licenseSpecifications"] = args ? args.licenseSpecifications : undefined;
            inputs["monitoring"] = args ? args.monitoring : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["namePrefix"] = args ? args.namePrefix : undefined;
            inputs["networkInterfaces"] = args ? args.networkInterfaces : undefined;
            inputs["placement"] = args ? args.placement : undefined;
            inputs["ramDiskId"] = args ? args.ramDiskId : undefined;
            inputs["securityGroupNames"] = args ? args.securityGroupNames : undefined;
            inputs["tagSpecifications"] = args ? args.tagSpecifications : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["userData"] = args ? args.userData : undefined;
            inputs["vpcSecurityGroupIds"] = args ? args.vpcSecurityGroupIds : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["defaultVersion"] = undefined /*out*/;
            inputs["latestVersion"] = undefined /*out*/;
        }
        super("aws:ec2/launchTemplate:LaunchTemplate", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LaunchTemplate resources.
 */
export interface LaunchTemplateState {
    readonly arn?: pulumi.Input<string>;
    readonly blockDeviceMappings?: pulumi.Input<pulumi.Input<{ deviceName?: pulumi.Input<string>, ebs?: pulumi.Input<{ deleteOnTermination?: pulumi.Input<string>, encrypted?: pulumi.Input<string>, iops?: pulumi.Input<number>, kmsKeyId?: pulumi.Input<string>, snapshotId?: pulumi.Input<string>, volumeSize?: pulumi.Input<number>, volumeType?: pulumi.Input<string> }>, noDevice?: pulumi.Input<string>, virtualName?: pulumi.Input<string> }>[]>;
    readonly capacityReservationSpecification?: pulumi.Input<{ capacityReservationPreference?: pulumi.Input<string>, capacityReservationTarget?: pulumi.Input<{ capacityReservationId?: pulumi.Input<string> }> }>;
    readonly creditSpecification?: pulumi.Input<{ cpuCredits?: pulumi.Input<string> }>;
    readonly defaultVersion?: pulumi.Input<number>;
    readonly description?: pulumi.Input<string>;
    readonly disableApiTermination?: pulumi.Input<boolean>;
    readonly ebsOptimized?: pulumi.Input<string>;
    readonly elasticGpuSpecifications?: pulumi.Input<pulumi.Input<{ type: pulumi.Input<string> }>[]>;
    readonly iamInstanceProfile?: pulumi.Input<{ arn?: pulumi.Input<string>, name?: pulumi.Input<string> }>;
    readonly imageId?: pulumi.Input<string>;
    readonly instanceInitiatedShutdownBehavior?: pulumi.Input<string>;
    readonly instanceMarketOptions?: pulumi.Input<{ marketType?: pulumi.Input<string>, spotOptions?: pulumi.Input<{ blockDurationMinutes?: pulumi.Input<number>, instanceInterruptionBehavior?: pulumi.Input<string>, maxPrice?: pulumi.Input<string>, spotInstanceType?: pulumi.Input<string>, validUntil?: pulumi.Input<string> }> }>;
    readonly instanceType?: pulumi.Input<string>;
    readonly kernelId?: pulumi.Input<string>;
    readonly keyName?: pulumi.Input<string>;
    readonly latestVersion?: pulumi.Input<number>;
    readonly licenseSpecifications?: pulumi.Input<pulumi.Input<{ licenseConfigurationArn: pulumi.Input<string> }>[]>;
    readonly monitoring?: pulumi.Input<{ enabled?: pulumi.Input<boolean> }>;
    readonly name?: pulumi.Input<string>;
    readonly namePrefix?: pulumi.Input<string>;
    readonly networkInterfaces?: pulumi.Input<pulumi.Input<{ associatePublicIpAddress?: pulumi.Input<boolean>, deleteOnTermination?: pulumi.Input<boolean>, description?: pulumi.Input<string>, deviceIndex?: pulumi.Input<number>, ipv4AddressCount?: pulumi.Input<number>, ipv4Addresses?: pulumi.Input<pulumi.Input<string>[]>, ipv6AddressCount?: pulumi.Input<number>, ipv6Addresses?: pulumi.Input<pulumi.Input<string>[]>, networkInterfaceId?: pulumi.Input<string>, privateIpAddress?: pulumi.Input<string>, securityGroups?: pulumi.Input<pulumi.Input<string>[]>, subnetId?: pulumi.Input<string> }>[]>;
    readonly placement?: pulumi.Input<{ affinity?: pulumi.Input<string>, availabilityZone?: pulumi.Input<string>, groupName?: pulumi.Input<string>, hostId?: pulumi.Input<string>, spreadDomain?: pulumi.Input<string>, tenancy?: pulumi.Input<string> }>;
    readonly ramDiskId?: pulumi.Input<string>;
    readonly securityGroupNames?: pulumi.Input<pulumi.Input<string>[]>;
    readonly tagSpecifications?: pulumi.Input<pulumi.Input<{ resourceType?: pulumi.Input<string>, tags?: pulumi.Input<{[key: string]: any}> }>[]>;
    readonly tags?: pulumi.Input<{[key: string]: any}>;
    readonly userData?: pulumi.Input<string>;
    readonly vpcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a LaunchTemplate resource.
 */
export interface LaunchTemplateArgs {
    readonly blockDeviceMappings?: pulumi.Input<pulumi.Input<{ deviceName?: pulumi.Input<string>, ebs?: pulumi.Input<{ deleteOnTermination?: pulumi.Input<string>, encrypted?: pulumi.Input<string>, iops?: pulumi.Input<number>, kmsKeyId?: pulumi.Input<string>, snapshotId?: pulumi.Input<string>, volumeSize?: pulumi.Input<number>, volumeType?: pulumi.Input<string> }>, noDevice?: pulumi.Input<string>, virtualName?: pulumi.Input<string> }>[]>;
    readonly capacityReservationSpecification?: pulumi.Input<{ capacityReservationPreference?: pulumi.Input<string>, capacityReservationTarget?: pulumi.Input<{ capacityReservationId?: pulumi.Input<string> }> }>;
    readonly creditSpecification?: pulumi.Input<{ cpuCredits?: pulumi.Input<string> }>;
    readonly description?: pulumi.Input<string>;
    readonly disableApiTermination?: pulumi.Input<boolean>;
    readonly ebsOptimized?: pulumi.Input<string>;
    readonly elasticGpuSpecifications?: pulumi.Input<pulumi.Input<{ type: pulumi.Input<string> }>[]>;
    readonly iamInstanceProfile?: pulumi.Input<{ arn?: pulumi.Input<string>, name?: pulumi.Input<string> }>;
    readonly imageId?: pulumi.Input<string>;
    readonly instanceInitiatedShutdownBehavior?: pulumi.Input<string>;
    readonly instanceMarketOptions?: pulumi.Input<{ marketType?: pulumi.Input<string>, spotOptions?: pulumi.Input<{ blockDurationMinutes?: pulumi.Input<number>, instanceInterruptionBehavior?: pulumi.Input<string>, maxPrice?: pulumi.Input<string>, spotInstanceType?: pulumi.Input<string>, validUntil?: pulumi.Input<string> }> }>;
    readonly instanceType?: pulumi.Input<string>;
    readonly kernelId?: pulumi.Input<string>;
    readonly keyName?: pulumi.Input<string>;
    readonly licenseSpecifications?: pulumi.Input<pulumi.Input<{ licenseConfigurationArn: pulumi.Input<string> }>[]>;
    readonly monitoring?: pulumi.Input<{ enabled?: pulumi.Input<boolean> }>;
    readonly name?: pulumi.Input<string>;
    readonly namePrefix?: pulumi.Input<string>;
    readonly networkInterfaces?: pulumi.Input<pulumi.Input<{ associatePublicIpAddress?: pulumi.Input<boolean>, deleteOnTermination?: pulumi.Input<boolean>, description?: pulumi.Input<string>, deviceIndex?: pulumi.Input<number>, ipv4AddressCount?: pulumi.Input<number>, ipv4Addresses?: pulumi.Input<pulumi.Input<string>[]>, ipv6AddressCount?: pulumi.Input<number>, ipv6Addresses?: pulumi.Input<pulumi.Input<string>[]>, networkInterfaceId?: pulumi.Input<string>, privateIpAddress?: pulumi.Input<string>, securityGroups?: pulumi.Input<pulumi.Input<string>[]>, subnetId?: pulumi.Input<string> }>[]>;
    readonly placement?: pulumi.Input<{ affinity?: pulumi.Input<string>, availabilityZone?: pulumi.Input<string>, groupName?: pulumi.Input<string>, hostId?: pulumi.Input<string>, spreadDomain?: pulumi.Input<string>, tenancy?: pulumi.Input<string> }>;
    readonly ramDiskId?: pulumi.Input<string>;
    readonly securityGroupNames?: pulumi.Input<pulumi.Input<string>[]>;
    readonly tagSpecifications?: pulumi.Input<pulumi.Input<{ resourceType?: pulumi.Input<string>, tags?: pulumi.Input<{[key: string]: any}> }>[]>;
    readonly tags?: pulumi.Input<{[key: string]: any}>;
    readonly userData?: pulumi.Input<string>;
    readonly vpcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}
