// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class VpcEndpointConnectionNotification extends pulumi.CustomResource {
    /**
     * Get an existing VpcEndpointConnectionNotification resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcEndpointConnectionNotificationState, opts?: pulumi.CustomResourceOptions): VpcEndpointConnectionNotification {
        return new VpcEndpointConnectionNotification(name, <any>state, { ...opts, id: id });
    }

    public readonly connectionEvents: pulumi.Output<string[]>;
    public readonly connectionNotificationArn: pulumi.Output<string>;
    public /*out*/ readonly notificationType: pulumi.Output<string>;
    public /*out*/ readonly state: pulumi.Output<string>;
    public readonly vpcEndpointId: pulumi.Output<string | undefined>;
    public readonly vpcEndpointServiceId: pulumi.Output<string | undefined>;

    /**
     * Create a VpcEndpointConnectionNotification resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpcEndpointConnectionNotificationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpcEndpointConnectionNotificationArgs | VpcEndpointConnectionNotificationState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: VpcEndpointConnectionNotificationState = argsOrState as VpcEndpointConnectionNotificationState | undefined;
            inputs["connectionEvents"] = state ? state.connectionEvents : undefined;
            inputs["connectionNotificationArn"] = state ? state.connectionNotificationArn : undefined;
            inputs["notificationType"] = state ? state.notificationType : undefined;
            inputs["state"] = state ? state.state : undefined;
            inputs["vpcEndpointId"] = state ? state.vpcEndpointId : undefined;
            inputs["vpcEndpointServiceId"] = state ? state.vpcEndpointServiceId : undefined;
        } else {
            const args = argsOrState as VpcEndpointConnectionNotificationArgs | undefined;
            if (!args || args.connectionEvents === undefined) {
                throw new Error("Missing required property 'connectionEvents'");
            }
            if (!args || args.connectionNotificationArn === undefined) {
                throw new Error("Missing required property 'connectionNotificationArn'");
            }
            inputs["connectionEvents"] = args ? args.connectionEvents : undefined;
            inputs["connectionNotificationArn"] = args ? args.connectionNotificationArn : undefined;
            inputs["vpcEndpointId"] = args ? args.vpcEndpointId : undefined;
            inputs["vpcEndpointServiceId"] = args ? args.vpcEndpointServiceId : undefined;
            inputs["notificationType"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
        }
        super("aws:ec2/vpcEndpointConnectionNotification:VpcEndpointConnectionNotification", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VpcEndpointConnectionNotification resources.
 */
export interface VpcEndpointConnectionNotificationState {
    readonly connectionEvents?: pulumi.Input<pulumi.Input<string>[]>;
    readonly connectionNotificationArn?: pulumi.Input<string>;
    readonly notificationType?: pulumi.Input<string>;
    readonly state?: pulumi.Input<string>;
    readonly vpcEndpointId?: pulumi.Input<string>;
    readonly vpcEndpointServiceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VpcEndpointConnectionNotification resource.
 */
export interface VpcEndpointConnectionNotificationArgs {
    readonly connectionEvents: pulumi.Input<pulumi.Input<string>[]>;
    readonly connectionNotificationArn: pulumi.Input<string>;
    readonly vpcEndpointId?: pulumi.Input<string>;
    readonly vpcEndpointServiceId?: pulumi.Input<string>;
}
