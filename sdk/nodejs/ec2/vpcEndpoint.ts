// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class VpcEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing VpcEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcEndpointState, opts?: pulumi.CustomResourceOptions): VpcEndpoint {
        return new VpcEndpoint(name, <any>state, { ...opts, id: id });
    }

    public readonly autoAccept: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly cidrBlocks: pulumi.Output<string[]>;
    public /*out*/ readonly dnsEntries: pulumi.Output<{ dnsName: string, hostedZoneId: string }[]>;
    public /*out*/ readonly networkInterfaceIds: pulumi.Output<string[]>;
    public readonly policy: pulumi.Output<string>;
    public /*out*/ readonly prefixListId: pulumi.Output<string>;
    public readonly privateDnsEnabled: pulumi.Output<boolean | undefined>;
    public readonly routeTableIds: pulumi.Output<string[]>;
    public readonly securityGroupIds: pulumi.Output<string[]>;
    public readonly serviceName: pulumi.Output<string>;
    public /*out*/ readonly state: pulumi.Output<string>;
    public readonly subnetIds: pulumi.Output<string[]>;
    public readonly vpcEndpointType: pulumi.Output<string | undefined>;
    public readonly vpcId: pulumi.Output<string>;

    /**
     * Create a VpcEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpcEndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpcEndpointArgs | VpcEndpointState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: VpcEndpointState = argsOrState as VpcEndpointState | undefined;
            inputs["autoAccept"] = state ? state.autoAccept : undefined;
            inputs["cidrBlocks"] = state ? state.cidrBlocks : undefined;
            inputs["dnsEntries"] = state ? state.dnsEntries : undefined;
            inputs["networkInterfaceIds"] = state ? state.networkInterfaceIds : undefined;
            inputs["policy"] = state ? state.policy : undefined;
            inputs["prefixListId"] = state ? state.prefixListId : undefined;
            inputs["privateDnsEnabled"] = state ? state.privateDnsEnabled : undefined;
            inputs["routeTableIds"] = state ? state.routeTableIds : undefined;
            inputs["securityGroupIds"] = state ? state.securityGroupIds : undefined;
            inputs["serviceName"] = state ? state.serviceName : undefined;
            inputs["state"] = state ? state.state : undefined;
            inputs["subnetIds"] = state ? state.subnetIds : undefined;
            inputs["vpcEndpointType"] = state ? state.vpcEndpointType : undefined;
            inputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as VpcEndpointArgs | undefined;
            if (!args || args.serviceName === undefined) {
                throw new Error("Missing required property 'serviceName'");
            }
            if (!args || args.vpcId === undefined) {
                throw new Error("Missing required property 'vpcId'");
            }
            inputs["autoAccept"] = args ? args.autoAccept : undefined;
            inputs["policy"] = args ? args.policy : undefined;
            inputs["privateDnsEnabled"] = args ? args.privateDnsEnabled : undefined;
            inputs["routeTableIds"] = args ? args.routeTableIds : undefined;
            inputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            inputs["serviceName"] = args ? args.serviceName : undefined;
            inputs["subnetIds"] = args ? args.subnetIds : undefined;
            inputs["vpcEndpointType"] = args ? args.vpcEndpointType : undefined;
            inputs["vpcId"] = args ? args.vpcId : undefined;
            inputs["cidrBlocks"] = undefined /*out*/;
            inputs["dnsEntries"] = undefined /*out*/;
            inputs["networkInterfaceIds"] = undefined /*out*/;
            inputs["prefixListId"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
        }
        super("aws:ec2/vpcEndpoint:VpcEndpoint", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VpcEndpoint resources.
 */
export interface VpcEndpointState {
    readonly autoAccept?: pulumi.Input<boolean>;
    readonly cidrBlocks?: pulumi.Input<pulumi.Input<string>[]>;
    readonly dnsEntries?: pulumi.Input<pulumi.Input<{ dnsName?: pulumi.Input<string>, hostedZoneId?: pulumi.Input<string> }>[]>;
    readonly networkInterfaceIds?: pulumi.Input<pulumi.Input<string>[]>;
    readonly policy?: pulumi.Input<string>;
    readonly prefixListId?: pulumi.Input<string>;
    readonly privateDnsEnabled?: pulumi.Input<boolean>;
    readonly routeTableIds?: pulumi.Input<pulumi.Input<string>[]>;
    readonly securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    readonly serviceName?: pulumi.Input<string>;
    readonly state?: pulumi.Input<string>;
    readonly subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    readonly vpcEndpointType?: pulumi.Input<string>;
    readonly vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VpcEndpoint resource.
 */
export interface VpcEndpointArgs {
    readonly autoAccept?: pulumi.Input<boolean>;
    readonly policy?: pulumi.Input<string>;
    readonly privateDnsEnabled?: pulumi.Input<boolean>;
    readonly routeTableIds?: pulumi.Input<pulumi.Input<string>[]>;
    readonly securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    readonly serviceName: pulumi.Input<string>;
    readonly subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    readonly vpcEndpointType?: pulumi.Input<string>;
    readonly vpcId: pulumi.Input<string>;
}
