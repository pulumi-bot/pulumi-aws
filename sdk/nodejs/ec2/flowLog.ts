// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class FlowLog extends pulumi.CustomResource {
    /**
     * Get an existing FlowLog resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FlowLogState, opts?: pulumi.CustomResourceOptions): FlowLog {
        return new FlowLog(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:ec2/flowLog:FlowLog';

    /**
     * Returns true if the given object is an instance of FlowLog.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FlowLog {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FlowLog.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly eniId!: pulumi.Output<string | undefined>;
    public readonly iamRoleArn!: pulumi.Output<string | undefined>;
    public readonly logDestination!: pulumi.Output<string>;
    public readonly logDestinationType!: pulumi.Output<string | undefined>;
    public readonly logFormat!: pulumi.Output<string>;
    /**
     * @deprecated use 'log_destination' argument instead
     */
    public readonly logGroupName!: pulumi.Output<string>;
    public readonly maxAggregationInterval!: pulumi.Output<number | undefined>;
    public readonly subnetId!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly trafficType!: pulumi.Output<string>;
    public readonly vpcId!: pulumi.Output<string | undefined>;

    /**
     * Create a FlowLog resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FlowLogArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FlowLogArgs | FlowLogState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as FlowLogState | undefined;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["eniId"] = state ? state.eniId : undefined;
            inputs["iamRoleArn"] = state ? state.iamRoleArn : undefined;
            inputs["logDestination"] = state ? state.logDestination : undefined;
            inputs["logDestinationType"] = state ? state.logDestinationType : undefined;
            inputs["logFormat"] = state ? state.logFormat : undefined;
            inputs["logGroupName"] = state ? state.logGroupName : undefined;
            inputs["maxAggregationInterval"] = state ? state.maxAggregationInterval : undefined;
            inputs["subnetId"] = state ? state.subnetId : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["trafficType"] = state ? state.trafficType : undefined;
            inputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as FlowLogArgs | undefined;
            if (!args || args.trafficType === undefined) {
                throw new Error("Missing required property 'trafficType'");
            }
            inputs["eniId"] = args ? args.eniId : undefined;
            inputs["iamRoleArn"] = args ? args.iamRoleArn : undefined;
            inputs["logDestination"] = args ? args.logDestination : undefined;
            inputs["logDestinationType"] = args ? args.logDestinationType : undefined;
            inputs["logFormat"] = args ? args.logFormat : undefined;
            inputs["logGroupName"] = args ? args.logGroupName : undefined;
            inputs["maxAggregationInterval"] = args ? args.maxAggregationInterval : undefined;
            inputs["subnetId"] = args ? args.subnetId : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["trafficType"] = args ? args.trafficType : undefined;
            inputs["vpcId"] = args ? args.vpcId : undefined;
            inputs["arn"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(FlowLog.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FlowLog resources.
 */
export interface FlowLogState {
    readonly arn?: pulumi.Input<string>;
    readonly eniId?: pulumi.Input<string>;
    readonly iamRoleArn?: pulumi.Input<string>;
    readonly logDestination?: pulumi.Input<string>;
    readonly logDestinationType?: pulumi.Input<string>;
    readonly logFormat?: pulumi.Input<string>;
    /**
     * @deprecated use 'log_destination' argument instead
     */
    readonly logGroupName?: pulumi.Input<string>;
    readonly maxAggregationInterval?: pulumi.Input<number>;
    readonly subnetId?: pulumi.Input<string>;
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly trafficType?: pulumi.Input<string>;
    readonly vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FlowLog resource.
 */
export interface FlowLogArgs {
    readonly eniId?: pulumi.Input<string>;
    readonly iamRoleArn?: pulumi.Input<string>;
    readonly logDestination?: pulumi.Input<string>;
    readonly logDestinationType?: pulumi.Input<string>;
    readonly logFormat?: pulumi.Input<string>;
    /**
     * @deprecated use 'log_destination' argument instead
     */
    readonly logGroupName?: pulumi.Input<string>;
    readonly maxAggregationInterval?: pulumi.Input<number>;
    readonly subnetId?: pulumi.Input<string>;
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly trafficType: pulumi.Input<string>;
    readonly vpcId?: pulumi.Input<string>;
}
