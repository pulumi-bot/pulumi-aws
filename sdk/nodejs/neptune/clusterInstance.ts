// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class ClusterInstance extends pulumi.CustomResource {
    /**
     * Get an existing ClusterInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterInstanceState, opts?: pulumi.CustomResourceOptions): ClusterInstance {
        return new ClusterInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:neptune/clusterInstance:ClusterInstance';

    /**
     * Returns true if the given object is an instance of ClusterInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ClusterInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClusterInstance.__pulumiType;
    }

    public /*out*/ readonly address!: pulumi.Output<string>;
    public readonly applyImmediately!: pulumi.Output<boolean>;
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly autoMinorVersionUpgrade!: pulumi.Output<boolean | undefined>;
    public readonly availabilityZone!: pulumi.Output<string>;
    public readonly clusterIdentifier!: pulumi.Output<string>;
    public /*out*/ readonly dbiResourceId!: pulumi.Output<string>;
    public /*out*/ readonly endpoint!: pulumi.Output<string>;
    public readonly engine!: pulumi.Output<string | undefined>;
    public readonly engineVersion!: pulumi.Output<string>;
    public readonly identifier!: pulumi.Output<string>;
    public readonly identifierPrefix!: pulumi.Output<string>;
    public readonly instanceClass!: pulumi.Output<string>;
    public /*out*/ readonly kmsKeyArn!: pulumi.Output<string>;
    public readonly neptuneParameterGroupName!: pulumi.Output<string | undefined>;
    public readonly neptuneSubnetGroupName!: pulumi.Output<string>;
    public readonly port!: pulumi.Output<number | undefined>;
    public readonly preferredBackupWindow!: pulumi.Output<string>;
    public readonly preferredMaintenanceWindow!: pulumi.Output<string>;
    public readonly promotionTier!: pulumi.Output<number | undefined>;
    public readonly publiclyAccessible!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly storageEncrypted!: pulumi.Output<boolean>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public /*out*/ readonly writer!: pulumi.Output<boolean>;

    /**
     * Create a ClusterInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterInstanceArgs | ClusterInstanceState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as ClusterInstanceState | undefined;
            inputs["address"] = state ? state.address : undefined;
            inputs["applyImmediately"] = state ? state.applyImmediately : undefined;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["autoMinorVersionUpgrade"] = state ? state.autoMinorVersionUpgrade : undefined;
            inputs["availabilityZone"] = state ? state.availabilityZone : undefined;
            inputs["clusterIdentifier"] = state ? state.clusterIdentifier : undefined;
            inputs["dbiResourceId"] = state ? state.dbiResourceId : undefined;
            inputs["endpoint"] = state ? state.endpoint : undefined;
            inputs["engine"] = state ? state.engine : undefined;
            inputs["engineVersion"] = state ? state.engineVersion : undefined;
            inputs["identifier"] = state ? state.identifier : undefined;
            inputs["identifierPrefix"] = state ? state.identifierPrefix : undefined;
            inputs["instanceClass"] = state ? state.instanceClass : undefined;
            inputs["kmsKeyArn"] = state ? state.kmsKeyArn : undefined;
            inputs["neptuneParameterGroupName"] = state ? state.neptuneParameterGroupName : undefined;
            inputs["neptuneSubnetGroupName"] = state ? state.neptuneSubnetGroupName : undefined;
            inputs["port"] = state ? state.port : undefined;
            inputs["preferredBackupWindow"] = state ? state.preferredBackupWindow : undefined;
            inputs["preferredMaintenanceWindow"] = state ? state.preferredMaintenanceWindow : undefined;
            inputs["promotionTier"] = state ? state.promotionTier : undefined;
            inputs["publiclyAccessible"] = state ? state.publiclyAccessible : undefined;
            inputs["storageEncrypted"] = state ? state.storageEncrypted : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["writer"] = state ? state.writer : undefined;
        } else {
            const args = argsOrState as ClusterInstanceArgs | undefined;
            if (!args || args.clusterIdentifier === undefined) {
                throw new Error("Missing required property 'clusterIdentifier'");
            }
            if (!args || args.instanceClass === undefined) {
                throw new Error("Missing required property 'instanceClass'");
            }
            inputs["applyImmediately"] = args ? args.applyImmediately : undefined;
            inputs["autoMinorVersionUpgrade"] = args ? args.autoMinorVersionUpgrade : undefined;
            inputs["availabilityZone"] = args ? args.availabilityZone : undefined;
            inputs["clusterIdentifier"] = args ? args.clusterIdentifier : undefined;
            inputs["engine"] = args ? args.engine : undefined;
            inputs["engineVersion"] = args ? args.engineVersion : undefined;
            inputs["identifier"] = args ? args.identifier : undefined;
            inputs["identifierPrefix"] = args ? args.identifierPrefix : undefined;
            inputs["instanceClass"] = args ? args.instanceClass : undefined;
            inputs["neptuneParameterGroupName"] = args ? args.neptuneParameterGroupName : undefined;
            inputs["neptuneSubnetGroupName"] = args ? args.neptuneSubnetGroupName : undefined;
            inputs["port"] = args ? args.port : undefined;
            inputs["preferredBackupWindow"] = args ? args.preferredBackupWindow : undefined;
            inputs["preferredMaintenanceWindow"] = args ? args.preferredMaintenanceWindow : undefined;
            inputs["promotionTier"] = args ? args.promotionTier : undefined;
            inputs["publiclyAccessible"] = args ? args.publiclyAccessible : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["address"] = undefined /*out*/;
            inputs["arn"] = undefined /*out*/;
            inputs["dbiResourceId"] = undefined /*out*/;
            inputs["endpoint"] = undefined /*out*/;
            inputs["kmsKeyArn"] = undefined /*out*/;
            inputs["storageEncrypted"] = undefined /*out*/;
            inputs["writer"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(ClusterInstance.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ClusterInstance resources.
 */
export interface ClusterInstanceState {
    readonly address?: pulumi.Input<string>;
    readonly applyImmediately?: pulumi.Input<boolean>;
    readonly arn?: pulumi.Input<string>;
    readonly autoMinorVersionUpgrade?: pulumi.Input<boolean>;
    readonly availabilityZone?: pulumi.Input<string>;
    readonly clusterIdentifier?: pulumi.Input<string>;
    readonly dbiResourceId?: pulumi.Input<string>;
    readonly endpoint?: pulumi.Input<string>;
    readonly engine?: pulumi.Input<string>;
    readonly engineVersion?: pulumi.Input<string>;
    readonly identifier?: pulumi.Input<string>;
    readonly identifierPrefix?: pulumi.Input<string>;
    readonly instanceClass?: pulumi.Input<string>;
    readonly kmsKeyArn?: pulumi.Input<string>;
    readonly neptuneParameterGroupName?: pulumi.Input<string>;
    readonly neptuneSubnetGroupName?: pulumi.Input<string>;
    readonly port?: pulumi.Input<number>;
    readonly preferredBackupWindow?: pulumi.Input<string>;
    readonly preferredMaintenanceWindow?: pulumi.Input<string>;
    readonly promotionTier?: pulumi.Input<number>;
    readonly publiclyAccessible?: pulumi.Input<boolean>;
    readonly storageEncrypted?: pulumi.Input<boolean>;
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly writer?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a ClusterInstance resource.
 */
export interface ClusterInstanceArgs {
    readonly applyImmediately?: pulumi.Input<boolean>;
    readonly autoMinorVersionUpgrade?: pulumi.Input<boolean>;
    readonly availabilityZone?: pulumi.Input<string>;
    readonly clusterIdentifier: pulumi.Input<string>;
    readonly engine?: pulumi.Input<string>;
    readonly engineVersion?: pulumi.Input<string>;
    readonly identifier?: pulumi.Input<string>;
    readonly identifierPrefix?: pulumi.Input<string>;
    readonly instanceClass: pulumi.Input<string>;
    readonly neptuneParameterGroupName?: pulumi.Input<string>;
    readonly neptuneSubnetGroupName?: pulumi.Input<string>;
    readonly port?: pulumi.Input<number>;
    readonly preferredBackupWindow?: pulumi.Input<string>;
    readonly preferredMaintenanceWindow?: pulumi.Input<string>;
    readonly promotionTier?: pulumi.Input<number>;
    readonly publiclyAccessible?: pulumi.Input<boolean>;
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
