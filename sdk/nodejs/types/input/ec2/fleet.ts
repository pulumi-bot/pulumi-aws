// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputApi from "../../../types/input";
import * as outputApi from "../../../types/output";
import * as utilities from "../../../utilities";

export interface FleetLaunchTemplateConfig {
    /**
     * Nested argument containing EC2 Launch Template to use. Defined below.
     */
    launchTemplateSpecification: pulumi.Input<inputApi.ec2.FleetLaunchTemplateConfigLaunchTemplateSpecification>;
    /**
     * Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
     */
    overrides?: pulumi.Input<pulumi.Input<inputApi.ec2.FleetLaunchTemplateConfigOverride>[]>;
}

export interface FleetLaunchTemplateConfigLaunchTemplateSpecification {
    /**
     * ID of the launch template.
     */
    launchTemplateId?: pulumi.Input<string>;
    /**
     * Name of the launch template.
     */
    launchTemplateName?: pulumi.Input<string>;
    /**
     * Version number of the launch template.
     */
    version: pulumi.Input<string>;
}

export interface FleetLaunchTemplateConfigOverride {
    /**
     * Availability Zone in which to launch the instances.
     */
    availabilityZone?: pulumi.Input<string>;
    /**
     * Instance type.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * Maximum price per unit hour that you are willing to pay for a Spot Instance.
     */
    maxPrice?: pulumi.Input<string>;
    /**
     * Priority for the launch template override. If `onDemandOptions` `allocationStrategy` is set to `prioritized`, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
     */
    priority?: pulumi.Input<number>;
    /**
     * ID of the subnet in which to launch the instances.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Number of units provided by the specified instance type.
     */
    weightedCapacity?: pulumi.Input<number>;
}

export interface FleetOnDemandOptions {
    /**
     * How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
     */
    allocationStrategy?: pulumi.Input<string>;
}

export interface FleetSpotOptions {
    /**
     * How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
     */
    allocationStrategy?: pulumi.Input<string>;
    /**
     * Behavior when a Spot Instance is interrupted. Valid values: `hibernate`, `stop`, `terminate`. Default: `terminate`.
     */
    instanceInterruptionBehavior?: pulumi.Input<string>;
    /**
     * Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot `allocationStrategy` is set to `lowestPrice`. Default: `1`.
     */
    instancePoolsToUseCount?: pulumi.Input<number>;
}

export interface FleetTargetCapacitySpecification {
    /**
     * Default target capacity type. Valid values: `on-demand`, `spot`.
     */
    defaultTargetCapacityType: pulumi.Input<string>;
    /**
     * The number of On-Demand units to request.
     */
    onDemandTargetCapacity?: pulumi.Input<number>;
    /**
     * The number of Spot units to request.
     */
    spotTargetCapacity?: pulumi.Input<number>;
    /**
     * The number of units to request, filled using `defaultTargetCapacityType`.
     */
    totalTargetCapacity: pulumi.Input<number>;
}
