// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputApi from "../../../types/input";
import * as outputApi from "../../../types/output";
import * as utilities from "../../../utilities";

import {PolicyDocument} from "../../../iam/documents";
import {CannedAcl} from "../../../s3/cannedAcl";
import {RoutingRule} from "../../../s3/routingRules";

export interface BucketCorsRule {
    /**
     * Specifies which headers are allowed.
     */
    allowedHeaders?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies which methods are allowed. Can be `GET`, `PUT`, `POST`, `DELETE` or `HEAD`.
     */
    allowedMethods: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies which origins are allowed.
     */
    allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies expose header in the response.
     */
    exposeHeaders?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies time in seconds that browser can cache the response for a preflight request.
     */
    maxAgeSeconds?: pulumi.Input<number>;
}

export interface BucketLifecycleRule {
    /**
     * Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
     */
    abortIncompleteMultipartUploadDays?: pulumi.Input<number>;
    /**
     * Boolean which indicates if this criteria is enabled.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Specifies a period in the object's expire (documented below).
     */
    expiration?: pulumi.Input<inputApi.s3.BucketLifecycleRuleExpiration>;
    /**
     * Unique identifier for the rule.
     */
    id?: pulumi.Input<string>;
    /**
     * Specifies when noncurrent object versions expire (documented below).
     */
    noncurrentVersionExpiration?: pulumi.Input<inputApi.s3.BucketLifecycleRuleNoncurrentVersionExpiration>;
    /**
     * Specifies when noncurrent object versions transitions (documented below).
     */
    noncurrentVersionTransitions?: pulumi.Input<pulumi.Input<inputApi.s3.BucketLifecycleRuleNoncurrentVersionTransition>[]>;
    /**
     * Object keyname prefix that identifies subset of objects to which the rule applies.
     */
    prefix?: pulumi.Input<string>;
    /**
     * A mapping of tags that identifies subset of objects to which the rule applies.
     * The rule applies only to objects having all the tags in its tagset.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Specifies a period in the object's transitions (documented below).
     */
    transitions?: pulumi.Input<pulumi.Input<inputApi.s3.BucketLifecycleRuleTransition>[]>;
}

export interface BucketLifecycleRuleExpiration {
    /**
     * Specifies the date after which you want the corresponding action to take effect.
     */
    date?: pulumi.Input<string>;
    /**
     * The number of days that you want to specify for the default retention period.
     */
    days?: pulumi.Input<number>;
    /**
     * On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Amazon S3 to delete expired object delete markers.
     */
    expiredObjectDeleteMarker?: pulumi.Input<boolean>;
}

export interface BucketLifecycleRuleNoncurrentVersionExpiration {
    /**
     * The number of days that you want to specify for the default retention period.
     */
    days?: pulumi.Input<number>;
}

export interface BucketLifecycleRuleNoncurrentVersionTransition {
    /**
     * The number of days that you want to specify for the default retention period.
     */
    days?: pulumi.Input<number>;
    /**
     * The class of storage used to store the object. Can be `STANDARD`, `REDUCED_REDUNDANCY`, `STANDARD_IA`, `ONEZONE_IA`, `INTELLIGENT_TIERING`, `GLACIER`, or `DEEP_ARCHIVE`.
     */
    storageClass: pulumi.Input<string>;
}

export interface BucketLifecycleRuleTransition {
    /**
     * Specifies the date after which you want the corresponding action to take effect.
     */
    date?: pulumi.Input<string>;
    /**
     * The number of days that you want to specify for the default retention period.
     */
    days?: pulumi.Input<number>;
    /**
     * The class of storage used to store the object. Can be `STANDARD`, `REDUCED_REDUNDANCY`, `STANDARD_IA`, `ONEZONE_IA`, `INTELLIGENT_TIERING`, `GLACIER`, or `DEEP_ARCHIVE`.
     */
    storageClass: pulumi.Input<string>;
}

export interface BucketLogging {
    /**
     * The name of the bucket that will receive the log objects.
     */
    targetBucket: pulumi.Input<string>;
    /**
     * To specify a key prefix for log objects.
     */
    targetPrefix?: pulumi.Input<string>;
}

export interface BucketObjectLockConfiguration {
    /**
     * Indicates whether this bucket has an Object Lock configuration enabled. Valid value is `Enabled`.
     */
    objectLockEnabled: pulumi.Input<string>;
    /**
     * The Object Lock rule in place for this bucket.
     */
    rule?: pulumi.Input<inputApi.s3.BucketObjectLockConfigurationRule>;
}

export interface BucketObjectLockConfigurationRule {
    /**
     * The default retention period that you want to apply to new objects placed in this bucket.
     */
    defaultRetention: pulumi.Input<inputApi.s3.BucketObjectLockConfigurationRuleDefaultRetention>;
}

export interface BucketObjectLockConfigurationRuleDefaultRetention {
    /**
     * The number of days that you want to specify for the default retention period.
     */
    days?: pulumi.Input<number>;
    /**
     * The default Object Lock retention mode you want to apply to new objects placed in this bucket. Valid values are `GOVERNANCE` and `COMPLIANCE`.
     */
    mode: pulumi.Input<string>;
    /**
     * The number of years that you want to specify for the default retention period.
     */
    years?: pulumi.Input<number>;
}

export interface BucketReplicationConfiguration {
    /**
     * The ARN of the IAM role for Amazon S3 to assume when replicating the objects.
     */
    role: pulumi.Input<string>;
    /**
     * Specifies the rules managing the replication (documented below).
     */
    rules: pulumi.Input<pulumi.Input<inputApi.s3.BucketReplicationConfigurationRule>[]>;
}

export interface BucketReplicationConfigurationRule {
    /**
     * Specifies the destination for the rule (documented below).
     */
    destination: pulumi.Input<inputApi.s3.BucketReplicationConfigurationRuleDestination>;
    /**
     * Filter that identifies subset of objects to which the replication rule applies (documented below).
     */
    filter?: pulumi.Input<inputApi.s3.BucketReplicationConfigurationRuleFilter>;
    /**
     * Unique identifier for the rule.
     */
    id?: pulumi.Input<string>;
    /**
     * Object keyname prefix that identifies subset of objects to which the rule applies.
     */
    prefix?: pulumi.Input<string>;
    /**
     * The priority associated with the rule.
     */
    priority?: pulumi.Input<number>;
    /**
     * Specifies special object selection criteria (documented below).
     */
    sourceSelectionCriteria?: pulumi.Input<inputApi.s3.BucketReplicationConfigurationRuleSourceSelectionCriteria>;
    /**
     * The status of the rule. Either `Enabled` or `Disabled`. The rule is ignored if status is not Enabled.
     */
    status: pulumi.Input<string>;
}

export interface BucketReplicationConfigurationRuleDestination {
    /**
     * Specifies the overrides to use for object owners on replication. Must be used in conjunction with `accountId` owner override configuration.
     */
    accessControlTranslation?: pulumi.Input<inputApi.s3.BucketReplicationConfigurationRuleDestinationAccessControlTranslation>;
    /**
     * The Account ID to use for overriding the object owner on replication. Must be used in conjunction with `accessControlTranslation` override configuration.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The ARN of the S3 bucket where you want Amazon S3 to store replicas of the object identified by the rule.
     */
    bucket: pulumi.Input<string>;
    /**
     * Destination KMS encryption key ARN for SSE-KMS replication. Must be used in conjunction with
     * `sseKmsEncryptedObjects` source selection criteria.
     */
    replicaKmsKeyId?: pulumi.Input<string>;
    /**
     * The class of storage used to store the object. Can be `STANDARD`, `REDUCED_REDUNDANCY`, `STANDARD_IA`, `ONEZONE_IA`, `INTELLIGENT_TIERING`, `GLACIER`, or `DEEP_ARCHIVE`.
     */
    storageClass?: pulumi.Input<string>;
}

export interface BucketReplicationConfigurationRuleDestinationAccessControlTranslation {
    /**
     * The override value for the owner on replicated objects. Currently only `Destination` is supported.
     */
    owner: pulumi.Input<string>;
}

export interface BucketReplicationConfigurationRuleFilter {
    /**
     * Object keyname prefix that identifies subset of objects to which the rule applies.
     */
    prefix?: pulumi.Input<string>;
    /**
     * A mapping of tags that identifies subset of objects to which the rule applies.
     * The rule applies only to objects having all the tags in its tagset.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
}

export interface BucketReplicationConfigurationRuleSourceSelectionCriteria {
    /**
     * Match SSE-KMS encrypted objects (documented below). If specified, `replicaKmsKeyId`
     * in `destination` must be specified as well.
     */
    sseKmsEncryptedObjects?: pulumi.Input<inputApi.s3.BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjects>;
}

export interface BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjects {
    /**
     * Boolean which indicates if this criteria is enabled.
     */
    enabled: pulumi.Input<boolean>;
}

export interface BucketServerSideEncryptionConfiguration {
    /**
     * The Object Lock rule in place for this bucket.
     */
    rule: pulumi.Input<inputApi.s3.BucketServerSideEncryptionConfigurationRule>;
}

export interface BucketServerSideEncryptionConfigurationRule {
    /**
     * A single object for setting server-side encryption by default. (documented below)
     */
    applyServerSideEncryptionByDefault: pulumi.Input<inputApi.s3.BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault>;
}

export interface BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault {
    /**
     * The AWS KMS master key ID used for the SSE-KMS encryption. This can only be used when you set the value of `sseAlgorithm` as `aws:kms`. The default `aws/s3` AWS KMS master key is used if this element is absent while the `sseAlgorithm` is `aws:kms`.
     */
    kmsMasterKeyId?: pulumi.Input<string>;
    /**
     * The server-side encryption algorithm to use. Valid values are `AES256` and `aws:kms`
     */
    sseAlgorithm: pulumi.Input<string>;
}

export interface BucketVersioning {
    /**
     * Boolean which indicates if this criteria is enabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Enable MFA delete for either `Change the versioning state of your bucket` or `Permanently delete an object version`. Default is `false`.
     */
    mfaDelete?: pulumi.Input<boolean>;
}

export interface BucketWebsite {
    /**
     * An absolute path to the document to return in case of a 4XX error.
     */
    errorDocument?: pulumi.Input<string>;
    /**
     * Amazon S3 returns this index document when requests are made to the root domain or any of the subfolders.
     */
    indexDocument?: pulumi.Input<string>;
    /**
     * A hostname to redirect all website requests for this bucket to. Hostname can optionally be prefixed with a protocol (`http://` or `https://`) to use when redirecting requests. The default is the protocol that is used in the original request.
     */
    redirectAllRequestsTo?: pulumi.Input<string>;
    /**
     * A json array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)
     * describing redirect behavior and when redirects are applied.
     */
    routingRules?: pulumi.Input<string | RoutingRule[]>;
}
