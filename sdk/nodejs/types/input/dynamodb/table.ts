// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputApi from "../../../types/input";
import * as outputApi from "../../../types/output";
import * as utilities from "../../../utilities";

export interface TableAttribute {
    /**
     * The name of the index
     */
    name: pulumi.Input<string>;
    /**
     * Attribute type, which must be a scalar type: `S`, `N`, or `B` for (S)tring, (N)umber or (B)inary data
     */
    type: pulumi.Input<string>;
}

export interface TableGlobalSecondaryIndex {
    /**
     * The name of the hash key in the index; must be
     * defined as an attribute in the resource.
     */
    hashKey: pulumi.Input<string>;
    /**
     * The name of the index
     */
    name: pulumi.Input<string>;
    /**
     * Only required with `INCLUDE` as a
     * projection type; a list of attributes to project into the index. These
     * do not need to be defined as attributes on the table.
     */
    nonKeyAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * One of `ALL`, `INCLUDE` or `KEYS_ONLY`
     * where `ALL` projects every attribute into the index, `KEYS_ONLY`
     * projects just the hash and range key into the index, and `INCLUDE`
     * projects only the keys specified in the _non_key_attributes_
     * parameter.
     */
    projectionType: pulumi.Input<string>;
    /**
     * The name of the range key; must be defined
     */
    rangeKey?: pulumi.Input<string>;
    /**
     * The number of read units for this index. Must be set if billingMode is set to PROVISIONED.
     */
    readCapacity?: pulumi.Input<number>;
    /**
     * The number of write units for this index. Must be set if billingMode is set to PROVISIONED.
     */
    writeCapacity?: pulumi.Input<number>;
}

export interface TableLocalSecondaryIndex {
    /**
     * The name of the index
     */
    name: pulumi.Input<string>;
    /**
     * Only required with `INCLUDE` as a
     * projection type; a list of attributes to project into the index. These
     * do not need to be defined as attributes on the table.
     */
    nonKeyAttributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * One of `ALL`, `INCLUDE` or `KEYS_ONLY`
     * where `ALL` projects every attribute into the index, `KEYS_ONLY`
     * projects just the hash and range key into the index, and `INCLUDE`
     * projects only the keys specified in the _non_key_attributes_
     * parameter.
     */
    projectionType: pulumi.Input<string>;
    /**
     * The name of the range key; must be defined
     */
    rangeKey: pulumi.Input<string>;
}

export interface TablePointInTimeRecovery {
    /**
     * Whether to enable point-in-time recovery - note that it can take up to 10 minutes to enable for new tables. If the `pointInTimeRecovery` block is not provided then this defaults to `false`.
     */
    enabled: pulumi.Input<boolean>;
}

export interface TableServerSideEncryption {
    /**
     * Whether to enable point-in-time recovery - note that it can take up to 10 minutes to enable for new tables. If the `pointInTimeRecovery` block is not provided then this defaults to `false`.
     */
    enabled: pulumi.Input<boolean>;
}

export interface TableTtl {
    /**
     * The name of the table attribute to store the TTL timestamp in.
     */
    attributeName: pulumi.Input<string>;
    /**
     * Whether to enable point-in-time recovery - note that it can take up to 10 minutes to enable for new tables. If the `pointInTimeRecovery` block is not provided then this defaults to `false`.
     */
    enabled?: pulumi.Input<boolean>;
}
