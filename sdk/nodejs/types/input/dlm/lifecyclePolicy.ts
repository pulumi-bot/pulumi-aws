// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputApi from "../../../types/input";
import * as outputApi from "../../../types/output";
import * as utilities from "../../../utilities";

export interface LifecyclePolicyPolicyDetails {
    /**
     * A list of resource types that should be targeted by the lifecycle policy. `VOLUME` is currently the only allowed value.
     */
    resourceTypes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * See the `schedule` configuration block.
     */
    schedules: pulumi.Input<pulumi.Input<inputApi.dlm.LifecyclePolicyPolicyDetailsSchedule>[]>;
    /**
     * A mapping of tag keys and their values. Any resources that match the `resourceTypes` and are tagged with _any_ of these tags will be targeted.
     */
    targetTags: pulumi.Input<{[key: string]: any}>;
}

export interface LifecyclePolicyPolicyDetailsSchedule {
    /**
     * Copy all user-defined tags on a source volume to snapshots of the volume created by this policy.
     */
    copyTags?: pulumi.Input<boolean>;
    /**
     * See the `createRule` block. Max of 1 per schedule.
     */
    createRule: pulumi.Input<inputApi.dlm.LifecyclePolicyPolicyDetailsScheduleCreateRule>;
    /**
     * A name for the schedule.
     */
    name: pulumi.Input<string>;
    /**
     * See the `retainRule` block. Max of 1 per schedule.
     */
    retainRule: pulumi.Input<inputApi.dlm.LifecyclePolicyPolicyDetailsScheduleRetainRule>;
    /**
     * A mapping of tag keys and their values. DLM lifecycle policies will already tag the snapshot with the tags on the volume. This configuration adds extra tags on top of these.
     */
    tagsToAdd?: pulumi.Input<{[key: string]: any}>;
}

export interface LifecyclePolicyPolicyDetailsScheduleCreateRule {
    /**
     * How often this lifecycle policy should be evaluated. `2`,`3`,`4`,`6`,`8`,`12` or `24` are valid values.
     */
    interval: pulumi.Input<number>;
    /**
     * The unit for how often the lifecycle policy should be evaluated. `HOURS` is currently the only allowed value and also the default value.
     */
    intervalUnit?: pulumi.Input<string>;
    /**
     * A list of times in 24 hour clock format that sets when the lifecycle policy should be evaluated. Max of 1.
     */
    times?: pulumi.Input<string>;
}

export interface LifecyclePolicyPolicyDetailsScheduleRetainRule {
    /**
     * How many snapshots to keep. Must be an integer between 1 and 1000.
     */
    count: pulumi.Input<number>;
}
