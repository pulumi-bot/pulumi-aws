// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputApi from "../../../types/input";
import * as outputApi from "../../../types/output";
import * as utilities from "../../../utilities";

import {ARN} from "../../../index";

export interface AnalyticsApplicationCloudwatchLoggingOptions {
    /**
     * The ARN of the Kinesis Analytics Application.
     */
    id?: pulumi.Input<string>;
    logStreamArn: pulumi.Input<string>;
    roleArn: pulumi.Input<string>;
}

export interface AnalyticsApplicationInputs {
    /**
     * The ARN of the Kinesis Analytics Application.
     */
    id?: pulumi.Input<string>;
    kinesisFirehose?: pulumi.Input<inputApi.kinesis.AnalyticsApplicationInputsKinesisFirehose>;
    kinesisStream?: pulumi.Input<inputApi.kinesis.AnalyticsApplicationInputsKinesisStream>;
    namePrefix: pulumi.Input<string>;
    parallelism?: pulumi.Input<inputApi.kinesis.AnalyticsApplicationInputsParallelism>;
    processingConfiguration?: pulumi.Input<inputApi.kinesis.AnalyticsApplicationInputsProcessingConfiguration>;
    schema: pulumi.Input<inputApi.kinesis.AnalyticsApplicationInputsSchema>;
    startingPositionConfigurations?: pulumi.Input<pulumi.Input<inputApi.kinesis.AnalyticsApplicationInputsStartingPositionConfiguration>[]>;
    streamNames?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AnalyticsApplicationInputsKinesisFirehose {
    resourceArn: pulumi.Input<string>;
    roleArn: pulumi.Input<string>;
}

export interface AnalyticsApplicationInputsKinesisStream {
    resourceArn: pulumi.Input<string>;
    roleArn: pulumi.Input<string>;
}

export interface AnalyticsApplicationInputsParallelism {
    count: pulumi.Input<number>;
}

export interface AnalyticsApplicationInputsProcessingConfiguration {
    lambda: pulumi.Input<inputApi.kinesis.AnalyticsApplicationInputsProcessingConfigurationLambda>;
}

export interface AnalyticsApplicationInputsProcessingConfigurationLambda {
    resourceArn: pulumi.Input<string>;
    roleArn: pulumi.Input<string>;
}

export interface AnalyticsApplicationInputsSchema {
    recordColumns: pulumi.Input<pulumi.Input<inputApi.kinesis.AnalyticsApplicationInputsSchemaRecordColumn>[]>;
    recordEncoding?: pulumi.Input<string>;
    recordFormat: pulumi.Input<inputApi.kinesis.AnalyticsApplicationInputsSchemaRecordFormat>;
}

export interface AnalyticsApplicationInputsSchemaRecordColumn {
    mapping?: pulumi.Input<string>;
    /**
     * Name of the Kinesis Analytics Application.
     */
    name: pulumi.Input<string>;
    sqlType: pulumi.Input<string>;
}

export interface AnalyticsApplicationInputsSchemaRecordFormat {
    mappingParameters?: pulumi.Input<inputApi.kinesis.AnalyticsApplicationInputsSchemaRecordFormatMappingParameters>;
    recordFormatType?: pulumi.Input<string>;
}

export interface AnalyticsApplicationInputsSchemaRecordFormatMappingParameters {
    csv?: pulumi.Input<inputApi.kinesis.AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv>;
    json?: pulumi.Input<inputApi.kinesis.AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson>;
}

export interface AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv {
    recordColumnDelimiter: pulumi.Input<string>;
    recordRowDelimiter: pulumi.Input<string>;
}

export interface AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson {
    recordRowPath: pulumi.Input<string>;
}

export interface AnalyticsApplicationInputsStartingPositionConfiguration {
    startingPosition?: pulumi.Input<string>;
}

export interface AnalyticsApplicationOutput {
    /**
     * The ARN of the Kinesis Analytics Application.
     */
    id?: pulumi.Input<string>;
    kinesisFirehose?: pulumi.Input<inputApi.kinesis.AnalyticsApplicationOutputKinesisFirehose>;
    kinesisStream?: pulumi.Input<inputApi.kinesis.AnalyticsApplicationOutputKinesisStream>;
    lambda?: pulumi.Input<inputApi.kinesis.AnalyticsApplicationOutputLambda>;
    /**
     * Name of the Kinesis Analytics Application.
     */
    name: pulumi.Input<string>;
    schema: pulumi.Input<inputApi.kinesis.AnalyticsApplicationOutputSchema>;
}

export interface AnalyticsApplicationOutputKinesisFirehose {
    resourceArn: pulumi.Input<string>;
    roleArn: pulumi.Input<string>;
}

export interface AnalyticsApplicationOutputKinesisStream {
    resourceArn: pulumi.Input<string>;
    roleArn: pulumi.Input<string>;
}

export interface AnalyticsApplicationOutputLambda {
    resourceArn: pulumi.Input<string>;
    roleArn: pulumi.Input<string>;
}

export interface AnalyticsApplicationOutputSchema {
    recordFormatType?: pulumi.Input<string>;
}

export interface AnalyticsApplicationReferenceDataSources {
    /**
     * The ARN of the Kinesis Analytics Application.
     */
    id?: pulumi.Input<string>;
    s3: pulumi.Input<inputApi.kinesis.AnalyticsApplicationReferenceDataSourcesS3>;
    schema: pulumi.Input<inputApi.kinesis.AnalyticsApplicationReferenceDataSourcesSchema>;
    tableName: pulumi.Input<string>;
}

export interface AnalyticsApplicationReferenceDataSourcesS3 {
    bucketArn: pulumi.Input<string>;
    fileKey: pulumi.Input<string>;
    roleArn: pulumi.Input<string>;
}

export interface AnalyticsApplicationReferenceDataSourcesSchema {
    recordColumns: pulumi.Input<pulumi.Input<inputApi.kinesis.AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn>[]>;
    recordEncoding?: pulumi.Input<string>;
    recordFormat: pulumi.Input<inputApi.kinesis.AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat>;
}

export interface AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn {
    mapping?: pulumi.Input<string>;
    /**
     * Name of the Kinesis Analytics Application.
     */
    name: pulumi.Input<string>;
    sqlType: pulumi.Input<string>;
}

export interface AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat {
    mappingParameters?: pulumi.Input<inputApi.kinesis.AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters>;
    recordFormatType?: pulumi.Input<string>;
}

export interface AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters {
    csv?: pulumi.Input<inputApi.kinesis.AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv>;
    json?: pulumi.Input<inputApi.kinesis.AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson>;
}

export interface AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv {
    recordColumnDelimiter: pulumi.Input<string>;
    recordRowDelimiter: pulumi.Input<string>;
}

export interface AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson {
    recordRowPath: pulumi.Input<string>;
}
