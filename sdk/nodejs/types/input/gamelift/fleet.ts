// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputApi from "../../../types/input";
import * as outputApi from "../../../types/output";
import * as utilities from "../../../utilities";

export interface FleetEc2InboundPermission {
    /**
     * Starting value for a range of allowed port numbers.
     */
    fromPort: pulumi.Input<number>;
    /**
     * Range of allowed IP addresses expressed in CIDR notation. e.g. `000.000.000.000/[subnet mask]` or `0.0.0.0/[subnet mask]`.
     */
    ipRange: pulumi.Input<string>;
    /**
     * Network communication protocol used by the fleet. e.g. `TCP` or `UDP`
     */
    protocol: pulumi.Input<string>;
    /**
     * Ending value for a range of allowed port numbers. Port numbers are end-inclusive. This value must be higher than `fromPort`.
     */
    toPort: pulumi.Input<number>;
}

export interface FleetResourceCreationLimitPolicy {
    /**
     * Maximum number of game sessions that an individual can create during the policy period.
     */
    newGameSessionsPerCreator?: pulumi.Input<number>;
    /**
     * Time span used in evaluating the resource creation limit policy.
     */
    policyPeriodInMinutes?: pulumi.Input<number>;
}

export interface FleetRuntimeConfiguration {
    /**
     * Maximum amount of time (in seconds) that a game session can remain in status `ACTIVATING`.
     */
    gameSessionActivationTimeoutSeconds?: pulumi.Input<number>;
    /**
     * Maximum number of game sessions with status `ACTIVATING` to allow on an instance simultaneously. 
     */
    maxConcurrentGameSessionActivations?: pulumi.Input<number>;
    /**
     * Collection of server process configurations that describe which server processes to run on each instance in a fleet. See below.
     */
    serverProcesses?: pulumi.Input<pulumi.Input<inputApi.gamelift.FleetRuntimeConfigurationServerProcess>[]>;
}

export interface FleetRuntimeConfigurationServerProcess {
    /**
     * Number of server processes using this configuration to run concurrently on an instance.
     */
    concurrentExecutions: pulumi.Input<number>;
    /**
     * Location of the server executable in a game build. All game builds are installed on instances at the root : for Windows instances `C:\game`, and for Linux instances `/local/game`.
     */
    launchPath: pulumi.Input<string>;
    /**
     * Optional list of parameters to pass to the server executable on launch.
     */
    parameters?: pulumi.Input<string>;
}
