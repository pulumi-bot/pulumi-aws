// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

import {RoutingRule} from "../s3";

export interface GetAmiBlockDeviceMapping {
    deviceName: string;
    ebs: {[key: string]: string};
    noDevice: string;
    virtualName: string;
}

export interface GetAmiFilter {
    name: string;
    values: string[];
}

export interface GetAmiIdsFilter {
    name: string;
    values: string[];
}

export interface GetAmiProductCode {
    productCodeId: string;
    productCodeType: string;
}

export interface GetAutoscalingGroupsFilter {
    name: string;
    values: string[];
}

export interface GetAvailabilityZoneFilter {
    name: string;
    values: string[];
}

export interface GetAvailabilityZonesFilter {
    name: string;
    values: string[];
}

export interface GetElasticIpFilter {
    name: string;
    values: string[];
}

export interface GetPrefixListFilter {
    name: string;
    values: string[];
}

export interface GetRegionsFilter {
    name: string;
    values: string[];
}

export interface ProviderAssumeRole {
    durationSeconds?: number;
    externalId?: string;
    policy?: string;
    policyArns?: string[];
    roleArn?: string;
    sessionName?: string;
    tags?: {[key: string]: string};
    transitiveTagKeys?: string[];
}

export interface ProviderEndpoint {
    accessanalyzer?: string;
    acm?: string;
    acmpca?: string;
    amplify?: string;
    apigateway?: string;
    applicationautoscaling?: string;
    applicationinsights?: string;
    appmesh?: string;
    appstream?: string;
    appsync?: string;
    athena?: string;
    autoscaling?: string;
    autoscalingplans?: string;
    backup?: string;
    batch?: string;
    budgets?: string;
    cloud9?: string;
    cloudformation?: string;
    cloudfront?: string;
    cloudhsm?: string;
    cloudsearch?: string;
    cloudtrail?: string;
    cloudwatch?: string;
    cloudwatchevents?: string;
    cloudwatchlogs?: string;
    codeartifact?: string;
    codebuild?: string;
    codecommit?: string;
    codedeploy?: string;
    codepipeline?: string;
    cognitoidentity?: string;
    cognitoidp?: string;
    configservice?: string;
    cur?: string;
    dataexchange?: string;
    datapipeline?: string;
    datasync?: string;
    dax?: string;
    devicefarm?: string;
    directconnect?: string;
    dlm?: string;
    dms?: string;
    docdb?: string;
    ds?: string;
    dynamodb?: string;
    ec2?: string;
    ecr?: string;
    ecs?: string;
    efs?: string;
    eks?: string;
    elasticache?: string;
    elasticbeanstalk?: string;
    elastictranscoder?: string;
    elb?: string;
    emr?: string;
    es?: string;
    firehose?: string;
    fms?: string;
    forecast?: string;
    fsx?: string;
    gamelift?: string;
    glacier?: string;
    globalaccelerator?: string;
    glue?: string;
    greengrass?: string;
    guardduty?: string;
    iam?: string;
    imagebuilder?: string;
    inspector?: string;
    iot?: string;
    iotanalytics?: string;
    iotevents?: string;
    kafka?: string;
    kinesis?: string;
    kinesisanalytics?: string;
    kinesisanalyticsv2?: string;
    kinesisvideo?: string;
    kms?: string;
    lakeformation?: string;
    lambda?: string;
    lexmodels?: string;
    licensemanager?: string;
    lightsail?: string;
    macie?: string;
    managedblockchain?: string;
    marketplacecatalog?: string;
    mediaconnect?: string;
    mediaconvert?: string;
    medialive?: string;
    mediapackage?: string;
    mediastore?: string;
    mediastoredata?: string;
    mq?: string;
    neptune?: string;
    networkmanager?: string;
    opsworks?: string;
    organizations?: string;
    outposts?: string;
    personalize?: string;
    pinpoint?: string;
    pricing?: string;
    qldb?: string;
    quicksight?: string;
    ram?: string;
    rds?: string;
    redshift?: string;
    resourcegroups?: string;
    resourcegroupstaggingapi?: string;
    route53?: string;
    route53domains?: string;
    route53resolver?: string;
    s3?: string;
    s3control?: string;
    sagemaker?: string;
    sdb?: string;
    secretsmanager?: string;
    securityhub?: string;
    serverlessrepo?: string;
    servicecatalog?: string;
    servicediscovery?: string;
    servicequotas?: string;
    ses?: string;
    shield?: string;
    sns?: string;
    sqs?: string;
    ssm?: string;
    stepfunctions?: string;
    storagegateway?: string;
    sts?: string;
    swf?: string;
    synthetics?: string;
    transfer?: string;
    waf?: string;
    wafregional?: string;
    wafv2?: string;
    worklink?: string;
    workmail?: string;
    workspaces?: string;
    xray?: string;
}

export interface ProviderIgnoreTags {
    keyPrefixes?: string[];
    keys?: string[];
}
export namespace acm {
    export interface CertificateDomainValidationOption {
        domainName: string;
        resourceRecordName: string;
        resourceRecordType: string;
        resourceRecordValue: string;
    }

    export interface CertificateOptions {
        certificateTransparencyLoggingPreference?: string;
    }
}

export namespace acmpca {
    export interface CertificateAuthorityCertificateAuthorityConfiguration {
        keyAlgorithm: string;
        signingAlgorithm: string;
        subject: outputs.acmpca.CertificateAuthorityCertificateAuthorityConfigurationSubject;
    }

    export interface CertificateAuthorityCertificateAuthorityConfigurationSubject {
        commonName?: string;
        country?: string;
        distinguishedNameQualifier?: string;
        generationQualifier?: string;
        givenName?: string;
        initials?: string;
        locality?: string;
        organization?: string;
        organizationalUnit?: string;
        pseudonym?: string;
        state?: string;
        surname?: string;
        title?: string;
    }

    export interface CertificateAuthorityRevocationConfiguration {
        crlConfiguration?: outputs.acmpca.CertificateAuthorityRevocationConfigurationCrlConfiguration;
    }

    export interface CertificateAuthorityRevocationConfigurationCrlConfiguration {
        customCname?: string;
        enabled?: boolean;
        expirationInDays: number;
        s3BucketName?: string;
    }

    export interface GetCertificateAuthorityRevocationConfiguration {
        crlConfigurations: outputs.acmpca.GetCertificateAuthorityRevocationConfigurationCrlConfiguration[];
    }

    export interface GetCertificateAuthorityRevocationConfigurationCrlConfiguration {
        customCname: string;
        enabled: boolean;
        expirationInDays: number;
        s3BucketName: string;
    }
}

export namespace alb {
    export interface GetListenerDefaultAction {
        authenticateCognitos: outputs.alb.GetListenerDefaultActionAuthenticateCognito[];
        authenticateOidcs: outputs.alb.GetListenerDefaultActionAuthenticateOidc[];
        fixedResponses: outputs.alb.GetListenerDefaultActionFixedResponse[];
        order: number;
        redirects: outputs.alb.GetListenerDefaultActionRedirect[];
        targetGroupArn: string;
        type: string;
    }

    export interface GetListenerDefaultActionAuthenticateCognito {
        authenticationRequestExtraParams: {[key: string]: string};
        onUnauthenticatedRequest: string;
        scope: string;
        sessionCookieName: string;
        sessionTimeout: number;
        userPoolArn: string;
        userPoolClientId: string;
        userPoolDomain: string;
    }

    export interface GetListenerDefaultActionAuthenticateOidc {
        authenticationRequestExtraParams: {[key: string]: string};
        authorizationEndpoint: string;
        clientId: string;
        clientSecret: string;
        issuer: string;
        onUnauthenticatedRequest: string;
        scope: string;
        sessionCookieName: string;
        sessionTimeout: number;
        tokenEndpoint: string;
        userInfoEndpoint: string;
    }

    export interface GetListenerDefaultActionFixedResponse {
        contentType: string;
        messageBody: string;
        statusCode: string;
    }

    export interface GetListenerDefaultActionRedirect {
        host: string;
        path: string;
        port: string;
        protocol: string;
        query: string;
        statusCode: string;
    }

    export interface GetLoadBalancerAccessLogs {
        bucket: string;
        enabled: boolean;
        prefix: string;
    }

    export interface GetLoadBalancerSubnetMapping {
        allocationId?: string;
        subnetId: string;
    }

    export interface GetTargetGroupHealthCheck {
        enabled: boolean;
        healthyThreshold: number;
        interval: number;
        matcher: string;
        path: string;
        port: string;
        protocol: string;
        timeout: number;
        unhealthyThreshold: number;
    }

    export interface GetTargetGroupStickiness {
        cookieDuration: number;
        enabled: boolean;
        type: string;
    }

    export interface ListenerDefaultAction {
        authenticateCognito?: outputs.alb.ListenerDefaultActionAuthenticateCognito;
        authenticateOidc?: outputs.alb.ListenerDefaultActionAuthenticateOidc;
        fixedResponse?: outputs.alb.ListenerDefaultActionFixedResponse;
        forward?: outputs.alb.ListenerDefaultActionForward;
        order: number;
        redirect?: outputs.alb.ListenerDefaultActionRedirect;
        targetGroupArn?: string;
        type: string;
    }

    export interface ListenerDefaultActionAuthenticateCognito {
        authenticationRequestExtraParams?: {[key: string]: string};
        onUnauthenticatedRequest: string;
        scope: string;
        sessionCookieName: string;
        sessionTimeout: number;
        userPoolArn: string;
        userPoolClientId: string;
        userPoolDomain: string;
    }

    export interface ListenerDefaultActionAuthenticateOidc {
        authenticationRequestExtraParams?: {[key: string]: string};
        authorizationEndpoint: string;
        clientId: string;
        clientSecret: string;
        issuer: string;
        onUnauthenticatedRequest: string;
        scope: string;
        sessionCookieName: string;
        sessionTimeout: number;
        tokenEndpoint: string;
        userInfoEndpoint: string;
    }

    export interface ListenerDefaultActionFixedResponse {
        contentType: string;
        messageBody?: string;
        statusCode: string;
    }

    export interface ListenerDefaultActionForward {
        stickiness?: outputs.alb.ListenerDefaultActionForwardStickiness;
        targetGroups: outputs.alb.ListenerDefaultActionForwardTargetGroup[];
    }

    export interface ListenerDefaultActionForwardStickiness {
        duration: number;
        enabled?: boolean;
    }

    export interface ListenerDefaultActionForwardTargetGroup {
        arn: string;
        weight?: number;
    }

    export interface ListenerDefaultActionRedirect {
        host?: string;
        path?: string;
        port?: string;
        protocol?: string;
        query?: string;
        statusCode: string;
    }

    export interface ListenerRuleAction {
        authenticateCognito?: outputs.alb.ListenerRuleActionAuthenticateCognito;
        authenticateOidc?: outputs.alb.ListenerRuleActionAuthenticateOidc;
        fixedResponse?: outputs.alb.ListenerRuleActionFixedResponse;
        forward?: outputs.alb.ListenerRuleActionForward;
        order: number;
        redirect?: outputs.alb.ListenerRuleActionRedirect;
        targetGroupArn?: string;
        type: string;
    }

    export interface ListenerRuleActionAuthenticateCognito {
        authenticationRequestExtraParams?: {[key: string]: string};
        onUnauthenticatedRequest: string;
        scope: string;
        sessionCookieName: string;
        sessionTimeout: number;
        userPoolArn: string;
        userPoolClientId: string;
        userPoolDomain: string;
    }

    export interface ListenerRuleActionAuthenticateOidc {
        authenticationRequestExtraParams?: {[key: string]: string};
        authorizationEndpoint: string;
        clientId: string;
        clientSecret: string;
        issuer: string;
        onUnauthenticatedRequest: string;
        scope: string;
        sessionCookieName: string;
        sessionTimeout: number;
        tokenEndpoint: string;
        userInfoEndpoint: string;
    }

    export interface ListenerRuleActionFixedResponse {
        contentType: string;
        messageBody?: string;
        statusCode: string;
    }

    export interface ListenerRuleActionForward {
        stickiness?: outputs.alb.ListenerRuleActionForwardStickiness;
        targetGroups: outputs.alb.ListenerRuleActionForwardTargetGroup[];
    }

    export interface ListenerRuleActionForwardStickiness {
        duration: number;
        enabled?: boolean;
    }

    export interface ListenerRuleActionForwardTargetGroup {
        arn: string;
        weight?: number;
    }

    export interface ListenerRuleActionRedirect {
        host?: string;
        path?: string;
        port?: string;
        protocol?: string;
        query?: string;
        statusCode: string;
    }

    export interface ListenerRuleCondition {
        hostHeader?: outputs.alb.ListenerRuleConditionHostHeader;
        httpHeader?: outputs.alb.ListenerRuleConditionHttpHeader;
        httpRequestMethod?: outputs.alb.ListenerRuleConditionHttpRequestMethod;
        pathPattern?: outputs.alb.ListenerRuleConditionPathPattern;
        queryStrings?: outputs.alb.ListenerRuleConditionQueryString[];
        sourceIp?: outputs.alb.ListenerRuleConditionSourceIp;
    }

    export interface ListenerRuleConditionHostHeader {
        values: string[];
    }

    export interface ListenerRuleConditionHttpHeader {
        httpHeaderName: string;
        values: string[];
    }

    export interface ListenerRuleConditionHttpRequestMethod {
        values: string[];
    }

    export interface ListenerRuleConditionPathPattern {
        values: string[];
    }

    export interface ListenerRuleConditionQueryString {
        key?: string;
        value: string;
    }

    export interface ListenerRuleConditionSourceIp {
        values: string[];
    }

    export interface LoadBalancerAccessLogs {
        bucket: string;
        enabled?: boolean;
        prefix?: string;
    }

    export interface LoadBalancerSubnetMapping {
        allocationId?: string;
        privateIpv4Address?: string;
        subnetId: string;
    }

    export interface TargetGroupHealthCheck {
        enabled?: boolean;
        healthyThreshold?: number;
        interval?: number;
        matcher: string;
        path: string;
        port?: string;
        protocol?: string;
        timeout: number;
        unhealthyThreshold?: number;
    }

    export interface TargetGroupStickiness {
        cookieDuration?: number;
        enabled?: boolean;
        type: string;
    }
}

export namespace apigateway {
    export interface AccountThrottleSettings {
        burstLimit: number;
        rateLimit: number;
    }

    export interface DocumentationPartLocation {
        method?: string;
        name?: string;
        path?: string;
        statusCode?: string;
        type: string;
    }

    export interface DomainNameEndpointConfiguration {
        types: string;
    }

    export interface GetRestApiEndpointConfiguration {
        types: string[];
        vpcEndpointIds: string[];
    }

    export interface MethodSettingsSettings {
        cacheDataEncrypted: boolean;
        cacheTtlInSeconds: number;
        cachingEnabled: boolean;
        dataTraceEnabled: boolean;
        loggingLevel: string;
        metricsEnabled: boolean;
        requireAuthorizationForCacheControl: boolean;
        throttlingBurstLimit?: number;
        throttlingRateLimit?: number;
        unauthorizedCacheControlHeaderStrategy: string;
    }

    export interface RestApiEndpointConfiguration {
        types: string;
        vpcEndpointIds?: string[];
    }

    export interface StageAccessLogSettings {
        destinationArn: string;
        format: string;
    }

    export interface UsagePlanApiStage {
        apiId: string;
        stage: string;
    }

    export interface UsagePlanQuotaSettings {
        limit: number;
        offset?: number;
        period: string;
    }

    export interface UsagePlanThrottleSettings {
        burstLimit?: number;
        rateLimit?: number;
    }
}

export namespace apigatewayv2 {
    export interface ApiCorsConfiguration {
        allowCredentials?: boolean;
        allowHeaders?: string[];
        allowMethods?: string[];
        allowOrigins?: string[];
        exposeHeaders?: string[];
        maxAge?: number;
    }

    export interface AuthorizerJwtConfiguration {
        audiences?: string[];
        issuer?: string;
    }

    export interface DomainNameDomainNameConfiguration {
        certificateArn: string;
        endpointType: string;
        hostedZoneId: string;
        securityPolicy: string;
        targetDomainName: string;
    }

    export interface IntegrationTlsConfig {
        serverNameToVerify?: string;
    }

    export interface StageAccessLogSettings {
        destinationArn: string;
        format: string;
    }

    export interface StageDefaultRouteSettings {
        dataTraceEnabled?: boolean;
        detailedMetricsEnabled?: boolean;
        loggingLevel: string;
        throttlingBurstLimit?: number;
        throttlingRateLimit?: number;
    }

    export interface StageRouteSetting {
        dataTraceEnabled?: boolean;
        detailedMetricsEnabled?: boolean;
        loggingLevel: string;
        routeKey: string;
        throttlingBurstLimit?: number;
        throttlingRateLimit?: number;
    }
}

export namespace appautoscaling {
    export interface PolicyStepScalingPolicyConfiguration {
        adjustmentType?: string;
        cooldown?: number;
        metricAggregationType?: string;
        minAdjustmentMagnitude?: number;
        stepAdjustments?: outputs.appautoscaling.PolicyStepScalingPolicyConfigurationStepAdjustment[];
    }

    export interface PolicyStepScalingPolicyConfigurationStepAdjustment {
        metricIntervalLowerBound?: string;
        metricIntervalUpperBound?: string;
        scalingAdjustment: number;
    }

    export interface PolicyTargetTrackingScalingPolicyConfiguration {
        customizedMetricSpecification?: outputs.appautoscaling.PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification;
        disableScaleIn?: boolean;
        predefinedMetricSpecification?: outputs.appautoscaling.PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification;
        scaleInCooldown?: number;
        scaleOutCooldown?: number;
        targetValue: number;
    }

    export interface PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecification {
        dimensions?: outputs.appautoscaling.PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimension[];
        metricName: string;
        namespace: string;
        statistic: string;
        unit?: string;
    }

    export interface PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationDimension {
        name: string;
        value: string;
    }

    export interface PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecification {
        predefinedMetricType: string;
        resourceLabel?: string;
    }

    export interface ScheduledActionScalableTargetAction {
        maxCapacity?: number;
        minCapacity?: number;
    }
}

export namespace applicationloadbalancing {
    export interface GetListenerDefaultAction {
        authenticateCognitos: outputs.applicationloadbalancing.GetListenerDefaultActionAuthenticateCognito[];
        authenticateOidcs: outputs.applicationloadbalancing.GetListenerDefaultActionAuthenticateOidc[];
        fixedResponses: outputs.applicationloadbalancing.GetListenerDefaultActionFixedResponse[];
        order: number;
        redirects: outputs.applicationloadbalancing.GetListenerDefaultActionRedirect[];
        targetGroupArn: string;
        type: string;
    }

    export interface GetListenerDefaultActionAuthenticateCognito {
        authenticationRequestExtraParams: {[key: string]: string};
        onUnauthenticatedRequest: string;
        scope: string;
        sessionCookieName: string;
        sessionTimeout: number;
        userPoolArn: string;
        userPoolClientId: string;
        userPoolDomain: string;
    }

    export interface GetListenerDefaultActionAuthenticateOidc {
        authenticationRequestExtraParams: {[key: string]: string};
        authorizationEndpoint: string;
        clientId: string;
        clientSecret: string;
        issuer: string;
        onUnauthenticatedRequest: string;
        scope: string;
        sessionCookieName: string;
        sessionTimeout: number;
        tokenEndpoint: string;
        userInfoEndpoint: string;
    }

    export interface GetListenerDefaultActionFixedResponse {
        contentType: string;
        messageBody: string;
        statusCode: string;
    }

    export interface GetListenerDefaultActionRedirect {
        host: string;
        path: string;
        port: string;
        protocol: string;
        query: string;
        statusCode: string;
    }

    export interface GetLoadBalancerAccessLogs {
        bucket: string;
        enabled: boolean;
        prefix: string;
    }

    export interface GetLoadBalancerSubnetMapping {
        allocationId?: string;
        subnetId: string;
    }

    export interface GetTargetGroupHealthCheck {
        enabled: boolean;
        healthyThreshold: number;
        interval: number;
        matcher: string;
        path: string;
        port: string;
        protocol: string;
        timeout: number;
        unhealthyThreshold: number;
    }

    export interface GetTargetGroupStickiness {
        cookieDuration: number;
        enabled: boolean;
        type: string;
    }

    export interface ListenerDefaultAction {
        authenticateCognito?: outputs.applicationloadbalancing.ListenerDefaultActionAuthenticateCognito;
        authenticateOidc?: outputs.applicationloadbalancing.ListenerDefaultActionAuthenticateOidc;
        fixedResponse?: outputs.applicationloadbalancing.ListenerDefaultActionFixedResponse;
        forward?: outputs.applicationloadbalancing.ListenerDefaultActionForward;
        order: number;
        redirect?: outputs.applicationloadbalancing.ListenerDefaultActionRedirect;
        targetGroupArn?: string;
        type: string;
    }

    export interface ListenerDefaultActionAuthenticateCognito {
        authenticationRequestExtraParams?: {[key: string]: string};
        onUnauthenticatedRequest: string;
        scope: string;
        sessionCookieName: string;
        sessionTimeout: number;
        userPoolArn: string;
        userPoolClientId: string;
        userPoolDomain: string;
    }

    export interface ListenerDefaultActionAuthenticateOidc {
        authenticationRequestExtraParams?: {[key: string]: string};
        authorizationEndpoint: string;
        clientId: string;
        clientSecret: string;
        issuer: string;
        onUnauthenticatedRequest: string;
        scope: string;
        sessionCookieName: string;
        sessionTimeout: number;
        tokenEndpoint: string;
        userInfoEndpoint: string;
    }

    export interface ListenerDefaultActionFixedResponse {
        contentType: string;
        messageBody?: string;
        statusCode: string;
    }

    export interface ListenerDefaultActionForward {
        stickiness?: outputs.applicationloadbalancing.ListenerDefaultActionForwardStickiness;
        targetGroups: outputs.applicationloadbalancing.ListenerDefaultActionForwardTargetGroup[];
    }

    export interface ListenerDefaultActionForwardStickiness {
        duration: number;
        enabled?: boolean;
    }

    export interface ListenerDefaultActionForwardTargetGroup {
        arn: string;
        weight?: number;
    }

    export interface ListenerDefaultActionRedirect {
        host?: string;
        path?: string;
        port?: string;
        protocol?: string;
        query?: string;
        statusCode: string;
    }

    export interface ListenerRuleAction {
        authenticateCognito?: outputs.applicationloadbalancing.ListenerRuleActionAuthenticateCognito;
        authenticateOidc?: outputs.applicationloadbalancing.ListenerRuleActionAuthenticateOidc;
        fixedResponse?: outputs.applicationloadbalancing.ListenerRuleActionFixedResponse;
        forward?: outputs.applicationloadbalancing.ListenerRuleActionForward;
        order: number;
        redirect?: outputs.applicationloadbalancing.ListenerRuleActionRedirect;
        targetGroupArn?: string;
        type: string;
    }

    export interface ListenerRuleActionAuthenticateCognito {
        authenticationRequestExtraParams?: {[key: string]: string};
        onUnauthenticatedRequest: string;
        scope: string;
        sessionCookieName: string;
        sessionTimeout: number;
        userPoolArn: string;
        userPoolClientId: string;
        userPoolDomain: string;
    }

    export interface ListenerRuleActionAuthenticateOidc {
        authenticationRequestExtraParams?: {[key: string]: string};
        authorizationEndpoint: string;
        clientId: string;
        clientSecret: string;
        issuer: string;
        onUnauthenticatedRequest: string;
        scope: string;
        sessionCookieName: string;
        sessionTimeout: number;
        tokenEndpoint: string;
        userInfoEndpoint: string;
    }

    export interface ListenerRuleActionFixedResponse {
        contentType: string;
        messageBody?: string;
        statusCode: string;
    }

    export interface ListenerRuleActionForward {
        stickiness?: outputs.applicationloadbalancing.ListenerRuleActionForwardStickiness;
        targetGroups: outputs.applicationloadbalancing.ListenerRuleActionForwardTargetGroup[];
    }

    export interface ListenerRuleActionForwardStickiness {
        duration: number;
        enabled?: boolean;
    }

    export interface ListenerRuleActionForwardTargetGroup {
        arn: string;
        weight?: number;
    }

    export interface ListenerRuleActionRedirect {
        host?: string;
        path?: string;
        port?: string;
        protocol?: string;
        query?: string;
        statusCode: string;
    }

    export interface ListenerRuleCondition {
        hostHeader?: outputs.applicationloadbalancing.ListenerRuleConditionHostHeader;
        httpHeader?: outputs.applicationloadbalancing.ListenerRuleConditionHttpHeader;
        httpRequestMethod?: outputs.applicationloadbalancing.ListenerRuleConditionHttpRequestMethod;
        pathPattern?: outputs.applicationloadbalancing.ListenerRuleConditionPathPattern;
        queryStrings?: outputs.applicationloadbalancing.ListenerRuleConditionQueryString[];
        sourceIp?: outputs.applicationloadbalancing.ListenerRuleConditionSourceIp;
    }

    export interface ListenerRuleConditionHostHeader {
        values: string[];
    }

    export interface ListenerRuleConditionHttpHeader {
        httpHeaderName: string;
        values: string[];
    }

    export interface ListenerRuleConditionHttpRequestMethod {
        values: string[];
    }

    export interface ListenerRuleConditionPathPattern {
        values: string[];
    }

    export interface ListenerRuleConditionQueryString {
        key?: string;
        value: string;
    }

    export interface ListenerRuleConditionSourceIp {
        values: string[];
    }

    export interface LoadBalancerAccessLogs {
        bucket: string;
        enabled?: boolean;
        prefix?: string;
    }

    export interface LoadBalancerSubnetMapping {
        allocationId?: string;
        privateIpv4Address?: string;
        subnetId: string;
    }

    export interface TargetGroupHealthCheck {
        enabled?: boolean;
        healthyThreshold?: number;
        interval?: number;
        matcher: string;
        path: string;
        port?: string;
        protocol?: string;
        timeout: number;
        unhealthyThreshold?: number;
    }

    export interface TargetGroupStickiness {
        cookieDuration?: number;
        enabled?: boolean;
        type: string;
    }
}

export namespace appmesh {
    export interface MeshSpec {
        egressFilter?: outputs.appmesh.MeshSpecEgressFilter;
    }

    export interface MeshSpecEgressFilter {
        type?: string;
    }

    export interface RouteSpec {
        httpRoute?: outputs.appmesh.RouteSpecHttpRoute;
        priority?: number;
        tcpRoute?: outputs.appmesh.RouteSpecTcpRoute;
    }

    export interface RouteSpecHttpRoute {
        action: outputs.appmesh.RouteSpecHttpRouteAction;
        match: outputs.appmesh.RouteSpecHttpRouteMatch;
    }

    export interface RouteSpecHttpRouteAction {
        weightedTargets: outputs.appmesh.RouteSpecHttpRouteActionWeightedTarget[];
    }

    export interface RouteSpecHttpRouteActionWeightedTarget {
        virtualNode: string;
        weight: number;
    }

    export interface RouteSpecHttpRouteMatch {
        headers?: outputs.appmesh.RouteSpecHttpRouteMatchHeader[];
        method?: string;
        prefix: string;
        scheme?: string;
    }

    export interface RouteSpecHttpRouteMatchHeader {
        invert?: boolean;
        match?: outputs.appmesh.RouteSpecHttpRouteMatchHeaderMatch;
        name: string;
    }

    export interface RouteSpecHttpRouteMatchHeaderMatch {
        exact?: string;
        prefix?: string;
        range?: outputs.appmesh.RouteSpecHttpRouteMatchHeaderMatchRange;
        regex?: string;
        suffix?: string;
    }

    export interface RouteSpecHttpRouteMatchHeaderMatchRange {
        end: number;
        start: number;
    }

    export interface RouteSpecTcpRoute {
        action: outputs.appmesh.RouteSpecTcpRouteAction;
    }

    export interface RouteSpecTcpRouteAction {
        weightedTargets: outputs.appmesh.RouteSpecTcpRouteActionWeightedTarget[];
    }

    export interface RouteSpecTcpRouteActionWeightedTarget {
        virtualNode: string;
        weight: number;
    }

    export interface VirtualNodeSpec {
        backends?: outputs.appmesh.VirtualNodeSpecBackend[];
        listener?: outputs.appmesh.VirtualNodeSpecListener;
        logging?: outputs.appmesh.VirtualNodeSpecLogging;
        serviceDiscovery?: outputs.appmesh.VirtualNodeSpecServiceDiscovery;
    }

    export interface VirtualNodeSpecBackend {
        virtualService?: outputs.appmesh.VirtualNodeSpecBackendVirtualService;
    }

    export interface VirtualNodeSpecBackendVirtualService {
        virtualServiceName: string;
    }

    export interface VirtualNodeSpecListener {
        healthCheck?: outputs.appmesh.VirtualNodeSpecListenerHealthCheck;
        portMapping: outputs.appmesh.VirtualNodeSpecListenerPortMapping;
    }

    export interface VirtualNodeSpecListenerHealthCheck {
        healthyThreshold: number;
        intervalMillis: number;
        path?: string;
        port: number;
        protocol: string;
        timeoutMillis: number;
        unhealthyThreshold: number;
    }

    export interface VirtualNodeSpecListenerPortMapping {
        port: number;
        protocol: string;
    }

    export interface VirtualNodeSpecLogging {
        accessLog?: outputs.appmesh.VirtualNodeSpecLoggingAccessLog;
    }

    export interface VirtualNodeSpecLoggingAccessLog {
        file?: outputs.appmesh.VirtualNodeSpecLoggingAccessLogFile;
    }

    export interface VirtualNodeSpecLoggingAccessLogFile {
        path: string;
    }

    export interface VirtualNodeSpecServiceDiscovery {
        awsCloudMap?: outputs.appmesh.VirtualNodeSpecServiceDiscoveryAwsCloudMap;
        dns?: outputs.appmesh.VirtualNodeSpecServiceDiscoveryDns;
    }

    export interface VirtualNodeSpecServiceDiscoveryAwsCloudMap {
        attributes?: {[key: string]: string};
        namespaceName: string;
        serviceName: string;
    }

    export interface VirtualNodeSpecServiceDiscoveryDns {
        hostname: string;
    }

    export interface VirtualRouterSpec {
        listener: outputs.appmesh.VirtualRouterSpecListener;
    }

    export interface VirtualRouterSpecListener {
        portMapping: outputs.appmesh.VirtualRouterSpecListenerPortMapping;
    }

    export interface VirtualRouterSpecListenerPortMapping {
        port: number;
        protocol: string;
    }

    export interface VirtualServiceSpec {
        provider?: outputs.appmesh.VirtualServiceSpecProvider;
    }

    export interface VirtualServiceSpecProvider {
        virtualNode?: outputs.appmesh.VirtualServiceSpecProviderVirtualNode;
        virtualRouter?: outputs.appmesh.VirtualServiceSpecProviderVirtualRouter;
    }

    export interface VirtualServiceSpecProviderVirtualNode {
        virtualNodeName: string;
    }

    export interface VirtualServiceSpecProviderVirtualRouter {
        virtualRouterName: string;
    }
}

export namespace appsync {
    export interface DataSourceDynamodbConfig {
        region: string;
        tableName: string;
        useCallerCredentials?: boolean;
    }

    export interface DataSourceElasticsearchConfig {
        endpoint: string;
        region: string;
    }

    export interface DataSourceHttpConfig {
        endpoint: string;
    }

    export interface DataSourceLambdaConfig {
        functionArn: string;
    }

    export interface GraphQLApiAdditionalAuthenticationProvider {
        authenticationType: string;
        openidConnectConfig?: outputs.appsync.GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig;
        userPoolConfig?: outputs.appsync.GraphQLApiAdditionalAuthenticationProviderUserPoolConfig;
    }

    export interface GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig {
        authTtl?: number;
        clientId?: string;
        iatTtl?: number;
        issuer: string;
    }

    export interface GraphQLApiAdditionalAuthenticationProviderUserPoolConfig {
        appIdClientRegex?: string;
        awsRegion: string;
        userPoolId: string;
    }

    export interface GraphQLApiLogConfig {
        cloudwatchLogsRoleArn: string;
        excludeVerboseContent?: boolean;
        fieldLogLevel: string;
    }

    export interface GraphQLApiOpenidConnectConfig {
        authTtl?: number;
        clientId?: string;
        iatTtl?: number;
        issuer: string;
    }

    export interface GraphQLApiUserPoolConfig {
        appIdClientRegex?: string;
        awsRegion: string;
        defaultAction: string;
        userPoolId: string;
    }

    export interface ResolverCachingConfig {
        cachingKeys?: string[];
        ttl?: number;
    }

    export interface ResolverPipelineConfig {
        functions?: string[];
    }
}

export namespace athena {
    export interface DatabaseEncryptionConfiguration {
        encryptionOption: string;
        kmsKey?: string;
    }

    export interface WorkgroupConfiguration {
        bytesScannedCutoffPerQuery?: number;
        enforceWorkgroupConfiguration?: boolean;
        publishCloudwatchMetricsEnabled?: boolean;
        resultConfiguration?: outputs.athena.WorkgroupConfigurationResultConfiguration;
    }

    export interface WorkgroupConfigurationResultConfiguration {
        encryptionConfiguration?: outputs.athena.WorkgroupConfigurationResultConfigurationEncryptionConfiguration;
        outputLocation?: string;
    }

    export interface WorkgroupConfigurationResultConfigurationEncryptionConfiguration {
        encryptionOption?: string;
        kmsKeyArn?: string;
    }
}

export namespace autoscaling {
    export interface GroupInitialLifecycleHook {
        defaultResult: string;
        heartbeatTimeout?: number;
        lifecycleTransition: string;
        name: string;
        notificationMetadata?: string;
        notificationTargetArn?: string;
        roleArn?: string;
    }

    export interface GroupLaunchTemplate {
        id: string;
        name: string;
        version?: string;
    }

    export interface GroupMixedInstancesPolicy {
        instancesDistribution: outputs.autoscaling.GroupMixedInstancesPolicyInstancesDistribution;
        launchTemplate: outputs.autoscaling.GroupMixedInstancesPolicyLaunchTemplate;
    }

    export interface GroupMixedInstancesPolicyInstancesDistribution {
        onDemandAllocationStrategy: string;
        onDemandBaseCapacity: number;
        onDemandPercentageAboveBaseCapacity: number;
        spotAllocationStrategy: string;
        spotInstancePools: number;
        spotMaxPrice?: string;
    }

    export interface GroupMixedInstancesPolicyLaunchTemplate {
        launchTemplateSpecification: outputs.autoscaling.GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification;
        overrides?: outputs.autoscaling.GroupMixedInstancesPolicyLaunchTemplateOverride[];
    }

    export interface GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification {
        launchTemplateId: string;
        launchTemplateName: string;
        version?: string;
    }

    export interface GroupMixedInstancesPolicyLaunchTemplateOverride {
        instanceType?: string;
        weightedCapacity?: string;
    }

    export interface GroupTag {
        key: string;
        propagateAtLaunch: boolean;
        value: string;
    }

    export interface PolicyStepAdjustment {
        metricIntervalLowerBound?: string;
        metricIntervalUpperBound?: string;
        scalingAdjustment: number;
    }

    export interface PolicyTargetTrackingConfiguration {
        customizedMetricSpecification?: outputs.autoscaling.PolicyTargetTrackingConfigurationCustomizedMetricSpecification;
        disableScaleIn?: boolean;
        predefinedMetricSpecification?: outputs.autoscaling.PolicyTargetTrackingConfigurationPredefinedMetricSpecification;
        targetValue: number;
    }

    export interface PolicyTargetTrackingConfigurationCustomizedMetricSpecification {
        metricDimensions?: outputs.autoscaling.PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimension[];
        metricName: string;
        namespace: string;
        statistic: string;
        unit?: string;
    }

    export interface PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimension {
        name: string;
        value: string;
    }

    export interface PolicyTargetTrackingConfigurationPredefinedMetricSpecification {
        predefinedMetricType: string;
        resourceLabel?: string;
    }
}

export namespace backup {
    export interface PlanRule {
        completionWindow?: number;
        copyActions?: outputs.backup.PlanRuleCopyAction[];
        lifecycle?: outputs.backup.PlanRuleLifecycle;
        recoveryPointTags?: {[key: string]: string};
        ruleName: string;
        schedule?: string;
        startWindow?: number;
        targetVaultName: string;
    }

    export interface PlanRuleCopyAction {
        destinationVaultArn: string;
        lifecycle?: outputs.backup.PlanRuleCopyActionLifecycle;
    }

    export interface PlanRuleCopyActionLifecycle {
        coldStorageAfter?: number;
        deleteAfter?: number;
    }

    export interface PlanRuleLifecycle {
        coldStorageAfter?: number;
        deleteAfter?: number;
    }

    export interface SelectionSelectionTag {
        key: string;
        type: string;
        value: string;
    }
}

export namespace batch {
    export interface ComputeEnvironmentComputeResources {
        allocationStrategy?: string;
        bidPercentage?: number;
        desiredVcpus: number;
        ec2KeyPair?: string;
        imageId?: string;
        instanceRole: string;
        instanceTypes: string[];
        launchTemplate?: outputs.batch.ComputeEnvironmentComputeResourcesLaunchTemplate;
        maxVcpus: number;
        minVcpus: number;
        securityGroupIds: string[];
        spotIamFleetRole?: string;
        subnets: string[];
        tags?: {[key: string]: string};
        type: string;
    }

    export interface ComputeEnvironmentComputeResourcesLaunchTemplate {
        launchTemplateId?: string;
        launchTemplateName?: string;
        version?: string;
    }

    export interface GetJobQueueComputeEnvironmentOrder {
        computeEnvironment: string;
        order: number;
    }

    export interface JobDefinitionRetryStrategy {
        attempts?: number;
    }

    export interface JobDefinitionTimeout {
        attemptDurationSeconds?: number;
    }
}

export namespace budgets {
    export interface BudgetCostTypes {
        includeCredit?: boolean;
        includeDiscount?: boolean;
        includeOtherSubscription?: boolean;
        includeRecurring?: boolean;
        includeRefund?: boolean;
        includeSubscription?: boolean;
        includeSupport?: boolean;
        includeTax?: boolean;
        includeUpfront?: boolean;
        useAmortized?: boolean;
        useBlended?: boolean;
    }

    export interface BudgetNotification {
        comparisonOperator: string;
        notificationType: string;
        subscriberEmailAddresses?: string[];
        subscriberSnsTopicArns?: string[];
        threshold: number;
        thresholdType: string;
    }
}

export namespace cfg {
    export interface ConfigurationAggregatorAccountAggregationSource {
        accountIds: string[];
        allRegions?: boolean;
        regions?: string[];
    }

    export interface ConfigurationAggregatorOrganizationAggregationSource {
        allRegions?: boolean;
        regions?: string[];
        roleArn: string;
    }

    export interface DeliveryChannelSnapshotDeliveryProperties {
        deliveryFrequency?: string;
    }

    export interface RecorderRecordingGroup {
        allSupported?: boolean;
        includeGlobalResourceTypes?: boolean;
        resourceTypes?: string[];
    }

    export interface RuleScope {
        complianceResourceId?: string;
        complianceResourceTypes?: string[];
        tagKey?: string;
        tagValue?: string;
    }

    export interface RuleSource {
        owner: string;
        sourceDetails?: outputs.cfg.RuleSourceSourceDetail[];
        sourceIdentifier: string;
    }

    export interface RuleSourceSourceDetail {
        eventSource?: string;
        maximumExecutionFrequency?: string;
        messageType?: string;
    }
}

export namespace cloudfront {
    export interface DistributionCustomErrorResponse {
        errorCachingMinTtl?: number;
        errorCode: number;
        responseCode?: number;
        responsePagePath?: string;
    }

    export interface DistributionDefaultCacheBehavior {
        allowedMethods: string[];
        cachedMethods: string[];
        compress?: boolean;
        defaultTtl?: number;
        fieldLevelEncryptionId?: string;
        forwardedValues: outputs.cloudfront.DistributionDefaultCacheBehaviorForwardedValues;
        lambdaFunctionAssociations?: outputs.cloudfront.DistributionDefaultCacheBehaviorLambdaFunctionAssociation[];
        maxTtl?: number;
        minTtl?: number;
        smoothStreaming?: boolean;
        targetOriginId: string;
        trustedSigners?: string[];
        viewerProtocolPolicy: string;
    }

    export interface DistributionDefaultCacheBehaviorForwardedValues {
        cookies: outputs.cloudfront.DistributionDefaultCacheBehaviorForwardedValuesCookies;
        headers?: string[];
        queryString: boolean;
        queryStringCacheKeys?: string[];
    }

    export interface DistributionDefaultCacheBehaviorForwardedValuesCookies {
        forward: string;
        whitelistedNames?: string[];
    }

    export interface DistributionDefaultCacheBehaviorLambdaFunctionAssociation {
        eventType: string;
        includeBody?: boolean;
        lambdaArn: string;
    }

    export interface DistributionLoggingConfig {
        bucket: string;
        includeCookies?: boolean;
        prefix?: string;
    }

    export interface DistributionOrderedCacheBehavior {
        allowedMethods: string[];
        cachedMethods: string[];
        compress?: boolean;
        defaultTtl?: number;
        fieldLevelEncryptionId?: string;
        forwardedValues: outputs.cloudfront.DistributionOrderedCacheBehaviorForwardedValues;
        lambdaFunctionAssociations?: outputs.cloudfront.DistributionOrderedCacheBehaviorLambdaFunctionAssociation[];
        maxTtl?: number;
        minTtl?: number;
        pathPattern: string;
        smoothStreaming?: boolean;
        targetOriginId: string;
        trustedSigners?: string[];
        viewerProtocolPolicy: string;
    }

    export interface DistributionOrderedCacheBehaviorForwardedValues {
        cookies: outputs.cloudfront.DistributionOrderedCacheBehaviorForwardedValuesCookies;
        headers?: string[];
        queryString: boolean;
        queryStringCacheKeys?: string[];
    }

    export interface DistributionOrderedCacheBehaviorForwardedValuesCookies {
        forward: string;
        whitelistedNames?: string[];
    }

    export interface DistributionOrderedCacheBehaviorLambdaFunctionAssociation {
        eventType: string;
        includeBody?: boolean;
        lambdaArn: string;
    }

    export interface DistributionOrigin {
        customHeaders?: outputs.cloudfront.DistributionOriginCustomHeader[];
        customOriginConfig?: outputs.cloudfront.DistributionOriginCustomOriginConfig;
        domainName: string;
        originId: string;
        originPath?: string;
        s3OriginConfig?: outputs.cloudfront.DistributionOriginS3OriginConfig;
    }

    export interface DistributionOriginCustomHeader {
        name: string;
        value: string;
    }

    export interface DistributionOriginCustomOriginConfig {
        httpPort: number;
        httpsPort: number;
        originKeepaliveTimeout?: number;
        originProtocolPolicy: string;
        originReadTimeout?: number;
        originSslProtocols: string[];
    }

    export interface DistributionOriginGroup {
        failoverCriteria: outputs.cloudfront.DistributionOriginGroupFailoverCriteria;
        members: outputs.cloudfront.DistributionOriginGroupMember[];
        originId: string;
    }

    export interface DistributionOriginGroupFailoverCriteria {
        statusCodes: number[];
    }

    export interface DistributionOriginGroupMember {
        originId: string;
    }

    export interface DistributionOriginS3OriginConfig {
        originAccessIdentity: string;
    }

    export interface DistributionRestrictions {
        geoRestriction: outputs.cloudfront.DistributionRestrictionsGeoRestriction;
    }

    export interface DistributionRestrictionsGeoRestriction {
        locations?: string[];
        restrictionType: string;
    }

    export interface DistributionTrustedSigner {
        enabled: boolean;
        items: outputs.cloudfront.DistributionTrustedSignerItem[];
    }

    export interface DistributionTrustedSignerItem {
        awsAccountNumber: string;
        keyPairIds: string[];
    }

    export interface DistributionViewerCertificate {
        acmCertificateArn?: string;
        cloudfrontDefaultCertificate?: boolean;
        iamCertificateId?: string;
        minimumProtocolVersion?: string;
        sslSupportMethod?: string;
    }
}

export namespace cloudhsmv2 {
    export interface ClusterClusterCertificate {
        awsHardwareCertificate: string;
        clusterCertificate: string;
        clusterCsr: string;
        hsmCertificate: string;
        manufacturerHardwareCertificate: string;
    }

    export interface GetClusterClusterCertificates {
        awsHardwareCertificate: string;
        clusterCertificate: string;
        clusterCsr: string;
        hsmCertificate: string;
        manufacturerHardwareCertificate: string;
    }
}

export namespace cloudtrail {
    export interface TrailEventSelector {
        dataResources?: outputs.cloudtrail.TrailEventSelectorDataResource[];
        includeManagementEvents?: boolean;
        readWriteType?: string;
    }

    export interface TrailEventSelectorDataResource {
        type: string;
        values: string[];
    }
}

export namespace cloudwatch {
    export interface EventPermissionCondition {
        key: string;
        type: string;
        value: string;
    }

    export interface EventTargetBatchTarget {
        arraySize?: number;
        jobAttempts?: number;
        jobDefinition: string;
        jobName: string;
    }

    export interface EventTargetEcsTarget {
        group?: string;
        launchType?: string;
        networkConfiguration?: outputs.cloudwatch.EventTargetEcsTargetNetworkConfiguration;
        platformVersion?: string;
        taskCount?: number;
        taskDefinitionArn: string;
    }

    export interface EventTargetEcsTargetNetworkConfiguration {
        assignPublicIp?: boolean;
        securityGroups?: string[];
        subnets: string[];
    }

    export interface EventTargetInputTransformer {
        inputPaths?: {[key: string]: string};
        inputTemplate: string;
    }

    export interface EventTargetKinesisTarget {
        partitionKeyPath?: string;
    }

    export interface EventTargetRunCommandTarget {
        key: string;
        values: string[];
    }

    export interface EventTargetSqsTarget {
        messageGroupId?: string;
    }

    export interface LogMetricFilterMetricTransformation {
        defaultValue?: string;
        name: string;
        namespace: string;
        value: string;
    }

    export interface MetricAlarmMetricQuery {
        expression?: string;
        id: string;
        label?: string;
        metric?: outputs.cloudwatch.MetricAlarmMetricQueryMetric;
        returnData?: boolean;
    }

    export interface MetricAlarmMetricQueryMetric {
        dimensions?: {[key: string]: string};
        metricName: string;
        namespace?: string;
        period: number;
        stat: string;
        unit?: string;
    }
}

export namespace codebuild {
    export interface ProjectArtifacts {
        artifactIdentifier?: string;
        encryptionDisabled?: boolean;
        location?: string;
        name?: string;
        namespaceType?: string;
        overrideArtifactName?: boolean;
        packaging?: string;
        path?: string;
        type: string;
    }

    export interface ProjectCache {
        location?: string;
        modes?: string[];
        type?: string;
    }

    export interface ProjectEnvironment {
        certificate?: string;
        computeType: string;
        environmentVariables?: outputs.codebuild.ProjectEnvironmentEnvironmentVariable[];
        image: string;
        imagePullCredentialsType?: string;
        privilegedMode?: boolean;
        registryCredential?: outputs.codebuild.ProjectEnvironmentRegistryCredential;
        type: string;
    }

    export interface ProjectEnvironmentEnvironmentVariable {
        name: string;
        type?: string;
        value: string;
    }

    export interface ProjectEnvironmentRegistryCredential {
        credential: string;
        credentialProvider: string;
    }

    export interface ProjectLogsConfig {
        cloudwatchLogs?: outputs.codebuild.ProjectLogsConfigCloudwatchLogs;
        s3Logs?: outputs.codebuild.ProjectLogsConfigS3Logs;
    }

    export interface ProjectLogsConfigCloudwatchLogs {
        groupName?: string;
        status?: string;
        streamName?: string;
    }

    export interface ProjectLogsConfigS3Logs {
        encryptionDisabled?: boolean;
        location?: string;
        status?: string;
    }

    export interface ProjectSecondaryArtifact {
        artifactIdentifier: string;
        encryptionDisabled?: boolean;
        location?: string;
        name?: string;
        namespaceType?: string;
        overrideArtifactName?: boolean;
        packaging?: string;
        path?: string;
        type: string;
    }

    export interface ProjectSecondarySource {
        auths?: outputs.codebuild.ProjectSecondarySourceAuth[];
        buildspec?: string;
        gitCloneDepth?: number;
        gitSubmodulesConfig?: outputs.codebuild.ProjectSecondarySourceGitSubmodulesConfig;
        insecureSsl?: boolean;
        location?: string;
        reportBuildStatus?: boolean;
        sourceIdentifier: string;
        type: string;
    }

    export interface ProjectSecondarySourceAuth {
        resource?: string;
        type: string;
    }

    export interface ProjectSecondarySourceGitSubmodulesConfig {
        fetchSubmodules: boolean;
    }

    export interface ProjectSource {
        auths?: outputs.codebuild.ProjectSourceAuth[];
        buildspec?: string;
        gitCloneDepth?: number;
        gitSubmodulesConfig?: outputs.codebuild.ProjectSourceGitSubmodulesConfig;
        insecureSsl?: boolean;
        location?: string;
        reportBuildStatus?: boolean;
        type: string;
    }

    export interface ProjectSourceAuth {
        resource?: string;
        type: string;
    }

    export interface ProjectSourceGitSubmodulesConfig {
        fetchSubmodules: boolean;
    }

    export interface ProjectVpcConfig {
        securityGroupIds: string[];
        subnets: string[];
        vpcId: string;
    }

    export interface WebhookFilterGroup {
        filters?: outputs.codebuild.WebhookFilterGroupFilter[];
    }

    export interface WebhookFilterGroupFilter {
        excludeMatchedPattern?: boolean;
        pattern: string;
        type: string;
    }
}

export namespace codecommit {
    export interface TriggerTrigger {
        branches?: string[];
        customData?: string;
        destinationArn: string;
        events: string[];
        name: string;
    }
}

export namespace codedeploy {
    export interface DeploymentConfigMinimumHealthyHosts {
        type?: string;
        value?: number;
    }

    export interface DeploymentConfigTrafficRoutingConfig {
        timeBasedCanary?: outputs.codedeploy.DeploymentConfigTrafficRoutingConfigTimeBasedCanary;
        timeBasedLinear?: outputs.codedeploy.DeploymentConfigTrafficRoutingConfigTimeBasedLinear;
        type?: string;
    }

    export interface DeploymentConfigTrafficRoutingConfigTimeBasedCanary {
        interval?: number;
        percentage?: number;
    }

    export interface DeploymentConfigTrafficRoutingConfigTimeBasedLinear {
        interval?: number;
        percentage?: number;
    }

    export interface DeploymentGroupAlarmConfiguration {
        alarms?: string[];
        enabled?: boolean;
        ignorePollAlarmFailure?: boolean;
    }

    export interface DeploymentGroupAutoRollbackConfiguration {
        enabled?: boolean;
        events?: string[];
    }

    export interface DeploymentGroupBlueGreenDeploymentConfig {
        deploymentReadyOption?: outputs.codedeploy.DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOption;
        greenFleetProvisioningOption: outputs.codedeploy.DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOption;
        terminateBlueInstancesOnDeploymentSuccess?: outputs.codedeploy.DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccess;
    }

    export interface DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOption {
        actionOnTimeout?: string;
        waitTimeInMinutes?: number;
    }

    export interface DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOption {
        action?: string;
    }

    export interface DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccess {
        action?: string;
        terminationWaitTimeInMinutes?: number;
    }

    export interface DeploymentGroupDeploymentStyle {
        deploymentOption?: string;
        deploymentType?: string;
    }

    export interface DeploymentGroupEc2TagFilter {
        key?: string;
        type?: string;
        value?: string;
    }

    export interface DeploymentGroupEc2TagSet {
        ec2TagFilters?: outputs.codedeploy.DeploymentGroupEc2TagSetEc2TagFilter[];
    }

    export interface DeploymentGroupEc2TagSetEc2TagFilter {
        key?: string;
        type?: string;
        value?: string;
    }

    export interface DeploymentGroupEcsService {
        clusterName: string;
        serviceName: string;
    }

    export interface DeploymentGroupLoadBalancerInfo {
        elbInfos?: outputs.codedeploy.DeploymentGroupLoadBalancerInfoElbInfo[];
        targetGroupInfos?: outputs.codedeploy.DeploymentGroupLoadBalancerInfoTargetGroupInfo[];
        targetGroupPairInfo?: outputs.codedeploy.DeploymentGroupLoadBalancerInfoTargetGroupPairInfo;
    }

    export interface DeploymentGroupLoadBalancerInfoElbInfo {
        name?: string;
    }

    export interface DeploymentGroupLoadBalancerInfoTargetGroupInfo {
        name?: string;
    }

    export interface DeploymentGroupLoadBalancerInfoTargetGroupPairInfo {
        prodTrafficRoute: outputs.codedeploy.DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRoute;
        targetGroups: outputs.codedeploy.DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroup[];
        testTrafficRoute?: outputs.codedeploy.DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoute;
    }

    export interface DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRoute {
        listenerArns: string[];
    }

    export interface DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroup {
        name: string;
    }

    export interface DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoute {
        listenerArns: string[];
    }

    export interface DeploymentGroupOnPremisesInstanceTagFilter {
        key?: string;
        type?: string;
        value?: string;
    }

    export interface DeploymentGroupTriggerConfiguration {
        triggerEvents: string[];
        triggerName: string;
        triggerTargetArn: string;
    }
}

export namespace codepipeline {
    export interface PipelineArtifactStore {
        encryptionKey?: outputs.codepipeline.PipelineArtifactStoreEncryptionKey;
        location: string;
        region: string;
        type: string;
    }

    export interface PipelineArtifactStoreEncryptionKey {
        id: string;
        type: string;
    }

    export interface PipelineStage {
        actions: outputs.codepipeline.PipelineStageAction[];
        name: string;
    }

    export interface PipelineStageAction {
        category: string;
        configuration?: {[key: string]: string};
        inputArtifacts?: string[];
        name: string;
        namespace?: string;
        outputArtifacts?: string[];
        owner: string;
        provider: string;
        region: string;
        roleArn?: string;
        runOrder: number;
        version: string;
    }

    export interface WebhookAuthenticationConfiguration {
        allowedIpRange?: string;
        secretToken?: string;
    }

    export interface WebhookFilter {
        jsonPath: string;
        matchEquals: string;
    }
}

export namespace codestarnotifications {
    export interface NotificationRuleTarget {
        address: string;
        status: string;
        type?: string;
    }
}

export namespace cognito {
    export interface IdentityPoolCognitoIdentityProvider {
        clientId?: string;
        providerName?: string;
        serverSideTokenCheck?: boolean;
    }

    export interface IdentityPoolRoleAttachmentRoleMapping {
        ambiguousRoleResolution?: string;
        identityProvider: string;
        mappingRules?: outputs.cognito.IdentityPoolRoleAttachmentRoleMappingMappingRule[];
        type: string;
    }

    export interface IdentityPoolRoleAttachmentRoleMappingMappingRule {
        claim: string;
        matchType: string;
        roleArn: string;
        value: string;
    }

    export interface ResourceServerScope {
        scopeDescription: string;
        scopeName: string;
    }

    export interface UserPoolAdminCreateUserConfig {
        allowAdminCreateUserOnly?: boolean;
        inviteMessageTemplate?: outputs.cognito.UserPoolAdminCreateUserConfigInviteMessageTemplate;
    }

    export interface UserPoolAdminCreateUserConfigInviteMessageTemplate {
        emailMessage?: string;
        emailSubject?: string;
        smsMessage?: string;
    }

    export interface UserPoolClientAnalyticsConfiguration {
        applicationId: string;
        externalId: string;
        roleArn: string;
        userDataShared?: boolean;
    }

    export interface UserPoolDeviceConfiguration {
        challengeRequiredOnNewDevice?: boolean;
        deviceOnlyRememberedOnUserPrompt?: boolean;
    }

    export interface UserPoolEmailConfiguration {
        emailSendingAccount?: string;
        fromEmailAddress?: string;
        replyToEmailAddress?: string;
        sourceArn?: string;
    }

    export interface UserPoolLambdaConfig {
        createAuthChallenge?: string;
        customMessage?: string;
        defineAuthChallenge?: string;
        postAuthentication?: string;
        postConfirmation?: string;
        preAuthentication?: string;
        preSignUp?: string;
        preTokenGeneration?: string;
        userMigration?: string;
        verifyAuthChallengeResponse?: string;
    }

    export interface UserPoolPasswordPolicy {
        minimumLength?: number;
        requireLowercase?: boolean;
        requireNumbers?: boolean;
        requireSymbols?: boolean;
        requireUppercase?: boolean;
        temporaryPasswordValidityDays?: number;
    }

    export interface UserPoolSchema {
        attributeDataType: string;
        developerOnlyAttribute?: boolean;
        mutable?: boolean;
        name: string;
        numberAttributeConstraints?: outputs.cognito.UserPoolSchemaNumberAttributeConstraints;
        required?: boolean;
        stringAttributeConstraints?: outputs.cognito.UserPoolSchemaStringAttributeConstraints;
    }

    export interface UserPoolSchemaNumberAttributeConstraints {
        maxValue?: string;
        minValue?: string;
    }

    export interface UserPoolSchemaStringAttributeConstraints {
        maxLength?: string;
        minLength?: string;
    }

    export interface UserPoolSmsConfiguration {
        externalId: string;
        snsCallerArn: string;
    }

    export interface UserPoolSoftwareTokenMfaConfiguration {
        enabled: boolean;
    }

    export interface UserPoolUserPoolAddOns {
        advancedSecurityMode: string;
    }

    export interface UserPoolUsernameConfiguration {
        caseSensitive: boolean;
    }

    export interface UserPoolVerificationMessageTemplate {
        defaultEmailOption?: string;
        emailMessage: string;
        emailMessageByLink: string;
        emailSubject: string;
        emailSubjectByLink: string;
        smsMessage: string;
    }
}

export namespace config {
    export interface AssumeRole {
        durationSeconds?: number;
        externalId?: string;
        policy?: string;
        policyArns?: string[];
        roleArn?: string;
        sessionName?: string;
        tags?: {[key: string]: string};
        transitiveTagKeys?: string[];
    }

    export interface Endpoints {
        accessanalyzer?: string;
        acm?: string;
        acmpca?: string;
        amplify?: string;
        apigateway?: string;
        applicationautoscaling?: string;
        applicationinsights?: string;
        appmesh?: string;
        appstream?: string;
        appsync?: string;
        athena?: string;
        autoscaling?: string;
        autoscalingplans?: string;
        backup?: string;
        batch?: string;
        budgets?: string;
        cloud9?: string;
        cloudformation?: string;
        cloudfront?: string;
        cloudhsm?: string;
        cloudsearch?: string;
        cloudtrail?: string;
        cloudwatch?: string;
        cloudwatchevents?: string;
        cloudwatchlogs?: string;
        codeartifact?: string;
        codebuild?: string;
        codecommit?: string;
        codedeploy?: string;
        codepipeline?: string;
        cognitoidentity?: string;
        cognitoidp?: string;
        configservice?: string;
        cur?: string;
        dataexchange?: string;
        datapipeline?: string;
        datasync?: string;
        dax?: string;
        devicefarm?: string;
        directconnect?: string;
        dlm?: string;
        dms?: string;
        docdb?: string;
        ds?: string;
        dynamodb?: string;
        ec2?: string;
        ecr?: string;
        ecs?: string;
        efs?: string;
        eks?: string;
        elasticache?: string;
        elasticbeanstalk?: string;
        elastictranscoder?: string;
        elb?: string;
        emr?: string;
        es?: string;
        firehose?: string;
        fms?: string;
        forecast?: string;
        fsx?: string;
        gamelift?: string;
        glacier?: string;
        globalaccelerator?: string;
        glue?: string;
        greengrass?: string;
        guardduty?: string;
        iam?: string;
        imagebuilder?: string;
        inspector?: string;
        iot?: string;
        iotanalytics?: string;
        iotevents?: string;
        kafka?: string;
        kinesis?: string;
        kinesisanalytics?: string;
        kinesisanalyticsv2?: string;
        kinesisvideo?: string;
        kms?: string;
        lakeformation?: string;
        lambda?: string;
        lexmodels?: string;
        licensemanager?: string;
        lightsail?: string;
        macie?: string;
        managedblockchain?: string;
        marketplacecatalog?: string;
        mediaconnect?: string;
        mediaconvert?: string;
        medialive?: string;
        mediapackage?: string;
        mediastore?: string;
        mediastoredata?: string;
        mq?: string;
        neptune?: string;
        networkmanager?: string;
        opsworks?: string;
        organizations?: string;
        outposts?: string;
        personalize?: string;
        pinpoint?: string;
        pricing?: string;
        qldb?: string;
        quicksight?: string;
        ram?: string;
        rds?: string;
        redshift?: string;
        resourcegroups?: string;
        resourcegroupstaggingapi?: string;
        route53?: string;
        route53domains?: string;
        route53resolver?: string;
        s3?: string;
        s3control?: string;
        sagemaker?: string;
        sdb?: string;
        secretsmanager?: string;
        securityhub?: string;
        serverlessrepo?: string;
        servicecatalog?: string;
        servicediscovery?: string;
        servicequotas?: string;
        ses?: string;
        shield?: string;
        sns?: string;
        sqs?: string;
        ssm?: string;
        stepfunctions?: string;
        storagegateway?: string;
        sts?: string;
        swf?: string;
        synthetics?: string;
        transfer?: string;
        waf?: string;
        wafregional?: string;
        wafv2?: string;
        worklink?: string;
        workmail?: string;
        workspaces?: string;
        xray?: string;
    }

    export interface IgnoreTags {
        keyPrefixes?: string[];
        keys?: string[];
    }
}

export namespace datasync {
    export interface EfsLocationEc2Config {
        securityGroupArns: string[];
        subnetArn: string;
    }

    export interface LocationSmbMountOptions {
        version?: string;
    }

    export interface NfsLocationOnPremConfig {
        agentArns: string[];
    }

    export interface S3LocationS3Config {
        bucketAccessRoleArn: string;
    }

    export interface TaskOptions {
        atime?: string;
        bytesPerSecond?: number;
        gid?: string;
        mtime?: string;
        posixPermissions?: string;
        preserveDeletedFiles?: string;
        preserveDevices?: string;
        uid?: string;
        verifyMode?: string;
    }
}

export namespace dax {
    export interface ClusterNode {
        address: string;
        availabilityZone: string;
        id: string;
        port: number;
    }

    export interface ClusterServerSideEncryption {
        enabled?: boolean;
    }

    export interface ParameterGroupParameter {
        name: string;
        value: string;
    }
}

export namespace directoryservice {
    export interface DirectoryConnectSettings {
        availabilityZones: string[];
        connectIps: string[];
        customerDnsIps: string[];
        customerUsername: string;
        subnetIds: string[];
        vpcId: string;
    }

    export interface DirectoryVpcSettings {
        availabilityZones: string[];
        subnetIds: string[];
        vpcId: string;
    }

    export interface GetDirectoryConnectSetting {
        availabilityZones: string[];
        connectIps: string[];
        customerDnsIps: string[];
        customerUsername: string;
        subnetIds: string[];
        vpcId: string;
    }

    export interface GetDirectoryVpcSetting {
        availabilityZones: string[];
        subnetIds: string[];
        vpcId: string;
    }
}

export namespace dlm {
    export interface LifecyclePolicyPolicyDetails {
        resourceTypes: string[];
        schedules: outputs.dlm.LifecyclePolicyPolicyDetailsSchedule[];
        targetTags: {[key: string]: string};
    }

    export interface LifecyclePolicyPolicyDetailsSchedule {
        copyTags: boolean;
        createRule: outputs.dlm.LifecyclePolicyPolicyDetailsScheduleCreateRule;
        name: string;
        retainRule: outputs.dlm.LifecyclePolicyPolicyDetailsScheduleRetainRule;
        tagsToAdd?: {[key: string]: string};
    }

    export interface LifecyclePolicyPolicyDetailsScheduleCreateRule {
        interval: number;
        intervalUnit?: string;
        times: string;
    }

    export interface LifecyclePolicyPolicyDetailsScheduleRetainRule {
        count: number;
    }
}

export namespace dms {
    export interface EndpointElasticsearchSettings {
        endpointUri: string;
        errorRetryDuration?: number;
        fullLoadErrorPercentage?: number;
        serviceAccessRoleArn: string;
    }

    export interface EndpointKafkaSettings {
        broker: string;
        topic?: string;
    }

    export interface EndpointKinesisSettings {
        messageFormat?: string;
        serviceAccessRoleArn?: string;
        streamArn?: string;
    }

    export interface EndpointMongodbSettings {
        authMechanism?: string;
        authSource?: string;
        authType?: string;
        docsToInvestigate?: string;
        extractDocId?: string;
        nestingLevel?: string;
    }

    export interface EndpointS3Settings {
        bucketFolder?: string;
        bucketName?: string;
        compressionType?: string;
        csvDelimiter?: string;
        csvRowDelimiter?: string;
        externalTableDefinition?: string;
        serviceAccessRoleArn?: string;
    }
}

export namespace docdb {
    export interface ClusterParameterGroupParameter {
        applyMethod?: string;
        name: string;
        value: string;
    }
}

export namespace dynamodb {
    export interface GetTableAttribute {
        name: string;
        type: string;
    }

    export interface GetTableGlobalSecondaryIndex {
        hashKey: string;
        name: string;
        nonKeyAttributes: string[];
        projectionType: string;
        rangeKey: string;
        readCapacity: number;
        writeCapacity: number;
    }

    export interface GetTableLocalSecondaryIndex {
        name: string;
        nonKeyAttributes: string[];
        projectionType: string;
        rangeKey: string;
    }

    export interface GetTablePointInTimeRecovery {
        enabled: boolean;
    }

    export interface GetTableReplica {
        regionName: string;
    }

    export interface GetTableServerSideEncryption {
        enabled: boolean;
        kmsKeyArn: string;
    }

    export interface GetTableTtl {
        attributeName: string;
        enabled: boolean;
    }

    export interface GlobalTableReplica {
        regionName: string;
    }

    export interface TableAttribute {
        name: string;
        type: string;
    }

    export interface TableGlobalSecondaryIndex {
        hashKey: string;
        name: string;
        nonKeyAttributes?: string[];
        projectionType: string;
        rangeKey?: string;
        readCapacity?: number;
        writeCapacity?: number;
    }

    export interface TableLocalSecondaryIndex {
        name: string;
        nonKeyAttributes?: string[];
        projectionType: string;
        rangeKey: string;
    }

    export interface TablePointInTimeRecovery {
        enabled: boolean;
    }

    export interface TableReplica {
        regionName: string;
    }

    export interface TableServerSideEncryption {
        enabled: boolean;
        kmsKeyArn: string;
    }

    export interface TableTtl {
        attributeName: string;
        enabled?: boolean;
    }
}

export namespace ebs {
    export interface GetEbsVolumesFilter {
        name: string;
        values: string[];
    }

    export interface GetSnapshotFilter {
        name: string;
        values: string[];
    }

    export interface GetSnapshotIdsFilter {
        name: string;
        values: string[];
    }

    export interface GetVolumeFilter {
        name: string;
        values: string[];
    }
}

export namespace ec2 {
    export interface AmiCopyEbsBlockDevice {
        deleteOnTermination: boolean;
        deviceName: string;
        encrypted: boolean;
        iops: number;
        snapshotId: string;
        volumeSize: number;
        volumeType: string;
    }

    export interface AmiCopyEphemeralBlockDevice {
        deviceName: string;
        virtualName: string;
    }

    export interface AmiEbsBlockDevice {
        deleteOnTermination?: boolean;
        deviceName: string;
        encrypted?: boolean;
        iops?: number;
        snapshotId?: string;
        volumeSize: number;
        volumeType?: string;
    }

    export interface AmiEphemeralBlockDevice {
        deviceName: string;
        virtualName: string;
    }

    export interface AmiFromInstanceEbsBlockDevice {
        deleteOnTermination: boolean;
        deviceName: string;
        encrypted: boolean;
        iops: number;
        snapshotId: string;
        volumeSize: number;
        volumeType: string;
    }

    export interface AmiFromInstanceEphemeralBlockDevice {
        deviceName: string;
        virtualName: string;
    }

    export interface DefaultNetworkAclEgress {
        action: string;
        cidrBlock?: string;
        fromPort: number;
        icmpCode?: number;
        icmpType?: number;
        ipv6CidrBlock?: string;
        protocol: string;
        ruleNo: number;
        toPort: number;
    }

    export interface DefaultNetworkAclIngress {
        action: string;
        cidrBlock?: string;
        fromPort: number;
        icmpCode?: number;
        icmpType?: number;
        ipv6CidrBlock?: string;
        protocol: string;
        ruleNo: number;
        toPort: number;
    }

    export interface DefaultRouteTableRoute {
        cidrBlock?: string;
        egressOnlyGatewayId?: string;
        gatewayId?: string;
        instanceId?: string;
        ipv6CidrBlock?: string;
        natGatewayId?: string;
        networkInterfaceId?: string;
        transitGatewayId?: string;
        vpcPeeringConnectionId?: string;
    }

    export interface DefaultSecurityGroupEgress {
        cidrBlocks?: string[];
        description?: string;
        fromPort: number;
        ipv6CidrBlocks?: string[];
        prefixListIds?: string[];
        protocol: string;
        securityGroups?: string[];
        self?: boolean;
        toPort: number;
    }

    export interface DefaultSecurityGroupIngress {
        cidrBlocks?: string[];
        description?: string;
        fromPort: number;
        ipv6CidrBlocks?: string[];
        prefixListIds?: string[];
        protocol: string;
        securityGroups?: string[];
        self?: boolean;
        toPort: number;
    }

    export interface FleetLaunchTemplateConfig {
        launchTemplateSpecification: outputs.ec2.FleetLaunchTemplateConfigLaunchTemplateSpecification;
        overrides?: outputs.ec2.FleetLaunchTemplateConfigOverride[];
    }

    export interface FleetLaunchTemplateConfigLaunchTemplateSpecification {
        launchTemplateId?: string;
        launchTemplateName?: string;
        version: string;
    }

    export interface FleetLaunchTemplateConfigOverride {
        availabilityZone?: string;
        instanceType?: string;
        maxPrice?: string;
        priority?: number;
        subnetId?: string;
        weightedCapacity?: number;
    }

    export interface FleetOnDemandOptions {
        allocationStrategy?: string;
    }

    export interface FleetSpotOptions {
        allocationStrategy?: string;
        instanceInterruptionBehavior?: string;
        instancePoolsToUseCount?: number;
    }

    export interface FleetTargetCapacitySpecification {
        defaultTargetCapacityType: string;
        onDemandTargetCapacity?: number;
        spotTargetCapacity?: number;
        totalTargetCapacity: number;
    }

    export interface GetCoipPoolFilter {
        name: string;
        values: string[];
    }

    export interface GetCoipPoolsFilter {
        name: string;
        values: string[];
    }

    export interface GetCustomerGatewayFilter {
        name: string;
        values: string[];
    }

    export interface GetInstanceCreditSpecification {
        cpuCredits: string;
    }

    export interface GetInstanceEbsBlockDevice {
        deleteOnTermination: boolean;
        deviceName: string;
        encrypted: boolean;
        iops: number;
        kmsKeyId: string;
        snapshotId: string;
        volumeId: string;
        volumeSize: number;
        volumeType: string;
    }

    export interface GetInstanceEphemeralBlockDevice {
        deviceName: string;
        noDevice?: boolean;
        virtualName?: string;
    }

    export interface GetInstanceFilter {
        name: string;
        values: string[];
    }

    export interface GetInstanceMetadataOption {
        httpEndpoint: string;
        httpPutResponseHopLimit: number;
        httpTokens: string;
    }

    export interface GetInstanceRootBlockDevice {
        deleteOnTermination: boolean;
        deviceName: string;
        encrypted: boolean;
        iops: number;
        kmsKeyId: string;
        volumeId: string;
        volumeSize: number;
        volumeType: string;
    }

    export interface GetInstanceTypeOfferingFilter {
        name: string;
        values: string[];
    }

    export interface GetInstanceTypeOfferingsFilter {
        name: string;
        values: string[];
    }

    export interface GetInstancesFilter {
        name: string;
        values: string[];
    }

    export interface GetInternetGatewayAttachment {
        state: string;
        vpcId: string;
    }

    export interface GetInternetGatewayFilter {
        name: string;
        values: string[];
    }

    export interface GetLaunchConfigurationEbsBlockDevice {
        deleteOnTermination: boolean;
        deviceName: string;
        encrypted: boolean;
        iops: number;
        snapshotId: string;
        volumeSize: number;
        volumeType: string;
    }

    export interface GetLaunchConfigurationEphemeralBlockDevice {
        deviceName: string;
        virtualName: string;
    }

    export interface GetLaunchConfigurationRootBlockDevice {
        deleteOnTermination: boolean;
        encrypted: boolean;
        iops: number;
        volumeSize: number;
        volumeType: string;
    }

    export interface GetLaunchTemplateBlockDeviceMapping {
        deviceName: string;
        ebs: outputs.ec2.GetLaunchTemplateBlockDeviceMappingEb[];
        noDevice: string;
        virtualName: string;
    }

    export interface GetLaunchTemplateBlockDeviceMappingEb {
        deleteOnTermination: string;
        encrypted: string;
        iops: number;
        kmsKeyId: string;
        snapshotId: string;
        volumeSize: number;
        volumeType: string;
    }

    export interface GetLaunchTemplateCreditSpecification {
        cpuCredits: string;
    }

    export interface GetLaunchTemplateElasticGpuSpecification {
        type: string;
    }

    export interface GetLaunchTemplateFilter {
        name: string;
        values: string[];
    }

    export interface GetLaunchTemplateHibernationOption {
        configured: boolean;
    }

    export interface GetLaunchTemplateIamInstanceProfile {
        arn: string;
        name: string;
    }

    export interface GetLaunchTemplateInstanceMarketOption {
        marketType: string;
        spotOptions: outputs.ec2.GetLaunchTemplateInstanceMarketOptionSpotOption[];
    }

    export interface GetLaunchTemplateInstanceMarketOptionSpotOption {
        blockDurationMinutes: number;
        instanceInterruptionBehavior: string;
        maxPrice: string;
        spotInstanceType: string;
        validUntil: string;
    }

    export interface GetLaunchTemplateMetadataOption {
        httpEndpoint: string;
        httpPutResponseHopLimit: number;
        httpTokens: string;
    }

    export interface GetLaunchTemplateMonitoring {
        enabled: boolean;
    }

    export interface GetLaunchTemplateNetworkInterface {
        associatePublicIpAddress?: boolean;
        deleteOnTermination: boolean;
        description: string;
        deviceIndex: number;
        ipv4AddressCount: number;
        ipv4Addresses: string[];
        ipv6AddressCount: number;
        ipv6Addresses: string[];
        networkInterfaceId: string;
        privateIpAddress: string;
        securityGroups: string[];
        subnetId: string;
    }

    export interface GetLaunchTemplatePlacement {
        affinity: string;
        availabilityZone: string;
        groupName: string;
        hostId: string;
        partitionNumber: number;
        spreadDomain: string;
        tenancy: string;
    }

    export interface GetLaunchTemplateTagSpecification {
        resourceType: string;
        tags: {[key: string]: string};
    }

    export interface GetLocalGatewayFilter {
        name: string;
        values: string[];
    }

    export interface GetLocalGatewayRouteTableFilter {
        name: string;
        values: string[];
    }

    export interface GetLocalGatewayRouteTablesFilter {
        name: string;
        values: string[];
    }

    export interface GetLocalGatewayVirtualInterfaceFilter {
        name: string;
        values: string[];
    }

    export interface GetLocalGatewayVirtualInterfaceGroupFilter {
        name: string;
        values: string[];
    }

    export interface GetLocalGatewayVirtualInterfaceGroupsFilter {
        name: string;
        values: string[];
    }

    export interface GetLocalGatewaysFilter {
        name: string;
        values: string[];
    }

    export interface GetNatGatewayFilter {
        name: string;
        values: string[];
    }

    export interface GetNetworkAclsFilter {
        name: string;
        values: string[];
    }

    export interface GetNetworkInterfaceAssociation {
        allocationId: string;
        associationId: string;
        ipOwnerId: string;
        publicDnsName: string;
        publicIp: string;
    }

    export interface GetNetworkInterfaceAttachment {
        attachmentId: string;
        deviceIndex: number;
        instanceId: string;
        instanceOwnerId: string;
    }

    export interface GetNetworkInterfaceFilter {
        name: string;
        values: string[];
    }

    export interface GetNetworkInterfacesFilter {
        name: string;
        values: string[];
    }

    export interface GetRouteTableAssociation {
        gatewayId: string;
        main: boolean;
        routeTableAssociationId: string;
        routeTableId: string;
        subnetId: string;
    }

    export interface GetRouteTableFilter {
        name: string;
        values: string[];
    }

    export interface GetRouteTableRoute {
        cidrBlock: string;
        egressOnlyGatewayId: string;
        gatewayId: string;
        instanceId: string;
        ipv6CidrBlock: string;
        natGatewayId: string;
        networkInterfaceId: string;
        transitGatewayId: string;
        vpcPeeringConnectionId: string;
    }

    export interface GetRouteTablesFilter {
        name: string;
        values: string[];
    }

    export interface GetSecurityGroupFilter {
        name: string;
        values: string[];
    }

    export interface GetSecurityGroupsFilter {
        name: string;
        values: string[];
    }

    export interface GetSpotPriceFilter {
        name: string;
        values: string[];
    }

    export interface GetSubnetFilter {
        name: string;
        values: string[];
    }

    export interface GetSubnetIdsFilter {
        name: string;
        values: string[];
    }

    export interface GetVpcCidrBlockAssociation {
        associationId: string;
        cidrBlock: string;
        state: string;
    }

    export interface GetVpcDhcpOptionsFilter {
        name: string;
        values: string[];
    }

    export interface GetVpcEndpointDnsEntry {
        dnsName: string;
        hostedZoneId: string;
    }

    export interface GetVpcEndpointFilter {
        name: string;
        values: string[];
    }

    export interface GetVpcEndpointServiceFilter {
        name: string;
        values: string[];
    }

    export interface GetVpcFilter {
        name: string;
        values: string[];
    }

    export interface GetVpcPeeringConnectionFilter {
        name: string;
        values: string[];
    }

    export interface GetVpcsFilter {
        name: string;
        values: string[];
    }

    export interface GetVpnGatewayFilter {
        name: string;
        values: string[];
    }

    export interface InstanceCreditSpecification {
        cpuCredits?: string;
    }

    export interface InstanceEbsBlockDevice {
        deleteOnTermination?: boolean;
        deviceName: string;
        encrypted: boolean;
        iops: number;
        kmsKeyId: string;
        snapshotId: string;
        volumeId: string;
        volumeSize: number;
        volumeType: string;
    }

    export interface InstanceEphemeralBlockDevice {
        deviceName: string;
        noDevice?: boolean;
        virtualName?: string;
    }

    export interface InstanceMetadataOptions {
        httpEndpoint: string;
        httpPutResponseHopLimit: number;
        httpTokens: string;
    }

    export interface InstanceNetworkInterface {
        deleteOnTermination?: boolean;
        deviceIndex: number;
        networkInterfaceId: string;
    }

    export interface InstanceRootBlockDevice {
        deleteOnTermination?: boolean;
        deviceName: string;
        encrypted: boolean;
        iops: number;
        kmsKeyId: string;
        volumeId: string;
        volumeSize: number;
        volumeType: string;
    }

    export interface LaunchConfigurationEbsBlockDevice {
        deleteOnTermination?: boolean;
        deviceName: string;
        encrypted: boolean;
        iops: number;
        noDevice?: boolean;
        snapshotId: string;
        volumeSize: number;
        volumeType: string;
    }

    export interface LaunchConfigurationEphemeralBlockDevice {
        deviceName: string;
        virtualName: string;
    }

    export interface LaunchConfigurationRootBlockDevice {
        deleteOnTermination?: boolean;
        encrypted: boolean;
        iops: number;
        volumeSize: number;
        volumeType: string;
    }

    export interface LaunchTemplateBlockDeviceMapping {
        deviceName?: string;
        ebs?: outputs.ec2.LaunchTemplateBlockDeviceMappingEbs;
        noDevice?: string;
        virtualName?: string;
    }

    export interface LaunchTemplateBlockDeviceMappingEbs {
        deleteOnTermination?: string;
        encrypted?: string;
        iops: number;
        kmsKeyId?: string;
        snapshotId?: string;
        volumeSize: number;
        volumeType: string;
    }

    export interface LaunchTemplateCapacityReservationSpecification {
        capacityReservationPreference?: string;
        capacityReservationTarget?: outputs.ec2.LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget;
    }

    export interface LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget {
        capacityReservationId?: string;
    }

    export interface LaunchTemplateCpuOptions {
        coreCount?: number;
        threadsPerCore?: number;
    }

    export interface LaunchTemplateCreditSpecification {
        cpuCredits?: string;
    }

    export interface LaunchTemplateElasticGpuSpecification {
        type: string;
    }

    export interface LaunchTemplateElasticInferenceAccelerator {
        type: string;
    }

    export interface LaunchTemplateHibernationOptions {
        configured: boolean;
    }

    export interface LaunchTemplateIamInstanceProfile {
        arn?: string;
        name?: string;
    }

    export interface LaunchTemplateInstanceMarketOptions {
        marketType?: string;
        spotOptions?: outputs.ec2.LaunchTemplateInstanceMarketOptionsSpotOptions;
    }

    export interface LaunchTemplateInstanceMarketOptionsSpotOptions {
        blockDurationMinutes?: number;
        instanceInterruptionBehavior?: string;
        maxPrice?: string;
        spotInstanceType?: string;
        validUntil: string;
    }

    export interface LaunchTemplateLicenseSpecification {
        licenseConfigurationArn: string;
    }

    export interface LaunchTemplateMetadataOptions {
        httpEndpoint: string;
        httpPutResponseHopLimit: number;
        httpTokens: string;
    }

    export interface LaunchTemplateMonitoring {
        enabled?: boolean;
    }

    export interface LaunchTemplateNetworkInterface {
        associatePublicIpAddress?: string;
        deleteOnTermination?: string;
        description?: string;
        deviceIndex?: number;
        ipv4AddressCount?: number;
        ipv4Addresses?: string[];
        ipv6AddressCount?: number;
        ipv6Addresses?: string[];
        networkInterfaceId?: string;
        privateIpAddress?: string;
        securityGroups?: string[];
        subnetId?: string;
    }

    export interface LaunchTemplatePlacement {
        affinity?: string;
        availabilityZone?: string;
        groupName?: string;
        hostId?: string;
        partitionNumber?: number;
        spreadDomain?: string;
        tenancy?: string;
    }

    export interface LaunchTemplateTagSpecification {
        resourceType?: string;
        tags?: {[key: string]: string};
    }

    export interface NetworkAclEgress {
        action: string;
        cidrBlock?: string;
        fromPort: number;
        icmpCode?: number;
        icmpType?: number;
        ipv6CidrBlock?: string;
        protocol: string;
        ruleNo: number;
        toPort: number;
    }

    export interface NetworkAclIngress {
        action: string;
        cidrBlock?: string;
        fromPort: number;
        icmpCode?: number;
        icmpType?: number;
        ipv6CidrBlock?: string;
        protocol: string;
        ruleNo: number;
        toPort: number;
    }

    export interface NetworkInterfaceAttachment {
        attachmentId: string;
        deviceIndex: number;
        instance: string;
    }

    export interface PeeringConnectionOptionsAccepter {
        allowClassicLinkToRemoteVpc?: boolean;
        allowRemoteVpcDnsResolution?: boolean;
        allowVpcToRemoteClassicLink?: boolean;
    }

    export interface PeeringConnectionOptionsRequester {
        allowClassicLinkToRemoteVpc?: boolean;
        allowRemoteVpcDnsResolution?: boolean;
        allowVpcToRemoteClassicLink?: boolean;
    }

    export interface RouteTableRoute {
        cidrBlock?: string;
        egressOnlyGatewayId?: string;
        gatewayId?: string;
        instanceId?: string;
        ipv6CidrBlock?: string;
        natGatewayId?: string;
        networkInterfaceId?: string;
        transitGatewayId?: string;
        vpcPeeringConnectionId?: string;
    }

    export interface SecurityGroupEgress {
        cidrBlocks?: string[];
        description?: string;
        fromPort: number;
        ipv6CidrBlocks?: string[];
        prefixListIds?: string[];
        protocol: string;
        securityGroups?: string[];
        self?: boolean;
        toPort: number;
    }

    export interface SecurityGroupIngress {
        cidrBlocks?: string[];
        description?: string;
        fromPort: number;
        ipv6CidrBlocks?: string[];
        prefixListIds?: string[];
        protocol: string;
        securityGroups?: string[];
        self?: boolean;
        toPort: number;
    }

    export interface SpotFleetRequestLaunchSpecification {
        ami: string;
        associatePublicIpAddress?: boolean;
        availabilityZone: string;
        ebsBlockDevices: outputs.ec2.SpotFleetRequestLaunchSpecificationEbsBlockDevice[];
        ebsOptimized?: boolean;
        ephemeralBlockDevices: outputs.ec2.SpotFleetRequestLaunchSpecificationEphemeralBlockDevice[];
        iamInstanceProfile?: string;
        iamInstanceProfileArn?: string;
        instanceType: string;
        keyName: string;
        monitoring?: boolean;
        placementGroup: string;
        placementTenancy?: string;
        rootBlockDevices: outputs.ec2.SpotFleetRequestLaunchSpecificationRootBlockDevice[];
        spotPrice?: string;
        subnetId: string;
        tags?: {[key: string]: string};
        userData?: string;
        vpcSecurityGroupIds: string[];
        weightedCapacity?: string;
    }

    export interface SpotFleetRequestLaunchSpecificationEbsBlockDevice {
        deleteOnTermination?: boolean;
        deviceName: string;
        encrypted: boolean;
        iops: number;
        kmsKeyId: string;
        snapshotId: string;
        volumeSize: number;
        volumeType: string;
    }

    export interface SpotFleetRequestLaunchSpecificationEphemeralBlockDevice {
        deviceName: string;
        virtualName: string;
    }

    export interface SpotFleetRequestLaunchSpecificationRootBlockDevice {
        deleteOnTermination?: boolean;
        encrypted: boolean;
        iops: number;
        kmsKeyId: string;
        volumeSize: number;
        volumeType: string;
    }

    export interface SpotFleetRequestLaunchTemplateConfig {
        launchTemplateSpecification: outputs.ec2.SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecification;
        overrides?: outputs.ec2.SpotFleetRequestLaunchTemplateConfigOverride[];
    }

    export interface SpotFleetRequestLaunchTemplateConfigLaunchTemplateSpecification {
        id?: string;
        name?: string;
        version?: string;
    }

    export interface SpotFleetRequestLaunchTemplateConfigOverride {
        availabilityZone?: string;
        instanceType?: string;
        priority: number;
        spotPrice: string;
        subnetId: string;
        weightedCapacity: number;
    }

    export interface SpotInstanceRequestCreditSpecification {
        cpuCredits?: string;
    }

    export interface SpotInstanceRequestEbsBlockDevice {
        deleteOnTermination?: boolean;
        deviceName: string;
        encrypted: boolean;
        iops: number;
        kmsKeyId: string;
        snapshotId: string;
        volumeId: string;
        volumeSize: number;
        volumeType: string;
    }

    export interface SpotInstanceRequestEphemeralBlockDevice {
        deviceName: string;
        noDevice?: boolean;
        virtualName?: string;
    }

    export interface SpotInstanceRequestMetadataOptions {
        httpEndpoint: string;
        httpPutResponseHopLimit: number;
        httpTokens: string;
    }

    export interface SpotInstanceRequestNetworkInterface {
        deleteOnTermination?: boolean;
        deviceIndex: number;
        networkInterfaceId: string;
    }

    export interface SpotInstanceRequestRootBlockDevice {
        deleteOnTermination?: boolean;
        deviceName: string;
        encrypted: boolean;
        iops: number;
        kmsKeyId: string;
        volumeId: string;
        volumeSize: number;
        volumeType: string;
    }

    export interface TrafficMirrorFilterRuleDestinationPortRange {
        fromPort?: number;
        toPort?: number;
    }

    export interface TrafficMirrorFilterRuleSourcePortRange {
        fromPort?: number;
        toPort?: number;
    }

    export interface VpcEndpointDnsEntry {
        dnsName: string;
        hostedZoneId: string;
    }

    export interface VpcPeeringConnectionAccepter {
        allowClassicLinkToRemoteVpc?: boolean;
        allowRemoteVpcDnsResolution?: boolean;
        allowVpcToRemoteClassicLink?: boolean;
    }

    export interface VpcPeeringConnectionAccepterAccepter {
        allowClassicLinkToRemoteVpc?: boolean;
        allowRemoteVpcDnsResolution?: boolean;
        allowVpcToRemoteClassicLink?: boolean;
    }

    export interface VpcPeeringConnectionAccepterRequester {
        allowClassicLinkToRemoteVpc?: boolean;
        allowRemoteVpcDnsResolution?: boolean;
        allowVpcToRemoteClassicLink?: boolean;
    }

    export interface VpcPeeringConnectionRequester {
        allowClassicLinkToRemoteVpc?: boolean;
        allowRemoteVpcDnsResolution?: boolean;
        allowVpcToRemoteClassicLink?: boolean;
    }

    export interface VpnConnectionRoute {
        destinationCidrBlock: string;
        source: string;
        state: string;
    }

    export interface VpnConnectionVgwTelemetry {
        acceptedRouteCount: number;
        lastStatusChange: string;
        outsideIpAddress: string;
        status: string;
        statusMessage: string;
    }
}

export namespace ec2clientvpn {
    export interface EndpointAuthenticationOption {
        activeDirectoryId?: string;
        rootCertificateChainArn?: string;
        type: string;
    }

    export interface EndpointConnectionLogOptions {
        cloudwatchLogGroup?: string;
        cloudwatchLogStream?: string;
        enabled: boolean;
    }
}

export namespace ec2transitgateway {
    export interface GetDirectConnectGatewayAttachmentFilter {
        name: string;
        values: string[];
    }

    export interface GetPeeringAttachmentFilter {
        name: string;
        values: string[];
    }

    export interface GetRouteTableFilter {
        name: string;
        values: string[];
    }

    export interface GetTransitGatewayFilter {
        name: string;
        values: string[];
    }

    export interface GetVpcAttachmentFilter {
        name: string;
        values: string[];
    }

    export interface GetVpnAttachmentFilter {
        name: string;
        values: string[];
    }
}

export namespace ecr {
    export interface GetRepositoryEncryptionConfiguration {
        encryptionType: string;
        kmsKey: string;
    }

    export interface GetRepositoryImageScanningConfiguration {
        scanOnPush: boolean;
    }

    export interface RepositoryEncryptionConfiguration {
        encryptionType?: string;
        kmsKey: string;
    }

    export interface RepositoryImageScanningConfiguration {
        scanOnPush: boolean;
    }
}

export namespace ecs {
    export interface CapacityProviderAutoScalingGroupProvider {
        autoScalingGroupArn: string;
        managedScaling: outputs.ecs.CapacityProviderAutoScalingGroupProviderManagedScaling;
        managedTerminationProtection: string;
    }

    export interface CapacityProviderAutoScalingGroupProviderManagedScaling {
        maximumScalingStepSize: number;
        minimumScalingStepSize: number;
        status: string;
        targetCapacity: number;
    }

    export interface ClusterDefaultCapacityProviderStrategy {
        base?: number;
        capacityProvider: string;
        weight?: number;
    }

    export interface ClusterSetting {
        name: string;
        value: string;
    }

    export interface GetClusterSetting {
        name: string;
        value: string;
    }

    export interface ServiceCapacityProviderStrategy {
        base?: number;
        capacityProvider: string;
        weight?: number;
    }

    export interface ServiceDeploymentController {
        type?: string;
    }

    export interface ServiceLoadBalancer {
        containerName: string;
        containerPort: number;
        elbName?: string;
        targetGroupArn?: string;
    }

    export interface ServiceNetworkConfiguration {
        assignPublicIp?: boolean;
        securityGroups?: string[];
        subnets: string[];
    }

    export interface ServiceOrderedPlacementStrategy {
        field?: string;
        type: string;
    }

    export interface ServicePlacementConstraint {
        expression?: string;
        type: string;
    }

    export interface ServiceServiceRegistries {
        containerName?: string;
        containerPort?: number;
        port?: number;
        registryArn: string;
    }

    export interface TaskDefinitionInferenceAccelerator {
        deviceName: string;
        deviceType: string;
    }

    export interface TaskDefinitionPlacementConstraint {
        expression?: string;
        type: string;
    }

    export interface TaskDefinitionProxyConfiguration {
        containerName: string;
        properties?: {[key: string]: string};
        type?: string;
    }

    export interface TaskDefinitionVolume {
        dockerVolumeConfiguration?: outputs.ecs.TaskDefinitionVolumeDockerVolumeConfiguration;
        efsVolumeConfiguration?: outputs.ecs.TaskDefinitionVolumeEfsVolumeConfiguration;
        hostPath?: string;
        name: string;
    }

    export interface TaskDefinitionVolumeDockerVolumeConfiguration {
        autoprovision?: boolean;
        driver?: string;
        driverOpts?: {[key: string]: string};
        labels?: {[key: string]: string};
        scope: string;
    }

    export interface TaskDefinitionVolumeEfsVolumeConfiguration {
        authorizationConfig?: outputs.ecs.TaskDefinitionVolumeEfsVolumeConfigurationAuthorizationConfig;
        fileSystemId: string;
        rootDirectory?: string;
        transitEncryption?: string;
        transitEncryptionPort?: number;
    }

    export interface TaskDefinitionVolumeEfsVolumeConfigurationAuthorizationConfig {
        accessPointId?: string;
        iam?: string;
    }
}

export namespace efs {
    export interface AccessPointPosixUser {
        gid: number;
        secondaryGids?: number[];
        uid: number;
    }

    export interface AccessPointRootDirectory {
        creationInfo: outputs.efs.AccessPointRootDirectoryCreationInfo;
        path: string;
    }

    export interface AccessPointRootDirectoryCreationInfo {
        ownerGid: number;
        ownerUid: number;
        permissions: string;
    }

    export interface FileSystemLifecyclePolicy {
        transitionToIa: string;
    }

    export interface GetAccessPointPosixUser {
        gid: number;
        secondaryGids: number[];
        uid: number;
    }

    export interface GetAccessPointRootDirectory {
        creationInfos: outputs.efs.GetAccessPointRootDirectoryCreationInfo[];
        path: string;
    }

    export interface GetAccessPointRootDirectoryCreationInfo {
        ownerGid: number;
        ownerUid: number;
        permissions: string;
    }

    export interface GetFileSystemLifecyclePolicy {
        transitionToIa: string;
    }
}

export namespace eks {
    export interface ClusterCertificateAuthority {
        data: string;
    }

    export interface ClusterEncryptionConfig {
        provider: outputs.eks.ClusterEncryptionConfigProvider;
        resources: string[];
    }

    export interface ClusterEncryptionConfigProvider {
        keyArn: string;
    }

    export interface ClusterIdentity {
        oidcs: outputs.eks.ClusterIdentityOidc[];
    }

    export interface ClusterIdentityOidc {
        issuer: string;
    }

    export interface ClusterVpcConfig {
        clusterSecurityGroupId: string;
        endpointPrivateAccess?: boolean;
        endpointPublicAccess?: boolean;
        publicAccessCidrs: string[];
        securityGroupIds?: string[];
        subnetIds: string[];
        vpcId: string;
    }

    export interface FargateProfileSelector {
        labels?: {[key: string]: string};
        namespace: string;
    }

    export interface GetClusterCertificateAuthority {
        data: string;
    }

    export interface GetClusterIdentity {
        oidcs: outputs.eks.GetClusterIdentityOidc[];
    }

    export interface GetClusterIdentityOidc {
        issuer: string;
    }

    export interface GetClusterVpcConfig {
        clusterSecurityGroupId: string;
        endpointPrivateAccess: boolean;
        endpointPublicAccess: boolean;
        publicAccessCidrs: string[];
        securityGroupIds: string[];
        subnetIds: string[];
        vpcId: string;
    }

    export interface NodeGroupRemoteAccess {
        ec2SshKey?: string;
        sourceSecurityGroupIds?: string[];
    }

    export interface NodeGroupResource {
        autoscalingGroups: outputs.eks.NodeGroupResourceAutoscalingGroup[];
        remoteAccessSecurityGroupId: string;
    }

    export interface NodeGroupResourceAutoscalingGroup {
        name: string;
    }

    export interface NodeGroupScalingConfig {
        desiredSize: number;
        maxSize: number;
        minSize: number;
    }
}

export namespace elasticache {
    export interface ClusterCacheNode {
        address: string;
        availabilityZone: string;
        id: string;
        port: number;
    }

    export interface GetClusterCacheNode {
        address: string;
        availabilityZone: string;
        id: string;
        port: number;
    }

    export interface ParameterGroupParameter {
        name: string;
        value: string;
    }

    export interface ReplicationGroupClusterMode {
        numNodeGroups: number;
        replicasPerNodeGroup: number;
    }
}

export namespace elasticbeanstalk {
    export interface ApplicationAppversionLifecycle {
        deleteSourceFromS3?: boolean;
        maxAgeInDays?: number;
        maxCount?: number;
        serviceRole: string;
    }

    export interface ConfigurationTemplateSetting {
        name: string;
        namespace: string;
        resource?: string;
        value: string;
    }

    export interface EnvironmentAllSetting {
        name: string;
        namespace: string;
        resource?: string;
        value: string;
    }

    export interface EnvironmentSetting {
        name: string;
        namespace: string;
        resource?: string;
        value: string;
    }

    export interface GetApplicationAppversionLifecycle {
        deleteSourceFromS3: boolean;
        maxAgeInDays: number;
        maxCount: number;
        serviceRole: string;
    }
}

export namespace elasticloadbalancing {
    export interface GetLoadBalancerAccessLogs {
        bucket: string;
        bucketPrefix: string;
        enabled: boolean;
        interval: number;
    }

    export interface GetLoadBalancerHealthCheck {
        healthyThreshold: number;
        interval: number;
        target: string;
        timeout: number;
        unhealthyThreshold: number;
    }

    export interface GetLoadBalancerListener {
        instancePort: number;
        instanceProtocol: string;
        lbPort: number;
        lbProtocol: string;
        sslCertificateId: string;
    }

    export interface LoadBalancerAccessLogs {
        bucket: string;
        bucketPrefix?: string;
        enabled?: boolean;
        interval?: number;
    }

    export interface LoadBalancerHealthCheck {
        healthyThreshold: number;
        interval: number;
        target: string;
        timeout: number;
        unhealthyThreshold: number;
    }

    export interface LoadBalancerListener {
        instancePort: number;
        instanceProtocol: string;
        lbPort: number;
        lbProtocol: string;
        sslCertificateId?: string;
    }

    export interface LoadBalancerPolicyPolicyAttribute {
        name?: string;
        value?: string;
    }

    export interface SslNegotiationPolicyAttribute {
        name: string;
        value: string;
    }
}

export namespace elasticloadbalancingv2 {
    export interface GetListenerDefaultAction {
        authenticateCognitos: outputs.elasticloadbalancingv2.GetListenerDefaultActionAuthenticateCognito[];
        authenticateOidcs: outputs.elasticloadbalancingv2.GetListenerDefaultActionAuthenticateOidc[];
        fixedResponses: outputs.elasticloadbalancingv2.GetListenerDefaultActionFixedResponse[];
        order: number;
        redirects: outputs.elasticloadbalancingv2.GetListenerDefaultActionRedirect[];
        targetGroupArn: string;
        type: string;
    }

    export interface GetListenerDefaultActionAuthenticateCognito {
        authenticationRequestExtraParams: {[key: string]: string};
        onUnauthenticatedRequest: string;
        scope: string;
        sessionCookieName: string;
        sessionTimeout: number;
        userPoolArn: string;
        userPoolClientId: string;
        userPoolDomain: string;
    }

    export interface GetListenerDefaultActionAuthenticateOidc {
        authenticationRequestExtraParams: {[key: string]: string};
        authorizationEndpoint: string;
        clientId: string;
        clientSecret: string;
        issuer: string;
        onUnauthenticatedRequest: string;
        scope: string;
        sessionCookieName: string;
        sessionTimeout: number;
        tokenEndpoint: string;
        userInfoEndpoint: string;
    }

    export interface GetListenerDefaultActionFixedResponse {
        contentType: string;
        messageBody: string;
        statusCode: string;
    }

    export interface GetListenerDefaultActionRedirect {
        host: string;
        path: string;
        port: string;
        protocol: string;
        query: string;
        statusCode: string;
    }

    export interface GetLoadBalancerAccessLogs {
        bucket: string;
        enabled: boolean;
        prefix: string;
    }

    export interface GetLoadBalancerSubnetMapping {
        allocationId?: string;
        subnetId: string;
    }

    export interface GetTargetGroupHealthCheck {
        enabled: boolean;
        healthyThreshold: number;
        interval: number;
        matcher: string;
        path: string;
        port: string;
        protocol: string;
        timeout: number;
        unhealthyThreshold: number;
    }

    export interface GetTargetGroupStickiness {
        cookieDuration: number;
        enabled: boolean;
        type: string;
    }

    export interface ListenerDefaultAction {
        authenticateCognito?: outputs.elasticloadbalancingv2.ListenerDefaultActionAuthenticateCognito;
        authenticateOidc?: outputs.elasticloadbalancingv2.ListenerDefaultActionAuthenticateOidc;
        fixedResponse?: outputs.elasticloadbalancingv2.ListenerDefaultActionFixedResponse;
        forward?: outputs.elasticloadbalancingv2.ListenerDefaultActionForward;
        order: number;
        redirect?: outputs.elasticloadbalancingv2.ListenerDefaultActionRedirect;
        targetGroupArn?: string;
        type: string;
    }

    export interface ListenerDefaultActionAuthenticateCognito {
        authenticationRequestExtraParams?: {[key: string]: string};
        onUnauthenticatedRequest: string;
        scope: string;
        sessionCookieName: string;
        sessionTimeout: number;
        userPoolArn: string;
        userPoolClientId: string;
        userPoolDomain: string;
    }

    export interface ListenerDefaultActionAuthenticateOidc {
        authenticationRequestExtraParams?: {[key: string]: string};
        authorizationEndpoint: string;
        clientId: string;
        clientSecret: string;
        issuer: string;
        onUnauthenticatedRequest: string;
        scope: string;
        sessionCookieName: string;
        sessionTimeout: number;
        tokenEndpoint: string;
        userInfoEndpoint: string;
    }

    export interface ListenerDefaultActionFixedResponse {
        contentType: string;
        messageBody?: string;
        statusCode: string;
    }

    export interface ListenerDefaultActionForward {
        stickiness?: outputs.elasticloadbalancingv2.ListenerDefaultActionForwardStickiness;
        targetGroups: outputs.elasticloadbalancingv2.ListenerDefaultActionForwardTargetGroup[];
    }

    export interface ListenerDefaultActionForwardStickiness {
        duration: number;
        enabled?: boolean;
    }

    export interface ListenerDefaultActionForwardTargetGroup {
        arn: string;
        weight?: number;
    }

    export interface ListenerDefaultActionRedirect {
        host?: string;
        path?: string;
        port?: string;
        protocol?: string;
        query?: string;
        statusCode: string;
    }

    export interface ListenerRuleAction {
        authenticateCognito?: outputs.elasticloadbalancingv2.ListenerRuleActionAuthenticateCognito;
        authenticateOidc?: outputs.elasticloadbalancingv2.ListenerRuleActionAuthenticateOidc;
        fixedResponse?: outputs.elasticloadbalancingv2.ListenerRuleActionFixedResponse;
        forward?: outputs.elasticloadbalancingv2.ListenerRuleActionForward;
        order: number;
        redirect?: outputs.elasticloadbalancingv2.ListenerRuleActionRedirect;
        targetGroupArn?: string;
        type: string;
    }

    export interface ListenerRuleActionAuthenticateCognito {
        authenticationRequestExtraParams?: {[key: string]: string};
        onUnauthenticatedRequest: string;
        scope: string;
        sessionCookieName: string;
        sessionTimeout: number;
        userPoolArn: string;
        userPoolClientId: string;
        userPoolDomain: string;
    }

    export interface ListenerRuleActionAuthenticateOidc {
        authenticationRequestExtraParams?: {[key: string]: string};
        authorizationEndpoint: string;
        clientId: string;
        clientSecret: string;
        issuer: string;
        onUnauthenticatedRequest: string;
        scope: string;
        sessionCookieName: string;
        sessionTimeout: number;
        tokenEndpoint: string;
        userInfoEndpoint: string;
    }

    export interface ListenerRuleActionFixedResponse {
        contentType: string;
        messageBody?: string;
        statusCode: string;
    }

    export interface ListenerRuleActionForward {
        stickiness?: outputs.elasticloadbalancingv2.ListenerRuleActionForwardStickiness;
        targetGroups: outputs.elasticloadbalancingv2.ListenerRuleActionForwardTargetGroup[];
    }

    export interface ListenerRuleActionForwardStickiness {
        duration: number;
        enabled?: boolean;
    }

    export interface ListenerRuleActionForwardTargetGroup {
        arn: string;
        weight?: number;
    }

    export interface ListenerRuleActionRedirect {
        host?: string;
        path?: string;
        port?: string;
        protocol?: string;
        query?: string;
        statusCode: string;
    }

    export interface ListenerRuleCondition {
        hostHeader?: outputs.elasticloadbalancingv2.ListenerRuleConditionHostHeader;
        httpHeader?: outputs.elasticloadbalancingv2.ListenerRuleConditionHttpHeader;
        httpRequestMethod?: outputs.elasticloadbalancingv2.ListenerRuleConditionHttpRequestMethod;
        pathPattern?: outputs.elasticloadbalancingv2.ListenerRuleConditionPathPattern;
        queryStrings?: outputs.elasticloadbalancingv2.ListenerRuleConditionQueryString[];
        sourceIp?: outputs.elasticloadbalancingv2.ListenerRuleConditionSourceIp;
    }

    export interface ListenerRuleConditionHostHeader {
        values: string[];
    }

    export interface ListenerRuleConditionHttpHeader {
        httpHeaderName: string;
        values: string[];
    }

    export interface ListenerRuleConditionHttpRequestMethod {
        values: string[];
    }

    export interface ListenerRuleConditionPathPattern {
        values: string[];
    }

    export interface ListenerRuleConditionQueryString {
        key?: string;
        value: string;
    }

    export interface ListenerRuleConditionSourceIp {
        values: string[];
    }

    export interface LoadBalancerAccessLogs {
        bucket: string;
        enabled?: boolean;
        prefix?: string;
    }

    export interface LoadBalancerSubnetMapping {
        allocationId?: string;
        privateIpv4Address?: string;
        subnetId: string;
    }

    export interface TargetGroupHealthCheck {
        enabled?: boolean;
        healthyThreshold?: number;
        interval?: number;
        matcher: string;
        path: string;
        port?: string;
        protocol?: string;
        timeout: number;
        unhealthyThreshold?: number;
    }

    export interface TargetGroupStickiness {
        cookieDuration?: number;
        enabled?: boolean;
        type: string;
    }
}

export namespace elasticsearch {
    export interface DomainAdvancedSecurityOptions {
        enabled: boolean;
        internalUserDatabaseEnabled?: boolean;
        masterUserOptions?: outputs.elasticsearch.DomainAdvancedSecurityOptionsMasterUserOptions;
    }

    export interface DomainAdvancedSecurityOptionsMasterUserOptions {
        masterUserArn?: string;
        masterUserName?: string;
        masterUserPassword?: string;
    }

    export interface DomainClusterConfig {
        dedicatedMasterCount?: number;
        dedicatedMasterEnabled?: boolean;
        dedicatedMasterType?: string;
        instanceCount?: number;
        instanceType?: string;
        warmCount?: number;
        warmEnabled?: boolean;
        warmType?: string;
        zoneAwarenessConfig?: outputs.elasticsearch.DomainClusterConfigZoneAwarenessConfig;
        zoneAwarenessEnabled?: boolean;
    }

    export interface DomainClusterConfigZoneAwarenessConfig {
        availabilityZoneCount?: number;
    }

    export interface DomainCognitoOptions {
        enabled?: boolean;
        identityPoolId: string;
        roleArn: string;
        userPoolId: string;
    }

    export interface DomainDomainEndpointOptions {
        enforceHttps: boolean;
        tlsSecurityPolicy: string;
    }

    export interface DomainEbsOptions {
        ebsEnabled: boolean;
        iops?: number;
        volumeSize?: number;
        volumeType: string;
    }

    export interface DomainEncryptAtRest {
        enabled: boolean;
        kmsKeyId: string;
    }

    export interface DomainLogPublishingOption {
        cloudwatchLogGroupArn: string;
        enabled?: boolean;
        logType: string;
    }

    export interface DomainNodeToNodeEncryption {
        enabled: boolean;
    }

    export interface DomainSnapshotOptions {
        automatedSnapshotStartHour: number;
    }

    export interface DomainVpcOptions {
        availabilityZones: string[];
        securityGroupIds?: string[];
        subnetIds?: string[];
        vpcId: string;
    }

    export interface GetDomainAdvancedSecurityOption {
        enabled: boolean;
        internalUserDatabaseEnabled: boolean;
    }

    export interface GetDomainClusterConfig {
        dedicatedMasterCount: number;
        dedicatedMasterEnabled: boolean;
        dedicatedMasterType: string;
        instanceCount: number;
        instanceType: string;
        warmCount: number;
        warmEnabled?: boolean;
        warmType: string;
        zoneAwarenessConfigs: outputs.elasticsearch.GetDomainClusterConfigZoneAwarenessConfig[];
        zoneAwarenessEnabled: boolean;
    }

    export interface GetDomainClusterConfigZoneAwarenessConfig {
        availabilityZoneCount: number;
    }

    export interface GetDomainCognitoOption {
        enabled: boolean;
        identityPoolId: string;
        roleArn: string;
        userPoolId: string;
    }

    export interface GetDomainEbsOption {
        ebsEnabled: boolean;
        iops: number;
        volumeSize: number;
        volumeType: string;
    }

    export interface GetDomainEncryptionAtRest {
        enabled: boolean;
        kmsKeyId: string;
    }

    export interface GetDomainLogPublishingOption {
        cloudwatchLogGroupArn: string;
        enabled: boolean;
        logType: string;
    }

    export interface GetDomainNodeToNodeEncryption {
        enabled: boolean;
    }

    export interface GetDomainSnapshotOption {
        automatedSnapshotStartHour: number;
    }

    export interface GetDomainVpcOption {
        availabilityZones: string[];
        securityGroupIds: string[];
        subnetIds: string[];
        vpcId: string;
    }
}

export namespace elastictranscoder {
    export interface PipelineContentConfig {
        bucket: string;
        storageClass?: string;
    }

    export interface PipelineContentConfigPermission {
        accesses?: string[];
        grantee?: string;
        granteeType?: string;
    }

    export interface PipelineNotifications {
        completed?: string;
        error?: string;
        progressing?: string;
        warning?: string;
    }

    export interface PipelineThumbnailConfig {
        bucket: string;
        storageClass?: string;
    }

    export interface PipelineThumbnailConfigPermission {
        accesses?: string[];
        grantee?: string;
        granteeType?: string;
    }

    export interface PresetAudio {
        audioPackingMode?: string;
        bitRate?: string;
        channels?: string;
        codec?: string;
        sampleRate?: string;
    }

    export interface PresetAudioCodecOptions {
        bitDepth?: string;
        bitOrder?: string;
        profile?: string;
        signed?: string;
    }

    export interface PresetThumbnails {
        aspectRatio?: string;
        format?: string;
        interval?: string;
        maxHeight?: string;
        maxWidth?: string;
        paddingPolicy?: string;
        resolution?: string;
        sizingPolicy?: string;
    }

    export interface PresetVideo {
        aspectRatio?: string;
        bitRate?: string;
        codec?: string;
        displayAspectRatio?: string;
        fixedGop?: string;
        frameRate?: string;
        keyframesMaxDist?: string;
        maxFrameRate: string;
        maxHeight?: string;
        maxWidth?: string;
        paddingPolicy?: string;
        resolution?: string;
        sizingPolicy?: string;
    }

    export interface PresetVideoWatermark {
        horizontalAlign?: string;
        horizontalOffset?: string;
        id?: string;
        maxHeight?: string;
        maxWidth?: string;
        opacity?: string;
        sizingPolicy?: string;
        target?: string;
        verticalAlign?: string;
        verticalOffset?: string;
    }
}

export namespace elb {
    export interface GetLoadBalancerAccessLogs {
        bucket: string;
        bucketPrefix: string;
        enabled: boolean;
        interval: number;
    }

    export interface GetLoadBalancerHealthCheck {
        healthyThreshold: number;
        interval: number;
        target: string;
        timeout: number;
        unhealthyThreshold: number;
    }

    export interface GetLoadBalancerListener {
        instancePort: number;
        instanceProtocol: string;
        lbPort: number;
        lbProtocol: string;
        sslCertificateId: string;
    }

    export interface LoadBalancerAccessLogs {
        bucket: string;
        bucketPrefix?: string;
        enabled?: boolean;
        interval?: number;
    }

    export interface LoadBalancerHealthCheck {
        healthyThreshold: number;
        interval: number;
        target: string;
        timeout: number;
        unhealthyThreshold: number;
    }

    export interface LoadBalancerListener {
        instancePort: number;
        instanceProtocol: string;
        lbPort: number;
        lbProtocol: string;
        sslCertificateId?: string;
    }

    export interface LoadBalancerPolicyPolicyAttribute {
        name?: string;
        value?: string;
    }

    export interface SslNegotiationPolicyAttribute {
        name: string;
        value: string;
    }
}

export namespace emr {
    export interface ClusterBootstrapAction {
        args?: string[];
        name: string;
        path: string;
    }

    export interface ClusterCoreInstanceGroup {
        autoscalingPolicy?: string;
        bidPrice?: string;
        ebsConfigs: outputs.emr.ClusterCoreInstanceGroupEbsConfig[];
        id: string;
        instanceCount?: number;
        instanceType: string;
        name?: string;
    }

    export interface ClusterCoreInstanceGroupEbsConfig {
        iops?: number;
        size: number;
        type: string;
        volumesPerInstance?: number;
    }

    export interface ClusterEc2Attributes {
        additionalMasterSecurityGroups?: string;
        additionalSlaveSecurityGroups?: string;
        emrManagedMasterSecurityGroup: string;
        emrManagedSlaveSecurityGroup: string;
        instanceProfile: string;
        keyName?: string;
        serviceAccessSecurityGroup: string;
        subnetId?: string;
    }

    export interface ClusterKerberosAttributes {
        adDomainJoinPassword?: string;
        adDomainJoinUser?: string;
        crossRealmTrustPrincipalPassword?: string;
        kdcAdminPassword: string;
        realm: string;
    }

    export interface ClusterMasterInstanceGroup {
        bidPrice?: string;
        ebsConfigs: outputs.emr.ClusterMasterInstanceGroupEbsConfig[];
        id: string;
        instanceCount?: number;
        instanceType: string;
        name?: string;
    }

    export interface ClusterMasterInstanceGroupEbsConfig {
        iops?: number;
        size: number;
        type: string;
        volumesPerInstance?: number;
    }

    export interface ClusterStep {
        actionOnFailure: string;
        hadoopJarStep: outputs.emr.ClusterStepHadoopJarStep;
        name: string;
    }

    export interface ClusterStepHadoopJarStep {
        args?: string[];
        jar: string;
        mainClass?: string;
        properties?: {[key: string]: string};
    }

    export interface InstanceGroupEbsConfig {
        iops?: number;
        size: number;
        type: string;
        volumesPerInstance?: number;
    }
}

export namespace fsx {
    export interface WindowsFileSystemSelfManagedActiveDirectory {
        dnsIps: string[];
        domainName: string;
        fileSystemAdministratorsGroup?: string;
        organizationalUnitDistinguishedName?: string;
        password: string;
        username: string;
    }
}

export namespace gamelift {
    export interface AliasRoutingStrategy {
        fleetId?: string;
        message?: string;
        type: string;
    }

    export interface BuildStorageLocation {
        bucket: string;
        key: string;
        roleArn: string;
    }

    export interface FleetEc2InboundPermission {
        fromPort: number;
        ipRange: string;
        protocol: string;
        toPort: number;
    }

    export interface FleetResourceCreationLimitPolicy {
        newGameSessionsPerCreator?: number;
        policyPeriodInMinutes?: number;
    }

    export interface FleetRuntimeConfiguration {
        gameSessionActivationTimeoutSeconds?: number;
        maxConcurrentGameSessionActivations?: number;
        serverProcesses?: outputs.gamelift.FleetRuntimeConfigurationServerProcess[];
    }

    export interface FleetRuntimeConfigurationServerProcess {
        concurrentExecutions: number;
        launchPath: string;
        parameters?: string;
    }

    export interface GameSessionQueuePlayerLatencyPolicy {
        maximumIndividualPlayerLatencyMilliseconds: number;
        policyDurationSeconds?: number;
    }
}

export namespace glacier {
    export interface VaultNotification {
        events: string[];
        snsTopic: string;
    }
}

export namespace globalaccelerator {
    export interface AcceleratorAttributes {
        flowLogsEnabled?: boolean;
        flowLogsS3Bucket?: string;
        flowLogsS3Prefix?: string;
    }

    export interface AcceleratorIpSet {
        ipAddresses: string[];
        ipFamily: string;
    }

    export interface EndpointGroupEndpointConfiguration {
        endpointId?: string;
        weight?: number;
    }

    export interface ListenerPortRange {
        fromPort?: number;
        toPort?: number;
    }
}

export namespace glue {
    export interface CatalogTablePartitionKey {
        comment?: string;
        name: string;
        type?: string;
    }

    export interface CatalogTableStorageDescriptor {
        bucketColumns?: string[];
        columns?: outputs.glue.CatalogTableStorageDescriptorColumn[];
        compressed?: boolean;
        inputFormat?: string;
        location?: string;
        numberOfBuckets?: number;
        outputFormat?: string;
        parameters?: {[key: string]: string};
        serDeInfo?: outputs.glue.CatalogTableStorageDescriptorSerDeInfo;
        skewedInfo?: outputs.glue.CatalogTableStorageDescriptorSkewedInfo;
        sortColumns?: outputs.glue.CatalogTableStorageDescriptorSortColumn[];
        storedAsSubDirectories?: boolean;
    }

    export interface CatalogTableStorageDescriptorColumn {
        comment?: string;
        name: string;
        type?: string;
    }

    export interface CatalogTableStorageDescriptorSerDeInfo {
        name?: string;
        parameters?: {[key: string]: string};
        serializationLibrary?: string;
    }

    export interface CatalogTableStorageDescriptorSkewedInfo {
        skewedColumnNames?: string[];
        skewedColumnValueLocationMaps?: {[key: string]: string};
        skewedColumnValues?: string[];
    }

    export interface CatalogTableStorageDescriptorSortColumn {
        column: string;
        sortOrder: number;
    }

    export interface ClassifierCsvClassifier {
        allowSingleColumn?: boolean;
        containsHeader?: string;
        delimiter?: string;
        disableValueTrimming?: boolean;
        headers?: string[];
        quoteSymbol?: string;
    }

    export interface ClassifierGrokClassifier {
        classification: string;
        customPatterns?: string;
        grokPattern: string;
    }

    export interface ClassifierJsonClassifier {
        jsonPath: string;
    }

    export interface ClassifierXmlClassifier {
        classification: string;
        rowTag: string;
    }

    export interface ConnectionPhysicalConnectionRequirements {
        availabilityZone?: string;
        securityGroupIdLists?: string[];
        subnetId?: string;
    }

    export interface CrawlerCatalogTarget {
        databaseName: string;
        tables: string[];
    }

    export interface CrawlerDynamodbTarget {
        path: string;
    }

    export interface CrawlerJdbcTarget {
        connectionName: string;
        exclusions?: string[];
        path: string;
    }

    export interface CrawlerS3Target {
        exclusions?: string[];
        path: string;
    }

    export interface CrawlerSchemaChangePolicy {
        deleteBehavior?: string;
        updateBehavior?: string;
    }

    export interface GetScriptDagEdge {
        source: string;
        target: string;
        targetParameter?: string;
    }

    export interface GetScriptDagNode {
        args: outputs.glue.GetScriptDagNodeArg[];
        id: string;
        lineNumber?: number;
        nodeType: string;
    }

    export interface GetScriptDagNodeArg {
        name: string;
        param?: boolean;
        value: string;
    }

    export interface JobCommand {
        name?: string;
        pythonVersion: string;
        scriptLocation: string;
    }

    export interface JobExecutionProperty {
        maxConcurrentRuns?: number;
    }

    export interface JobNotificationProperty {
        notifyDelayAfter?: number;
    }

    export interface SecurityConfigurationEncryptionConfiguration {
        cloudwatchEncryption: outputs.glue.SecurityConfigurationEncryptionConfigurationCloudwatchEncryption;
        jobBookmarksEncryption: outputs.glue.SecurityConfigurationEncryptionConfigurationJobBookmarksEncryption;
        s3Encryption: outputs.glue.SecurityConfigurationEncryptionConfigurationS3Encryption;
    }

    export interface SecurityConfigurationEncryptionConfigurationCloudwatchEncryption {
        cloudwatchEncryptionMode?: string;
        kmsKeyArn?: string;
    }

    export interface SecurityConfigurationEncryptionConfigurationJobBookmarksEncryption {
        jobBookmarksEncryptionMode?: string;
        kmsKeyArn?: string;
    }

    export interface SecurityConfigurationEncryptionConfigurationS3Encryption {
        kmsKeyArn?: string;
        s3EncryptionMode?: string;
    }

    export interface TriggerAction {
        arguments?: {[key: string]: string};
        crawlerName?: string;
        jobName?: string;
        timeout?: number;
    }

    export interface TriggerPredicate {
        conditions: outputs.glue.TriggerPredicateCondition[];
        logical?: string;
    }

    export interface TriggerPredicateCondition {
        crawlState?: string;
        crawlerName?: string;
        jobName?: string;
        logicalOperator?: string;
        state?: string;
    }
}

export namespace iam {
    export interface GetGroupUser {
        arn: string;
        path: string;
        userId: string;
        userName: string;
    }

    export interface GetPolicyDocumentStatement {
        actions?: string[];
        conditions?: outputs.iam.GetPolicyDocumentStatementCondition[];
        effect?: string;
        notActions?: string[];
        notPrincipals?: outputs.iam.GetPolicyDocumentStatementNotPrincipal[];
        notResources?: string[];
        principals?: outputs.iam.GetPolicyDocumentStatementPrincipal[];
        resources?: string[];
        sid?: string;
    }

    export interface GetPolicyDocumentStatementCondition {
        test: string;
        values: string[];
        variable: string;
    }

    export interface GetPolicyDocumentStatementNotPrincipal {
        identifiers: string[];
        type: string;
    }

    export interface GetPolicyDocumentStatementPrincipal {
        identifiers: string[];
        type: string;
    }
}

export namespace iot {
    export interface ThingTypeProperties {
        description?: string;
        searchableAttributes: string[];
    }

    export interface TopicRuleCloudwatchAlarm {
        alarmName: string;
        roleArn: string;
        stateReason: string;
        stateValue: string;
    }

    export interface TopicRuleCloudwatchMetric {
        metricName: string;
        metricNamespace: string;
        metricTimestamp?: string;
        metricUnit: string;
        metricValue: string;
        roleArn: string;
    }

    export interface TopicRuleDynamodb {
        hashKeyField: string;
        hashKeyType?: string;
        hashKeyValue: string;
        operation?: string;
        payloadField?: string;
        rangeKeyField?: string;
        rangeKeyType?: string;
        rangeKeyValue?: string;
        roleArn: string;
        tableName: string;
    }

    export interface TopicRuleDynamodbv2 {
        putItem?: outputs.iot.TopicRuleDynamodbv2PutItem;
        roleArn: string;
    }

    export interface TopicRuleDynamodbv2PutItem {
        tableName: string;
    }

    export interface TopicRuleElasticsearch {
        endpoint: string;
        id: string;
        index: string;
        roleArn: string;
        type: string;
    }

    export interface TopicRuleErrorAction {
        cloudwatchAlarm?: outputs.iot.TopicRuleErrorActionCloudwatchAlarm;
        cloudwatchMetric?: outputs.iot.TopicRuleErrorActionCloudwatchMetric;
        dynamodb?: outputs.iot.TopicRuleErrorActionDynamodb;
        dynamodbv2?: outputs.iot.TopicRuleErrorActionDynamodbv2;
        elasticsearch?: outputs.iot.TopicRuleErrorActionElasticsearch;
        firehose?: outputs.iot.TopicRuleErrorActionFirehose;
        iotAnalytics?: outputs.iot.TopicRuleErrorActionIotAnalytics;
        iotEvents?: outputs.iot.TopicRuleErrorActionIotEvents;
        kinesis?: outputs.iot.TopicRuleErrorActionKinesis;
        lambda?: outputs.iot.TopicRuleErrorActionLambda;
        republish?: outputs.iot.TopicRuleErrorActionRepublish;
        s3?: outputs.iot.TopicRuleErrorActionS3;
        sns?: outputs.iot.TopicRuleErrorActionSns;
        sqs?: outputs.iot.TopicRuleErrorActionSqs;
        stepFunctions?: outputs.iot.TopicRuleErrorActionStepFunctions;
    }

    export interface TopicRuleErrorActionCloudwatchAlarm {
        alarmName: string;
        roleArn: string;
        stateReason: string;
        stateValue: string;
    }

    export interface TopicRuleErrorActionCloudwatchMetric {
        metricName: string;
        metricNamespace: string;
        metricTimestamp?: string;
        metricUnit: string;
        metricValue: string;
        roleArn: string;
    }

    export interface TopicRuleErrorActionDynamodb {
        hashKeyField: string;
        hashKeyType?: string;
        hashKeyValue: string;
        operation?: string;
        payloadField?: string;
        rangeKeyField?: string;
        rangeKeyType?: string;
        rangeKeyValue?: string;
        roleArn: string;
        tableName: string;
    }

    export interface TopicRuleErrorActionDynamodbv2 {
        putItem?: outputs.iot.TopicRuleErrorActionDynamodbv2PutItem;
        roleArn: string;
    }

    export interface TopicRuleErrorActionDynamodbv2PutItem {
        tableName: string;
    }

    export interface TopicRuleErrorActionElasticsearch {
        endpoint: string;
        id: string;
        index: string;
        roleArn: string;
        type: string;
    }

    export interface TopicRuleErrorActionFirehose {
        deliveryStreamName: string;
        roleArn: string;
        separator?: string;
    }

    export interface TopicRuleErrorActionIotAnalytics {
        channelName: string;
        roleArn: string;
    }

    export interface TopicRuleErrorActionIotEvents {
        inputName: string;
        messageId?: string;
        roleArn: string;
    }

    export interface TopicRuleErrorActionKinesis {
        partitionKey?: string;
        roleArn: string;
        streamName: string;
    }

    export interface TopicRuleErrorActionLambda {
        functionArn: string;
    }

    export interface TopicRuleErrorActionRepublish {
        qos?: number;
        roleArn: string;
        topic: string;
    }

    export interface TopicRuleErrorActionS3 {
        bucketName: string;
        key: string;
        roleArn: string;
    }

    export interface TopicRuleErrorActionSns {
        messageFormat?: string;
        roleArn: string;
        targetArn: string;
    }

    export interface TopicRuleErrorActionSqs {
        queueUrl: string;
        roleArn: string;
        useBase64: boolean;
    }

    export interface TopicRuleErrorActionStepFunctions {
        executionNamePrefix?: string;
        roleArn: string;
        stateMachineName: string;
    }

    export interface TopicRuleFirehose {
        deliveryStreamName: string;
        roleArn: string;
        separator?: string;
    }

    export interface TopicRuleIotAnalytic {
        channelName: string;
        roleArn: string;
    }

    export interface TopicRuleIotEvent {
        inputName: string;
        messageId?: string;
        roleArn: string;
    }

    export interface TopicRuleKinesis {
        partitionKey?: string;
        roleArn: string;
        streamName: string;
    }

    export interface TopicRuleLambda {
        functionArn: string;
    }

    export interface TopicRuleRepublish {
        qos?: number;
        roleArn: string;
        topic: string;
    }

    export interface TopicRuleS3 {
        bucketName: string;
        key: string;
        roleArn: string;
    }

    export interface TopicRuleSns {
        messageFormat?: string;
        roleArn: string;
        targetArn: string;
    }

    export interface TopicRuleSqs {
        queueUrl: string;
        roleArn: string;
        useBase64: boolean;
    }

    export interface TopicRuleStepFunction {
        executionNamePrefix?: string;
        roleArn: string;
        stateMachineName: string;
    }
}

export namespace kinesis {
    export interface AnalyticsApplicationCloudwatchLoggingOptions {
        id: string;
        logStreamArn: string;
        roleArn: string;
    }

    export interface AnalyticsApplicationInputs {
        id: string;
        kinesisFirehose?: outputs.kinesis.AnalyticsApplicationInputsKinesisFirehose;
        kinesisStream?: outputs.kinesis.AnalyticsApplicationInputsKinesisStream;
        namePrefix: string;
        parallelism?: outputs.kinesis.AnalyticsApplicationInputsParallelism;
        processingConfiguration?: outputs.kinesis.AnalyticsApplicationInputsProcessingConfiguration;
        schema: outputs.kinesis.AnalyticsApplicationInputsSchema;
        startingPositionConfigurations: outputs.kinesis.AnalyticsApplicationInputsStartingPositionConfiguration[];
        streamNames: string[];
    }

    export interface AnalyticsApplicationInputsKinesisFirehose {
        resourceArn: string;
        roleArn: string;
    }

    export interface AnalyticsApplicationInputsKinesisStream {
        resourceArn: string;
        roleArn: string;
    }

    export interface AnalyticsApplicationInputsParallelism {
        count: number;
    }

    export interface AnalyticsApplicationInputsProcessingConfiguration {
        lambda: outputs.kinesis.AnalyticsApplicationInputsProcessingConfigurationLambda;
    }

    export interface AnalyticsApplicationInputsProcessingConfigurationLambda {
        resourceArn: string;
        roleArn: string;
    }

    export interface AnalyticsApplicationInputsSchema {
        recordColumns: outputs.kinesis.AnalyticsApplicationInputsSchemaRecordColumn[];
        recordEncoding?: string;
        recordFormat: outputs.kinesis.AnalyticsApplicationInputsSchemaRecordFormat;
    }

    export interface AnalyticsApplicationInputsSchemaRecordColumn {
        mapping?: string;
        name: string;
        sqlType: string;
    }

    export interface AnalyticsApplicationInputsSchemaRecordFormat {
        mappingParameters?: outputs.kinesis.AnalyticsApplicationInputsSchemaRecordFormatMappingParameters;
        recordFormatType: string;
    }

    export interface AnalyticsApplicationInputsSchemaRecordFormatMappingParameters {
        csv?: outputs.kinesis.AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv;
        json?: outputs.kinesis.AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson;
    }

    export interface AnalyticsApplicationInputsSchemaRecordFormatMappingParametersCsv {
        recordColumnDelimiter: string;
        recordRowDelimiter: string;
    }

    export interface AnalyticsApplicationInputsSchemaRecordFormatMappingParametersJson {
        recordRowPath: string;
    }

    export interface AnalyticsApplicationInputsStartingPositionConfiguration {
        startingPosition: string;
    }

    export interface AnalyticsApplicationOutput {
        id: string;
        kinesisFirehose?: outputs.kinesis.AnalyticsApplicationOutputKinesisFirehose;
        kinesisStream?: outputs.kinesis.AnalyticsApplicationOutputKinesisStream;
        lambda?: outputs.kinesis.AnalyticsApplicationOutputLambda;
        name: string;
        schema: outputs.kinesis.AnalyticsApplicationOutputSchema;
    }

    export interface AnalyticsApplicationOutputKinesisFirehose {
        resourceArn: string;
        roleArn: string;
    }

    export interface AnalyticsApplicationOutputKinesisStream {
        resourceArn: string;
        roleArn: string;
    }

    export interface AnalyticsApplicationOutputLambda {
        resourceArn: string;
        roleArn: string;
    }

    export interface AnalyticsApplicationOutputSchema {
        recordFormatType?: string;
    }

    export interface AnalyticsApplicationReferenceDataSources {
        id: string;
        s3: outputs.kinesis.AnalyticsApplicationReferenceDataSourcesS3;
        schema: outputs.kinesis.AnalyticsApplicationReferenceDataSourcesSchema;
        tableName: string;
    }

    export interface AnalyticsApplicationReferenceDataSourcesS3 {
        bucketArn: string;
        fileKey: string;
        roleArn: string;
    }

    export interface AnalyticsApplicationReferenceDataSourcesSchema {
        recordColumns: outputs.kinesis.AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn[];
        recordEncoding?: string;
        recordFormat: outputs.kinesis.AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat;
    }

    export interface AnalyticsApplicationReferenceDataSourcesSchemaRecordColumn {
        mapping?: string;
        name: string;
        sqlType: string;
    }

    export interface AnalyticsApplicationReferenceDataSourcesSchemaRecordFormat {
        mappingParameters?: outputs.kinesis.AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters;
        recordFormatType: string;
    }

    export interface AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParameters {
        csv?: outputs.kinesis.AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv;
        json?: outputs.kinesis.AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson;
    }

    export interface AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersCsv {
        recordColumnDelimiter: string;
        recordRowDelimiter: string;
    }

    export interface AnalyticsApplicationReferenceDataSourcesSchemaRecordFormatMappingParametersJson {
        recordRowPath: string;
    }

    export interface FirehoseDeliveryStreamElasticsearchConfiguration {
        bufferingInterval?: number;
        bufferingSize?: number;
        cloudwatchLoggingOptions: outputs.kinesis.FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions;
        domainArn: string;
        indexName: string;
        indexRotationPeriod?: string;
        processingConfiguration?: outputs.kinesis.FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration;
        retryDuration?: number;
        roleArn: string;
        s3BackupMode?: string;
        typeName?: string;
    }

    export interface FirehoseDeliveryStreamElasticsearchConfigurationCloudwatchLoggingOptions {
        enabled?: boolean;
        logGroupName?: string;
        logStreamName?: string;
    }

    export interface FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfiguration {
        enabled?: boolean;
        processors?: outputs.kinesis.FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor[];
    }

    export interface FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessor {
        parameters?: outputs.kinesis.FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter[];
        type: string;
    }

    export interface FirehoseDeliveryStreamElasticsearchConfigurationProcessingConfigurationProcessorParameter {
        parameterName: string;
        parameterValue: string;
    }

    export interface FirehoseDeliveryStreamExtendedS3Configuration {
        bucketArn: string;
        bufferInterval?: number;
        bufferSize?: number;
        cloudwatchLoggingOptions: outputs.kinesis.FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions;
        compressionFormat?: string;
        dataFormatConversionConfiguration?: outputs.kinesis.FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration;
        errorOutputPrefix?: string;
        kmsKeyArn?: string;
        prefix?: string;
        processingConfiguration?: outputs.kinesis.FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration;
        roleArn: string;
        s3BackupConfiguration?: outputs.kinesis.FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration;
        s3BackupMode?: string;
    }

    export interface FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions {
        enabled?: boolean;
        logGroupName?: string;
        logStreamName?: string;
    }

    export interface FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration {
        enabled?: boolean;
        inputFormatConfiguration: outputs.kinesis.FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration;
        outputFormatConfiguration: outputs.kinesis.FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration;
        schemaConfiguration: outputs.kinesis.FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration;
    }

    export interface FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfiguration {
        deserializer: outputs.kinesis.FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer;
    }

    export interface FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializer {
        hiveJsonSerDe?: outputs.kinesis.FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe;
        openXJsonSerDe?: outputs.kinesis.FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe;
    }

    export interface FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerHiveJsonSerDe {
        timestampFormats?: string[];
    }

    export interface FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationInputFormatConfigurationDeserializerOpenXJsonSerDe {
        caseInsensitive?: boolean;
        columnToJsonKeyMappings?: {[key: string]: string};
        convertDotsInJsonKeysToUnderscores?: boolean;
    }

    export interface FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfiguration {
        serializer: outputs.kinesis.FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer;
    }

    export interface FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializer {
        orcSerDe?: outputs.kinesis.FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe;
        parquetSerDe?: outputs.kinesis.FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe;
    }

    export interface FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerOrcSerDe {
        blockSizeBytes?: number;
        bloomFilterColumns?: string[];
        bloomFilterFalsePositiveProbability?: number;
        compression?: string;
        dictionaryKeyThreshold?: number;
        enablePadding?: boolean;
        formatVersion?: string;
        paddingTolerance?: number;
        rowIndexStride?: number;
        stripeSizeBytes?: number;
    }

    export interface FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationOutputFormatConfigurationSerializerParquetSerDe {
        blockSizeBytes?: number;
        compression?: string;
        enableDictionaryCompression?: boolean;
        maxPaddingBytes?: number;
        pageSizeBytes?: number;
        writerVersion?: string;
    }

    export interface FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfigurationSchemaConfiguration {
        catalogId: string;
        databaseName: string;
        region: string;
        roleArn: string;
        tableName: string;
        versionId?: string;
    }

    export interface FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration {
        enabled?: boolean;
        processors?: outputs.kinesis.FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor[];
    }

    export interface FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessor {
        parameters?: outputs.kinesis.FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter[];
        type: string;
    }

    export interface FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfigurationProcessorParameter {
        parameterName: string;
        parameterValue: string;
    }

    export interface FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration {
        bucketArn: string;
        bufferInterval?: number;
        bufferSize?: number;
        cloudwatchLoggingOptions: outputs.kinesis.FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions;
        compressionFormat?: string;
        kmsKeyArn?: string;
        prefix?: string;
        roleArn: string;
    }

    export interface FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfigurationCloudwatchLoggingOptions {
        enabled?: boolean;
        logGroupName?: string;
        logStreamName?: string;
    }

    export interface FirehoseDeliveryStreamKinesisSourceConfiguration {
        kinesisStreamArn: string;
        roleArn: string;
    }

    export interface FirehoseDeliveryStreamRedshiftConfiguration {
        cloudwatchLoggingOptions: outputs.kinesis.FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions;
        clusterJdbcurl: string;
        copyOptions?: string;
        dataTableColumns?: string;
        dataTableName: string;
        password: string;
        processingConfiguration?: outputs.kinesis.FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration;
        retryDuration?: number;
        roleArn: string;
        s3BackupConfiguration?: outputs.kinesis.FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration;
        s3BackupMode?: string;
        username: string;
    }

    export interface FirehoseDeliveryStreamRedshiftConfigurationCloudwatchLoggingOptions {
        enabled?: boolean;
        logGroupName?: string;
        logStreamName?: string;
    }

    export interface FirehoseDeliveryStreamRedshiftConfigurationProcessingConfiguration {
        enabled?: boolean;
        processors?: outputs.kinesis.FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor[];
    }

    export interface FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessor {
        parameters?: outputs.kinesis.FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter[];
        type: string;
    }

    export interface FirehoseDeliveryStreamRedshiftConfigurationProcessingConfigurationProcessorParameter {
        parameterName: string;
        parameterValue: string;
    }

    export interface FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfiguration {
        bucketArn: string;
        bufferInterval?: number;
        bufferSize?: number;
        cloudwatchLoggingOptions: outputs.kinesis.FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions;
        compressionFormat?: string;
        kmsKeyArn?: string;
        prefix?: string;
        roleArn: string;
    }

    export interface FirehoseDeliveryStreamRedshiftConfigurationS3BackupConfigurationCloudwatchLoggingOptions {
        enabled?: boolean;
        logGroupName?: string;
        logStreamName?: string;
    }

    export interface FirehoseDeliveryStreamS3Configuration {
        bucketArn: string;
        bufferInterval?: number;
        bufferSize?: number;
        cloudwatchLoggingOptions: outputs.kinesis.FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptions;
        compressionFormat?: string;
        kmsKeyArn?: string;
        prefix?: string;
        roleArn: string;
    }

    export interface FirehoseDeliveryStreamS3ConfigurationCloudwatchLoggingOptions {
        enabled?: boolean;
        logGroupName?: string;
        logStreamName?: string;
    }

    export interface FirehoseDeliveryStreamServerSideEncryption {
        enabled?: boolean;
    }

    export interface FirehoseDeliveryStreamSplunkConfiguration {
        cloudwatchLoggingOptions: outputs.kinesis.FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions;
        hecAcknowledgmentTimeout?: number;
        hecEndpoint: string;
        hecEndpointType?: string;
        hecToken: string;
        processingConfiguration?: outputs.kinesis.FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration;
        retryDuration?: number;
        s3BackupMode?: string;
    }

    export interface FirehoseDeliveryStreamSplunkConfigurationCloudwatchLoggingOptions {
        enabled?: boolean;
        logGroupName?: string;
        logStreamName?: string;
    }

    export interface FirehoseDeliveryStreamSplunkConfigurationProcessingConfiguration {
        enabled?: boolean;
        processors?: outputs.kinesis.FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor[];
    }

    export interface FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessor {
        parameters?: outputs.kinesis.FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter[];
        type: string;
    }

    export interface FirehoseDeliveryStreamSplunkConfigurationProcessingConfigurationProcessorParameter {
        parameterName: string;
        parameterValue: string;
    }
}

export namespace kms {
    export interface GetSecretSecret {
        context?: {[key: string]: string};
        grantTokens?: string[];
        name: string;
        payload: string;
    }

    export interface GetSecretsSecret {
        context?: {[key: string]: string};
        grantTokens?: string[];
        name: string;
        payload: string;
    }

    export interface GrantConstraint {
        encryptionContextEquals?: {[key: string]: string};
        encryptionContextSubset?: {[key: string]: string};
    }
}

export namespace lambda {
    export interface AliasRoutingConfig {
        additionalVersionWeights?: {[key: string]: number};
    }

    export interface EventSourceMappingDestinationConfig {
        onFailure?: outputs.lambda.EventSourceMappingDestinationConfigOnFailure;
    }

    export interface EventSourceMappingDestinationConfigOnFailure {
        destinationArn: string;
    }

    export interface FunctionDeadLetterConfig {
        targetArn: string;
    }

    export interface FunctionEnvironment {
        variables?: {[key: string]: string};
    }

    export interface FunctionEventInvokeConfigDestinationConfig {
        onFailure?: outputs.lambda.FunctionEventInvokeConfigDestinationConfigOnFailure;
        onSuccess?: outputs.lambda.FunctionEventInvokeConfigDestinationConfigOnSuccess;
    }

    export interface FunctionEventInvokeConfigDestinationConfigOnFailure {
        destination: string;
    }

    export interface FunctionEventInvokeConfigDestinationConfigOnSuccess {
        destination: string;
    }

    export interface FunctionFileSystemConfig {
        arn: string;
        localMountPath: string;
    }

    export interface FunctionTracingConfig {
        mode: string;
    }

    export interface FunctionVpcConfig {
        securityGroupIds: string[];
        subnetIds: string[];
        vpcId: string;
    }

    export interface GetFunctionDeadLetterConfig {
        targetArn: string;
    }

    export interface GetFunctionEnvironment {
        variables: {[key: string]: string};
    }

    export interface GetFunctionFileSystemConfig {
        arn: string;
        localMountPath: string;
    }

    export interface GetFunctionTracingConfig {
        mode: string;
    }

    export interface GetFunctionVpcConfig {
        securityGroupIds: string[];
        subnetIds: string[];
        vpcId: string;
    }
}

export namespace lb {
    export interface GetListenerDefaultAction {
        authenticateCognitos: outputs.lb.GetListenerDefaultActionAuthenticateCognito[];
        authenticateOidcs: outputs.lb.GetListenerDefaultActionAuthenticateOidc[];
        fixedResponses: outputs.lb.GetListenerDefaultActionFixedResponse[];
        order: number;
        redirects: outputs.lb.GetListenerDefaultActionRedirect[];
        targetGroupArn: string;
        type: string;
    }

    export interface GetListenerDefaultActionAuthenticateCognito {
        authenticationRequestExtraParams: {[key: string]: string};
        onUnauthenticatedRequest: string;
        scope: string;
        sessionCookieName: string;
        sessionTimeout: number;
        userPoolArn: string;
        userPoolClientId: string;
        userPoolDomain: string;
    }

    export interface GetListenerDefaultActionAuthenticateOidc {
        authenticationRequestExtraParams: {[key: string]: string};
        authorizationEndpoint: string;
        clientId: string;
        clientSecret: string;
        issuer: string;
        onUnauthenticatedRequest: string;
        scope: string;
        sessionCookieName: string;
        sessionTimeout: number;
        tokenEndpoint: string;
        userInfoEndpoint: string;
    }

    export interface GetListenerDefaultActionFixedResponse {
        contentType: string;
        messageBody: string;
        statusCode: string;
    }

    export interface GetListenerDefaultActionRedirect {
        host: string;
        path: string;
        port: string;
        protocol: string;
        query: string;
        statusCode: string;
    }

    export interface GetLoadBalancerAccessLogs {
        bucket: string;
        enabled: boolean;
        prefix: string;
    }

    export interface GetLoadBalancerSubnetMapping {
        allocationId?: string;
        subnetId: string;
    }

    export interface GetTargetGroupHealthCheck {
        enabled: boolean;
        healthyThreshold: number;
        interval: number;
        matcher: string;
        path: string;
        port: string;
        protocol: string;
        timeout: number;
        unhealthyThreshold: number;
    }

    export interface GetTargetGroupStickiness {
        cookieDuration: number;
        enabled: boolean;
        type: string;
    }

    export interface ListenerDefaultAction {
        authenticateCognito?: outputs.lb.ListenerDefaultActionAuthenticateCognito;
        authenticateOidc?: outputs.lb.ListenerDefaultActionAuthenticateOidc;
        fixedResponse?: outputs.lb.ListenerDefaultActionFixedResponse;
        forward?: outputs.lb.ListenerDefaultActionForward;
        order: number;
        redirect?: outputs.lb.ListenerDefaultActionRedirect;
        targetGroupArn?: string;
        type: string;
    }

    export interface ListenerDefaultActionAuthenticateCognito {
        authenticationRequestExtraParams?: {[key: string]: string};
        onUnauthenticatedRequest: string;
        scope: string;
        sessionCookieName: string;
        sessionTimeout: number;
        userPoolArn: string;
        userPoolClientId: string;
        userPoolDomain: string;
    }

    export interface ListenerDefaultActionAuthenticateOidc {
        authenticationRequestExtraParams?: {[key: string]: string};
        authorizationEndpoint: string;
        clientId: string;
        clientSecret: string;
        issuer: string;
        onUnauthenticatedRequest: string;
        scope: string;
        sessionCookieName: string;
        sessionTimeout: number;
        tokenEndpoint: string;
        userInfoEndpoint: string;
    }

    export interface ListenerDefaultActionFixedResponse {
        contentType: string;
        messageBody?: string;
        statusCode: string;
    }

    export interface ListenerDefaultActionForward {
        stickiness?: outputs.lb.ListenerDefaultActionForwardStickiness;
        targetGroups: outputs.lb.ListenerDefaultActionForwardTargetGroup[];
    }

    export interface ListenerDefaultActionForwardStickiness {
        duration: number;
        enabled?: boolean;
    }

    export interface ListenerDefaultActionForwardTargetGroup {
        arn: string;
        weight?: number;
    }

    export interface ListenerDefaultActionRedirect {
        host?: string;
        path?: string;
        port?: string;
        protocol?: string;
        query?: string;
        statusCode: string;
    }

    export interface ListenerRuleAction {
        authenticateCognito?: outputs.lb.ListenerRuleActionAuthenticateCognito;
        authenticateOidc?: outputs.lb.ListenerRuleActionAuthenticateOidc;
        fixedResponse?: outputs.lb.ListenerRuleActionFixedResponse;
        forward?: outputs.lb.ListenerRuleActionForward;
        order: number;
        redirect?: outputs.lb.ListenerRuleActionRedirect;
        targetGroupArn?: string;
        type: string;
    }

    export interface ListenerRuleActionAuthenticateCognito {
        authenticationRequestExtraParams?: {[key: string]: string};
        onUnauthenticatedRequest: string;
        scope: string;
        sessionCookieName: string;
        sessionTimeout: number;
        userPoolArn: string;
        userPoolClientId: string;
        userPoolDomain: string;
    }

    export interface ListenerRuleActionAuthenticateOidc {
        authenticationRequestExtraParams?: {[key: string]: string};
        authorizationEndpoint: string;
        clientId: string;
        clientSecret: string;
        issuer: string;
        onUnauthenticatedRequest: string;
        scope: string;
        sessionCookieName: string;
        sessionTimeout: number;
        tokenEndpoint: string;
        userInfoEndpoint: string;
    }

    export interface ListenerRuleActionFixedResponse {
        contentType: string;
        messageBody?: string;
        statusCode: string;
    }

    export interface ListenerRuleActionForward {
        stickiness?: outputs.lb.ListenerRuleActionForwardStickiness;
        targetGroups: outputs.lb.ListenerRuleActionForwardTargetGroup[];
    }

    export interface ListenerRuleActionForwardStickiness {
        duration: number;
        enabled?: boolean;
    }

    export interface ListenerRuleActionForwardTargetGroup {
        arn: string;
        weight?: number;
    }

    export interface ListenerRuleActionRedirect {
        host?: string;
        path?: string;
        port?: string;
        protocol?: string;
        query?: string;
        statusCode: string;
    }

    export interface ListenerRuleCondition {
        hostHeader?: outputs.lb.ListenerRuleConditionHostHeader;
        httpHeader?: outputs.lb.ListenerRuleConditionHttpHeader;
        httpRequestMethod?: outputs.lb.ListenerRuleConditionHttpRequestMethod;
        pathPattern?: outputs.lb.ListenerRuleConditionPathPattern;
        queryStrings?: outputs.lb.ListenerRuleConditionQueryString[];
        sourceIp?: outputs.lb.ListenerRuleConditionSourceIp;
    }

    export interface ListenerRuleConditionHostHeader {
        values: string[];
    }

    export interface ListenerRuleConditionHttpHeader {
        httpHeaderName: string;
        values: string[];
    }

    export interface ListenerRuleConditionHttpRequestMethod {
        values: string[];
    }

    export interface ListenerRuleConditionPathPattern {
        values: string[];
    }

    export interface ListenerRuleConditionQueryString {
        key?: string;
        value: string;
    }

    export interface ListenerRuleConditionSourceIp {
        values: string[];
    }

    export interface LoadBalancerAccessLogs {
        bucket: string;
        enabled?: boolean;
        prefix?: string;
    }

    export interface LoadBalancerSubnetMapping {
        allocationId?: string;
        privateIpv4Address?: string;
        subnetId: string;
    }

    export interface TargetGroupHealthCheck {
        enabled?: boolean;
        healthyThreshold?: number;
        interval?: number;
        matcher: string;
        path: string;
        port?: string;
        protocol?: string;
        timeout: number;
        unhealthyThreshold?: number;
    }

    export interface TargetGroupStickiness {
        cookieDuration?: number;
        enabled?: boolean;
        type: string;
    }
}

export namespace macie {
    export interface S3BucketAssociationClassificationType {
        continuous?: string;
        oneTime?: string;
    }
}

export namespace mediaconvert {
    export interface QueueReservationPlanSettings {
        commitment: string;
        renewalType: string;
        reservedSlots: number;
    }
}

export namespace mediapackage {
    export interface ChannelHlsIngest {
        ingestEndpoints: outputs.mediapackage.ChannelHlsIngestIngestEndpoint[];
    }

    export interface ChannelHlsIngestIngestEndpoint {
        password: string;
        url: string;
        username: string;
    }
}

export namespace mq {
    export interface BrokerConfiguration {
        id: string;
        revision: number;
    }

    export interface BrokerEncryptionOptions {
        kmsKeyId: string;
        useAwsOwnedKey?: boolean;
    }

    export interface BrokerInstance {
        consoleUrl: string;
        endpoints: string[];
        ipAddress: string;
    }

    export interface BrokerLogs {
        audit?: boolean;
        general?: boolean;
    }

    export interface BrokerMaintenanceWindowStartTime {
        dayOfWeek: string;
        timeOfDay: string;
        timeZone: string;
    }

    export interface BrokerUser {
        consoleAccess?: boolean;
        groups?: string[];
        password: string;
        username: string;
    }

    export interface GetBrokerConfiguration {
        id: string;
        revision: number;
    }

    export interface GetBrokerEncryptionOption {
        kmsKeyId: string;
        useAwsOwnedKey: boolean;
    }

    export interface GetBrokerInstance {
        consoleUrl: string;
        endpoints: string[];
        ipAddress: string;
    }

    export interface GetBrokerLogs {
        audit: boolean;
        general: boolean;
    }

    export interface GetBrokerMaintenanceWindowStartTime {
        dayOfWeek: string;
        timeOfDay: string;
        timeZone: string;
    }

    export interface GetBrokerUser {
        consoleAccess: boolean;
        groups: string[];
        username: string;
    }
}

export namespace msk {
    export interface ClusterBrokerNodeGroupInfo {
        azDistribution?: string;
        clientSubnets: string[];
        ebsVolumeSize: number;
        instanceType: string;
        securityGroups: string[];
    }

    export interface ClusterClientAuthentication {
        tls?: outputs.msk.ClusterClientAuthenticationTls;
    }

    export interface ClusterClientAuthenticationTls {
        certificateAuthorityArns?: string[];
    }

    export interface ClusterConfigurationInfo {
        arn: string;
        revision: number;
    }

    export interface ClusterEncryptionInfo {
        encryptionAtRestKmsKeyArn: string;
        encryptionInTransit?: outputs.msk.ClusterEncryptionInfoEncryptionInTransit;
    }

    export interface ClusterEncryptionInfoEncryptionInTransit {
        clientBroker?: string;
        inCluster?: boolean;
    }

    export interface ClusterLoggingInfo {
        brokerLogs: outputs.msk.ClusterLoggingInfoBrokerLogs;
    }

    export interface ClusterLoggingInfoBrokerLogs {
        cloudwatchLogs?: outputs.msk.ClusterLoggingInfoBrokerLogsCloudwatchLogs;
        firehose?: outputs.msk.ClusterLoggingInfoBrokerLogsFirehose;
        s3?: outputs.msk.ClusterLoggingInfoBrokerLogsS3;
    }

    export interface ClusterLoggingInfoBrokerLogsCloudwatchLogs {
        enabled: boolean;
        logGroup?: string;
    }

    export interface ClusterLoggingInfoBrokerLogsFirehose {
        deliveryStream?: string;
        enabled: boolean;
    }

    export interface ClusterLoggingInfoBrokerLogsS3 {
        bucket?: string;
        enabled: boolean;
        prefix?: string;
    }

    export interface ClusterOpenMonitoring {
        prometheus: outputs.msk.ClusterOpenMonitoringPrometheus;
    }

    export interface ClusterOpenMonitoringPrometheus {
        jmxExporter?: outputs.msk.ClusterOpenMonitoringPrometheusJmxExporter;
        nodeExporter?: outputs.msk.ClusterOpenMonitoringPrometheusNodeExporter;
    }

    export interface ClusterOpenMonitoringPrometheusJmxExporter {
        enabledInBroker: boolean;
    }

    export interface ClusterOpenMonitoringPrometheusNodeExporter {
        enabledInBroker: boolean;
    }
}

export namespace neptune {
    export interface ClusterParameterGroupParameter {
        applyMethod?: string;
        name: string;
        value: string;
    }

    export interface ParameterGroupParameter {
        applyMethod?: string;
        name: string;
        value: string;
    }
}

export namespace opsworks {
    export interface ApplicationAppSource {
        password?: string;
        revision?: string;
        sshKey?: string;
        type: string;
        url?: string;
        username?: string;
    }

    export interface ApplicationEnvironment {
        key: string;
        secure?: boolean;
        value: string;
    }

    export interface ApplicationSslConfiguration {
        certificate: string;
        chain?: string;
        privateKey: string;
    }

    export interface CustomLayerEbsVolume {
        encrypted?: boolean;
        iops?: number;
        mountPoint: string;
        numberOfDisks: number;
        raidLevel?: string;
        size: number;
        type?: string;
    }

    export interface GangliaLayerEbsVolume {
        encrypted?: boolean;
        iops?: number;
        mountPoint: string;
        numberOfDisks: number;
        raidLevel?: string;
        size: number;
        type?: string;
    }

    export interface HaproxyLayerEbsVolume {
        encrypted?: boolean;
        iops?: number;
        mountPoint: string;
        numberOfDisks: number;
        raidLevel?: string;
        size: number;
        type?: string;
    }

    export interface InstanceEbsBlockDevice {
        deleteOnTermination?: boolean;
        deviceName: string;
        iops: number;
        snapshotId: string;
        volumeSize: number;
        volumeType: string;
    }

    export interface InstanceEphemeralBlockDevice {
        deviceName: string;
        virtualName: string;
    }

    export interface InstanceRootBlockDevice {
        deleteOnTermination?: boolean;
        iops: number;
        volumeSize: number;
        volumeType: string;
    }

    export interface JavaAppLayerEbsVolume {
        encrypted?: boolean;
        iops?: number;
        mountPoint: string;
        numberOfDisks: number;
        raidLevel?: string;
        size: number;
        type?: string;
    }

    export interface MemcachedLayerEbsVolume {
        encrypted?: boolean;
        iops?: number;
        mountPoint: string;
        numberOfDisks: number;
        raidLevel?: string;
        size: number;
        type?: string;
    }

    export interface MysqlLayerEbsVolume {
        encrypted?: boolean;
        iops?: number;
        mountPoint: string;
        numberOfDisks: number;
        raidLevel?: string;
        size: number;
        type?: string;
    }

    export interface NodejsAppLayerEbsVolume {
        encrypted?: boolean;
        iops?: number;
        mountPoint: string;
        numberOfDisks: number;
        raidLevel?: string;
        size: number;
        type?: string;
    }

    export interface PhpAppLayerEbsVolume {
        encrypted?: boolean;
        iops?: number;
        mountPoint: string;
        numberOfDisks: number;
        raidLevel?: string;
        size: number;
        type?: string;
    }

    export interface RailsAppLayerEbsVolume {
        encrypted?: boolean;
        iops?: number;
        mountPoint: string;
        numberOfDisks: number;
        raidLevel?: string;
        size: number;
        type?: string;
    }

    export interface StackCustomCookbooksSource {
        password?: string;
        revision?: string;
        sshKey?: string;
        type: string;
        url: string;
        username?: string;
    }

    export interface StaticWebLayerEbsVolume {
        encrypted?: boolean;
        iops?: number;
        mountPoint: string;
        numberOfDisks: number;
        raidLevel?: string;
        size: number;
        type?: string;
    }
}

export namespace organizations {
    export interface GetOrganizationAccount {
        arn: string;
        email: string;
        id: string;
        name: string;
        status: string;
    }

    export interface GetOrganizationNonMasterAccount {
        arn: string;
        email: string;
        id: string;
        name: string;
        status: string;
    }

    export interface GetOrganizationRoot {
        arn: string;
        id: string;
        name: string;
        policyTypes: outputs.organizations.GetOrganizationRootPolicyType[];
    }

    export interface GetOrganizationRootPolicyType {
        status: string;
        type: string;
    }

    export interface GetOrganizationalUnitsChildren {
        arn: string;
        id: string;
        name: string;
    }

    export interface OrganizationAccount {
        arn: string;
        email: string;
        id: string;
        name: string;
        status: string;
    }

    export interface OrganizationNonMasterAccount {
        arn: string;
        email: string;
        id: string;
        name: string;
        status: string;
    }

    export interface OrganizationRoot {
        arn: string;
        id: string;
        name: string;
        policyTypes: outputs.organizations.OrganizationRootPolicyType[];
    }

    export interface OrganizationRootPolicyType {
        status: string;
        type: string;
    }

    export interface OrganizationalUnitAccount {
        arn: string;
        email: string;
        id: string;
        name: string;
    }
}

export namespace pinpoint {
    export interface AppCampaignHook {
        lambdaFunctionName?: string;
        mode?: string;
        webUrl?: string;
    }

    export interface AppLimits {
        daily?: number;
        maximumDuration?: number;
        messagesPerSecond?: number;
        total?: number;
    }

    export interface AppQuietTime {
        end?: string;
        start?: string;
    }
}

export namespace pricing {
    export interface GetProductFilter {
        field: string;
        value: string;
    }
}

export namespace ram {
    export interface GetResourceShareFilter {
        name: string;
        values: string[];
    }
}

export namespace rds {
    export interface ClusterParameterGroupParameter {
        applyMethod?: string;
        name: string;
        value: string;
    }

    export interface ClusterS3Import {
        bucketName: string;
        bucketPrefix?: string;
        ingestionRole: string;
        sourceEngine: string;
        sourceEngineVersion: string;
    }

    export interface ClusterScalingConfiguration {
        autoPause?: boolean;
        maxCapacity?: number;
        minCapacity?: number;
        secondsUntilAutoPause?: number;
        timeoutAction?: string;
    }

    export interface GlobalClusterGlobalClusterMember {
        dbClusterArn: string;
        isWriter: boolean;
    }

    export interface InstanceS3Import {
        bucketName: string;
        bucketPrefix?: string;
        ingestionRole: string;
        sourceEngine: string;
        sourceEngineVersion: string;
    }

    export interface OptionGroupOption {
        dbSecurityGroupMemberships?: string[];
        optionName: string;
        optionSettings?: outputs.rds.OptionGroupOptionOptionSetting[];
        port?: number;
        version?: string;
        vpcSecurityGroupMemberships?: string[];
    }

    export interface OptionGroupOptionOptionSetting {
        name: string;
        value: string;
    }

    export interface ParameterGroupParameter {
        applyMethod?: string;
        name: string;
        value: string;
    }

    export interface SecurityGroupIngress {
        cidr?: string;
        securityGroupId: string;
        securityGroupName: string;
        securityGroupOwnerId: string;
    }
}

export namespace redshift {
    export interface ClusterLogging {
        bucketName: string;
        enable: boolean;
        s3KeyPrefix: string;
    }

    export interface ClusterSnapshotCopy {
        destinationRegion: string;
        grantName?: string;
        retentionPeriod?: number;
    }

    export interface ParameterGroupParameter {
        name: string;
        value: string;
    }

    export interface SecurityGroupIngress {
        cidr?: string;
        securityGroupName: string;
        securityGroupOwnerId: string;
    }
}

export namespace resourcegroups {
    export interface GroupResourceQuery {
        query: string;
        type?: string;
    }
}

export namespace route53 {
    export interface RecordAlias {
        evaluateTargetHealth: boolean;
        name: string;
        zoneId: string;
    }

    export interface RecordFailoverRoutingPolicy {
        type: string;
    }

    export interface RecordGeolocationRoutingPolicy {
        continent?: string;
        country?: string;
        subdivision?: string;
    }

    export interface RecordLatencyRoutingPolicy {
        region: string;
    }

    export interface RecordWeightedRoutingPolicy {
        weight: number;
    }

    export interface ResolverEndpointIpAddress {
        ip: string;
        ipId: string;
        subnetId: string;
    }

    export interface ResolverRuleTargetIp {
        ip: string;
        port?: number;
    }

    export interface ZoneVpc {
        vpcId: string;
        vpcRegion: string;
    }
}

export namespace s3 {
    export interface AccessPointPublicAccessBlockConfiguration {
        blockPublicAcls?: boolean;
        blockPublicPolicy?: boolean;
        ignorePublicAcls?: boolean;
        restrictPublicBuckets?: boolean;
    }

    export interface AccessPointVpcConfiguration {
        vpcId: string;
    }

    export interface AnalyticsConfigurationFilter {
        prefix?: string;
        tags?: {[key: string]: string};
    }

    export interface AnalyticsConfigurationStorageClassAnalysis {
        dataExport: outputs.s3.AnalyticsConfigurationStorageClassAnalysisDataExport;
    }

    export interface AnalyticsConfigurationStorageClassAnalysisDataExport {
        destination: outputs.s3.AnalyticsConfigurationStorageClassAnalysisDataExportDestination;
        outputSchemaVersion?: string;
    }

    export interface AnalyticsConfigurationStorageClassAnalysisDataExportDestination {
        s3BucketDestination: outputs.s3.AnalyticsConfigurationStorageClassAnalysisDataExportDestinationS3BucketDestination;
    }

    export interface AnalyticsConfigurationStorageClassAnalysisDataExportDestinationS3BucketDestination {
        bucketAccountId?: string;
        bucketArn: string;
        format?: string;
        prefix?: string;
    }

    export interface BucketCorsRule {
        allowedHeaders?: string[];
        allowedMethods: string[];
        allowedOrigins: string[];
        exposeHeaders?: string[];
        maxAgeSeconds?: number;
    }

    export interface BucketGrant {
        id?: string;
        permissions: string[];
        type: string;
        uri?: string;
    }

    export interface BucketLifecycleRule {
        abortIncompleteMultipartUploadDays?: number;
        enabled: boolean;
        expiration?: outputs.s3.BucketLifecycleRuleExpiration;
        id: string;
        noncurrentVersionExpiration?: outputs.s3.BucketLifecycleRuleNoncurrentVersionExpiration;
        noncurrentVersionTransitions?: outputs.s3.BucketLifecycleRuleNoncurrentVersionTransition[];
        prefix?: string;
        tags?: {[key: string]: string};
        transitions?: outputs.s3.BucketLifecycleRuleTransition[];
    }

    export interface BucketLifecycleRuleExpiration {
        date?: string;
        days?: number;
        expiredObjectDeleteMarker?: boolean;
    }

    export interface BucketLifecycleRuleNoncurrentVersionExpiration {
        days?: number;
    }

    export interface BucketLifecycleRuleNoncurrentVersionTransition {
        days?: number;
        storageClass: string;
    }

    export interface BucketLifecycleRuleTransition {
        date?: string;
        days?: number;
        storageClass: string;
    }

    export interface BucketLogging {
        targetBucket: string;
        targetPrefix?: string;
    }

    export interface BucketMetricFilter {
        prefix?: string;
        tags?: {[key: string]: string};
    }

    export interface BucketNotificationLambdaFunction {
        events: string[];
        filterPrefix?: string;
        filterSuffix?: string;
        id: string;
        lambdaFunctionArn?: string;
    }

    export interface BucketNotificationQueue {
        events: string[];
        filterPrefix?: string;
        filterSuffix?: string;
        id: string;
        queueArn: string;
    }

    export interface BucketNotificationTopic {
        events: string[];
        filterPrefix?: string;
        filterSuffix?: string;
        id: string;
        topicArn: string;
    }

    export interface BucketObjectLockConfiguration {
        objectLockEnabled: string;
        rule?: outputs.s3.BucketObjectLockConfigurationRule;
    }

    export interface BucketObjectLockConfigurationRule {
        defaultRetention: outputs.s3.BucketObjectLockConfigurationRuleDefaultRetention;
    }

    export interface BucketObjectLockConfigurationRuleDefaultRetention {
        days?: number;
        mode: string;
        years?: number;
    }

    export interface BucketReplicationConfiguration {
        role: string;
        rules: outputs.s3.BucketReplicationConfigurationRule[];
    }

    export interface BucketReplicationConfigurationRule {
        destination: outputs.s3.BucketReplicationConfigurationRuleDestination;
        filter?: outputs.s3.BucketReplicationConfigurationRuleFilter;
        id?: string;
        prefix?: string;
        priority?: number;
        sourceSelectionCriteria?: outputs.s3.BucketReplicationConfigurationRuleSourceSelectionCriteria;
        status: string;
    }

    export interface BucketReplicationConfigurationRuleDestination {
        accessControlTranslation?: outputs.s3.BucketReplicationConfigurationRuleDestinationAccessControlTranslation;
        accountId?: string;
        bucket: string;
        replicaKmsKeyId?: string;
        storageClass?: string;
    }

    export interface BucketReplicationConfigurationRuleDestinationAccessControlTranslation {
        owner: string;
    }

    export interface BucketReplicationConfigurationRuleFilter {
        prefix?: string;
        tags?: {[key: string]: string};
    }

    export interface BucketReplicationConfigurationRuleSourceSelectionCriteria {
        sseKmsEncryptedObjects?: outputs.s3.BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjects;
    }

    export interface BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjects {
        enabled: boolean;
    }

    export interface BucketServerSideEncryptionConfiguration {
        rule: outputs.s3.BucketServerSideEncryptionConfigurationRule;
    }

    export interface BucketServerSideEncryptionConfigurationRule {
        applyServerSideEncryptionByDefault: outputs.s3.BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault;
    }

    export interface BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault {
        kmsMasterKeyId?: string;
        sseAlgorithm: string;
    }

    export interface BucketVersioning {
        enabled?: boolean;
        mfaDelete?: boolean;
    }

    export interface BucketWebsite {
        errorDocument?: string;
        indexDocument?: string;
        redirectAllRequestsTo?: string;
        routingRules?: string;
    }

    export interface InventoryDestination {
        bucket: outputs.s3.InventoryDestinationBucket;
    }

    export interface InventoryDestinationBucket {
        accountId?: string;
        bucketArn: string;
        encryption?: outputs.s3.InventoryDestinationBucketEncryption;
        format: string;
        prefix?: string;
    }

    export interface InventoryDestinationBucketEncryption {
        sseKms?: outputs.s3.InventoryDestinationBucketEncryptionSseKms;
        sseS3?: outputs.s3.InventoryDestinationBucketEncryptionSseS3;
    }

    export interface InventoryDestinationBucketEncryptionSseKms {
        keyId: string;
    }

    export interface InventoryDestinationBucketEncryptionSseS3 {
    }

    export interface InventoryFilter {
        prefix?: string;
    }

    export interface InventorySchedule {
        frequency: string;
    }
}

export namespace sagemaker {
    export interface EndpointConfigurationProductionVariant {
        acceleratorType?: string;
        initialInstanceCount: number;
        initialVariantWeight?: number;
        instanceType: string;
        modelName: string;
        variantName: string;
    }

    export interface ModelContainer {
        containerHostname?: string;
        environment?: {[key: string]: string};
        image: string;
        modelDataUrl?: string;
    }

    export interface ModelPrimaryContainer {
        containerHostname?: string;
        environment?: {[key: string]: string};
        image: string;
        modelDataUrl?: string;
    }

    export interface ModelVpcConfig {
        securityGroupIds: string[];
        subnets: string[];
    }
}

export namespace secretsmanager {
    export interface GetSecretRotationRotationRule {
        automaticallyAfterDays: number;
    }

    export interface GetSecretRotationRule {
        automaticallyAfterDays: number;
    }

    export interface SecretRotationRotationRules {
        automaticallyAfterDays: number;
    }

    export interface SecretRotationRules {
        automaticallyAfterDays: number;
    }
}

export namespace servicediscovery {
    export interface ServiceDnsConfig {
        dnsRecords: outputs.servicediscovery.ServiceDnsConfigDnsRecord[];
        namespaceId: string;
        routingPolicy?: string;
    }

    export interface ServiceDnsConfigDnsRecord {
        ttl: number;
        type: string;
    }

    export interface ServiceHealthCheckConfig {
        failureThreshold?: number;
        resourcePath?: string;
        type?: string;
    }

    export interface ServiceHealthCheckCustomConfig {
        failureThreshold?: number;
    }
}

export namespace ses {
    export interface EventDestinationCloudwatchDestination {
        defaultValue: string;
        dimensionName: string;
        valueSource: string;
    }

    export interface EventDestinationKinesisDestination {
        roleArn: string;
        streamArn: string;
    }

    export interface EventDestinationSnsDestination {
        topicArn: string;
    }

    export interface ReceiptRuleAddHeaderAction {
        headerName: string;
        headerValue: string;
        position: number;
    }

    export interface ReceiptRuleBounceAction {
        message: string;
        position: number;
        sender: string;
        smtpReplyCode: string;
        statusCode?: string;
        topicArn?: string;
    }

    export interface ReceiptRuleLambdaAction {
        functionArn: string;
        invocationType: string;
        position: number;
        topicArn?: string;
    }

    export interface ReceiptRuleS3Action {
        bucketName: string;
        kmsKeyArn?: string;
        objectKeyPrefix?: string;
        position: number;
        topicArn?: string;
    }

    export interface ReceiptRuleSnsAction {
        position: number;
        topicArn: string;
    }

    export interface ReceiptRuleStopAction {
        position: number;
        scope: string;
        topicArn?: string;
    }

    export interface ReceiptRuleWorkmailAction {
        organizationArn: string;
        position: number;
        topicArn?: string;
    }
}

export namespace ssm {
    export interface AssociationOutputLocation {
        s3BucketName: string;
        s3KeyPrefix?: string;
    }

    export interface AssociationTarget {
        key: string;
        values: string[];
    }

    export interface DocumentAttachmentsSource {
        key: string;
        name?: string;
        values: string[];
    }

    export interface DocumentParameter {
        defaultValue?: string;
        description?: string;
        name?: string;
        type?: string;
    }

    export interface MaintenanceWindowTargetTarget {
        key: string;
        values: string[];
    }

    export interface MaintenanceWindowTaskTarget {
        key: string;
        values: string[];
    }

    export interface MaintenanceWindowTaskTaskInvocationParameters {
        automationParameters?: outputs.ssm.MaintenanceWindowTaskTaskInvocationParametersAutomationParameters;
        lambdaParameters?: outputs.ssm.MaintenanceWindowTaskTaskInvocationParametersLambdaParameters;
        runCommandParameters?: outputs.ssm.MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters;
        stepFunctionsParameters?: outputs.ssm.MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParameters;
    }

    export interface MaintenanceWindowTaskTaskInvocationParametersAutomationParameters {
        documentVersion?: string;
        parameters?: outputs.ssm.MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameter[];
    }

    export interface MaintenanceWindowTaskTaskInvocationParametersAutomationParametersParameter {
        name: string;
        values: string[];
    }

    export interface MaintenanceWindowTaskTaskInvocationParametersLambdaParameters {
        clientContext?: string;
        payload?: string;
        qualifier?: string;
    }

    export interface MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters {
        comment?: string;
        documentHash?: string;
        documentHashType?: string;
        notificationConfig?: outputs.ssm.MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig;
        outputS3Bucket?: string;
        outputS3KeyPrefix?: string;
        parameters?: outputs.ssm.MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameter[];
        serviceRoleArn?: string;
        timeoutSeconds?: number;
    }

    export interface MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig {
        notificationArn?: string;
        notificationEvents?: string[];
        notificationType?: string;
    }

    export interface MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameter {
        name: string;
        values: string[];
    }

    export interface MaintenanceWindowTaskTaskInvocationParametersStepFunctionsParameters {
        input?: string;
        name?: string;
    }

    export interface PatchBaselineApprovalRule {
        approveAfterDays: number;
        complianceLevel?: string;
        enableNonSecurity?: boolean;
        patchFilters: outputs.ssm.PatchBaselineApprovalRulePatchFilter[];
    }

    export interface PatchBaselineApprovalRulePatchFilter {
        key: string;
        values: string[];
    }

    export interface PatchBaselineGlobalFilter {
        key: string;
        values: string[];
    }

    export interface ResourceDataSyncS3Destination {
        bucketName: string;
        kmsKeyArn?: string;
        prefix?: string;
        region: string;
        syncFormat?: string;
    }
}

export namespace storagegateway {
    export interface GatewaySmbActiveDirectorySettings {
        domainName: string;
        password: string;
        username: string;
    }

    export interface NfsFileShareNfsFileShareDefaults {
        directoryMode?: string;
        fileMode?: string;
        groupId?: number;
        ownerId?: number;
    }
}

export namespace transfer {
    export interface ServerEndpointDetails {
        vpcEndpointId: string;
    }
}

export namespace waf {
    export interface ByteMatchSetByteMatchTuple {
        fieldToMatch: outputs.waf.ByteMatchSetByteMatchTupleFieldToMatch;
        positionalConstraint: string;
        targetString?: string;
        textTransformation: string;
    }

    export interface ByteMatchSetByteMatchTupleFieldToMatch {
        data?: string;
        type: string;
    }

    export interface GeoMatchSetGeoMatchConstraint {
        type: string;
        value: string;
    }

    export interface IpSetIpSetDescriptor {
        type: string;
        value: string;
    }

    export interface RateBasedRulePredicate {
        dataId: string;
        negated: boolean;
        type: string;
    }

    export interface RegexMatchSetRegexMatchTuple {
        fieldToMatch: outputs.waf.RegexMatchSetRegexMatchTupleFieldToMatch;
        regexPatternSetId: string;
        textTransformation: string;
    }

    export interface RegexMatchSetRegexMatchTupleFieldToMatch {
        data?: string;
        type: string;
    }

    export interface RuleGroupActivatedRule {
        action: outputs.waf.RuleGroupActivatedRuleAction;
        priority: number;
        ruleId: string;
        type?: string;
    }

    export interface RuleGroupActivatedRuleAction {
        type: string;
    }

    export interface RulePredicate {
        dataId: string;
        negated: boolean;
        type: string;
    }

    export interface SizeConstraintSetSizeConstraint {
        comparisonOperator: string;
        fieldToMatch: outputs.waf.SizeConstraintSetSizeConstraintFieldToMatch;
        size: number;
        textTransformation: string;
    }

    export interface SizeConstraintSetSizeConstraintFieldToMatch {
        data?: string;
        type: string;
    }

    export interface SqlInjectionMatchSetSqlInjectionMatchTuple {
        fieldToMatch: outputs.waf.SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch;
        textTransformation: string;
    }

    export interface SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch {
        data?: string;
        type: string;
    }

    export interface WebAclDefaultAction {
        type: string;
    }

    export interface WebAclLoggingConfiguration {
        logDestination: string;
        redactedFields?: outputs.waf.WebAclLoggingConfigurationRedactedFields;
    }

    export interface WebAclLoggingConfigurationRedactedFields {
        fieldToMatches: outputs.waf.WebAclLoggingConfigurationRedactedFieldsFieldToMatch[];
    }

    export interface WebAclLoggingConfigurationRedactedFieldsFieldToMatch {
        data?: string;
        type: string;
    }

    export interface WebAclRule {
        action?: outputs.waf.WebAclRuleAction;
        overrideAction?: outputs.waf.WebAclRuleOverrideAction;
        priority: number;
        ruleId: string;
        type?: string;
    }

    export interface WebAclRuleAction {
        type: string;
    }

    export interface WebAclRuleOverrideAction {
        type: string;
    }

    export interface XssMatchSetXssMatchTuple {
        fieldToMatch: outputs.waf.XssMatchSetXssMatchTupleFieldToMatch;
        textTransformation: string;
    }

    export interface XssMatchSetXssMatchTupleFieldToMatch {
        data?: string;
        type: string;
    }
}

export namespace wafregional {
    export interface ByteMatchSetByteMatchTuple {
        fieldToMatch: outputs.wafregional.ByteMatchSetByteMatchTupleFieldToMatch;
        positionalConstraint: string;
        targetString?: string;
        textTransformation: string;
    }

    export interface ByteMatchSetByteMatchTupleFieldToMatch {
        data?: string;
        type: string;
    }

    export interface GeoMatchSetGeoMatchConstraint {
        type: string;
        value: string;
    }

    export interface IpSetIpSetDescriptor {
        type: string;
        value: string;
    }

    export interface RateBasedRulePredicate {
        dataId: string;
        negated: boolean;
        type: string;
    }

    export interface RegexMatchSetRegexMatchTuple {
        fieldToMatch: outputs.wafregional.RegexMatchSetRegexMatchTupleFieldToMatch;
        regexPatternSetId: string;
        textTransformation: string;
    }

    export interface RegexMatchSetRegexMatchTupleFieldToMatch {
        data?: string;
        type: string;
    }

    export interface RuleGroupActivatedRule {
        action: outputs.wafregional.RuleGroupActivatedRuleAction;
        priority: number;
        ruleId: string;
        type?: string;
    }

    export interface RuleGroupActivatedRuleAction {
        type: string;
    }

    export interface RulePredicate {
        dataId: string;
        negated: boolean;
        type: string;
    }

    export interface SizeConstraintSetSizeConstraint {
        comparisonOperator: string;
        fieldToMatch: outputs.wafregional.SizeConstraintSetSizeConstraintFieldToMatch;
        size: number;
        textTransformation: string;
    }

    export interface SizeConstraintSetSizeConstraintFieldToMatch {
        data?: string;
        type: string;
    }

    export interface SqlInjectionMatchSetSqlInjectionMatchTuple {
        fieldToMatch: outputs.wafregional.SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch;
        textTransformation: string;
    }

    export interface SqlInjectionMatchSetSqlInjectionMatchTupleFieldToMatch {
        data?: string;
        type: string;
    }

    export interface WebAclDefaultAction {
        type: string;
    }

    export interface WebAclLoggingConfiguration {
        logDestination: string;
        redactedFields?: outputs.wafregional.WebAclLoggingConfigurationRedactedFields;
    }

    export interface WebAclLoggingConfigurationRedactedFields {
        fieldToMatches: outputs.wafregional.WebAclLoggingConfigurationRedactedFieldsFieldToMatch[];
    }

    export interface WebAclLoggingConfigurationRedactedFieldsFieldToMatch {
        data?: string;
        type: string;
    }

    export interface WebAclRule {
        action?: outputs.wafregional.WebAclRuleAction;
        overrideAction?: outputs.wafregional.WebAclRuleOverrideAction;
        priority: number;
        ruleId: string;
        type?: string;
    }

    export interface WebAclRuleAction {
        type: string;
    }

    export interface WebAclRuleOverrideAction {
        type: string;
    }

    export interface XssMatchSetXssMatchTuple {
        fieldToMatch: outputs.wafregional.XssMatchSetXssMatchTupleFieldToMatch;
        textTransformation: string;
    }

    export interface XssMatchSetXssMatchTupleFieldToMatch {
        data?: string;
        type: string;
    }
}

export namespace wafv2 {
    export interface GetRegexPatternSetRegularExpression {
        regexString: string;
    }

    export interface RegexPatternSetRegularExpression {
        regexString: string;
    }

    export interface RuleGroupRule {
        action: outputs.wafv2.RuleGroupRuleAction;
        name: string;
        priority: number;
        statement: outputs.wafv2.RuleGroupRuleStatement;
        visibilityConfig: outputs.wafv2.RuleGroupRuleVisibilityConfig;
    }

    export interface RuleGroupRuleAction {
        allow?: outputs.wafv2.RuleGroupRuleActionAllow;
        block?: outputs.wafv2.RuleGroupRuleActionBlock;
        count?: outputs.wafv2.RuleGroupRuleActionCount;
    }

    export interface RuleGroupRuleActionAllow {
    }

    export interface RuleGroupRuleActionBlock {
    }

    export interface RuleGroupRuleActionCount {
    }

    export interface RuleGroupRuleStatement {
        andStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatement;
        byteMatchStatement?: outputs.wafv2.RuleGroupRuleStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.RuleGroupRuleStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.RuleGroupRuleStatementIpSetReferenceStatement;
        notStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatement;
        orStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.RuleGroupRuleStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.RuleGroupRuleStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.RuleGroupRuleStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.RuleGroupRuleStatementXssMatchStatement;
    }

    export interface RuleGroupRuleStatementAndStatement {
        statements: outputs.wafv2.RuleGroupRuleStatementAndStatementStatement[];
    }

    export interface RuleGroupRuleStatementAndStatementStatement {
        andStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatement;
        byteMatchStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementIpSetReferenceStatement;
        notStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatement;
        orStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementXssMatchStatement;
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatement {
        statements: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatement[];
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatement {
        byteMatchStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementXssMatchStatement;
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementAndStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementAndStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementAndStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementAndStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface RuleGroupRuleStatementAndStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatement {
        statements: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatement[];
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatement {
        byteMatchStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementXssMatchStatement;
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatement {
        statements: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatement[];
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatement {
        byteMatchStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementXssMatchStatement;
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementAndStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementAndStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementAndStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementAndStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementAndStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementAndStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementAndStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementByteMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementByteMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface RuleGroupRuleStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface RuleGroupRuleStatementNotStatement {
        statements: outputs.wafv2.RuleGroupRuleStatementNotStatementStatement[];
    }

    export interface RuleGroupRuleStatementNotStatementStatement {
        andStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatement;
        byteMatchStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementIpSetReferenceStatement;
        notStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatement;
        orStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementXssMatchStatement;
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatement {
        statements: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatement[];
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatement {
        byteMatchStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementXssMatchStatement;
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementNotStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementNotStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementNotStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementNotStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface RuleGroupRuleStatementNotStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatement {
        statements: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatement[];
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatement {
        byteMatchStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementXssMatchStatement;
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatement {
        statements: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatement[];
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatement {
        byteMatchStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementXssMatchStatement;
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementNotStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementNotStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementNotStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementNotStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementNotStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementNotStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementNotStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementOrStatement {
        statements: outputs.wafv2.RuleGroupRuleStatementOrStatementStatement[];
    }

    export interface RuleGroupRuleStatementOrStatementStatement {
        andStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatement;
        byteMatchStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementIpSetReferenceStatement;
        notStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatement;
        orStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementXssMatchStatement;
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatement {
        statements: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatement[];
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatement {
        byteMatchStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementXssMatchStatement;
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementOrStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementOrStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementOrStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementOrStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface RuleGroupRuleStatementOrStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatement {
        statements: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatement[];
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatement {
        byteMatchStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementXssMatchStatement;
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatement {
        statements: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatement[];
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatement {
        byteMatchStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementXssMatchStatement;
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementOrStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementOrStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementOrStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementOrStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementOrStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementOrStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementOrStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementSizeConstraintStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementSqliMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.RuleGroupRuleStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.RuleGroupRuleStatementXssMatchStatementTextTransformation[];
    }

    export interface RuleGroupRuleStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.RuleGroupRuleStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.RuleGroupRuleStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface RuleGroupRuleStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface RuleGroupRuleStatementXssMatchStatementFieldToMatchBody {
    }

    export interface RuleGroupRuleStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface RuleGroupRuleStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface RuleGroupRuleStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface RuleGroupRuleStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface RuleGroupRuleStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface RuleGroupRuleVisibilityConfig {
        cloudwatchMetricsEnabled: boolean;
        metricName: string;
        sampledRequestsEnabled: boolean;
    }

    export interface RuleGroupVisibilityConfig {
        cloudwatchMetricsEnabled: boolean;
        metricName: string;
        sampledRequestsEnabled: boolean;
    }

    export interface WebAclDefaultAction {
        allow?: outputs.wafv2.WebAclDefaultActionAllow;
        block?: outputs.wafv2.WebAclDefaultActionBlock;
    }

    export interface WebAclDefaultActionAllow {
    }

    export interface WebAclDefaultActionBlock {
    }

    export interface WebAclLoggingConfigurationRedactedField {
        allQueryArguments?: outputs.wafv2.WebAclLoggingConfigurationRedactedFieldAllQueryArguments;
        body?: outputs.wafv2.WebAclLoggingConfigurationRedactedFieldBody;
        method?: outputs.wafv2.WebAclLoggingConfigurationRedactedFieldMethod;
        queryString?: outputs.wafv2.WebAclLoggingConfigurationRedactedFieldQueryString;
        singleHeader?: outputs.wafv2.WebAclLoggingConfigurationRedactedFieldSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclLoggingConfigurationRedactedFieldSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclLoggingConfigurationRedactedFieldUriPath;
    }

    export interface WebAclLoggingConfigurationRedactedFieldAllQueryArguments {
    }

    export interface WebAclLoggingConfigurationRedactedFieldBody {
    }

    export interface WebAclLoggingConfigurationRedactedFieldMethod {
    }

    export interface WebAclLoggingConfigurationRedactedFieldQueryString {
    }

    export interface WebAclLoggingConfigurationRedactedFieldSingleHeader {
        name: string;
    }

    export interface WebAclLoggingConfigurationRedactedFieldSingleQueryArgument {
        name: string;
    }

    export interface WebAclLoggingConfigurationRedactedFieldUriPath {
    }

    export interface WebAclRule {
        action?: outputs.wafv2.WebAclRuleAction;
        name: string;
        overrideAction?: outputs.wafv2.WebAclRuleOverrideAction;
        priority: number;
        statement: outputs.wafv2.WebAclRuleStatement;
        visibilityConfig: outputs.wafv2.WebAclRuleVisibilityConfig;
    }

    export interface WebAclRuleAction {
        allow?: outputs.wafv2.WebAclRuleActionAllow;
        block?: outputs.wafv2.WebAclRuleActionBlock;
        count?: outputs.wafv2.WebAclRuleActionCount;
    }

    export interface WebAclRuleActionAllow {
    }

    export interface WebAclRuleActionBlock {
    }

    export interface WebAclRuleActionCount {
    }

    export interface WebAclRuleOverrideAction {
        count?: outputs.wafv2.WebAclRuleOverrideActionCount;
        none?: outputs.wafv2.WebAclRuleOverrideActionNone;
    }

    export interface WebAclRuleOverrideActionCount {
    }

    export interface WebAclRuleOverrideActionNone {
    }

    export interface WebAclRuleStatement {
        andStatement?: outputs.wafv2.WebAclRuleStatementAndStatement;
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementIpSetReferenceStatement;
        managedRuleGroupStatement?: outputs.wafv2.WebAclRuleStatementManagedRuleGroupStatement;
        notStatement?: outputs.wafv2.WebAclRuleStatementNotStatement;
        orStatement?: outputs.wafv2.WebAclRuleStatementOrStatement;
        rateBasedStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementRegexPatternSetReferenceStatement;
        ruleGroupReferenceStatement?: outputs.wafv2.WebAclRuleStatementRuleGroupReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementAndStatement {
        statements: outputs.wafv2.WebAclRuleStatementAndStatementStatement[];
    }

    export interface WebAclRuleStatementAndStatementStatement {
        andStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatement;
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementIpSetReferenceStatement;
        notStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatement;
        orStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatement {
        statements: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatement[];
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatement {
        andStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatement;
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementIpSetReferenceStatement;
        notStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatement;
        orStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatement {
        statements: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatement[];
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatement {
        statements: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatement[];
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatement {
        statements: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatement[];
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementAndStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementAndStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatement {
        statements: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatement[];
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatement {
        andStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatement;
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementIpSetReferenceStatement;
        notStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatement;
        orStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatement {
        statements: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatement[];
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatement {
        statements: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatement[];
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatement {
        statements: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatement[];
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementNotStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatement {
        statements: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatement[];
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatement {
        andStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatement;
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementIpSetReferenceStatement;
        notStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatement;
        orStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatement {
        statements: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatement[];
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatement {
        statements: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatement[];
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatement {
        statements: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatement[];
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementOrStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementAndStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementAndStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementAndStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementAndStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementAndStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementAndStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementAndStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementAndStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementAndStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementManagedRuleGroupStatement {
        excludedRules?: outputs.wafv2.WebAclRuleStatementManagedRuleGroupStatementExcludedRule[];
        name: string;
        vendorName: string;
    }

    export interface WebAclRuleStatementManagedRuleGroupStatementExcludedRule {
        name: string;
    }

    export interface WebAclRuleStatementNotStatement {
        statements: outputs.wafv2.WebAclRuleStatementNotStatementStatement[];
    }

    export interface WebAclRuleStatementNotStatementStatement {
        andStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatement;
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementIpSetReferenceStatement;
        notStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatement;
        orStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatement {
        statements: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatement[];
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatement {
        andStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatement;
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementIpSetReferenceStatement;
        notStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatement;
        orStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatement {
        statements: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatement[];
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatement {
        statements: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatement[];
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatement {
        statements: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatement[];
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementAndStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementNotStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatement {
        statements: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatement[];
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatement {
        andStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatement;
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementIpSetReferenceStatement;
        notStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatement;
        orStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatement {
        statements: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatement[];
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatement {
        statements: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatement[];
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatement {
        statements: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatement[];
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementNotStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatement {
        statements: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatement[];
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatement {
        andStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatement;
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementIpSetReferenceStatement;
        notStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatement;
        orStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatement {
        statements: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatement[];
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatement {
        statements: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatement[];
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatement {
        statements: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatement[];
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementOrStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementNotStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementNotStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementNotStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementNotStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementNotStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementNotStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementNotStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementNotStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementNotStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatement {
        statements: outputs.wafv2.WebAclRuleStatementOrStatementStatement[];
    }

    export interface WebAclRuleStatementOrStatementStatement {
        andStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatement;
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementIpSetReferenceStatement;
        notStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatement;
        orStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatement {
        statements: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatement[];
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatement {
        andStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatement;
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementIpSetReferenceStatement;
        notStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatement;
        orStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatement {
        statements: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatement[];
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementAndStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatement {
        statements: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatement[];
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementNotStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatement {
        statements: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatement[];
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementOrStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementAndStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementOrStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatement {
        statements: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatement[];
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatement {
        andStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatement;
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementIpSetReferenceStatement;
        notStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatement;
        orStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatement {
        statements: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatement[];
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementAndStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatement {
        statements: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatement[];
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementNotStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatement {
        statements: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatement[];
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementOrStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementNotStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatement {
        statements: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatement[];
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatement {
        andStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatement;
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementIpSetReferenceStatement;
        notStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatement;
        orStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatement {
        statements: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatement[];
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementAndStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatement {
        statements: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatement[];
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementNotStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatement {
        statements: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatement[];
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementOrStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementOrStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementOrStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementOrStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementOrStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementOrStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementOrStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementOrStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementOrStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementOrStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementOrStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatement {
        aggregateKeyType?: string;
        limit: number;
        scopeDownStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatement;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatement {
        andStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatement;
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatement;
        notStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatement;
        orStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatement {
        statements: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatement[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatement {
        andStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatement;
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementIpSetReferenceStatement;
        notStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatement;
        orStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatement {
        statements: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatement[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementAndStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatement {
        statements: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatement[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementNotStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatement {
        statements: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatement[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementOrStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatement {
        statements: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatement[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatement {
        andStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatement;
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementIpSetReferenceStatement;
        notStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatement;
        orStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatement {
        statements: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatement[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementAndStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatement {
        statements: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatement[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementNotStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatement {
        statements: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatement[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementOrStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatement {
        statements: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatement[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatement {
        andStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatement;
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementIpSetReferenceStatement;
        notStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatement;
        orStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatement {
        statements: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatement[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementAndStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatement {
        statements: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatement[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementNotStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatement {
        statements: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatement[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatement {
        byteMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatement;
        geoMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementGeoMatchStatement;
        ipSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementIpSetReferenceStatement;
        regexPatternSetReferenceStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatement;
        sizeConstraintStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatement;
        sqliMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatement;
        xssMatchStatement?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatement;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatch;
        positionalConstraint: string;
        searchString: string;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementByteMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementGeoMatchStatement {
        countryCodes: string[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementIpSetReferenceStatement {
        arn: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementOrStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRegexPatternSetReferenceStatement {
        arn: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementRegexPatternSetReferenceStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementRegexPatternSetReferenceStatementTextTransformation[];
    }

    export interface WebAclRuleStatementRegexPatternSetReferenceStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementRegexPatternSetReferenceStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementRegexPatternSetReferenceStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementRegexPatternSetReferenceStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementRegexPatternSetReferenceStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementRegexPatternSetReferenceStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementRegexPatternSetReferenceStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementRegexPatternSetReferenceStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementRegexPatternSetReferenceStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementRuleGroupReferenceStatement {
        arn: string;
        excludedRules?: outputs.wafv2.WebAclRuleStatementRuleGroupReferenceStatementExcludedRule[];
    }

    export interface WebAclRuleStatementRuleGroupReferenceStatementExcludedRule {
        name: string;
    }

    export interface WebAclRuleStatementSizeConstraintStatement {
        comparisonOperator: string;
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementSizeConstraintStatementFieldToMatch;
        size: number;
        textTransformations: outputs.wafv2.WebAclRuleStatementSizeConstraintStatementTextTransformation[];
    }

    export interface WebAclRuleStatementSizeConstraintStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementSizeConstraintStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementSizeConstraintStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementSizeConstraintStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementSizeConstraintStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementSizeConstraintStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementSizeConstraintStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementSizeConstraintStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementSizeConstraintStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementSizeConstraintStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementSizeConstraintStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementSizeConstraintStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementSizeConstraintStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementSizeConstraintStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementSizeConstraintStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementSqliMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementSqliMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementSqliMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementSqliMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementSqliMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementSqliMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementSqliMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementSqliMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementSqliMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementSqliMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementSqliMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementSqliMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementSqliMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementSqliMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementSqliMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementSqliMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementSqliMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementSqliMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleStatementXssMatchStatement {
        fieldToMatch?: outputs.wafv2.WebAclRuleStatementXssMatchStatementFieldToMatch;
        textTransformations: outputs.wafv2.WebAclRuleStatementXssMatchStatementTextTransformation[];
    }

    export interface WebAclRuleStatementXssMatchStatementFieldToMatch {
        allQueryArguments?: outputs.wafv2.WebAclRuleStatementXssMatchStatementFieldToMatchAllQueryArguments;
        body?: outputs.wafv2.WebAclRuleStatementXssMatchStatementFieldToMatchBody;
        method?: outputs.wafv2.WebAclRuleStatementXssMatchStatementFieldToMatchMethod;
        queryString?: outputs.wafv2.WebAclRuleStatementXssMatchStatementFieldToMatchQueryString;
        singleHeader?: outputs.wafv2.WebAclRuleStatementXssMatchStatementFieldToMatchSingleHeader;
        singleQueryArgument?: outputs.wafv2.WebAclRuleStatementXssMatchStatementFieldToMatchSingleQueryArgument;
        uriPath?: outputs.wafv2.WebAclRuleStatementXssMatchStatementFieldToMatchUriPath;
    }

    export interface WebAclRuleStatementXssMatchStatementFieldToMatchAllQueryArguments {
    }

    export interface WebAclRuleStatementXssMatchStatementFieldToMatchBody {
    }

    export interface WebAclRuleStatementXssMatchStatementFieldToMatchMethod {
    }

    export interface WebAclRuleStatementXssMatchStatementFieldToMatchQueryString {
    }

    export interface WebAclRuleStatementXssMatchStatementFieldToMatchSingleHeader {
        name: string;
    }

    export interface WebAclRuleStatementXssMatchStatementFieldToMatchSingleQueryArgument {
        name: string;
    }

    export interface WebAclRuleStatementXssMatchStatementFieldToMatchUriPath {
    }

    export interface WebAclRuleStatementXssMatchStatementTextTransformation {
        priority: number;
        type: string;
    }

    export interface WebAclRuleVisibilityConfig {
        cloudwatchMetricsEnabled: boolean;
        metricName: string;
        sampledRequestsEnabled: boolean;
    }

    export interface WebAclVisibilityConfig {
        cloudwatchMetricsEnabled: boolean;
        metricName: string;
        sampledRequestsEnabled: boolean;
    }
}

export namespace worklink {
    export interface FleetIdentityProvider {
        samlMetadata: string;
        type: string;
    }

    export interface FleetNetwork {
        securityGroupIds: string[];
        subnetIds: string[];
        vpcId: string;
    }
}

export namespace workspaces {
    export interface DirectorySelfServicePermissions {
        changeComputeType?: boolean;
        increaseVolumeSize?: boolean;
        rebuildWorkspace?: boolean;
        restartWorkspace?: boolean;
        switchRunningMode?: boolean;
    }

    export interface GetBundleComputeType {
        name: string;
    }

    export interface GetBundleRootStorage {
        capacity: string;
    }

    export interface GetBundleUserStorage {
        capacity: string;
    }

    export interface GetDirectorySelfServicePermission {
        changeComputeType: boolean;
        increaseVolumeSize: boolean;
        rebuildWorkspace: boolean;
        restartWorkspace: boolean;
        switchRunningMode: boolean;
    }

    export interface IpGroupRule {
        description?: string;
        source: string;
    }

    export interface WorkspaceWorkspaceProperties {
        computeTypeName?: string;
        rootVolumeSizeGib?: number;
        runningMode?: string;
        runningModeAutoStopTimeoutInMinutes: number;
        userVolumeSizeGib?: number;
    }
}
