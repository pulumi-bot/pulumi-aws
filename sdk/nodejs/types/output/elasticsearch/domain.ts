// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputApi from "../../../types/input";
import * as outputApi from "../../../types/output";
import * as utilities from "../../../utilities";

import {PolicyDocument} from "../../../iam/documents";

export interface DomainClusterConfig {
    /**
     * Number of dedicated master nodes in the cluster
     */
    dedicatedMasterCount?: number;
    /**
     * Indicates whether dedicated master nodes are enabled for the cluster.
     */
    dedicatedMasterEnabled?: boolean;
    /**
     * Instance type of the dedicated master nodes in the cluster.
     */
    dedicatedMasterType?: string;
    /**
     * Number of instances in the cluster.
     */
    instanceCount?: number;
    /**
     * Instance type of data nodes in the cluster.
     */
    instanceType?: string;
    /**
     * Configuration block containing zone awareness settings. Documented below.
     */
    zoneAwarenessConfig?: outputApi.elasticsearch.DomainClusterConfigZoneAwarenessConfig;
    /**
     * Indicates whether zone awareness is enabled. To enable awareness with three Availability Zones, the `availabilityZoneCount` within the `zoneAwarenessConfig` must be set to `3`.
     */
    zoneAwarenessEnabled?: boolean;
}

export interface DomainClusterConfigZoneAwarenessConfig {
    /**
     * Number of Availability Zones for the domain to use with `zoneAwarenessEnabled`. Defaults to `2`. Valid values: `2` or `3`.
     */
    availabilityZoneCount?: number;
}

export interface DomainCognitoOptions {
    /**
     * Specifies whether Amazon Cognito authentication with Kibana is enabled or not
     */
    enabled?: boolean;
    /**
     * ID of the Cognito Identity Pool to use
     */
    identityPoolId: string;
    /**
     * ARN of the IAM role that has the AmazonESCognitoAccess policy attached
     */
    roleArn: string;
    /**
     * ID of the Cognito User Pool to use
     */
    userPoolId: string;
}

export interface DomainEbsOptions {
    /**
     * Whether EBS volumes are attached to data nodes in the domain
     */
    ebsEnabled: boolean;
    /**
     * The baseline input/output (I/O) performance of EBS volumes
     * attached to data nodes. Applicable only for the Provisioned IOPS EBS volume type.
     */
    iops?: number;
    /**
     * The size of EBS volumes attached to data nodes (in GB).
     * **Required** if `ebsEnabled` is set to `true`.
     */
    volumeSize?: number;
    /**
     * The type of EBS volumes attached to data nodes.
     */
    volumeType: string;
}

export interface DomainEncryptAtRest {
    /**
     * Specifies whether Amazon Cognito authentication with Kibana is enabled or not
     */
    enabled: boolean;
    /**
     * The KMS key id to encrypt the Elasticsearch domain with. If not specified then it defaults to using the `aws/es` service KMS key.
     */
    kmsKeyId: string;
}

export interface DomainLogPublishingOption {
    /**
     * ARN of the Cloudwatch log group to which log needs to be published.
     */
    cloudwatchLogGroupArn: string;
    /**
     * Specifies whether Amazon Cognito authentication with Kibana is enabled or not
     */
    enabled?: boolean;
    /**
     * A type of Elasticsearch log. Valid values: INDEX_SLOW_LOGS, SEARCH_SLOW_LOGS, ES_APPLICATION_LOGS
     */
    logType: string;
}

export interface DomainNodeToNodeEncryption {
    /**
     * Specifies whether Amazon Cognito authentication with Kibana is enabled or not
     */
    enabled: boolean;
}

export interface DomainSnapshotOptions {
    /**
     * Hour during which the service takes an automated daily
     * snapshot of the indices in the domain.
     */
    automatedSnapshotStartHour: number;
}

export interface DomainVpcOptions {
    availabilityZones: string[];
    /**
     * List of VPC Security Group IDs to be applied to the Elasticsearch domain endpoints. If omitted, the default Security Group for the VPC will be used.
     */
    securityGroupIds?: string[];
    /**
     * List of VPC Subnet IDs for the Elasticsearch domain endpoints to be created in.
     */
    subnetIds?: string[];
    vpcId: string;
}
