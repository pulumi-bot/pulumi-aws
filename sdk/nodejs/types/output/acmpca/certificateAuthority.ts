// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputApi from "../../../types/input";
import * as outputApi from "../../../types/output";
import * as utilities from "../../../utilities";

export interface CertificateAuthorityCertificateAuthorityConfiguration {
    /**
     * Type of the public key algorithm and size, in bits, of the key pair that your key pair creates when it issues a certificate. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CertificateAuthorityConfiguration.html).
     */
    keyAlgorithm: string;
    /**
     * Name of the algorithm your private CA uses to sign certificate requests. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CertificateAuthorityConfiguration.html).
     */
    signingAlgorithm: string;
    /**
     * Nested argument that contains X.500 distinguished name information. At least one nested attribute must be specified.
     */
    subject: outputApi.acmpca.CertificateAuthorityCertificateAuthorityConfigurationSubject;
}

export interface CertificateAuthorityCertificateAuthorityConfigurationSubject {
    /**
     * Fully qualified domain name (FQDN) associated with the certificate subject.
     */
    commonName?: string;
    /**
     * Two digit code that specifies the country in which the certificate subject located.
     */
    country?: string;
    /**
     * Disambiguating information for the certificate subject.
     */
    distinguishedNameQualifier?: string;
    /**
     * Typically a qualifier appended to the name of an individual. Examples include Jr. for junior, Sr. for senior, and III for third.
     */
    generationQualifier?: string;
    /**
     * First name.
     */
    givenName?: string;
    /**
     * Concatenation that typically contains the first letter of the `givenName`, the first letter of the middle name if one exists, and the first letter of the `surname`.
     */
    initials?: string;
    /**
     * The locality (such as a city or town) in which the certificate subject is located.
     */
    locality?: string;
    /**
     * Legal name of the organization with which the certificate subject is affiliated.
     */
    organization?: string;
    /**
     * A subdivision or unit of the organization (such as sales or finance) with which the certificate subject is affiliated.
     */
    organizationalUnit?: string;
    /**
     * Typically a shortened version of a longer `givenName`. For example, Jonathan is often shortened to John. Elizabeth is often shortened to Beth, Liz, or Eliza.
     */
    pseudonym?: string;
    /**
     * State in which the subject of the certificate is located.
     */
    state?: string;
    /**
     * Family name. In the US and the UK for example, the surname of an individual is ordered last. In Asian cultures the surname is typically ordered first.
     */
    surname?: string;
    /**
     * A title such as Mr. or Ms. which is pre-pended to the name to refer formally to the certificate subject.
     */
    title?: string;
}

export interface CertificateAuthorityRevocationConfiguration {
    /**
     * Nested argument containing configuration of the certificate revocation list (CRL), if any, maintained by the certificate authority. Defined below.
     */
    crlConfiguration?: outputApi.acmpca.CertificateAuthorityRevocationConfigurationCrlConfiguration;
}

export interface CertificateAuthorityRevocationConfigurationCrlConfiguration {
    /**
     * Name inserted into the certificate CRL Distribution Points extension that enables the use of an alias for the CRL distribution point. Use this value if you don't want the name of your S3 bucket to be public.
     */
    customCname?: string;
    /**
     * Boolean value that specifies whether certificate revocation lists (CRLs) are enabled. Defaults to `false`.
     */
    enabled?: boolean;
    /**
     * Number of days until a certificate expires. Must be between 1 and 5000.
     */
    expirationInDays: number;
    /**
     * Name of the S3 bucket that contains the CRL. If you do not provide a value for the `customCname` argument, the name of your S3 bucket is placed into the CRL Distribution Points extension of the issued certificate. You must specify a bucket policy that allows ACM PCA to write the CRL to your bucket.
     */
    s3BucketName?: string;
}
