// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputApi from "../../../types/input";
import * as outputApi from "../../../types/output";
import * as utilities from "../../../utilities";

export interface TopicRuleCloudwatchAlarm {
    /**
     * The CloudWatch alarm name.
     */
    alarmName: string;
    /**
     * The ARN of the IAM role that grants access.
     */
    roleArn: string;
    /**
     * The reason for the alarm change.
     */
    stateReason: string;
    /**
     * The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.
     */
    stateValue: string;
}

export interface TopicRuleCloudwatchMetric {
    /**
     * The CloudWatch metric name.
     */
    metricName: string;
    /**
     * The CloudWatch metric namespace name.
     */
    metricNamespace: string;
    /**
     * An optional Unix timestamp (http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp).
     */
    metricTimestamp?: string;
    /**
     * The metric unit (supported units can be found here: http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit)
     */
    metricUnit: string;
    /**
     * The CloudWatch metric value.
     */
    metricValue: string;
    /**
     * The ARN of the IAM role that grants access.
     */
    roleArn: string;
}

export interface TopicRuleDynamodb {
    /**
     * The hash key name.
     */
    hashKeyField: string;
    /**
     * The hash key type. Valid values are "STRING" or "NUMBER".
     */
    hashKeyType?: string;
    /**
     * The hash key value.
     */
    hashKeyValue: string;
    /**
     * The action payload.
     */
    payloadField?: string;
    /**
     * The range key name.
     */
    rangeKeyField?: string;
    /**
     * The range key type. Valid values are "STRING" or "NUMBER".
     */
    rangeKeyType?: string;
    /**
     * The range key value.
     */
    rangeKeyValue?: string;
    /**
     * The ARN of the IAM role that grants access.
     */
    roleArn: string;
    /**
     * The name of the DynamoDB table.
     */
    tableName: string;
}

export interface TopicRuleElasticsearch {
    /**
     * The endpoint of your Elasticsearch domain.
     */
    endpoint: string;
    /**
     * The unique identifier for the document you are storing.
     */
    id: string;
    /**
     * The Elasticsearch index where you want to store your data.
     */
    index: string;
    /**
     * The ARN of the IAM role that grants access.
     */
    roleArn: string;
    /**
     * The type of document you are storing.
     */
    type: string;
}

export interface TopicRuleFirehose {
    /**
     * The delivery stream name.
     */
    deliveryStreamName: string;
    /**
     * The ARN of the IAM role that grants access.
     */
    roleArn: string;
    /**
     * A character separator that is used to separate records written to the Firehose stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
     */
    separator?: string;
}

export interface TopicRuleKinesis {
    /**
     * The partition key.
     */
    partitionKey?: string;
    /**
     * The ARN of the IAM role that grants access.
     */
    roleArn: string;
    /**
     * The name of the Amazon Kinesis stream.
     */
    streamName: string;
}

export interface TopicRuleLambda {
    /**
     * The ARN of the Lambda function.
     */
    functionArn: string;
}

export interface TopicRuleRepublish {
    /**
     * The ARN of the IAM role that grants access.
     */
    roleArn: string;
    /**
     * The name of the MQTT topic the message should be republished to.
     */
    topic: string;
}

export interface TopicRuleS3 {
    /**
     * The Amazon S3 bucket name.
     */
    bucketName: string;
    /**
     * The object key.
     */
    key: string;
    /**
     * The ARN of the IAM role that grants access.
     */
    roleArn: string;
}

export interface TopicRuleSns {
    /**
     * The message format of the message to publish. Accepted values are "JSON" and "RAW".
     */
    messageFormat?: string;
    /**
     * The ARN of the IAM role that grants access.
     */
    roleArn: string;
    /**
     * The ARN of the SNS topic.
     */
    targetArn: string;
}

export interface TopicRuleSqs {
    /**
     * The URL of the Amazon SQS queue.
     */
    queueUrl: string;
    /**
     * The ARN of the IAM role that grants access.
     */
    roleArn: string;
    /**
     * Specifies whether to use Base64 encoding.
     */
    useBase64: boolean;
}
