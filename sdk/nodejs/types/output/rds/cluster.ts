// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputApi from "../../../types/input";
import * as outputApi from "../../../types/output";
import * as utilities from "../../../utilities";

import {EngineMode} from "../../../rds/engineMode";
import {EngineType} from "../../../rds/engineType";

export interface ClusterS3Import {
    /**
     * The bucket name where your backup is stored
     */
    bucketName: string;
    /**
     * Can be blank, but is the path to your backup
     */
    bucketPrefix?: string;
    /**
     * Role applied to load the data.
     */
    ingestionRole: string;
    /**
     * Source engine for the backup
     */
    sourceEngine: string;
    /**
     * Version of the source engine used to make the backup
     */
    sourceEngineVersion: string;
}

export interface ClusterScalingConfiguration {
    /**
     * Whether to enable automatic pause. A DB cluster can be paused only when it's idle (it has no connections). If a DB cluster is paused for more than seven days, the DB cluster might be backed up with a snapshot. In this case, the DB cluster is restored when there is a request to connect to it. Defaults to `true`.
     */
    autoPause?: boolean;
    /**
     * The maximum capacity. The maximum capacity must be greater than or equal to the minimum capacity. Valid capacity values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `128`, and `256`. Defaults to `16`.
     */
    maxCapacity?: number;
    /**
     * The minimum capacity. The minimum capacity must be lesser than or equal to the maximum capacity. Valid capacity values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `128`, and `256`. Defaults to `2`.
     */
    minCapacity?: number;
    /**
     * The time, in seconds, before an Aurora DB cluster in serverless mode is paused. Valid values are `300` through `86400`. Defaults to `300`.
     */
    secondsUntilAutoPause?: number;
    /**
     * The action to take when the timeout is reached. Valid values: `ForceApplyCapacityChange`, `RollbackCapacityChange`. Defaults to `RollbackCapacityChange`. See [documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.how-it-works.html#aurora-serverless.how-it-works.timeout-action).
     */
    timeoutAction?: string;
}
