// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputApi from "../../../types/input";
import * as outputApi from "../../../types/output";
import * as utilities from "../../../utilities";

export interface BudgetCostTypes {
    /**
     * A boolean value whether to include credits in the cost budget. Defaults to `true`
     */
    includeCredit?: boolean;
    /**
     * Specifies whether a budget includes discounts. Defaults to `true`
     */
    includeDiscount?: boolean;
    /**
     * A boolean value whether to include other subscription costs in the cost budget. Defaults to `true`
     */
    includeOtherSubscription?: boolean;
    /**
     * A boolean value whether to include recurring costs in the cost budget. Defaults to `true`
     */
    includeRecurring?: boolean;
    /**
     * A boolean value whether to include refunds in the cost budget. Defaults to `true`
     */
    includeRefund?: boolean;
    /**
     * A boolean value whether to include subscriptions in the cost budget. Defaults to `true`
     */
    includeSubscription?: boolean;
    /**
     * A boolean value whether to include support costs in the cost budget. Defaults to `true`
     */
    includeSupport?: boolean;
    /**
     * A boolean value whether to include tax in the cost budget. Defaults to `true`
     */
    includeTax?: boolean;
    /**
     * A boolean value whether to include upfront costs in the cost budget. Defaults to `true`
     */
    includeUpfront?: boolean;
    /**
     * Specifies whether a budget uses the amortized rate. Defaults to `false`
     */
    useAmortized?: boolean;
    /**
     * A boolean value whether to use blended costs in the cost budget. Defaults to `false`
     */
    useBlended?: boolean;
}

export interface BudgetNotification {
    /**
     * (Required) Comparison operator to use to evaluate the condition. Can be `LESS_THAN`, `EQUAL_TO` or `GREATER_THAN`.
     */
    comparisonOperator: string;
    /**
     * (Required) What kind of budget value to notify on. Can be `ACTUAL` or `FORECASTED`
     */
    notificationType: string;
    /**
     * (Optional) E-Mail addresses to notify. Either this or `subscriberSnsTopicArns` is required.
     */
    subscriberEmailAddresses?: string[];
    /**
     * (Optional) SNS topics to notify. Either this or `subscriberEmailAddresses` is required.
     */
    subscriberSnsTopicArns?: string[];
    /**
     * (Required) Threshold when the notification should be sent.
     */
    threshold: number;
    /**
     * (Required) What kind of threshold is defined. Can be `PERCENTAGE` OR `ABSOLUTE_VALUE`.
     */
    thresholdType: string;
}
