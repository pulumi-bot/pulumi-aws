// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputApi from "../../../types/input";
import * as outputApi from "../../../types/output";
import * as utilities from "../../../utilities";

export interface LoadBalancerAccessLogs {
    /**
     * The S3 bucket name to store the logs in.
     */
    bucket: string;
    /**
     * The S3 bucket prefix. Logs are stored in the root if not configured.
     */
    bucketPrefix?: string;
    /**
     * Boolean to enable / disable `accessLogs`. Default is `true`
     */
    enabled?: boolean;
    /**
     * The interval between checks.
     */
    interval?: number;
}

export interface LoadBalancerHealthCheck {
    /**
     * The number of checks before the instance is declared healthy.
     */
    healthyThreshold: number;
    /**
     * The interval between checks.
     */
    interval: number;
    /**
     * The target of the check. Valid pattern is "${PROTOCOL}:${PORT}${PATH}", where PROTOCOL
     * values are:
     * * `HTTP`, `HTTPS` - PORT and PATH are required
     * * `TCP`, `SSL` - PORT is required, PATH is not supported
     */
    target: string;
    /**
     * The length of time before the check times out.
     */
    timeout: number;
    /**
     * The number of checks before the instance is declared unhealthy.
     */
    unhealthyThreshold: number;
}

export interface LoadBalancerListener {
    /**
     * The port on the instance to route to
     */
    instancePort: number;
    /**
     * The protocol to use to the instance. Valid
     * values are `HTTP`, `HTTPS`, `TCP`, or `SSL`
     */
    instanceProtocol: string;
    /**
     * The port to listen on for the load balancer
     */
    lbPort: number;
    /**
     * The protocol to listen on. Valid values are `HTTP`,
     * `HTTPS`, `TCP`, or `SSL`
     */
    lbProtocol: string;
    /**
     * The ARN of an SSL certificate you have
     * uploaded to AWS IAM. **Note ECDSA-specific restrictions below.  Only valid when `lbProtocol` is either HTTPS or SSL**
     */
    sslCertificateId?: string;
}
