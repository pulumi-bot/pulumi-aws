// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputApi from "../../../types/input";
import * as outputApi from "../../../types/output";
import * as utilities from "../../../utilities";

export interface RouteSpec {
    /**
     * The HTTP routing information for the route.
     */
    httpRoute?: outputApi.appmesh.RouteSpecHttpRoute;
    /**
     * The TCP routing information for the route.
     */
    tcpRoute?: outputApi.appmesh.RouteSpecTcpRoute;
}

export interface RouteSpecHttpRoute {
    /**
     * The action to take if a match is determined.
     */
    action: outputApi.appmesh.RouteSpecHttpRouteAction;
    /**
     * The criteria for determining an HTTP request match.
     */
    match: outputApi.appmesh.RouteSpecHttpRouteMatch;
}

export interface RouteSpecHttpRouteAction {
    /**
     * The targets that traffic is routed to when a request matches the route.
     * You can specify one or more targets and their relative weights with which to distribute traffic.
     */
    weightedTargets: outputApi.appmesh.RouteSpecHttpRouteActionWeightedTarget[];
}

export interface RouteSpecHttpRouteActionWeightedTarget {
    /**
     * The virtual node to associate with the weighted target.
     */
    virtualNode: string;
    /**
     * The relative weight of the weighted target. An integer between 0 and 100.
     */
    weight: number;
}

export interface RouteSpecHttpRouteMatch {
    /**
     * Specifies the path with which to match requests.
     * This parameter must always start with /, which by itself matches all requests to the virtual router service name.
     */
    prefix: string;
}

export interface RouteSpecTcpRoute {
    /**
     * The action to take if a match is determined.
     */
    action: outputApi.appmesh.RouteSpecTcpRouteAction;
}

export interface RouteSpecTcpRouteAction {
    /**
     * The targets that traffic is routed to when a request matches the route.
     * You can specify one or more targets and their relative weights with which to distribute traffic.
     */
    weightedTargets: outputApi.appmesh.RouteSpecTcpRouteActionWeightedTarget[];
}

export interface RouteSpecTcpRouteActionWeightedTarget {
    /**
     * The virtual node to associate with the weighted target.
     */
    virtualNode: string;
    /**
     * The relative weight of the weighted target. An integer between 0 and 100.
     */
    weight: number;
}
