// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class Target extends pulumi.CustomResource {
    /**
     * Get an existing Target resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TargetState, opts?: pulumi.CustomResourceOptions): Target {
        return new Target(name, <any>state, { ...opts, id: id });
    }

    public readonly maxCapacity: pulumi.Output<number>;
    public readonly minCapacity: pulumi.Output<number>;
    public readonly resourceId: pulumi.Output<string>;
    public readonly roleArn: pulumi.Output<string>;
    public readonly scalableDimension: pulumi.Output<string>;
    public readonly serviceNamespace: pulumi.Output<string>;

    /**
     * Create a Target resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TargetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TargetArgs | TargetState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: TargetState = argsOrState as TargetState | undefined;
            inputs["maxCapacity"] = state ? state.maxCapacity : undefined;
            inputs["minCapacity"] = state ? state.minCapacity : undefined;
            inputs["resourceId"] = state ? state.resourceId : undefined;
            inputs["roleArn"] = state ? state.roleArn : undefined;
            inputs["scalableDimension"] = state ? state.scalableDimension : undefined;
            inputs["serviceNamespace"] = state ? state.serviceNamespace : undefined;
        } else {
            const args = argsOrState as TargetArgs | undefined;
            if (!args || args.maxCapacity === undefined) {
                throw new Error("Missing required property 'maxCapacity'");
            }
            if (!args || args.minCapacity === undefined) {
                throw new Error("Missing required property 'minCapacity'");
            }
            if (!args || args.resourceId === undefined) {
                throw new Error("Missing required property 'resourceId'");
            }
            if (!args || args.scalableDimension === undefined) {
                throw new Error("Missing required property 'scalableDimension'");
            }
            if (!args || args.serviceNamespace === undefined) {
                throw new Error("Missing required property 'serviceNamespace'");
            }
            inputs["maxCapacity"] = args ? args.maxCapacity : undefined;
            inputs["minCapacity"] = args ? args.minCapacity : undefined;
            inputs["resourceId"] = args ? args.resourceId : undefined;
            inputs["roleArn"] = args ? args.roleArn : undefined;
            inputs["scalableDimension"] = args ? args.scalableDimension : undefined;
            inputs["serviceNamespace"] = args ? args.serviceNamespace : undefined;
        }
        super("aws:appautoscaling/target:Target", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Target resources.
 */
export interface TargetState {
    readonly maxCapacity?: pulumi.Input<number>;
    readonly minCapacity?: pulumi.Input<number>;
    readonly resourceId?: pulumi.Input<string>;
    readonly roleArn?: pulumi.Input<string>;
    readonly scalableDimension?: pulumi.Input<string>;
    readonly serviceNamespace?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Target resource.
 */
export interface TargetArgs {
    readonly maxCapacity: pulumi.Input<number>;
    readonly minCapacity: pulumi.Input<number>;
    readonly resourceId: pulumi.Input<string>;
    readonly roleArn?: pulumi.Input<string>;
    readonly scalableDimension: pulumi.Input<string>;
    readonly serviceNamespace: pulumi.Input<string>;
}
