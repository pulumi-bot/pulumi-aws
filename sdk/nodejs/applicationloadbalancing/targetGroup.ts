// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class TargetGroup extends pulumi.CustomResource {
    /**
     * Get an existing TargetGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TargetGroupState, opts?: pulumi.CustomResourceOptions): TargetGroup {
        return new TargetGroup(name, <any>state, { ...opts, id: id });
    }

    public /*out*/ readonly arn: pulumi.Output<string>;
    public /*out*/ readonly arnSuffix: pulumi.Output<string>;
    public readonly deregistrationDelay: pulumi.Output<number | undefined>;
    public readonly healthCheck: pulumi.Output<{ healthyThreshold?: number, interval?: number, matcher: string, path: string, port?: string, protocol?: string, timeout: number, unhealthyThreshold?: number }>;
    public readonly name: pulumi.Output<string>;
    public readonly namePrefix: pulumi.Output<string | undefined>;
    public readonly port: pulumi.Output<number | undefined>;
    public readonly protocol: pulumi.Output<string | undefined>;
    public readonly proxyProtocolV2: pulumi.Output<boolean | undefined>;
    public readonly slowStart: pulumi.Output<number | undefined>;
    public readonly stickiness: pulumi.Output<{ cookieDuration?: number, enabled?: boolean, type: string }>;
    public readonly tags: pulumi.Output<{[key: string]: any} | undefined>;
    public readonly targetType: pulumi.Output<string | undefined>;
    public readonly vpcId: pulumi.Output<string | undefined>;

    /**
     * Create a TargetGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: TargetGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TargetGroupArgs | TargetGroupState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: TargetGroupState = argsOrState as TargetGroupState | undefined;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["arnSuffix"] = state ? state.arnSuffix : undefined;
            inputs["deregistrationDelay"] = state ? state.deregistrationDelay : undefined;
            inputs["healthCheck"] = state ? state.healthCheck : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["namePrefix"] = state ? state.namePrefix : undefined;
            inputs["port"] = state ? state.port : undefined;
            inputs["protocol"] = state ? state.protocol : undefined;
            inputs["proxyProtocolV2"] = state ? state.proxyProtocolV2 : undefined;
            inputs["slowStart"] = state ? state.slowStart : undefined;
            inputs["stickiness"] = state ? state.stickiness : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["targetType"] = state ? state.targetType : undefined;
            inputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as TargetGroupArgs | undefined;
            inputs["deregistrationDelay"] = args ? args.deregistrationDelay : undefined;
            inputs["healthCheck"] = args ? args.healthCheck : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["namePrefix"] = args ? args.namePrefix : undefined;
            inputs["port"] = args ? args.port : undefined;
            inputs["protocol"] = args ? args.protocol : undefined;
            inputs["proxyProtocolV2"] = args ? args.proxyProtocolV2 : undefined;
            inputs["slowStart"] = args ? args.slowStart : undefined;
            inputs["stickiness"] = args ? args.stickiness : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["targetType"] = args ? args.targetType : undefined;
            inputs["vpcId"] = args ? args.vpcId : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["arnSuffix"] = undefined /*out*/;
        }
        super("aws:applicationloadbalancing/targetGroup:TargetGroup", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TargetGroup resources.
 */
export interface TargetGroupState {
    readonly arn?: pulumi.Input<string>;
    readonly arnSuffix?: pulumi.Input<string>;
    readonly deregistrationDelay?: pulumi.Input<number>;
    readonly healthCheck?: pulumi.Input<{ healthyThreshold?: pulumi.Input<number>, interval?: pulumi.Input<number>, matcher?: pulumi.Input<string>, path?: pulumi.Input<string>, port?: pulumi.Input<string>, protocol?: pulumi.Input<string>, timeout?: pulumi.Input<number>, unhealthyThreshold?: pulumi.Input<number> }>;
    readonly name?: pulumi.Input<string>;
    readonly namePrefix?: pulumi.Input<string>;
    readonly port?: pulumi.Input<number>;
    readonly protocol?: pulumi.Input<string>;
    readonly proxyProtocolV2?: pulumi.Input<boolean>;
    readonly slowStart?: pulumi.Input<number>;
    readonly stickiness?: pulumi.Input<{ cookieDuration?: pulumi.Input<number>, enabled?: pulumi.Input<boolean>, type: pulumi.Input<string> }>;
    readonly tags?: pulumi.Input<{[key: string]: any}>;
    readonly targetType?: pulumi.Input<string>;
    readonly vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TargetGroup resource.
 */
export interface TargetGroupArgs {
    readonly deregistrationDelay?: pulumi.Input<number>;
    readonly healthCheck?: pulumi.Input<{ healthyThreshold?: pulumi.Input<number>, interval?: pulumi.Input<number>, matcher?: pulumi.Input<string>, path?: pulumi.Input<string>, port?: pulumi.Input<string>, protocol?: pulumi.Input<string>, timeout?: pulumi.Input<number>, unhealthyThreshold?: pulumi.Input<number> }>;
    readonly name?: pulumi.Input<string>;
    readonly namePrefix?: pulumi.Input<string>;
    readonly port?: pulumi.Input<number>;
    readonly protocol?: pulumi.Input<string>;
    readonly proxyProtocolV2?: pulumi.Input<boolean>;
    readonly slowStart?: pulumi.Input<number>;
    readonly stickiness?: pulumi.Input<{ cookieDuration?: pulumi.Input<number>, enabled?: pulumi.Input<boolean>, type: pulumi.Input<string> }>;
    readonly tags?: pulumi.Input<{[key: string]: any}>;
    readonly targetType?: pulumi.Input<string>;
    readonly vpcId?: pulumi.Input<string>;
}
