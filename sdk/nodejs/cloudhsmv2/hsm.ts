// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class Hsm extends pulumi.CustomResource {
    /**
     * Get an existing Hsm resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HsmState, opts?: pulumi.CustomResourceOptions): Hsm {
        return new Hsm(name, <any>state, { ...opts, id: id });
    }

    public readonly availabilityZone: pulumi.Output<string>;
    public readonly clusterId: pulumi.Output<string>;
    public /*out*/ readonly hsmEniId: pulumi.Output<string>;
    public /*out*/ readonly hsmId: pulumi.Output<string>;
    public /*out*/ readonly hsmState: pulumi.Output<string>;
    public readonly ipAddress: pulumi.Output<string>;
    public readonly subnetId: pulumi.Output<string>;

    /**
     * Create a Hsm resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HsmArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HsmArgs | HsmState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: HsmState = argsOrState as HsmState | undefined;
            inputs["availabilityZone"] = state ? state.availabilityZone : undefined;
            inputs["clusterId"] = state ? state.clusterId : undefined;
            inputs["hsmEniId"] = state ? state.hsmEniId : undefined;
            inputs["hsmId"] = state ? state.hsmId : undefined;
            inputs["hsmState"] = state ? state.hsmState : undefined;
            inputs["ipAddress"] = state ? state.ipAddress : undefined;
            inputs["subnetId"] = state ? state.subnetId : undefined;
        } else {
            const args = argsOrState as HsmArgs | undefined;
            if (!args || args.clusterId === undefined) {
                throw new Error("Missing required property 'clusterId'");
            }
            inputs["availabilityZone"] = args ? args.availabilityZone : undefined;
            inputs["clusterId"] = args ? args.clusterId : undefined;
            inputs["ipAddress"] = args ? args.ipAddress : undefined;
            inputs["subnetId"] = args ? args.subnetId : undefined;
            inputs["hsmEniId"] = undefined /*out*/;
            inputs["hsmId"] = undefined /*out*/;
            inputs["hsmState"] = undefined /*out*/;
        }
        super("aws:cloudhsmv2/hsm:Hsm", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Hsm resources.
 */
export interface HsmState {
    readonly availabilityZone?: pulumi.Input<string>;
    readonly clusterId?: pulumi.Input<string>;
    readonly hsmEniId?: pulumi.Input<string>;
    readonly hsmId?: pulumi.Input<string>;
    readonly hsmState?: pulumi.Input<string>;
    readonly ipAddress?: pulumi.Input<string>;
    readonly subnetId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Hsm resource.
 */
export interface HsmArgs {
    readonly availabilityZone?: pulumi.Input<string>;
    readonly clusterId: pulumi.Input<string>;
    readonly ipAddress?: pulumi.Input<string>;
    readonly subnetId?: pulumi.Input<string>;
}
