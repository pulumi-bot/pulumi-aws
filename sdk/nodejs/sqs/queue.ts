// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class Queue extends pulumi.CustomResource {
    /**
     * Get an existing Queue resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: QueueState, opts?: pulumi.CustomResourceOptions): Queue {
        return new Queue(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:sqs/queue:Queue';

    /**
     * Returns true if the given object is an instance of Queue.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Queue {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Queue.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly contentBasedDeduplication!: pulumi.Output<boolean | undefined>;
    public readonly delaySeconds!: pulumi.Output<number | undefined>;
    public readonly fifoQueue!: pulumi.Output<boolean | undefined>;
    public readonly kmsDataKeyReusePeriodSeconds!: pulumi.Output<number>;
    public readonly kmsMasterKeyId!: pulumi.Output<string | undefined>;
    public readonly maxMessageSize!: pulumi.Output<number | undefined>;
    public readonly messageRetentionSeconds!: pulumi.Output<number | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly namePrefix!: pulumi.Output<string | undefined>;
    public readonly policy!: pulumi.Output<string>;
    public readonly receiveWaitTimeSeconds!: pulumi.Output<number | undefined>;
    public readonly redrivePolicy!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly visibilityTimeoutSeconds!: pulumi.Output<number | undefined>;

    /**
     * Create a Queue resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: QueueArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: QueueArgs | QueueState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as QueueState | undefined;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["contentBasedDeduplication"] = state ? state.contentBasedDeduplication : undefined;
            inputs["delaySeconds"] = state ? state.delaySeconds : undefined;
            inputs["fifoQueue"] = state ? state.fifoQueue : undefined;
            inputs["kmsDataKeyReusePeriodSeconds"] = state ? state.kmsDataKeyReusePeriodSeconds : undefined;
            inputs["kmsMasterKeyId"] = state ? state.kmsMasterKeyId : undefined;
            inputs["maxMessageSize"] = state ? state.maxMessageSize : undefined;
            inputs["messageRetentionSeconds"] = state ? state.messageRetentionSeconds : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["namePrefix"] = state ? state.namePrefix : undefined;
            inputs["policy"] = state ? state.policy : undefined;
            inputs["receiveWaitTimeSeconds"] = state ? state.receiveWaitTimeSeconds : undefined;
            inputs["redrivePolicy"] = state ? state.redrivePolicy : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["visibilityTimeoutSeconds"] = state ? state.visibilityTimeoutSeconds : undefined;
        } else {
            const args = argsOrState as QueueArgs | undefined;
            inputs["contentBasedDeduplication"] = args ? args.contentBasedDeduplication : undefined;
            inputs["delaySeconds"] = args ? args.delaySeconds : undefined;
            inputs["fifoQueue"] = args ? args.fifoQueue : undefined;
            inputs["kmsDataKeyReusePeriodSeconds"] = args ? args.kmsDataKeyReusePeriodSeconds : undefined;
            inputs["kmsMasterKeyId"] = args ? args.kmsMasterKeyId : undefined;
            inputs["maxMessageSize"] = args ? args.maxMessageSize : undefined;
            inputs["messageRetentionSeconds"] = args ? args.messageRetentionSeconds : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["namePrefix"] = args ? args.namePrefix : undefined;
            inputs["policy"] = args ? args.policy : undefined;
            inputs["receiveWaitTimeSeconds"] = args ? args.receiveWaitTimeSeconds : undefined;
            inputs["redrivePolicy"] = args ? args.redrivePolicy : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["visibilityTimeoutSeconds"] = args ? args.visibilityTimeoutSeconds : undefined;
            inputs["arn"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Queue.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Queue resources.
 */
export interface QueueState {
    readonly arn?: pulumi.Input<string>;
    readonly contentBasedDeduplication?: pulumi.Input<boolean>;
    readonly delaySeconds?: pulumi.Input<number>;
    readonly fifoQueue?: pulumi.Input<boolean>;
    readonly kmsDataKeyReusePeriodSeconds?: pulumi.Input<number>;
    readonly kmsMasterKeyId?: pulumi.Input<string>;
    readonly maxMessageSize?: pulumi.Input<number>;
    readonly messageRetentionSeconds?: pulumi.Input<number>;
    readonly name?: pulumi.Input<string>;
    readonly namePrefix?: pulumi.Input<string>;
    readonly policy?: pulumi.Input<string>;
    readonly receiveWaitTimeSeconds?: pulumi.Input<number>;
    readonly redrivePolicy?: pulumi.Input<string>;
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly visibilityTimeoutSeconds?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Queue resource.
 */
export interface QueueArgs {
    readonly contentBasedDeduplication?: pulumi.Input<boolean>;
    readonly delaySeconds?: pulumi.Input<number>;
    readonly fifoQueue?: pulumi.Input<boolean>;
    readonly kmsDataKeyReusePeriodSeconds?: pulumi.Input<number>;
    readonly kmsMasterKeyId?: pulumi.Input<string>;
    readonly maxMessageSize?: pulumi.Input<number>;
    readonly messageRetentionSeconds?: pulumi.Input<number>;
    readonly name?: pulumi.Input<string>;
    readonly namePrefix?: pulumi.Input<string>;
    readonly policy?: pulumi.Input<string>;
    readonly receiveWaitTimeSeconds?: pulumi.Input<number>;
    readonly redrivePolicy?: pulumi.Input<string>;
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly visibilityTimeoutSeconds?: pulumi.Input<number>;
}
