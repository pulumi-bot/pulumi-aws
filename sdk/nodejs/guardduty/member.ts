// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class Member extends pulumi.CustomResource {
    /**
     * Get an existing Member resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MemberState, opts?: pulumi.CustomResourceOptions): Member {
        return new Member(name, <any>state, { ...opts, id: id });
    }

    public readonly accountId: pulumi.Output<string>;
    public readonly detectorId: pulumi.Output<string>;
    public readonly disableEmailNotification: pulumi.Output<boolean | undefined>;
    public readonly email: pulumi.Output<string>;
    public readonly invitationMessage: pulumi.Output<string | undefined>;
    public readonly invite: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly relationshipStatus: pulumi.Output<string>;

    /**
     * Create a Member resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MemberArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MemberArgs | MemberState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: MemberState = argsOrState as MemberState | undefined;
            inputs["accountId"] = state ? state.accountId : undefined;
            inputs["detectorId"] = state ? state.detectorId : undefined;
            inputs["disableEmailNotification"] = state ? state.disableEmailNotification : undefined;
            inputs["email"] = state ? state.email : undefined;
            inputs["invitationMessage"] = state ? state.invitationMessage : undefined;
            inputs["invite"] = state ? state.invite : undefined;
            inputs["relationshipStatus"] = state ? state.relationshipStatus : undefined;
        } else {
            const args = argsOrState as MemberArgs | undefined;
            if (!args || args.accountId === undefined) {
                throw new Error("Missing required property 'accountId'");
            }
            if (!args || args.detectorId === undefined) {
                throw new Error("Missing required property 'detectorId'");
            }
            if (!args || args.email === undefined) {
                throw new Error("Missing required property 'email'");
            }
            inputs["accountId"] = args ? args.accountId : undefined;
            inputs["detectorId"] = args ? args.detectorId : undefined;
            inputs["disableEmailNotification"] = args ? args.disableEmailNotification : undefined;
            inputs["email"] = args ? args.email : undefined;
            inputs["invitationMessage"] = args ? args.invitationMessage : undefined;
            inputs["invite"] = args ? args.invite : undefined;
            inputs["relationshipStatus"] = undefined /*out*/;
        }
        super("aws:guardduty/member:Member", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Member resources.
 */
export interface MemberState {
    readonly accountId?: pulumi.Input<string>;
    readonly detectorId?: pulumi.Input<string>;
    readonly disableEmailNotification?: pulumi.Input<boolean>;
    readonly email?: pulumi.Input<string>;
    readonly invitationMessage?: pulumi.Input<string>;
    readonly invite?: pulumi.Input<boolean>;
    readonly relationshipStatus?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Member resource.
 */
export interface MemberArgs {
    readonly accountId: pulumi.Input<string>;
    readonly detectorId: pulumi.Input<string>;
    readonly disableEmailNotification?: pulumi.Input<boolean>;
    readonly email: pulumi.Input<string>;
    readonly invitationMessage?: pulumi.Input<string>;
    readonly invite?: pulumi.Input<boolean>;
}
