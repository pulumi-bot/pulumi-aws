// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class DeliveryChannel extends pulumi.CustomResource {
    /**
     * Get an existing DeliveryChannel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DeliveryChannelState, opts?: pulumi.CustomResourceOptions): DeliveryChannel {
        return new DeliveryChannel(name, <any>state, { ...opts, id: id });
    }

    public readonly name: pulumi.Output<string>;
    public readonly s3BucketName: pulumi.Output<string>;
    public readonly s3KeyPrefix: pulumi.Output<string | undefined>;
    public readonly snapshotDeliveryProperties: pulumi.Output<{ deliveryFrequency?: string } | undefined>;
    public readonly snsTopicArn: pulumi.Output<string | undefined>;

    /**
     * Create a DeliveryChannel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DeliveryChannelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DeliveryChannelArgs | DeliveryChannelState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: DeliveryChannelState = argsOrState as DeliveryChannelState | undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["s3BucketName"] = state ? state.s3BucketName : undefined;
            inputs["s3KeyPrefix"] = state ? state.s3KeyPrefix : undefined;
            inputs["snapshotDeliveryProperties"] = state ? state.snapshotDeliveryProperties : undefined;
            inputs["snsTopicArn"] = state ? state.snsTopicArn : undefined;
        } else {
            const args = argsOrState as DeliveryChannelArgs | undefined;
            if (!args || args.s3BucketName === undefined) {
                throw new Error("Missing required property 's3BucketName'");
            }
            inputs["name"] = args ? args.name : undefined;
            inputs["s3BucketName"] = args ? args.s3BucketName : undefined;
            inputs["s3KeyPrefix"] = args ? args.s3KeyPrefix : undefined;
            inputs["snapshotDeliveryProperties"] = args ? args.snapshotDeliveryProperties : undefined;
            inputs["snsTopicArn"] = args ? args.snsTopicArn : undefined;
        }
        super("aws:cfg/deliveryChannel:DeliveryChannel", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DeliveryChannel resources.
 */
export interface DeliveryChannelState {
    readonly name?: pulumi.Input<string>;
    readonly s3BucketName?: pulumi.Input<string>;
    readonly s3KeyPrefix?: pulumi.Input<string>;
    readonly snapshotDeliveryProperties?: pulumi.Input<{ deliveryFrequency?: pulumi.Input<string> }>;
    readonly snsTopicArn?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DeliveryChannel resource.
 */
export interface DeliveryChannelArgs {
    readonly name?: pulumi.Input<string>;
    readonly s3BucketName: pulumi.Input<string>;
    readonly s3KeyPrefix?: pulumi.Input<string>;
    readonly snapshotDeliveryProperties?: pulumi.Input<{ deliveryFrequency?: pulumi.Input<string> }>;
    readonly snsTopicArn?: pulumi.Input<string>;
}
