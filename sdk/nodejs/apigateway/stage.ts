// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

import {Deployment} from "./deployment";
import {RestApi} from "./restApi";

export class Stage extends pulumi.CustomResource {
    /**
     * Get an existing Stage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StageState, opts?: pulumi.CustomResourceOptions): Stage {
        return new Stage(name, <any>state, { ...opts, id: id });
    }

    public readonly accessLogSettings: pulumi.Output<{ destinationArn: string, format: string } | undefined>;
    public readonly cacheClusterEnabled: pulumi.Output<boolean | undefined>;
    public readonly cacheClusterSize: pulumi.Output<string | undefined>;
    public readonly clientCertificateId: pulumi.Output<string | undefined>;
    public readonly deployment: pulumi.Output<Deployment>;
    public readonly description: pulumi.Output<string | undefined>;
    public readonly documentationVersion: pulumi.Output<string | undefined>;
    public /*out*/ readonly executionArn: pulumi.Output<string>;
    public /*out*/ readonly invokeUrl: pulumi.Output<string>;
    public readonly restApi: pulumi.Output<RestApi>;
    public readonly stageName: pulumi.Output<string>;
    public readonly tags: pulumi.Output<{[key: string]: any} | undefined>;
    public readonly variables: pulumi.Output<{[key: string]: any} | undefined>;
    public readonly xrayTracingEnabled: pulumi.Output<boolean | undefined>;

    /**
     * Create a Stage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StageArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StageArgs | StageState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: StageState = argsOrState as StageState | undefined;
            inputs["accessLogSettings"] = state ? state.accessLogSettings : undefined;
            inputs["cacheClusterEnabled"] = state ? state.cacheClusterEnabled : undefined;
            inputs["cacheClusterSize"] = state ? state.cacheClusterSize : undefined;
            inputs["clientCertificateId"] = state ? state.clientCertificateId : undefined;
            inputs["deployment"] = state ? state.deployment : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["documentationVersion"] = state ? state.documentationVersion : undefined;
            inputs["executionArn"] = state ? state.executionArn : undefined;
            inputs["invokeUrl"] = state ? state.invokeUrl : undefined;
            inputs["restApi"] = state ? state.restApi : undefined;
            inputs["stageName"] = state ? state.stageName : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["variables"] = state ? state.variables : undefined;
            inputs["xrayTracingEnabled"] = state ? state.xrayTracingEnabled : undefined;
        } else {
            const args = argsOrState as StageArgs | undefined;
            if (!args || args.deployment === undefined) {
                throw new Error("Missing required property 'deployment'");
            }
            if (!args || args.restApi === undefined) {
                throw new Error("Missing required property 'restApi'");
            }
            if (!args || args.stageName === undefined) {
                throw new Error("Missing required property 'stageName'");
            }
            inputs["accessLogSettings"] = args ? args.accessLogSettings : undefined;
            inputs["cacheClusterEnabled"] = args ? args.cacheClusterEnabled : undefined;
            inputs["cacheClusterSize"] = args ? args.cacheClusterSize : undefined;
            inputs["clientCertificateId"] = args ? args.clientCertificateId : undefined;
            inputs["deployment"] = args ? args.deployment : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["documentationVersion"] = args ? args.documentationVersion : undefined;
            inputs["restApi"] = args ? args.restApi : undefined;
            inputs["stageName"] = args ? args.stageName : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["variables"] = args ? args.variables : undefined;
            inputs["xrayTracingEnabled"] = args ? args.xrayTracingEnabled : undefined;
            inputs["executionArn"] = undefined /*out*/;
            inputs["invokeUrl"] = undefined /*out*/;
        }
        super("aws:apigateway/stage:Stage", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Stage resources.
 */
export interface StageState {
    readonly accessLogSettings?: pulumi.Input<{ destinationArn: pulumi.Input<string>, format: pulumi.Input<string> }>;
    readonly cacheClusterEnabled?: pulumi.Input<boolean>;
    readonly cacheClusterSize?: pulumi.Input<string>;
    readonly clientCertificateId?: pulumi.Input<string>;
    readonly deployment?: pulumi.Input<Deployment>;
    readonly description?: pulumi.Input<string>;
    readonly documentationVersion?: pulumi.Input<string>;
    readonly executionArn?: pulumi.Input<string>;
    readonly invokeUrl?: pulumi.Input<string>;
    readonly restApi?: pulumi.Input<RestApi>;
    readonly stageName?: pulumi.Input<string>;
    readonly tags?: pulumi.Input<{[key: string]: any}>;
    readonly variables?: pulumi.Input<{[key: string]: any}>;
    readonly xrayTracingEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a Stage resource.
 */
export interface StageArgs {
    readonly accessLogSettings?: pulumi.Input<{ destinationArn: pulumi.Input<string>, format: pulumi.Input<string> }>;
    readonly cacheClusterEnabled?: pulumi.Input<boolean>;
    readonly cacheClusterSize?: pulumi.Input<string>;
    readonly clientCertificateId?: pulumi.Input<string>;
    readonly deployment: pulumi.Input<Deployment>;
    readonly description?: pulumi.Input<string>;
    readonly documentationVersion?: pulumi.Input<string>;
    readonly restApi: pulumi.Input<RestApi>;
    readonly stageName: pulumi.Input<string>;
    readonly tags?: pulumi.Input<{[key: string]: any}>;
    readonly variables?: pulumi.Input<{[key: string]: any}>;
    readonly xrayTracingEnabled?: pulumi.Input<boolean>;
}
