// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getCluster(args: GetClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("aws:redshift/getCluster:getCluster", {
        "clusterIdentifier": args.clusterIdentifier,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getCluster.
 */
export interface GetClusterArgs {
    readonly clusterIdentifier: string;
    readonly tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getCluster.
 */
export interface GetClusterResult {
    readonly allowVersionUpgrade: boolean;
    readonly automatedSnapshotRetentionPeriod: number;
    readonly availabilityZone: string;
    readonly bucketName: string;
    readonly clusterIdentifier: string;
    readonly clusterParameterGroupName: string;
    readonly clusterPublicKey: string;
    readonly clusterRevisionNumber: string;
    readonly clusterSecurityGroups: string[];
    readonly clusterSubnetGroupName: string;
    readonly clusterType: string;
    readonly clusterVersion: string;
    readonly databaseName: string;
    readonly elasticIp: string;
    readonly enableLogging: boolean;
    readonly encrypted: boolean;
    readonly endpoint: string;
    readonly enhancedVpcRouting: boolean;
    readonly iamRoles: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly kmsKeyId: string;
    readonly masterUsername: string;
    readonly nodeType: string;
    readonly numberOfNodes: number;
    readonly port: number;
    readonly preferredMaintenanceWindow: string;
    readonly publiclyAccessible: boolean;
    readonly s3KeyPrefix: string;
    readonly tags?: {[key: string]: string};
    readonly vpcId: string;
    readonly vpcSecurityGroupIds: string[];
}
