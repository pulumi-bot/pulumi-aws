// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class Pipeline extends pulumi.CustomResource {
    /**
     * Get an existing Pipeline resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PipelineState, opts?: pulumi.CustomResourceOptions): Pipeline {
        return new Pipeline(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:elastictranscoder/pipeline:Pipeline';

    /**
     * Returns true if the given object is an instance of Pipeline.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Pipeline {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Pipeline.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly awsKmsKeyArn!: pulumi.Output<string | undefined>;
    public readonly contentConfig!: pulumi.Output<outputs.elastictranscoder.PipelineContentConfig>;
    public readonly contentConfigPermissions!: pulumi.Output<outputs.elastictranscoder.PipelineContentConfigPermission[] | undefined>;
    public readonly inputBucket!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly notifications!: pulumi.Output<outputs.elastictranscoder.PipelineNotifications | undefined>;
    public readonly outputBucket!: pulumi.Output<string>;
    public readonly role!: pulumi.Output<string>;
    public readonly thumbnailConfig!: pulumi.Output<outputs.elastictranscoder.PipelineThumbnailConfig>;
    public readonly thumbnailConfigPermissions!: pulumi.Output<outputs.elastictranscoder.PipelineThumbnailConfigPermission[] | undefined>;

    /**
     * Create a Pipeline resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PipelineArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PipelineArgs | PipelineState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as PipelineState | undefined;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["awsKmsKeyArn"] = state ? state.awsKmsKeyArn : undefined;
            inputs["contentConfig"] = state ? state.contentConfig : undefined;
            inputs["contentConfigPermissions"] = state ? state.contentConfigPermissions : undefined;
            inputs["inputBucket"] = state ? state.inputBucket : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["notifications"] = state ? state.notifications : undefined;
            inputs["outputBucket"] = state ? state.outputBucket : undefined;
            inputs["role"] = state ? state.role : undefined;
            inputs["thumbnailConfig"] = state ? state.thumbnailConfig : undefined;
            inputs["thumbnailConfigPermissions"] = state ? state.thumbnailConfigPermissions : undefined;
        } else {
            const args = argsOrState as PipelineArgs | undefined;
            if (!args || args.inputBucket === undefined) {
                throw new Error("Missing required property 'inputBucket'");
            }
            if (!args || args.role === undefined) {
                throw new Error("Missing required property 'role'");
            }
            inputs["awsKmsKeyArn"] = args ? args.awsKmsKeyArn : undefined;
            inputs["contentConfig"] = args ? args.contentConfig : undefined;
            inputs["contentConfigPermissions"] = args ? args.contentConfigPermissions : undefined;
            inputs["inputBucket"] = args ? args.inputBucket : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["notifications"] = args ? args.notifications : undefined;
            inputs["outputBucket"] = args ? args.outputBucket : undefined;
            inputs["role"] = args ? args.role : undefined;
            inputs["thumbnailConfig"] = args ? args.thumbnailConfig : undefined;
            inputs["thumbnailConfigPermissions"] = args ? args.thumbnailConfigPermissions : undefined;
            inputs["arn"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Pipeline.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Pipeline resources.
 */
export interface PipelineState {
    readonly arn?: pulumi.Input<string>;
    readonly awsKmsKeyArn?: pulumi.Input<string>;
    readonly contentConfig?: pulumi.Input<inputs.elastictranscoder.PipelineContentConfig>;
    readonly contentConfigPermissions?: pulumi.Input<pulumi.Input<inputs.elastictranscoder.PipelineContentConfigPermission>[]>;
    readonly inputBucket?: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly notifications?: pulumi.Input<inputs.elastictranscoder.PipelineNotifications>;
    readonly outputBucket?: pulumi.Input<string>;
    readonly role?: pulumi.Input<string>;
    readonly thumbnailConfig?: pulumi.Input<inputs.elastictranscoder.PipelineThumbnailConfig>;
    readonly thumbnailConfigPermissions?: pulumi.Input<pulumi.Input<inputs.elastictranscoder.PipelineThumbnailConfigPermission>[]>;
}

/**
 * The set of arguments for constructing a Pipeline resource.
 */
export interface PipelineArgs {
    readonly awsKmsKeyArn?: pulumi.Input<string>;
    readonly contentConfig?: pulumi.Input<inputs.elastictranscoder.PipelineContentConfig>;
    readonly contentConfigPermissions?: pulumi.Input<pulumi.Input<inputs.elastictranscoder.PipelineContentConfigPermission>[]>;
    readonly inputBucket: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly notifications?: pulumi.Input<inputs.elastictranscoder.PipelineNotifications>;
    readonly outputBucket?: pulumi.Input<string>;
    readonly role: pulumi.Input<string>;
    readonly thumbnailConfig?: pulumi.Input<inputs.elastictranscoder.PipelineThumbnailConfig>;
    readonly thumbnailConfigPermissions?: pulumi.Input<pulumi.Input<inputs.elastictranscoder.PipelineThumbnailConfigPermission>[]>;
}
