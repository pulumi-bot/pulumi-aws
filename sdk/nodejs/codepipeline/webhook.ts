// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class Webhook extends pulumi.CustomResource {
    /**
     * Get an existing Webhook resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WebhookState, opts?: pulumi.CustomResourceOptions): Webhook {
        return new Webhook(name, <any>state, { ...opts, id: id });
    }

    public readonly authentication: pulumi.Output<string>;
    public readonly authenticationConfiguration: pulumi.Output<{ allowedIpRange?: string, secretToken?: string } | undefined>;
    public readonly filters: pulumi.Output<{ jsonPath: string, matchEquals: string }[]>;
    public readonly name: pulumi.Output<string>;
    public readonly targetAction: pulumi.Output<string>;
    public readonly targetPipeline: pulumi.Output<string>;
    public /*out*/ readonly url: pulumi.Output<string>;

    /**
     * Create a Webhook resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WebhookArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WebhookArgs | WebhookState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: WebhookState = argsOrState as WebhookState | undefined;
            inputs["authentication"] = state ? state.authentication : undefined;
            inputs["authenticationConfiguration"] = state ? state.authenticationConfiguration : undefined;
            inputs["filters"] = state ? state.filters : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["targetAction"] = state ? state.targetAction : undefined;
            inputs["targetPipeline"] = state ? state.targetPipeline : undefined;
            inputs["url"] = state ? state.url : undefined;
        } else {
            const args = argsOrState as WebhookArgs | undefined;
            if (!args || args.authentication === undefined) {
                throw new Error("Missing required property 'authentication'");
            }
            if (!args || args.filters === undefined) {
                throw new Error("Missing required property 'filters'");
            }
            if (!args || args.targetAction === undefined) {
                throw new Error("Missing required property 'targetAction'");
            }
            if (!args || args.targetPipeline === undefined) {
                throw new Error("Missing required property 'targetPipeline'");
            }
            inputs["authentication"] = args ? args.authentication : undefined;
            inputs["authenticationConfiguration"] = args ? args.authenticationConfiguration : undefined;
            inputs["filters"] = args ? args.filters : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["targetAction"] = args ? args.targetAction : undefined;
            inputs["targetPipeline"] = args ? args.targetPipeline : undefined;
            inputs["url"] = undefined /*out*/;
        }
        super("aws:codepipeline/webhook:Webhook", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Webhook resources.
 */
export interface WebhookState {
    readonly authentication?: pulumi.Input<string>;
    readonly authenticationConfiguration?: pulumi.Input<{ allowedIpRange?: pulumi.Input<string>, secretToken?: pulumi.Input<string> }>;
    readonly filters?: pulumi.Input<pulumi.Input<{ jsonPath: pulumi.Input<string>, matchEquals: pulumi.Input<string> }>[]>;
    readonly name?: pulumi.Input<string>;
    readonly targetAction?: pulumi.Input<string>;
    readonly targetPipeline?: pulumi.Input<string>;
    readonly url?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Webhook resource.
 */
export interface WebhookArgs {
    readonly authentication: pulumi.Input<string>;
    readonly authenticationConfiguration?: pulumi.Input<{ allowedIpRange?: pulumi.Input<string>, secretToken?: pulumi.Input<string> }>;
    readonly filters: pulumi.Input<pulumi.Input<{ jsonPath: pulumi.Input<string>, matchEquals: pulumi.Input<string> }>[]>;
    readonly name?: pulumi.Input<string>;
    readonly targetAction: pulumi.Input<string>;
    readonly targetPipeline: pulumi.Input<string>;
}
