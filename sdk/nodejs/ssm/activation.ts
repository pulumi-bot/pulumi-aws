// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class Activation extends pulumi.CustomResource {
    /**
     * Get an existing Activation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ActivationState, opts?: pulumi.CustomResourceOptions): Activation {
        return new Activation(name, <any>state, { ...opts, id: id });
    }

    public /*out*/ readonly activationCode: pulumi.Output<string>;
    public readonly description: pulumi.Output<string | undefined>;
    public readonly expirationDate: pulumi.Output<string | undefined>;
    public /*out*/ readonly expired: pulumi.Output<string>;
    public readonly iamRole: pulumi.Output<string>;
    public readonly name: pulumi.Output<string>;
    public /*out*/ readonly registrationCount: pulumi.Output<number>;
    public readonly registrationLimit: pulumi.Output<number | undefined>;

    /**
     * Create a Activation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ActivationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ActivationArgs | ActivationState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: ActivationState = argsOrState as ActivationState | undefined;
            inputs["activationCode"] = state ? state.activationCode : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["expirationDate"] = state ? state.expirationDate : undefined;
            inputs["expired"] = state ? state.expired : undefined;
            inputs["iamRole"] = state ? state.iamRole : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["registrationCount"] = state ? state.registrationCount : undefined;
            inputs["registrationLimit"] = state ? state.registrationLimit : undefined;
        } else {
            const args = argsOrState as ActivationArgs | undefined;
            if (!args || args.iamRole === undefined) {
                throw new Error("Missing required property 'iamRole'");
            }
            inputs["description"] = args ? args.description : undefined;
            inputs["expirationDate"] = args ? args.expirationDate : undefined;
            inputs["iamRole"] = args ? args.iamRole : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["registrationLimit"] = args ? args.registrationLimit : undefined;
            inputs["activationCode"] = undefined /*out*/;
            inputs["expired"] = undefined /*out*/;
            inputs["registrationCount"] = undefined /*out*/;
        }
        super("aws:ssm/activation:Activation", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Activation resources.
 */
export interface ActivationState {
    readonly activationCode?: pulumi.Input<string>;
    readonly description?: pulumi.Input<string>;
    readonly expirationDate?: pulumi.Input<string>;
    readonly expired?: pulumi.Input<string>;
    readonly iamRole?: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly registrationCount?: pulumi.Input<number>;
    readonly registrationLimit?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Activation resource.
 */
export interface ActivationArgs {
    readonly description?: pulumi.Input<string>;
    readonly expirationDate?: pulumi.Input<string>;
    readonly iamRole: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly registrationLimit?: pulumi.Input<number>;
}
