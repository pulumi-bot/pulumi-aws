// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class Association extends pulumi.CustomResource {
    /**
     * Get an existing Association resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AssociationState, opts?: pulumi.CustomResourceOptions): Association {
        return new Association(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:ssm/association:Association';

    /**
     * Returns true if the given object is an instance of Association.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Association {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Association.__pulumiType;
    }

    public /*out*/ readonly associationId!: pulumi.Output<string>;
    public readonly associationName!: pulumi.Output<string | undefined>;
    public readonly automationTargetParameterName!: pulumi.Output<string | undefined>;
    public readonly complianceSeverity!: pulumi.Output<string | undefined>;
    public readonly documentVersion!: pulumi.Output<string>;
    public readonly instanceId!: pulumi.Output<string | undefined>;
    public readonly maxConcurrency!: pulumi.Output<string | undefined>;
    public readonly maxErrors!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly outputLocation!: pulumi.Output<outputs.ssm.AssociationOutputLocation | undefined>;
    public readonly parameters!: pulumi.Output<{[key: string]: string}>;
    public readonly scheduleExpression!: pulumi.Output<string | undefined>;
    public readonly targets!: pulumi.Output<outputs.ssm.AssociationTarget[]>;

    /**
     * Create a Association resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AssociationArgs | AssociationState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as AssociationState | undefined;
            inputs["associationId"] = state ? state.associationId : undefined;
            inputs["associationName"] = state ? state.associationName : undefined;
            inputs["automationTargetParameterName"] = state ? state.automationTargetParameterName : undefined;
            inputs["complianceSeverity"] = state ? state.complianceSeverity : undefined;
            inputs["documentVersion"] = state ? state.documentVersion : undefined;
            inputs["instanceId"] = state ? state.instanceId : undefined;
            inputs["maxConcurrency"] = state ? state.maxConcurrency : undefined;
            inputs["maxErrors"] = state ? state.maxErrors : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["outputLocation"] = state ? state.outputLocation : undefined;
            inputs["parameters"] = state ? state.parameters : undefined;
            inputs["scheduleExpression"] = state ? state.scheduleExpression : undefined;
            inputs["targets"] = state ? state.targets : undefined;
        } else {
            const args = argsOrState as AssociationArgs | undefined;
            inputs["associationName"] = args ? args.associationName : undefined;
            inputs["automationTargetParameterName"] = args ? args.automationTargetParameterName : undefined;
            inputs["complianceSeverity"] = args ? args.complianceSeverity : undefined;
            inputs["documentVersion"] = args ? args.documentVersion : undefined;
            inputs["instanceId"] = args ? args.instanceId : undefined;
            inputs["maxConcurrency"] = args ? args.maxConcurrency : undefined;
            inputs["maxErrors"] = args ? args.maxErrors : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["outputLocation"] = args ? args.outputLocation : undefined;
            inputs["parameters"] = args ? args.parameters : undefined;
            inputs["scheduleExpression"] = args ? args.scheduleExpression : undefined;
            inputs["targets"] = args ? args.targets : undefined;
            inputs["associationId"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Association.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Association resources.
 */
export interface AssociationState {
    readonly associationId?: pulumi.Input<string>;
    readonly associationName?: pulumi.Input<string>;
    readonly automationTargetParameterName?: pulumi.Input<string>;
    readonly complianceSeverity?: pulumi.Input<string>;
    readonly documentVersion?: pulumi.Input<string>;
    readonly instanceId?: pulumi.Input<string>;
    readonly maxConcurrency?: pulumi.Input<string>;
    readonly maxErrors?: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly outputLocation?: pulumi.Input<inputs.ssm.AssociationOutputLocation>;
    readonly parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly scheduleExpression?: pulumi.Input<string>;
    readonly targets?: pulumi.Input<pulumi.Input<inputs.ssm.AssociationTarget>[]>;
}

/**
 * The set of arguments for constructing a Association resource.
 */
export interface AssociationArgs {
    readonly associationName?: pulumi.Input<string>;
    readonly automationTargetParameterName?: pulumi.Input<string>;
    readonly complianceSeverity?: pulumi.Input<string>;
    readonly documentVersion?: pulumi.Input<string>;
    readonly instanceId?: pulumi.Input<string>;
    readonly maxConcurrency?: pulumi.Input<string>;
    readonly maxErrors?: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly outputLocation?: pulumi.Input<inputs.ssm.AssociationOutputLocation>;
    readonly parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly scheduleExpression?: pulumi.Input<string>;
    readonly targets?: pulumi.Input<pulumi.Input<inputs.ssm.AssociationTarget>[]>;
}
