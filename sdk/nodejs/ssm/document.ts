// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class Document extends pulumi.CustomResource {
    /**
     * Get an existing Document resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DocumentState, opts?: pulumi.CustomResourceOptions): Document {
        return new Document(name, <any>state, { ...opts, id: id });
    }

    public /*out*/ readonly arn: pulumi.Output<string>;
    public readonly content: pulumi.Output<string>;
    public /*out*/ readonly createdDate: pulumi.Output<string>;
    public /*out*/ readonly defaultVersion: pulumi.Output<string>;
    public /*out*/ readonly description: pulumi.Output<string>;
    public readonly documentFormat: pulumi.Output<string | undefined>;
    public readonly documentType: pulumi.Output<string>;
    public /*out*/ readonly hash: pulumi.Output<string>;
    public /*out*/ readonly hashType: pulumi.Output<string>;
    public /*out*/ readonly latestVersion: pulumi.Output<string>;
    public readonly name: pulumi.Output<string>;
    public /*out*/ readonly owner: pulumi.Output<string>;
    public /*out*/ readonly parameters: pulumi.Output<{ defaultValue?: string, description?: string, name?: string, type?: string }[]>;
    public readonly permissions: pulumi.Output<{ accountIds: string, type: string } | undefined>;
    public /*out*/ readonly platformTypes: pulumi.Output<string[]>;
    public /*out*/ readonly schemaVersion: pulumi.Output<string>;
    public /*out*/ readonly status: pulumi.Output<string>;
    public readonly tags: pulumi.Output<{[key: string]: any} | undefined>;

    /**
     * Create a Document resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DocumentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DocumentArgs | DocumentState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: DocumentState = argsOrState as DocumentState | undefined;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["content"] = state ? state.content : undefined;
            inputs["createdDate"] = state ? state.createdDate : undefined;
            inputs["defaultVersion"] = state ? state.defaultVersion : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["documentFormat"] = state ? state.documentFormat : undefined;
            inputs["documentType"] = state ? state.documentType : undefined;
            inputs["hash"] = state ? state.hash : undefined;
            inputs["hashType"] = state ? state.hashType : undefined;
            inputs["latestVersion"] = state ? state.latestVersion : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["owner"] = state ? state.owner : undefined;
            inputs["parameters"] = state ? state.parameters : undefined;
            inputs["permissions"] = state ? state.permissions : undefined;
            inputs["platformTypes"] = state ? state.platformTypes : undefined;
            inputs["schemaVersion"] = state ? state.schemaVersion : undefined;
            inputs["status"] = state ? state.status : undefined;
            inputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as DocumentArgs | undefined;
            if (!args || args.content === undefined) {
                throw new Error("Missing required property 'content'");
            }
            if (!args || args.documentType === undefined) {
                throw new Error("Missing required property 'documentType'");
            }
            inputs["content"] = args ? args.content : undefined;
            inputs["documentFormat"] = args ? args.documentFormat : undefined;
            inputs["documentType"] = args ? args.documentType : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["permissions"] = args ? args.permissions : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["createdDate"] = undefined /*out*/;
            inputs["defaultVersion"] = undefined /*out*/;
            inputs["description"] = undefined /*out*/;
            inputs["hash"] = undefined /*out*/;
            inputs["hashType"] = undefined /*out*/;
            inputs["latestVersion"] = undefined /*out*/;
            inputs["owner"] = undefined /*out*/;
            inputs["parameters"] = undefined /*out*/;
            inputs["platformTypes"] = undefined /*out*/;
            inputs["schemaVersion"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
        }
        super("aws:ssm/document:Document", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Document resources.
 */
export interface DocumentState {
    readonly arn?: pulumi.Input<string>;
    readonly content?: pulumi.Input<string>;
    readonly createdDate?: pulumi.Input<string>;
    readonly defaultVersion?: pulumi.Input<string>;
    readonly description?: pulumi.Input<string>;
    readonly documentFormat?: pulumi.Input<string>;
    readonly documentType?: pulumi.Input<string>;
    readonly hash?: pulumi.Input<string>;
    readonly hashType?: pulumi.Input<string>;
    readonly latestVersion?: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly owner?: pulumi.Input<string>;
    readonly parameters?: pulumi.Input<pulumi.Input<{ defaultValue?: pulumi.Input<string>, description?: pulumi.Input<string>, name?: pulumi.Input<string>, type?: pulumi.Input<string> }>[]>;
    readonly permissions?: pulumi.Input<{ accountIds: pulumi.Input<string>, type: pulumi.Input<string> }>;
    readonly platformTypes?: pulumi.Input<pulumi.Input<string>[]>;
    readonly schemaVersion?: pulumi.Input<string>;
    readonly status?: pulumi.Input<string>;
    readonly tags?: pulumi.Input<{[key: string]: any}>;
}

/**
 * The set of arguments for constructing a Document resource.
 */
export interface DocumentArgs {
    readonly content: pulumi.Input<string>;
    readonly documentFormat?: pulumi.Input<string>;
    readonly documentType: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly permissions?: pulumi.Input<{ accountIds: pulumi.Input<string>, type: pulumi.Input<string> }>;
    readonly tags?: pulumi.Input<{[key: string]: any}>;
}
