// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class Budget extends pulumi.CustomResource {
    /**
     * Get an existing Budget resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BudgetState, opts?: pulumi.CustomResourceOptions): Budget {
        return new Budget(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:budgets/budget:Budget';

    /**
     * Returns true if the given object is an instance of Budget.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Budget {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Budget.__pulumiType;
    }

    public readonly accountId!: pulumi.Output<string>;
    public readonly budgetType!: pulumi.Output<string>;
    public readonly costFilters!: pulumi.Output<{[key: string]: string}>;
    public readonly costTypes!: pulumi.Output<outputs.budgets.BudgetCostTypes>;
    public readonly limitAmount!: pulumi.Output<string>;
    public readonly limitUnit!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly namePrefix!: pulumi.Output<string>;
    public readonly notifications!: pulumi.Output<outputs.budgets.BudgetNotification[] | undefined>;
    public readonly timePeriodEnd!: pulumi.Output<string | undefined>;
    public readonly timePeriodStart!: pulumi.Output<string>;
    public readonly timeUnit!: pulumi.Output<string>;

    /**
     * Create a Budget resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BudgetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BudgetArgs | BudgetState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as BudgetState | undefined;
            inputs["accountId"] = state ? state.accountId : undefined;
            inputs["budgetType"] = state ? state.budgetType : undefined;
            inputs["costFilters"] = state ? state.costFilters : undefined;
            inputs["costTypes"] = state ? state.costTypes : undefined;
            inputs["limitAmount"] = state ? state.limitAmount : undefined;
            inputs["limitUnit"] = state ? state.limitUnit : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["namePrefix"] = state ? state.namePrefix : undefined;
            inputs["notifications"] = state ? state.notifications : undefined;
            inputs["timePeriodEnd"] = state ? state.timePeriodEnd : undefined;
            inputs["timePeriodStart"] = state ? state.timePeriodStart : undefined;
            inputs["timeUnit"] = state ? state.timeUnit : undefined;
        } else {
            const args = argsOrState as BudgetArgs | undefined;
            if (!args || args.budgetType === undefined) {
                throw new Error("Missing required property 'budgetType'");
            }
            if (!args || args.limitAmount === undefined) {
                throw new Error("Missing required property 'limitAmount'");
            }
            if (!args || args.limitUnit === undefined) {
                throw new Error("Missing required property 'limitUnit'");
            }
            if (!args || args.timePeriodStart === undefined) {
                throw new Error("Missing required property 'timePeriodStart'");
            }
            if (!args || args.timeUnit === undefined) {
                throw new Error("Missing required property 'timeUnit'");
            }
            inputs["accountId"] = args ? args.accountId : undefined;
            inputs["budgetType"] = args ? args.budgetType : undefined;
            inputs["costFilters"] = args ? args.costFilters : undefined;
            inputs["costTypes"] = args ? args.costTypes : undefined;
            inputs["limitAmount"] = args ? args.limitAmount : undefined;
            inputs["limitUnit"] = args ? args.limitUnit : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["namePrefix"] = args ? args.namePrefix : undefined;
            inputs["notifications"] = args ? args.notifications : undefined;
            inputs["timePeriodEnd"] = args ? args.timePeriodEnd : undefined;
            inputs["timePeriodStart"] = args ? args.timePeriodStart : undefined;
            inputs["timeUnit"] = args ? args.timeUnit : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Budget.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Budget resources.
 */
export interface BudgetState {
    readonly accountId?: pulumi.Input<string>;
    readonly budgetType?: pulumi.Input<string>;
    readonly costFilters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly costTypes?: pulumi.Input<inputs.budgets.BudgetCostTypes>;
    readonly limitAmount?: pulumi.Input<string>;
    readonly limitUnit?: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly namePrefix?: pulumi.Input<string>;
    readonly notifications?: pulumi.Input<pulumi.Input<inputs.budgets.BudgetNotification>[]>;
    readonly timePeriodEnd?: pulumi.Input<string>;
    readonly timePeriodStart?: pulumi.Input<string>;
    readonly timeUnit?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Budget resource.
 */
export interface BudgetArgs {
    readonly accountId?: pulumi.Input<string>;
    readonly budgetType: pulumi.Input<string>;
    readonly costFilters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly costTypes?: pulumi.Input<inputs.budgets.BudgetCostTypes>;
    readonly limitAmount: pulumi.Input<string>;
    readonly limitUnit: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly namePrefix?: pulumi.Input<string>;
    readonly notifications?: pulumi.Input<pulumi.Input<inputs.budgets.BudgetNotification>[]>;
    readonly timePeriodEnd?: pulumi.Input<string>;
    readonly timePeriodStart: pulumi.Input<string>;
    readonly timeUnit: pulumi.Input<string>;
}
