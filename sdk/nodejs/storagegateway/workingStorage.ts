// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class WorkingStorage extends pulumi.CustomResource {
    /**
     * Get an existing WorkingStorage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkingStorageState, opts?: pulumi.CustomResourceOptions): WorkingStorage {
        return new WorkingStorage(name, <any>state, { ...opts, id: id });
    }

    public readonly diskId: pulumi.Output<string>;
    public readonly gatewayArn: pulumi.Output<string>;

    /**
     * Create a WorkingStorage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkingStorageArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkingStorageArgs | WorkingStorageState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: WorkingStorageState = argsOrState as WorkingStorageState | undefined;
            inputs["diskId"] = state ? state.diskId : undefined;
            inputs["gatewayArn"] = state ? state.gatewayArn : undefined;
        } else {
            const args = argsOrState as WorkingStorageArgs | undefined;
            if (!args || args.diskId === undefined) {
                throw new Error("Missing required property 'diskId'");
            }
            if (!args || args.gatewayArn === undefined) {
                throw new Error("Missing required property 'gatewayArn'");
            }
            inputs["diskId"] = args ? args.diskId : undefined;
            inputs["gatewayArn"] = args ? args.gatewayArn : undefined;
        }
        super("aws:storagegateway/workingStorage:WorkingStorage", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WorkingStorage resources.
 */
export interface WorkingStorageState {
    readonly diskId?: pulumi.Input<string>;
    readonly gatewayArn?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WorkingStorage resource.
 */
export interface WorkingStorageArgs {
    readonly diskId: pulumi.Input<string>;
    readonly gatewayArn: pulumi.Input<string>;
}
