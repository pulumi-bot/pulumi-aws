// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getInstance(args: GetInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetInstanceResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("aws:rds/getInstance:getInstance", {
        "dbInstanceIdentifier": args.dbInstanceIdentifier,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstance.
 */
export interface GetInstanceArgs {
    readonly dbInstanceIdentifier: string;
    readonly tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getInstance.
 */
export interface GetInstanceResult {
    readonly address: string;
    readonly allocatedStorage: number;
    readonly autoMinorVersionUpgrade: boolean;
    readonly availabilityZone: string;
    readonly backupRetentionPeriod: number;
    readonly caCertIdentifier: string;
    readonly dbClusterIdentifier: string;
    readonly dbInstanceArn: string;
    readonly dbInstanceClass: string;
    readonly dbInstanceIdentifier: string;
    readonly dbInstancePort: number;
    readonly dbName: string;
    readonly dbParameterGroups: string[];
    readonly dbSecurityGroups: string[];
    readonly dbSubnetGroup: string;
    readonly enabledCloudwatchLogsExports: string[];
    readonly endpoint: string;
    readonly engine: string;
    readonly engineVersion: string;
    readonly hostedZoneId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly iops: number;
    readonly kmsKeyId: string;
    readonly licenseModel: string;
    readonly masterUsername: string;
    readonly monitoringInterval: number;
    readonly monitoringRoleArn: string;
    readonly multiAz: boolean;
    readonly optionGroupMemberships: string[];
    readonly port: number;
    readonly preferredBackupWindow: string;
    readonly preferredMaintenanceWindow: string;
    readonly publiclyAccessible: boolean;
    readonly replicateSourceDb: string;
    readonly resourceId: string;
    readonly storageEncrypted: boolean;
    readonly storageType: string;
    readonly tags: {[key: string]: string};
    readonly timezone: string;
    readonly vpcSecurityGroups: string[];
}
