// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class LayerVersion extends pulumi.CustomResource {
    /**
     * Get an existing LayerVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LayerVersionState, opts?: pulumi.CustomResourceOptions): LayerVersion {
        return new LayerVersion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:lambda/layerVersion:LayerVersion';

    /**
     * Returns true if the given object is an instance of LayerVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LayerVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LayerVersion.__pulumiType;
    }

    public /*out*/ readonly arn!: pulumi.Output<string>;
    public readonly code!: pulumi.Output<pulumi.asset.Archive | undefined>;
    public readonly compatibleRuntimes!: pulumi.Output<string[] | undefined>;
    public /*out*/ readonly createdDate!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public /*out*/ readonly layerArn!: pulumi.Output<string>;
    public readonly layerName!: pulumi.Output<string>;
    public readonly licenseInfo!: pulumi.Output<string | undefined>;
    public readonly s3Bucket!: pulumi.Output<string | undefined>;
    public readonly s3Key!: pulumi.Output<string | undefined>;
    public readonly s3ObjectVersion!: pulumi.Output<string | undefined>;
    public readonly sourceCodeHash!: pulumi.Output<string>;
    public /*out*/ readonly sourceCodeSize!: pulumi.Output<number>;
    public /*out*/ readonly version!: pulumi.Output<string>;

    /**
     * Create a LayerVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LayerVersionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LayerVersionArgs | LayerVersionState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as LayerVersionState | undefined;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["code"] = state ? state.code : undefined;
            inputs["compatibleRuntimes"] = state ? state.compatibleRuntimes : undefined;
            inputs["createdDate"] = state ? state.createdDate : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["layerArn"] = state ? state.layerArn : undefined;
            inputs["layerName"] = state ? state.layerName : undefined;
            inputs["licenseInfo"] = state ? state.licenseInfo : undefined;
            inputs["s3Bucket"] = state ? state.s3Bucket : undefined;
            inputs["s3Key"] = state ? state.s3Key : undefined;
            inputs["s3ObjectVersion"] = state ? state.s3ObjectVersion : undefined;
            inputs["sourceCodeHash"] = state ? state.sourceCodeHash : undefined;
            inputs["sourceCodeSize"] = state ? state.sourceCodeSize : undefined;
            inputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as LayerVersionArgs | undefined;
            if (!args || args.layerName === undefined) {
                throw new Error("Missing required property 'layerName'");
            }
            inputs["code"] = args ? args.code : undefined;
            inputs["compatibleRuntimes"] = args ? args.compatibleRuntimes : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["layerName"] = args ? args.layerName : undefined;
            inputs["licenseInfo"] = args ? args.licenseInfo : undefined;
            inputs["s3Bucket"] = args ? args.s3Bucket : undefined;
            inputs["s3Key"] = args ? args.s3Key : undefined;
            inputs["s3ObjectVersion"] = args ? args.s3ObjectVersion : undefined;
            inputs["sourceCodeHash"] = args ? args.sourceCodeHash : undefined;
            inputs["arn"] = undefined /*out*/;
            inputs["createdDate"] = undefined /*out*/;
            inputs["layerArn"] = undefined /*out*/;
            inputs["sourceCodeSize"] = undefined /*out*/;
            inputs["version"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(LayerVersion.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LayerVersion resources.
 */
export interface LayerVersionState {
    readonly arn?: pulumi.Input<string>;
    readonly code?: pulumi.Input<pulumi.asset.Archive>;
    readonly compatibleRuntimes?: pulumi.Input<pulumi.Input<string>[]>;
    readonly createdDate?: pulumi.Input<string>;
    readonly description?: pulumi.Input<string>;
    readonly layerArn?: pulumi.Input<string>;
    readonly layerName?: pulumi.Input<string>;
    readonly licenseInfo?: pulumi.Input<string>;
    readonly s3Bucket?: pulumi.Input<string>;
    readonly s3Key?: pulumi.Input<string>;
    readonly s3ObjectVersion?: pulumi.Input<string>;
    readonly sourceCodeHash?: pulumi.Input<string>;
    readonly sourceCodeSize?: pulumi.Input<number>;
    readonly version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LayerVersion resource.
 */
export interface LayerVersionArgs {
    readonly code?: pulumi.Input<pulumi.asset.Archive>;
    readonly compatibleRuntimes?: pulumi.Input<pulumi.Input<string>[]>;
    readonly description?: pulumi.Input<string>;
    readonly layerName: pulumi.Input<string>;
    readonly licenseInfo?: pulumi.Input<string>;
    readonly s3Bucket?: pulumi.Input<string>;
    readonly s3Key?: pulumi.Input<string>;
    readonly s3ObjectVersion?: pulumi.Input<string>;
    readonly sourceCodeHash?: pulumi.Input<string>;
}
