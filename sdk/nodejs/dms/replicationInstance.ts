// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class ReplicationInstance extends pulumi.CustomResource {
    /**
     * Get an existing ReplicationInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ReplicationInstanceState, opts?: pulumi.CustomResourceOptions): ReplicationInstance {
        return new ReplicationInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:dms/replicationInstance:ReplicationInstance';

    /**
     * Returns true if the given object is an instance of ReplicationInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ReplicationInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ReplicationInstance.__pulumiType;
    }

    public readonly allocatedStorage!: pulumi.Output<number>;
    public readonly applyImmediately!: pulumi.Output<boolean | undefined>;
    public readonly autoMinorVersionUpgrade!: pulumi.Output<boolean>;
    public readonly availabilityZone!: pulumi.Output<string>;
    public readonly engineVersion!: pulumi.Output<string>;
    public readonly kmsKeyArn!: pulumi.Output<string>;
    public readonly multiAz!: pulumi.Output<boolean>;
    public readonly preferredMaintenanceWindow!: pulumi.Output<string>;
    public readonly publiclyAccessible!: pulumi.Output<boolean>;
    public /*out*/ readonly replicationInstanceArn!: pulumi.Output<string>;
    public readonly replicationInstanceClass!: pulumi.Output<string>;
    public readonly replicationInstanceId!: pulumi.Output<string>;
    public /*out*/ readonly replicationInstancePrivateIps!: pulumi.Output<string[]>;
    public /*out*/ readonly replicationInstancePublicIps!: pulumi.Output<string[]>;
    public readonly replicationSubnetGroupId!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly vpcSecurityGroupIds!: pulumi.Output<string[]>;

    /**
     * Create a ReplicationInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ReplicationInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ReplicationInstanceArgs | ReplicationInstanceState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as ReplicationInstanceState | undefined;
            inputs["allocatedStorage"] = state ? state.allocatedStorage : undefined;
            inputs["applyImmediately"] = state ? state.applyImmediately : undefined;
            inputs["autoMinorVersionUpgrade"] = state ? state.autoMinorVersionUpgrade : undefined;
            inputs["availabilityZone"] = state ? state.availabilityZone : undefined;
            inputs["engineVersion"] = state ? state.engineVersion : undefined;
            inputs["kmsKeyArn"] = state ? state.kmsKeyArn : undefined;
            inputs["multiAz"] = state ? state.multiAz : undefined;
            inputs["preferredMaintenanceWindow"] = state ? state.preferredMaintenanceWindow : undefined;
            inputs["publiclyAccessible"] = state ? state.publiclyAccessible : undefined;
            inputs["replicationInstanceArn"] = state ? state.replicationInstanceArn : undefined;
            inputs["replicationInstanceClass"] = state ? state.replicationInstanceClass : undefined;
            inputs["replicationInstanceId"] = state ? state.replicationInstanceId : undefined;
            inputs["replicationInstancePrivateIps"] = state ? state.replicationInstancePrivateIps : undefined;
            inputs["replicationInstancePublicIps"] = state ? state.replicationInstancePublicIps : undefined;
            inputs["replicationSubnetGroupId"] = state ? state.replicationSubnetGroupId : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["vpcSecurityGroupIds"] = state ? state.vpcSecurityGroupIds : undefined;
        } else {
            const args = argsOrState as ReplicationInstanceArgs | undefined;
            if (!args || args.replicationInstanceClass === undefined) {
                throw new Error("Missing required property 'replicationInstanceClass'");
            }
            if (!args || args.replicationInstanceId === undefined) {
                throw new Error("Missing required property 'replicationInstanceId'");
            }
            inputs["allocatedStorage"] = args ? args.allocatedStorage : undefined;
            inputs["applyImmediately"] = args ? args.applyImmediately : undefined;
            inputs["autoMinorVersionUpgrade"] = args ? args.autoMinorVersionUpgrade : undefined;
            inputs["availabilityZone"] = args ? args.availabilityZone : undefined;
            inputs["engineVersion"] = args ? args.engineVersion : undefined;
            inputs["kmsKeyArn"] = args ? args.kmsKeyArn : undefined;
            inputs["multiAz"] = args ? args.multiAz : undefined;
            inputs["preferredMaintenanceWindow"] = args ? args.preferredMaintenanceWindow : undefined;
            inputs["publiclyAccessible"] = args ? args.publiclyAccessible : undefined;
            inputs["replicationInstanceClass"] = args ? args.replicationInstanceClass : undefined;
            inputs["replicationInstanceId"] = args ? args.replicationInstanceId : undefined;
            inputs["replicationSubnetGroupId"] = args ? args.replicationSubnetGroupId : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["vpcSecurityGroupIds"] = args ? args.vpcSecurityGroupIds : undefined;
            inputs["replicationInstanceArn"] = undefined /*out*/;
            inputs["replicationInstancePrivateIps"] = undefined /*out*/;
            inputs["replicationInstancePublicIps"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(ReplicationInstance.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ReplicationInstance resources.
 */
export interface ReplicationInstanceState {
    readonly allocatedStorage?: pulumi.Input<number>;
    readonly applyImmediately?: pulumi.Input<boolean>;
    readonly autoMinorVersionUpgrade?: pulumi.Input<boolean>;
    readonly availabilityZone?: pulumi.Input<string>;
    readonly engineVersion?: pulumi.Input<string>;
    readonly kmsKeyArn?: pulumi.Input<string>;
    readonly multiAz?: pulumi.Input<boolean>;
    readonly preferredMaintenanceWindow?: pulumi.Input<string>;
    readonly publiclyAccessible?: pulumi.Input<boolean>;
    readonly replicationInstanceArn?: pulumi.Input<string>;
    readonly replicationInstanceClass?: pulumi.Input<string>;
    readonly replicationInstanceId?: pulumi.Input<string>;
    readonly replicationInstancePrivateIps?: pulumi.Input<pulumi.Input<string>[]>;
    readonly replicationInstancePublicIps?: pulumi.Input<pulumi.Input<string>[]>;
    readonly replicationSubnetGroupId?: pulumi.Input<string>;
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly vpcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ReplicationInstance resource.
 */
export interface ReplicationInstanceArgs {
    readonly allocatedStorage?: pulumi.Input<number>;
    readonly applyImmediately?: pulumi.Input<boolean>;
    readonly autoMinorVersionUpgrade?: pulumi.Input<boolean>;
    readonly availabilityZone?: pulumi.Input<string>;
    readonly engineVersion?: pulumi.Input<string>;
    readonly kmsKeyArn?: pulumi.Input<string>;
    readonly multiAz?: pulumi.Input<boolean>;
    readonly preferredMaintenanceWindow?: pulumi.Input<string>;
    readonly publiclyAccessible?: pulumi.Input<boolean>;
    readonly replicationInstanceClass: pulumi.Input<string>;
    readonly replicationInstanceId: pulumi.Input<string>;
    readonly replicationSubnetGroupId?: pulumi.Input<string>;
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly vpcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
}
