// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterState, opts?: pulumi.CustomResourceOptions): Cluster {
        return new Cluster(name, <any>state, { ...opts, id: id });
    }

    public readonly additionalInfo: pulumi.Output<string | undefined>;
    public readonly applications: pulumi.Output<string[] | undefined>;
    public readonly autoscalingRole: pulumi.Output<string | undefined>;
    public readonly bootstrapActions: pulumi.Output<{ args?: string[], name: string, path: string }[] | undefined>;
    public /*out*/ readonly clusterState: pulumi.Output<string>;
    public readonly configurations: pulumi.Output<string | undefined>;
    public readonly configurationsJson: pulumi.Output<string | undefined>;
    public readonly coreInstanceCount: pulumi.Output<number | undefined>;
    public readonly coreInstanceType: pulumi.Output<string>;
    public readonly customAmiId: pulumi.Output<string | undefined>;
    public readonly ebsRootVolumeSize: pulumi.Output<number | undefined>;
    public readonly ec2Attributes: pulumi.Output<{ additionalMasterSecurityGroups?: string, additionalSlaveSecurityGroups?: string, emrManagedMasterSecurityGroup?: string, emrManagedSlaveSecurityGroup?: string, instanceProfile: string, keyName?: string, serviceAccessSecurityGroup?: string, subnetId?: string } | undefined>;
    public readonly instanceGroups: pulumi.Output<{ autoscalingPolicy?: string, bidPrice?: string, ebsConfigs?: { iops?: number, size: number, type: string, volumesPerInstance?: number }[], instanceCount?: number, instanceRole: string, instanceType: string, name?: string }[] | undefined>;
    public readonly keepJobFlowAliveWhenNoSteps: pulumi.Output<boolean>;
    public readonly kerberosAttributes: pulumi.Output<{ adDomainJoinPassword?: string, adDomainJoinUser?: string, crossRealmTrustPrincipalPassword?: string, kdcAdminPassword: string, realm: string } | undefined>;
    public readonly logUri: pulumi.Output<string | undefined>;
    public readonly masterInstanceType: pulumi.Output<string | undefined>;
    public /*out*/ readonly masterPublicDns: pulumi.Output<string>;
    public readonly name: pulumi.Output<string>;
    public readonly releaseLabel: pulumi.Output<string>;
    public readonly scaleDownBehavior: pulumi.Output<string>;
    public readonly securityConfiguration: pulumi.Output<string | undefined>;
    public readonly serviceRole: pulumi.Output<string>;
    public readonly steps: pulumi.Output<{ actionOnFailure: string, hadoopJarStep: { args?: string[], jar: string, mainClass?: string, properties?: {[key: string]: any} }, name: string }[]>;
    public readonly tags: pulumi.Output<{[key: string]: any} | undefined>;
    public readonly terminationProtection: pulumi.Output<boolean>;
    public readonly visibleToAllUsers: pulumi.Output<boolean | undefined>;

    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterArgs | ClusterState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: ClusterState = argsOrState as ClusterState | undefined;
            inputs["additionalInfo"] = state ? state.additionalInfo : undefined;
            inputs["applications"] = state ? state.applications : undefined;
            inputs["autoscalingRole"] = state ? state.autoscalingRole : undefined;
            inputs["bootstrapActions"] = state ? state.bootstrapActions : undefined;
            inputs["clusterState"] = state ? state.clusterState : undefined;
            inputs["configurations"] = state ? state.configurations : undefined;
            inputs["configurationsJson"] = state ? state.configurationsJson : undefined;
            inputs["coreInstanceCount"] = state ? state.coreInstanceCount : undefined;
            inputs["coreInstanceType"] = state ? state.coreInstanceType : undefined;
            inputs["customAmiId"] = state ? state.customAmiId : undefined;
            inputs["ebsRootVolumeSize"] = state ? state.ebsRootVolumeSize : undefined;
            inputs["ec2Attributes"] = state ? state.ec2Attributes : undefined;
            inputs["instanceGroups"] = state ? state.instanceGroups : undefined;
            inputs["keepJobFlowAliveWhenNoSteps"] = state ? state.keepJobFlowAliveWhenNoSteps : undefined;
            inputs["kerberosAttributes"] = state ? state.kerberosAttributes : undefined;
            inputs["logUri"] = state ? state.logUri : undefined;
            inputs["masterInstanceType"] = state ? state.masterInstanceType : undefined;
            inputs["masterPublicDns"] = state ? state.masterPublicDns : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["releaseLabel"] = state ? state.releaseLabel : undefined;
            inputs["scaleDownBehavior"] = state ? state.scaleDownBehavior : undefined;
            inputs["securityConfiguration"] = state ? state.securityConfiguration : undefined;
            inputs["serviceRole"] = state ? state.serviceRole : undefined;
            inputs["steps"] = state ? state.steps : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["terminationProtection"] = state ? state.terminationProtection : undefined;
            inputs["visibleToAllUsers"] = state ? state.visibleToAllUsers : undefined;
        } else {
            const args = argsOrState as ClusterArgs | undefined;
            if (!args || args.releaseLabel === undefined) {
                throw new Error("Missing required property 'releaseLabel'");
            }
            if (!args || args.serviceRole === undefined) {
                throw new Error("Missing required property 'serviceRole'");
            }
            inputs["additionalInfo"] = args ? args.additionalInfo : undefined;
            inputs["applications"] = args ? args.applications : undefined;
            inputs["autoscalingRole"] = args ? args.autoscalingRole : undefined;
            inputs["bootstrapActions"] = args ? args.bootstrapActions : undefined;
            inputs["configurations"] = args ? args.configurations : undefined;
            inputs["configurationsJson"] = args ? args.configurationsJson : undefined;
            inputs["coreInstanceCount"] = args ? args.coreInstanceCount : undefined;
            inputs["coreInstanceType"] = args ? args.coreInstanceType : undefined;
            inputs["customAmiId"] = args ? args.customAmiId : undefined;
            inputs["ebsRootVolumeSize"] = args ? args.ebsRootVolumeSize : undefined;
            inputs["ec2Attributes"] = args ? args.ec2Attributes : undefined;
            inputs["instanceGroups"] = args ? args.instanceGroups : undefined;
            inputs["keepJobFlowAliveWhenNoSteps"] = args ? args.keepJobFlowAliveWhenNoSteps : undefined;
            inputs["kerberosAttributes"] = args ? args.kerberosAttributes : undefined;
            inputs["logUri"] = args ? args.logUri : undefined;
            inputs["masterInstanceType"] = args ? args.masterInstanceType : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["releaseLabel"] = args ? args.releaseLabel : undefined;
            inputs["scaleDownBehavior"] = args ? args.scaleDownBehavior : undefined;
            inputs["securityConfiguration"] = args ? args.securityConfiguration : undefined;
            inputs["serviceRole"] = args ? args.serviceRole : undefined;
            inputs["steps"] = args ? args.steps : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["terminationProtection"] = args ? args.terminationProtection : undefined;
            inputs["visibleToAllUsers"] = args ? args.visibleToAllUsers : undefined;
            inputs["clusterState"] = undefined /*out*/;
            inputs["masterPublicDns"] = undefined /*out*/;
        }
        super("aws:emr/cluster:Cluster", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Cluster resources.
 */
export interface ClusterState {
    readonly additionalInfo?: pulumi.Input<string>;
    readonly applications?: pulumi.Input<pulumi.Input<string>[]>;
    readonly autoscalingRole?: pulumi.Input<string>;
    readonly bootstrapActions?: pulumi.Input<pulumi.Input<{ args?: pulumi.Input<pulumi.Input<string>[]>, name: pulumi.Input<string>, path: pulumi.Input<string> }>[]>;
    readonly clusterState?: pulumi.Input<string>;
    readonly configurations?: pulumi.Input<string>;
    readonly configurationsJson?: pulumi.Input<string>;
    readonly coreInstanceCount?: pulumi.Input<number>;
    readonly coreInstanceType?: pulumi.Input<string>;
    readonly customAmiId?: pulumi.Input<string>;
    readonly ebsRootVolumeSize?: pulumi.Input<number>;
    readonly ec2Attributes?: pulumi.Input<{ additionalMasterSecurityGroups?: pulumi.Input<string>, additionalSlaveSecurityGroups?: pulumi.Input<string>, emrManagedMasterSecurityGroup?: pulumi.Input<string>, emrManagedSlaveSecurityGroup?: pulumi.Input<string>, instanceProfile: pulumi.Input<string>, keyName?: pulumi.Input<string>, serviceAccessSecurityGroup?: pulumi.Input<string>, subnetId?: pulumi.Input<string> }>;
    readonly instanceGroups?: pulumi.Input<pulumi.Input<{ autoscalingPolicy?: pulumi.Input<string>, bidPrice?: pulumi.Input<string>, ebsConfigs?: pulumi.Input<pulumi.Input<{ iops?: pulumi.Input<number>, size: pulumi.Input<number>, type: pulumi.Input<string>, volumesPerInstance?: pulumi.Input<number> }>[]>, instanceCount?: pulumi.Input<number>, instanceRole: pulumi.Input<string>, instanceType: pulumi.Input<string>, name?: pulumi.Input<string> }>[]>;
    readonly keepJobFlowAliveWhenNoSteps?: pulumi.Input<boolean>;
    readonly kerberosAttributes?: pulumi.Input<{ adDomainJoinPassword?: pulumi.Input<string>, adDomainJoinUser?: pulumi.Input<string>, crossRealmTrustPrincipalPassword?: pulumi.Input<string>, kdcAdminPassword: pulumi.Input<string>, realm: pulumi.Input<string> }>;
    readonly logUri?: pulumi.Input<string>;
    readonly masterInstanceType?: pulumi.Input<string>;
    readonly masterPublicDns?: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly releaseLabel?: pulumi.Input<string>;
    readonly scaleDownBehavior?: pulumi.Input<string>;
    readonly securityConfiguration?: pulumi.Input<string>;
    readonly serviceRole?: pulumi.Input<string>;
    readonly steps?: pulumi.Input<pulumi.Input<{ actionOnFailure: pulumi.Input<string>, hadoopJarStep: pulumi.Input<{ args?: pulumi.Input<pulumi.Input<string>[]>, jar: pulumi.Input<string>, mainClass?: pulumi.Input<string>, properties?: pulumi.Input<{[key: string]: any}> }>, name: pulumi.Input<string> }>[]>;
    readonly tags?: pulumi.Input<{[key: string]: any}>;
    readonly terminationProtection?: pulumi.Input<boolean>;
    readonly visibleToAllUsers?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    readonly additionalInfo?: pulumi.Input<string>;
    readonly applications?: pulumi.Input<pulumi.Input<string>[]>;
    readonly autoscalingRole?: pulumi.Input<string>;
    readonly bootstrapActions?: pulumi.Input<pulumi.Input<{ args?: pulumi.Input<pulumi.Input<string>[]>, name: pulumi.Input<string>, path: pulumi.Input<string> }>[]>;
    readonly configurations?: pulumi.Input<string>;
    readonly configurationsJson?: pulumi.Input<string>;
    readonly coreInstanceCount?: pulumi.Input<number>;
    readonly coreInstanceType?: pulumi.Input<string>;
    readonly customAmiId?: pulumi.Input<string>;
    readonly ebsRootVolumeSize?: pulumi.Input<number>;
    readonly ec2Attributes?: pulumi.Input<{ additionalMasterSecurityGroups?: pulumi.Input<string>, additionalSlaveSecurityGroups?: pulumi.Input<string>, emrManagedMasterSecurityGroup?: pulumi.Input<string>, emrManagedSlaveSecurityGroup?: pulumi.Input<string>, instanceProfile: pulumi.Input<string>, keyName?: pulumi.Input<string>, serviceAccessSecurityGroup?: pulumi.Input<string>, subnetId?: pulumi.Input<string> }>;
    readonly instanceGroups?: pulumi.Input<pulumi.Input<{ autoscalingPolicy?: pulumi.Input<string>, bidPrice?: pulumi.Input<string>, ebsConfigs?: pulumi.Input<pulumi.Input<{ iops?: pulumi.Input<number>, size: pulumi.Input<number>, type: pulumi.Input<string>, volumesPerInstance?: pulumi.Input<number> }>[]>, instanceCount?: pulumi.Input<number>, instanceRole: pulumi.Input<string>, instanceType: pulumi.Input<string>, name?: pulumi.Input<string> }>[]>;
    readonly keepJobFlowAliveWhenNoSteps?: pulumi.Input<boolean>;
    readonly kerberosAttributes?: pulumi.Input<{ adDomainJoinPassword?: pulumi.Input<string>, adDomainJoinUser?: pulumi.Input<string>, crossRealmTrustPrincipalPassword?: pulumi.Input<string>, kdcAdminPassword: pulumi.Input<string>, realm: pulumi.Input<string> }>;
    readonly logUri?: pulumi.Input<string>;
    readonly masterInstanceType?: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly releaseLabel: pulumi.Input<string>;
    readonly scaleDownBehavior?: pulumi.Input<string>;
    readonly securityConfiguration?: pulumi.Input<string>;
    readonly serviceRole: pulumi.Input<string>;
    readonly steps?: pulumi.Input<pulumi.Input<{ actionOnFailure: pulumi.Input<string>, hadoopJarStep: pulumi.Input<{ args?: pulumi.Input<pulumi.Input<string>[]>, jar: pulumi.Input<string>, mainClass?: pulumi.Input<string>, properties?: pulumi.Input<{[key: string]: any}> }>, name: pulumi.Input<string> }>[]>;
    readonly tags?: pulumi.Input<{[key: string]: any}>;
    readonly terminationProtection?: pulumi.Input<boolean>;
    readonly visibleToAllUsers?: pulumi.Input<boolean>;
}
