// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class PublicVirtualInterface extends pulumi.CustomResource {
    /**
     * Get an existing PublicVirtualInterface resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PublicVirtualInterfaceState, opts?: pulumi.CustomResourceOptions): PublicVirtualInterface {
        return new PublicVirtualInterface(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aws:directconnect/publicVirtualInterface:PublicVirtualInterface';

    /**
     * Returns true if the given object is an instance of PublicVirtualInterface.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PublicVirtualInterface {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PublicVirtualInterface.__pulumiType;
    }

    public readonly addressFamily!: pulumi.Output<string>;
    public readonly amazonAddress!: pulumi.Output<string>;
    public /*out*/ readonly amazonSideAsn!: pulumi.Output<string>;
    public /*out*/ readonly arn!: pulumi.Output<string>;
    public /*out*/ readonly awsDevice!: pulumi.Output<string>;
    public readonly bgpAsn!: pulumi.Output<number>;
    public readonly bgpAuthKey!: pulumi.Output<string>;
    public readonly connectionId!: pulumi.Output<string>;
    public readonly customerAddress!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly routeFilterPrefixes!: pulumi.Output<string[]>;
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly vlan!: pulumi.Output<number>;

    /**
     * Create a PublicVirtualInterface resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PublicVirtualInterfaceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PublicVirtualInterfaceArgs | PublicVirtualInterfaceState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as PublicVirtualInterfaceState | undefined;
            inputs["addressFamily"] = state ? state.addressFamily : undefined;
            inputs["amazonAddress"] = state ? state.amazonAddress : undefined;
            inputs["amazonSideAsn"] = state ? state.amazonSideAsn : undefined;
            inputs["arn"] = state ? state.arn : undefined;
            inputs["awsDevice"] = state ? state.awsDevice : undefined;
            inputs["bgpAsn"] = state ? state.bgpAsn : undefined;
            inputs["bgpAuthKey"] = state ? state.bgpAuthKey : undefined;
            inputs["connectionId"] = state ? state.connectionId : undefined;
            inputs["customerAddress"] = state ? state.customerAddress : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["routeFilterPrefixes"] = state ? state.routeFilterPrefixes : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["vlan"] = state ? state.vlan : undefined;
        } else {
            const args = argsOrState as PublicVirtualInterfaceArgs | undefined;
            if (!args || args.addressFamily === undefined) {
                throw new Error("Missing required property 'addressFamily'");
            }
            if (!args || args.bgpAsn === undefined) {
                throw new Error("Missing required property 'bgpAsn'");
            }
            if (!args || args.connectionId === undefined) {
                throw new Error("Missing required property 'connectionId'");
            }
            if (!args || args.routeFilterPrefixes === undefined) {
                throw new Error("Missing required property 'routeFilterPrefixes'");
            }
            if (!args || args.vlan === undefined) {
                throw new Error("Missing required property 'vlan'");
            }
            inputs["addressFamily"] = args ? args.addressFamily : undefined;
            inputs["amazonAddress"] = args ? args.amazonAddress : undefined;
            inputs["bgpAsn"] = args ? args.bgpAsn : undefined;
            inputs["bgpAuthKey"] = args ? args.bgpAuthKey : undefined;
            inputs["connectionId"] = args ? args.connectionId : undefined;
            inputs["customerAddress"] = args ? args.customerAddress : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["routeFilterPrefixes"] = args ? args.routeFilterPrefixes : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["vlan"] = args ? args.vlan : undefined;
            inputs["amazonSideAsn"] = undefined /*out*/;
            inputs["arn"] = undefined /*out*/;
            inputs["awsDevice"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(PublicVirtualInterface.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PublicVirtualInterface resources.
 */
export interface PublicVirtualInterfaceState {
    readonly addressFamily?: pulumi.Input<string>;
    readonly amazonAddress?: pulumi.Input<string>;
    readonly amazonSideAsn?: pulumi.Input<string>;
    readonly arn?: pulumi.Input<string>;
    readonly awsDevice?: pulumi.Input<string>;
    readonly bgpAsn?: pulumi.Input<number>;
    readonly bgpAuthKey?: pulumi.Input<string>;
    readonly connectionId?: pulumi.Input<string>;
    readonly customerAddress?: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly routeFilterPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly vlan?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a PublicVirtualInterface resource.
 */
export interface PublicVirtualInterfaceArgs {
    readonly addressFamily: pulumi.Input<string>;
    readonly amazonAddress?: pulumi.Input<string>;
    readonly bgpAsn: pulumi.Input<number>;
    readonly bgpAuthKey?: pulumi.Input<string>;
    readonly connectionId: pulumi.Input<string>;
    readonly customerAddress?: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly routeFilterPrefixes: pulumi.Input<pulumi.Input<string>[]>;
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly vlan: pulumi.Input<number>;
}
