// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getCertificateAuthority(args: GetCertificateAuthorityArgs, opts?: pulumi.InvokeOptions): Promise<GetCertificateAuthorityResult> {
    return pulumi.runtime.invoke("aws:acmpca/getCertificateAuthority:getCertificateAuthority", {
        "arn": args.arn,
        "revocationConfigurations": args.revocationConfigurations,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getCertificateAuthority.
 */
export interface GetCertificateAuthorityArgs {
    readonly arn: string;
    readonly revocationConfigurations?: { crlConfigurations?: { customCname?: string, enabled?: boolean, expirationInDays?: number, s3BucketName?: string }[] }[];
    readonly tags?: {[key: string]: any};
}

/**
 * A collection of values returned by getCertificateAuthority.
 */
export interface GetCertificateAuthorityResult {
    readonly certificate: string;
    readonly certificateChain: string;
    readonly certificateSigningRequest: string;
    readonly notAfter: string;
    readonly notBefore: string;
    readonly revocationConfigurations: { crlConfigurations: { customCname: string, enabled: boolean, expirationInDays: number, s3BucketName: string }[] }[];
    readonly serial: string;
    readonly status: string;
    readonly tags: {[key: string]: any};
    readonly type: string;
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
